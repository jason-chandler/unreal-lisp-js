/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
__webpack_require__(16);
// initialize-vars
let G_3;
let TMP_2;
// toplevel defun
// initialize symbols
G_3 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
TMP_2=lisp.callFunctionWithCallStack(G_3);
}catch(TMP_1){G_3.func();
console.log(TMP_1.message);
}


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values1", function() { return _values__WEBPACK_IMPORTED_MODULE_0__["values1"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "values", function() { return _values__WEBPACK_IMPORTED_MODULE_0__["values"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_values", function() { return _values__WEBPACK_IMPORTED_MODULE_0__["CL_values"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "currentValues", function() { return _values__WEBPACK_IMPORTED_MODULE_0__["currentValues"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "restoreValues", function() { return _values__WEBPACK_IMPORTED_MODULE_0__["restoreValues"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_multipleValueCall", function() { return _values__WEBPACK_IMPORTED_MODULE_0__["CL_multipleValueCall"]; });

/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "argumentsError", function() { return _error__WEBPACK_IMPORTED_MODULE_2__["argumentsError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "typeError", function() { return _error__WEBPACK_IMPORTED_MODULE_2__["typeError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "checkString", function() { return _error__WEBPACK_IMPORTED_MODULE_2__["checkString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "simpleError", function() { return _error__WEBPACK_IMPORTED_MODULE_2__["simpleError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "programError", function() { return _error__WEBPACK_IMPORTED_MODULE_2__["programError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "undefinedFunction", function() { return _error__WEBPACK_IMPORTED_MODULE_2__["undefinedFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unboundVariable", function() { return _error__WEBPACK_IMPORTED_MODULE_2__["unboundVariable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "S_t", function() { return _header__WEBPACK_IMPORTED_MODULE_1__["S_t"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "S_nil", function() { return _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]; });

/* harmony import */ var _callstack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "raise", function() { return _callstack__WEBPACK_IMPORTED_MODULE_3__["raise"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setLispFormatFunction", function() { return _callstack__WEBPACK_IMPORTED_MODULE_3__["setLispFormatFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getBacktrace", function() { return _callstack__WEBPACK_IMPORTED_MODULE_3__["getBacktrace"]; });

/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isSymbol", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["isSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeSymbol", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["makeSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolName", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["symbolName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "symbolValue", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["symbolValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSymbolValue", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["setSymbolValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setSymbolFunction", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["setSymbolFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_symbolp", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_makeSymbol", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_makeSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_symbolPlist", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolPlist"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_setSymbolPlist", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_setSymbolPlist"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_put", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_put"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_boundp", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_boundp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_fboundp", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_fboundp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_symbolPackage", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolPackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_symbolValue", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_symbolFunction", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_setSymbolFunction", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_setSymbolFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_symbolName", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_set", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_set"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_makunbound", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_makunbound"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_fmakunbound", function() { return _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_fmakunbound"]; });

/* harmony import */ var _package__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findPackage", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["findPackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defpackage", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["defpackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ensurePackage", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["ensurePackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intern", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["intern"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "changeCurrentPackage", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["changeCurrentPackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cl_package", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["cl_package"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "system_package", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["system_package"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ffi_package", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["ffi_package"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keyword_package", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["keyword_package"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cl_user_package", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["cl_user_package"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_packagep", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_packagep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_packageName", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_packageName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_packageNicknames", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_packageNicknames"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_listAllPackages", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_listAllPackages"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_intern", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_intern"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_findSymbol", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_findSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_makePackage", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_makePackage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_export", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_export"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_mapPackageSymbols", function() { return _package__WEBPACK_IMPORTED_MODULE_5__["CL_mapPackageSymbols"]; });

/* harmony import */ var _ffi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_instanceof", function() { return _ffi__WEBPACK_IMPORTED_MODULE_6__["CL_instanceof"]; });

/* harmony import */ var _structure__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(10);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_makeStructure", function() { return _structure__WEBPACK_IMPORTED_MODULE_7__["CL_makeStructure"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_copyStructure", function() { return _structure__WEBPACK_IMPORTED_MODULE_7__["CL_copyStructure"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_structurep", function() { return _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structurep"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_structureName", function() { return _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structureName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_structureSlotCount", function() { return _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structureSlotCount"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_structureRef", function() { return _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structureRef"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_structureSet", function() { return _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structureSet"]; });

/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(11);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_numberp", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_numberp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_integerp", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_integerp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_add", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_add"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_sub", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_sub"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_negate", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_negate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_mul", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_mul"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_floor", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_floor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_rem", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_rem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_numberEqual", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_numberEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_numberNotEqual", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_numberNotEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_greaterThan", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_greaterThan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_lessThan", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_lessThan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_greaterEqual", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_greaterEqual"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_lessEqual", function() { return _number__WEBPACK_IMPORTED_MODULE_8__["CL_lessEqual"]; });

/* harmony import */ var _function__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(12);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "callFunction", function() { return _function__WEBPACK_IMPORTED_MODULE_9__["callFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "startProfile", function() { return _function__WEBPACK_IMPORTED_MODULE_9__["startProfile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "finishProfile", function() { return _function__WEBPACK_IMPORTED_MODULE_9__["finishProfile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "callFunctionWithCallStack", function() { return _function__WEBPACK_IMPORTED_MODULE_9__["callFunctionWithCallStack"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_apply", function() { return _function__WEBPACK_IMPORTED_MODULE_9__["CL_apply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_funcall", function() { return _function__WEBPACK_IMPORTED_MODULE_9__["CL_funcall"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_functionp", function() { return _function__WEBPACK_IMPORTED_MODULE_9__["CL_functionp"]; });

/* harmony import */ var _cons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(7);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCons", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["isCons"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeCons", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["makeCons"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rplaca", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["rplaca"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rplacd", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["rplacd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "jsArrayToList", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["jsArrayToList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "listToJsArray", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["listToJsArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_consp", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["CL_consp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_cons", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["CL_cons"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_car", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["CL_car"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_cdr", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["CL_cdr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_rplaca", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["CL_rplaca"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_rplacd", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["CL_rplacd"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_jsArrayToList", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["CL_jsArrayToList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_listToJsArray", function() { return _cons__WEBPACK_IMPORTED_MODULE_10__["CL_listToJsArray"]; });

/* harmony import */ var _control__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(13);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_eq", function() { return _control__WEBPACK_IMPORTED_MODULE_11__["CL_eq"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_error", function() { return _control__WEBPACK_IMPORTED_MODULE_11__["CL_error"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlockValue", function() { return _control__WEBPACK_IMPORTED_MODULE_11__["BlockValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TagValue", function() { return _control__WEBPACK_IMPORTED_MODULE_11__["TagValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CatchValue", function() { return _control__WEBPACK_IMPORTED_MODULE_11__["CatchValue"]; });

/* harmony import */ var _character__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(14);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCharacter", function() { return _character__WEBPACK_IMPORTED_MODULE_12__["isCharacter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeCharacter", function() { return _character__WEBPACK_IMPORTED_MODULE_12__["makeCharacter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_characterp", function() { return _character__WEBPACK_IMPORTED_MODULE_12__["CL_characterp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_codeChar", function() { return _character__WEBPACK_IMPORTED_MODULE_12__["CL_codeChar"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CL_charCode", function() { return _character__WEBPACK_IMPORTED_MODULE_12__["CL_charCode"]; });

/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(15);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "codeArrayToString", function() { return _util__WEBPACK_IMPORTED_MODULE_13__["codeArrayToString"]; });










































function symbols() {
    let obj = {}
    const names = [
        "PACKAGE",
        "SYMBOL",
        "STRING",
        "FUNCTION",
        "TYPE-ERROR",
        "ARGUMENTS-ERROR",
        "SIMPLE-ERROR",
        "SIMPLE-MAKE-STRING",
        "UNDEFINED-FUNCTION",
        "UNBOUND-VARIABLE",
        "PROGRAM-ERROR",
        "*PACKAGE*",
    ];
    for (let name of names) {
        obj[name] = Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])(name, _package__WEBPACK_IMPORTED_MODULE_5__["cl_package"]);
    }
    return obj;
}

Object(_header__WEBPACK_IMPORTED_MODULE_1__["initSymbols"])(Object.assign({
    t: Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])('T', _package__WEBPACK_IMPORTED_MODULE_5__["cl_package"]),
    nil: Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])('NIL', _package__WEBPACK_IMPORTED_MODULE_5__["cl_package"]),
}, symbols()));

Object(_symbol__WEBPACK_IMPORTED_MODULE_4__["setSymbolValue"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_current_package"], _package__WEBPACK_IMPORTED_MODULE_5__["cl_user_package"]);

function registerFunction(pkg, name, fn, min = 0, max = min) {
    if (min === null || (min === 0 && max === null)) {
        Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])(name, pkg).func = function() {
            return fn(...arguments);
        }
    } else if (min === max) {
        Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])(name, pkg).func = function() {
            if (arguments.length !== min) Object(_error__WEBPACK_IMPORTED_MODULE_2__["argumentsError"])(Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])(name), arguments.length);
            return fn(...arguments);
        }
    } else if (!max) {
        Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])(name, pkg).func = function() {
            if (arguments.length < min) {
                Object(_error__WEBPACK_IMPORTED_MODULE_2__["argumentsError"])(Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])(name), arguments.length);
            }
            return fn(...arguments);
        }
    } else {
        Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])(name, pkg).func = function() {
            if (arguments.length < min || max < arguments.length) {
                Object(_error__WEBPACK_IMPORTED_MODULE_2__["argumentsError"])(Object(_package__WEBPACK_IMPORTED_MODULE_5__["intern"])(name), arguments.length);
            }
            return fn(...arguments);
        }
    }
}

// symbol.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'SYMBOLP', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolp"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'MAKE-SYMBOL', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_makeSymbol"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'SYMBOL-PLIST', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolPlist"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'PUT-SYMBOL-PLIST', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_setSymbolPlist"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'BOUNDP', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_boundp"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'FBOUNDP', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_fboundp"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'SYMBOL-VALUE', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolValue"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'SYMBOL-FUNCTION', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolFunction"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%SET', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_set"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'MAKUNBOUND', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_makunbound"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'FMAKUNBOUND', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_fmakunbound"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'SYMBOL-NAME', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolName"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'SYMBOL-PACKAGE-NAME', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_symbolPackage"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'FSET', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_setSymbolFunction"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'MAP-PACKAGE-SYMBOLS', _package__WEBPACK_IMPORTED_MODULE_5__["CL_mapPackageSymbols"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'PUT', _symbol__WEBPACK_IMPORTED_MODULE_4__["CL_put"], 3);

// package.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'PACKAGEP', _package__WEBPACK_IMPORTED_MODULE_5__["CL_packagep"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'PACKAGE-NAME', _package__WEBPACK_IMPORTED_MODULE_5__["CL_packageName"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'PACKAGE-NICKNAMES', _package__WEBPACK_IMPORTED_MODULE_5__["CL_packageNicknames"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'LIST-ALL-PACKAGES', _package__WEBPACK_IMPORTED_MODULE_5__["CL_listAllPackages"], 0);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'INTERN', _package__WEBPACK_IMPORTED_MODULE_5__["CL_intern"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'FIND-SYMBOL', _package__WEBPACK_IMPORTED_MODULE_5__["CL_findSymbol"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'MAKE-PACKAGE', _package__WEBPACK_IMPORTED_MODULE_5__["CL_makePackage"], 3);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'EXPORT', _package__WEBPACK_IMPORTED_MODULE_5__["CL_export"], 1, 2);

// number.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'NUMBERP', _number__WEBPACK_IMPORTED_MODULE_8__["CL_numberp"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'INTEGERP', _number__WEBPACK_IMPORTED_MODULE_8__["CL_integerp"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%ADD', _number__WEBPACK_IMPORTED_MODULE_8__["CL_add"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%SUB', _number__WEBPACK_IMPORTED_MODULE_8__["CL_sub"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%NEGATE', _number__WEBPACK_IMPORTED_MODULE_8__["CL_negate"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%MUL', _number__WEBPACK_IMPORTED_MODULE_8__["CL_mul"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%REM', _number__WEBPACK_IMPORTED_MODULE_8__["CL_rem"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%=', _number__WEBPACK_IMPORTED_MODULE_8__["CL_numberEqual"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%/=', _number__WEBPACK_IMPORTED_MODULE_8__["CL_numberNotEqual"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%>', _number__WEBPACK_IMPORTED_MODULE_8__["CL_greaterThan"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%<', _number__WEBPACK_IMPORTED_MODULE_8__["CL_lessThan"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%>=', _number__WEBPACK_IMPORTED_MODULE_8__["CL_greaterEqual"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%<=', _number__WEBPACK_IMPORTED_MODULE_8__["CL_lessEqual"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%FLOOR', _number__WEBPACK_IMPORTED_MODULE_8__["CL_floor"], 2);

// function.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'APPLY', _function__WEBPACK_IMPORTED_MODULE_9__["CL_apply"], 2, null);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'FUNCTIONP', _function__WEBPACK_IMPORTED_MODULE_9__["CL_functionp"], 1);

// cons.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'CONSP', _cons__WEBPACK_IMPORTED_MODULE_10__["CL_consp"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'CONS', _cons__WEBPACK_IMPORTED_MODULE_10__["CL_cons"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%CAR', _cons__WEBPACK_IMPORTED_MODULE_10__["CL_car"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%CDR', _cons__WEBPACK_IMPORTED_MODULE_10__["CL_cdr"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%RPLACA', _cons__WEBPACK_IMPORTED_MODULE_10__["CL_rplaca"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%RPLACD', _cons__WEBPACK_IMPORTED_MODULE_10__["CL_rplacd"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'RAW-ARRAY-TO-LIST', _cons__WEBPACK_IMPORTED_MODULE_10__["CL_jsArrayToList"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'LIST-TO-RAW-ARRAY', _cons__WEBPACK_IMPORTED_MODULE_10__["CL_listToJsArray"], 1);

// values.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'VALUES', _values__WEBPACK_IMPORTED_MODULE_0__["CL_values"], 0, null);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'MULTIPLE-VALUE-CALL', _values__WEBPACK_IMPORTED_MODULE_0__["CL_multipleValueCall"], null);

// structure.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'MAKE-STRUCTURE', _structure__WEBPACK_IMPORTED_MODULE_7__["CL_makeStructure"], 1, null);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%COPY-STRUCTURE', _structure__WEBPACK_IMPORTED_MODULE_7__["CL_copyStructure"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'STRUCTURE-P', _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structurep"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%STRUCTURE-NAME', _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structureName"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%STRUCTURE-SLOT-COUNT', _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structureSlotCount"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%STRUCTURE-REF', _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structureRef"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%STRUCTURE-SET', _structure__WEBPACK_IMPORTED_MODULE_7__["CL_structureSet"], 3);

// control.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'EQ', _control__WEBPACK_IMPORTED_MODULE_11__["CL_eq"], 2);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], 'ERROR', _control__WEBPACK_IMPORTED_MODULE_11__["CL_error"], null);

// character.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["cl_package"], 'CHARACTERP', _character__WEBPACK_IMPORTED_MODULE_12__["CL_characterp"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%CODE-CHAR', _character__WEBPACK_IMPORTED_MODULE_12__["CL_codeChar"], 1);
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["system_package"], '%CHAR-CODE', _character__WEBPACK_IMPORTED_MODULE_12__["CL_charCode"], 1);

// ffi.js
registerFunction(_package__WEBPACK_IMPORTED_MODULE_5__["ffi_package"], 'INSTANCEOF', _ffi__WEBPACK_IMPORTED_MODULE_6__["CL_instanceof"], null);

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values1", function() { return values1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "values", function() { return values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_values", function() { return CL_values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "currentValues", function() { return currentValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "restoreValues", function() { return restoreValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_multipleValueCall", function() { return CL_multipleValueCall; });
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);


let current_values = [];

function values1(x) {
    current_values = [x];
    return x;
}

function values(...args) {
    current_values = args;
    return args.length === 0 ? _header__WEBPACK_IMPORTED_MODULE_0__["S_nil"] : args[0];
}

function CL_values(...args) {
    return values(...args);
}

function currentValues() {
  return current_values;
}

function restoreValues(values) {
  current_values = values;
}

function CL_multipleValueCall(fn, ...args) {
    const vector = [];
    for (let i = 0; i < args.length - 1; i++) {
        vector.push(args[i]);
    }
    return fn(...vector.concat(current_values));
}

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_t", function() { return S_t; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_nil", function() { return S_nil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_package", function() { return S_package; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_symbol", function() { return S_symbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_string", function() { return S_string; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_function", function() { return S_function; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_type_error", function() { return S_type_error; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_arguments_error", function() { return S_arguments_error; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_simple_error", function() { return S_simple_error; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_simple_make_string", function() { return S_simple_make_string; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_undefined_function", function() { return S_undefined_function; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_unbound_variable", function() { return S_unbound_variable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_program_error", function() { return S_program_error; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S_current_package", function() { return S_current_package; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSymbols", function() { return initSymbols; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toLispBoolean", function() { return toLispBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
let S_t;
let S_nil;
let S_package;
let S_symbol;
let S_string;
let S_function;
let S_type_error;

let S_arguments_error;
let S_simple_error;
let S_simple_make_string;
let S_undefined_function;
let S_unbound_variable;
let S_program_error;

let S_current_package;

function initSymbols({
    t,
    nil,
    ...symbols
}) {
    S_t = t;
    S_t.value = t;
    S_t.plist = nil;
    S_nil = nil;
    S_nil.value = nil;
    S_nil.plist = nil;
    S_package = symbols["PACKAGE"];
    S_symbol = symbols["SYMBOL"];
    S_string = symbols["STRING"];
    S_function = symbols["FUNCTION"];
    S_type_error = symbols["TYPE-ERROR"];

    S_arguments_error = symbols["ARGUMENTS-ERROR"];
    S_simple_error = symbols["SIMPLE-ERROR"];
    S_simple_make_string = symbols["SIMPLE-MAKE-STRING"];
    S_undefined_function = symbols["UNDEFINED-FUNCTION"];
    S_unbound_variable = symbols["UNBOUND-VARIABLE"];
    S_program_error = symbols["PROGRAM-ERROR"];

    S_current_package = symbols["*PACKAGE*"];
    S_current_package.plist = nil;
}

function toLispBoolean(x) {
    return x ? S_t : S_nil;
}

function isString(x) {
    return typeof x === 'string' || x instanceof String;
}


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "argumentsError", function() { return argumentsError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typeError", function() { return typeError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkString", function() { return checkString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "simpleError", function() { return simpleError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "programError", function() { return programError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "undefinedFunction", function() { return undefinedFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unboundVariable", function() { return unboundVariable; });
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);


function argumentsError(name, numArgs) {
    _header__WEBPACK_IMPORTED_MODULE_0__["S_arguments_error"].func(name, numArgs);
}

function typeError(datum, expectedType) {
    _header__WEBPACK_IMPORTED_MODULE_0__["S_type_error"].func(datum, expectedType);
}

function checkString(value) {
    if (!Object(_header__WEBPACK_IMPORTED_MODULE_0__["isString"])(value)) {
        typeError(value, _header__WEBPACK_IMPORTED_MODULE_0__["S_string"]);
    }
}

function simpleError(string, ...args) {
    if (_header__WEBPACK_IMPORTED_MODULE_0__["S_simple_make_string"].func === null) {
        throw new Error(string);
    } else {
        _header__WEBPACK_IMPORTED_MODULE_0__["S_simple_error"].func(_header__WEBPACK_IMPORTED_MODULE_0__["S_simple_make_string"].func(string), ...args);
    }
}

function programError(string, ...args) {
    _header__WEBPACK_IMPORTED_MODULE_0__["S_simple_error"].func(_header__WEBPACK_IMPORTED_MODULE_0__["S_simple_make_string"].func(string), ...args);
}

function undefinedFunction(name) {
    _header__WEBPACK_IMPORTED_MODULE_0__["S_undefined_function"].func(name);
}

function unboundVariable(name) {
    _header__WEBPACK_IMPORTED_MODULE_0__["S_unbound_variable"].func(name);
}


/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLispFormatFunction", function() { return setLispFormatFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pushCallStack", function() { return pushCallStack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "popCallStack", function() { return popCallStack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBacktrace", function() { return getBacktrace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raise", function() { return raise; });
const callStack = [];

var lispFormatFunction = null;

function setLispFormatFunction(f) {
    lispFormatFunction = f;
}

function pushCallStack(frame) {
    if (callStack.length > 1000) {
        raise('stack over flow');
    }
    callStack.push(frame);
}

function popCallStack() {
    callStack.pop();
}

function getBacktrace() {
    let s = 'Backtrace:\n';
    for (let i = callStack.length - 1, n = 0; i >= 0; i--, n++) {
        const frame = callStack[i];
        s += `${n}: `;
        try {
            s += lispFormatFunction("~S", frame);
        } catch (e) {
            s += `#<error printing ${e}>`;
        }
        if (i > 0) {
            s += '\n';
        }
    }
    return s;
}

function raise(...args) {
    if (lispFormatFunction === null) {
        console.log(args);
        throw new Error();
    }
    let s = lispFormatFunction.apply(null, args);
    s += '\n\n';
    s += getBacktrace();
    throw new Error(s);
}


/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSymbol", function() { return isSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeSymbol", function() { return makeSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbolName", function() { return symbolName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "symbolValue", function() { return symbolValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSymbolValue", function() { return setSymbolValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setSymbolFunction", function() { return setSymbolFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_symbolp", function() { return CL_symbolp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_makeSymbol", function() { return CL_makeSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_symbolPlist", function() { return CL_symbolPlist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_setSymbolPlist", function() { return CL_setSymbolPlist; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_put", function() { return CL_put; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_boundp", function() { return CL_boundp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_fboundp", function() { return CL_fboundp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_symbolPackage", function() { return CL_symbolPackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_symbolValue", function() { return CL_symbolValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_symbolFunction", function() { return CL_symbolFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_setSymbolFunction", function() { return CL_setSymbolFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_symbolName", function() { return CL_symbolName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_set", function() { return CL_set; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_makunbound", function() { return CL_makunbound; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_fmakunbound", function() { return CL_fmakunbound; });
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var _cons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7);





class LispSymbol {
    constructor(options) {
        const {
            name,
            packageName
        } = options;
        this.name = name;
        this.packageName = packageName;
        this.value = null;
        this.func = null;
        this.plist = _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"];
    }

    isBound() {
        return this.value !== null;
    }

    isFBound() {
        return this.func !== null;
    }

    getFunction() {
        if (this.func === null) {
            Object(_error__WEBPACK_IMPORTED_MODULE_2__["undefinedFunction"])(this);
        }
        this.func.lisp_symbol = this;
        return this.func;
    }

    getValue() {
        if (this.value === null) {
            Object(_error__WEBPACK_IMPORTED_MODULE_2__["unboundVariable"])(this);
        }
        return this.value;
    }

    getPackageName() {
        return this.packageName;
    }
}

function isSymbol(x) {
    return x instanceof LispSymbol;
}

function makeSymbol(name, packageName = null) {
    return new LispSymbol({
        name,
        packageName
    });
}

function symbolName(symbol) {
    return symbol.name;
}

function symbolValue(symbol) {
    if (!symbol.isBound()) Object(_error__WEBPACK_IMPORTED_MODULE_2__["unboundVariable"])(symbol);
    return symbol.value;
}

function setSymbolValue(symbol, value) {
    symbol.value = value;
    return value;
}

function setSymbolFunction(symbol, func) {
    symbol.func = func;
    func.lisp_name = symbol.name;
    symbol.func.lisp_symbol = symbol;
    return func;
}

function checkSymbol(x) {
    if (!isSymbol(x)) {
        Object(_error__WEBPACK_IMPORTED_MODULE_2__["typeError"])(x, _header__WEBPACK_IMPORTED_MODULE_1__["S_symbol"]);
    }
}

function CL_symbolp(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_1__["toLispBoolean"])(isSymbol(x)));
}

function CL_makeSymbol(string) {
    Object(_error__WEBPACK_IMPORTED_MODULE_2__["checkString"])(string);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(makeSymbol(string));
}

function CL_symbolPlist(symbol) {
    checkSymbol(symbol);
    if (symbol.plist === undefined) symbol.plist = _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"];
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(symbol.plist);
}

function CL_setSymbolPlist(symbol, plist) {
    checkSymbol(symbol);
    symbol.plist = plist;
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(plist);
}

function CL_put(symbol, key, value) {
    for (let plist = symbol.plist; plist !== _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]; plist = plist.cdr.cdr) {
        if (plist.car === key) {
            plist.cdr.car = value;
            return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(value);
        }
    }
    symbol.plist = Object(_cons__WEBPACK_IMPORTED_MODULE_3__["makeCons"])(key, Object(_cons__WEBPACK_IMPORTED_MODULE_3__["makeCons"])(value, symbol.plist));
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]);
}

function CL_boundp(x) {
    checkSymbol(x);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_1__["toLispBoolean"])(x.isBound()));
}

function CL_fboundp(x) {
    checkSymbol(x);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_1__["toLispBoolean"])(x.isFBound()));
}

function CL_symbolPackage(symbol) {
    checkSymbol(symbol);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(symbol.packageName);
}

function CL_symbolValue(symbol) {
    checkSymbol(symbol);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(symbolValue(symbol));
}

function CL_symbolFunction(symbol) {
    checkSymbol(symbol);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(symbol.getFunction());
}

function CL_setSymbolFunction(symbol, func) {
    checkSymbol(symbol);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(setSymbolFunction(symbol, func));
}

function CL_symbolName(symbol) {
    checkSymbol(symbol);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(symbolName(symbol));
}

function CL_set(symbol, value) {
    checkSymbol(symbol);
    setSymbolValue(symbol, value);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(value);
}

function CL_makunbound(symbol) {
    checkSymbol(symbol);
    symbol.value = null;
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(symbol);
}

function CL_fmakunbound(symbol) {
    checkSymbol(symbol);
    symbol.func = null;
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(symbol);
}

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCons", function() { return isCons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeCons", function() { return makeCons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rplaca", function() { return rplaca; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rplacd", function() { return rplacd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "jsArrayToList", function() { return jsArrayToList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listToJsArray", function() { return listToJsArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_consp", function() { return CL_consp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_cons", function() { return CL_cons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_car", function() { return CL_car; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_cdr", function() { return CL_cdr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_rplaca", function() { return CL_rplaca; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_rplacd", function() { return CL_rplacd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_jsArrayToList", function() { return CL_jsArrayToList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_listToJsArray", function() { return CL_listToJsArray; });
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);



class Cons {
    constructor(car, cdr) {
        this.car = car;
        this.cdr = cdr;
    }
}

function isCons(x) {
    return x instanceof Cons;
}

function makeCons(car, cdr) {
    return new Cons(car, cdr);
}

function rplaca(cons, car) {
    cons.car = car;
    return cons;
}

function rplacd(cons, cdr) {
    cons.cdr = cdr;
    return cons;
}

function jsArrayToList(jsArguments, start = 0) {
    let acc = _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"];
    for (let i = jsArguments.length - 1; i >= start; i--) {
        acc = makeCons(jsArguments[i], acc);
    }
    return acc;
}

function listToJsArray(list) {
    const array = new Array();
    for (let x = list; isCons(x); x = x.cdr) {
        array.push(x.car);
    }
    return array;
}

function CL_consp(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_1__["toLispBoolean"])(isCons(x)));
}

function CL_cons(car, cdr) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(makeCons(car, cdr));
}

function CL_car(list) {
    if (list === _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]) {
        return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]);
    } else {
        return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(list.car);
    }
}

function CL_cdr(list) {
    if (list === _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]) {
        return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]);
    } else {
        return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(list.cdr);
    }
}

function CL_rplaca(cons, car) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(rplaca(cons, car));
}

function CL_rplacd(cons, cdr) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(rplacd(cons, cdr));
}

function CL_jsArrayToList(array) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(jsArrayToList(array));
}

function CL_listToJsArray(array) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(listToJsArray(array));
}

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findPackage", function() { return findPackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defpackage", function() { return defpackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ensurePackage", function() { return ensurePackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intern", function() { return intern; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeCurrentPackage", function() { return changeCurrentPackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cl_package", function() { return cl_package; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "system_package", function() { return system_package; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ffi_package", function() { return ffi_package; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyword_package", function() { return keyword_package; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cl_user_package", function() { return cl_user_package; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_packagep", function() { return CL_packagep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_packageName", function() { return CL_packageName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_packageNicknames", function() { return CL_packageNicknames; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_listAllPackages", function() { return CL_listAllPackages; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_intern", function() { return CL_intern; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_findSymbol", function() { return CL_findSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_makePackage", function() { return CL_makePackage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_export", function() { return CL_export; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_mapPackageSymbols", function() { return CL_mapPackageSymbols; });
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);
/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
/* harmony import */ var _cons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);






class Package {
    constructor(options = {}) {
        const {
            name,
            nicknames,
            usePackageNames
        } = options;
        this.name = name;
        this.nicknames = nicknames || [];
        this.usePackageNames = usePackageNames || [];
        this.symbolTable = {};
        this.exportTable = {};
    }

    is(name) {
        if (this.name === name) {
            return true;
        }
        for (let nickname of this.nicknames) {
            if (nickname === name) {
                return true;
            }
        }
        return false;
    }

    exportSymbol(name) {
        if (typeof name !== 'string') {
            Object(_error__WEBPACK_IMPORTED_MODULE_2__["simpleError"])(`Internal Error: ${name} is not string`);
        }
        this.exportTable[name] = true;
    }

    addNickname(nickname) {
        if (this.nicknames.indexOf(nickname) === -1) {
            this.nicknames.push(nickname);
        }
    }

    mapSymbols(fn) {
        for (let name in this.symbolTable) {
            fn(this.symbolTable[name]);
        }
    }

    _findSymbol(name, sanePackage) {
        for (let pkgName of this.usePackageNames) {
            const pkg = ensurePackage(pkgName);
            const s = pkg._findSymbol(name, sanePackage);
            if (s) {
                return s;
            }
        }

        if (this === sanePackage) {
            return this.symbolTable[name];
        } else if (this.symbolTable[name] && this.exportTable[name]) {
            return this.symbolTable[name];
        } else {
            return null;
        }
    }

    findSymbol(name, sanePackage = this) {
        const symbol = this._findSymbol(name, sanePackage);
        if (!symbol) {
            return [null, null];
        }
        if (symbol.getPackageName() !== this.name) {
            return [symbol, 'INHERITED'];
        }
        if (this.exportTable[Object(_symbol__WEBPACK_IMPORTED_MODULE_3__["symbolName"])(symbol)]) {
            return [symbol, 'EXTERNAL'];
        }
        return [symbol, 'INTERNAL'];
    }

    intern(name) {
        const [symbol, status] = this.findSymbol(name);
        if (status === null) {
            const newSymbol = Object(_symbol__WEBPACK_IMPORTED_MODULE_3__["makeSymbol"])(name, this.name);
            this.symbolTable[name] = newSymbol;
            return [newSymbol, null];
        }
        return [symbol, status];
    }
}

const packages = [];

function findPackage(name) {
    for (let p of packages) {
        if (p.is(name)) {
            return p;
        }
    }
    return null;
}

function alreadyExistPackageName(name, nicknames) {
    let pkg;
    if (pkg = findPackage(name)) {
        return [name, pkg];
    }
    for (let name of nicknames) {
        if (pkg = findPackage(name)) {
            return [name, pkg];
        }
    }
    return [null, null];
}

function makePackage(name, nicknames = [], usePackageNames = []) {
    const [duplicateName, _] = alreadyExistPackageName(name, nicknames);
    if (duplicateName) {
        Object(_error__WEBPACK_IMPORTED_MODULE_2__["simpleError"])(`Package ${duplicateName} already exists`);
    }
    const p = new Package({
        name,
        nicknames,
        usePackageNames,
    });
    packages.push(p);
    return p;
}

function defpackage(name, {
    exportNames = [],
    nicknames = [],
    usePackageNames = []
}) {
    let [_, pkg] = alreadyExistPackageName(name, nicknames);
    if (!pkg) {
        pkg = makePackage(name, nicknames, usePackageNames);
    }
    for (let name of exportNames) {
        pkg.exportSymbol(name);
    }
    for (let name of nicknames) {
        pkg.addNickname(name);
    }
    return pkg;
}

function ensurePackage(pkg) {
    if (pkg instanceof Package) {
        return pkg;
    }

    if (Object(_symbol__WEBPACK_IMPORTED_MODULE_3__["isSymbol"])(pkg)) {
        pkg = Object(_symbol__WEBPACK_IMPORTED_MODULE_3__["symbolName"])(pkg);
    }

    if (Object(_header__WEBPACK_IMPORTED_MODULE_1__["isString"])(pkg)) {
        const result = findPackage(pkg);
        if (!result) Object(_error__WEBPACK_IMPORTED_MODULE_2__["simpleError"])(`The Package ${pkg} is undefined`);
        return result;
    }

    Object(_error__WEBPACK_IMPORTED_MODULE_2__["typeError"])(pkg, _header__WEBPACK_IMPORTED_MODULE_1__["S_package"]);
}

function intern(name, pkg = Object(_symbol__WEBPACK_IMPORTED_MODULE_3__["symbolValue"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_current_package"])) {
    const [symbol, status] = ensurePackage(pkg).intern(name);
    return symbol;
}

function changeCurrentPackage(pkg) {
    return Object(_symbol__WEBPACK_IMPORTED_MODULE_3__["setSymbolValue"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_current_package"], ensurePackage(pkg));
}

const cl_package = makePackage('COMMON-LISP', ['CL']);
const system_package = makePackage('SYSTEM');
const ffi_package = makePackage('FFI');
const keyword_package = makePackage('KEYWORD');
const cl_user_package = makePackage('COMMON-LISP-USER', ['CL-USER', 'VALTAN-USER'], ['COMMON-LISP']);
makePackage('COMPILER');

function toKeyword(name) {
    const [symbol, status] = keyword_package.intern(name);
    return symbol;
}

function CL_packagep(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_1__["toLispBoolean"])(x instanceof Package));
}

function checkPackage(x) {
    if (!(x instanceof Package)) {
        Object(_error__WEBPACK_IMPORTED_MODULE_2__["typeError"])(x, _header__WEBPACK_IMPORTED_MODULE_1__["S_package"]);
    }
}

function CL_packageName(pkg) {
    checkPackage(pkg);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(pkg.name);
}

function CL_packageNicknames(pkg) {
    checkPackage(pkg);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(pkg.nicknames);
}

function CL_listAllPackages() {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_cons__WEBPACK_IMPORTED_MODULE_4__["jsArrayToList"])(packages));
}

function CL_intern(name, pkg) {
    Object(_error__WEBPACK_IMPORTED_MODULE_2__["checkString"])(name);
    checkPackage(pkg);
    const [symbol, status] = pkg.intern(name);
    if (pkg === keyword_package) {
        symbol.value = symbol;
    }
    if (status === null) {
        return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values"])(symbol, _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]);
    }
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values"])(symbol, toKeyword(status));
}

function CL_findSymbol(name, pkg) {
    Object(_error__WEBPACK_IMPORTED_MODULE_2__["checkString"])(name);
    checkPackage(pkg);
    const [symbol, status] = pkg.findSymbol(name);
    if (status === null) {
        return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_nil"], _header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]);
    }
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values"])(symbol, toKeyword(status));
}

function CL_makePackage(name, nicknames, usePackageNames) {
    Object(_error__WEBPACK_IMPORTED_MODULE_2__["checkString"])(name);
    for (let name of nicknames) {
        Object(_error__WEBPACK_IMPORTED_MODULE_2__["checkString"])(name);
    }
    for (let name of usePackageNames) {
        Object(_error__WEBPACK_IMPORTED_MODULE_2__["checkString"])(name);
    }
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(makePackage(name, nicknames, usePackageNames));
}

function CL_export(exportSyms, pkg) {
    let exportNames;
    if(Object(_cons__WEBPACK_IMPORTED_MODULE_4__["isCons"])(exportSyms)) {
        exportNames = Object(_cons__WEBPACK_IMPORTED_MODULE_4__["listToJsArray"])(exportSyms).map(_symbol__WEBPACK_IMPORTED_MODULE_3__["symbolName"]);
    } else {
        exportNames = [Object(_symbol__WEBPACK_IMPORTED_MODULE_3__["symbolName"])(exportSyms)]
    }
    for (let name of exportNames) {
        pkg.exportSymbol(name);
    }
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_t"]);
}

function CL_mapPackageSymbols(pkg, fn) {
    checkPackage(pkg);
    pkg.mapSymbols(fn);
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(_header__WEBPACK_IMPORTED_MODULE_1__["S_nil"]);
}

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_instanceof", function() { return CL_instanceof; });
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);



function CL_instanceof(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_1__["toLispBoolean"])(x instanceof y));
}

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_makeStructure", function() { return CL_makeStructure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_copyStructure", function() { return CL_copyStructure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_structurep", function() { return CL_structurep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_structureName", function() { return CL_structureName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_structureSlotCount", function() { return CL_structureSlotCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_structureRef", function() { return CL_structureRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_structureSet", function() { return CL_structureSet; });
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);



class Structure {
    constructor(name, values) {
        this.name = name;
        this.values = values;
    }

    getValue(i) {
        return this.values[i];
    }

    setValue(i, value) {
        this.values[i] = value;
    }

    copy() {
        return new Structure(this.name, this.values);
    }
}

function CL_makeStructure(name, ...args) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(new Structure(name, args));
}

function CL_copyStructure(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(x.copy());
}

function CL_structurep(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(x instanceof Structure));
}

function CL_structureName(structure) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(structure.name);
}

function CL_structureSlotCount(structure) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(structure.values.length);
}

function CL_structureRef(structure, i) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(structure.getValue(i));
}

function CL_structureSet(structure, i, value) {
    structure.setValue(i, value);
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(value);
}

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_numberp", function() { return CL_numberp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_integerp", function() { return CL_integerp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_add", function() { return CL_add; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_sub", function() { return CL_sub; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_negate", function() { return CL_negate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_mul", function() { return CL_mul; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_floor", function() { return CL_floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_rem", function() { return CL_rem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_numberEqual", function() { return CL_numberEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_numberNotEqual", function() { return CL_numberNotEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_greaterThan", function() { return CL_greaterThan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_lessThan", function() { return CL_lessThan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_greaterEqual", function() { return CL_greaterEqual; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_lessEqual", function() { return CL_lessEqual; });
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);



function isNumber(x) {
    return (typeof(x) === 'number');
}

function CL_numberp(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(isNumber(x)));
}

function CL_integerp(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(isNumber(x) && Number.isInteger(x)));
}

function CL_add(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(x + y);
}

function CL_sub(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(x - y);
}

function CL_negate(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(-x);
}

function CL_mul(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(x * y);
}

function CL_floor(number, divisor) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values"])(Math.floor(number / divisor), number % divisor);
}

function CL_rem(number, divisor) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(number % divisor);
}

function CL_numberEqual(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(x === y));
}

function CL_numberNotEqual(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(x !== y));
}

function CL_greaterThan(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(x > y));
}

function CL_lessThan(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(x < y));
}

function CL_greaterEqual(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(x >= y));
}

function CL_lessEqual(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(x <= y));
}


/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "callFunction", function() { return callFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startProfile", function() { return startProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "finishProfile", function() { return finishProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "callFunctionWithCallStack", function() { return callFunctionWithCallStack; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_apply", function() { return CL_apply; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_funcall", function() { return CL_funcall; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_functionp", function() { return CL_functionp; });
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var _cons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var _callstack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5);
/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4);












function callFunction(symbol, ...args) {
    const func = symbol.getFunction();
    return func(...args);
}

const profileTable = new Map();

let enableProfiling = false;

function startProfile() {
    enableProfiling = true;
}

function finishProfile() {
    enableProfiling = false;
    const list = [];
    for (let [symbol, value] of profileTable.entries()) {
        list.push({
            symbol,
            count: value.count,
            totalTime: value.totalTime
        });
    }
    list.sort((x, y) => {
        if (x.totalTime < y.totalTime) {
            return -1;
        }
        if (x.totalTime > y.totalTime) {
            return 1;
        }
        return 0;
    });
    console.log('Function name'.padStart(60), 'Count'.padStart(10), 'Total Time'.padStart(5));
    for (let {
            symbol,
            count,
            totalTime
        } of list) {
        console.log(`${symbol.packageName}:${symbol.name}`.padStart(60), String(count).padStart(10), String(totalTime).padStart(5));
    }
}

/*
// 関数が再帰的に呼ばれる時、外側の関数だけの時間を計るプロファイラ
// 関数fの中で関数gが呼ばれた場合、fの時間はgの時間を含めた結果が欲しい場合に使う

const getTime = typeof process === 'undefined' ? (() => Date.now()) : (() => process.hrtime());
const diffTime = typeof process === 'undefined' ? ((time) => Date.now() - time) : ((time) => process.hrtime(time)[1]);

function profileEnter(symbol) {
    if (symbol.__call_count === undefined) {
        symbol.__call_count = 1;
    } else {
        symbol.__call_count++;
    }
    if (symbol.__enter_time === undefined) {
        symbol.__enter_time = getTime();
        if (symbol.__total_time === undefined) {
            symbol.__total_time = 0;
        }
    }
    if (symbol.__call_depth === undefined) {
        symbol.__call_depth = 1;
    } else {
        symbol.__call_depth++;
    }
}

function profileExit(symbol) {
    symbol.__call_depth--;
    if (symbol.__call_depth === 0) {
        symbol.__total_time += diffTime(symbol.__enter_time);
        symbol.__enter_time = undefined;
        profileTable.set(symbol, {
            count: symbol.__call_count,
            totalTime: symbol.__total_time
        });
    }
}
/**/

//*
// 一般的なプロファイラ

class profileStackEntry {
    constructor(fnName, lastTime) {
        this.fnName = fnName;
        this.lastTime = lastTime;
    }
}

const profileCallStack = [];

function profileEnter(symbol) {
    if (!profileTable.has(symbol)) {
        profileTable.set(symbol, {
            count: 1,
            totalTime: 0,
        });
    } else {
        const info = profileTable.get(symbol);
        info.count++;
    }
    if (profileCallStack.length > 0) {
        incProfileTime(profileCallStack[0], profileCallStack[0].fnName);
    }
    profileCallStack.push(new profileStackEntry(symbol, Date.now()));
}

function profileExit(symbol) {
    incProfileTime(profileCallStack.pop(), symbol);
    if (profileCallStack.length > 0) {
        profileCallStack[0].lastTime = Date.now();
    }
}

function incProfileTime(entry, symbol) {
    const info = profileTable.get(symbol);
    info.totalTime += Date.now() - entry.lastTime;
}
/**/

function callFunctionWithCallStack(symbol, ...args) {
    Object(_callstack__WEBPACK_IMPORTED_MODULE_3__["pushCallStack"])(Object(_cons__WEBPACK_IMPORTED_MODULE_2__["jsArrayToList"])([symbol, ...args]));
    try {
        if (enableProfiling) {
            profileEnter(symbol);
            const result = callFunction(symbol, ...args);
            profileExit(symbol);
            return result;
        } else {
            return callFunction(symbol, ...args);
        }
    } finally {
        Object(_callstack__WEBPACK_IMPORTED_MODULE_3__["popCallStack"])();
    }
}

function CL_apply(fn, args) {
    Object(_callstack__WEBPACK_IMPORTED_MODULE_3__["pushCallStack"])(Object(_cons__WEBPACK_IMPORTED_MODULE_2__["jsArrayToList"])([fn, ...args]));
    try {
        if (enableProfiling && fn.lisp_symbol) {
            profileEnter(fn.lisp_symbol);
            const result = fn(...args);
            profileExit(fn.lisp_symbol);
            return result;
        } else {
            return fn(...args);
        }
    } finally {
        Object(_callstack__WEBPACK_IMPORTED_MODULE_3__["popCallStack"])();
    }
}

function CL_funcall(fn, ...args) {
    if (Object(_symbol__WEBPACK_IMPORTED_MODULE_4__["isSymbol"])(fn)) {
        fn = fn.getFunction();
    } else if (typeof fn !== 'function') {
        Object(_error__WEBPACK_IMPORTED_MODULE_5__["typeError"])(fn, S_function);
    }

    if (enableProfiling && fn.lisp_symbol) {
        profileEnter(fn.lisp_symbol);
        const result = fn(...args);
        profileExit(fn.lisp_symbol);
        return result;
    } else {
        return fn(...args);
    }
}

function CL_functionp(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_1__["toLispBoolean"])(typeof x === 'function'));
}

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_eq", function() { return CL_eq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_error", function() { return CL_error; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlockValue", function() { return BlockValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TagValue", function() { return TagValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CatchValue", function() { return CatchValue; });
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _callstack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5);




function CL_eq(x, y) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_1__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_0__["toLispBoolean"])(x === y));
}

function CL_error(string) {
    Object(_callstack__WEBPACK_IMPORTED_MODULE_2__["raise"])(string);
}

class BlockValue {
    constructor(symbol, value) {
        this.name = symbol;
        this.value = value;
    }
}

class TagValue {
    constructor(id, index) {
        this.id = id;
        this.index = index;
    }
}

class CatchValue {
    constructor(symbol, value) {
        this.symbol = symbol;
        this.value = value;
    }
}

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCharacter", function() { return isCharacter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeCharacter", function() { return makeCharacter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_characterp", function() { return CL_characterp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_codeChar", function() { return CL_codeChar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CL_charCode", function() { return CL_charCode; });
/* harmony import */ var _values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);



function isCharacter(x) {
    return (typeof(x) === 'string' || x instanceof String) && x.length === 1;
}

function makeCharacter(code) {
    return String.fromCharCode(code);
}

function CL_characterp(x) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(Object(_header__WEBPACK_IMPORTED_MODULE_1__["toLispBoolean"])(isCharacter(x)));
}

function CL_codeChar(code) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(String.fromCharCode(code));
}

function CL_charCode(char) {
    return Object(_values__WEBPACK_IMPORTED_MODULE_0__["values1"])(char.charCodeAt(0));
}

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "codeArrayToString", function() { return codeArrayToString; });
function codeArrayToString(array) {
    return array.map(c => String.fromCharCode(c)).join('');
}

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
__webpack_require__(17);
__webpack_require__(65);
__webpack_require__(66);
__webpack_require__(67);
__webpack_require__(68);
__webpack_require__(69);
__webpack_require__(70);
__webpack_require__(71);
__webpack_require__(72);
__webpack_require__(73);


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
__webpack_require__(18);
__webpack_require__(23);
__webpack_require__(52);


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
__webpack_require__(17);
__webpack_require__(19);
__webpack_require__(20);
__webpack_require__(21);


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_5;
let G_6;
let G_8;
let G_10;
let G_11;
let G_13;
let G_15;
let G_16;
let G_19;
let G_22;
let G_24;
let G_26;
let G_27;
let TMP_4;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('DEFPACKAGE', 'COMMON-LISP');
G_3 = lisp.intern('MACRO', 'COMPILER');
G_5 = lisp.intern('&BODY', 'COMMON-LISP');
G_6 = lisp.intern('OPTIONS', 'COMMON-LISP');
G_8 = lisp.intern('PACKAGE', 'COMMON-LISP');
G_10 = lisp.intern('DECLARE', 'COMMON-LISP');
G_11 = lisp.intern('EXPORT', 'KEYWORD');
G_13 = lisp.intern('ASSOC', 'COMMON-LISP');
G_15 = lisp.intern('CDR', 'COMMON-LISP');
G_16 = lisp.intern('USE', 'KEYWORD');
G_19 = lisp.intern('NICKNAMES', 'KEYWORD');
G_22 = lisp.intern('%DEFPACKAGE', 'SYSTEM');
G_24 = lisp.intern('LIST', 'COMMON-LISP');
G_26 = lisp.intern('DESTRUCTURING-BIND', 'COMMON-LISP');
G_27 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');TMP_4=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_25;
let TMP_23;
let L_NICKNAMES__4;
let TMP_21;
let TMP_20;
let L_USE__3;
let TMP_18;
let TMP_17;
let L_EXPORT__2;
let TMP_14;
let TMP_12;
let TMP_9;
let TMP_7;
let L_G0__1;
L_G0__1=lisp.jsArrayToList(arguments, 0);
TMP_7=lisp.callFunctionWithCallStack(G_8,lisp.symbolValue(G_5),lisp.symbolValue(G_6));
TMP_9=lisp.callFunctionWithCallStack(G_10);
{
TMP_12=lisp.callFunctionWithCallStack(G_13,G_11,lisp.symbolValue(G_6));
TMP_14=lisp.callFunctionWithCallStack(G_15,TMP_12);
L_EXPORT__2=lisp.values1(TMP_14);
TMP_17=lisp.callFunctionWithCallStack(G_13,G_16,lisp.symbolValue(G_6));
TMP_18=lisp.callFunctionWithCallStack(G_15,TMP_17);
L_USE__3=lisp.values1(TMP_18);
TMP_20=lisp.callFunctionWithCallStack(G_13,G_19,lisp.symbolValue(G_6));
TMP_21=lisp.callFunctionWithCallStack(G_15,TMP_20);
L_NICKNAMES__4=lisp.values1(TMP_21);
TMP_23=lisp.callFunctionWithCallStack(G_24,G_22,lisp.symbolValue(G_8),G_11,L_EXPORT__2,G_16,L_USE__3,G_19,L_NICKNAMES__4);
}
TMP_25=lisp.callFunctionWithCallStack(G_26,TMP_7,L_G0__1,TMP_9,lisp.values1(TMP_23));
return TMP_25;
});
lisp.CL_put(G_2,G_3,TMP_4);
}catch(TMP_1){G_27.func();
console.log(TMP_1.message);
}


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let TMP_3;
// toplevel defun
lisp.defpackage('COMPILER', {exportNames: ['DEF-IMPLEMENTATION', 'COMPILE-TOPLEVEL', 'MAKE-EMITTER-STREAM', 'JOIN-EMITTER-STREAM', 'SET-SOURCE-MAP'], usePackageNames: ['CL'], nicknames: []});
lisp.defpackage('FFI', {exportNames: ['INSTANCEOF', 'REQUIRE', 'EXPORT', 'REF', 'SET', 'VAR', 'NEW', 'AGET', 'DEFINE-FUNCTION', 'DEFINE', 'OBJECT', 'ARRAY', 'CONSOLE.LOG', 'JS-EVAL', 'CL->JS', 'JS->CL', 'TYPEOF'], usePackageNames: [], nicknames: []});
lisp.defpackage('JS', {exportNames: [], usePackageNames: [], nicknames: []});
lisp.defpackage('SYSTEM', {exportNames: ['+NULL+', '*GET-STDIN-LINE-FUNCTION*', 'WRITE-RAW-STRING-TO-STDOUT', 'READ-WHOLE-FILE', 'MAKE-SYMBOL', 'PUT-SYMBOL-PLIST', 'SYMBOL-NAME', 'SYMBOL-VALUE', 'SYMBOL-FUNCTION', 'SYMBOL-PLIST', 'SYMBOL-PACKAGE-NAME', 'FSET', '%SET', 'MAP-PACKAGE-SYMBOLS', 'PUT', 'PACKAGE-NAME', 'PACKAGE-NICKNAMES', 'INTERN', 'FIND-SYMBOL', 'MAKE-PACKAGE', 'EXPORT', '%ADD', '%SUB', '%NEGATE', '%MUL', '%REM', '%=', '%/=', '%>', '%<', '%>=', '%<=', '%FLOOR', '%LOGAND', 'APPLY', '%CAR', '%CDR', '%RPLACA', '%RPLACD', 'RAW-ARRAY-TO-LIST', 'LIST-TO-RAW-ARRAY', 'MULTIPLE-VALUE-CALL', 'MAKE-STRUCTURE', '%COPY-STRUCTURE', 'STRUCTURE-P', '%STRUCTURE-NAME', '%STRUCTURE-SLOT-COUNT', '%STRUCTURE-REF', '%STRUCTURE-SET', 'ERROR', '%CODE-CHAR', '%CHAR-CODE', 'MAKE-RAW-STRING', 'EXPAND-RAW-STRING', 'CODE-TO-RAW-STRING', 'SUB-RAW-STRING/2', 'SUB-RAW-STRING/3', 'CONCAT-RAW-STRING/2', 'CONCAT-RAW-STRING/3', 'RAW-STRING-UPCASE', 'RAW-STRING-DOWNCASE', 'NUMBER-TO-RAW-STRING', 'MAKE-RAW-ARRAY', 'RAW-ARRAY-LENGTH', 'RAW-ARRAY-REF', 'RAW-ARRAY-SET', 'FILL-RAW-ARRAY', 'MAKE-MAP', 'MAP-GET', 'MAP-SET', 'MAP-REMOVE', 'MAP-LENGTH', 'MAP-CLEAR', 'FUNCTION-NAME', 'UNKNOWN-OBJECT-TO-STRING', 'RAW-ARRAY-TO-ARRAY', 'RAW-STRING-TO-ARRAY', 'ARRAY-TO-RAW-STRING', 'STRING-APPEND', 'STRING-APPEND*', '%DEFUN', '%DEFPACKAGE', '%IN-PACKAGE', 'FDEFINITION-SETF', 'DEFMACRO*', 'NAMED-LAMBDA', 'UNQUOTE', 'UNQUOTE-SPLICING', 'UNQUOTE-NSPLICING', 'BACKQUOTE', 'RANDOM'], usePackageNames: [], nicknames: ['*']});
lisp.defpackage('VALTAN-CORE', {exportNames: [], usePackageNames: [], nicknames: []});
// initialize symbols
G_2 = lisp.intern('*IN-HOST-RUNTIME*', 'COMPILER');
G_4 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_5 = lisp.intern('T', 'COMMON-LISP');
G_6 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.ensurePackage('COMPILER');TMP_3=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_3) !== lisp.S_nil){
}else{
lisp.CL_set(G_2,lisp.S_nil);
}
lisp.CL_put(G_2,G_4,G_5);
lisp.ensurePackage('FFI');lisp.ensurePackage('JS');lisp.ensurePackage('SYSTEM');lisp.ensurePackage('VALTAN-CORE');}catch(TMP_1){G_6.func();
console.log(TMP_1.message);
}


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
var fs = __webpack_require__(22);
// initialize-vars
let G_2;
let G_4;
let G_7;
let G_10;
let G_13;
let G_16;
let G_19;
let G_22;
let G_25;
let G_28;
let G_31;
let G_34;
let G_37;
let G_39;
let G_41;
let G_43;
let G_46;
let G_49;
let G_53;
let G_56;
let G_59;
let G_62;
let G_64;
let G_67;
let G_72;
let G_74;
let G_79;
let G_81;
let G_82;
let G_86;
let G_89;
let G_93;
let G_95;
let G_96;
let CL_SYSTEM_RANDOM;
let CL_SYSTEM_WRITE_RAW_STRING_TO_STDOUT;
let CL_SYSTEM_READ_WHOLE_FILE;
let CL_SYSTEM_UNKNOWN_OBJECT_TO_STRING;
let CL_SYSTEM_FUNCTION_NAME;
let CL_SYSTEM_MAP_CLEAR;
let CL_SYSTEM_MAP_LENGTH;
let CL_SYSTEM_MAP_REMOVE;
let CL_SYSTEM_MAP_SET;
let CL_SYSTEM_MAP_GET;
let CL_SYSTEM_MAKE_MAP;
let CL_SYSTEM_FILL_RAW_ARRAY;
let CL_SYSTEM_RAW_ARRAY_SET;
let CL_SYSTEM_RAW_ARRAY_REF;
let CL_SYSTEM_RAW_ARRAY_LENGTH;
let CL_SYSTEM_MAKE_RAW_ARRAY;
let CL_SYSTEM_NUMBER_TO_RAW_STRING;
let CL_SYSTEM_RAW_STRING_DOWNCASE;
let CL_SYSTEM_RAW_STRING_UPCASE;
let CL_SYSTEM_CONCAT_RAW_STRINGSLASH3;
let CL_SYSTEM_CONCAT_RAW_STRINGSLASH2;
let CL_SYSTEM_SUB_RAW_STRINGSLASH3;
let CL_SYSTEM_SUB_RAW_STRINGSLASH2;
let CL_SYSTEM_CODE_TO_RAW_STRING;
let CL_SYSTEM_EXPAND_RAW_STRING;
let CL_SYSTEM_MAKE_RAW_STRING;
// toplevel defun
let F_MAKE_RAW_STRING_3;
F_MAKE_RAW_STRING_3=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_4, arguments.length);
}
let TMP_5;
TMP_5=new String;
return lisp.values1(TMP_5);
});
CL_SYSTEM_MAKE_RAW_STRING=lisp.values1(F_MAKE_RAW_STRING_3);
let F_EXPAND_RAW_STRING_6;
F_EXPAND_RAW_STRING_6=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_7, arguments.length);
}
let TMP_8;
let L_N__3;
let L_RAW_STRING__2;
L_RAW_STRING__2=arguments[0];
L_N__3=arguments[1];
TMP_8=lisp.values1(L_RAW_STRING__2).padEnd(L_N__3);
return TMP_8;
});
CL_SYSTEM_EXPAND_RAW_STRING=lisp.values1(F_EXPAND_RAW_STRING_6);
let F_CODE_TO_RAW_STRING_9;
F_CODE_TO_RAW_STRING_9=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_10, arguments.length);
}
let TMP_11;
let L_CODE__5;
L_CODE__5=arguments[0];
TMP_11=String.fromCharCode(L_CODE__5);
return TMP_11;
});
CL_SYSTEM_CODE_TO_RAW_STRING=lisp.values1(F_CODE_TO_RAW_STRING_9);
let F_SUB_RAW_STRINGSLASH2_12;
F_SUB_RAW_STRINGSLASH2_12=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_13, arguments.length);
}
let TMP_14;
let L_START__8;
let L_RAW_STRING__7;
L_RAW_STRING__7=arguments[0];
L_START__8=arguments[1];
TMP_14=lisp.values1(L_RAW_STRING__7).substring(L_START__8);
return TMP_14;
});
CL_SYSTEM_SUB_RAW_STRINGSLASH2=lisp.values1(F_SUB_RAW_STRINGSLASH2_12);
let F_SUB_RAW_STRINGSLASH3_15;
F_SUB_RAW_STRINGSLASH3_15=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_16, arguments.length);
}
let TMP_17;
let L_END__12;
let L_START__11;
let L_RAW_STRING__10;
L_RAW_STRING__10=arguments[0];
L_START__11=arguments[1];
L_END__12=arguments[2];
TMP_17=lisp.values1(L_RAW_STRING__10).substring(L_START__11,L_END__12);
return TMP_17;
});
CL_SYSTEM_SUB_RAW_STRINGSLASH3=lisp.values1(F_SUB_RAW_STRINGSLASH3_15);
let F_CONCAT_RAW_STRINGSLASH2_18;
F_CONCAT_RAW_STRINGSLASH2_18=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_19, arguments.length);
}
let TMP_20;
let L_RAW_STRING_2__15;
let L_RAW_STRING_1__14;
L_RAW_STRING_1__14=arguments[0];
L_RAW_STRING_2__15=arguments[1];
TMP_20=lisp.values1(L_RAW_STRING_1__14).concat(L_RAW_STRING_2__15);
return TMP_20;
});
CL_SYSTEM_CONCAT_RAW_STRINGSLASH2=lisp.values1(F_CONCAT_RAW_STRINGSLASH2_18);
let F_CONCAT_RAW_STRINGSLASH3_21;
F_CONCAT_RAW_STRINGSLASH3_21=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_22, arguments.length);
}
let TMP_23;
let L_RAW_STRING_3__19;
let L_RAW_STRING_2__18;
let L_RAW_STRING_1__17;
L_RAW_STRING_1__17=arguments[0];
L_RAW_STRING_2__18=arguments[1];
L_RAW_STRING_3__19=arguments[2];
TMP_23=lisp.values1(L_RAW_STRING_1__17).concat(L_RAW_STRING_2__18,L_RAW_STRING_3__19);
return TMP_23;
});
CL_SYSTEM_CONCAT_RAW_STRINGSLASH3=lisp.values1(F_CONCAT_RAW_STRINGSLASH3_21);
let F_RAW_STRING_UPCASE_24;
F_RAW_STRING_UPCASE_24=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_25, arguments.length);
}
let TMP_26;
let L_RAW_STRING__21;
L_RAW_STRING__21=arguments[0];
TMP_26=lisp.values1(L_RAW_STRING__21).toUpperCase(L_RAW_STRING__21);
return TMP_26;
});
CL_SYSTEM_RAW_STRING_UPCASE=lisp.values1(F_RAW_STRING_UPCASE_24);
let F_RAW_STRING_DOWNCASE_27;
F_RAW_STRING_DOWNCASE_27=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_28, arguments.length);
}
let TMP_29;
let L_RAW_STRING__23;
L_RAW_STRING__23=arguments[0];
TMP_29=lisp.values1(L_RAW_STRING__23).toLowerCase(L_RAW_STRING__23);
return TMP_29;
});
CL_SYSTEM_RAW_STRING_DOWNCASE=lisp.values1(F_RAW_STRING_DOWNCASE_27);
let F_NUMBER_TO_RAW_STRING_30;
F_NUMBER_TO_RAW_STRING_30=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_31, arguments.length);
}
let TMP_32;
let L_NUMBER__25;
L_NUMBER__25=arguments[0];
TMP_32=String(L_NUMBER__25);
return TMP_32;
});
CL_SYSTEM_NUMBER_TO_RAW_STRING=lisp.values1(F_NUMBER_TO_RAW_STRING_30);
let F_MAKE_RAW_ARRAY_33;
F_MAKE_RAW_ARRAY_33=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_34, arguments.length);
}
let TMP_35;
let L_SIZE__27;
L_SIZE__27=arguments[0];
TMP_35=new Array(L_SIZE__27);
return lisp.values1(TMP_35);
});
CL_SYSTEM_MAKE_RAW_ARRAY=lisp.values1(F_MAKE_RAW_ARRAY_33);
let F_RAW_ARRAY_LENGTH_36;
F_RAW_ARRAY_LENGTH_36=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_37, arguments.length);
}
let L_RAW_ARRAY__29;
L_RAW_ARRAY__29=arguments[0];
return lisp.values1(lisp.values1(L_RAW_ARRAY__29).length);
});
CL_SYSTEM_RAW_ARRAY_LENGTH=lisp.values1(F_RAW_ARRAY_LENGTH_36);
let F_RAW_ARRAY_REF_38;
F_RAW_ARRAY_REF_38=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_39, arguments.length);
}
let L_INDEX__32;
let L_RAW_ARRAY__31;
L_RAW_ARRAY__31=arguments[0];
L_INDEX__32=arguments[1];
return lisp.values1(lisp.values1(L_RAW_ARRAY__31)[lisp.values1(L_INDEX__32)]);
});
CL_SYSTEM_RAW_ARRAY_REF=lisp.values1(F_RAW_ARRAY_REF_38);
let F_RAW_ARRAY_SET_40;
F_RAW_ARRAY_SET_40=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_41, arguments.length);
}
let L_VALUE__36;
let L_INDEX__35;
let L_RAW_ARRAY__34;
L_RAW_ARRAY__34=arguments[0];
L_INDEX__35=arguments[1];
L_VALUE__36=arguments[2];
lisp.values1(L_RAW_ARRAY__34)[lisp.values1(L_INDEX__35)]=lisp.values1(L_VALUE__36);
return lisp.values1(lisp.values1(L_VALUE__36));
});
CL_SYSTEM_RAW_ARRAY_SET=lisp.values1(F_RAW_ARRAY_SET_40);
let F_FILL_RAW_ARRAY_42;
F_FILL_RAW_ARRAY_42=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_43, arguments.length);
}
let TMP_44;
let L_ELEMENT__39;
let L_RAW_ARRAY__38;
L_RAW_ARRAY__38=arguments[0];
L_ELEMENT__39=arguments[1];
TMP_44=lisp.values1(L_RAW_ARRAY__38).fill(L_ELEMENT__39);
return TMP_44;
});
CL_SYSTEM_FILL_RAW_ARRAY=lisp.values1(F_FILL_RAW_ARRAY_42);
let F_MAKE_MAP_45;
F_MAKE_MAP_45=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_46, arguments.length);
}
let TMP_47;
TMP_47=new Map;
return lisp.values1(TMP_47);
});
CL_SYSTEM_MAKE_MAP=lisp.values1(F_MAKE_MAP_45);
let F_MAP_GET_48;
F_MAP_GET_48=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_49, arguments.length);
}
let TMP_54;
let TMP_52;
let TMP_51;
let L_VALUE__45;
let TMP_50;
let L_KEY__43;
let L_MAP__42;
L_MAP__42=arguments[0];
L_KEY__43=arguments[1];
{
TMP_50=lisp.values1(L_MAP__42).get(L_KEY__43);
L_VALUE__45=lisp.values1(TMP_50);
TMP_51=lisp.CL_eq(L_VALUE__45,undefined);
if(lisp.values1(TMP_51) !== lisp.S_nil){
TMP_52=lisp.values1(lisp.S_nil);
}else{
TMP_52=lisp.values1(G_53);
}
TMP_54=lisp.CL_values(L_VALUE__45,TMP_52);
}
return TMP_54;
});
CL_SYSTEM_MAP_GET=lisp.values1(F_MAP_GET_48);
let F_MAP_SET_55;
F_MAP_SET_55=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_56, arguments.length);
}
let TMP_57;
let L_VALUE__48;
let L_KEY__47;
let L_MAP__46;
L_MAP__46=arguments[0];
L_KEY__47=arguments[1];
L_VALUE__48=arguments[2];
TMP_57=lisp.values1(L_MAP__46).set(L_KEY__47,L_VALUE__48);
return TMP_57;
});
CL_SYSTEM_MAP_SET=lisp.values1(F_MAP_SET_55);
let F_MAP_REMOVE_58;
F_MAP_REMOVE_58=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_59, arguments.length);
}
let TMP_60;
let L_KEY__51;
let L_MAP__50;
L_MAP__50=arguments[0];
L_KEY__51=arguments[1];
TMP_60=lisp.values1(L_MAP__50).delete(L_KEY__51);
return TMP_60;
});
CL_SYSTEM_MAP_REMOVE=lisp.values1(F_MAP_REMOVE_58);
let F_MAP_LENGTH_61;
F_MAP_LENGTH_61=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_62, arguments.length);
}
let L_MAP__53;
L_MAP__53=arguments[0];
return lisp.values1(lisp.values1(L_MAP__53).size);
});
CL_SYSTEM_MAP_LENGTH=lisp.values1(F_MAP_LENGTH_61);
let F_MAP_CLEAR_63;
F_MAP_CLEAR_63=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_64, arguments.length);
}
let TMP_65;
let L_MAP__55;
L_MAP__55=arguments[0];
TMP_65=lisp.values1(L_MAP__55).clear();
return TMP_65;
});
CL_SYSTEM_MAP_CLEAR=lisp.values1(F_MAP_CLEAR_63);
let F_FUNCTION_NAME_66;
F_FUNCTION_NAME_66=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_67, arguments.length);
}
let TMP_71;
let TMP_70;
let TMP_69;
let TMP_68;
let L_NAME__59;
let L_FUNCTION__57;
L_FUNCTION__57=arguments[0];
{
L_NAME__59=lisp.values1(lisp.values1(L_FUNCTION__57).lisp_name);
TMP_68=(typeof lisp.values1(L_NAME__59));
TMP_69=lisp.CL_eq(TMP_68,lisp.codeArrayToString([115, 116, 114, 105, 110, 103]));
if(lisp.values1(TMP_69) !== lisp.S_nil){
TMP_71=lisp.callFunctionWithCallStack(G_72,L_NAME__59);
TMP_70=TMP_71;
}else{
TMP_70=lisp.values1(lisp.S_nil);
}
}
return TMP_70;
});
CL_SYSTEM_FUNCTION_NAME=lisp.values1(F_FUNCTION_NAME_66);
let F_UNKNOWN_OBJECT_TO_STRING_73;
F_UNKNOWN_OBJECT_TO_STRING_73=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_74, arguments.length);
}
let TMP_77;
let TMP_76;
let L_OBJECT__62;
let TMP_75;
let L_OBJECT__60;
L_OBJECT__60=arguments[0];
{
TMP_75=lisp.callFunctionWithCallStack(G_72,L_OBJECT__60);
L_OBJECT__62=lisp.values1(TMP_75);
TMP_76=String(L_OBJECT__62);
TMP_77=lisp.callFunctionWithCallStack(G_72,TMP_76);
}
return TMP_77;
});
CL_SYSTEM_UNKNOWN_OBJECT_TO_STRING=lisp.values1(F_UNKNOWN_OBJECT_TO_STRING_73);
let F_READ_WHOLE_FILE_78;
F_READ_WHOLE_FILE_78=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_79, arguments.length);
}
let TMP_84;
let TMP_83;
let TMP_80;
let L_FILENAME__63;
L_FILENAME__63=arguments[0];
TMP_80=lisp.callFunctionWithCallStack(G_81,L_FILENAME__63);
TMP_83=lisp.callFunctionWithCallStack(G_81,G_82.func(lisp.codeArrayToString([117, 116, 102, 45, 56])));
TMP_84=fs.readFileSync(TMP_80,TMP_83);
return TMP_84;
});
CL_SYSTEM_READ_WHOLE_FILE=lisp.values1(F_READ_WHOLE_FILE_78);
let F_WRITE_RAW_STRING_TO_STDOUT_85;
F_WRITE_RAW_STRING_TO_STDOUT_85=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_86, arguments.length);
}
let TMP_87;
let L_RAW_STRING__65;
L_RAW_STRING__65=arguments[0];
TMP_87=process.stdout.write(L_RAW_STRING__65);
return TMP_87;
});
CL_SYSTEM_WRITE_RAW_STRING_TO_STDOUT=lisp.values1(F_WRITE_RAW_STRING_TO_STDOUT_85);
let F_RANDOM_88;
F_RANDOM_88=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_89, arguments.length);
}
let TMP_94;
let TMP_92;
let TMP_91;
let TMP_90;
let L_N__67;
L_N__67=arguments[0];
TMP_90=Math.random();
TMP_91=Math.floor(L_N__67);
TMP_92=lisp.callFunctionWithCallStack(G_93,TMP_90,TMP_91);
TMP_94=Math.floor(TMP_92);
return TMP_94;
});
CL_SYSTEM_RANDOM=lisp.values1(F_RANDOM_88);
// initialize symbols
G_2 = lisp.intern('+NULL+', 'SYSTEM');
G_4 = lisp.intern('MAKE-RAW-STRING', 'SYSTEM');
G_7 = lisp.intern('EXPAND-RAW-STRING', 'SYSTEM');
G_10 = lisp.intern('CODE-TO-RAW-STRING', 'SYSTEM');
G_13 = lisp.intern('SUB-RAW-STRING/2', 'SYSTEM');
G_16 = lisp.intern('SUB-RAW-STRING/3', 'SYSTEM');
G_19 = lisp.intern('CONCAT-RAW-STRING/2', 'SYSTEM');
G_22 = lisp.intern('CONCAT-RAW-STRING/3', 'SYSTEM');
G_25 = lisp.intern('RAW-STRING-UPCASE', 'SYSTEM');
G_28 = lisp.intern('RAW-STRING-DOWNCASE', 'SYSTEM');
G_31 = lisp.intern('NUMBER-TO-RAW-STRING', 'SYSTEM');
G_34 = lisp.intern('MAKE-RAW-ARRAY', 'SYSTEM');
G_37 = lisp.intern('RAW-ARRAY-LENGTH', 'SYSTEM');
G_39 = lisp.intern('RAW-ARRAY-REF', 'SYSTEM');
G_41 = lisp.intern('RAW-ARRAY-SET', 'SYSTEM');
G_43 = lisp.intern('FILL-RAW-ARRAY', 'SYSTEM');
G_46 = lisp.intern('MAKE-MAP', 'SYSTEM');
G_49 = lisp.intern('MAP-GET', 'SYSTEM');
G_53 = lisp.intern('T', 'COMMON-LISP');
G_56 = lisp.intern('MAP-SET', 'SYSTEM');
G_59 = lisp.intern('MAP-REMOVE', 'SYSTEM');
G_62 = lisp.intern('MAP-LENGTH', 'SYSTEM');
G_64 = lisp.intern('MAP-CLEAR', 'SYSTEM');
G_67 = lisp.intern('FUNCTION-NAME', 'SYSTEM');
G_72 = lisp.intern('JS->CL', 'FFI');
G_74 = lisp.intern('UNKNOWN-OBJECT-TO-STRING', 'SYSTEM');
G_79 = lisp.intern('READ-WHOLE-FILE', 'SYSTEM');
G_81 = lisp.intern('ARRAY-TO-RAW-STRING', 'SYSTEM');
G_82 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_86 = lisp.intern('WRITE-RAW-STRING-TO-STDOUT', 'SYSTEM');
G_89 = lisp.intern('RANDOM', 'SYSTEM');
G_93 = lisp.intern('*', 'COMMON-LISP');
G_95 = lisp.intern('SYMBOL-MACRO', 'COMPILER');
G_96 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_SYSTEM_MAKE_RAW_STRING.lisp_name = 'MAKE-RAW-STRING'
lisp.setSymbolFunction(G_4, CL_SYSTEM_MAKE_RAW_STRING);
CL_SYSTEM_EXPAND_RAW_STRING.lisp_name = 'EXPAND-RAW-STRING'
lisp.setSymbolFunction(G_7, CL_SYSTEM_EXPAND_RAW_STRING);
CL_SYSTEM_CODE_TO_RAW_STRING.lisp_name = 'CODE-TO-RAW-STRING'
lisp.setSymbolFunction(G_10, CL_SYSTEM_CODE_TO_RAW_STRING);
CL_SYSTEM_SUB_RAW_STRINGSLASH2.lisp_name = 'SUB-RAW-STRING/2'
lisp.setSymbolFunction(G_13, CL_SYSTEM_SUB_RAW_STRINGSLASH2);
CL_SYSTEM_SUB_RAW_STRINGSLASH3.lisp_name = 'SUB-RAW-STRING/3'
lisp.setSymbolFunction(G_16, CL_SYSTEM_SUB_RAW_STRINGSLASH3);
CL_SYSTEM_CONCAT_RAW_STRINGSLASH2.lisp_name = 'CONCAT-RAW-STRING/2'
lisp.setSymbolFunction(G_19, CL_SYSTEM_CONCAT_RAW_STRINGSLASH2);
CL_SYSTEM_CONCAT_RAW_STRINGSLASH3.lisp_name = 'CONCAT-RAW-STRING/3'
lisp.setSymbolFunction(G_22, CL_SYSTEM_CONCAT_RAW_STRINGSLASH3);
CL_SYSTEM_RAW_STRING_UPCASE.lisp_name = 'RAW-STRING-UPCASE'
lisp.setSymbolFunction(G_25, CL_SYSTEM_RAW_STRING_UPCASE);
CL_SYSTEM_RAW_STRING_DOWNCASE.lisp_name = 'RAW-STRING-DOWNCASE'
lisp.setSymbolFunction(G_28, CL_SYSTEM_RAW_STRING_DOWNCASE);
CL_SYSTEM_NUMBER_TO_RAW_STRING.lisp_name = 'NUMBER-TO-RAW-STRING'
lisp.setSymbolFunction(G_31, CL_SYSTEM_NUMBER_TO_RAW_STRING);
CL_SYSTEM_MAKE_RAW_ARRAY.lisp_name = 'MAKE-RAW-ARRAY'
lisp.setSymbolFunction(G_34, CL_SYSTEM_MAKE_RAW_ARRAY);
CL_SYSTEM_RAW_ARRAY_LENGTH.lisp_name = 'RAW-ARRAY-LENGTH'
lisp.setSymbolFunction(G_37, CL_SYSTEM_RAW_ARRAY_LENGTH);
CL_SYSTEM_RAW_ARRAY_REF.lisp_name = 'RAW-ARRAY-REF'
lisp.setSymbolFunction(G_39, CL_SYSTEM_RAW_ARRAY_REF);
CL_SYSTEM_RAW_ARRAY_SET.lisp_name = 'RAW-ARRAY-SET'
lisp.setSymbolFunction(G_41, CL_SYSTEM_RAW_ARRAY_SET);
CL_SYSTEM_FILL_RAW_ARRAY.lisp_name = 'FILL-RAW-ARRAY'
lisp.setSymbolFunction(G_43, CL_SYSTEM_FILL_RAW_ARRAY);
CL_SYSTEM_MAKE_MAP.lisp_name = 'MAKE-MAP'
lisp.setSymbolFunction(G_46, CL_SYSTEM_MAKE_MAP);
CL_SYSTEM_MAP_GET.lisp_name = 'MAP-GET'
lisp.setSymbolFunction(G_49, CL_SYSTEM_MAP_GET);
CL_SYSTEM_MAP_SET.lisp_name = 'MAP-SET'
lisp.setSymbolFunction(G_56, CL_SYSTEM_MAP_SET);
CL_SYSTEM_MAP_REMOVE.lisp_name = 'MAP-REMOVE'
lisp.setSymbolFunction(G_59, CL_SYSTEM_MAP_REMOVE);
CL_SYSTEM_MAP_LENGTH.lisp_name = 'MAP-LENGTH'
lisp.setSymbolFunction(G_62, CL_SYSTEM_MAP_LENGTH);
CL_SYSTEM_MAP_CLEAR.lisp_name = 'MAP-CLEAR'
lisp.setSymbolFunction(G_64, CL_SYSTEM_MAP_CLEAR);
CL_SYSTEM_FUNCTION_NAME.lisp_name = 'FUNCTION-NAME'
lisp.setSymbolFunction(G_67, CL_SYSTEM_FUNCTION_NAME);
CL_SYSTEM_UNKNOWN_OBJECT_TO_STRING.lisp_name = 'UNKNOWN-OBJECT-TO-STRING'
lisp.setSymbolFunction(G_74, CL_SYSTEM_UNKNOWN_OBJECT_TO_STRING);
CL_SYSTEM_READ_WHOLE_FILE.lisp_name = 'READ-WHOLE-FILE'
lisp.setSymbolFunction(G_79, CL_SYSTEM_READ_WHOLE_FILE);
CL_SYSTEM_WRITE_RAW_STRING_TO_STDOUT.lisp_name = 'WRITE-RAW-STRING-TO-STDOUT'
lisp.setSymbolFunction(G_86, CL_SYSTEM_WRITE_RAW_STRING_TO_STDOUT);
CL_SYSTEM_RANDOM.lisp_name = 'RANDOM'
lisp.setSymbolFunction(G_89, CL_SYSTEM_RANDOM);
lisp.CL_put(G_2,G_95,null);
}catch(TMP_1){G_96.func();
console.log(TMP_1.message);
}


/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
__webpack_require__(17);
__webpack_require__(18);
__webpack_require__(24);
__webpack_require__(25);
__webpack_require__(26);
__webpack_require__(27);
__webpack_require__(28);
__webpack_require__(29);
__webpack_require__(30);
__webpack_require__(31);
__webpack_require__(32);
__webpack_require__(33);
__webpack_require__(34);
__webpack_require__(35);
__webpack_require__(36);
__webpack_require__(37);
__webpack_require__(38);
__webpack_require__(39);
__webpack_require__(40);
__webpack_require__(41);
__webpack_require__(42);
__webpack_require__(43);
__webpack_require__(44);
__webpack_require__(45);
__webpack_require__(46);
__webpack_require__(47);
__webpack_require__(48);
__webpack_require__(49);
__webpack_require__(50);
__webpack_require__(51);


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_5;
let G_6;
let G_7;
let G_8;
let G_9;
let G_10;
let G_11;
let G_12;
let G_13;
let G_14;
let G_16;
let G_17;
let G_18;
let TMP_15;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('MOST-POSITIVE-FIXNUM', 'COMMON-LISP');
G_3 = lisp.intern('CONSTANT', 'COMPILER');
G_4 = lisp.intern('T', 'COMMON-LISP');
G_5 = lisp.intern('LAMBDA-LIST-KEYWORDS', 'COMMON-LISP');
G_6 = lisp.intern('&ALLOW-OTHER-KEYS', 'COMMON-LISP');
G_7 = lisp.intern('&AUX', 'COMMON-LISP');
G_8 = lisp.intern('&BODY', 'COMMON-LISP');
G_9 = lisp.intern('&ENVIRONMENT', 'COMMON-LISP');
G_10 = lisp.intern('&KEY', 'COMMON-LISP');
G_11 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_12 = lisp.intern('&REST', 'COMMON-LISP');
G_13 = lisp.intern('&WHOLE', 'COMMON-LISP');
G_14 = lisp.intern('*FEATURES*', 'COMMON-LISP');
G_16 = lisp.intern('VALTAN', 'KEYWORD');
G_17 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_18 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');lisp.CL_set(G_2,4294967296);
lisp.CL_put(G_2,G_3,G_4);
lisp.CL_set(G_5,lisp.makeCons(G_6, lisp.makeCons(G_7, lisp.makeCons(G_8, lisp.makeCons(G_9, lisp.makeCons(G_10, lisp.makeCons(G_11, lisp.makeCons(G_12, lisp.makeCons(G_13, lisp.S_nil)))))))));
lisp.CL_put(G_5,G_3,G_4);
TMP_15=lisp.CL_boundp(G_14);
if(lisp.values1(TMP_15) !== lisp.S_nil){
}else{
lisp.CL_set(G_14,lisp.makeCons(G_16, lisp.S_nil));
}
lisp.CL_put(G_14,G_17,G_4);
}catch(TMP_1){G_18.func();
console.log(TMP_1.message);
}


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_5;
let G_6;
let G_7;
let G_8;
let G_10;
let G_12;
let G_13;
let G_14;
let G_15;
let G_16;
let G_17;
let G_18;
let G_19;
let G_20;
let G_22;
let G_28;
let G_30;
let G_31;
let G_32;
let G_33;
let G_34;
let G_36;
let G_42;
let G_45;
let G_51;
let G_56;
let G_60;
let G_65;
let G_67;
let G_72;
let G_75;
let G_79;
let G_81;
let G_85;
let G_88;
let G_94;
let G_116;
let G_118;
let G_123;
let G_139;
let G_143;
let G_145;
let G_147;
let G_149;
let G_151;
let G_154;
let G_157;
let G_159;
let G_162;
let G_164;
let G_166;
let G_170;
let G_173;
let G_175;
let G_176;
let G_180;
let G_182;
let G_185;
let G_224;
let G_231;
let G_232;
let G_233;
let G_237;
let G_240;
let G_242;
let G_248;
let G_251;
let G_255;
let G_258;
let G_260;
let G_273;
let G_278;
let G_288;
let G_297;
let G_363;
let G_379;
let G_392;
let G_400;
let G_402;
let G_403;
let G_446;
let G_457;
let G_458;
let G_462;
let G_470;
let G_473;
let G_475;
let G_480;
let G_485;
let G_521;
let CL_COMMON_LISP_CONSTANTLY;
let CL_COMMON_LISP_COMPLEMENT;
let CL_COMMON_LISP_IDENTITY;
let CL_COMMON_LISP_EQUALP;
let CL_COMMON_LISP_EQUAL;
let CL_COMMON_LISP_EQL;
let CL_COMMON_LISP_ENSURE_FUNCTION;
let CL_COMMON_LISP_NOT;
let TMP_514;
let TMP_502;
let TMP_493;
let TMP_491;
let TMP_467;
let TMP_455;
let TMP_418;
let TMP_387;
let TMP_354;
let TMP_335;
let TMP_299;
let TMP_270;
let TMP_221;
let TMP_218;
let TMP_215;
let TMP_203;
let TMP_192;
let TMP_168;
let TMP_165;
let TMP_160;
// toplevel defun
let F_NOT_9;
F_NOT_9=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_10, arguments.length);
}
let TMP_11;
let L_X__1;
L_X__1=arguments[0];
if(lisp.values1(L_X__1) !== lisp.S_nil){
TMP_11=lisp.values1(lisp.S_nil);
}else{
TMP_11=lisp.values1(G_12);
}
return TMP_11;
});
CL_COMMON_LISP_NOT=lisp.values1(F_NOT_9);
let F_ENSURE_FUNCTION_21;
F_ENSURE_FUNCTION_21=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_22, arguments.length);
}
let TMP_29;
let TMP_27;
let TMP_26;
let L_G1__6;
let TMP_25;
let TMP_24;
let L_G0__5;
let TMP_23;
let L_VALUE__3;
L_VALUE__3=arguments[0];
{
TMP_23=lisp.CL_functionp(L_VALUE__3);
L_G0__5=lisp.values1(TMP_23);
if(lisp.values1(L_G0__5) !== lisp.S_nil){
TMP_24=lisp.values1(L_VALUE__3);
}else{
{
TMP_25=lisp.CL_symbolp(L_VALUE__3);
L_G1__6=lisp.values1(TMP_25);
if(lisp.values1(L_G1__6) !== lisp.S_nil){
TMP_27=lisp.CL_symbolFunction(L_VALUE__3);
TMP_26=TMP_27;
}else{
TMP_29=lisp.callFunctionWithCallStack(G_30,L_VALUE__3,G_28);
TMP_26=TMP_29;
}
}
TMP_24=TMP_26;
}
}
return TMP_24;
});
CL_COMMON_LISP_ENSURE_FUNCTION=lisp.values1(F_ENSURE_FUNCTION_21);
let F_EQL_35;
F_EQL_35=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_36, arguments.length);
}
let TMP_43;
let TMP_41;
let TMP_40;
let L_G3__11;
let TMP_39;
let TMP_38;
let TMP_37;
let L_Y__9;
let L_X__8;
L_X__8=arguments[0];
L_Y__9=arguments[1];
{
TMP_37=lisp.CL_characterp(L_X__8);
if(lisp.values1(TMP_37) !== lisp.S_nil){
TMP_39=lisp.CL_characterp(L_Y__9);
TMP_38=lisp.values1(TMP_39);
}else{
TMP_38=lisp.values1(lisp.S_nil);
}
L_G3__11=lisp.values1(TMP_38);
if(lisp.values1(L_G3__11) !== lisp.S_nil){
TMP_41=lisp.callFunctionWithCallStack(G_42,L_X__8,L_Y__9);
TMP_40=TMP_41;
}else{
TMP_43=lisp.CL_eq(L_X__8,L_Y__9);
TMP_40=TMP_43;
}
}
return TMP_40;
});
CL_COMMON_LISP_EQL=lisp.values1(F_EQL_35);
let F_EQUAL_44;
F_EQUAL_44=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_45, arguments.length);
}
let TMP_86;
let L_G15__22;
let TMP_84;
let TMP_83;
let TMP_82;
let TMP_80;
let TMP_78;
let L_I__21;
let BLOCK_RESULT_NIL__20;
let L_G8__19;
let TMP_77;
let TMP_76;
let TMP_74;
let TMP_73;
let TMP_71;
let TMP_70;
let L_G7__18;
let TMP_69;
let TMP_68;
let TMP_66;
let TMP_64;
let TMP_63;
let L_G6__17;
let TMP_62;
let TMP_61;
let TMP_59;
let TMP_58;
let TMP_57;
let TMP_55;
let TMP_54;
let TMP_53;
let TMP_52;
let TMP_50;
let TMP_49;
let L_G5__16;
let TMP_48;
let TMP_47;
let TMP_46;
let L_Y__14;
let L_X__13;
L_X__13=arguments[0];
L_Y__14=arguments[1];
{
TMP_46=lisp.CL_consp(L_X__13);
if(lisp.values1(TMP_46) !== lisp.S_nil){
TMP_48=lisp.CL_consp(L_Y__14);
TMP_47=lisp.values1(TMP_48);
}else{
TMP_47=lisp.values1(lisp.S_nil);
}
L_G5__16=lisp.values1(TMP_47);
if(lisp.values1(L_G5__16) !== lisp.S_nil){
TMP_50=lisp.callFunctionWithCallStack(G_51,L_X__13);
TMP_52=lisp.callFunctionWithCallStack(G_51,L_Y__14);
TMP_53=G_45.func(TMP_50,TMP_52);
if(lisp.values1(TMP_53) !== lisp.S_nil){
TMP_55=lisp.callFunctionWithCallStack(G_56,L_X__13);
TMP_57=lisp.callFunctionWithCallStack(G_56,L_Y__14);
TMP_58=G_45.func(TMP_55,TMP_57);
TMP_54=TMP_58;
}else{
TMP_54=lisp.values1(lisp.S_nil);
}
TMP_49=TMP_54;
}else{
{
TMP_59=lisp.callFunctionWithCallStack(G_60,L_X__13);
if(lisp.values1(TMP_59) !== lisp.S_nil){
TMP_62=lisp.callFunctionWithCallStack(G_60,L_Y__14);
TMP_61=lisp.values1(TMP_62);
}else{
TMP_61=lisp.values1(lisp.S_nil);
}
L_G6__17=lisp.values1(TMP_61);
if(lisp.values1(L_G6__17) !== lisp.S_nil){
TMP_64=lisp.callFunctionWithCallStack(G_65,L_X__13,L_Y__14);
TMP_63=TMP_64;
}else{
{
TMP_66=lisp.callFunctionWithCallStack(G_67,L_X__13);
if(lisp.values1(TMP_66) !== lisp.S_nil){
TMP_69=lisp.callFunctionWithCallStack(G_67,L_Y__14);
TMP_68=lisp.values1(TMP_69);
}else{
TMP_68=lisp.values1(lisp.S_nil);
}
L_G7__18=lisp.values1(TMP_68);
if(lisp.values1(L_G7__18) !== lisp.S_nil){
TMP_71=lisp.callFunctionWithCallStack(G_72,L_X__13);
TMP_73=lisp.callFunctionWithCallStack(G_72,L_Y__14);
TMP_74=lisp.callFunctionWithCallStack(G_75,TMP_71,TMP_73);
if(lisp.values1(TMP_74) !== lisp.S_nil){
{
TMP_77=lisp.callFunctionWithCallStack(G_72,L_X__13);
L_G8__19=lisp.values1(TMP_77);
BLOCK_NIL__20: for(;;){{
L_I__21=lisp.values1(0);
for(;;){
TMP_78=lisp.callFunctionWithCallStack(G_79,L_I__21,L_G8__19);
if(lisp.values1(TMP_78) !== lisp.S_nil){
BLOCK_RESULT_NIL__20=lisp.values1(G_12);
break BLOCK_NIL__20;
}else{
TMP_80=lisp.callFunctionWithCallStack(G_81,L_X__13,L_I__21);
TMP_82=lisp.callFunctionWithCallStack(G_81,L_Y__14,L_I__21);
TMP_83=G_36.func(TMP_80,TMP_82);
if(lisp.values1(TMP_83) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__20=lisp.values1(lisp.S_nil);
break BLOCK_NIL__20;
}
{
TMP_84=lisp.callFunctionWithCallStack(G_85,L_I__21,1);
L_G15__22=lisp.values1(TMP_84);
L_I__21=lisp.values1(L_G15__22);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__20=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_76=BLOCK_RESULT_NIL__20;
}else{
TMP_76=lisp.values1(lisp.S_nil);
}
TMP_70=TMP_76;
}else{
TMP_86=G_36.func(L_X__13,L_Y__14);
TMP_70=TMP_86;
}
}
TMP_63=TMP_70;
}
}
TMP_49=TMP_63;
}
}
return TMP_49;
});
CL_COMMON_LISP_EQUAL=lisp.values1(F_EQUAL_44);
let F_EQUALP_87;
F_EQUALP_87=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_88, arguments.length);
}
let TMP_146;
let TMP_144;
let TMP_142;
let L_G31__37;
let TMP_141;
let TMP_140;
let TMP_138;
let L_G30__36;
let TMP_137;
let TMP_136;
let TMP_135;
let TMP_134;
let TMP_133;
let L_I__35;
let BLOCK_RESULT_NIL__34;
let L_G23__33;
let TMP_132;
let TMP_131;
let TMP_130;
let TMP_129;
let TMP_128;
let TMP_127;
let L_G22__32;
let TMP_126;
let TMP_125;
let TMP_124;
let TMP_122;
let TMP_121;
let L_G21__31;
let TMP_120;
let TMP_119;
let TMP_117;
let TMP_115;
let TMP_114;
let L_G20__30;
let TMP_113;
let TMP_112;
let TMP_111;
let TMP_110;
let TMP_109;
let TMP_108;
let TMP_107;
let TMP_106;
let TMP_105;
let TMP_104;
let TMP_103;
let L_G19__29;
let TMP_102;
let TMP_101;
let TMP_100;
let TMP_99;
let TMP_98;
let L_G18__28;
let TMP_97;
let TMP_96;
let TMP_95;
let TMP_93;
let TMP_92;
let L_G17__27;
let TMP_91;
let TMP_90;
let TMP_89;
let L_Y__25;
let L_X__24;
L_X__24=arguments[0];
L_Y__25=arguments[1];
{
TMP_89=lisp.CL_characterp(L_X__24);
if(lisp.values1(TMP_89) !== lisp.S_nil){
TMP_91=lisp.CL_characterp(L_Y__25);
TMP_90=lisp.values1(TMP_91);
}else{
TMP_90=lisp.values1(lisp.S_nil);
}
L_G17__27=lisp.values1(TMP_90);
if(lisp.values1(L_G17__27) !== lisp.S_nil){
TMP_93=lisp.callFunctionWithCallStack(G_94,L_X__24,L_Y__25);
TMP_92=TMP_93;
}else{
{
TMP_95=lisp.CL_numberp(L_X__24);
if(lisp.values1(TMP_95) !== lisp.S_nil){
TMP_97=lisp.CL_numberp(L_Y__25);
TMP_96=lisp.values1(TMP_97);
}else{
TMP_96=lisp.values1(lisp.S_nil);
}
L_G18__28=lisp.values1(TMP_96);
if(lisp.values1(L_G18__28) !== lisp.S_nil){
TMP_99=lisp.callFunctionWithCallStack(G_75,L_X__24,L_Y__25);
TMP_98=TMP_99;
}else{
{
TMP_100=lisp.CL_consp(L_X__24);
if(lisp.values1(TMP_100) !== lisp.S_nil){
TMP_102=lisp.CL_consp(L_Y__25);
TMP_101=lisp.values1(TMP_102);
}else{
TMP_101=lisp.values1(lisp.S_nil);
}
L_G19__29=lisp.values1(TMP_101);
if(lisp.values1(L_G19__29) !== lisp.S_nil){
TMP_104=lisp.callFunctionWithCallStack(G_51,L_X__24);
TMP_105=lisp.callFunctionWithCallStack(G_51,L_Y__25);
TMP_106=G_88.func(TMP_104,TMP_105);
if(lisp.values1(TMP_106) !== lisp.S_nil){
TMP_108=lisp.callFunctionWithCallStack(G_56,L_X__24);
TMP_109=lisp.callFunctionWithCallStack(G_56,L_Y__25);
TMP_110=G_88.func(TMP_108,TMP_109);
TMP_107=TMP_110;
}else{
TMP_107=lisp.values1(lisp.S_nil);
}
TMP_103=TMP_107;
}else{
{
TMP_111=lisp.callFunctionWithCallStack(G_60,L_X__24);
if(lisp.values1(TMP_111) !== lisp.S_nil){
TMP_113=lisp.callFunctionWithCallStack(G_60,L_Y__25);
TMP_112=lisp.values1(TMP_113);
}else{
TMP_112=lisp.values1(lisp.S_nil);
}
L_G20__30=lisp.values1(TMP_112);
if(lisp.values1(L_G20__30) !== lisp.S_nil){
TMP_115=lisp.callFunctionWithCallStack(G_116,L_X__24,L_Y__25);
TMP_114=TMP_115;
}else{
{
TMP_117=lisp.callFunctionWithCallStack(G_118,L_X__24);
if(lisp.values1(TMP_117) !== lisp.S_nil){
TMP_120=lisp.callFunctionWithCallStack(G_118,L_Y__25);
TMP_119=lisp.values1(TMP_120);
}else{
TMP_119=lisp.values1(lisp.S_nil);
}
L_G21__31=lisp.values1(TMP_119);
if(lisp.values1(L_G21__31) !== lisp.S_nil){
TMP_122=lisp.callFunctionWithCallStack(G_123,L_X__24,L_Y__25);
TMP_121=TMP_122;
}else{
{
TMP_124=lisp.CL_structurep(L_X__24);
if(lisp.values1(TMP_124) !== lisp.S_nil){
TMP_126=lisp.CL_structurep(L_Y__25);
TMP_125=lisp.values1(TMP_126);
}else{
TMP_125=lisp.values1(lisp.S_nil);
}
L_G22__32=lisp.values1(TMP_125);
if(lisp.values1(L_G22__32) !== lisp.S_nil){
TMP_128=lisp.CL_structureName(L_X__24);
TMP_129=lisp.CL_structureName(L_Y__25);
TMP_130=lisp.CL_eq(TMP_128,TMP_129);
if(lisp.values1(TMP_130) !== lisp.S_nil){
{
TMP_132=lisp.CL_structureSlotCount(L_X__24);
L_G23__33=lisp.values1(TMP_132);
BLOCK_NIL__34: for(;;){{
L_I__35=lisp.values1(0);
for(;;){
TMP_133=lisp.callFunctionWithCallStack(G_79,L_I__35,L_G23__33);
if(lisp.values1(TMP_133) !== lisp.S_nil){
BLOCK_RESULT_NIL__34=lisp.values1(G_12);
break BLOCK_NIL__34;
}else{
TMP_134=lisp.CL_structureRef(L_X__24,L_I__35);
TMP_135=lisp.CL_structureRef(L_Y__25,L_I__35);
TMP_136=G_88.func(TMP_134,TMP_135);
if(lisp.values1(TMP_136) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__34=lisp.values1(lisp.S_nil);
break BLOCK_NIL__34;
}
{
TMP_137=lisp.callFunctionWithCallStack(G_85,L_I__35,1);
L_G30__36=lisp.values1(TMP_137);
L_I__35=lisp.values1(L_G30__36);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__34=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_131=BLOCK_RESULT_NIL__34;
}else{
TMP_131=lisp.values1(lisp.S_nil);
}
TMP_127=TMP_131;
}else{
{
TMP_138=lisp.callFunctionWithCallStack(G_139,L_X__24);
if(lisp.values1(TMP_138) !== lisp.S_nil){
TMP_141=lisp.callFunctionWithCallStack(G_139,L_Y__25);
TMP_140=lisp.values1(TMP_141);
}else{
TMP_140=lisp.values1(lisp.S_nil);
}
L_G31__37=lisp.values1(TMP_140);
if(lisp.values1(L_G31__37) !== lisp.S_nil){
TMP_144=lisp.callFunctionWithCallStack(G_145,G_143.func(lisp.codeArrayToString([116, 114, 97, 112])));
TMP_142=TMP_144;
}else{
TMP_146=G_36.func(L_X__24,L_Y__25);
TMP_142=TMP_146;
}
}
TMP_127=TMP_142;
}
}
TMP_121=TMP_127;
}
}
TMP_114=TMP_121;
}
}
TMP_103=TMP_114;
}
}
TMP_98=TMP_103;
}
}
TMP_92=TMP_98;
}
}
return TMP_92;
});
CL_COMMON_LISP_EQUALP=lisp.values1(F_EQUALP_87);
let F_IDENTITY_148;
F_IDENTITY_148=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_149, arguments.length);
}
let L_X__39;
L_X__39=arguments[0];
return lisp.values1(L_X__39);
});
CL_COMMON_LISP_IDENTITY=lisp.values1(F_IDENTITY_148);
let F_COMPLEMENT_150;
F_COMPLEMENT_150=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_151, arguments.length);
}
let TMP_152;
let L_FUNCTION__41;
L_FUNCTION__41=arguments[0];
TMP_152=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_155;
let TMP_153;
let L_ARGS__43;
L_ARGS__43=lisp.jsArrayToList(arguments, 0);
TMP_153=lisp.callFunctionWithCallStack(G_154,L_FUNCTION__41,L_ARGS__43);
TMP_155=G_10.func(TMP_153);
return TMP_155;
});
return lisp.values1(TMP_152);
});
CL_COMMON_LISP_COMPLEMENT=lisp.values1(F_COMPLEMENT_150);
let F_CONSTANTLY_156;
F_CONSTANTLY_156=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_157, arguments.length);
}
let TMP_158;
let L_VALUE__44;
L_VALUE__44=arguments[0];
TMP_158=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_ARGS__46;
L_ARGS__46=lisp.jsArrayToList(arguments, 0);
return lisp.values1(L_VALUE__44);
});
return lisp.values1(TMP_158);
});
CL_COMMON_LISP_CONSTANTLY=lisp.values1(F_CONSTANTLY_156);
// initialize symbols
G_2 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_3 = lisp.intern('RETURN', 'COMMON-LISP');
G_4 = lisp.intern('COND', 'COMMON-LISP');
G_5 = lisp.intern('OR', 'COMMON-LISP');
G_6 = lisp.intern('AND', 'COMMON-LISP');
G_7 = lisp.intern('WHEN', 'COMMON-LISP');
G_8 = lisp.intern('UNLESS', 'COMMON-LISP');
G_10 = lisp.intern('NOT', 'COMMON-LISP');
G_12 = lisp.intern('T', 'COMMON-LISP');
G_13 = lisp.intern('DO*', 'COMMON-LISP');
G_14 = lisp.intern('PSETQ', 'COMMON-LISP');
G_15 = lisp.intern('DO', 'COMMON-LISP');
G_16 = lisp.intern('DOTIMES', 'COMMON-LISP');
G_17 = lisp.intern('DOLIST', 'COMMON-LISP');
G_18 = lisp.intern('CASE', 'COMMON-LISP');
G_19 = lisp.intern('ECASE', 'COMMON-LISP');
G_20 = lisp.intern('MULTIPLE-VALUE-BIND', 'COMMON-LISP');
G_22 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_28 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_30 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_31 = lisp.intern('MULTIPLE-VALUE-CALL', 'COMMON-LISP');
G_32 = lisp.intern('MULTIPLE-VALUE-LIST', 'COMMON-LISP');
G_33 = lisp.intern('MULTIPLE-VALUE-PROG1', 'COMMON-LISP');
G_34 = lisp.intern('MULTIPLE-VALUE-SETQ', 'COMMON-LISP');
G_36 = lisp.intern('EQL', 'COMMON-LISP');
G_42 = lisp.intern('CHAR=', 'COMMON-LISP');
G_45 = lisp.intern('EQUAL', 'COMMON-LISP');
G_51 = lisp.intern('CAR', 'COMMON-LISP');
G_56 = lisp.intern('CDR', 'COMMON-LISP');
G_60 = lisp.intern('STRINGP', 'COMMON-LISP');
G_65 = lisp.intern('STRING=', 'COMMON-LISP');
G_67 = lisp.intern('SIMPLE-BIT-VECTOR-P', 'COMMON-LISP');
G_72 = lisp.intern('LENGTH', 'COMMON-LISP');
G_75 = lisp.intern('=', 'COMMON-LISP');
G_79 = lisp.intern('>=', 'COMMON-LISP');
G_81 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_85 = lisp.intern('+', 'COMMON-LISP');
G_88 = lisp.intern('EQUALP', 'COMMON-LISP');
G_94 = lisp.intern('CHAR-EQUAL', 'COMMON-LISP');
G_116 = lisp.intern('STRING-EQUAL', 'COMMON-LISP');
G_118 = lisp.intern('ARRAYP', 'COMMON-LISP');
G_123 = lisp.intern('ARRAY-EQUALP', 'COMMON-LISP');
G_139 = lisp.intern('HASH-TABLE-P', 'COMMON-LISP');
G_143 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_145 = lisp.intern('ERROR', 'COMMON-LISP');
G_147 = lisp.intern('PROG1', 'COMMON-LISP');
G_149 = lisp.intern('IDENTITY', 'COMMON-LISP');
G_151 = lisp.intern('COMPLEMENT', 'COMMON-LISP');
G_154 = lisp.intern('APPLY', 'COMMON-LISP');
G_157 = lisp.intern('CONSTANTLY', 'COMMON-LISP');
G_159 = lisp.intern('MACRO', 'COMPILER');
G_162 = lisp.intern('LIST*', 'COMMON-LISP');
G_164 = lisp.intern('LIST', 'COMMON-LISP');
G_166 = lisp.intern('RETURN-FROM', 'COMMON-LISP');
G_170 = lisp.intern('NULL', 'COMMON-LISP');
G_173 = lisp.intern('FIRST', 'COMMON-LISP');
G_175 = lisp.intern('GENSYM', 'COMMON-LISP');
G_176 = lisp.intern('LET', 'COMMON-LISP');
G_180 = lisp.intern('IF', 'COMMON-LISP');
G_182 = lisp.intern('REST', 'COMMON-LISP');
G_185 = lisp.intern('PROGN', 'COMMON-LISP');
G_224 = lisp.intern('PARSE-BODY', 'COMPILER');
G_231 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_232 = lisp.intern('BLOCK', 'COMMON-LISP');
G_233 = lisp.intern('LET*', 'COMMON-LISP');
G_237 = lisp.intern('SECOND', 'COMMON-LISP');
G_240 = lisp.intern('DECLARE', 'COMMON-LISP');
G_242 = lisp.intern('TAGBODY', 'COMMON-LISP');
G_248 = lisp.intern('SETQ', 'COMMON-LISP');
G_251 = lisp.intern('CDDR', 'COMMON-LISP');
G_255 = lisp.intern('THIRD', 'COMMON-LISP');
G_258 = lisp.intern('MAPCAN', 'COMMON-LISP');
G_260 = lisp.intern('GO', 'COMMON-LISP');
G_273 = lisp.intern('ODDP', 'COMMON-LISP');
G_278 = lisp.intern('NIL', 'COMMON-LISP');
G_288 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_297 = lisp.intern('APPEND', 'COMMON-LISP');
G_363 = lisp.intern('ENDP', 'COMMON-LISP');
G_379 = lisp.intern('IGNORABLE', 'COMMON-LISP');
G_392 = lisp.intern('OTHERWISE', 'COMMON-LISP');
G_400 = lisp.intern('LISTP', 'COMMON-LISP');
G_402 = lisp.intern('MEMBER', 'COMMON-LISP');
G_403 = lisp.intern('QUOTE', 'COMMON-LISP');
G_446 = lisp.intern('COPY-LIST', 'COMMON-LISP');
G_457 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_458 = lisp.intern('&REST', 'COMMON-LISP');
G_462 = lisp.intern('IGNORE', 'COMMON-LISP');
G_470 = lisp.intern('MULTIPLE-VALUE-CALL', 'SYSTEM');
G_473 = lisp.intern('ATOM', 'COMMON-LISP');
G_475 = lisp.intern('VALUES', 'COMMON-LISP');
G_480 = lisp.intern('LAST', 'COMMON-LISP');
G_485 = lisp.intern('BUTLAST', 'COMMON-LISP');
G_521 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_NOT.lisp_name = 'NOT'
lisp.setSymbolFunction(G_10, CL_COMMON_LISP_NOT);
CL_COMMON_LISP_ENSURE_FUNCTION.lisp_name = 'ENSURE-FUNCTION'
lisp.setSymbolFunction(G_22, CL_COMMON_LISP_ENSURE_FUNCTION);
CL_COMMON_LISP_EQL.lisp_name = 'EQL'
lisp.setSymbolFunction(G_36, CL_COMMON_LISP_EQL);
CL_COMMON_LISP_EQUAL.lisp_name = 'EQUAL'
lisp.setSymbolFunction(G_45, CL_COMMON_LISP_EQUAL);
CL_COMMON_LISP_EQUALP.lisp_name = 'EQUALP'
lisp.setSymbolFunction(G_88, CL_COMMON_LISP_EQUALP);
CL_COMMON_LISP_IDENTITY.lisp_name = 'IDENTITY'
lisp.setSymbolFunction(G_149, CL_COMMON_LISP_IDENTITY);
CL_COMMON_LISP_COMPLEMENT.lisp_name = 'COMPLEMENT'
lisp.setSymbolFunction(G_151, CL_COMMON_LISP_COMPLEMENT);
CL_COMMON_LISP_CONSTANTLY.lisp_name = 'CONSTANTLY'
lisp.setSymbolFunction(G_157, CL_COMMON_LISP_CONSTANTLY);
TMP_160=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_163;
let TMP_161;
let L_BODY__48;
let L_LAMBDA_LIST__47;
L_LAMBDA_LIST__47=arguments[0];
L_BODY__48=lisp.jsArrayToList(arguments, 1);
TMP_161=lisp.callFunctionWithCallStack(G_162,G_2,L_LAMBDA_LIST__47,L_BODY__48);
TMP_163=lisp.callFunctionWithCallStack(G_164,G_28,TMP_161);
return TMP_163;
});
lisp.CL_put(G_2,G_159,TMP_160);
TMP_165=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_167;
let L_VALUE__49;
L_VALUE__49=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
TMP_167=lisp.callFunctionWithCallStack(G_164,G_166,lisp.S_nil,L_VALUE__49);
return TMP_167;
});
lisp.CL_put(G_3,G_159,TMP_165);
TMP_168=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_191;
let TMP_190;
let TMP_189;
let TMP_188;
let TMP_187;
let TMP_186;
let TMP_184;
let TMP_183;
let TMP_181;
let TMP_179;
let TMP_178;
let TMP_177;
let L_G_TEST__52;
let TMP_174;
let L_CLAUSE__51;
let TMP_172;
let TMP_171;
let TMP_169;
let L_CLAUSES__50;
L_CLAUSES__50=lisp.jsArrayToList(arguments, 0);
TMP_169=lisp.callFunctionWithCallStack(G_170,L_CLAUSES__50);
if(lisp.values1(TMP_169) !== lisp.S_nil){
TMP_171=lisp.values1(lisp.S_nil);
}else{
{
TMP_172=lisp.callFunctionWithCallStack(G_173,L_CLAUSES__50);
L_CLAUSE__51=lisp.values1(TMP_172);
TMP_174=lisp.callFunctionWithCallStack(G_175);
L_G_TEST__52=lisp.values1(TMP_174);
TMP_177=lisp.callFunctionWithCallStack(G_173,L_CLAUSE__51);
TMP_178=lisp.callFunctionWithCallStack(G_164,L_G_TEST__52,TMP_177);
TMP_179=lisp.callFunctionWithCallStack(G_164,TMP_178);
TMP_181=lisp.callFunctionWithCallStack(G_182,L_CLAUSE__51);
TMP_183=lisp.callFunctionWithCallStack(G_170,TMP_181);
if(lisp.values1(TMP_183) !== lisp.S_nil){
TMP_184=lisp.values1(L_G_TEST__52);
}else{
TMP_186=lisp.callFunctionWithCallStack(G_182,L_CLAUSE__51);
TMP_187=lisp.CL_cons(G_185,TMP_186);
TMP_184=lisp.values1(TMP_187);
}
TMP_188=lisp.callFunctionWithCallStack(G_182,L_CLAUSES__50);
TMP_189=lisp.CL_cons(G_4,TMP_188);
TMP_190=lisp.callFunctionWithCallStack(G_164,G_180,L_G_TEST__52,TMP_184,TMP_189);
TMP_191=lisp.callFunctionWithCallStack(G_164,G_176,TMP_179,TMP_190);
}
TMP_171=TMP_191;
}
return TMP_171;
});
lisp.CL_put(G_4,G_159,TMP_168);
TMP_192=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_202;
let TMP_201;
let TMP_200;
let TMP_199;
let TMP_198;
let TMP_197;
let TMP_196;
let L_VALUE__54;
let TMP_195;
let TMP_194;
let TMP_193;
let L_FORMS__53;
L_FORMS__53=lisp.jsArrayToList(arguments, 0);
TMP_193=lisp.callFunctionWithCallStack(G_170,L_FORMS__53);
if(lisp.values1(TMP_193) !== lisp.S_nil){
TMP_194=lisp.values1(lisp.S_nil);
}else{
{
TMP_195=lisp.callFunctionWithCallStack(G_175);
L_VALUE__54=lisp.values1(TMP_195);
TMP_196=lisp.callFunctionWithCallStack(G_173,L_FORMS__53);
TMP_197=lisp.callFunctionWithCallStack(G_164,L_VALUE__54,TMP_196);
TMP_198=lisp.callFunctionWithCallStack(G_164,TMP_197);
TMP_199=lisp.callFunctionWithCallStack(G_182,L_FORMS__53);
TMP_200=lisp.CL_cons(G_5,TMP_199);
TMP_201=lisp.callFunctionWithCallStack(G_164,G_180,L_VALUE__54,L_VALUE__54,TMP_200);
TMP_202=lisp.callFunctionWithCallStack(G_164,G_176,TMP_198,TMP_201);
}
TMP_194=TMP_202;
}
return TMP_194;
});
lisp.CL_put(G_5,G_159,TMP_192);
TMP_203=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_214;
let TMP_213;
let TMP_212;
let TMP_211;
let TMP_210;
let L_G35__58;
let TMP_209;
let TMP_208;
let L_G34__57;
let TMP_207;
let TMP_206;
let TMP_205;
let L_G33__56;
let TMP_204;
let L_FORMS__55;
L_FORMS__55=lisp.jsArrayToList(arguments, 0);
{
TMP_204=lisp.callFunctionWithCallStack(G_170,L_FORMS__55);
L_G33__56=lisp.values1(TMP_204);
if(lisp.values1(L_G33__56) !== lisp.S_nil){
TMP_205=lisp.values1(L_G33__56);
}else{
{
TMP_206=lisp.callFunctionWithCallStack(G_182,L_FORMS__55);
TMP_207=lisp.callFunctionWithCallStack(G_170,TMP_206);
L_G34__57=lisp.values1(TMP_207);
if(lisp.values1(L_G34__57) !== lisp.S_nil){
TMP_209=lisp.callFunctionWithCallStack(G_173,L_FORMS__55);
TMP_208=TMP_209;
}else{
{
L_G35__58=lisp.values1(G_12);
if(lisp.values1(L_G35__58) !== lisp.S_nil){
TMP_211=lisp.callFunctionWithCallStack(G_173,L_FORMS__55);
TMP_212=lisp.callFunctionWithCallStack(G_182,L_FORMS__55);
TMP_213=lisp.CL_cons(G_6,TMP_212);
TMP_214=lisp.callFunctionWithCallStack(G_162,G_180,TMP_211,TMP_213,lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_210=TMP_214;
}else{
TMP_210=lisp.values1(lisp.S_nil);
}
}
TMP_208=TMP_210;
}
}
TMP_205=TMP_208;
}
}
return TMP_205;
});
lisp.CL_put(G_6,G_159,TMP_203);
TMP_215=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_217;
let TMP_216;
let L_FORMS__60;
let L_TEST__59;
L_TEST__59=arguments[0];
L_FORMS__60=lisp.jsArrayToList(arguments, 1);
TMP_216=lisp.CL_cons(G_185,L_FORMS__60);
TMP_217=lisp.callFunctionWithCallStack(G_164,G_180,L_TEST__59,TMP_216);
return TMP_217;
});
lisp.CL_put(G_7,G_159,TMP_215);
TMP_218=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_220;
let TMP_219;
let L_FORMS__62;
let L_TEST__61;
L_TEST__61=arguments[0];
L_FORMS__62=lisp.jsArrayToList(arguments, 1);
TMP_219=lisp.CL_cons(G_185,L_FORMS__62);
TMP_220=lisp.callFunctionWithCallStack(G_164,G_180,L_TEST__61,lisp.S_nil,TMP_219);
return TMP_220;
});
lisp.CL_put(G_8,G_159,TMP_218);
TMP_221=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_269;
let TMP_268;
let TMP_267;
let TMP_225;
let L_BODY__67;
let TMP_223;
let L_G_START__66;
let TMP_222;
let L_BODY__65;
let L_ENDLIST__64;
let L_VARLIST__63;
L_VARLIST__63=arguments[0];
L_ENDLIST__64=arguments[1];
L_BODY__65=lisp.jsArrayToList(arguments, 2);
{
TMP_222=lisp.callFunctionWithCallStack(G_175);
L_G_START__66=lisp.values1(TMP_222);
TMP_223=lisp.callFunctionWithCallStack(G_224,L_BODY__65,lisp.S_nil);
L_BODY__67=lisp.values1(TMP_223);
TMP_225=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_266;
let TMP_265;
let TMP_264;
let TMP_263;
let TMP_262;
let TMP_261;
let TMP_259;
let TMP_257;
let TMP_249;
let TMP_247;
let TMP_246;
let TMP_245;
let TMP_244;
let TMP_243;
let TMP_241;
let TMP_239;
let TMP_234;
let L_VARLIST__72;
let TMP_230;
let TMP_226;
let L_G36__70;
let L_DECLARES__69;
let L_BODY__68;
L_BODY__68=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__69=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G36__70=lisp.jsArrayToList(arguments, 2);
{
TMP_226=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_229;
let TMP_228;
let TMP_227;
let L_VAR_SPEC__71;
L_VAR_SPEC__71=arguments[0];
TMP_227=lisp.CL_symbolp(L_VAR_SPEC__71);
if(lisp.values1(TMP_227) !== lisp.S_nil){
TMP_229=lisp.CL_cons(L_VAR_SPEC__71,lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_228=TMP_229;
}else{
TMP_228=lisp.values1(L_VAR_SPEC__71);
}
return TMP_228;
});
TMP_230=lisp.callFunctionWithCallStack(G_231,TMP_226,L_VARLIST__63);
L_VARLIST__72=lisp.values1(TMP_230);
TMP_234=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_238;
let TMP_236;
let TMP_235;
let L_VAR_SPEC__73;
L_VAR_SPEC__73=arguments[0];
TMP_235=lisp.callFunctionWithCallStack(G_173,L_VAR_SPEC__73);
TMP_236=lisp.callFunctionWithCallStack(G_237,L_VAR_SPEC__73);
TMP_238=lisp.callFunctionWithCallStack(G_164,TMP_235,TMP_236);
return TMP_238;
});
TMP_239=lisp.callFunctionWithCallStack(G_231,TMP_234,L_VARLIST__72);
TMP_241=lisp.CL_cons(G_240,L_DECLARES__69);
TMP_243=lisp.callFunctionWithCallStack(G_173,L_ENDLIST__64);
TMP_244=lisp.callFunctionWithCallStack(G_182,L_ENDLIST__64);
TMP_245=lisp.CL_cons(G_185,TMP_244);
TMP_246=lisp.callFunctionWithCallStack(G_164,G_3,TMP_245);
TMP_247=lisp.CL_cons(G_242,L_BODY__68);
TMP_249=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_256;
let TMP_254;
let TMP_253;
let TMP_252;
let TMP_250;
let L_VAR_SPEC__74;
L_VAR_SPEC__74=arguments[0];
TMP_250=lisp.callFunctionWithCallStack(G_251,L_VAR_SPEC__74);
if(lisp.values1(TMP_250) !== lisp.S_nil){
TMP_253=lisp.callFunctionWithCallStack(G_173,L_VAR_SPEC__74);
TMP_254=lisp.callFunctionWithCallStack(G_255,L_VAR_SPEC__74);
TMP_256=lisp.callFunctionWithCallStack(G_164,TMP_253,TMP_254);
TMP_252=TMP_256;
}else{
TMP_252=lisp.values1(lisp.S_nil);
}
return TMP_252;
});
TMP_257=lisp.callFunctionWithCallStack(G_258,TMP_249,L_VARLIST__72);
TMP_259=lisp.CL_cons(G_248,TMP_257);
TMP_261=lisp.callFunctionWithCallStack(G_164,G_260,L_G_START__66);
TMP_262=lisp.callFunctionWithCallStack(G_164,G_185,TMP_247,TMP_259,TMP_261);
TMP_263=lisp.callFunctionWithCallStack(G_164,G_180,TMP_243,TMP_246,TMP_262);
TMP_264=lisp.callFunctionWithCallStack(G_164,G_242,L_G_START__66,TMP_263);
TMP_265=lisp.callFunctionWithCallStack(G_164,G_233,TMP_239,TMP_241,TMP_264);
TMP_266=lisp.callFunctionWithCallStack(G_164,G_232,lisp.S_nil,TMP_265);
}
return TMP_266;
});
TMP_267=G_22.func(TMP_225);
TMP_268=lisp.callFunctionWithCallStack(G_224,L_BODY__67,lisp.S_nil);
TMP_269=lisp.CL_multipleValueCall(TMP_267,TMP_268);
}
return TMP_269;
});
lisp.CL_put(G_13,G_159,TMP_221);
TMP_270=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_298;
let TMP_296;
let TMP_295;
let TMP_293;
let TMP_292;
let TMP_291;
let TMP_290;
let TMP_289;
let TMP_287;
let TMP_286;
let TMP_285;
let TMP_284;
let TMP_283;
let TMP_282;
let L_VALUE__82;
let TMP_281;
let L_VAR__81;
let TMP_280;
let TMP_277;
let L_PAIRSSTAR__80;
let TMP_275;
let L_VALUES__78;
let L_VARS__77;
let L_GVARS__76;
let TMP_272;
let TMP_271;
let L_PAIRS__75;
L_PAIRS__75=lisp.jsArrayToList(arguments, 0);
TMP_271=lisp.callFunctionWithCallStack(G_72,L_PAIRS__75);
TMP_272=lisp.callFunctionWithCallStack(G_273,TMP_271);
if(lisp.values1(TMP_272) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_145,G_143.func(lisp.codeArrayToString([79, 100, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 115, 32, 116, 111, 32, 80, 83, 69, 84, 81, 46])));
}else{
}
{
L_GVARS__76=lisp.values1(lisp.S_nil);
L_VARS__77=lisp.values1(lisp.S_nil);
L_VALUES__78=lisp.values1(lisp.S_nil);
try {
{
L_PAIRSSTAR__80=lisp.values1(L_PAIRS__75);
let HOST_G38_STATE = 'G40';
HOST_G38: for(;;){
try{
switch(HOST_G38_STATE){
case 'G40':
case 'G39':
TMP_277=lisp.callFunctionWithCallStack(G_170,L_PAIRSSTAR__80);
if(lisp.values1(TMP_277) !== lisp.S_nil){
throw new lisp.BlockValue(G_278,lisp.values1(lisp.S_nil));}else{
let HOST_G41_STATE = 'G42';
HOST_G41: for(;;){
try{
switch(HOST_G41_STATE){
case 'G42':
{
TMP_280=lisp.callFunctionWithCallStack(G_173,L_PAIRSSTAR__80);
L_VAR__81=lisp.values1(TMP_280);
TMP_281=lisp.callFunctionWithCallStack(G_237,L_PAIRSSTAR__80);
L_VALUE__82=lisp.values1(TMP_281);
TMP_282=lisp.CL_cons(L_VAR__81,L_VARS__77);
L_VARS__77=lisp.values1(TMP_282);
TMP_283=lisp.CL_cons(L_VALUE__82,L_VALUES__78);
L_VALUES__78=lisp.values1(TMP_283);
TMP_284=lisp.callFunctionWithCallStack(G_175);
TMP_285=lisp.CL_cons(TMP_284,L_GVARS__76);
L_GVARS__76=lisp.values1(TMP_285);
}
}
break;
}catch(ERR_279){
if(ERR_279 instanceof lisp.TagValue && ERR_279.id==='HOST_G41'){HOST_G41_STATE=ERR_279.index;}
else{throw ERR_279;}}
}
TMP_286=lisp.callFunctionWithCallStack(G_251,L_PAIRSSTAR__80);
L_PAIRSSTAR__80=lisp.values1(TMP_286);
throw new lisp.TagValue('HOST_G38', 'G39');
}
}
break;
}catch(ERR_276){
if(ERR_276 instanceof lisp.TagValue && ERR_276.id==='HOST_G38'){HOST_G38_STATE=ERR_276.index;}
else{throw ERR_276;}}
}
}
TMP_275=lisp.values1(lisp.S_nil)
}catch(E__274){if(E__274 instanceof lisp.BlockValue && E__274.name === G_278){TMP_275=E__274.value;}
else{throw E__274;}
}
TMP_287=lisp.callFunctionWithCallStack(G_288,L_GVARS__76);
L_GVARS__76=lisp.values1(TMP_287);
TMP_289=lisp.callFunctionWithCallStack(G_288,L_VARS__77);
L_VARS__77=lisp.values1(TMP_289);
TMP_290=lisp.callFunctionWithCallStack(G_288,L_VALUES__78);
L_VALUES__78=lisp.values1(TMP_290);
TMP_291=lisp.CL_symbolFunction(G_164);
TMP_292=lisp.callFunctionWithCallStack(G_231,TMP_291,L_GVARS__76,L_VALUES__78);
TMP_293=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_294;
let L_GVAR__84;
let L_VAR__83;
L_VAR__83=arguments[0];
L_GVAR__84=arguments[1];
TMP_294=lisp.callFunctionWithCallStack(G_164,G_248,L_VAR__83,L_GVAR__84);
return TMP_294;
});
TMP_295=lisp.callFunctionWithCallStack(G_231,TMP_293,L_VARS__77,L_GVARS__76);
TMP_296=lisp.callFunctionWithCallStack(G_297,TMP_295,lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_298=lisp.callFunctionWithCallStack(G_162,G_176,TMP_292,TMP_296);
}
return TMP_298;
});
lisp.CL_put(G_14,G_159,TMP_270);
TMP_299=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_334;
let TMP_333;
let TMP_332;
let TMP_301;
let L_G_START__88;
let TMP_300;
let L_BODY__87;
let L_ENDLIST__86;
let L_VARLIST__85;
L_VARLIST__85=arguments[0];
L_ENDLIST__86=arguments[1];
L_BODY__87=lisp.jsArrayToList(arguments, 2);
{
TMP_300=lisp.callFunctionWithCallStack(G_175);
L_G_START__88=lisp.values1(TMP_300);
TMP_301=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_331;
let TMP_330;
let TMP_329;
let TMP_328;
let TMP_327;
let TMP_326;
let TMP_325;
let TMP_324;
let TMP_318;
let TMP_317;
let TMP_316;
let TMP_315;
let TMP_314;
let TMP_313;
let TMP_312;
let TMP_311;
let TMP_307;
let L_VARLIST__93;
let TMP_306;
let TMP_302;
let L_G43__91;
let L_DECLARES__90;
let L_BODY__89;
L_BODY__89=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__90=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G43__91=lisp.jsArrayToList(arguments, 2);
{
TMP_302=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_305;
let TMP_304;
let TMP_303;
let L_VAR_SPEC__92;
L_VAR_SPEC__92=arguments[0];
TMP_303=lisp.CL_symbolp(L_VAR_SPEC__92);
if(lisp.values1(TMP_303) !== lisp.S_nil){
TMP_305=lisp.CL_cons(L_VAR_SPEC__92,lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_304=TMP_305;
}else{
TMP_304=lisp.values1(L_VAR_SPEC__92);
}
return TMP_304;
});
TMP_306=lisp.callFunctionWithCallStack(G_231,TMP_302,L_VARLIST__85);
L_VARLIST__93=lisp.values1(TMP_306);
TMP_307=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_310;
let TMP_309;
let TMP_308;
let L_VAR_SPEC__94;
L_VAR_SPEC__94=arguments[0];
TMP_308=lisp.callFunctionWithCallStack(G_173,L_VAR_SPEC__94);
TMP_309=lisp.callFunctionWithCallStack(G_237,L_VAR_SPEC__94);
TMP_310=lisp.callFunctionWithCallStack(G_164,TMP_308,TMP_309);
return TMP_310;
});
TMP_311=lisp.callFunctionWithCallStack(G_231,TMP_307,L_VARLIST__93);
TMP_312=lisp.CL_cons(G_240,L_DECLARES__90);
TMP_313=lisp.callFunctionWithCallStack(G_173,L_ENDLIST__86);
TMP_314=lisp.callFunctionWithCallStack(G_182,L_ENDLIST__86);
TMP_315=lisp.CL_cons(G_185,TMP_314);
TMP_316=lisp.callFunctionWithCallStack(G_164,G_3,TMP_315);
TMP_317=lisp.CL_cons(G_242,L_BODY__89);
TMP_318=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_323;
let TMP_322;
let TMP_321;
let TMP_320;
let TMP_319;
let L_VAR_SPEC__95;
L_VAR_SPEC__95=arguments[0];
TMP_319=lisp.callFunctionWithCallStack(G_251,L_VAR_SPEC__95);
if(lisp.values1(TMP_319) !== lisp.S_nil){
TMP_321=lisp.callFunctionWithCallStack(G_173,L_VAR_SPEC__95);
TMP_322=lisp.callFunctionWithCallStack(G_255,L_VAR_SPEC__95);
TMP_323=lisp.callFunctionWithCallStack(G_164,TMP_321,TMP_322);
TMP_320=TMP_323;
}else{
TMP_320=lisp.values1(lisp.S_nil);
}
return TMP_320;
});
TMP_324=lisp.callFunctionWithCallStack(G_258,TMP_318,L_VARLIST__93);
TMP_325=lisp.CL_cons(G_14,TMP_324);
TMP_326=lisp.callFunctionWithCallStack(G_164,G_260,L_G_START__88);
TMP_327=lisp.callFunctionWithCallStack(G_164,G_185,TMP_317,TMP_325,TMP_326);
TMP_328=lisp.callFunctionWithCallStack(G_164,G_180,TMP_313,TMP_316,TMP_327);
TMP_329=lisp.callFunctionWithCallStack(G_164,G_242,L_G_START__88,TMP_328);
TMP_330=lisp.callFunctionWithCallStack(G_164,G_176,TMP_311,TMP_312,TMP_329);
TMP_331=lisp.callFunctionWithCallStack(G_164,G_232,lisp.S_nil,TMP_330);
}
return TMP_331;
});
TMP_332=G_22.func(TMP_301);
TMP_333=lisp.callFunctionWithCallStack(G_224,L_BODY__87,lisp.S_nil);
TMP_334=lisp.CL_multipleValueCall(TMP_332,TMP_333);
}
return TMP_334;
});
lisp.CL_put(G_15,G_159,TMP_299);
TMP_335=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_353;
let TMP_352;
let TMP_351;
let TMP_340;
let L_G_EXPR__101;
let TMP_339;
let L_RESULT__100;
let TMP_338;
let L_EXPR__99;
let TMP_337;
let L_VAR__98;
let TMP_336;
let L_BODY__97;
let L_VAR_FORM__96;
L_VAR_FORM__96=arguments[0];
L_BODY__97=lisp.jsArrayToList(arguments, 1);
{
TMP_336=lisp.callFunctionWithCallStack(G_173,L_VAR_FORM__96);
L_VAR__98=lisp.values1(TMP_336);
TMP_337=lisp.callFunctionWithCallStack(G_237,L_VAR_FORM__96);
L_EXPR__99=lisp.values1(TMP_337);
TMP_338=lisp.callFunctionWithCallStack(G_255,L_VAR_FORM__96);
L_RESULT__100=lisp.values1(TMP_338);
TMP_339=lisp.callFunctionWithCallStack(G_175);
L_G_EXPR__101=lisp.values1(TMP_339);
TMP_340=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_350;
let TMP_349;
let TMP_348;
let TMP_347;
let TMP_346;
let TMP_345;
let TMP_344;
let TMP_343;
let TMP_342;
let TMP_341;
let L_G44__104;
let L_DECLARES__103;
let L_BODY__102;
L_BODY__102=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__103=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G44__104=lisp.jsArrayToList(arguments, 2);
TMP_341=lisp.callFunctionWithCallStack(G_164,L_G_EXPR__101,L_EXPR__99);
TMP_342=lisp.callFunctionWithCallStack(G_164,TMP_341);
TMP_343=lisp.callFunctionWithCallStack(G_162,G_85,L_VAR__98,lisp.makeCons(1, lisp.S_nil));
TMP_344=lisp.callFunctionWithCallStack(G_164,L_VAR__98,0,TMP_343);
TMP_345=lisp.callFunctionWithCallStack(G_164,TMP_344);
TMP_346=lisp.callFunctionWithCallStack(G_164,G_79,L_VAR__98,L_G_EXPR__101);
TMP_347=lisp.callFunctionWithCallStack(G_164,TMP_346,L_RESULT__100);
TMP_348=lisp.CL_cons(G_240,L_DECLARES__103);
TMP_349=lisp.callFunctionWithCallStack(G_162,G_15,TMP_345,TMP_347,TMP_348,L_BODY__102);
TMP_350=lisp.callFunctionWithCallStack(G_164,G_176,TMP_342,TMP_349);
return TMP_350;
});
TMP_351=G_22.func(TMP_340);
TMP_352=lisp.callFunctionWithCallStack(G_224,L_BODY__97,lisp.S_nil);
TMP_353=lisp.CL_multipleValueCall(TMP_351,TMP_352);
}
return TMP_353;
});
lisp.CL_put(G_16,G_159,TMP_335);
TMP_354=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_386;
let TMP_385;
let TMP_384;
let TMP_360;
let L_G_START__111;
let TMP_359;
let L_G_LIST__110;
let TMP_358;
let L_RESULT__109;
let TMP_357;
let L_EXPR__108;
let TMP_356;
let L_VAR__107;
let TMP_355;
let L_BODY__106;
let L_VAR_FORM__105;
L_VAR_FORM__105=arguments[0];
L_BODY__106=lisp.jsArrayToList(arguments, 1);
{
TMP_355=lisp.callFunctionWithCallStack(G_173,L_VAR_FORM__105);
L_VAR__107=lisp.values1(TMP_355);
TMP_356=lisp.callFunctionWithCallStack(G_237,L_VAR_FORM__105);
L_EXPR__108=lisp.values1(TMP_356);
TMP_357=lisp.callFunctionWithCallStack(G_255,L_VAR_FORM__105);
L_RESULT__109=lisp.values1(TMP_357);
TMP_358=lisp.callFunctionWithCallStack(G_175);
L_G_LIST__110=lisp.values1(TMP_358);
TMP_359=lisp.callFunctionWithCallStack(G_175);
L_G_START__111=lisp.values1(TMP_359);
TMP_360=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_383;
let TMP_382;
let TMP_381;
let TMP_380;
let TMP_378;
let TMP_377;
let TMP_376;
let TMP_375;
let TMP_374;
let TMP_373;
let TMP_372;
let TMP_371;
let TMP_370;
let TMP_369;
let TMP_368;
let TMP_367;
let TMP_366;
let TMP_365;
let TMP_364;
let TMP_362;
let TMP_361;
let L_G45__114;
let L_DECLARES__113;
let L_BODY__112;
L_BODY__112=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__113=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G45__114=lisp.jsArrayToList(arguments, 2);
TMP_361=lisp.callFunctionWithCallStack(G_164,L_G_LIST__110,L_EXPR__108);
TMP_362=lisp.callFunctionWithCallStack(G_164,TMP_361);
TMP_364=lisp.callFunctionWithCallStack(G_164,G_363,L_G_LIST__110);
TMP_365=lisp.callFunctionWithCallStack(G_164,G_51,L_G_LIST__110);
TMP_366=lisp.callFunctionWithCallStack(G_164,L_VAR__107,TMP_365);
TMP_367=lisp.callFunctionWithCallStack(G_164,TMP_366);
TMP_368=lisp.CL_cons(G_240,L_DECLARES__113);
TMP_369=lisp.callFunctionWithCallStack(G_164,G_56,L_G_LIST__110);
TMP_370=lisp.callFunctionWithCallStack(G_164,G_248,L_G_LIST__110,TMP_369);
TMP_371=lisp.CL_cons(G_242,L_BODY__112);
TMP_372=lisp.callFunctionWithCallStack(G_164,G_176,TMP_367,TMP_368,TMP_370,TMP_371);
TMP_373=lisp.callFunctionWithCallStack(G_164,G_260,L_G_START__111);
TMP_374=lisp.callFunctionWithCallStack(G_164,G_8,TMP_364,TMP_372,TMP_373);
TMP_375=lisp.callFunctionWithCallStack(G_164,G_242,L_G_START__111,TMP_374);
TMP_376=lisp.callFunctionWithCallStack(G_164,G_176,TMP_362,TMP_375);
TMP_377=lisp.CL_cons(L_VAR__107,lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_378=lisp.callFunctionWithCallStack(G_164,TMP_377);
TMP_380=lisp.callFunctionWithCallStack(G_164,G_379,L_VAR__107);
TMP_381=lisp.callFunctionWithCallStack(G_164,G_240,TMP_380);
TMP_382=lisp.callFunctionWithCallStack(G_164,G_176,TMP_378,TMP_381,L_RESULT__109);
TMP_383=lisp.callFunctionWithCallStack(G_164,G_232,lisp.S_nil,TMP_376,TMP_382);
return TMP_383;
});
TMP_384=G_22.func(TMP_360);
TMP_385=lisp.callFunctionWithCallStack(G_224,L_BODY__106,lisp.S_nil);
TMP_386=lisp.CL_multipleValueCall(TMP_384,TMP_385);
}
return TMP_386;
});
lisp.CL_put(G_17,G_159,TMP_354);
TMP_387=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_417;
let TMP_416;
let TMP_415;
let TMP_391;
let TMP_390;
let TMP_389;
let L_VAR__117;
let TMP_388;
let L_CASES__116;
let L_KEYFORM__115;
L_KEYFORM__115=arguments[0];
L_CASES__116=lisp.jsArrayToList(arguments, 1);
{
TMP_388=lisp.callFunctionWithCallStack(G_175);
L_VAR__117=lisp.values1(TMP_388);
TMP_389=lisp.callFunctionWithCallStack(G_164,L_VAR__117,L_KEYFORM__115);
TMP_390=lisp.callFunctionWithCallStack(G_164,TMP_389);
TMP_391=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_414;
let TMP_413;
let TMP_412;
let TMP_411;
let TMP_410;
let TMP_409;
let L_G48__121;
let TMP_408;
let TMP_407;
let TMP_406;
let TMP_405;
let TMP_404;
let TMP_401;
let L_G47__120;
let TMP_399;
let TMP_398;
let TMP_397;
let TMP_396;
let TMP_395;
let L_G46__119;
let TMP_394;
let TMP_393;
let L_C__118;
L_C__118=arguments[0];
{
TMP_393=lisp.callFunctionWithCallStack(G_51,L_C__118);
TMP_394=lisp.CL_eq(G_392,TMP_393);
L_G46__119=lisp.values1(TMP_394);
if(lisp.values1(L_G46__119) !== lisp.S_nil){
TMP_396=lisp.callFunctionWithCallStack(G_56,L_C__118);
TMP_397=lisp.CL_cons(G_12,TMP_396);
TMP_395=TMP_397;
}else{
{
TMP_398=lisp.callFunctionWithCallStack(G_51,L_C__118);
TMP_399=lisp.callFunctionWithCallStack(G_400,TMP_398);
L_G47__120=lisp.values1(TMP_399);
if(lisp.values1(L_G47__120) !== lisp.S_nil){
TMP_404=lisp.callFunctionWithCallStack(G_51,L_C__118);
TMP_405=lisp.callFunctionWithCallStack(G_164,G_403,TMP_404);
TMP_406=lisp.callFunctionWithCallStack(G_164,G_402,L_VAR__117,TMP_405);
TMP_407=lisp.callFunctionWithCallStack(G_56,L_C__118);
TMP_408=lisp.CL_cons(TMP_406,TMP_407);
TMP_401=TMP_408;
}else{
{
L_G48__121=lisp.values1(G_12);
if(lisp.values1(L_G48__121) !== lisp.S_nil){
TMP_410=lisp.callFunctionWithCallStack(G_51,L_C__118);
TMP_411=lisp.callFunctionWithCallStack(G_164,G_403,TMP_410);
TMP_412=lisp.callFunctionWithCallStack(G_164,G_36,L_VAR__117,TMP_411);
TMP_413=lisp.callFunctionWithCallStack(G_56,L_C__118);
TMP_414=lisp.CL_cons(TMP_412,TMP_413);
TMP_409=TMP_414;
}else{
TMP_409=lisp.values1(lisp.S_nil);
}
}
TMP_401=TMP_409;
}
}
TMP_395=TMP_401;
}
}
return TMP_395;
});
TMP_415=lisp.callFunctionWithCallStack(G_231,TMP_391,L_CASES__116);
TMP_416=lisp.CL_cons(G_4,TMP_415);
TMP_417=lisp.callFunctionWithCallStack(G_164,G_176,TMP_390,TMP_416);
}
return TMP_417;
});
lisp.CL_put(G_18,G_159,TMP_387);
TMP_418=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_454;
let TMP_453;
let TMP_452;
let TMP_451;
let TMP_450;
let TMP_449;
let TMP_448;
let TMP_447;
let TMP_438;
let TMP_437;
let TMP_422;
let TMP_421;
let TMP_420;
let L_VAR__124;
let TMP_419;
let L_CASES__123;
let L_KEYFORM__122;
L_KEYFORM__122=arguments[0];
L_CASES__123=lisp.jsArrayToList(arguments, 1);
{
TMP_419=lisp.callFunctionWithCallStack(G_175);
L_VAR__124=lisp.values1(TMP_419);
TMP_420=lisp.callFunctionWithCallStack(G_164,L_VAR__124,L_KEYFORM__122);
TMP_421=lisp.callFunctionWithCallStack(G_164,TMP_420);
TMP_422=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_436;
let TMP_435;
let TMP_434;
let TMP_433;
let TMP_432;
let TMP_431;
let L_G50__127;
let TMP_430;
let TMP_429;
let TMP_428;
let TMP_427;
let TMP_426;
let TMP_425;
let L_G49__126;
let TMP_424;
let TMP_423;
let L_C__125;
L_C__125=arguments[0];
{
TMP_423=lisp.callFunctionWithCallStack(G_51,L_C__125);
TMP_424=lisp.callFunctionWithCallStack(G_400,TMP_423);
L_G49__126=lisp.values1(TMP_424);
if(lisp.values1(L_G49__126) !== lisp.S_nil){
TMP_426=lisp.callFunctionWithCallStack(G_51,L_C__125);
TMP_427=lisp.callFunctionWithCallStack(G_164,G_403,TMP_426);
TMP_428=lisp.callFunctionWithCallStack(G_164,G_402,L_VAR__124,TMP_427);
TMP_429=lisp.callFunctionWithCallStack(G_56,L_C__125);
TMP_430=lisp.CL_cons(TMP_428,TMP_429);
TMP_425=TMP_430;
}else{
{
L_G50__127=lisp.values1(G_12);
if(lisp.values1(L_G50__127) !== lisp.S_nil){
TMP_432=lisp.callFunctionWithCallStack(G_51,L_C__125);
TMP_433=lisp.callFunctionWithCallStack(G_164,G_403,TMP_432);
TMP_434=lisp.callFunctionWithCallStack(G_164,G_36,L_VAR__124,TMP_433);
TMP_435=lisp.callFunctionWithCallStack(G_56,L_C__125);
TMP_436=lisp.CL_cons(TMP_434,TMP_435);
TMP_431=TMP_436;
}else{
TMP_431=lisp.values1(lisp.S_nil);
}
}
TMP_425=TMP_431;
}
}
return TMP_425;
});
TMP_437=lisp.callFunctionWithCallStack(G_231,TMP_422,L_CASES__123);
TMP_438=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_445;
let TMP_444;
let TMP_443;
let TMP_442;
let TMP_441;
let TMP_440;
let TMP_439;
let L_C__128;
L_C__128=arguments[0];
TMP_439=lisp.callFunctionWithCallStack(G_51,L_C__128);
TMP_440=lisp.callFunctionWithCallStack(G_400,TMP_439);
if(lisp.values1(TMP_440) !== lisp.S_nil){
TMP_442=lisp.callFunctionWithCallStack(G_51,L_C__128);
TMP_441=lisp.values1(TMP_442);
}else{
TMP_443=lisp.callFunctionWithCallStack(G_51,L_C__128);
TMP_444=lisp.callFunctionWithCallStack(G_164,TMP_443);
TMP_441=lisp.values1(TMP_444);
}
TMP_445=lisp.callFunctionWithCallStack(G_446,TMP_441);
return TMP_445;
});
TMP_447=lisp.callFunctionWithCallStack(G_258,TMP_438,L_CASES__123);
TMP_448=lisp.callFunctionWithCallStack(G_164,G_403,TMP_447);
TMP_449=lisp.callFunctionWithCallStack(G_164,G_145,G_143.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_VAR__124,TMP_448);
TMP_450=lisp.callFunctionWithCallStack(G_164,G_12,TMP_449);
TMP_451=lisp.callFunctionWithCallStack(G_164,TMP_450);
TMP_452=lisp.callFunctionWithCallStack(G_297,TMP_437,TMP_451);
TMP_453=lisp.CL_cons(G_4,TMP_452);
TMP_454=lisp.callFunctionWithCallStack(G_164,G_176,TMP_421,TMP_453);
}
return TMP_454;
});
lisp.CL_put(G_19,G_159,TMP_418);
TMP_455=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_466;
let TMP_465;
let TMP_464;
let TMP_463;
let TMP_461;
let TMP_460;
let TMP_459;
let L_REST__132;
let TMP_456;
let L_BODY__131;
let L_VALUE_FORM__130;
let L_VARS__129;
L_VARS__129=arguments[0];
L_VALUE_FORM__130=arguments[1];
L_BODY__131=lisp.jsArrayToList(arguments, 2);
{
TMP_456=lisp.callFunctionWithCallStack(G_175);
L_REST__132=lisp.values1(TMP_456);
TMP_459=lisp.callFunctionWithCallStack(G_164,G_458,L_REST__132);
TMP_460=lisp.callFunctionWithCallStack(G_297,L_VARS__129,TMP_459);
TMP_461=lisp.CL_cons(G_457,TMP_460);
TMP_463=lisp.callFunctionWithCallStack(G_164,G_462,L_REST__132);
TMP_464=lisp.callFunctionWithCallStack(G_164,G_240,TMP_463);
TMP_465=lisp.callFunctionWithCallStack(G_162,G_2,TMP_461,TMP_464,L_BODY__131);
TMP_466=lisp.callFunctionWithCallStack(G_164,G_31,TMP_465,L_VALUE_FORM__130);
}
return TMP_466;
});
lisp.CL_put(G_20,G_159,TMP_455);
TMP_467=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_490;
let TMP_489;
let TMP_488;
let TMP_487;
let TMP_486;
let TMP_484;
let TMP_483;
let TMP_482;
let TMP_481;
let TMP_479;
let TMP_478;
let TMP_477;
let TMP_476;
let TMP_474;
let TMP_472;
let TMP_471;
let TMP_469;
let TMP_468;
let L_ARGS__135;
let L_ARG__134;
let L_FUNCTION__133;
L_FUNCTION__133=arguments[0];
L_ARG__134=arguments[1];
L_ARGS__135=lisp.jsArrayToList(arguments, 2);
TMP_468=lisp.callFunctionWithCallStack(G_170,L_ARGS__135);
if(lisp.values1(TMP_468) !== lisp.S_nil){
TMP_471=lisp.callFunctionWithCallStack(G_164,G_22,L_FUNCTION__133);
TMP_472=lisp.callFunctionWithCallStack(G_473,L_ARG__134);
if(lisp.values1(TMP_472) !== lisp.S_nil){
TMP_476=lisp.callFunctionWithCallStack(G_164,G_475,L_ARG__134);
TMP_474=lisp.values1(TMP_476);
}else{
TMP_474=lisp.values1(L_ARG__134);
}
TMP_477=lisp.callFunctionWithCallStack(G_164,G_470,TMP_471,TMP_474);
TMP_469=TMP_477;
}else{
TMP_478=lisp.callFunctionWithCallStack(G_164,G_22,L_FUNCTION__133);
TMP_479=lisp.callFunctionWithCallStack(G_480,L_ARGS__135);
TMP_481=lisp.callFunctionWithCallStack(G_51,TMP_479);
TMP_482=lisp.callFunctionWithCallStack(G_473,TMP_481);
if(lisp.values1(TMP_482) !== lisp.S_nil){
TMP_484=lisp.callFunctionWithCallStack(G_485,L_ARGS__135);
TMP_486=lisp.callFunctionWithCallStack(G_480,L_ARGS__135);
TMP_487=lisp.CL_cons(G_475,TMP_486);
TMP_488=lisp.callFunctionWithCallStack(G_164,TMP_487);
TMP_489=lisp.callFunctionWithCallStack(G_297,TMP_484,TMP_488);
TMP_483=lisp.values1(TMP_489);
}else{
TMP_483=lisp.values1(L_ARGS__135);
}
TMP_490=lisp.callFunctionWithCallStack(G_162,G_470,TMP_478,L_ARG__134,TMP_483);
TMP_469=TMP_490;
}
return TMP_469;
});
lisp.CL_put(G_31,G_159,TMP_467);
TMP_491=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_492;
let L_VALUE_FORM__136;
L_VALUE_FORM__136=arguments[0];
TMP_492=lisp.callFunctionWithCallStack(G_164,G_31,lisp.makeCons(G_28, lisp.makeCons(G_164, lisp.S_nil)),L_VALUE_FORM__136);
return TMP_492;
});
lisp.CL_put(G_32,G_159,TMP_491);
TMP_493=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_501;
let TMP_500;
let TMP_499;
let TMP_498;
let TMP_497;
let TMP_496;
let TMP_495;
let L_G_VALUES__139;
let TMP_494;
let L_FORMS__138;
let L_FIRST_FORM__137;
L_FIRST_FORM__137=arguments[0];
L_FORMS__138=lisp.jsArrayToList(arguments, 1);
{
TMP_494=lisp.callFunctionWithCallStack(G_175);
L_G_VALUES__139=lisp.values1(TMP_494);
TMP_495=lisp.callFunctionWithCallStack(G_164,G_32,L_FIRST_FORM__137);
TMP_496=lisp.callFunctionWithCallStack(G_164,L_G_VALUES__139,TMP_495);
TMP_497=lisp.callFunctionWithCallStack(G_164,TMP_496);
TMP_498=lisp.callFunctionWithCallStack(G_164,G_154,lisp.makeCons(G_28, lisp.makeCons(G_475, lisp.S_nil)),L_G_VALUES__139);
TMP_499=lisp.callFunctionWithCallStack(G_164,TMP_498);
TMP_500=lisp.callFunctionWithCallStack(G_297,L_FORMS__138,TMP_499);
TMP_501=lisp.callFunctionWithCallStack(G_162,G_176,TMP_497,TMP_500);
}
return TMP_501;
});
lisp.CL_put(G_33,G_159,TMP_493);
TMP_502=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_513;
let TMP_512;
let TMP_511;
let TMP_510;
let TMP_509;
let L_GSYMS__143;
let TMP_508;
let TMP_506;
let TMP_505;
let TMP_504;
let TMP_503;
let L_FORM__141;
let L_VARS__140;
L_VARS__140=arguments[0];
L_FORM__141=arguments[1];
TMP_503=lisp.callFunctionWithCallStack(G_170,L_VARS__140);
if(lisp.values1(TMP_503) !== lisp.S_nil){
TMP_505=lisp.callFunctionWithCallStack(G_164,G_475,L_FORM__141);
TMP_504=TMP_505;
}else{
{
TMP_506=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_507;
let L_VAR__142;
L_VAR__142=arguments[0];
TMP_507=lisp.callFunctionWithCallStack(G_175);
return TMP_507;
});
TMP_508=lisp.callFunctionWithCallStack(G_231,TMP_506,L_VARS__140);
L_GSYMS__143=lisp.values1(TMP_508);
TMP_509=lisp.CL_symbolFunction(G_164);
TMP_510=lisp.callFunctionWithCallStack(G_258,TMP_509,L_VARS__140,L_GSYMS__143);
TMP_511=lisp.CL_cons(G_248,TMP_510);
TMP_512=lisp.callFunctionWithCallStack(G_173,L_GSYMS__143);
TMP_513=lisp.callFunctionWithCallStack(G_164,G_20,L_GSYMS__143,L_FORM__141,TMP_511,TMP_512);
}
TMP_504=TMP_513;
}
return TMP_504;
});
lisp.CL_put(G_34,G_159,TMP_502);
TMP_514=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_520;
let TMP_519;
let TMP_518;
let TMP_517;
let TMP_516;
let L_TMP__146;
let TMP_515;
let L_BODY__145;
let L_RESULT__144;
L_RESULT__144=arguments[0];
L_BODY__145=lisp.jsArrayToList(arguments, 1);
{
TMP_515=lisp.callFunctionWithCallStack(G_175);
L_TMP__146=lisp.values1(TMP_515);
TMP_516=lisp.callFunctionWithCallStack(G_164,L_TMP__146,L_RESULT__144);
TMP_517=lisp.callFunctionWithCallStack(G_164,TMP_516);
TMP_518=lisp.callFunctionWithCallStack(G_164,L_TMP__146);
TMP_519=lisp.callFunctionWithCallStack(G_297,L_BODY__145,TMP_518);
TMP_520=lisp.callFunctionWithCallStack(G_162,G_176,TMP_517,TMP_519);
}
return TMP_520;
});
lisp.CL_put(G_147,G_159,TMP_514);
}catch(TMP_1){G_521.func();
console.log(TMP_1.message);
}


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_7;
let G_9;
let G_10;
let G_11;
let G_12;
let G_13;
let G_15;
let G_18;
let G_21;
let G_24;
let G_25;
let G_27;
let G_29;
let G_31;
let G_34;
let G_37;
let G_39;
let G_52;
let G_59;
let G_61;
let G_64;
let G_67;
let G_69;
let G_71;
let G_73;
let G_84;
let G_91;
let G_96;
let G_97;
let G_102;
let G_104;
let G_105;
let G_106;
let G_112;
let G_118;
let G_119;
let G_122;
let G_139;
let G_141;
let G_158;
let G_172;
let G_195;
let G_206;
let G_212;
let G_214;
let G_218;
let G_221;
let G_226;
let G_234;
let G_236;
let G_239;
let G_241;
let G_242;
let G_243;
let G_248;
let G_249;
let G_252;
let CL_COMMON_LISP_EXPAND_DESTRUCTURING_BIND;
let CL_COMMON_LISP_PARSE_DB_LAMBDA_LIST;
let CL_COMMON_LISP_PERCENTDB_LENGTH;
let TMP_250;
// toplevel defun
let F_PERCENTDB_LENGTH_2;
F_PERCENTDB_LENGTH_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let L_G7__7;
let TMP_8;
let L_G6__6;
let TMP_6;
let TMP_4;
let L_COUNT__5;
let L_L__4;
let BLOCK_RESULT_NIL__3;
let L_LIST__1;
L_LIST__1=arguments[0];
BLOCK_NIL__3: for(;;){{
L_L__4=lisp.values1(L_LIST__1);
L_COUNT__5=lisp.values1(0);
for(;;){
TMP_4=lisp.callFunctionWithCallStack(G_5,L_L__4);
if(lisp.values1(TMP_4) !== lisp.S_nil){
BLOCK_RESULT_NIL__3=lisp.values1(L_COUNT__5);
break BLOCK_NIL__3;
}else{
{
TMP_6=lisp.callFunctionWithCallStack(G_7,L_L__4);
L_G6__6=lisp.values1(TMP_6);
TMP_8=lisp.callFunctionWithCallStack(G_9,L_COUNT__5,1);
L_G7__7=lisp.values1(TMP_8);
L_L__4=lisp.values1(L_G6__6);
L_COUNT__5=lisp.values1(L_G7__7);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__3=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__3;
});
CL_COMMON_LISP_PERCENTDB_LENGTH=lisp.values1(F_PERCENTDB_LENGTH_2);
let F_PARSE_DB_LAMBDA_LIST_14;
F_PARSE_DB_LAMBDA_LIST_14=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_15, arguments.length);
}
let TMP_232;
let TMP_231;
let TMP_230;
let TMP_229;
let TMP_228;
let TMP_227;
let TMP_225;
let TMP_222;
let TMP_220;
let TMP_219;
let TMP_217;
let TMP_216;
let TMP_215;
let TMP_213;
let L_PLIST__76;
let TMP_211;
let TMP_210;
let TMP_209;
let TMP_208;
let TMP_207;
let TMP_205;
let TMP_204;
let TMP_203;
let TMP_202;
let TMP_201;
let TMP_200;
let TMP_199;
let TMP_198;
let TMP_197;
let L_G48__75;
let TMP_196;
let L_G47__74;
let TMP_194;
let L_G46__73;
let TMP_193;
let TMP_192;
let TMP_191;
let TMP_190;
let L_CDR_VAR__72;
let TMP_189;
let TMP_188;
let TMP_187;
let TMP_186;
let TMP_185;
let TMP_184;
let TMP_183;
let TMP_182;
let TMP_181;
let TMP_180;
let L_CDR_VAR__70;
let TMP_179;
let TMP_178;
let TMP_177;
let TMP_176;
let L_CAR_VAR__69;
let TMP_175;
let TMP_174;
let TMP_173;
let L_G44__68;
let TMP_171;
let TMP_170;
let TMP_169;
let TMP_168;
let L_CDR_VAR__65;
let TMP_167;
let TMP_166;
let TMP_165;
let TMP_164;
let TMP_163;
let TMP_162;
let TMP_161;
let TMP_160;
let TMP_159;
let TMP_157;
let TMP_156;
let TMP_155;
let L_G41__64;
let TMP_154;
let L_LEN__63;
let TMP_153;
let L_G40__62;
let TMP_152;
let TMP_151;
let TMP_150;
let TMP_149;
let L_CDR_VAR__61;
let TMP_148;
let TMP_147;
let TMP_146;
let TMP_145;
let L_G39__60;
let TMP_144;
let TMP_143;
let L_G38__59;
let TMP_142;
let L_G37__58;
let TMP_140;
let TMP_138;
let TMP_137;
let TMP_136;
let L_TMP__56;
let TMP_135;
let L_G35__55;
let TMP_134;
let TMP_133;
let TMP_132;
let TMP_131;
let TMP_130;
let L_G34__54;
let TMP_129;
let TMP_128;
let TMP_127;
let TMP_126;
let L_G33__53;
let TMP_125;
let TMP_124;
let TMP_123;
let TMP_121;
let L_G32__52;
let TMP_120;
let TMP_117;
let TMP_116;
let TMP_115;
let TMP_114;
let TMP_113;
let TMP_111;
let TMP_110;
let TMP_109;
let TMP_108;
let TMP_107;
let TMP_103;
let TMP_101;
let TMP_100;
let TMP_99;
let TMP_98;
let L_SUPPLIED_VALUE__48;
let TMP_95;
let TMP_94;
let L_KEY__47;
let TMP_93;
let TMP_92;
let L_G29__46;
let TMP_90;
let L_LEN__45;
let TMP_89;
let L_G28__44;
let TMP_88;
let TMP_87;
let TMP_86;
let TMP_85;
let TMP_83;
let L_KEY__43;
let TMP_82;
let L_G27__42;
let TMP_81;
let TMP_80;
let L_G26__41;
let TMP_79;
let TMP_78;
let TMP_77;
let TMP_76;
let TMP_75;
let L_G25__40;
let TMP_74;
let TMP_72;
let L_G24__39;
let TMP_70;
let L_G23__38;
let TMP_68;
let TMP_66;
let TMP_65;
let TMP_63;
let TMP_62;
let L_G20__35;
let TMP_60;
let L_G19__34;
let TMP_58;
let L_G18__33;
let TMP_57;
let TMP_56;
let TMP_55;
let L_G17__32;
let TMP_54;
let L_G16__31;
let TMP_53;
let L_X__30;
let TMP_51;
let TMP_50;
let TMP_49;
let TMP_48;
let TMP_47;
let L_LL__29;
let BLOCK_RESULT_NIL__28;
let TMP_46;
let TMP_45;
let TMP_44;
let L_G9__27;
let TMP_43;
let TMP_42;
let L_G8__26;
let TMP_41;
let TMP_40;
let TMP_38;
let TMP_36;
let TMP_35;
let TMP_33;
let TMP_32;
let L_CHECK_KEY_PLACEHOLDER__25;
let L_CHECK_ARG_PLACEHOLDER__24;
let L_ALLOW_OTHER_KEYS_P__23;
let L_KEYS__22;
let L_KEYP__21;
let L_RESTP__20;
let L_OPTIONALP__19;
let L_STATE__18;
let L_MAX__17;
let L_MIN__16;
let L_PATH__15;
let F_INVALID_LAMBDA_LIST__14;
let TMP_28;
let F_MAKE_KEYWORD__13;
let TMP_22;
let F_DB_GENSYM__11;
let TMP_16;
let L_ARG__9;
let L_LAMBDA_LIST__8;
L_LAMBDA_LIST__8=arguments[0];
L_ARG__9=arguments[1];
{
TMP_16=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_20;
let TMP_19;
let TMP_17;
TMP_17=lisp.callFunctionWithCallStack(G_18);
TMP_19=lisp.CL_cons(TMP_17,lisp.symbolValue(G_13));
lisp.setSymbolValue(G_13, lisp.values1(TMP_19));
TMP_20=lisp.callFunctionWithCallStack(G_21,G_13.value);
return TMP_20;
});
F_DB_GENSYM__11=lisp.values1(TMP_16);
TMP_22=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_26;
let TMP_23;
let L_X__12;
L_X__12=arguments[0];
TMP_23=lisp.callFunctionWithCallStack(G_24,L_X__12);
TMP_26=lisp.callFunctionWithCallStack(G_27,TMP_23,G_25);
return TMP_26;
});
F_MAKE_KEYWORD__13=lisp.values1(TMP_22);
TMP_28=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_30;
TMP_30=lisp.callFunctionWithCallStack(G_31,G_29.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 108, 97, 109, 98, 100, 97, 32, 108, 105, 115, 116, 58, 32, 126, 83])),L_LAMBDA_LIST__8);
return TMP_30;
});
F_INVALID_LAMBDA_LIST__14=lisp.values1(TMP_28);
{
L_PATH__15=lisp.values1(L_ARG__9);
L_MIN__16=lisp.values1(0);
L_MAX__17=lisp.values1(0);
L_STATE__18=lisp.values1(lisp.S_nil);
L_OPTIONALP__19=lisp.values1(lisp.S_nil);
L_RESTP__20=lisp.values1(lisp.S_nil);
L_KEYP__21=lisp.values1(lisp.S_nil);
L_KEYS__22=lisp.values1(lisp.S_nil);
L_ALLOW_OTHER_KEYS_P__23=lisp.values1(lisp.S_nil);
L_CHECK_ARG_PLACEHOLDER__24=lisp.values1(lisp.S_nil);
L_CHECK_KEY_PLACEHOLDER__25=lisp.values1(lisp.S_nil);
TMP_32=F_DB_GENSYM__11();
TMP_33=lisp.callFunctionWithCallStack(G_34,TMP_32,lisp.S_nil);
L_CHECK_ARG_PLACEHOLDER__24=(TMP_35=lisp.values1(TMP_33));
TMP_36=lisp.CL_cons(TMP_35,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_36));
TMP_38=lisp.callFunctionWithCallStack(G_39,L_LAMBDA_LIST__8);
TMP_40=lisp.CL_eq(G_37,TMP_38);
if(lisp.values1(TMP_40) !== lisp.S_nil){
{
TMP_41=lisp.callFunctionWithCallStack(G_21,L_LAMBDA_LIST__8);
L_G8__26=lisp.values1(TMP_41);
TMP_42=lisp.callFunctionWithCallStack(G_7,L_LAMBDA_LIST__8);
L_LAMBDA_LIST__8=lisp.values1(TMP_42);
}
if(lisp.values1(L_LAMBDA_LIST__8) !== lisp.S_nil){
}else{
F_INVALID_LAMBDA_LIST__14();
}
{
TMP_43=lisp.callFunctionWithCallStack(G_21,L_LAMBDA_LIST__8);
L_G9__27=lisp.values1(TMP_43);
TMP_44=lisp.callFunctionWithCallStack(G_7,L_LAMBDA_LIST__8);
L_LAMBDA_LIST__8=lisp.values1(TMP_44);
}
TMP_45=lisp.callFunctionWithCallStack(G_34,lisp.values1(lisp.values1(L_G9__27)),L_ARG__9);
TMP_46=lisp.CL_cons(TMP_45,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_46));
}else{
}
BLOCK_NIL__28: for(;;){{
L_LL__29=lisp.values1(L_LAMBDA_LIST__8);
for(;;){
TMP_47=lisp.callFunctionWithCallStack(G_5,L_LL__29);
if(lisp.values1(TMP_47) !== lisp.S_nil){
if(lisp.values1(L_LL__29) !== lisp.S_nil){
L_RESTP__20=lisp.values1(G_12);
TMP_49=lisp.callFunctionWithCallStack(G_34,L_LL__29,L_PATH__15);
TMP_50=lisp.CL_cons(TMP_49,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_50));
TMP_48=lisp.values1(G_10.value);
}else{
TMP_48=lisp.values1(lisp.S_nil);
}
BLOCK_RESULT_NIL__28=TMP_48;
break BLOCK_NIL__28;
}else{
{
TMP_51=lisp.callFunctionWithCallStack(G_39,L_LL__29);
L_X__30=lisp.values1(TMP_51);
{
TMP_53=lisp.CL_eq(L_STATE__18,G_52);
L_G16__31=lisp.values1(TMP_53);
if(lisp.values1(L_G16__31) !== lisp.S_nil){
{
TMP_54=lisp.CL_symbolp(L_X__30);
L_G17__32=lisp.values1(TMP_54);
if(lisp.values1(L_G17__32) !== lisp.S_nil){
TMP_55=lisp.callFunctionWithCallStack(G_34,L_X__30,lisp.S_nil);
TMP_56=lisp.CL_cons(TMP_55,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_56));
}else{
{
TMP_57=lisp.CL_consp(L_X__30);
L_G18__33=lisp.values1(TMP_57);
if(lisp.values1(L_G18__33) !== lisp.S_nil){
{
TMP_58=lisp.callFunctionWithCallStack(G_59,L_X__30);
L_G19__34=lisp.values1(TMP_58);
{
TMP_60=lisp.callFunctionWithCallStack(G_61,L_G19__34,lisp.makeCons(1, lisp.makeCons(2, lisp.S_nil)));
L_G20__35=lisp.values1(TMP_60);
if(lisp.values1(L_G20__35) !== lisp.S_nil){
TMP_62=lisp.callFunctionWithCallStack(G_39,L_X__30);
TMP_63=lisp.callFunctionWithCallStack(G_64,L_X__30);
TMP_65=lisp.callFunctionWithCallStack(G_34,TMP_62,TMP_63);
TMP_66=lisp.CL_cons(TMP_65,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_66));
}else{
F_INVALID_LAMBDA_LIST__14();
}
}
}
}else{
F_INVALID_LAMBDA_LIST__14();
}
}
}
}
}else{
{
TMP_68=lisp.CL_eq(L_X__30,G_67);
L_G23__38=lisp.values1(TMP_68);
if(lisp.values1(L_G23__38) !== lisp.S_nil){
L_STATE__18=lisp.values1(G_52);
}else{
{
TMP_70=lisp.CL_eq(L_X__30,G_69);
L_G24__39=lisp.values1(TMP_70);
if(lisp.values1(L_G24__39) !== lisp.S_nil){
TMP_72=lisp.CL_eq(L_STATE__18,G_71);
if(lisp.values1(TMP_72) !== lisp.S_nil){
}else{
F_INVALID_LAMBDA_LIST__14();
}
L_ALLOW_OTHER_KEYS_P__23=lisp.values1(G_12);
}else{
{
TMP_74=lisp.CL_eq(L_X__30,G_73);
L_G25__40=lisp.values1(TMP_74);
if(lisp.values1(L_G25__40) !== lisp.S_nil){
if(lisp.values1(L_KEYP__21) !== lisp.S_nil){
F_INVALID_LAMBDA_LIST__14();
}else{
}
TMP_75=F_DB_GENSYM__11();
TMP_76=lisp.callFunctionWithCallStack(G_34,TMP_75,L_PATH__15);
L_CHECK_KEY_PLACEHOLDER__25=(TMP_77=lisp.values1(TMP_76));
TMP_78=lisp.CL_cons(TMP_77,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_78));
L_STATE__18=lisp.values1(G_71);
L_KEYP__21=lisp.values1(G_12);
}else{
{
TMP_79=lisp.CL_eq(L_STATE__18,G_71);
L_G26__41=lisp.values1(TMP_79);
if(lisp.values1(L_G26__41) !== lisp.S_nil){
TMP_80=lisp.callFunctionWithCallStack(G_9,L_MAX__17,2);
L_MAX__17=lisp.values1(TMP_80);
{
TMP_81=lisp.CL_symbolp(L_X__30);
L_G27__42=lisp.values1(TMP_81);
if(lisp.values1(L_G27__42) !== lisp.S_nil){
{
TMP_82=F_MAKE_KEYWORD__13(L_X__30);
L_KEY__43=lisp.values1(TMP_82);
TMP_83=lisp.CL_cons(L_KEY__43,L_KEYS__22);
L_KEYS__22=lisp.values1(TMP_83);
TMP_85=lisp.callFunctionWithCallStack(G_34,G_84,L_PATH__15,L_KEY__43);
TMP_86=lisp.callFunctionWithCallStack(G_34,L_X__30,TMP_85);
TMP_87=lisp.CL_cons(TMP_86,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_87));
}
}else{
{
TMP_88=lisp.CL_consp(L_X__30);
L_G28__44=lisp.values1(TMP_88);
if(lisp.values1(L_G28__44) !== lisp.S_nil){
{
TMP_89=lisp.callFunctionWithCallStack(G_59,L_X__30);
L_LEN__45=lisp.values1(TMP_89);
{
TMP_90=lisp.callFunctionWithCallStack(G_91,1,L_LEN__45,3);
L_G29__46=lisp.values1(TMP_90);
if(lisp.values1(L_G29__46) !== lisp.S_nil){
{
TMP_92=lisp.callFunctionWithCallStack(G_39,L_X__30);
TMP_93=F_MAKE_KEYWORD__13(TMP_92);
L_KEY__47=lisp.values1(TMP_93);
TMP_94=lisp.CL_cons(L_KEY__47,L_KEYS__22);
L_KEYS__22=lisp.values1(TMP_94);
{
TMP_95=F_DB_GENSYM__11();
L_SUPPLIED_VALUE__48=lisp.values1(TMP_95);
TMP_98=lisp.callFunctionWithCallStack(G_34,G_84,L_PATH__15,L_KEY__47,lisp.makeCons(G_96, lisp.makeCons(G_97, lisp.S_nil)));
TMP_99=lisp.callFunctionWithCallStack(G_34,L_SUPPLIED_VALUE__48,TMP_98);
TMP_100=lisp.CL_cons(TMP_99,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_100));
TMP_101=lisp.callFunctionWithCallStack(G_102,L_LEN__45,3);
if(lisp.values1(TMP_101) !== lisp.S_nil){
TMP_103=lisp.callFunctionWithCallStack(G_104,L_X__30);
TMP_107=lisp.callFunctionWithCallStack(G_34,G_106,L_SUPPLIED_VALUE__48,lisp.makeCons(G_96, lisp.makeCons(G_97, lisp.S_nil)));
TMP_108=lisp.callFunctionWithCallStack(G_34,G_105,TMP_107);
TMP_109=lisp.callFunctionWithCallStack(G_34,TMP_103,TMP_108);
TMP_110=lisp.CL_cons(TMP_109,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_110));
}else{
}
TMP_111=lisp.callFunctionWithCallStack(G_39,L_X__30);
TMP_113=lisp.callFunctionWithCallStack(G_34,G_106,L_SUPPLIED_VALUE__48,lisp.makeCons(G_96, lisp.makeCons(G_97, lisp.S_nil)));
TMP_114=lisp.callFunctionWithCallStack(G_64,L_X__30);
TMP_115=lisp.callFunctionWithCallStack(G_34,G_112,TMP_113,TMP_114,L_SUPPLIED_VALUE__48);
TMP_116=lisp.callFunctionWithCallStack(G_34,TMP_111,TMP_115);
TMP_117=lisp.CL_cons(TMP_116,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_117));
}
}
}else{
F_INVALID_LAMBDA_LIST__14();
}
}
}
}else{
F_INVALID_LAMBDA_LIST__14();
}
}
}
}
}else{
{
TMP_120=lisp.callFunctionWithCallStack(G_61,L_X__30,lisp.makeCons(G_118, lisp.makeCons(G_119, lisp.S_nil)));
L_G32__52=lisp.values1(TMP_120);
if(lisp.values1(L_G32__52) !== lisp.S_nil){
L_RESTP__20=lisp.values1(G_12);
{
TMP_121=lisp.callFunctionWithCallStack(G_122,L_LL__29);
if(lisp.values1(TMP_121) !== lisp.S_nil){
TMP_124=lisp.callFunctionWithCallStack(G_64,L_LL__29);
TMP_125=lisp.CL_symbolp(TMP_124);
TMP_123=lisp.values1(TMP_125);
}else{
TMP_123=lisp.values1(lisp.S_nil);
}
L_G33__53=lisp.values1(TMP_123);
if(lisp.values1(L_G33__53) !== lisp.S_nil){
TMP_126=lisp.callFunctionWithCallStack(G_64,L_LL__29);
TMP_127=lisp.callFunctionWithCallStack(G_34,TMP_126,L_PATH__15);
TMP_128=lisp.CL_cons(TMP_127,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_128));
{
TMP_129=lisp.callFunctionWithCallStack(G_21,L_LL__29);
L_G34__54=lisp.values1(TMP_129);
TMP_130=lisp.callFunctionWithCallStack(G_7,L_LL__29);
L_LL__29=lisp.values1(TMP_130);
}
}else{
{
TMP_131=lisp.callFunctionWithCallStack(G_122,L_LL__29);
if(lisp.values1(TMP_131) !== lisp.S_nil){
TMP_133=lisp.callFunctionWithCallStack(G_64,L_LL__29);
TMP_134=lisp.CL_consp(TMP_133);
TMP_132=lisp.values1(TMP_134);
}else{
TMP_132=lisp.values1(lisp.S_nil);
}
L_G35__55=lisp.values1(TMP_132);
if(lisp.values1(L_G35__55) !== lisp.S_nil){
{
TMP_135=F_DB_GENSYM__11();
L_TMP__56=lisp.values1(TMP_135);
TMP_136=lisp.callFunctionWithCallStack(G_34,L_TMP__56,L_PATH__15);
TMP_137=lisp.CL_cons(TMP_136,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_137));
TMP_138=lisp.callFunctionWithCallStack(G_64,L_LL__29);
G_15.func(TMP_138,L_TMP__56);
}
}else{
F_INVALID_LAMBDA_LIST__14();
}
}
}
}
}else{
{
TMP_140=lisp.CL_eq(L_X__30,G_139);
L_G37__58=lisp.values1(TMP_140);
if(lisp.values1(L_G37__58) !== lisp.S_nil){
if(lisp.values1(L_OPTIONALP__19) !== lisp.S_nil){
F_INVALID_LAMBDA_LIST__14();
}else{
}
L_STATE__18=lisp.values1(G_141);
L_OPTIONALP__19=lisp.values1(G_12);
}else{
{
TMP_142=lisp.CL_eq(L_STATE__18,G_141);
L_G38__59=lisp.values1(TMP_142);
if(lisp.values1(L_G38__59) !== lisp.S_nil){
TMP_143=lisp.callFunctionWithCallStack(G_9,L_MAX__17,1);
L_MAX__17=lisp.values1(TMP_143);
{
TMP_144=lisp.CL_symbolp(L_X__30);
L_G39__60=lisp.values1(TMP_144);
if(lisp.values1(L_G39__60) !== lisp.S_nil){
TMP_145=lisp.callFunctionWithCallStack(G_34,G_39,L_PATH__15);
TMP_146=lisp.callFunctionWithCallStack(G_34,L_X__30,TMP_145);
TMP_147=lisp.CL_cons(TMP_146,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_147));
{
TMP_148=F_DB_GENSYM__11();
L_CDR_VAR__61=lisp.values1(TMP_148);
TMP_149=lisp.callFunctionWithCallStack(G_34,G_122,L_PATH__15);
TMP_150=lisp.callFunctionWithCallStack(G_34,L_CDR_VAR__61,TMP_149);
TMP_151=lisp.CL_cons(TMP_150,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_151));
L_PATH__15=lisp.values1(L_CDR_VAR__61);
}
}else{
{
TMP_152=lisp.CL_consp(L_X__30);
L_G40__62=lisp.values1(TMP_152);
if(lisp.values1(L_G40__62) !== lisp.S_nil){
{
TMP_153=lisp.callFunctionWithCallStack(G_59,L_X__30);
L_LEN__63=lisp.values1(TMP_153);
{
TMP_154=lisp.callFunctionWithCallStack(G_91,1,L_LEN__63,3);
L_G41__64=lisp.values1(TMP_154);
if(lisp.values1(L_G41__64) !== lisp.S_nil){
TMP_155=lisp.callFunctionWithCallStack(G_102,L_LEN__63,3);
if(lisp.values1(TMP_155) !== lisp.S_nil){
TMP_156=lisp.callFunctionWithCallStack(G_104,L_X__30);
TMP_157=lisp.callFunctionWithCallStack(G_158,G_112,L_PATH__15,lisp.makeCons(G_12, lisp.makeCons(lisp.S_nil, lisp.S_nil)));
TMP_159=lisp.callFunctionWithCallStack(G_34,TMP_156,TMP_157);
TMP_160=lisp.CL_cons(TMP_159,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_160));
}else{
}
TMP_161=lisp.callFunctionWithCallStack(G_39,L_X__30);
TMP_162=lisp.callFunctionWithCallStack(G_34,G_39,L_PATH__15);
TMP_163=lisp.callFunctionWithCallStack(G_64,L_X__30);
TMP_164=lisp.callFunctionWithCallStack(G_34,G_112,L_PATH__15,TMP_162,TMP_163);
TMP_165=lisp.callFunctionWithCallStack(G_34,TMP_161,TMP_164);
TMP_166=lisp.CL_cons(TMP_165,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_166));
{
TMP_167=F_DB_GENSYM__11();
L_CDR_VAR__65=lisp.values1(TMP_167);
TMP_168=lisp.callFunctionWithCallStack(G_34,G_122,L_PATH__15);
TMP_169=lisp.callFunctionWithCallStack(G_34,L_CDR_VAR__65,TMP_168);
TMP_170=lisp.CL_cons(TMP_169,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_170));
L_PATH__15=lisp.values1(L_CDR_VAR__65);
}
}else{
F_INVALID_LAMBDA_LIST__14();
}
}
}
}else{
F_INVALID_LAMBDA_LIST__14();
}
}
}
}
}else{
{
TMP_171=lisp.callFunctionWithCallStack(G_172,L_X__30);
L_G44__68=lisp.values1(TMP_171);
if(lisp.values1(L_G44__68) !== lisp.S_nil){
TMP_173=lisp.callFunctionWithCallStack(G_9,L_MIN__16,1);
L_MIN__16=lisp.values1(TMP_173);
TMP_174=lisp.callFunctionWithCallStack(G_9,L_MAX__17,1);
L_MAX__17=lisp.values1(TMP_174);
{
TMP_175=F_DB_GENSYM__11();
L_CAR_VAR__69=lisp.values1(TMP_175);
TMP_176=lisp.callFunctionWithCallStack(G_34,G_39,L_PATH__15);
TMP_177=lisp.callFunctionWithCallStack(G_34,L_CAR_VAR__69,TMP_176);
TMP_178=lisp.CL_cons(TMP_177,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_178));
G_15.func(L_X__30,L_CAR_VAR__69);
}
{
TMP_179=F_DB_GENSYM__11();
L_CDR_VAR__70=lisp.values1(TMP_179);
TMP_180=lisp.callFunctionWithCallStack(G_34,G_122,L_PATH__15);
TMP_181=lisp.callFunctionWithCallStack(G_34,L_CDR_VAR__70,TMP_180);
TMP_182=lisp.CL_cons(TMP_181,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_182));
L_PATH__15=lisp.values1(L_CDR_VAR__70);
}
}else{
TMP_183=lisp.CL_symbolp(L_X__30);
if(lisp.values1(TMP_183) !== lisp.S_nil){
}else{
F_INVALID_LAMBDA_LIST__14();
}
TMP_184=lisp.callFunctionWithCallStack(G_9,L_MIN__16,1);
L_MIN__16=lisp.values1(TMP_184);
TMP_185=lisp.callFunctionWithCallStack(G_9,L_MAX__17,1);
L_MAX__17=lisp.values1(TMP_185);
TMP_186=lisp.callFunctionWithCallStack(G_34,G_39,L_PATH__15);
TMP_187=lisp.callFunctionWithCallStack(G_34,L_X__30,TMP_186);
TMP_188=lisp.CL_cons(TMP_187,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_188));
{
TMP_189=F_DB_GENSYM__11();
L_CDR_VAR__72=lisp.values1(TMP_189);
TMP_190=lisp.callFunctionWithCallStack(G_34,G_122,L_PATH__15);
TMP_191=lisp.callFunctionWithCallStack(G_34,L_CDR_VAR__72,TMP_190);
TMP_192=lisp.CL_cons(TMP_191,lisp.symbolValue(G_10));
lisp.setSymbolValue(G_10, lisp.values1(TMP_192));
L_PATH__15=lisp.values1(L_CDR_VAR__72);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
{
TMP_193=lisp.callFunctionWithCallStack(G_122,L_LL__29);
L_G46__73=lisp.values1(TMP_193);
L_LL__29=lisp.values1(L_G46__73);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__28=lisp.values1(lisp.S_nil);
break;
}
TMP_194=lisp.callFunctionWithCallStack(G_7,L_CHECK_ARG_PLACEHOLDER__24);
{
L_G47__74=lisp.values1(L_RESTP__20);
if(lisp.values1(L_G47__74) !== lisp.S_nil){
TMP_196=lisp.values1(L_G47__74);
}else{
{
L_G48__75=lisp.values1(L_KEYP__21);
if(lisp.values1(L_G48__75) !== lisp.S_nil){
TMP_197=lisp.values1(L_G48__75);
}else{
TMP_197=lisp.values1(lisp.S_nil);
}
}
TMP_196=lisp.values1(lisp.values1(TMP_197));
}
}
if(lisp.values1(lisp.values1(TMP_196)) !== lisp.S_nil){
TMP_199=lisp.callFunctionWithCallStack(G_34,G_3,L_ARG__9);
TMP_200=lisp.callFunctionWithCallStack(G_34,G_91,L_MIN__16,TMP_199);
TMP_198=lisp.values1(TMP_200);
}else{
TMP_201=lisp.callFunctionWithCallStack(G_34,G_3,L_ARG__9);
TMP_202=lisp.callFunctionWithCallStack(G_34,G_91,L_MIN__16,TMP_201,L_MAX__17);
TMP_198=lisp.values1(TMP_202);
}
TMP_203=lisp.callFunctionWithCallStack(G_34,G_96,L_LAMBDA_LIST__8);
TMP_204=lisp.callFunctionWithCallStack(G_34,G_31,G_29.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),TMP_203,L_ARG__9);
TMP_205=lisp.callFunctionWithCallStack(G_34,G_195,TMP_198,TMP_204);
lisp.callFunctionWithCallStack(G_206,TMP_194,TMP_205);
if(lisp.values1(L_CHECK_KEY_PLACEHOLDER__25) !== lisp.S_nil){
TMP_208=lisp.callFunctionWithCallStack(G_105,L_ALLOW_OTHER_KEYS_P__23);
TMP_207=lisp.values1(TMP_208);
}else{
TMP_207=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_207) !== lisp.S_nil){
TMP_210=lisp.callFunctionWithCallStack(G_7,L_CHECK_KEY_PLACEHOLDER__25);
{
TMP_211=lisp.callFunctionWithCallStack(G_18);
L_PLIST__76=lisp.values1(TMP_211);
TMP_213=lisp.callFunctionWithCallStack(G_64,L_CHECK_KEY_PLACEHOLDER__25);
TMP_215=lisp.callFunctionWithCallStack(G_34,G_214,L_PLIST__76);
TMP_216=lisp.callFunctionWithCallStack(G_34,L_PLIST__76,TMP_213,TMP_215);
TMP_217=lisp.callFunctionWithCallStack(G_34,TMP_216);
TMP_219=lisp.callFunctionWithCallStack(G_34,G_218,L_PLIST__76);
TMP_220=lisp.callFunctionWithCallStack(G_34,TMP_219);
TMP_222=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_224;
let TMP_223;
let L_KEY__77;
L_KEY__77=arguments[0];
TMP_223=lisp.callFunctionWithCallStack(G_34,G_39,L_PLIST__76);
TMP_224=lisp.callFunctionWithCallStack(G_34,G_106,L_KEY__77,TMP_223);
return TMP_224;
});
TMP_225=lisp.callFunctionWithCallStack(G_226,TMP_222,L_KEYS__22);
TMP_227=lisp.CL_cons(G_221,TMP_225);
TMP_228=lisp.callFunctionWithCallStack(G_34,G_39,L_PLIST__76);
TMP_229=lisp.callFunctionWithCallStack(G_34,G_31,G_29.func(lisp.codeArrayToString([85, 110, 107, 110, 111, 119, 110, 32, 38, 107, 101, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 58, 32, 126, 83])),TMP_228);
TMP_230=lisp.callFunctionWithCallStack(G_34,G_195,TMP_227,TMP_229);
TMP_231=lisp.callFunctionWithCallStack(G_34,G_212,TMP_217,TMP_220,TMP_230);
}
TMP_232=lisp.callFunctionWithCallStack(G_206,TMP_210,lisp.values1(TMP_231));
TMP_209=TMP_232;
}else{
TMP_209=lisp.values1(lisp.S_nil);
}
}
}
return TMP_209;
});
CL_COMMON_LISP_PARSE_DB_LAMBDA_LIST=lisp.values1(F_PARSE_DB_LAMBDA_LIST_14);
let F_EXPAND_DESTRUCTURING_BIND_233;
F_EXPAND_DESTRUCTURING_BIND_233=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_234, arguments.length);
}
let TMP_247;
let TMP_246;
let TMP_245;
let TMP_244;
let TMP_240;
let TMP_238;
let TMP_237;
let L_G_EXPRESSION__84;
let TMP_235;
let save_STARTMP_DB_VARSSTAR__83;
let save_STARDB_BINDINGSSTAR__82;
let L_BODY__80;
let L_EXPRESSION__79;
let L_LAMBDA_LIST__78;
L_LAMBDA_LIST__78=arguments[0];
L_EXPRESSION__79=arguments[1];
L_BODY__80=arguments[2];
{
save_STARDB_BINDINGSSTAR__82=G_10.value;
G_10.value=lisp.values1(lisp.S_nil);
save_STARTMP_DB_VARSSTAR__83=G_13.value;
G_13.value=lisp.values1(lisp.S_nil);
TMP_235=lisp.callFunctionWithCallStack(G_18);
L_G_EXPRESSION__84=lisp.values1(TMP_235);
try{
G_15.func(L_LAMBDA_LIST__78,L_G_EXPRESSION__84);
TMP_237=lisp.callFunctionWithCallStack(G_34,L_G_EXPRESSION__84,L_EXPRESSION__79);
TMP_238=lisp.callFunctionWithCallStack(G_34,TMP_237);
TMP_240=lisp.callFunctionWithCallStack(G_241,lisp.symbolValue(G_10));
TMP_244=lisp.CL_cons(G_243,lisp.symbolValue(G_13));
TMP_245=lisp.callFunctionWithCallStack(G_34,G_242,TMP_244);
TMP_246=lisp.callFunctionWithCallStack(G_158,G_239,TMP_240,TMP_245,L_BODY__80);
TMP_247=lisp.callFunctionWithCallStack(G_34,G_236,TMP_238,TMP_246);
}finally{
G_13.value=save_STARTMP_DB_VARSSTAR__83;
G_10.value=save_STARDB_BINDINGSSTAR__82;
}
}
return TMP_247;
});
CL_COMMON_LISP_EXPAND_DESTRUCTURING_BIND=lisp.values1(F_EXPAND_DESTRUCTURING_BIND_233);
// initialize symbols
G_3 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_5 = lisp.intern('ATOM', 'COMMON-LISP');
G_7 = lisp.intern('CDR', 'COMMON-LISP');
G_9 = lisp.intern('+', 'COMMON-LISP');
G_10 = lisp.intern('*DB-BINDINGS*', 'COMMON-LISP');
G_11 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_12 = lisp.intern('T', 'COMMON-LISP');
G_13 = lisp.intern('*TMP-DB-VARS*', 'COMMON-LISP');
G_15 = lisp.intern('PARSE-DB-LAMBDA-LIST', 'COMMON-LISP');
G_18 = lisp.intern('GENSYM', 'COMMON-LISP');
G_21 = lisp.intern('CAR', 'COMMON-LISP');
G_24 = lisp.intern('STRING', 'COMMON-LISP');
G_25 = lisp.intern('KEYWORD', 'KEYWORD');
G_27 = lisp.intern('INTERN', 'COMMON-LISP');
G_29 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_31 = lisp.intern('ERROR', 'COMMON-LISP');
G_34 = lisp.intern('LIST', 'COMMON-LISP');
G_37 = lisp.intern('&WHOLE', 'COMMON-LISP');
G_39 = lisp.intern('FIRST', 'COMMON-LISP');
G_52 = lisp.intern('AUX', 'KEYWORD');
G_59 = lisp.intern('LENGTH', 'COMMON-LISP');
G_61 = lisp.intern('MEMBER', 'COMMON-LISP');
G_64 = lisp.intern('SECOND', 'COMMON-LISP');
G_67 = lisp.intern('&AUX', 'COMMON-LISP');
G_69 = lisp.intern('&ALLOW-OTHER-KEYS', 'COMMON-LISP');
G_71 = lisp.intern('KEY', 'KEYWORD');
G_73 = lisp.intern('&KEY', 'COMMON-LISP');
G_84 = lisp.intern('GETF', 'COMMON-LISP');
G_91 = lisp.intern('<=', 'COMMON-LISP');
G_96 = lisp.intern('QUOTE', 'COMMON-LISP');
G_97 = lisp.makeSymbol("DEFAULT");G_102 = lisp.intern('=', 'COMMON-LISP');
G_104 = lisp.intern('THIRD', 'COMMON-LISP');
G_105 = lisp.intern('NOT', 'COMMON-LISP');
G_106 = lisp.intern('EQ', 'COMMON-LISP');
G_112 = lisp.intern('IF', 'COMMON-LISP');
G_118 = lisp.intern('&REST', 'COMMON-LISP');
G_119 = lisp.intern('&BODY', 'COMMON-LISP');
G_122 = lisp.intern('REST', 'COMMON-LISP');
G_139 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_141 = lisp.intern('OPTIONAL', 'KEYWORD');
G_158 = lisp.intern('LIST*', 'COMMON-LISP');
G_172 = lisp.intern('LISTP', 'COMMON-LISP');
G_195 = lisp.intern('UNLESS', 'COMMON-LISP');
G_206 = lisp.intern('RPLACA', 'COMMON-LISP');
G_212 = lisp.intern('DO', 'COMMON-LISP');
G_214 = lisp.intern('CDDR', 'COMMON-LISP');
G_218 = lisp.intern('NULL', 'COMMON-LISP');
G_221 = lisp.intern('OR', 'COMMON-LISP');
G_226 = lisp.intern('%MAPCAR', 'SYSTEM');
G_234 = lisp.intern('EXPAND-DESTRUCTURING-BIND', 'COMMON-LISP');
G_236 = lisp.intern('LET', 'COMMON-LISP');
G_239 = lisp.intern('LET*', 'COMMON-LISP');
G_241 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_242 = lisp.intern('DECLARE', 'COMMON-LISP');
G_243 = lisp.intern('IGNORABLE', 'COMMON-LISP');
G_248 = lisp.intern('DESTRUCTURING-BIND', 'COMMON-LISP');
G_249 = lisp.intern('MACRO', 'COMPILER');
G_252 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_PERCENTDB_LENGTH.lisp_name = '%DB-LENGTH'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_PERCENTDB_LENGTH);
lisp.CL_put(G_10,G_11,G_12);
lisp.CL_put(G_13,G_11,G_12);
CL_COMMON_LISP_PARSE_DB_LAMBDA_LIST.lisp_name = 'PARSE-DB-LAMBDA-LIST'
lisp.setSymbolFunction(G_15, CL_COMMON_LISP_PARSE_DB_LAMBDA_LIST);
CL_COMMON_LISP_EXPAND_DESTRUCTURING_BIND.lisp_name = 'EXPAND-DESTRUCTURING-BIND'
lisp.setSymbolFunction(G_234, CL_COMMON_LISP_EXPAND_DESTRUCTURING_BIND);
TMP_250=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_251;
let L_BODY__87;
let L_EXPRESSION__86;
let L_LAMBDA_LIST__85;
L_LAMBDA_LIST__85=arguments[0];
L_EXPRESSION__86=arguments[1];
L_BODY__87=lisp.jsArrayToList(arguments, 2);
TMP_251=G_234.func(L_LAMBDA_LIST__85,L_EXPRESSION__86,L_BODY__87);
return TMP_251;
});
lisp.CL_put(G_248,G_249,TMP_250);
}catch(TMP_1){G_252.func();
console.log(TMP_1.message);
}


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_7;
let G_9;
let G_14;
let G_15;
let G_21;
let G_22;
let G_24;
let G_30;
let G_37;
let G_47;
let G_53;
let G_57;
let G_71;
let G_75;
let G_76;
let G_77;
let G_78;
let G_80;
let G_85;
let G_90;
let G_92;
let G_94;
let G_95;
let G_96;
let G_97;
let G_98;
let G_99;
let G_102;
let G_104;
let G_106;
let G_107;
let G_108;
let G_110;
let G_113;
let G_119;
let G_126;
let G_132;
let G_136;
let G_139;
let G_142;
let G_149;
let G_153;
let G_154;
let G_166;
let G_184;
let G_185;
let G_186;
let G_195;
let G_211;
let G_212;
let G_213;
let G_214;
let G_215;
let G_231;
let G_233;
let G_235;
let G_237;
let G_245;
let G_251;
let G_253;
let G_256;
let G_260;
let G_261;
let G_262;
let G_263;
let G_264;
let G_278;
let G_279;
let G_289;
let G_302;
let G_312;
let G_321;
let CL_COMMON_LISP_BANGGET_SETF_EXPANSION;
let TMP_298;
let TMP_274;
let TMP_207;
let TMP_180;
let TMP_145;
let TMP_100;
// toplevel defun
let F_BANGGET_SETF_EXPANSION_2;
F_BANGGET_SETF_EXPANSION_2=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_93;
let TMP_91;
let TMP_89;
let TMP_66;
let TMP_65;
let TMP_64;
let TMP_63;
let L_G4__18;
let TMP_62;
let TMP_61;
let TMP_60;
let TMP_59;
let TMP_58;
let TMP_56;
let TMP_55;
let TMP_54;
let L_FN__17;
let TMP_52;
let TMP_51;
let TMP_50;
let TMP_49;
let TMP_48;
let L_STORE__16;
let TMP_46;
let L_VARS__15;
let TMP_45;
let TMP_44;
let TMP_43;
let L_G3__14;
let TMP_42;
let TMP_41;
let TMP_40;
let TMP_39;
let TMP_38;
let TMP_36;
let TMP_35;
let TMP_34;
let TMP_33;
let L_STORE__13;
let TMP_32;
let L_VARS__12;
let TMP_31;
let TMP_29;
let TMP_28;
let L_G2__11;
let TMP_27;
let TMP_26;
let L_G1__10;
let TMP_25;
let TMP_23;
let TMP_20;
let TMP_19;
let TMP_18;
let TMP_17;
let TMP_16;
let TMP_13;
let L_STORE__9;
let TMP_12;
let TMP_11;
let L_G0__8;
let TMP_10;
let L_SETF_EXPANDER__7;
let F_GENSYMS__6;
let TMP_4;
let L_ENVIRONMENT__2;
let L_PLACE__1;
L_PLACE__1=arguments[0];
L_ENVIRONMENT__2=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
{
TMP_4=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_8;
let TMP_5;
let L_LIST__4;
L_LIST__4=arguments[0];
TMP_5=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_6;
let L_X__5;
L_X__5=arguments[0];
TMP_6=lisp.callFunctionWithCallStack(G_7);
return TMP_6;
});
TMP_8=lisp.callFunctionWithCallStack(G_9,TMP_5,L_LIST__4);
return TMP_8;
});
F_GENSYMS__6=lisp.values1(TMP_4);
{
L_SETF_EXPANDER__7=lisp.values1(lisp.S_nil);
{
TMP_10=lisp.CL_symbolp(L_PLACE__1);
L_G0__8=lisp.values1(TMP_10);
if(lisp.values1(L_G0__8) !== lisp.S_nil){
{
TMP_12=lisp.callFunctionWithCallStack(G_7);
L_STORE__9=lisp.values1(TMP_12);
TMP_13=lisp.callFunctionWithCallStack(G_14,L_STORE__9);
TMP_16=lisp.callFunctionWithCallStack(G_14,G_15,L_PLACE__1,L_STORE__9);
TMP_17=lisp.CL_values(lisp.S_nil,lisp.S_nil,TMP_13,TMP_16,L_PLACE__1);
}
TMP_11=TMP_17;
}else{
{
TMP_18=lisp.CL_consp(L_PLACE__1);
if(lisp.values1(TMP_18) !== lisp.S_nil){
TMP_20=lisp.callFunctionWithCallStack(G_21,L_PLACE__1);
TMP_23=lisp.callFunctionWithCallStack(G_24,TMP_20,G_22);
L_SETF_EXPANDER__7=(TMP_25=lisp.values1(TMP_23));
TMP_19=lisp.values1(TMP_25);
}else{
TMP_19=lisp.values1(lisp.S_nil);
}
L_G1__10=lisp.values1(TMP_19);
if(lisp.values1(L_G1__10) !== lisp.S_nil){
{
TMP_27=lisp.CL_symbolp(L_SETF_EXPANDER__7);
L_G2__11=lisp.values1(TMP_27);
if(lisp.values1(L_G2__11) !== lisp.S_nil){
{
TMP_29=lisp.callFunctionWithCallStack(G_30,L_PLACE__1);
TMP_31=F_GENSYMS__6(TMP_29);
L_VARS__12=lisp.values1(TMP_31);
TMP_32=lisp.callFunctionWithCallStack(G_7);
L_STORE__13=lisp.values1(TMP_32);
TMP_33=lisp.callFunctionWithCallStack(G_30,L_PLACE__1);
TMP_34=lisp.callFunctionWithCallStack(G_14,L_STORE__13);
TMP_35=lisp.callFunctionWithCallStack(G_14,L_STORE__13);
TMP_36=lisp.callFunctionWithCallStack(G_37,L_VARS__12,TMP_35);
TMP_38=lisp.CL_cons(L_SETF_EXPANDER__7,TMP_36);
TMP_39=lisp.callFunctionWithCallStack(G_21,L_PLACE__1);
TMP_40=lisp.CL_cons(TMP_39,L_VARS__12);
TMP_41=lisp.CL_values(L_VARS__12,TMP_33,TMP_34,TMP_38,TMP_40);
}
TMP_28=TMP_41;
}else{
{
TMP_42=lisp.CL_consp(L_SETF_EXPANDER__7);
L_G3__14=lisp.values1(TMP_42);
if(lisp.values1(L_G3__14) !== lisp.S_nil){
{
TMP_44=lisp.callFunctionWithCallStack(G_30,L_PLACE__1);
TMP_45=F_GENSYMS__6(TMP_44);
L_VARS__15=lisp.values1(TMP_45);
TMP_46=lisp.callFunctionWithCallStack(G_7);
L_STORE__16=lisp.values1(TMP_46);
TMP_48=lisp.callFunctionWithCallStack(G_21,L_SETF_EXPANDER__7);
TMP_49=lisp.callFunctionWithCallStack(G_30,L_SETF_EXPANDER__7);
TMP_50=lisp.CL_cons(G_47,TMP_49);
TMP_51=lisp.callFunctionWithCallStack(G_14,G_47,TMP_48,TMP_50);
TMP_52=lisp.callFunctionWithCallStack(G_53,TMP_51);
L_FN__17=lisp.values1(TMP_52);
TMP_54=lisp.callFunctionWithCallStack(G_30,L_PLACE__1);
TMP_55=lisp.callFunctionWithCallStack(G_14,L_STORE__16);
TMP_56=lisp.callFunctionWithCallStack(G_57,L_FN__17,L_VARS__15);
TMP_58=lisp.CL_funcall(lisp.values1(TMP_56),L_STORE__16);
TMP_59=lisp.callFunctionWithCallStack(G_21,L_PLACE__1);
TMP_60=lisp.CL_cons(TMP_59,L_VARS__15);
TMP_61=lisp.CL_values(L_VARS__15,TMP_54,TMP_55,TMP_58,TMP_60);
}
TMP_43=TMP_61;
}else{
{
TMP_62=lisp.CL_functionp(L_SETF_EXPANDER__7);
L_G4__18=lisp.values1(TMP_62);
if(lisp.values1(L_G4__18) !== lisp.S_nil){
TMP_64=lisp.callFunctionWithCallStack(G_30,L_PLACE__1);
TMP_65=lisp.CL_funcall(lisp.values1(L_SETF_EXPANDER__7),TMP_64);
TMP_63=TMP_65;
}else{
TMP_63=lisp.values1(lisp.S_nil);
}
}
TMP_43=TMP_63;
}
}
TMP_28=TMP_43;
}
}
TMP_26=TMP_28;
}else{
TMP_66=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_88;
let TMP_87;
let TMP_86;
let TMP_84;
let TMP_83;
let TMP_82;
let TMP_81;
let TMP_79;
let TMP_74;
let L_VALS__25;
let TMP_73;
let L_VARS__24;
let TMP_72;
let TMP_70;
let L_NEWVAR__23;
let TMP_69;
let TMP_68;
let TMP_67;
let L_G6__22;
let L_EXPANDED_P__21;
let L_EXPANSION__20;
L_EXPANSION__20=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_EXPANDED_P__21=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G6__22=lisp.jsArrayToList(arguments, 2);
if(lisp.values1(L_EXPANDED_P__21) !== lisp.S_nil){
TMP_68=G_3.func(L_EXPANSION__20,L_ENVIRONMENT__2);
TMP_67=TMP_68;
}else{
{
TMP_69=lisp.callFunctionWithCallStack(G_7);
L_NEWVAR__23=lisp.values1(TMP_69);
TMP_70=lisp.callFunctionWithCallStack(G_71,L_EXPANSION__20);
TMP_72=F_GENSYMS__6(TMP_70);
L_VARS__24=lisp.values1(TMP_72);
TMP_73=lisp.callFunctionWithCallStack(G_71,L_EXPANSION__20);
L_VALS__25=lisp.values1(TMP_73);
TMP_74=lisp.callFunctionWithCallStack(G_14,L_NEWVAR__23);
TMP_79=lisp.callFunctionWithCallStack(G_80,L_EXPANSION__20);
TMP_81=lisp.callFunctionWithCallStack(G_14,G_78,TMP_79);
TMP_82=lisp.callFunctionWithCallStack(G_14,G_77,TMP_81);
TMP_83=lisp.callFunctionWithCallStack(G_14,G_76,TMP_82);
TMP_84=lisp.callFunctionWithCallStack(G_85,G_75,TMP_83,L_NEWVAR__23,L_VARS__24);
TMP_86=lisp.callFunctionWithCallStack(G_80,L_EXPANSION__20);
TMP_87=lisp.CL_cons(TMP_86,L_VARS__24);
TMP_88=lisp.CL_values(L_VARS__24,L_VALS__25,TMP_74,TMP_84,TMP_87);
}
TMP_67=TMP_88;
}
return TMP_67;
});
TMP_89=lisp.callFunctionWithCallStack(G_90,TMP_66);
TMP_91=lisp.callFunctionWithCallStack(G_92,L_PLACE__1,L_ENVIRONMENT__2);
TMP_93=lisp.CL_multipleValueCall(TMP_89,TMP_91);
TMP_26=TMP_93;
}
}
TMP_11=TMP_26;
}
}
}
}
return TMP_11;
});
CL_COMMON_LISP_BANGGET_SETF_EXPANSION=lisp.values1(F_BANGGET_SETF_EXPANSION_2);
// initialize symbols
G_3 = lisp.intern('!GET-SETF-EXPANSION', 'COMMON-LISP');
G_7 = lisp.intern('GENSYM', 'COMMON-LISP');
G_9 = lisp.intern('%MAPCAR', 'SYSTEM');
G_14 = lisp.intern('LIST', 'COMMON-LISP');
G_15 = lisp.intern('SETQ', 'COMMON-LISP');
G_21 = lisp.intern('FIRST', 'COMMON-LISP');
G_22 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_24 = lisp.intern('GET', 'COMMON-LISP');
G_30 = lisp.intern('REST', 'COMMON-LISP');
G_37 = lisp.intern('APPEND', 'COMMON-LISP');
G_47 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_53 = lisp.intern('EVAL', 'COMMON-LISP');
G_57 = lisp.intern('APPLY', 'COMMON-LISP');
G_71 = lisp.intern('CDR', 'COMMON-LISP');
G_75 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_76 = lisp.intern('FDEFINITION', 'COMMON-LISP');
G_77 = lisp.intern('QUOTE', 'COMMON-LISP');
G_78 = lisp.intern('SETF', 'COMMON-LISP');
G_80 = lisp.intern('CAR', 'COMMON-LISP');
G_85 = lisp.intern('LIST*', 'COMMON-LISP');
G_90 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_92 = lisp.intern('MACROEXPAND-1', 'COMMON-LISP');
G_94 = lisp.intern('DEFSETF', 'COMMON-LISP');
G_95 = lisp.intern('DEFINE-SETF-EXPANDER', 'COMMON-LISP');
G_96 = lisp.intern('DEFINE-MODIFY-MACRO', 'COMMON-LISP');
G_97 = lisp.intern('INCF', 'COMMON-LISP');
G_98 = lisp.intern('DECF', 'COMMON-LISP');
G_99 = lisp.intern('MACRO', 'COMPILER');
G_102 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_104 = lisp.intern('<=', 'COMMON-LISP');
G_106 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_107 = lisp.intern('&REST', 'COMMON-LISP');
G_108 = lisp.intern('PAIRS', 'COMMON-LISP');
G_110 = lisp.intern('ERROR', 'COMMON-LISP');
G_113 = lisp.intern('LET*', 'COMMON-LISP');
G_119 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_126 = lisp.intern('ENDP', 'COMMON-LISP');
G_132 = lisp.intern('T', 'COMMON-LISP');
G_136 = lisp.intern('SECOND', 'COMMON-LISP');
G_139 = lisp.intern('CDDR', 'COMMON-LISP');
G_142 = lisp.intern('PROGN', 'COMMON-LISP');
G_149 = lisp.intern('ACCESS-FN', 'COMMON-LISP');
G_153 = lisp.intern('SYMBOL', 'COMMON-LISP');
G_154 = lisp.intern('CHECK-TYPE', 'COMMON-LISP');
G_166 = lisp.intern('PUT', 'SYSTEM');
G_184 = lisp.intern('LAMBDA-LIST', 'COMMON-LISP');
G_185 = lisp.intern('&BODY', 'COMMON-LISP');
G_186 = lisp.intern('BODY', 'COMMON-LISP');
G_195 = lisp.intern('DESTRUCTURING-BIND', 'COMMON-LISP');
G_211 = lisp.intern('NAME', 'COMMON-LISP');
G_212 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_213 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_214 = lisp.intern('DOCUMENTATION', 'COMMON-LISP');
G_215 = lisp.intern('DOCUMENTATION-P', 'COMMON-LISP');
G_231 = lisp.intern('NULL', 'COMMON-LISP');
G_233 = lisp.intern('ACCESS-FORM', 'COMMON-LISP');
G_235 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_237 = lisp.intern('NIL', 'COMMON-LISP');
G_245 = lisp.intern('CADR', 'COMMON-LISP');
G_251 = lisp.intern('PUSH', 'COMMON-LISP');
G_253 = lisp.intern('CAAR', 'COMMON-LISP');
G_256 = lisp.intern('DEFMACRO', 'COMMON-LISP');
G_260 = lisp.intern('MULTIPLE-VALUE-BIND', 'COMMON-LISP');
G_261 = lisp.intern('VARS', 'COMMON-LISP');
G_262 = lisp.intern('VALUES', 'COMMON-LISP');
G_263 = lisp.intern('STORES', 'COMMON-LISP');
G_264 = lisp.intern('SET-FORM', 'COMMON-LISP');
G_278 = lisp.makeSymbol("G11");G_279 = lisp.intern('N', 'COMMON-LISP');
G_289 = lisp.intern('+', 'COMMON-LISP');
G_302 = lisp.makeSymbol("G13");G_312 = lisp.intern('-', 'COMMON-LISP');
G_321 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_BANGGET_SETF_EXPANSION.lisp_name = '!GET-SETF-EXPANSION'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_BANGGET_SETF_EXPANSION);
TMP_100=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_144;
let TMP_143;
let F_SETF_EXPAND__31;
let TMP_124;
let F_SETF_EXPAND_1__30;
let TMP_111;
let L_PAIRS__29;
let L_G16__28;
let TMP_109;
let TMP_105;
let TMP_103;
let TMP_101;
let L_G15__27;
let L_G7__26;
L_G7__26=lisp.jsArrayToList(arguments, 0);
{
L_G15__27=lisp.values1(L_G7__26);
{
TMP_101=lisp.callFunctionWithCallStack(G_102,L_G15__27);
TMP_103=lisp.callFunctionWithCallStack(G_104,0,TMP_101);
if(lisp.values1(TMP_103) !== lisp.S_nil){
TMP_105=lisp.values1(lisp.S_nil);
}else{
TMP_109=lisp.callFunctionWithCallStack(G_110,G_106.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_107, lisp.makeCons(G_108, lisp.S_nil)),L_G15__27);
TMP_105=lisp.values1(lisp.values1(TMP_109));
}
L_G16__28=lisp.values1(TMP_105);
L_PAIRS__29=lisp.values1(L_G15__27);
{
TMP_111=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_123;
let TMP_122;
let TMP_121;
let TMP_112;
let L_VALUE__33;
let L_PLACE__32;
L_PLACE__32=arguments[0];
L_VALUE__33=arguments[1];
TMP_112=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_120;
let TMP_118;
let TMP_117;
let TMP_116;
let TMP_115;
let TMP_114;
let L_G17__39;
let L_ACCESS__38;
let L_SET__37;
let L_STORE__36;
let L_FORMS__35;
let L_VARS__34;
L_VARS__34=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_FORMS__35=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_STORE__36=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_SET__37=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_ACCESS__38=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G17__39=lisp.jsArrayToList(arguments, 5);
TMP_114=lisp.CL_symbolFunction(G_14);
TMP_115=lisp.callFunctionWithCallStack(G_37,L_VARS__34,L_STORE__36);
TMP_116=lisp.callFunctionWithCallStack(G_14,L_VALUE__33);
TMP_117=lisp.callFunctionWithCallStack(G_37,L_FORMS__35,TMP_116);
TMP_118=lisp.callFunctionWithCallStack(G_119,TMP_114,TMP_115,TMP_117);
TMP_120=lisp.callFunctionWithCallStack(G_14,G_113,TMP_118,L_SET__37);
return TMP_120;
});
TMP_121=lisp.callFunctionWithCallStack(G_90,TMP_112);
TMP_122=G_3.func(L_PLACE__32);
TMP_123=lisp.CL_multipleValueCall(TMP_121,TMP_122);
return TMP_123;
});
F_SETF_EXPAND_1__30=lisp.values1(TMP_111);
TMP_124=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_141;
let TMP_140;
let TMP_138;
let TMP_137;
let TMP_135;
let TMP_134;
let TMP_133;
let L_G20__43;
let TMP_131;
let TMP_130;
let L_G19__42;
let TMP_129;
let TMP_128;
let TMP_127;
let L_G18__41;
let TMP_125;
let L_PAIRS__40;
L_PAIRS__40=arguments[0];
{
TMP_125=lisp.callFunctionWithCallStack(G_126,L_PAIRS__40);
L_G18__41=lisp.values1(TMP_125);
if(lisp.values1(L_G18__41) !== lisp.S_nil){
TMP_127=lisp.values1(lisp.S_nil);
}else{
{
TMP_128=lisp.callFunctionWithCallStack(G_71,L_PAIRS__40);
TMP_129=lisp.callFunctionWithCallStack(G_126,TMP_128);
L_G19__42=lisp.values1(TMP_129);
if(lisp.values1(L_G19__42) !== lisp.S_nil){
TMP_131=lisp.callFunctionWithCallStack(G_110,G_106.func(lisp.codeArrayToString([79, 100, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 115, 32, 116, 111, 32, 83, 69, 84, 70, 46])));
TMP_130=TMP_131;
}else{
{
L_G20__43=lisp.values1(G_132);
if(lisp.values1(L_G20__43) !== lisp.S_nil){
TMP_134=lisp.callFunctionWithCallStack(G_21,L_PAIRS__40);
TMP_135=lisp.callFunctionWithCallStack(G_136,L_PAIRS__40);
TMP_137=F_SETF_EXPAND_1__30(TMP_134,TMP_135);
TMP_138=lisp.callFunctionWithCallStack(G_139,L_PAIRS__40);
TMP_140=F_SETF_EXPAND__31(TMP_138);
TMP_141=lisp.CL_cons(TMP_137,TMP_140);
TMP_133=TMP_141;
}else{
TMP_133=lisp.values1(lisp.S_nil);
}
}
TMP_130=TMP_133;
}
}
TMP_127=TMP_130;
}
}
return TMP_127;
});
F_SETF_EXPAND__31=lisp.values1(TMP_124);
TMP_143=F_SETF_EXPAND__31(L_PAIRS__29);
TMP_144=lisp.CL_cons(G_142,TMP_143);
}
}
}
return TMP_144;
});
lisp.CL_put(G_78,G_99,TMP_100);
TMP_145=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_179;
let TMP_178;
let TMP_177;
let TMP_176;
let TMP_175;
let TMP_174;
let L_G31__59;
let L_G33__58;
let L_G32__57;
let TMP_173;
let L_G30__56;
let TMP_172;
let TMP_171;
let TMP_170;
let TMP_169;
let TMP_168;
let TMP_167;
let TMP_165;
let L_G27__55;
let TMP_164;
let L_G29__54;
let L_G28__53;
let TMP_163;
let L_G24__52;
let TMP_162;
let L_G26__51;
let TMP_161;
let TMP_160;
let TMP_159;
let L_G25__50;
let TMP_158;
let TMP_157;
let TMP_156;
let TMP_155;
let L_REST__49;
let L_G23__48;
let TMP_152;
let L_ACCESS_FN__47;
let TMP_151;
let L_G22__46;
let TMP_150;
let TMP_148;
let TMP_147;
let TMP_146;
let L_G21__45;
let L_G8__44;
L_G8__44=lisp.jsArrayToList(arguments, 0);
{
L_G21__45=lisp.values1(L_G8__44);
{
TMP_146=lisp.callFunctionWithCallStack(G_102,L_G21__45);
TMP_147=lisp.callFunctionWithCallStack(G_104,1,TMP_146);
if(lisp.values1(TMP_147) !== lisp.S_nil){
TMP_148=lisp.values1(lisp.S_nil);
}else{
TMP_150=lisp.callFunctionWithCallStack(G_110,G_106.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_149, lisp.makeCons(G_107, lisp.makeCons(G_30, lisp.S_nil))),L_G21__45);
TMP_148=lisp.values1(lisp.values1(TMP_150));
}
L_G22__46=lisp.values1(TMP_148);
TMP_151=lisp.callFunctionWithCallStack(G_21,L_G21__45);
L_ACCESS_FN__47=lisp.values1(TMP_151);
TMP_152=lisp.callFunctionWithCallStack(G_30,L_G21__45);
L_G23__48=lisp.values1(TMP_152);
L_REST__49=lisp.values1(L_G23__48);
lisp.callFunctionWithCallStack(G_154,L_ACCESS_FN__47,lisp.symbolValue(G_153));
{
TMP_155=lisp.callFunctionWithCallStack(G_21,L_REST__49);
if(lisp.values1(TMP_155) !== lisp.S_nil){
{
TMP_157=lisp.callFunctionWithCallStack(G_21,L_REST__49);
TMP_158=lisp.CL_symbolp(TMP_157);
L_G25__50=lisp.values1(TMP_158);
if(lisp.values1(L_G25__50) !== lisp.S_nil){
TMP_159=lisp.values1(L_G25__50);
}else{
{
TMP_160=lisp.callFunctionWithCallStack(G_21,L_REST__49);
TMP_161=lisp.CL_functionp(TMP_160);
L_G26__51=lisp.values1(TMP_161);
if(lisp.values1(L_G26__51) !== lisp.S_nil){
TMP_162=lisp.values1(L_G26__51);
}else{
TMP_162=lisp.values1(lisp.S_nil);
}
}
TMP_159=lisp.values1(lisp.values1(TMP_162));
}
}
TMP_156=lisp.values1(lisp.values1(TMP_159));
}else{
TMP_156=lisp.values1(lisp.S_nil);
}
L_G24__52=lisp.values1(TMP_156);
if(lisp.values1(L_G24__52) !== lisp.S_nil){
{
L_G28__53=lisp.values1(L_ACCESS_FN__47);
L_G29__54=lisp.values1(G_22);
TMP_164=lisp.callFunctionWithCallStack(G_21,L_REST__49);
L_G27__55=lisp.values1(TMP_164);
TMP_165=lisp.callFunctionWithCallStack(G_76,lisp.makeCons(G_78, lisp.makeCons(G_24, lisp.S_nil)));
lisp.CL_funcall(lisp.values1(TMP_165),L_G27__55,L_G28__53,L_G29__54);
}
TMP_167=lisp.callFunctionWithCallStack(G_14,G_77,L_ACCESS_FN__47);
TMP_168=lisp.callFunctionWithCallStack(G_21,L_REST__49);
TMP_169=lisp.callFunctionWithCallStack(G_14,G_77,TMP_168);
TMP_170=lisp.callFunctionWithCallStack(G_14,G_166,TMP_167,lisp.makeCons(G_77, lisp.makeCons(G_22, lisp.S_nil)),TMP_169);
TMP_171=lisp.callFunctionWithCallStack(G_14,G_77,L_ACCESS_FN__47);
TMP_172=lisp.callFunctionWithCallStack(G_14,G_142,TMP_170,TMP_171);
TMP_163=TMP_172;
}else{
{
L_G30__56=lisp.values1(G_132);
if(lisp.values1(L_G30__56) !== lisp.S_nil){
{
L_G32__57=lisp.values1(L_ACCESS_FN__47);
L_G33__58=lisp.values1(G_22);
L_G31__59=lisp.values1(L_REST__49);
TMP_174=lisp.callFunctionWithCallStack(G_76,lisp.makeCons(G_78, lisp.makeCons(G_24, lisp.S_nil)));
lisp.CL_funcall(lisp.values1(TMP_174),L_G31__59,L_G32__57,L_G33__58);
}
TMP_175=lisp.callFunctionWithCallStack(G_14,G_77,L_ACCESS_FN__47);
TMP_176=lisp.callFunctionWithCallStack(G_14,G_77,L_REST__49);
TMP_177=lisp.callFunctionWithCallStack(G_14,G_166,TMP_175,lisp.makeCons(G_77, lisp.makeCons(G_22, lisp.S_nil)),TMP_176);
TMP_178=lisp.callFunctionWithCallStack(G_14,G_77,L_ACCESS_FN__47);
TMP_179=lisp.callFunctionWithCallStack(G_14,G_142,TMP_177,TMP_178);
TMP_173=TMP_179;
}else{
TMP_173=lisp.values1(lisp.S_nil);
}
}
TMP_163=TMP_173;
}
}
}
}
return TMP_163;
});
lisp.CL_put(G_94,G_99,TMP_145);
TMP_180=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_206;
let TMP_205;
let TMP_204;
let TMP_203;
let TMP_202;
let TMP_201;
let TMP_200;
let TMP_199;
let L_G38__71;
let TMP_198;
let TMP_197;
let TMP_196;
let TMP_194;
let L_G40__70;
let L_G39__69;
let L_G_REST__68;
let TMP_193;
let TMP_192;
let L_BODY__67;
let L_G37__66;
let TMP_191;
let L_LAMBDA_LIST__65;
let TMP_190;
let L_G36__64;
let TMP_189;
let L_ACCESS_FN__63;
let TMP_188;
let L_G35__62;
let TMP_187;
let TMP_183;
let TMP_182;
let TMP_181;
let L_G34__61;
let L_G9__60;
L_G9__60=lisp.jsArrayToList(arguments, 0);
{
L_G34__61=lisp.values1(L_G9__60);
{
TMP_181=lisp.callFunctionWithCallStack(G_102,L_G34__61);
TMP_182=lisp.callFunctionWithCallStack(G_104,2,TMP_181);
if(lisp.values1(TMP_182) !== lisp.S_nil){
TMP_183=lisp.values1(lisp.S_nil);
}else{
TMP_187=lisp.callFunctionWithCallStack(G_110,G_106.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_149, lisp.makeCons(G_184, lisp.makeCons(G_185, lisp.makeCons(G_186, lisp.S_nil)))),L_G34__61);
TMP_183=lisp.values1(lisp.values1(TMP_187));
}
L_G35__62=lisp.values1(TMP_183);
TMP_188=lisp.callFunctionWithCallStack(G_21,L_G34__61);
L_ACCESS_FN__63=lisp.values1(TMP_188);
TMP_189=lisp.callFunctionWithCallStack(G_30,L_G34__61);
L_G36__64=lisp.values1(TMP_189);
TMP_190=lisp.callFunctionWithCallStack(G_21,L_G36__64);
L_LAMBDA_LIST__65=lisp.values1(TMP_190);
TMP_191=lisp.callFunctionWithCallStack(G_30,L_G36__64);
L_G37__66=lisp.values1(TMP_191);
L_BODY__67=lisp.values1(L_G37__66);
TMP_192=lisp.CL_symbolp(L_ACCESS_FN__63);
if(lisp.values1(TMP_192) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_110,G_106.func(lisp.codeArrayToString([68, 69, 70, 73, 78, 69, 45, 83, 69, 84, 70, 45, 69, 88, 80, 65, 78, 68, 69, 82, 32, 97, 99, 99, 101, 115, 115, 45, 102, 117, 110, 99, 116, 105, 111, 110, 32, 110, 97, 109, 101, 32, 126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 115, 121, 109, 98, 111, 108, 46])),L_ACCESS_FN__63);
}
{
TMP_193=lisp.callFunctionWithCallStack(G_7);
L_G_REST__68=lisp.values1(TMP_193);
{
L_G39__69=lisp.values1(L_ACCESS_FN__63);
L_G40__70=lisp.values1(G_22);
TMP_194=lisp.callFunctionWithCallStack(G_14,L_G_REST__68);
TMP_196=lisp.callFunctionWithCallStack(G_85,G_195,L_LAMBDA_LIST__65,L_G_REST__68,L_BODY__67);
TMP_197=lisp.callFunctionWithCallStack(G_14,G_47,TMP_194,TMP_196);
TMP_198=lisp.callFunctionWithCallStack(G_53,TMP_197);
L_G38__71=lisp.values1(TMP_198);
TMP_199=lisp.callFunctionWithCallStack(G_76,lisp.makeCons(G_78, lisp.makeCons(G_24, lisp.S_nil)));
lisp.CL_funcall(lisp.values1(TMP_199),L_G38__71,L_G39__69,L_G40__70);
}
TMP_200=lisp.callFunctionWithCallStack(G_14,G_77,L_ACCESS_FN__63);
TMP_201=lisp.callFunctionWithCallStack(G_14,L_G_REST__68);
TMP_202=lisp.callFunctionWithCallStack(G_85,G_195,L_LAMBDA_LIST__65,L_G_REST__68,L_BODY__67);
TMP_203=lisp.callFunctionWithCallStack(G_14,G_47,TMP_201,TMP_202);
TMP_204=lisp.callFunctionWithCallStack(G_14,G_166,TMP_200,lisp.makeCons(G_77, lisp.makeCons(G_22, lisp.S_nil)),TMP_203);
TMP_205=lisp.callFunctionWithCallStack(G_14,G_77,L_ACCESS_FN__63);
TMP_206=lisp.callFunctionWithCallStack(G_14,G_142,TMP_204,TMP_205);
}
}
}
return TMP_206;
});
lisp.CL_put(G_95,G_99,TMP_180);
TMP_207=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_273;
let TMP_272;
let TMP_271;
let TMP_270;
let TMP_269;
let TMP_268;
let TMP_267;
let TMP_266;
let TMP_265;
let TMP_259;
let TMP_258;
let TMP_257;
let L_REFERENCE__93;
let TMP_255;
let L_UPDATE_FORM__92;
let L_G57__91;
let TMP_254;
let TMP_252;
let L_G56__90;
let TMP_250;
let L_G55__89;
let TMP_249;
let TMP_248;
let TMP_247;
let TMP_246;
let TMP_244;
let TMP_243;
let L_G54__88;
let TMP_242;
let TMP_241;
let L_G53__87;
let TMP_240;
let TMP_239;
let TMP_236;
let TMP_234;
let TMP_232;
let TMP_230;
let L_VARS__86;
let L_REST__85;
let TMP_228;
let L_G46__83;
let TMP_226;
let L_DOCUMENTATION__82;
let TMP_225;
let TMP_224;
let L_DOCUMENTATION_P__81;
let TMP_223;
let L_G45__80;
let TMP_222;
let L_FUNCTION__79;
let TMP_221;
let L_G44__78;
let TMP_220;
let L_LAMBDA_LIST__77;
let TMP_219;
let L_G43__76;
let TMP_218;
let L_NAME__75;
let TMP_217;
let L_G42__74;
let TMP_216;
let TMP_210;
let TMP_209;
let TMP_208;
let L_G41__73;
let L_G10__72;
L_G10__72=lisp.jsArrayToList(arguments, 0);
{
L_G41__73=lisp.values1(L_G10__72);
{
TMP_208=lisp.callFunctionWithCallStack(G_102,L_G41__73);
TMP_209=lisp.callFunctionWithCallStack(G_104,3,TMP_208,4);
if(lisp.values1(TMP_209) !== lisp.S_nil){
TMP_210=lisp.values1(lisp.S_nil);
}else{
TMP_216=lisp.callFunctionWithCallStack(G_110,G_106.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_211, lisp.makeCons(G_184, lisp.makeCons(G_212, lisp.makeCons(G_213, lisp.makeCons(lisp.makeCons(G_214, lisp.makeCons(lisp.S_nil, lisp.makeCons(G_215, lisp.S_nil))), lisp.S_nil))))),L_G41__73);
TMP_210=lisp.values1(lisp.values1(TMP_216));
}
L_G42__74=lisp.values1(TMP_210);
TMP_217=lisp.callFunctionWithCallStack(G_21,L_G41__73);
L_NAME__75=lisp.values1(TMP_217);
TMP_218=lisp.callFunctionWithCallStack(G_30,L_G41__73);
L_G43__76=lisp.values1(TMP_218);
TMP_219=lisp.callFunctionWithCallStack(G_21,L_G43__76);
L_LAMBDA_LIST__77=lisp.values1(TMP_219);
TMP_220=lisp.callFunctionWithCallStack(G_30,L_G43__76);
L_G44__78=lisp.values1(TMP_220);
TMP_221=lisp.callFunctionWithCallStack(G_21,L_G44__78);
L_FUNCTION__79=lisp.values1(TMP_221);
TMP_222=lisp.callFunctionWithCallStack(G_30,L_G44__78);
L_G45__80=lisp.values1(TMP_222);
if(lisp.values1(L_G45__80) !== lisp.S_nil){
TMP_223=lisp.values1(G_132);
}else{
TMP_223=lisp.values1(lisp.S_nil);
}
L_DOCUMENTATION_P__81=lisp.values1(TMP_223);
if(lisp.values1(L_G45__80) !== lisp.S_nil){
TMP_225=lisp.callFunctionWithCallStack(G_21,L_G45__80);
TMP_224=lisp.values1(TMP_225);
}else{
TMP_224=lisp.values1(lisp.S_nil);
}
L_DOCUMENTATION__82=lisp.values1(TMP_224);
TMP_226=lisp.callFunctionWithCallStack(G_30,L_G45__80);
L_G46__83=lisp.values1(TMP_226);
{
try {
{
L_REST__85=lisp.values1(L_LAMBDA_LIST__77);
L_VARS__86=lisp.values1(lisp.S_nil);
let HOST_G48_STATE = 'G50';
HOST_G48: for(;;){
try{
switch(HOST_G48_STATE){
case 'G50':
case 'G49':
TMP_230=lisp.callFunctionWithCallStack(G_231,L_REST__85);
if(lisp.values1(TMP_230) !== lisp.S_nil){
TMP_232=lisp.callFunctionWithCallStack(G_14,G_77,L_FUNCTION__79);
TMP_234=lisp.callFunctionWithCallStack(G_235,L_VARS__86);
TMP_236=lisp.callFunctionWithCallStack(G_85,G_14,TMP_232,G_233,TMP_234);
throw new lisp.BlockValue(G_237,TMP_236);}else{
let HOST_G51_STATE = 'G52';
HOST_G51: for(;;){
try{
switch(HOST_G51_STATE){
case 'G52':
{
TMP_239=lisp.callFunctionWithCallStack(G_80,L_REST__85);
TMP_240=lisp.CL_eq(G_213,TMP_239);
L_G53__87=lisp.values1(TMP_240);
if(lisp.values1(L_G53__87) !== lisp.S_nil){
}else{
{
TMP_241=lisp.callFunctionWithCallStack(G_80,L_REST__85);
TMP_242=lisp.CL_eq(G_107,TMP_241);
L_G54__88=lisp.values1(TMP_242);
if(lisp.values1(L_G54__88) !== lisp.S_nil){
TMP_243=lisp.callFunctionWithCallStack(G_14,G_77,L_FUNCTION__79);
TMP_244=lisp.callFunctionWithCallStack(G_235,L_VARS__86);
TMP_246=lisp.callFunctionWithCallStack(G_37,TMP_244,lisp.makeCons(lisp.makeCons(G_245, lisp.makeCons(G_30, lisp.S_nil)), lisp.S_nil));
TMP_247=lisp.callFunctionWithCallStack(G_85,G_85,TMP_243,G_233,TMP_246);
throw new lisp.BlockValue(G_237,TMP_247);}else{
{
TMP_248=lisp.callFunctionWithCallStack(G_80,L_REST__85);
TMP_249=lisp.CL_symbolp(TMP_248);
L_G55__89=lisp.values1(TMP_249);
if(lisp.values1(L_G55__89) !== lisp.S_nil){
TMP_250=lisp.callFunctionWithCallStack(G_80,L_REST__85);
lisp.callFunctionWithCallStack(G_251,TMP_250,L_VARS__86);
}else{
{
L_G56__90=lisp.values1(G_132);
if(lisp.values1(L_G56__90) !== lisp.S_nil){
TMP_252=lisp.callFunctionWithCallStack(G_253,L_REST__85);
lisp.callFunctionWithCallStack(G_251,TMP_252,L_VARS__86);
}else{
}
}
}
}
}
}
}
}
}
break;
}catch(ERR_238){
if(ERR_238 instanceof lisp.TagValue && ERR_238.id==='HOST_G51'){HOST_G51_STATE=ERR_238.index;}
else{throw ERR_238;}}
}
{
TMP_254=lisp.callFunctionWithCallStack(G_71,L_REST__85);
L_G57__91=lisp.values1(TMP_254);
L_REST__85=lisp.values1(L_G57__91);
}
throw new lisp.TagValue('HOST_G48', 'G49');
}
}
break;
}catch(ERR_229){
if(ERR_229 instanceof lisp.TagValue && ERR_229.id==='HOST_G48'){HOST_G48_STATE=ERR_229.index;}
else{throw ERR_229;}}
}
}
TMP_228=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)))
}catch(E__227){if(E__227 instanceof lisp.BlockValue && E__227.name === G_237){TMP_228=E__227.value;}
else{throw E__227;}
}
L_UPDATE_FORM__92=lisp.values1(TMP_228);
{
TMP_255=lisp.callFunctionWithCallStack(G_7);
L_REFERENCE__93=lisp.values1(TMP_255);
TMP_257=lisp.CL_cons(L_REFERENCE__93,L_LAMBDA_LIST__77);
if(lisp.values1(L_DOCUMENTATION_P__81) !== lisp.S_nil){
TMP_259=lisp.callFunctionWithCallStack(G_14,L_DOCUMENTATION__82);
TMP_258=lisp.values1(lisp.values1(TMP_259));
}else{
TMP_258=lisp.values1(lisp.S_nil);
}
TMP_265=lisp.callFunctionWithCallStack(G_14,G_3,L_REFERENCE__93);
TMP_266=lisp.callFunctionWithCallStack(G_14,G_14,L_UPDATE_FORM__92);
TMP_267=lisp.callFunctionWithCallStack(G_14,G_37,G_262,TMP_266);
TMP_268=lisp.callFunctionWithCallStack(G_14,G_119,lisp.makeCons(G_212, lisp.makeCons(G_14, lisp.S_nil)),lisp.makeCons(G_37, lisp.makeCons(G_261, lisp.makeCons(G_263, lisp.S_nil))),TMP_267);
TMP_269=lisp.callFunctionWithCallStack(G_85,G_14,lisp.makeCons(G_77, lisp.makeCons(G_113, lisp.S_nil)),TMP_268,lisp.makeCons(G_264, lisp.S_nil));
TMP_270=lisp.callFunctionWithCallStack(G_14,G_260,lisp.makeCons(G_261, lisp.makeCons(G_262, lisp.makeCons(G_263, lisp.makeCons(G_264, lisp.makeCons(G_233, lisp.S_nil))))),TMP_265,TMP_269);
TMP_271=lisp.callFunctionWithCallStack(G_14,TMP_270);
TMP_272=lisp.callFunctionWithCallStack(G_37,TMP_258,TMP_271);
TMP_273=lisp.callFunctionWithCallStack(G_85,G_256,L_NAME__75,TMP_257,TMP_272);
}
}
}
}
return TMP_273;
});
lisp.CL_put(G_96,G_99,TMP_207);
TMP_274=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_297;
let TMP_296;
let TMP_295;
let TMP_286;
let L_G61__100;
let TMP_285;
let L_N__99;
let TMP_284;
let TMP_283;
let L_G60__98;
let TMP_282;
let L_G11__97;
let TMP_281;
let L_G59__96;
let TMP_280;
let TMP_277;
let TMP_276;
let TMP_275;
let L_G58__95;
let L_G12__94;
L_G12__94=lisp.jsArrayToList(arguments, 0);
{
L_G58__95=lisp.values1(L_G12__94);
{
TMP_275=lisp.callFunctionWithCallStack(G_102,L_G58__95);
TMP_276=lisp.callFunctionWithCallStack(G_104,1,TMP_275,2);
if(lisp.values1(TMP_276) !== lisp.S_nil){
TMP_277=lisp.values1(lisp.S_nil);
}else{
TMP_280=lisp.callFunctionWithCallStack(G_110,G_106.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_278, lisp.makeCons(G_213, lisp.makeCons(lisp.makeCons(G_279, lisp.makeCons(1, lisp.S_nil)), lisp.S_nil))),L_G58__95);
TMP_277=lisp.values1(lisp.values1(TMP_280));
}
L_G59__96=lisp.values1(TMP_277);
TMP_281=lisp.callFunctionWithCallStack(G_21,L_G58__95);
L_G11__97=lisp.values1(TMP_281);
TMP_282=lisp.callFunctionWithCallStack(G_30,L_G58__95);
L_G60__98=lisp.values1(TMP_282);
if(lisp.values1(L_G60__98) !== lisp.S_nil){
TMP_284=lisp.callFunctionWithCallStack(G_21,L_G60__98);
TMP_283=lisp.values1(TMP_284);
}else{
TMP_283=lisp.values1(1);
}
L_N__99=lisp.values1(TMP_283);
TMP_285=lisp.callFunctionWithCallStack(G_30,L_G60__98);
L_G61__100=lisp.values1(TMP_285);
TMP_286=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_294;
let TMP_293;
let TMP_292;
let TMP_291;
let TMP_290;
let TMP_288;
let TMP_287;
let L_G62__106;
let L_ACCESS_FORM__105;
let L_SET_FORM__104;
let L_STORES__103;
let L_VALUES__102;
let L_VARS__101;
L_VARS__101=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALUES__102=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_STORES__103=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_SET_FORM__104=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_ACCESS_FORM__105=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G62__106=lisp.jsArrayToList(arguments, 5);
TMP_287=lisp.CL_symbolFunction(G_14);
TMP_288=lisp.callFunctionWithCallStack(G_37,L_VARS__101,L_STORES__103);
TMP_290=lisp.callFunctionWithCallStack(G_14,G_289,L_ACCESS_FORM__105,L_N__99);
TMP_291=lisp.callFunctionWithCallStack(G_14,TMP_290);
TMP_292=lisp.callFunctionWithCallStack(G_37,L_VALUES__102,TMP_291);
TMP_293=lisp.callFunctionWithCallStack(G_119,TMP_287,TMP_288,TMP_292);
TMP_294=lisp.callFunctionWithCallStack(G_14,G_113,TMP_293,L_SET_FORM__104);
return TMP_294;
});
TMP_295=lisp.callFunctionWithCallStack(G_90,TMP_286);
TMP_296=G_3.func(L_G11__97);
TMP_297=lisp.CL_multipleValueCall(TMP_295,TMP_296);
}
}
return TMP_297;
});
lisp.CL_put(G_97,G_99,TMP_274);
TMP_298=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_320;
let TMP_319;
let TMP_318;
let TMP_309;
let L_G66__113;
let TMP_308;
let L_N__112;
let TMP_307;
let TMP_306;
let L_G65__111;
let TMP_305;
let L_G13__110;
let TMP_304;
let L_G64__109;
let TMP_303;
let TMP_301;
let TMP_300;
let TMP_299;
let L_G63__108;
let L_G14__107;
L_G14__107=lisp.jsArrayToList(arguments, 0);
{
L_G63__108=lisp.values1(L_G14__107);
{
TMP_299=lisp.callFunctionWithCallStack(G_102,L_G63__108);
TMP_300=lisp.callFunctionWithCallStack(G_104,1,TMP_299,2);
if(lisp.values1(TMP_300) !== lisp.S_nil){
TMP_301=lisp.values1(lisp.S_nil);
}else{
TMP_303=lisp.callFunctionWithCallStack(G_110,G_106.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_302, lisp.makeCons(G_213, lisp.makeCons(lisp.makeCons(G_279, lisp.makeCons(1, lisp.S_nil)), lisp.S_nil))),L_G63__108);
TMP_301=lisp.values1(lisp.values1(TMP_303));
}
L_G64__109=lisp.values1(TMP_301);
TMP_304=lisp.callFunctionWithCallStack(G_21,L_G63__108);
L_G13__110=lisp.values1(TMP_304);
TMP_305=lisp.callFunctionWithCallStack(G_30,L_G63__108);
L_G65__111=lisp.values1(TMP_305);
if(lisp.values1(L_G65__111) !== lisp.S_nil){
TMP_307=lisp.callFunctionWithCallStack(G_21,L_G65__111);
TMP_306=lisp.values1(TMP_307);
}else{
TMP_306=lisp.values1(1);
}
L_N__112=lisp.values1(TMP_306);
TMP_308=lisp.callFunctionWithCallStack(G_30,L_G65__111);
L_G66__113=lisp.values1(TMP_308);
TMP_309=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_317;
let TMP_316;
let TMP_315;
let TMP_314;
let TMP_313;
let TMP_311;
let TMP_310;
let L_G67__119;
let L_ACCESS_FORM__118;
let L_SET_FORM__117;
let L_STORES__116;
let L_VALUES__115;
let L_VARS__114;
L_VARS__114=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALUES__115=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_STORES__116=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_SET_FORM__117=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_ACCESS_FORM__118=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G67__119=lisp.jsArrayToList(arguments, 5);
TMP_310=lisp.CL_symbolFunction(G_14);
TMP_311=lisp.callFunctionWithCallStack(G_37,L_VARS__114,L_STORES__116);
TMP_313=lisp.callFunctionWithCallStack(G_14,G_312,L_ACCESS_FORM__118,L_N__112);
TMP_314=lisp.callFunctionWithCallStack(G_14,TMP_313);
TMP_315=lisp.callFunctionWithCallStack(G_37,L_VALUES__115,TMP_314);
TMP_316=lisp.callFunctionWithCallStack(G_119,TMP_310,TMP_311,TMP_315);
TMP_317=lisp.callFunctionWithCallStack(G_14,G_113,TMP_316,L_SET_FORM__117);
return TMP_317;
});
TMP_318=lisp.callFunctionWithCallStack(G_90,TMP_309);
TMP_319=G_3.func(L_G13__110);
TMP_320=lisp.CL_multipleValueCall(TMP_318,TMP_319);
}
}
return TMP_320;
});
lisp.CL_put(G_98,G_99,TMP_298);
}catch(TMP_1){G_321.func();
console.log(TMP_1.message);
}


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_6;
let G_8;
let G_10;
let G_12;
let G_13;
let G_14;
let G_16;
let G_19;
let G_21;
let G_23;
let G_25;
let G_28;
let G_30;
let G_33;
let G_35;
let G_38;
let G_39;
let G_41;
let G_43;
let G_45;
let G_47;
let G_55;
let G_57;
let G_61;
let G_64;
let G_71;
let G_72;
let G_75;
let G_77;
let G_79;
let G_80;
let G_81;
let G_82;
let G_84;
let G_86;
let G_88;
let G_91;
let G_92;
let G_94;
let G_95;
let G_100;
let G_103;
let G_105;
let G_112;
let G_113;
let G_133;
let G_134;
let G_140;
let G_153;
let G_156;
let G_158;
let CL_FFI_JS_GREATERCL;
let CL_FFI_CL_GREATERJS;
let CL_FFI_JS_EVAL;
let CL_FFI_ARRAY;
let CL_FFI_PERCENTOBJECT;
let CL_COMMON_LISP_JS_SYMBOL_P;
let TMP_129;
let TMP_108;
let TMP_73;
// toplevel defun
let F_JS_SYMBOL_P_2;
F_JS_SYMBOL_P_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_11;
let TMP_9;
let TMP_7;
let TMP_5;
let TMP_4;
let L_SYMBOL__1;
L_SYMBOL__1=arguments[0];
TMP_4=lisp.CL_symbolp(L_SYMBOL__1);
if(lisp.values1(TMP_4) !== lisp.S_nil){
TMP_7=lisp.callFunctionWithCallStack(G_8,L_SYMBOL__1);
TMP_9=lisp.callFunctionWithCallStack(G_10,TMP_7);
TMP_11=lisp.callFunctionWithCallStack(G_12,G_6.func(lisp.codeArrayToString([74, 83])),TMP_9);
TMP_5=TMP_11;
}else{
TMP_5=lisp.values1(lisp.S_nil);
}
return TMP_5;
});
CL_COMMON_LISP_JS_SYMBOL_P=lisp.values1(F_JS_SYMBOL_P_2);
let F_PERCENTOBJECT_15;
F_PERCENTOBJECT_15=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_16, arguments.length);
}
let L_G11__13;
let TMP_37;
let TMP_36;
let TMP_34;
let TMP_32;
let TMP_31;
let L_G9__11;
let TMP_29;
let TMP_27;
let TMP_26;
let L_G8__10;
let TMP_24;
let L_VALUE__9;
let TMP_22;
let L_KEY__8;
let TMP_20;
let TMP_18;
let L_REST__7;
let BLOCK_RESULT_NIL__6;
let L_OBJECT__5;
let TMP_17;
let L_PLIST__3;
L_PLIST__3=lisp.jsArrayToList(arguments, 0);
{
TMP_17=Object();
L_OBJECT__5=lisp.values1(TMP_17);
BLOCK_NIL__6: for(;;){{
L_REST__7=lisp.values1(L_PLIST__3);
for(;;){
TMP_18=lisp.callFunctionWithCallStack(G_19,L_REST__7);
if(lisp.values1(TMP_18) !== lisp.S_nil){
BLOCK_RESULT_NIL__6=lisp.values1(lisp.S_nil);
break BLOCK_NIL__6;
}else{
{
TMP_20=lisp.callFunctionWithCallStack(G_21,L_REST__7);
L_KEY__8=lisp.values1(TMP_20);
TMP_22=lisp.callFunctionWithCallStack(G_23,L_REST__7);
L_VALUE__9=lisp.values1(TMP_22);
{
TMP_24=lisp.callFunctionWithCallStack(G_25,L_KEY__8);
L_G8__10=lisp.values1(TMP_24);
if(lisp.values1(L_G8__10) !== lisp.S_nil){
TMP_27=G_28.func(L_KEY__8);
TMP_26=lisp.values1(TMP_27);
}else{
{
TMP_29=lisp.callFunctionWithCallStack(G_30,L_KEY__8);
L_G9__11=lisp.values1(TMP_29);
if(lisp.values1(L_G9__11) !== lisp.S_nil){
TMP_32=lisp.callFunctionWithCallStack(G_33,L_KEY__8);
TMP_34=lisp.callFunctionWithCallStack(G_35,TMP_32);
TMP_36=G_28.func(TMP_34);
TMP_31=lisp.values1(TMP_36);
}else{
TMP_31=lisp.values1(L_KEY__8);
}
}
TMP_26=lisp.values1(lisp.values1(TMP_31));
}
}
lisp.values1(L_OBJECT__5)[lisp.values1(lisp.values1(TMP_26))]=lisp.values1(L_VALUE__9);
}
{
TMP_37=lisp.callFunctionWithCallStack(G_38,L_REST__7);
L_G11__13=lisp.values1(TMP_37);
L_REST__7=lisp.values1(L_G11__13);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__6=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_OBJECT__5);
});
CL_FFI_PERCENTOBJECT=lisp.values1(F_PERCENTOBJECT_15);
let F_ARRAY_40;
F_ARRAY_40=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_41, arguments.length);
}
let TMP_42;
let L_ARGS__14;
L_ARGS__14=lisp.jsArrayToList(arguments, 0);
TMP_42=lisp.callFunctionWithCallStack(G_43,Array,L_ARGS__14);
return TMP_42;
});
CL_FFI_ARRAY=lisp.values1(F_ARRAY_40);
let F_JS_EVAL_44;
F_JS_EVAL_44=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_45, arguments.length);
}
let TMP_50;
let L_FN__19;
let TMP_49;
let TMP_48;
let L_CODE__18;
let TMP_46;
let L_X__16;
L_X__16=arguments[0];
{
TMP_46=lisp.callFunctionWithCallStack(G_47,G_6.func(lisp.codeArrayToString([40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 108, 105, 115, 112, 41, 32, 123, 32, 39, 117, 115, 101, 32, 115, 116, 114, 105, 99, 116, 39, 59, 32])),L_X__16,G_6.func(lisp.codeArrayToString([59, 32, 125, 41, 59])));
L_CODE__18=lisp.values1(TMP_46);
TMP_48=G_28.func(L_CODE__18);
TMP_49=eval(TMP_48);
L_FN__19=lisp.values1(TMP_49);
TMP_50=lisp.CL_funcall(lisp.values1(L_FN__19),lisp);
}
return TMP_50;
});
CL_FFI_JS_EVAL=lisp.values1(F_JS_EVAL_44);
let F_CL_GREATERJS_51;
F_CL_GREATERJS_51=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_28, arguments.length);
}
let TMP_59;
let TMP_58;
let L_G14__23;
let TMP_56;
let TMP_54;
let TMP_53;
let L_G13__22;
let TMP_52;
let L_VALUE__20;
L_VALUE__20=arguments[0];
{
TMP_52=lisp.callFunctionWithCallStack(G_25,L_VALUE__20);
L_G13__22=lisp.values1(TMP_52);
if(lisp.values1(L_G13__22) !== lisp.S_nil){
TMP_54=lisp.callFunctionWithCallStack(G_55,L_VALUE__20);
TMP_53=TMP_54;
}else{
{
TMP_56=lisp.callFunctionWithCallStack(G_57,L_VALUE__20);
L_G14__23=lisp.values1(TMP_56);
if(lisp.values1(L_G14__23) !== lisp.S_nil){
TMP_59=lisp.callFunctionWithCallStack(G_55,L_VALUE__20);
TMP_58=TMP_59;
}else{
TMP_58=lisp.values1(L_VALUE__20);
}
}
TMP_53=TMP_58;
}
}
return TMP_53;
});
CL_FFI_CL_GREATERJS=lisp.values1(F_CL_GREATERJS_51);
let F_JS_GREATERCL_60;
F_JS_GREATERCL_60=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_61, arguments.length);
}
let TMP_70;
let TMP_69;
let L_G17__28;
let TMP_68;
let TMP_67;
let TMP_66;
let L_G16__27;
let TMP_65;
let TMP_63;
let TMP_62;
let L_VALUE__25;
L_VALUE__25=arguments[0];
{
TMP_62=(typeof lisp.values1(L_VALUE__25));
TMP_63=lisp.callFunctionWithCallStack(G_64,G_6.func(lisp.codeArrayToString([115, 116, 114, 105, 110, 103])));
TMP_65=lisp.CL_eq(TMP_62,TMP_63);
L_G16__27=lisp.values1(TMP_65);
if(lisp.values1(L_G16__27) !== lisp.S_nil){
TMP_67=lisp.callFunctionWithCallStack(G_6,L_VALUE__25);
TMP_66=TMP_67;
}else{
{
TMP_68=lisp.CL_instanceof(L_VALUE__25,Array);
L_G17__28=lisp.values1(TMP_68);
if(lisp.values1(L_G17__28) !== lisp.S_nil){
TMP_70=lisp.callFunctionWithCallStack(G_71,L_VALUE__25);
TMP_69=TMP_70;
}else{
TMP_69=lisp.values1(L_VALUE__25);
}
}
TMP_66=TMP_69;
}
}
return TMP_66;
});
CL_FFI_JS_GREATERCL=lisp.values1(F_JS_GREATERCL_60);
// initialize symbols
G_3 = lisp.intern('JS-SYMBOL-P', 'COMMON-LISP');
G_6 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_8 = lisp.intern('SYMBOL-PACKAGE', 'COMMON-LISP');
G_10 = lisp.intern('PACKAGE-NAME', 'COMMON-LISP');
G_12 = lisp.intern('STRING=', 'COMMON-LISP');
G_13 = lisp.intern('DEFINE-FUNCTION', 'FFI');
G_14 = lisp.intern('DEFINE', 'FFI');
G_16 = lisp.intern('%OBJECT', 'FFI');
G_19 = lisp.intern('NULL', 'COMMON-LISP');
G_21 = lisp.intern('CAR', 'COMMON-LISP');
G_23 = lisp.intern('CADR', 'COMMON-LISP');
G_25 = lisp.intern('STRINGP', 'COMMON-LISP');
G_28 = lisp.intern('CL->JS', 'FFI');
G_30 = lisp.intern('KEYWORDP', 'COMMON-LISP');
G_33 = lisp.intern('STRING', 'COMMON-LISP');
G_35 = lisp.intern('KEBAB-TO-LOWER-CAMEL-CASE', 'COMPILER');
G_38 = lisp.intern('CDDR', 'COMMON-LISP');
G_39 = lisp.intern('OBJECT', 'FFI');
G_41 = lisp.intern('ARRAY', 'FFI');
G_43 = lisp.intern('APPLY', 'COMMON-LISP');
G_45 = lisp.intern('JS-EVAL', 'FFI');
G_47 = lisp.intern('STRING-APPEND*', 'SYSTEM');
G_55 = lisp.intern('ARRAY-CONTENTS', 'COMMON-LISP');
G_57 = lisp.intern('VECTORP', 'COMMON-LISP');
G_61 = lisp.intern('JS->CL', 'FFI');
G_64 = lisp.intern('ARRAY-TO-RAW-STRING', 'SYSTEM');
G_71 = lisp.intern('RAW-ARRAY-TO-ARRAY', 'SYSTEM');
G_72 = lisp.intern('MACRO', 'COMPILER');
G_75 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_77 = lisp.intern('<=', 'COMMON-LISP');
G_79 = lisp.intern('NAME', 'COMMON-LISP');
G_80 = lisp.intern('ARGUMENTS', 'COMMON-LISP');
G_81 = lisp.intern('&BODY', 'COMMON-LISP');
G_82 = lisp.intern('BODY', 'COMMON-LISP');
G_84 = lisp.intern('ERROR', 'COMMON-LISP');
G_86 = lisp.intern('FIRST', 'COMMON-LISP');
G_88 = lisp.intern('REST', 'COMMON-LISP');
G_91 = lisp.intern('PROGN', 'COMMON-LISP');
G_92 = lisp.intern('VAR', 'FFI');
G_94 = lisp.intern('LIST', 'COMMON-LISP');
G_95 = lisp.intern('SET', 'FFI');
G_100 = lisp.intern('T', 'COMMON-LISP');
G_103 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_105 = lisp.intern('LIST*', 'COMMON-LISP');
G_112 = lisp.intern('VAR', 'COMMON-LISP');
G_113 = lisp.intern('VALUE', 'COMMON-LISP');
G_133 = lisp.intern('&REST', 'COMMON-LISP');
G_134 = lisp.intern('PLIST', 'COMMON-LISP');
G_140 = lisp.intern('NIL', 'COMMON-LISP');
G_153 = lisp.intern('PUSH', 'COMMON-LISP');
G_156 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_158 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_JS_SYMBOL_P.lisp_name = 'JS-SYMBOL-P'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_JS_SYMBOL_P);
CL_FFI_PERCENTOBJECT.lisp_name = '%OBJECT'
lisp.setSymbolFunction(G_16, CL_FFI_PERCENTOBJECT);
CL_FFI_ARRAY.lisp_name = 'ARRAY'
lisp.setSymbolFunction(G_41, CL_FFI_ARRAY);
CL_FFI_JS_EVAL.lisp_name = 'JS-EVAL'
lisp.setSymbolFunction(G_45, CL_FFI_JS_EVAL);
CL_FFI_CL_GREATERJS.lisp_name = 'CL->JS'
lisp.setSymbolFunction(G_28, CL_FFI_CL_GREATERJS);
CL_FFI_JS_GREATERCL.lisp_name = 'JS->CL'
lisp.setSymbolFunction(G_61, CL_FFI_JS_GREATERCL);
TMP_73=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_107;
let TMP_106;
let TMP_104;
let TMP_102;
let TMP_101;
let L_G25__40;
let TMP_99;
let L_G24__39;
let TMP_98;
let TMP_97;
let L_G23__38;
let TMP_96;
let TMP_93;
let L_BODY__37;
let L_G22__36;
let TMP_90;
let L_ARGUMENTS__35;
let TMP_89;
let L_G21__34;
let TMP_87;
let L_NAME__33;
let TMP_85;
let L_G20__32;
let TMP_83;
let TMP_78;
let TMP_76;
let TMP_74;
let L_G19__31;
let L_G0__30;
L_G0__30=lisp.jsArrayToList(arguments, 0);
{
L_G19__31=lisp.values1(L_G0__30);
{
TMP_74=lisp.callFunctionWithCallStack(G_75,L_G19__31);
TMP_76=lisp.callFunctionWithCallStack(G_77,2,TMP_74);
if(lisp.values1(TMP_76) !== lisp.S_nil){
TMP_78=lisp.values1(lisp.S_nil);
}else{
TMP_83=lisp.callFunctionWithCallStack(G_84,G_6.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_79, lisp.makeCons(G_80, lisp.makeCons(G_81, lisp.makeCons(G_82, lisp.S_nil)))),L_G19__31);
TMP_78=lisp.values1(lisp.values1(TMP_83));
}
L_G20__32=lisp.values1(TMP_78);
TMP_85=lisp.callFunctionWithCallStack(G_86,L_G19__31);
L_NAME__33=lisp.values1(TMP_85);
TMP_87=lisp.callFunctionWithCallStack(G_88,L_G19__31);
L_G21__34=lisp.values1(TMP_87);
TMP_89=lisp.callFunctionWithCallStack(G_86,L_G21__34);
L_ARGUMENTS__35=lisp.values1(TMP_89);
TMP_90=lisp.callFunctionWithCallStack(G_88,L_G21__34);
L_G22__36=lisp.values1(TMP_90);
L_BODY__37=lisp.values1(L_G22__36);
TMP_93=lisp.callFunctionWithCallStack(G_94,G_92,L_NAME__33);
{
TMP_96=lisp.callFunctionWithCallStack(G_25,L_NAME__33);
L_G23__38=lisp.values1(TMP_96);
if(lisp.values1(L_G23__38) !== lisp.S_nil){
TMP_97=lisp.values1(lisp.values1(L_NAME__33));
}else{
{
TMP_98=G_3.func(L_NAME__33);
L_G24__39=lisp.values1(TMP_98);
if(lisp.values1(L_G24__39) !== lisp.S_nil){
TMP_99=lisp.values1(lisp.values1(L_NAME__33));
}else{
{
L_G25__40=lisp.values1(G_100);
if(lisp.values1(L_G25__40) !== lisp.S_nil){
TMP_102=lisp.callFunctionWithCallStack(G_33,L_NAME__33);
TMP_101=lisp.values1(lisp.values1(TMP_102));
}else{
TMP_101=lisp.values1(lisp.S_nil);
}
}
TMP_99=lisp.values1(lisp.values1(TMP_101));
}
}
TMP_97=lisp.values1(lisp.values1(TMP_99));
}
}
TMP_104=lisp.callFunctionWithCallStack(G_105,G_103,L_ARGUMENTS__35,L_BODY__37);
TMP_106=lisp.callFunctionWithCallStack(G_94,G_95,lisp.values1(TMP_97),TMP_104);
TMP_107=lisp.callFunctionWithCallStack(G_94,G_91,TMP_93,TMP_106);
}
}
return TMP_107;
});
lisp.CL_put(G_13,G_72,TMP_73);
TMP_108=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_128;
let TMP_127;
let TMP_126;
let TMP_125;
let TMP_124;
let L_G32__50;
let TMP_123;
let L_G31__49;
let TMP_122;
let TMP_121;
let L_G30__48;
let TMP_120;
let TMP_119;
let L_G29__47;
let TMP_118;
let L_VALUE__46;
let TMP_117;
let L_G28__45;
let TMP_116;
let L_VAR__44;
let TMP_115;
let L_G27__43;
let TMP_114;
let TMP_111;
let TMP_110;
let TMP_109;
let L_G26__42;
let L_G1__41;
L_G1__41=lisp.jsArrayToList(arguments, 0);
{
L_G26__42=lisp.values1(L_G1__41);
{
TMP_109=lisp.callFunctionWithCallStack(G_75,L_G26__42);
TMP_110=lisp.callFunctionWithCallStack(G_77,2,TMP_109,2);
if(lisp.values1(TMP_110) !== lisp.S_nil){
TMP_111=lisp.values1(lisp.S_nil);
}else{
TMP_114=lisp.callFunctionWithCallStack(G_84,G_6.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_112, lisp.makeCons(G_113, lisp.S_nil)),L_G26__42);
TMP_111=lisp.values1(lisp.values1(TMP_114));
}
L_G27__43=lisp.values1(TMP_111);
TMP_115=lisp.callFunctionWithCallStack(G_86,L_G26__42);
L_VAR__44=lisp.values1(TMP_115);
TMP_116=lisp.callFunctionWithCallStack(G_88,L_G26__42);
L_G28__45=lisp.values1(TMP_116);
TMP_117=lisp.callFunctionWithCallStack(G_86,L_G28__45);
L_VALUE__46=lisp.values1(TMP_117);
TMP_118=lisp.callFunctionWithCallStack(G_88,L_G28__45);
L_G29__47=lisp.values1(TMP_118);
TMP_119=lisp.callFunctionWithCallStack(G_94,G_92,L_VAR__44);
{
TMP_120=lisp.callFunctionWithCallStack(G_25,L_VAR__44);
L_G30__48=lisp.values1(TMP_120);
if(lisp.values1(L_G30__48) !== lisp.S_nil){
TMP_121=lisp.values1(lisp.values1(L_VAR__44));
}else{
{
TMP_122=G_3.func(L_VAR__44);
L_G31__49=lisp.values1(TMP_122);
if(lisp.values1(L_G31__49) !== lisp.S_nil){
TMP_123=lisp.values1(lisp.values1(L_VAR__44));
}else{
{
L_G32__50=lisp.values1(G_100);
if(lisp.values1(L_G32__50) !== lisp.S_nil){
TMP_125=lisp.callFunctionWithCallStack(G_33,L_VAR__44);
TMP_124=lisp.values1(lisp.values1(TMP_125));
}else{
TMP_124=lisp.values1(lisp.S_nil);
}
}
TMP_123=lisp.values1(lisp.values1(TMP_124));
}
}
TMP_121=lisp.values1(lisp.values1(TMP_123));
}
}
TMP_126=lisp.callFunctionWithCallStack(G_94,G_28,L_VALUE__46);
TMP_127=lisp.callFunctionWithCallStack(G_94,G_95,lisp.values1(TMP_121),TMP_126);
TMP_128=lisp.callFunctionWithCallStack(G_94,G_91,TMP_119,TMP_127);
}
}
return TMP_128;
});
lisp.CL_put(G_14,G_72,TMP_108);
TMP_129=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_157;
let TMP_155;
let L_G44__63;
let TMP_154;
let TMP_152;
let L_G43__62;
let TMP_151;
let TMP_150;
let TMP_149;
let TMP_148;
let L_G42__61;
let TMP_147;
let TMP_146;
let TMP_145;
let L_G41__60;
let TMP_144;
let L_VALUE__59;
let TMP_143;
let L_KEY__58;
let TMP_142;
let TMP_139;
let L_PLIST__57;
let TMP_137;
let L_NEW_PLIST__55;
let L_PLIST__54;
let L_G34__53;
let TMP_135;
let TMP_132;
let TMP_131;
let TMP_130;
let L_G33__52;
let L_G12__51;
L_G12__51=lisp.jsArrayToList(arguments, 0);
{
L_G33__52=lisp.values1(L_G12__51);
{
TMP_130=lisp.callFunctionWithCallStack(G_75,L_G33__52);
TMP_131=lisp.callFunctionWithCallStack(G_77,0,TMP_130);
if(lisp.values1(TMP_131) !== lisp.S_nil){
TMP_132=lisp.values1(lisp.S_nil);
}else{
TMP_135=lisp.callFunctionWithCallStack(G_84,G_6.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_133, lisp.makeCons(G_134, lisp.S_nil)),L_G33__52);
TMP_132=lisp.values1(lisp.values1(TMP_135));
}
L_G34__53=lisp.values1(TMP_132);
L_PLIST__54=lisp.values1(L_G33__52);
{
L_NEW_PLIST__55=lisp.values1(lisp.S_nil);
try {
{
L_PLIST__57=lisp.values1(L_PLIST__54);
let HOST_G36_STATE = 'G38';
HOST_G36: for(;;){
try{
switch(HOST_G36_STATE){
case 'G38':
case 'G37':
TMP_139=lisp.callFunctionWithCallStack(G_19,L_PLIST__57);
if(lisp.values1(TMP_139) !== lisp.S_nil){
throw new lisp.BlockValue(G_140,lisp.values1(lisp.S_nil));}else{
let HOST_G39_STATE = 'G40';
HOST_G39: for(;;){
try{
switch(HOST_G39_STATE){
case 'G40':
{
TMP_142=lisp.callFunctionWithCallStack(G_21,L_PLIST__57);
L_KEY__58=lisp.values1(TMP_142);
TMP_143=lisp.callFunctionWithCallStack(G_23,L_PLIST__57);
L_VALUE__59=lisp.values1(TMP_143);
{
TMP_144=lisp.callFunctionWithCallStack(G_25,L_KEY__58);
L_G41__60=lisp.values1(TMP_144);
if(lisp.values1(L_G41__60) !== lisp.S_nil){
TMP_146=lisp.callFunctionWithCallStack(G_94,G_28,L_KEY__58);
TMP_145=lisp.values1(lisp.values1(TMP_146));
}else{
{
TMP_147=lisp.callFunctionWithCallStack(G_30,L_KEY__58);
L_G42__61=lisp.values1(TMP_147);
if(lisp.values1(L_G42__61) !== lisp.S_nil){
TMP_149=lisp.callFunctionWithCallStack(G_33,L_KEY__58);
TMP_150=lisp.callFunctionWithCallStack(G_35,TMP_149);
TMP_151=lisp.callFunctionWithCallStack(G_94,G_28,TMP_150);
TMP_148=lisp.values1(lisp.values1(TMP_151));
}else{
{
L_G43__62=lisp.values1(G_100);
if(lisp.values1(L_G43__62) !== lisp.S_nil){
TMP_152=lisp.values1(lisp.values1(L_KEY__58));
}else{
TMP_152=lisp.values1(lisp.S_nil);
}
}
TMP_148=lisp.values1(lisp.values1(TMP_152));
}
}
TMP_145=lisp.values1(lisp.values1(TMP_148));
}
}
lisp.callFunctionWithCallStack(G_153,lisp.values1(TMP_145),L_NEW_PLIST__55);
lisp.callFunctionWithCallStack(G_153,L_VALUE__59,L_NEW_PLIST__55);
}
}
break;
}catch(ERR_141){
if(ERR_141 instanceof lisp.TagValue && ERR_141.id==='HOST_G39'){HOST_G39_STATE=ERR_141.index;}
else{throw ERR_141;}}
}
{
TMP_154=lisp.callFunctionWithCallStack(G_38,L_PLIST__57);
L_G44__63=lisp.values1(TMP_154);
L_PLIST__57=lisp.values1(L_G44__63);
}
throw new lisp.TagValue('HOST_G36', 'G37');
}
}
break;
}catch(ERR_138){
if(ERR_138 instanceof lisp.TagValue && ERR_138.id==='HOST_G36'){HOST_G36_STATE=ERR_138.index;}
else{throw ERR_138;}}
}
}
TMP_137=lisp.values1(lisp.S_nil)
}catch(E__136){if(E__136 instanceof lisp.BlockValue && E__136.name === G_140){TMP_137=E__136.value;}
else{throw E__136;}
}
TMP_155=lisp.callFunctionWithCallStack(G_156,L_NEW_PLIST__55);
TMP_157=lisp.CL_cons(G_16,TMP_155);
}
}
}
return TMP_157;
});
lisp.CL_put(G_39,G_72,TMP_129);
}catch(TMP_1){G_158.func();
console.log(TMP_1.message);
}


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_6;
let G_8;
let G_11;
let G_17;
let G_19;
let G_20;
let G_23;
let G_27;
let G_29;
let G_32;
let G_35;
let G_37;
let G_41;
let G_43;
let G_44;
let G_48;
let G_51;
let G_53;
let G_66;
let G_70;
let G_74;
let G_78;
let G_82;
let G_87;
let G_92;
let G_97;
let G_102;
let G_107;
let G_112;
let G_117;
let G_122;
let G_128;
let G_134;
let G_140;
let G_146;
let G_152;
let G_158;
let G_164;
let G_170;
let G_176;
let G_182;
let G_188;
let G_194;
let G_200;
let G_206;
let G_212;
let G_217;
let G_230;
let G_243;
let G_256;
let G_269;
let G_283;
let G_297;
let G_311;
let G_325;
let G_339;
let G_353;
let G_367;
let G_381;
let G_396;
let G_411;
let G_426;
let G_441;
let G_456;
let G_471;
let G_486;
let G_501;
let G_516;
let G_531;
let G_546;
let G_561;
let G_576;
let G_591;
let G_606;
let G_622;
let G_631;
let G_636;
let G_637;
let G_639;
let G_641;
let G_643;
let G_648;
let G_653;
let G_672;
let G_697;
let G_727;
let G_749;
let G_753;
let G_756;
let G_778;
let G_793;
let G_799;
let G_825;
let G_828;
let G_851;
let G_853;
let G_857;
let G_861;
let G_866;
let G_867;
let G_873;
let G_874;
let G_875;
let G_878;
let G_881;
let G_883;
let G_887;
let G_888;
let G_890;
let G_893;
let G_895;
let G_897;
let G_900;
let G_903;
let G_906;
let G_909;
let G_912;
let G_915;
let G_918;
let G_920;
let G_921;
let G_922;
let G_923;
let G_927;
let G_932;
let G_942;
let G_947;
let G_949;
let G_958;
let G_972;
let G_974;
let G_977;
let G_981;
let G_992;
let G_994;
let G_1000;
let G_1018;
let G_1026;
let G_1036;
let G_1052;
let G_1059;
let G_1069;
let G_1082;
let G_1087;
let G_1092;
let G_1101;
let G_1106;
let G_1108;
let G_1125;
let G_1127;
let G_1163;
let G_1183;
let G_1201;
let G_1226;
let G_1246;
let G_1267;
let G_1278;
let G_1284;
let G_1297;
let G_1311;
let G_1329;
let G_1340;
let G_1346;
let G_1356;
let G_1363;
let G_1383;
let G_1392;
let G_1394;
let G_1397;
let G_1408;
let G_1410;
let G_1418;
let G_1430;
let G_1444;
let G_1457;
let G_1459;
let G_1471;
let G_1483;
let G_1494;
let G_1506;
let G_1517;
let G_1529;
let G_1540;
let G_1543;
let G_1546;
let G_1547;
let G_1554;
let G_1579;
let G_1590;
let G_1591;
let G_1604;
let G_1605;
let G_1606;
let G_1620;
let G_1630;
let G_1643;
let G_1644;
let G_1645;
let G_1646;
let G_1647;
let G_1648;
let G_1649;
let G_1659;
let G_1686;
let CL_COMMON_LISP_NUNION;
let CL_COMMON_LISP_UNION;
let CL_COMMON_LISP_SUBSETP;
let CL_COMMON_LISP_NSET_EXCLUSIVE_OR;
let CL_COMMON_LISP_SET_EXCLUSIVE_OR;
let CL_COMMON_LISP_NSET_DIFFERENCE;
let CL_COMMON_LISP_SET_DIFFERENCE;
let CL_COMMON_LISP_ADJOIN;
let CL_COMMON_LISP_NINTERSECTION;
let CL_COMMON_LISP_INTERSECTION;
let CL_COMMON_LISP_MEMBER_AUX;
let CL_COMMON_LISP_PERCENTREMF;
let CL_COMMON_LISP_PERCENTPUTF;
let CL_COMMON_LISP_GETF;
let CL_COMMON_LISP_GET_PROPERTIES;
let CL_COMMON_LISP_RASSOC_IF_NOT;
let CL_COMMON_LISP_RASSOC_IF;
let CL_COMMON_LISP_RASSOC;
let CL_COMMON_LISP_PAIRLIS;
let CL_COMMON_LISP_COPY_ALIST;
let CL_COMMON_LISP_ASSOC_IF_NOT;
let CL_COMMON_LISP_ASSOC_IF;
let CL_COMMON_LISP_ASSOC;
let CL_COMMON_LISP_ACONS;
let CL_COMMON_LISP_MAPCON;
let CL_COMMON_LISP_MAPLIST;
let CL_COMMON_LISP_MAPL;
let CL_COMMON_LISP_MAPCAN;
let CL_SYSTEM_PERCENTMAPCAR;
let CL_COMMON_LISP_MAPCAR;
let CL_COMMON_LISP_MAPC;
let CL_COMMON_LISP_MEMBER_IF_NOT;
let CL_COMMON_LISP_MEMBER_IF;
let CL_COMMON_LISP_MEMBER;
let CL_COMMON_LISP_PROCESS_LIST;
let CL_COMMON_LISP_REST;
let CL_COMMON_LISP_NTHCDR;
let CL_COMMON_LISP_TAILP;
let CL_COMMON_LISP_LDIFF;
let CL_COMMON_LISP_LAST;
let CL_COMMON_LISP_LAST1;
let CL_COMMON_LISP_NBUTLAST;
let CL_COMMON_LISP_NBUTLIST_NTHCDR;
let CL_COMMON_LISP_BUTLAST;
let CL_COMMON_LISP_NRECONC;
let CL_COMMON_LISP_REVAPPEND;
let CL_COMMON_LISP_APPEND;
let CL_COMMON_LISP_NCONC;
let CL_COMMON_LISP_ENDP;
let CL_COMMON_LISP_SET_NTH;
let CL_COMMON_LISP_NTH;
let CL_COMMON_LISP_TENTH;
let CL_COMMON_LISP_NINTH;
let CL_COMMON_LISP_EIGHTH;
let CL_COMMON_LISP_SEVENTH;
let CL_COMMON_LISP_SIXTH;
let CL_COMMON_LISP_FIFTH;
let CL_COMMON_LISP_FOURTH;
let CL_COMMON_LISP_THIRD;
let CL_COMMON_LISP_SECOND;
let CL_COMMON_LISP_FIRST;
let CL_COMMON_LISP_MAKE_LIST;
let CL_COMMON_LISP_LIST_LENGTH;
let CL_COMMON_LISP_LISTSTAR;
let CL_COMMON_LISP_LIST;
let CL_COMMON_LISP_COPY_LIST;
let CL_COMMON_LISP_TREE_EQUAL;
let CL_COMMON_LISP_NSUBST_IF_NOT;
let CL_COMMON_LISP_NSUBST_IF;
let CL_COMMON_LISP_NSUBST;
let CL_COMMON_LISP_SUBST_IF_NOT;
let CL_COMMON_LISP_SUBST_IF;
let CL_COMMON_LISP_SUBST;
let CL_COMMON_LISP_NSUBLIS;
let CL_COMMON_LISP_SUBLIS;
let CL_COMMON_LISP_APPLY_KEY;
let CL_COMMON_LISP_COPY_TREE;
let CL_COMMON_LISP_CDDDDR;
let CL_COMMON_LISP_CDDDAR;
let CL_COMMON_LISP_CDDADR;
let CL_COMMON_LISP_CDDAAR;
let CL_COMMON_LISP_CDADDR;
let CL_COMMON_LISP_CDADAR;
let CL_COMMON_LISP_CDAADR;
let CL_COMMON_LISP_CDAAAR;
let CL_COMMON_LISP_CADDDR;
let CL_COMMON_LISP_CADDAR;
let CL_COMMON_LISP_CADADR;
let CL_COMMON_LISP_CADAAR;
let CL_COMMON_LISP_CAADDR;
let CL_COMMON_LISP_CAADAR;
let CL_COMMON_LISP_CAAADR;
let CL_COMMON_LISP_CAAAAR;
let CL_COMMON_LISP_CDDDR;
let CL_COMMON_LISP_CDDAR;
let CL_COMMON_LISP_CDADR;
let CL_COMMON_LISP_CDAAR;
let CL_COMMON_LISP_CADDR;
let CL_COMMON_LISP_CADAR;
let CL_COMMON_LISP_CAADR;
let CL_COMMON_LISP_CAAAR;
let CL_COMMON_LISP_CDDR;
let CL_COMMON_LISP_CDAR;
let CL_COMMON_LISP_CADR;
let CL_COMMON_LISP_CAAR;
let CL_COMMON_LISP_RPLACD;
let CL_COMMON_LISP_RPLACA;
let CL_COMMON_LISP_CDR;
let CL_COMMON_LISP_CAR;
let CL_COMMON_LISP_LISTP;
let CL_COMMON_LISP_NULL;
let CL_COMMON_LISP_ATOM;
let TMP_1639;
let TMP_1616;
let TMP_1586;
let TMP_1565;
let TMP_1541;
let TMP_1369;
let TMP_620;
let TMP_611;
let TMP_607;
let TMP_605;
let TMP_596;
let TMP_592;
let TMP_590;
let TMP_581;
let TMP_577;
let TMP_575;
let TMP_566;
let TMP_562;
let TMP_560;
let TMP_551;
let TMP_547;
let TMP_545;
let TMP_536;
let TMP_532;
let TMP_530;
let TMP_521;
let TMP_517;
let TMP_515;
let TMP_506;
let TMP_502;
let TMP_500;
let TMP_491;
let TMP_487;
let TMP_485;
let TMP_476;
let TMP_472;
let TMP_470;
let TMP_461;
let TMP_457;
let TMP_455;
let TMP_446;
let TMP_442;
let TMP_440;
let TMP_431;
let TMP_427;
let TMP_425;
let TMP_416;
let TMP_412;
let TMP_410;
let TMP_401;
let TMP_397;
let TMP_395;
let TMP_386;
let TMP_382;
let TMP_380;
let TMP_371;
let TMP_368;
let TMP_366;
let TMP_357;
let TMP_354;
let TMP_352;
let TMP_343;
let TMP_340;
let TMP_338;
let TMP_329;
let TMP_326;
let TMP_324;
let TMP_315;
let TMP_312;
let TMP_310;
let TMP_301;
let TMP_298;
let TMP_296;
let TMP_287;
let TMP_284;
let TMP_282;
let TMP_273;
let TMP_270;
let TMP_268;
let TMP_259;
let TMP_257;
let TMP_255;
let TMP_246;
let TMP_244;
let TMP_242;
let TMP_233;
let TMP_231;
let TMP_229;
let TMP_220;
let TMP_218;
let TMP_64;
let TMP_55;
let TMP_54;
let TMP_52;
let TMP_38;
let TMP_36;
// toplevel defun
let F_ATOM_2;
F_ATOM_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_5;
let TMP_4;
let L_X__1;
L_X__1=arguments[0];
TMP_4=lisp.CL_consp(L_X__1);
TMP_5=lisp.callFunctionWithCallStack(G_6,TMP_4);
return TMP_5;
});
CL_COMMON_LISP_ATOM=lisp.values1(F_ATOM_2);
let F_NULL_7;
F_NULL_7=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_8, arguments.length);
}
let TMP_9;
let L_X__3;
L_X__3=arguments[0];
TMP_9=lisp.CL_eq(L_X__3,lisp.S_nil);
return TMP_9;
});
CL_COMMON_LISP_NULL=lisp.values1(F_NULL_7);
let F_LISTP_10;
F_LISTP_10=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_11, arguments.length);
}
let TMP_15;
let L_G1__8;
let TMP_14;
let TMP_13;
let L_G0__7;
let TMP_12;
let L_X__5;
L_X__5=arguments[0];
{
TMP_12=G_8.func(L_X__5);
L_G0__7=lisp.values1(TMP_12);
if(lisp.values1(L_G0__7) !== lisp.S_nil){
TMP_13=lisp.values1(L_G0__7);
}else{
{
TMP_14=lisp.CL_consp(L_X__5);
L_G1__8=lisp.values1(TMP_14);
if(lisp.values1(L_G1__8) !== lisp.S_nil){
TMP_15=lisp.values1(L_G1__8);
}else{
TMP_15=lisp.values1(lisp.S_nil);
}
}
TMP_13=TMP_15;
}
}
return TMP_13;
});
CL_COMMON_LISP_LISTP=lisp.values1(F_LISTP_10);
let F_CAR_16;
F_CAR_16=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_17, arguments.length);
}
let TMP_21;
let TMP_18;
let L_X__9;
L_X__9=arguments[0];
TMP_18=G_11.func(L_X__9);
if(lisp.values1(TMP_18) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_X__9,G_19);
}
TMP_21=lisp.CL_car(L_X__9);
return TMP_21;
});
CL_COMMON_LISP_CAR=lisp.values1(F_CAR_16);
let F_CDR_22;
F_CDR_22=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_23, arguments.length);
}
let TMP_25;
let TMP_24;
let L_X__11;
L_X__11=arguments[0];
TMP_24=G_11.func(L_X__11);
if(lisp.values1(TMP_24) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_X__11,G_19);
}
TMP_25=lisp.CL_cdr(L_X__11);
return TMP_25;
});
CL_COMMON_LISP_CDR=lisp.values1(F_CDR_22);
let F_RPLACA_26;
F_RPLACA_26=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_27, arguments.length);
}
let TMP_30;
let TMP_28;
let L_X__14;
let L_CONS__13;
L_CONS__13=arguments[0];
L_X__14=arguments[1];
TMP_28=lisp.CL_consp(L_CONS__13);
if(lisp.values1(TMP_28) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_CONS__13,G_29);
}
TMP_30=lisp.CL_rplaca(L_CONS__13,L_X__14);
return TMP_30;
});
CL_COMMON_LISP_RPLACA=lisp.values1(F_RPLACA_26);
let F_RPLACD_31;
F_RPLACD_31=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_32, arguments.length);
}
let TMP_34;
let TMP_33;
let L_X__17;
let L_CONS__16;
L_CONS__16=arguments[0];
L_X__17=arguments[1];
TMP_33=lisp.CL_consp(L_CONS__16);
if(lisp.values1(TMP_33) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_CONS__16,G_29);
}
TMP_34=lisp.CL_rplacd(L_CONS__16,L_X__17);
return TMP_34;
});
CL_COMMON_LISP_RPLACD=lisp.values1(F_RPLACD_31);
let F_CAAR_65;
F_CAAR_65=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_66, arguments.length);
}
let TMP_68;
let TMP_67;
let L_X__43;
L_X__43=arguments[0];
TMP_67=G_17.func(L_X__43);
TMP_68=G_17.func(TMP_67);
return TMP_68;
});
CL_COMMON_LISP_CAAR=lisp.values1(F_CAAR_65);
let F_CADR_69;
F_CADR_69=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_70, arguments.length);
}
let TMP_72;
let TMP_71;
let L_X__45;
L_X__45=arguments[0];
TMP_71=G_23.func(L_X__45);
TMP_72=G_17.func(TMP_71);
return TMP_72;
});
CL_COMMON_LISP_CADR=lisp.values1(F_CADR_69);
let F_CDAR_73;
F_CDAR_73=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_74, arguments.length);
}
let TMP_76;
let TMP_75;
let L_X__47;
L_X__47=arguments[0];
TMP_75=G_17.func(L_X__47);
TMP_76=G_23.func(TMP_75);
return TMP_76;
});
CL_COMMON_LISP_CDAR=lisp.values1(F_CDAR_73);
let F_CDDR_77;
F_CDDR_77=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_78, arguments.length);
}
let TMP_80;
let TMP_79;
let L_X__49;
L_X__49=arguments[0];
TMP_79=G_23.func(L_X__49);
TMP_80=G_23.func(TMP_79);
return TMP_80;
});
CL_COMMON_LISP_CDDR=lisp.values1(F_CDDR_77);
let F_CAAAR_81;
F_CAAAR_81=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_82, arguments.length);
}
let TMP_85;
let TMP_84;
let TMP_83;
let L_X__51;
L_X__51=arguments[0];
TMP_83=G_17.func(L_X__51);
TMP_84=G_17.func(TMP_83);
TMP_85=G_17.func(TMP_84);
return TMP_85;
});
CL_COMMON_LISP_CAAAR=lisp.values1(F_CAAAR_81);
let F_CAADR_86;
F_CAADR_86=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_87, arguments.length);
}
let TMP_90;
let TMP_89;
let TMP_88;
let L_X__53;
L_X__53=arguments[0];
TMP_88=G_23.func(L_X__53);
TMP_89=G_17.func(TMP_88);
TMP_90=G_17.func(TMP_89);
return TMP_90;
});
CL_COMMON_LISP_CAADR=lisp.values1(F_CAADR_86);
let F_CADAR_91;
F_CADAR_91=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_92, arguments.length);
}
let TMP_95;
let TMP_94;
let TMP_93;
let L_X__55;
L_X__55=arguments[0];
TMP_93=G_17.func(L_X__55);
TMP_94=G_23.func(TMP_93);
TMP_95=G_17.func(TMP_94);
return TMP_95;
});
CL_COMMON_LISP_CADAR=lisp.values1(F_CADAR_91);
let F_CADDR_96;
F_CADDR_96=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_97, arguments.length);
}
let TMP_100;
let TMP_99;
let TMP_98;
let L_X__57;
L_X__57=arguments[0];
TMP_98=G_23.func(L_X__57);
TMP_99=G_23.func(TMP_98);
TMP_100=G_17.func(TMP_99);
return TMP_100;
});
CL_COMMON_LISP_CADDR=lisp.values1(F_CADDR_96);
let F_CDAAR_101;
F_CDAAR_101=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_102, arguments.length);
}
let TMP_105;
let TMP_104;
let TMP_103;
let L_X__59;
L_X__59=arguments[0];
TMP_103=G_17.func(L_X__59);
TMP_104=G_17.func(TMP_103);
TMP_105=G_23.func(TMP_104);
return TMP_105;
});
CL_COMMON_LISP_CDAAR=lisp.values1(F_CDAAR_101);
let F_CDADR_106;
F_CDADR_106=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_107, arguments.length);
}
let TMP_110;
let TMP_109;
let TMP_108;
let L_X__61;
L_X__61=arguments[0];
TMP_108=G_23.func(L_X__61);
TMP_109=G_17.func(TMP_108);
TMP_110=G_23.func(TMP_109);
return TMP_110;
});
CL_COMMON_LISP_CDADR=lisp.values1(F_CDADR_106);
let F_CDDAR_111;
F_CDDAR_111=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_112, arguments.length);
}
let TMP_115;
let TMP_114;
let TMP_113;
let L_X__63;
L_X__63=arguments[0];
TMP_113=G_17.func(L_X__63);
TMP_114=G_23.func(TMP_113);
TMP_115=G_23.func(TMP_114);
return TMP_115;
});
CL_COMMON_LISP_CDDAR=lisp.values1(F_CDDAR_111);
let F_CDDDR_116;
F_CDDDR_116=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_117, arguments.length);
}
let TMP_120;
let TMP_119;
let TMP_118;
let L_X__65;
L_X__65=arguments[0];
TMP_118=G_23.func(L_X__65);
TMP_119=G_23.func(TMP_118);
TMP_120=G_23.func(TMP_119);
return TMP_120;
});
CL_COMMON_LISP_CDDDR=lisp.values1(F_CDDDR_116);
let F_CAAAAR_121;
F_CAAAAR_121=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_122, arguments.length);
}
let TMP_126;
let TMP_125;
let TMP_124;
let TMP_123;
let L_X__67;
L_X__67=arguments[0];
TMP_123=G_17.func(L_X__67);
TMP_124=G_17.func(TMP_123);
TMP_125=G_17.func(TMP_124);
TMP_126=G_17.func(TMP_125);
return TMP_126;
});
CL_COMMON_LISP_CAAAAR=lisp.values1(F_CAAAAR_121);
let F_CAAADR_127;
F_CAAADR_127=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_128, arguments.length);
}
let TMP_132;
let TMP_131;
let TMP_130;
let TMP_129;
let L_X__69;
L_X__69=arguments[0];
TMP_129=G_23.func(L_X__69);
TMP_130=G_17.func(TMP_129);
TMP_131=G_17.func(TMP_130);
TMP_132=G_17.func(TMP_131);
return TMP_132;
});
CL_COMMON_LISP_CAAADR=lisp.values1(F_CAAADR_127);
let F_CAADAR_133;
F_CAADAR_133=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_134, arguments.length);
}
let TMP_138;
let TMP_137;
let TMP_136;
let TMP_135;
let L_X__71;
L_X__71=arguments[0];
TMP_135=G_17.func(L_X__71);
TMP_136=G_23.func(TMP_135);
TMP_137=G_17.func(TMP_136);
TMP_138=G_17.func(TMP_137);
return TMP_138;
});
CL_COMMON_LISP_CAADAR=lisp.values1(F_CAADAR_133);
let F_CAADDR_139;
F_CAADDR_139=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_140, arguments.length);
}
let TMP_144;
let TMP_143;
let TMP_142;
let TMP_141;
let L_X__73;
L_X__73=arguments[0];
TMP_141=G_23.func(L_X__73);
TMP_142=G_23.func(TMP_141);
TMP_143=G_17.func(TMP_142);
TMP_144=G_17.func(TMP_143);
return TMP_144;
});
CL_COMMON_LISP_CAADDR=lisp.values1(F_CAADDR_139);
let F_CADAAR_145;
F_CADAAR_145=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_146, arguments.length);
}
let TMP_150;
let TMP_149;
let TMP_148;
let TMP_147;
let L_X__75;
L_X__75=arguments[0];
TMP_147=G_17.func(L_X__75);
TMP_148=G_17.func(TMP_147);
TMP_149=G_23.func(TMP_148);
TMP_150=G_17.func(TMP_149);
return TMP_150;
});
CL_COMMON_LISP_CADAAR=lisp.values1(F_CADAAR_145);
let F_CADADR_151;
F_CADADR_151=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_152, arguments.length);
}
let TMP_156;
let TMP_155;
let TMP_154;
let TMP_153;
let L_X__77;
L_X__77=arguments[0];
TMP_153=G_23.func(L_X__77);
TMP_154=G_17.func(TMP_153);
TMP_155=G_23.func(TMP_154);
TMP_156=G_17.func(TMP_155);
return TMP_156;
});
CL_COMMON_LISP_CADADR=lisp.values1(F_CADADR_151);
let F_CADDAR_157;
F_CADDAR_157=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_158, arguments.length);
}
let TMP_162;
let TMP_161;
let TMP_160;
let TMP_159;
let L_X__79;
L_X__79=arguments[0];
TMP_159=G_17.func(L_X__79);
TMP_160=G_23.func(TMP_159);
TMP_161=G_23.func(TMP_160);
TMP_162=G_17.func(TMP_161);
return TMP_162;
});
CL_COMMON_LISP_CADDAR=lisp.values1(F_CADDAR_157);
let F_CADDDR_163;
F_CADDDR_163=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_164, arguments.length);
}
let TMP_168;
let TMP_167;
let TMP_166;
let TMP_165;
let L_X__81;
L_X__81=arguments[0];
TMP_165=G_23.func(L_X__81);
TMP_166=G_23.func(TMP_165);
TMP_167=G_23.func(TMP_166);
TMP_168=G_17.func(TMP_167);
return TMP_168;
});
CL_COMMON_LISP_CADDDR=lisp.values1(F_CADDDR_163);
let F_CDAAAR_169;
F_CDAAAR_169=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_170, arguments.length);
}
let TMP_174;
let TMP_173;
let TMP_172;
let TMP_171;
let L_X__83;
L_X__83=arguments[0];
TMP_171=G_17.func(L_X__83);
TMP_172=G_17.func(TMP_171);
TMP_173=G_17.func(TMP_172);
TMP_174=G_23.func(TMP_173);
return TMP_174;
});
CL_COMMON_LISP_CDAAAR=lisp.values1(F_CDAAAR_169);
let F_CDAADR_175;
F_CDAADR_175=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_176, arguments.length);
}
let TMP_180;
let TMP_179;
let TMP_178;
let TMP_177;
let L_X__85;
L_X__85=arguments[0];
TMP_177=G_23.func(L_X__85);
TMP_178=G_17.func(TMP_177);
TMP_179=G_17.func(TMP_178);
TMP_180=G_23.func(TMP_179);
return TMP_180;
});
CL_COMMON_LISP_CDAADR=lisp.values1(F_CDAADR_175);
let F_CDADAR_181;
F_CDADAR_181=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_182, arguments.length);
}
let TMP_186;
let TMP_185;
let TMP_184;
let TMP_183;
let L_X__87;
L_X__87=arguments[0];
TMP_183=G_17.func(L_X__87);
TMP_184=G_23.func(TMP_183);
TMP_185=G_17.func(TMP_184);
TMP_186=G_23.func(TMP_185);
return TMP_186;
});
CL_COMMON_LISP_CDADAR=lisp.values1(F_CDADAR_181);
let F_CDADDR_187;
F_CDADDR_187=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_188, arguments.length);
}
let TMP_192;
let TMP_191;
let TMP_190;
let TMP_189;
let L_X__89;
L_X__89=arguments[0];
TMP_189=G_23.func(L_X__89);
TMP_190=G_23.func(TMP_189);
TMP_191=G_17.func(TMP_190);
TMP_192=G_23.func(TMP_191);
return TMP_192;
});
CL_COMMON_LISP_CDADDR=lisp.values1(F_CDADDR_187);
let F_CDDAAR_193;
F_CDDAAR_193=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_194, arguments.length);
}
let TMP_198;
let TMP_197;
let TMP_196;
let TMP_195;
let L_X__91;
L_X__91=arguments[0];
TMP_195=G_17.func(L_X__91);
TMP_196=G_17.func(TMP_195);
TMP_197=G_23.func(TMP_196);
TMP_198=G_23.func(TMP_197);
return TMP_198;
});
CL_COMMON_LISP_CDDAAR=lisp.values1(F_CDDAAR_193);
let F_CDDADR_199;
F_CDDADR_199=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_200, arguments.length);
}
let TMP_204;
let TMP_203;
let TMP_202;
let TMP_201;
let L_X__93;
L_X__93=arguments[0];
TMP_201=G_23.func(L_X__93);
TMP_202=G_17.func(TMP_201);
TMP_203=G_23.func(TMP_202);
TMP_204=G_23.func(TMP_203);
return TMP_204;
});
CL_COMMON_LISP_CDDADR=lisp.values1(F_CDDADR_199);
let F_CDDDAR_205;
F_CDDDAR_205=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_206, arguments.length);
}
let TMP_210;
let TMP_209;
let TMP_208;
let TMP_207;
let L_X__95;
L_X__95=arguments[0];
TMP_207=G_17.func(L_X__95);
TMP_208=G_23.func(TMP_207);
TMP_209=G_23.func(TMP_208);
TMP_210=G_23.func(TMP_209);
return TMP_210;
});
CL_COMMON_LISP_CDDDAR=lisp.values1(F_CDDDAR_205);
let F_CDDDDR_211;
F_CDDDDR_211=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_212, arguments.length);
}
let TMP_216;
let TMP_215;
let TMP_214;
let TMP_213;
let L_X__97;
L_X__97=arguments[0];
TMP_213=G_23.func(L_X__97);
TMP_214=G_23.func(TMP_213);
TMP_215=G_23.func(TMP_214);
TMP_216=G_23.func(TMP_215);
return TMP_216;
});
CL_COMMON_LISP_CDDDDR=lisp.values1(F_CDDDDR_211);
let F_COPY_TREE_621;
F_COPY_TREE_621=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_622, arguments.length);
}
let TMP_629;
let TMP_628;
let TMP_627;
let TMP_626;
let TMP_625;
let TMP_624;
let TMP_623;
let L_TREE__435;
L_TREE__435=arguments[0];
TMP_623=G_3.func(L_TREE__435);
if(lisp.values1(TMP_623) !== lisp.S_nil){
TMP_624=lisp.values1(L_TREE__435);
}else{
TMP_625=G_17.func(L_TREE__435);
TMP_626=G_622.func(TMP_625);
TMP_627=G_23.func(L_TREE__435);
TMP_628=G_622.func(TMP_627);
TMP_629=lisp.CL_cons(TMP_626,TMP_628);
TMP_624=TMP_629;
}
return TMP_624;
});
CL_COMMON_LISP_COPY_TREE=lisp.values1(F_COPY_TREE_621);
let F_APPLY_KEY_630;
F_APPLY_KEY_630=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_631, arguments.length);
}
let TMP_634;
let TMP_633;
let TMP_632;
let L_VALUE__438;
let L_KEY__437;
L_KEY__437=arguments[0];
L_VALUE__438=arguments[1];
TMP_632=G_8.func(L_KEY__437);
if(lisp.values1(TMP_632) !== lisp.S_nil){
TMP_633=lisp.values1(L_VALUE__438);
}else{
TMP_634=lisp.CL_funcall(lisp.values1(L_KEY__437),L_VALUE__438);
TMP_633=TMP_634;
}
return TMP_633;
});
CL_COMMON_LISP_APPLY_KEY=lisp.values1(F_APPLY_KEY_630);
let F_SUBLIS_635;
F_SUBLIS_635=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_636, arguments.length);
}
let TMP_670;
let F_F__448;
let TMP_649;
let TMP_647;
let L_TEST_NOT_P__446;
let L_TEST_NOT__445;
let TMP_645;
let L_TESTP__444;
let L_TEST__443;
let TMP_642;
let L_KEY__442;
let L_TREE__441;
let L_ALIST__440;
L_ALIST__440=arguments[0];
L_TREE__441=arguments[1];
let supplied_KEY__442;
for (let TMP_638 = 2; TMP_638 < arguments.length; TMP_638 += 2) {
if(arguments[TMP_638] === G_637){
supplied_KEY__442=arguments[TMP_638+1];
break;
}
}
L_KEY__442=supplied_KEY__442 !== undefined ? supplied_KEY__442 : (lisp.values1(lisp.S_nil));
let supplied_TEST__443;
for (let TMP_640 = 2; TMP_640 < arguments.length; TMP_640 += 2) {
if(arguments[TMP_640] === G_639){
supplied_TEST__443=arguments[TMP_640+1];
break;
}
}
TMP_642=lisp.CL_symbolFunction(G_641);
L_TEST__443=supplied_TEST__443 !== undefined ? supplied_TEST__443 : (lisp.values1(TMP_642));
L_TESTP__444=(supplied_TEST__443 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__445;
for (let TMP_644 = 2; TMP_644 < arguments.length; TMP_644 += 2) {
if(arguments[TMP_644] === G_643){
supplied_TEST_NOT__445=arguments[TMP_644+1];
break;
}
}
TMP_645=lisp.CL_symbolFunction(G_641);
L_TEST_NOT__445=supplied_TEST_NOT__445 !== undefined ? supplied_TEST_NOT__445 : (lisp.values1(TMP_645));
L_TEST_NOT_P__446=(supplied_TEST_NOT__445 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_646 = 2; TMP_646 < arguments.length; TMP_646 += 2) {
if(arguments[TMP_646]!==G_643 && arguments[TMP_646]!==G_639 && arguments[TMP_646]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_646].name); }
}
if(lisp.values1(L_TESTP__444) !== lisp.S_nil){
TMP_647=lisp.values1(L_TEST_NOT_P__446);
}else{
TMP_647=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_647) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
TMP_649=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_669;
let TMP_668;
let TMP_667;
let TMP_666;
let TMP_665;
let TMP_664;
let TMP_663;
let L_CDR__456;
let TMP_662;
let TMP_661;
let L_CAR__455;
let TMP_660;
let TMP_659;
let TMP_658;
let L_G243__453;
let TMP_657;
let TMP_656;
let TMP_655;
let L_G242__452;
let L_ELT__451;
let TMP_654;
let TMP_652;
let TMP_651;
let L_K__450;
let TMP_650;
let L_TREE__449;
L_TREE__449=arguments[0];
{
TMP_650=G_631.func(L_KEY__442,L_TREE__449);
L_K__450=lisp.values1(TMP_650);
if(lisp.values1(L_TEST_NOT_P__446) !== lisp.S_nil){
TMP_652=G_653.func(L_K__450,L_ALIST__440,G_643,L_TEST_NOT__445);
TMP_651=lisp.values1(TMP_652);
}else{
TMP_654=G_653.func(L_K__450,L_ALIST__440,G_639,L_TEST__443);
TMP_651=lisp.values1(TMP_654);
}
L_ELT__451=lisp.values1(TMP_651);
{
L_G242__452=lisp.values1(L_ELT__451);
if(lisp.values1(L_G242__452) !== lisp.S_nil){
TMP_656=G_23.func(L_ELT__451);
TMP_655=TMP_656;
}else{
{
TMP_657=G_3.func(L_TREE__449);
L_G243__453=lisp.values1(TMP_657);
if(lisp.values1(L_G243__453) !== lisp.S_nil){
TMP_658=lisp.values1(L_TREE__449);
}else{
{
TMP_659=G_17.func(L_TREE__449);
TMP_660=F_F__448(TMP_659);
L_CAR__455=lisp.values1(TMP_660);
TMP_661=G_23.func(L_TREE__449);
TMP_662=F_F__448(TMP_661);
L_CDR__456=lisp.values1(TMP_662);
TMP_663=G_17.func(L_TREE__449);
TMP_664=lisp.CL_eq(L_CAR__455,TMP_663);
if(lisp.values1(TMP_664) !== lisp.S_nil){
TMP_666=G_23.func(L_TREE__449);
TMP_667=lisp.CL_eq(L_CDR__456,TMP_666);
TMP_665=lisp.values1(TMP_667);
}else{
TMP_665=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_665) !== lisp.S_nil){
TMP_668=lisp.values1(L_TREE__449);
}else{
TMP_669=lisp.CL_cons(L_CAR__455,L_CDR__456);
TMP_668=TMP_669;
}
}
TMP_658=TMP_668;
}
}
TMP_655=TMP_658;
}
}
}
return TMP_655;
});
F_F__448=lisp.values1(TMP_649);
TMP_670=F_F__448(L_TREE__441);
}
return TMP_670;
});
CL_COMMON_LISP_SUBLIS=lisp.values1(F_SUBLIS_635);
let F_NSUBLIS_671;
F_NSUBLIS_671=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_672, arguments.length);
}
let TMP_695;
let F_F__466;
let TMP_685;
let F_ASSOCSTAR__465;
let TMP_680;
let TMP_679;
let L_TEST_NOT_P__463;
let L_TEST_NOT__462;
let TMP_677;
let L_TESTP__461;
let L_TEST__460;
let TMP_675;
let L_KEY__459;
let L_TREE__458;
let L_ALIST__457;
L_ALIST__457=arguments[0];
L_TREE__458=arguments[1];
let supplied_KEY__459;
for (let TMP_673 = 2; TMP_673 < arguments.length; TMP_673 += 2) {
if(arguments[TMP_673] === G_637){
supplied_KEY__459=arguments[TMP_673+1];
break;
}
}
L_KEY__459=supplied_KEY__459 !== undefined ? supplied_KEY__459 : (lisp.values1(lisp.S_nil));
let supplied_TEST__460;
for (let TMP_674 = 2; TMP_674 < arguments.length; TMP_674 += 2) {
if(arguments[TMP_674] === G_639){
supplied_TEST__460=arguments[TMP_674+1];
break;
}
}
TMP_675=lisp.CL_symbolFunction(G_641);
L_TEST__460=supplied_TEST__460 !== undefined ? supplied_TEST__460 : (lisp.values1(TMP_675));
L_TESTP__461=(supplied_TEST__460 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__462;
for (let TMP_676 = 2; TMP_676 < arguments.length; TMP_676 += 2) {
if(arguments[TMP_676] === G_643){
supplied_TEST_NOT__462=arguments[TMP_676+1];
break;
}
}
TMP_677=lisp.CL_symbolFunction(G_641);
L_TEST_NOT__462=supplied_TEST_NOT__462 !== undefined ? supplied_TEST_NOT__462 : (lisp.values1(TMP_677));
L_TEST_NOT_P__463=(supplied_TEST_NOT__462 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_678 = 2; TMP_678 < arguments.length; TMP_678 += 2) {
if(arguments[TMP_678]!==G_643 && arguments[TMP_678]!==G_639 && arguments[TMP_678]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_678].name); }
}
if(lisp.values1(L_TESTP__461) !== lisp.S_nil){
TMP_679=lisp.values1(L_TEST_NOT_P__463);
}else{
TMP_679=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_679) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
TMP_680=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_684;
let TMP_683;
let TMP_682;
let L_K__468;
let TMP_681;
let L_VALUE__467;
L_VALUE__467=arguments[0];
{
TMP_681=G_631.func(L_KEY__459,L_VALUE__467);
L_K__468=lisp.values1(TMP_681);
if(lisp.values1(L_TEST_NOT_P__463) !== lisp.S_nil){
TMP_683=G_653.func(L_K__468,L_ALIST__457,G_643,L_TEST_NOT__462);
TMP_682=TMP_683;
}else{
TMP_684=G_653.func(L_K__468,L_ALIST__457,G_639,L_TEST__460);
TMP_682=TMP_684;
}
}
return TMP_682;
});
F_ASSOCSTAR__465=lisp.values1(TMP_680);
TMP_685=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_CDR__475;
let TMP_694;
let TMP_693;
let L_CAR__474;
let TMP_692;
let TMP_691;
let TMP_690;
let L_G246__472;
let TMP_689;
let TMP_688;
let TMP_687;
let L_G245__471;
let L_ELT__470;
let TMP_686;
let L_TREE__469;
L_TREE__469=arguments[0];
{
TMP_686=F_ASSOCSTAR__465(L_TREE__469);
L_ELT__470=lisp.values1(TMP_686);
{
L_G245__471=lisp.values1(L_ELT__470);
if(lisp.values1(L_G245__471) !== lisp.S_nil){
TMP_688=G_23.func(L_ELT__470);
TMP_687=TMP_688;
}else{
{
TMP_689=G_3.func(L_TREE__469);
L_G246__472=lisp.values1(TMP_689);
if(lisp.values1(L_G246__472) !== lisp.S_nil){
TMP_690=lisp.values1(L_TREE__469);
}else{
{
TMP_691=G_17.func(L_TREE__469);
TMP_692=F_F__466(TMP_691);
L_CAR__474=lisp.values1(TMP_692);
TMP_693=G_23.func(L_TREE__469);
TMP_694=F_F__466(TMP_693);
L_CDR__475=lisp.values1(TMP_694);
G_27.func(L_TREE__469,L_CAR__474);
G_32.func(L_TREE__469,L_CDR__475);
}
TMP_690=lisp.values1(L_TREE__469);
}
}
TMP_687=TMP_690;
}
}
}
return TMP_687;
});
F_F__466=lisp.values1(TMP_685);
TMP_695=F_F__466(L_TREE__458);
}
return TMP_695;
});
CL_COMMON_LISP_NSUBLIS=lisp.values1(F_NSUBLIS_671);
let F_SUBST_696;
F_SUBST_696=(function(){
if(arguments.length < 3 || 9 < arguments.length) {
lisp.argumentsError(G_697, arguments.length);
}
let TMP_725;
let F_F__485;
let TMP_705;
let TMP_704;
let L_TEST_NOT_P__483;
let L_TEST_NOT__482;
let TMP_702;
let L_TESTP__481;
let L_TEST__480;
let TMP_700;
let L_KEY__479;
let L_TREE__478;
let L_OLD__477;
let L_NEW__476;
L_NEW__476=arguments[0];
L_OLD__477=arguments[1];
L_TREE__478=arguments[2];
let supplied_KEY__479;
for (let TMP_698 = 3; TMP_698 < arguments.length; TMP_698 += 2) {
if(arguments[TMP_698] === G_637){
supplied_KEY__479=arguments[TMP_698+1];
break;
}
}
L_KEY__479=supplied_KEY__479 !== undefined ? supplied_KEY__479 : (lisp.values1(lisp.S_nil));
let supplied_TEST__480;
for (let TMP_699 = 3; TMP_699 < arguments.length; TMP_699 += 2) {
if(arguments[TMP_699] === G_639){
supplied_TEST__480=arguments[TMP_699+1];
break;
}
}
TMP_700=lisp.CL_symbolFunction(G_641);
L_TEST__480=supplied_TEST__480 !== undefined ? supplied_TEST__480 : (lisp.values1(TMP_700));
L_TESTP__481=(supplied_TEST__480 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__482;
for (let TMP_701 = 3; TMP_701 < arguments.length; TMP_701 += 2) {
if(arguments[TMP_701] === G_643){
supplied_TEST_NOT__482=arguments[TMP_701+1];
break;
}
}
TMP_702=lisp.CL_symbolFunction(G_641);
L_TEST_NOT__482=supplied_TEST_NOT__482 !== undefined ? supplied_TEST_NOT__482 : (lisp.values1(TMP_702));
L_TEST_NOT_P__483=(supplied_TEST_NOT__482 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_703 = 3; TMP_703 < arguments.length; TMP_703 += 2) {
if(arguments[TMP_703]!==G_643 && arguments[TMP_703]!==G_639 && arguments[TMP_703]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_703].name); }
}
if(lisp.values1(L_TESTP__481) !== lisp.S_nil){
TMP_704=lisp.values1(L_TEST_NOT_P__483);
}else{
TMP_704=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_704) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
TMP_705=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_724;
let TMP_723;
let TMP_722;
let TMP_721;
let TMP_720;
let TMP_719;
let TMP_718;
let L_CDR__492;
let TMP_717;
let TMP_716;
let L_CAR__491;
let TMP_715;
let TMP_714;
let TMP_713;
let L_G249__489;
let TMP_712;
let TMP_711;
let L_G248__488;
let TMP_710;
let TMP_709;
let TMP_708;
let TMP_707;
let L_K__487;
let TMP_706;
let L_TREE__486;
L_TREE__486=arguments[0];
{
TMP_706=G_631.func(L_KEY__479,L_TREE__486);
L_K__487=lisp.values1(TMP_706);
{
if(lisp.values1(L_TEST_NOT_P__483) !== lisp.S_nil){
TMP_708=lisp.CL_funcall(lisp.values1(L_TEST_NOT__482),L_OLD__477,L_K__487);
TMP_709=lisp.callFunctionWithCallStack(G_6,TMP_708);
TMP_707=lisp.values1(TMP_709);
}else{
TMP_710=lisp.CL_funcall(lisp.values1(L_TEST__480),L_OLD__477,L_K__487);
TMP_707=lisp.values1(TMP_710);
}
L_G248__488=lisp.values1(TMP_707);
if(lisp.values1(L_G248__488) !== lisp.S_nil){
TMP_711=lisp.values1(L_NEW__476);
}else{
{
TMP_712=G_3.func(L_TREE__486);
L_G249__489=lisp.values1(TMP_712);
if(lisp.values1(L_G249__489) !== lisp.S_nil){
TMP_713=lisp.values1(L_TREE__486);
}else{
{
TMP_714=G_17.func(L_TREE__486);
TMP_715=F_F__485(TMP_714);
L_CAR__491=lisp.values1(TMP_715);
TMP_716=G_23.func(L_TREE__486);
TMP_717=F_F__485(TMP_716);
L_CDR__492=lisp.values1(TMP_717);
TMP_718=G_17.func(L_TREE__486);
TMP_719=lisp.CL_eq(L_CAR__491,TMP_718);
if(lisp.values1(TMP_719) !== lisp.S_nil){
TMP_721=G_23.func(L_TREE__486);
TMP_722=lisp.CL_eq(L_CDR__492,TMP_721);
TMP_720=lisp.values1(TMP_722);
}else{
TMP_720=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_720) !== lisp.S_nil){
TMP_723=lisp.values1(L_TREE__486);
}else{
TMP_724=lisp.CL_cons(L_CAR__491,L_CDR__492);
TMP_723=TMP_724;
}
}
TMP_713=TMP_723;
}
}
TMP_711=TMP_713;
}
}
}
return TMP_711;
});
F_F__485=lisp.values1(TMP_705);
TMP_725=F_F__485(L_TREE__478);
}
return TMP_725;
});
CL_COMMON_LISP_SUBST=lisp.values1(F_SUBST_696);
let F_SUBST_IF_726;
F_SUBST_IF_726=(function(){
if(arguments.length < 3 || 5 < arguments.length) {
lisp.argumentsError(G_727, arguments.length);
}
let TMP_747;
let F_F__498;
let TMP_730;
let L_KEY__496;
let L_TREE__495;
let L_PREDICATE__494;
let L_NEW__493;
L_NEW__493=arguments[0];
L_PREDICATE__494=arguments[1];
L_TREE__495=arguments[2];
let supplied_KEY__496;
for (let TMP_728 = 3; TMP_728 < arguments.length; TMP_728 += 2) {
if(arguments[TMP_728] === G_637){
supplied_KEY__496=arguments[TMP_728+1];
break;
}
}
L_KEY__496=supplied_KEY__496 !== undefined ? supplied_KEY__496 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_729 = 3; TMP_729 < arguments.length; TMP_729 += 2) {
if(arguments[TMP_729]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_729].name); }
}
{
TMP_730=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_746;
let TMP_745;
let TMP_744;
let TMP_743;
let TMP_742;
let TMP_741;
let TMP_740;
let L_CDR__504;
let TMP_739;
let TMP_738;
let L_CAR__503;
let TMP_737;
let TMP_736;
let TMP_735;
let L_G252__501;
let TMP_734;
let TMP_733;
let L_G251__500;
let TMP_732;
let TMP_731;
let L_TREE__499;
L_TREE__499=arguments[0];
{
TMP_731=G_631.func(L_KEY__496,L_TREE__499);
TMP_732=lisp.CL_funcall(lisp.values1(L_PREDICATE__494),TMP_731);
L_G251__500=lisp.values1(TMP_732);
if(lisp.values1(L_G251__500) !== lisp.S_nil){
TMP_733=lisp.values1(L_NEW__493);
}else{
{
TMP_734=G_3.func(L_TREE__499);
L_G252__501=lisp.values1(TMP_734);
if(lisp.values1(L_G252__501) !== lisp.S_nil){
TMP_735=lisp.values1(L_TREE__499);
}else{
{
TMP_736=G_17.func(L_TREE__499);
TMP_737=F_F__498(TMP_736);
L_CAR__503=lisp.values1(TMP_737);
TMP_738=G_23.func(L_TREE__499);
TMP_739=F_F__498(TMP_738);
L_CDR__504=lisp.values1(TMP_739);
TMP_740=G_17.func(L_TREE__499);
TMP_741=lisp.CL_eq(L_CAR__503,TMP_740);
if(lisp.values1(TMP_741) !== lisp.S_nil){
TMP_743=G_23.func(L_TREE__499);
TMP_744=lisp.CL_eq(L_CDR__504,TMP_743);
TMP_742=lisp.values1(TMP_744);
}else{
TMP_742=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_742) !== lisp.S_nil){
TMP_745=lisp.values1(L_TREE__499);
}else{
TMP_746=lisp.CL_cons(L_CAR__503,L_CDR__504);
TMP_745=TMP_746;
}
}
TMP_735=TMP_745;
}
}
TMP_733=TMP_735;
}
}
return TMP_733;
});
F_F__498=lisp.values1(TMP_730);
TMP_747=F_F__498(L_TREE__495);
}
return TMP_747;
});
CL_COMMON_LISP_SUBST_IF=lisp.values1(F_SUBST_IF_726);
let F_SUBST_IF_NOT_748;
F_SUBST_IF_NOT_748=(function(){
if(arguments.length < 3 || 5 < arguments.length) {
lisp.argumentsError(G_749, arguments.length);
}
let TMP_754;
let TMP_752;
let L_KEY__508;
let L_TREE__507;
let L_PREDICATE__506;
let L_NEW__505;
L_NEW__505=arguments[0];
L_PREDICATE__506=arguments[1];
L_TREE__507=arguments[2];
let supplied_KEY__508;
for (let TMP_750 = 3; TMP_750 < arguments.length; TMP_750 += 2) {
if(arguments[TMP_750] === G_637){
supplied_KEY__508=arguments[TMP_750+1];
break;
}
}
L_KEY__508=supplied_KEY__508 !== undefined ? supplied_KEY__508 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_751 = 3; TMP_751 < arguments.length; TMP_751 += 2) {
if(arguments[TMP_751]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_751].name); }
}
TMP_752=lisp.callFunctionWithCallStack(G_753,L_PREDICATE__506);
TMP_754=G_727.func(L_NEW__505,TMP_752,L_TREE__507,G_637,L_KEY__508);
return TMP_754;
});
CL_COMMON_LISP_SUBST_IF_NOT=lisp.values1(F_SUBST_IF_NOT_748);
let F_NSUBST_755;
F_NSUBST_755=(function(){
if(arguments.length < 3 || 9 < arguments.length) {
lisp.argumentsError(G_756, arguments.length);
}
let TMP_776;
let F_F__519;
let TMP_763;
let TMP_762;
let L_TEST_NOT_P__517;
let L_TEST_NOT__516;
let L_TESTP__515;
let L_TEST__514;
let TMP_759;
let L_KEY__513;
let L_TREE__512;
let L_OLD__511;
let L_NEW__510;
L_NEW__510=arguments[0];
L_OLD__511=arguments[1];
L_TREE__512=arguments[2];
let supplied_KEY__513;
for (let TMP_757 = 3; TMP_757 < arguments.length; TMP_757 += 2) {
if(arguments[TMP_757] === G_637){
supplied_KEY__513=arguments[TMP_757+1];
break;
}
}
L_KEY__513=supplied_KEY__513 !== undefined ? supplied_KEY__513 : (lisp.values1(lisp.S_nil));
let supplied_TEST__514;
for (let TMP_758 = 3; TMP_758 < arguments.length; TMP_758 += 2) {
if(arguments[TMP_758] === G_639){
supplied_TEST__514=arguments[TMP_758+1];
break;
}
}
TMP_759=lisp.CL_symbolFunction(G_641);
L_TEST__514=supplied_TEST__514 !== undefined ? supplied_TEST__514 : (lisp.values1(TMP_759));
L_TESTP__515=(supplied_TEST__514 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__516;
for (let TMP_760 = 3; TMP_760 < arguments.length; TMP_760 += 2) {
if(arguments[TMP_760] === G_643){
supplied_TEST_NOT__516=arguments[TMP_760+1];
break;
}
}
L_TEST_NOT__516=supplied_TEST_NOT__516 !== undefined ? supplied_TEST_NOT__516 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__517=(supplied_TEST_NOT__516 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_761 = 3; TMP_761 < arguments.length; TMP_761 += 2) {
if(arguments[TMP_761]!==G_643 && arguments[TMP_761]!==G_639 && arguments[TMP_761]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_761].name); }
}
if(lisp.values1(L_TESTP__515) !== lisp.S_nil){
TMP_762=lisp.values1(L_TEST_NOT_P__517);
}else{
TMP_762=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_762) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
TMP_763=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_CDR__526;
let TMP_775;
let TMP_774;
let L_CAR__525;
let TMP_773;
let TMP_772;
let TMP_771;
let L_G255__523;
let TMP_770;
let TMP_769;
let L_G254__522;
let TMP_768;
let TMP_767;
let TMP_766;
let TMP_765;
let L_K__521;
let TMP_764;
let L_TREE__520;
L_TREE__520=arguments[0];
{
TMP_764=G_631.func(L_KEY__513,L_TREE__520);
L_K__521=lisp.values1(TMP_764);
{
if(lisp.values1(L_TEST_NOT_P__517) !== lisp.S_nil){
TMP_766=lisp.CL_funcall(lisp.values1(L_TEST_NOT__516),L_OLD__511,L_K__521);
TMP_767=lisp.callFunctionWithCallStack(G_6,TMP_766);
TMP_765=lisp.values1(TMP_767);
}else{
TMP_768=lisp.CL_funcall(lisp.values1(L_TEST__514),L_OLD__511,L_K__521);
TMP_765=lisp.values1(TMP_768);
}
L_G254__522=lisp.values1(TMP_765);
if(lisp.values1(L_G254__522) !== lisp.S_nil){
TMP_769=lisp.values1(L_NEW__510);
}else{
{
TMP_770=G_3.func(L_TREE__520);
L_G255__523=lisp.values1(TMP_770);
if(lisp.values1(L_G255__523) !== lisp.S_nil){
TMP_771=lisp.values1(L_TREE__520);
}else{
{
TMP_772=G_17.func(L_TREE__520);
TMP_773=F_F__519(TMP_772);
L_CAR__525=lisp.values1(TMP_773);
TMP_774=G_23.func(L_TREE__520);
TMP_775=F_F__519(TMP_774);
L_CDR__526=lisp.values1(TMP_775);
G_27.func(L_TREE__520,L_CAR__525);
G_32.func(L_TREE__520,L_CDR__526);
}
TMP_771=lisp.values1(L_TREE__520);
}
}
TMP_769=TMP_771;
}
}
}
return TMP_769;
});
F_F__519=lisp.values1(TMP_763);
TMP_776=F_F__519(L_TREE__512);
}
return TMP_776;
});
CL_COMMON_LISP_NSUBST=lisp.values1(F_NSUBST_755);
let F_NSUBST_IF_777;
F_NSUBST_IF_777=(function(){
if(arguments.length < 3 || 5 < arguments.length) {
lisp.argumentsError(G_778, arguments.length);
}
let TMP_791;
let F_F__532;
let TMP_781;
let L_KEY__530;
let L_TREE__529;
let L_PREDICATE__528;
let L_NEW__527;
L_NEW__527=arguments[0];
L_PREDICATE__528=arguments[1];
L_TREE__529=arguments[2];
let supplied_KEY__530;
for (let TMP_779 = 3; TMP_779 < arguments.length; TMP_779 += 2) {
if(arguments[TMP_779] === G_637){
supplied_KEY__530=arguments[TMP_779+1];
break;
}
}
L_KEY__530=supplied_KEY__530 !== undefined ? supplied_KEY__530 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_780 = 3; TMP_780 < arguments.length; TMP_780 += 2) {
if(arguments[TMP_780]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_780].name); }
}
{
TMP_781=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_CDR__538;
let TMP_790;
let TMP_789;
let L_CAR__537;
let TMP_788;
let TMP_787;
let TMP_786;
let L_G258__535;
let TMP_785;
let TMP_784;
let L_G257__534;
let TMP_783;
let TMP_782;
let L_TREE__533;
L_TREE__533=arguments[0];
{
TMP_782=G_631.func(L_KEY__530,L_TREE__533);
TMP_783=lisp.CL_funcall(lisp.values1(L_PREDICATE__528),TMP_782);
L_G257__534=lisp.values1(TMP_783);
if(lisp.values1(L_G257__534) !== lisp.S_nil){
TMP_784=lisp.values1(L_NEW__527);
}else{
{
TMP_785=G_3.func(L_TREE__533);
L_G258__535=lisp.values1(TMP_785);
if(lisp.values1(L_G258__535) !== lisp.S_nil){
TMP_786=lisp.values1(L_TREE__533);
}else{
{
TMP_787=G_17.func(L_TREE__533);
TMP_788=F_F__532(TMP_787);
L_CAR__537=lisp.values1(TMP_788);
TMP_789=G_23.func(L_TREE__533);
TMP_790=F_F__532(TMP_789);
L_CDR__538=lisp.values1(TMP_790);
G_27.func(L_TREE__533,L_CAR__537);
G_32.func(L_TREE__533,L_CDR__538);
}
TMP_786=lisp.values1(L_TREE__533);
}
}
TMP_784=TMP_786;
}
}
return TMP_784;
});
F_F__532=lisp.values1(TMP_781);
TMP_791=F_F__532(L_TREE__529);
}
return TMP_791;
});
CL_COMMON_LISP_NSUBST_IF=lisp.values1(F_NSUBST_IF_777);
let F_NSUBST_IF_NOT_792;
F_NSUBST_IF_NOT_792=(function(){
if(arguments.length < 3 || 5 < arguments.length) {
lisp.argumentsError(G_793, arguments.length);
}
let TMP_797;
let TMP_796;
let L_KEY__542;
let L_TREE__541;
let L_PREDICATE__540;
let L_NEW__539;
L_NEW__539=arguments[0];
L_PREDICATE__540=arguments[1];
L_TREE__541=arguments[2];
let supplied_KEY__542;
for (let TMP_794 = 3; TMP_794 < arguments.length; TMP_794 += 2) {
if(arguments[TMP_794] === G_637){
supplied_KEY__542=arguments[TMP_794+1];
break;
}
}
L_KEY__542=supplied_KEY__542 !== undefined ? supplied_KEY__542 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_795 = 3; TMP_795 < arguments.length; TMP_795 += 2) {
if(arguments[TMP_795]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_795].name); }
}
TMP_796=lisp.callFunctionWithCallStack(G_753,L_PREDICATE__540);
TMP_797=G_778.func(L_NEW__539,TMP_796,L_TREE__541,G_637,L_KEY__542);
return TMP_797;
});
CL_COMMON_LISP_NSUBST_IF_NOT=lisp.values1(F_NSUBST_IF_NOT_792);
let F_TREE_EQUAL_798;
F_TREE_EQUAL_798=(function(){
if(arguments.length < 2 || 6 < arguments.length) {
lisp.argumentsError(G_799, arguments.length);
}
let TMP_826;
let F_F__551;
let TMP_809;
let F_TEST__550;
let TMP_804;
let L_TEST_NOT_P__548;
let L_TEST_NOT__547;
let L_TEST__546;
let TMP_801;
let L_TREE_2__545;
let L_TREE_1__544;
L_TREE_1__544=arguments[0];
L_TREE_2__545=arguments[1];
let supplied_TEST__546;
for (let TMP_800 = 2; TMP_800 < arguments.length; TMP_800 += 2) {
if(arguments[TMP_800] === G_639){
supplied_TEST__546=arguments[TMP_800+1];
break;
}
}
TMP_801=lisp.CL_symbolFunction(G_641);
L_TEST__546=supplied_TEST__546 !== undefined ? supplied_TEST__546 : (lisp.values1(TMP_801));
let supplied_TEST_NOT__547;
for (let TMP_802 = 2; TMP_802 < arguments.length; TMP_802 += 2) {
if(arguments[TMP_802] === G_643){
supplied_TEST_NOT__547=arguments[TMP_802+1];
break;
}
}
L_TEST_NOT__547=supplied_TEST_NOT__547 !== undefined ? supplied_TEST_NOT__547 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__548=(supplied_TEST_NOT__547 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_803 = 2; TMP_803 < arguments.length; TMP_803 += 2) {
if(arguments[TMP_803]!==G_643 && arguments[TMP_803]!==G_639) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_803].name); }
}
{
TMP_804=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_808;
let TMP_807;
let TMP_806;
let TMP_805;
let L_Y__553;
let L_X__552;
L_X__552=arguments[0];
L_Y__553=arguments[1];
if(lisp.values1(L_TEST_NOT_P__548) !== lisp.S_nil){
TMP_806=lisp.CL_funcall(lisp.values1(L_TEST_NOT__547),L_X__552,L_Y__553);
TMP_807=lisp.callFunctionWithCallStack(G_6,TMP_806);
TMP_805=TMP_807;
}else{
TMP_808=lisp.CL_funcall(lisp.values1(L_TEST__546),L_X__552,L_Y__553);
TMP_805=TMP_808;
}
return TMP_805;
});
F_TEST__550=lisp.values1(TMP_804);
TMP_809=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_824;
let L_G262__558;
let TMP_823;
let TMP_822;
let L_G261__557;
let TMP_821;
let TMP_820;
let TMP_819;
let TMP_818;
let TMP_817;
let TMP_816;
let TMP_815;
let TMP_814;
let TMP_813;
let TMP_812;
let TMP_811;
let L_G260__556;
let TMP_810;
let L_Y__555;
let L_X__554;
L_X__554=arguments[0];
L_Y__555=arguments[1];
{
TMP_810=lisp.CL_consp(L_X__554);
L_G260__556=lisp.values1(TMP_810);
if(lisp.values1(L_G260__556) !== lisp.S_nil){
TMP_812=lisp.CL_consp(L_Y__555);
if(lisp.values1(TMP_812) !== lisp.S_nil){
TMP_814=G_17.func(L_X__554);
TMP_815=G_17.func(L_Y__555);
TMP_816=F_F__551(TMP_814,TMP_815);
if(lisp.values1(TMP_816) !== lisp.S_nil){
TMP_818=G_23.func(L_X__554);
TMP_819=G_23.func(L_Y__555);
TMP_820=F_F__551(TMP_818,TMP_819);
TMP_817=TMP_820;
}else{
TMP_817=lisp.values1(lisp.S_nil);
}
TMP_813=TMP_817;
}else{
TMP_813=lisp.values1(lisp.S_nil);
}
TMP_811=TMP_813;
}else{
{
TMP_821=lisp.CL_consp(L_Y__555);
L_G261__557=lisp.values1(TMP_821);
if(lisp.values1(L_G261__557) !== lisp.S_nil){
TMP_822=lisp.values1(lisp.S_nil);
}else{
{
TMP_823=F_TEST__550(L_X__554,L_Y__555);
L_G262__558=lisp.values1(TMP_823);
if(lisp.values1(L_G262__558) !== lisp.S_nil){
TMP_824=lisp.values1(G_825);
}else{
TMP_824=lisp.values1(lisp.S_nil);
}
}
TMP_822=TMP_824;
}
}
TMP_811=TMP_822;
}
}
return TMP_811;
});
F_F__551=lisp.values1(TMP_809);
TMP_826=F_F__551(L_TREE_1__544,L_TREE_2__545);
}
return TMP_826;
});
CL_COMMON_LISP_TREE_EQUAL=lisp.values1(F_TREE_EQUAL_798);
let F_COPY_LIST_827;
F_COPY_LIST_827=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_828, arguments.length);
}
let TMP_834;
let TMP_833;
let TMP_832;
let TMP_831;
let TMP_830;
let TMP_829;
let L_LIST__560;
L_LIST__560=arguments[0];
TMP_829=G_3.func(L_LIST__560);
if(lisp.values1(TMP_829) !== lisp.S_nil){
TMP_830=lisp.values1(L_LIST__560);
}else{
TMP_831=G_17.func(L_LIST__560);
TMP_832=G_23.func(L_LIST__560);
TMP_833=G_828.func(TMP_832);
TMP_834=lisp.CL_cons(TMP_831,TMP_833);
TMP_830=TMP_834;
}
return TMP_830;
});
CL_COMMON_LISP_COPY_LIST=lisp.values1(F_COPY_LIST_827);
let F_LIST_835;
F_LIST_835=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_19, arguments.length);
}
let L_LIST__562;
L_LIST__562=lisp.jsArrayToList(arguments, 0);
return lisp.values1(L_LIST__562);
});
CL_COMMON_LISP_LIST=lisp.values1(F_LIST_835);
let F_LISTSTAR_836;
F_LISTSTAR_836=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_48, arguments.length);
}
let TMP_849;
let TMP_848;
let TMP_847;
let TMP_846;
let F_F__567;
let TMP_837;
let L_ARGS__565;
let L_ARG__564;
L_ARG__564=arguments[0];
L_ARGS__565=lisp.jsArrayToList(arguments, 1);
{
TMP_837=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_845;
let TMP_844;
let TMP_843;
let TMP_842;
let TMP_841;
let TMP_840;
let L_G264__569;
let TMP_839;
let TMP_838;
let L_ARGS__568;
L_ARGS__568=arguments[0];
{
TMP_838=G_23.func(L_ARGS__568);
TMP_839=G_8.func(TMP_838);
L_G264__569=lisp.values1(TMP_839);
if(lisp.values1(L_G264__569) !== lisp.S_nil){
TMP_841=G_17.func(L_ARGS__568);
TMP_840=TMP_841;
}else{
TMP_842=G_17.func(L_ARGS__568);
TMP_843=G_23.func(L_ARGS__568);
TMP_844=F_F__567(TMP_843);
TMP_845=lisp.CL_cons(TMP_842,TMP_844);
TMP_840=TMP_845;
}
}
return TMP_840;
});
F_F__567=lisp.values1(TMP_837);
TMP_846=G_8.func(L_ARGS__565);
if(lisp.values1(TMP_846) !== lisp.S_nil){
TMP_847=lisp.values1(L_ARG__564);
}else{
TMP_848=F_F__567(L_ARGS__565);
TMP_849=lisp.CL_cons(L_ARG__564,TMP_848);
TMP_847=TMP_849;
}
}
return TMP_847;
});
CL_COMMON_LISP_LISTSTAR=lisp.values1(F_LISTSTAR_836);
let F_LIST_LENGTH_850;
F_LIST_LENGTH_850=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_851, arguments.length);
}
let L_X__580;
let L_G274__579;
let TMP_864;
let L_G273__578;
let TMP_863;
let L_G272__577;
let TMP_862;
let TMP_860;
let TMP_859;
let TMP_858;
let TMP_856;
let TMP_855;
let TMP_854;
let TMP_852;
let L_Z__576;
let L_Y__575;
let L_N__574;
let BLOCK_RESULT_NIL__573;
let L_LIST__571;
L_LIST__571=arguments[0];
{
BLOCK_NIL__573: for(;;){{
L_N__574=lisp.values1(0);
L_Y__575=lisp.values1(L_LIST__571);
L_Z__576=lisp.values1(L_LIST__571);
for(;;){
TMP_852=G_853.func(L_Y__575);
if(lisp.values1(TMP_852) !== lisp.S_nil){
BLOCK_RESULT_NIL__573=lisp.values1(L_N__574);
break BLOCK_NIL__573;
}else{
}
TMP_854=G_23.func(L_Y__575);
TMP_855=G_853.func(TMP_854);
if(lisp.values1(TMP_855) !== lisp.S_nil){
TMP_856=lisp.callFunctionWithCallStack(G_857,L_N__574,1);
BLOCK_RESULT_NIL__573=TMP_856;
break BLOCK_NIL__573;
}else{
}
TMP_858=lisp.CL_eq(L_Y__575,L_Z__576);
if(lisp.values1(TMP_858) !== lisp.S_nil){
TMP_860=lisp.callFunctionWithCallStack(G_861,L_N__574,0);
TMP_859=lisp.values1(TMP_860);
}else{
TMP_859=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_859) !== lisp.S_nil){
BLOCK_RESULT_NIL__573=lisp.values1(lisp.S_nil);
break BLOCK_NIL__573;
}else{
}
{
TMP_862=lisp.callFunctionWithCallStack(G_857,L_N__574,2);
L_G272__577=lisp.values1(TMP_862);
TMP_863=G_78.func(L_Y__575);
L_G273__578=lisp.values1(TMP_863);
TMP_864=G_23.func(L_Z__576);
L_G274__579=lisp.values1(TMP_864);
L_N__574=lisp.values1(L_G272__577);
L_Y__575=lisp.values1(L_G273__578);
L_Z__576=lisp.values1(L_G274__579);
}
continue;
break;
}
}
BLOCK_RESULT_NIL__573=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)));
break;
}
L_X__580=lisp.values1(BLOCK_RESULT_NIL__573);
}
return lisp.values1(L_X__580);
});
CL_COMMON_LISP_LIST_LENGTH=lisp.values1(F_LIST_LENGTH_850);
let F_MAKE_LIST_865;
F_MAKE_LIST_865=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(G_866, arguments.length);
}
let TMP_886;
let F_F__584;
let TMP_876;
let TMP_872;
let TMP_871;
let TMP_870;
let L_INITIAL_ELEMENT__582;
let L_SIZE__581;
L_SIZE__581=arguments[0];
let supplied_INITIAL_ELEMENT__582;
for (let TMP_868 = 1; TMP_868 < arguments.length; TMP_868 += 2) {
if(arguments[TMP_868] === G_867){
supplied_INITIAL_ELEMENT__582=arguments[TMP_868+1];
break;
}
}
L_INITIAL_ELEMENT__582=supplied_INITIAL_ELEMENT__582 !== undefined ? supplied_INITIAL_ELEMENT__582 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_869 = 1; TMP_869 < arguments.length; TMP_869 += 2) {
if(arguments[TMP_869]!==G_867) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_869].name); }
}
TMP_870=lisp.CL_integerp(L_SIZE__581);
if(lisp.values1(TMP_870) !== lisp.S_nil){
TMP_872=lisp.callFunctionWithCallStack(G_873,0,L_SIZE__581);
TMP_871=lisp.values1(TMP_872);
}else{
TMP_871=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_871) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_SIZE__581,lisp.makeCons(G_874, lisp.makeCons(0, lisp.makeCons(G_875, lisp.S_nil))));
}
{
TMP_876=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_885;
let TMP_884;
let TMP_882;
let TMP_880;
let TMP_879;
let TMP_877;
let L_ACC__586;
let L_N__585;
L_N__585=arguments[0];
L_ACC__586=arguments[1];
TMP_877=lisp.callFunctionWithCallStack(G_878,L_N__585);
if(lisp.values1(TMP_877) !== lisp.S_nil){
TMP_880=lisp.callFunctionWithCallStack(G_881,L_ACC__586);
TMP_879=TMP_880;
}else{
TMP_882=lisp.callFunctionWithCallStack(G_883,L_N__585);
TMP_884=lisp.CL_cons(L_INITIAL_ELEMENT__582,L_ACC__586);
TMP_885=F_F__584(TMP_882,TMP_884);
TMP_879=TMP_885;
}
return TMP_879;
});
F_F__584=lisp.values1(TMP_876);
TMP_886=F_F__584(L_SIZE__581,lisp.S_nil);
}
return TMP_886;
});
CL_COMMON_LISP_MAKE_LIST=lisp.values1(F_MAKE_LIST_865);
let F_FIRST_889;
F_FIRST_889=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_890, arguments.length);
}
let TMP_891;
let L_LIST__587;
L_LIST__587=arguments[0];
TMP_891=G_17.func(L_LIST__587);
return TMP_891;
});
CL_COMMON_LISP_FIRST=lisp.values1(F_FIRST_889);
let F_SECOND_892;
F_SECOND_892=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_893, arguments.length);
}
let TMP_894;
let L_LIST__589;
L_LIST__589=arguments[0];
TMP_894=G_895.func(1,L_LIST__589);
return TMP_894;
});
CL_COMMON_LISP_SECOND=lisp.values1(F_SECOND_892);
let F_THIRD_896;
F_THIRD_896=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_897, arguments.length);
}
let TMP_898;
let L_LIST__591;
L_LIST__591=arguments[0];
TMP_898=G_895.func(2,L_LIST__591);
return TMP_898;
});
CL_COMMON_LISP_THIRD=lisp.values1(F_THIRD_896);
let F_FOURTH_899;
F_FOURTH_899=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_900, arguments.length);
}
let TMP_901;
let L_LIST__593;
L_LIST__593=arguments[0];
TMP_901=G_895.func(3,L_LIST__593);
return TMP_901;
});
CL_COMMON_LISP_FOURTH=lisp.values1(F_FOURTH_899);
let F_FIFTH_902;
F_FIFTH_902=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_903, arguments.length);
}
let TMP_904;
let L_LIST__595;
L_LIST__595=arguments[0];
TMP_904=G_895.func(4,L_LIST__595);
return TMP_904;
});
CL_COMMON_LISP_FIFTH=lisp.values1(F_FIFTH_902);
let F_SIXTH_905;
F_SIXTH_905=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_906, arguments.length);
}
let TMP_907;
let L_LIST__597;
L_LIST__597=arguments[0];
TMP_907=G_895.func(5,L_LIST__597);
return TMP_907;
});
CL_COMMON_LISP_SIXTH=lisp.values1(F_SIXTH_905);
let F_SEVENTH_908;
F_SEVENTH_908=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_909, arguments.length);
}
let TMP_910;
let L_LIST__599;
L_LIST__599=arguments[0];
TMP_910=G_895.func(6,L_LIST__599);
return TMP_910;
});
CL_COMMON_LISP_SEVENTH=lisp.values1(F_SEVENTH_908);
let F_EIGHTH_911;
F_EIGHTH_911=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_912, arguments.length);
}
let TMP_913;
let L_LIST__601;
L_LIST__601=arguments[0];
TMP_913=G_895.func(7,L_LIST__601);
return TMP_913;
});
CL_COMMON_LISP_EIGHTH=lisp.values1(F_EIGHTH_911);
let F_NINTH_914;
F_NINTH_914=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_915, arguments.length);
}
let TMP_916;
let L_LIST__603;
L_LIST__603=arguments[0];
TMP_916=G_895.func(8,L_LIST__603);
return TMP_916;
});
CL_COMMON_LISP_NINTH=lisp.values1(F_NINTH_914);
let F_TENTH_917;
F_TENTH_917=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_918, arguments.length);
}
let TMP_919;
let L_LIST__605;
L_LIST__605=arguments[0];
TMP_919=G_895.func(9,L_LIST__605);
return TMP_919;
});
CL_COMMON_LISP_TENTH=lisp.values1(F_TENTH_917);
let F_NTH_924;
F_NTH_924=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_895, arguments.length);
}
let TMP_930;
let L_G284__613;
let TMP_929;
let TMP_928;
let TMP_926;
let L_I__612;
let BLOCK_RESULT_NIL__611;
let L_G277__610;
let TMP_925;
let L_LIST__608;
let L_N__607;
L_N__607=arguments[0];
L_LIST__608=arguments[1];
TMP_925=lisp.callFunctionWithCallStack(G_873,0,L_N__607);
if(lisp.values1(TMP_925) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_N__607,lisp.makeCons(G_874, lisp.makeCons(0, lisp.makeCons(G_875, lisp.S_nil))));
}
{
L_G277__610=lisp.values1(L_N__607);
BLOCK_NIL__611: for(;;){{
L_I__612=lisp.values1(0);
for(;;){
TMP_926=lisp.callFunctionWithCallStack(G_927,L_I__612,L_G277__610);
if(lisp.values1(TMP_926) !== lisp.S_nil){
BLOCK_RESULT_NIL__611=lisp.values1(lisp.S_nil);
break BLOCK_NIL__611;
}else{
TMP_928=G_23.func(L_LIST__608);
L_LIST__608=lisp.values1(TMP_928);
{
TMP_929=lisp.callFunctionWithCallStack(G_857,L_I__612,1);
L_G284__613=lisp.values1(TMP_929);
L_I__612=lisp.values1(L_G284__613);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__611=lisp.values1(lisp.S_nil);
break;
}
}
TMP_930=G_17.func(L_LIST__608);
return TMP_930;
});
CL_COMMON_LISP_NTH=lisp.values1(F_NTH_924);
let F_SET_NTH_931;
F_SET_NTH_931=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_932, arguments.length);
}
let L_G292__621;
let TMP_935;
let TMP_934;
let TMP_933;
let L_I__620;
let BLOCK_RESULT_NIL__619;
let L_G285__618;
let L_VALUE__616;
let L_LIST__615;
let L_N__614;
L_N__614=arguments[0];
L_LIST__615=arguments[1];
L_VALUE__616=arguments[2];
{
L_G285__618=lisp.values1(L_N__614);
BLOCK_NIL__619: for(;;){{
L_I__620=lisp.values1(0);
for(;;){
TMP_933=lisp.callFunctionWithCallStack(G_927,L_I__620,L_G285__618);
if(lisp.values1(TMP_933) !== lisp.S_nil){
BLOCK_RESULT_NIL__619=lisp.values1(lisp.S_nil);
break BLOCK_NIL__619;
}else{
TMP_934=G_23.func(L_LIST__615);
L_LIST__615=lisp.values1(TMP_934);
{
TMP_935=lisp.callFunctionWithCallStack(G_857,L_I__620,1);
L_G292__621=lisp.values1(TMP_935);
L_I__620=lisp.values1(L_G292__621);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__619=lisp.values1(lisp.S_nil);
break;
}
}
G_27.func(L_LIST__615,L_VALUE__616);
return lisp.values1(L_VALUE__616);
});
CL_COMMON_LISP_SET_NTH=lisp.values1(F_SET_NTH_931);
let F_ENDP_936;
F_ENDP_936=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_853, arguments.length);
}
let TMP_940;
let TMP_939;
let TMP_938;
let TMP_937;
let L_X__622;
L_X__622=arguments[0];
TMP_937=G_11.func(L_X__622);
if(lisp.values1(TMP_937) !== lisp.S_nil){
TMP_939=G_8.func(L_X__622);
TMP_938=TMP_939;
}else{
TMP_940=lisp.callFunctionWithCallStack(G_20,L_X__622,G_19);
TMP_938=TMP_940;
}
return TMP_938;
});
CL_COMMON_LISP_ENDP=lisp.values1(F_ENDP_936);
let F_NCONC_941;
F_NCONC_941=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_942, arguments.length);
}
let TMP_946;
let TMP_945;
let L_LIST__629;
let TMP_944;
let TMP_943;
let L_G293__628;
let L_ACC__626;
let L_LISTS__624;
L_LISTS__624=lisp.jsArrayToList(arguments, 0);
{
L_ACC__626=lisp.values1(lisp.S_nil);
{
L_G293__628=lisp.values1(L_LISTS__624);
for(;;){
TMP_943=G_853.func(L_G293__628);
if(lisp.values1(TMP_943) !== lisp.S_nil){
}else{
{
TMP_944=G_17.func(L_G293__628);
L_LIST__629=lisp.values1(TMP_944);
TMP_945=G_23.func(L_G293__628);
L_G293__628=lisp.values1(TMP_945);
if(lisp.values1(L_LIST__629) !== lisp.S_nil){
if(lisp.values1(L_ACC__626) !== lisp.S_nil){
TMP_946=G_947.func(L_ACC__626);
G_32.func(TMP_946,L_LIST__629);
}else{
L_ACC__626=lisp.values1(L_LIST__629);
}
}else{
}
}
continue;
}
break;
}
}
}
return lisp.values1(L_ACC__626);
});
CL_COMMON_LISP_NCONC=lisp.values1(F_NCONC_941);
let F_APPEND_948;
F_APPEND_948=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_949, arguments.length);
}
let L_G338__667;
let TMP_970;
let L_G337__666;
let TMP_969;
let L_G_STORE336__665;
let L_G335__664;
let L_G332__662;
let TMP_968;
let L_G333__661;
let L_G331__660;
let TMP_967;
let L_G329__657;
let TMP_966;
let L_G_STORE328__656;
let TMP_965;
let L_G327__655;
let L_G324__653;
let TMP_964;
let L_G325__652;
let TMP_963;
let L_G323__651;
let TMP_962;
let TMP_961;
let L_X__650;
let TMP_960;
let TMP_959;
let L_G316__649;
let L_G315__647;
let TMP_957;
let L_G314__646;
let TMP_956;
let L_G_STORE313__645;
let L_G312__644;
let L_G309__642;
let TMP_955;
let L_G310__641;
let L_G308__640;
let TMP_954;
let L_G307__639;
let TMP_953;
let L_G306__638;
let TMP_952;
let L_LIST__637;
let TMP_951;
let TMP_950;
let L_LISTS__636;
let BLOCK_RESULT_NIL__635;
let L_TAIL__634;
let L_HEAD__633;
let L_LISTS__631;
L_LISTS__631=lisp.jsArrayToList(arguments, 0);
{
L_HEAD__633=lisp.values1(lisp.S_nil);
L_TAIL__634=lisp.values1(lisp.S_nil);
BLOCK_NIL__635: for(;;){{
L_LISTS__636=lisp.values1(L_LISTS__631);
for(;;){
TMP_950=G_8.func(L_LISTS__636);
if(lisp.values1(TMP_950) !== lisp.S_nil){
BLOCK_RESULT_NIL__635=lisp.values1(lisp.S_nil);
break BLOCK_NIL__635;
}else{
{
TMP_951=G_890.func(L_LISTS__636);
L_LIST__637=lisp.values1(TMP_951);
{
TMP_952=G_8.func(L_LIST__637);
L_G306__638=lisp.values1(TMP_952);
if(lisp.values1(L_G306__638) !== lisp.S_nil){
}else{
{
TMP_953=G_3.func(L_LIST__637);
L_G307__639=lisp.values1(TMP_953);
if(lisp.values1(L_G307__639) !== lisp.S_nil){
{
TMP_954=G_8.func(L_TAIL__634);
L_G308__640=lisp.values1(TMP_954);
if(lisp.values1(L_G308__640) !== lisp.S_nil){
{
{
L_G310__641=lisp.values1(L_LIST__637);
L_TAIL__634=(TMP_955=lisp.values1(L_G310__641));
}
L_G309__642=lisp.values1(lisp.values1(TMP_955));
L_HEAD__633=lisp.values1(L_G309__642);
}
}else{
{
L_G312__644=lisp.values1(L_TAIL__634);
L_G_STORE313__645=lisp.values1(L_LIST__637);
lisp.callFunctionWithCallStack(G_53,L_G_STORE313__645,L_G312__644);
}
{
TMP_956=G_23.func(L_TAIL__634);
L_G314__646=lisp.values1(TMP_956);
L_TAIL__634=lisp.values1(L_G314__646);
}
}
}
}else{
{
TMP_957=G_958.func(L_LISTS__636);
L_G315__647=lisp.values1(TMP_957);
if(lisp.values1(L_G315__647) !== lisp.S_nil){
{
L_G316__649=lisp.values1(L_LIST__637);
for(;;){
TMP_959=G_853.func(L_G316__649);
if(lisp.values1(TMP_959) !== lisp.S_nil){
}else{
{
TMP_960=G_17.func(L_G316__649);
L_X__650=lisp.values1(TMP_960);
TMP_961=G_23.func(L_G316__649);
L_G316__649=lisp.values1(TMP_961);
{
TMP_962=G_8.func(L_TAIL__634);
L_G323__651=lisp.values1(TMP_962);
if(lisp.values1(L_G323__651) !== lisp.S_nil){
{
{
TMP_963=G_19.func(L_X__650);
L_G325__652=lisp.values1(TMP_963);
L_TAIL__634=(TMP_964=lisp.values1(L_G325__652));
}
L_G324__653=lisp.values1(lisp.values1(TMP_964));
L_HEAD__633=lisp.values1(L_G324__653);
}
}else{
{
L_G327__655=lisp.values1(L_TAIL__634);
TMP_965=G_19.func(L_X__650);
L_G_STORE328__656=lisp.values1(TMP_965);
lisp.callFunctionWithCallStack(G_53,L_G_STORE328__656,L_G327__655);
}
{
TMP_966=G_23.func(L_TAIL__634);
L_G329__657=lisp.values1(TMP_966);
L_TAIL__634=lisp.values1(L_G329__657);
}
}
}
}
continue;
}
break;
}
}
}else{
{
TMP_967=G_8.func(L_TAIL__634);
L_G331__660=lisp.values1(TMP_967);
if(lisp.values1(L_G331__660) !== lisp.S_nil){
{
{
L_G333__661=lisp.values1(L_LIST__637);
L_TAIL__634=(TMP_968=lisp.values1(L_G333__661));
}
L_G332__662=lisp.values1(lisp.values1(TMP_968));
L_HEAD__633=lisp.values1(L_G332__662);
}
}else{
{
L_G335__664=lisp.values1(L_TAIL__634);
L_G_STORE336__665=lisp.values1(L_LIST__637);
lisp.callFunctionWithCallStack(G_53,L_G_STORE336__665,L_G335__664);
}
{
TMP_969=G_23.func(L_TAIL__634);
L_G337__666=lisp.values1(TMP_969);
L_TAIL__634=lisp.values1(L_G337__666);
}
}
}
}
}
}
}
}
}
}
{
TMP_970=G_958.func(L_LISTS__636);
L_G338__667=lisp.values1(TMP_970);
L_LISTS__636=lisp.values1(L_G338__667);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__635=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_HEAD__633);
});
CL_COMMON_LISP_APPEND=lisp.values1(F_APPEND_948);
let F_REVAPPEND_971;
F_REVAPPEND_971=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_972, arguments.length);
}
let TMP_975;
let TMP_973;
let L_TAIL__669;
let L_LIST__668;
L_LIST__668=arguments[0];
L_TAIL__669=arguments[1];
TMP_973=lisp.callFunctionWithCallStack(G_974,L_LIST__668);
TMP_975=G_942.func(TMP_973,L_TAIL__669);
return TMP_975;
});
CL_COMMON_LISP_REVAPPEND=lisp.values1(F_REVAPPEND_971);
let F_NRECONC_976;
F_NRECONC_976=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_977, arguments.length);
}
let TMP_979;
let TMP_978;
let L_TAIL__672;
let L_LIST__671;
L_LIST__671=arguments[0];
L_TAIL__672=arguments[1];
TMP_978=lisp.callFunctionWithCallStack(G_881,L_LIST__671);
TMP_979=G_942.func(TMP_978,L_TAIL__672);
return TMP_979;
});
CL_COMMON_LISP_NRECONC=lisp.values1(F_NRECONC_976);
let F_BUTLAST_980;
F_BUTLAST_980=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_981, arguments.length);
}
let L_G349__686;
let TMP_991;
let L_G348__685;
let TMP_990;
let L_G345__684;
let TMP_989;
let L_G347__683;
let TMP_988;
let L_G346__682;
let TMP_987;
let TMP_986;
let TMP_985;
let TMP_984;
let L_I__681;
let L_ACC__680;
let L_R__679;
let L_L__678;
let BLOCK_RESULT_NIL__677;
let TMP_983;
let TMP_982;
let L_N__675;
let L_LIST__674;
L_LIST__674=arguments[0];
L_N__675=arguments.length > 1 ? arguments[1] : (lisp.values1(1));
TMP_982=G_11.func(L_LIST__674);
if(lisp.values1(TMP_982) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_LIST__674,G_19);
}
TMP_983=lisp.callFunctionWithCallStack(G_873,0,L_N__675);
if(lisp.values1(TMP_983) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_N__675,lisp.makeCons(G_874, lisp.makeCons(0, lisp.makeCons(G_875, lisp.S_nil))));
}
BLOCK_NIL__677: for(;;){{
L_L__678=lisp.values1(L_LIST__674);
L_R__679=lisp.values1(L_LIST__674);
L_ACC__680=lisp.values1(lisp.S_nil);
L_I__681=lisp.values1(0);
for(;;){
TMP_984=G_3.func(L_L__678);
if(lisp.values1(TMP_984) !== lisp.S_nil){
TMP_985=lisp.callFunctionWithCallStack(G_881,L_ACC__680);
BLOCK_RESULT_NIL__677=TMP_985;
break BLOCK_NIL__677;
}else{
TMP_986=lisp.callFunctionWithCallStack(G_927,L_I__681,L_N__675);
if(lisp.values1(TMP_986) !== lisp.S_nil){
{
{
TMP_987=G_23.func(L_R__679);
L_G346__682=lisp.values1(TMP_987);
{
TMP_988=G_17.func(L_R__679);
L_G347__683=lisp.values1(TMP_988);
L_R__679=lisp.values1(L_G346__682);
}
}
TMP_989=lisp.CL_cons(lisp.values1(lisp.values1(lisp.values1(L_G347__683))),L_ACC__680);
L_G345__684=lisp.values1(TMP_989);
L_ACC__680=lisp.values1(L_G345__684);
}
}else{
}
{
TMP_990=G_23.func(L_L__678);
L_G348__685=lisp.values1(TMP_990);
TMP_991=lisp.callFunctionWithCallStack(G_992,L_I__681);
L_G349__686=lisp.values1(TMP_991);
L_L__678=lisp.values1(L_G348__685);
L_I__681=lisp.values1(L_G349__686);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__677=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__677;
});
CL_COMMON_LISP_BUTLAST=lisp.values1(F_BUTLAST_980);
let F_NBUTLIST_NTHCDR_993;
F_NBUTLIST_NTHCDR_993=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_994, arguments.length);
}
let L_G357__693;
let TMP_998;
let TMP_997;
let TMP_996;
let TMP_995;
let L_____692;
let BLOCK_RESULT_NIL__691;
let L_G350__690;
let L_LIST__688;
let L_N__687;
L_N__687=arguments[0];
L_LIST__688=arguments[1];
{
L_G350__690=lisp.values1(L_N__687);
BLOCK_NIL__691: for(;;){{
L_____692=lisp.values1(0);
for(;;){
TMP_995=lisp.callFunctionWithCallStack(G_927,L_____692,L_G350__690);
if(lisp.values1(TMP_995) !== lisp.S_nil){
BLOCK_RESULT_NIL__691=lisp.values1(lisp.S_nil);
break BLOCK_NIL__691;
}else{
TMP_996=G_3.func(L_LIST__688);
if(lisp.values1(TMP_996) !== lisp.S_nil){
BLOCK_RESULT_NIL__691=lisp.values1(lisp.S_nil);
break BLOCK_NIL__691;
}else{
}
TMP_997=G_23.func(L_LIST__688);
L_LIST__688=lisp.values1(TMP_997);
{
TMP_998=lisp.callFunctionWithCallStack(G_857,L_____692,1);
L_G357__693=lisp.values1(TMP_998);
L_____692=lisp.values1(L_G357__693);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__691=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_LIST__688);
});
CL_COMMON_LISP_NBUTLIST_NTHCDR=lisp.values1(F_NBUTLIST_NTHCDR_993);
let F_NBUTLAST_999;
F_NBUTLAST_999=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_1000, arguments.length);
}
let L_G369__706;
let TMP_1016;
let L_G368__705;
let TMP_1015;
let L_G364__703;
let TMP_1014;
let TMP_1013;
let L_HEAD__702;
let TMP_1012;
let L_TRAIL__701;
let BLOCK_RESULT_NIL__700;
let TMP_1011;
let TMP_1010;
let TMP_1009;
let TMP_1008;
let TMP_1007;
let L_HEAD__699;
let TMP_1006;
let TMP_1005;
let TMP_1004;
let L_G358__697;
let TMP_1003;
let TMP_1002;
let TMP_1001;
let L_N__695;
let L_LIST__694;
L_LIST__694=arguments[0];
L_N__695=arguments.length > 1 ? arguments[1] : (lisp.values1(1));
TMP_1001=G_11.func(L_LIST__694);
if(lisp.values1(TMP_1001) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_LIST__694,G_19);
}
TMP_1002=lisp.callFunctionWithCallStack(G_873,0,L_N__695);
if(lisp.values1(TMP_1002) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_N__695,lisp.makeCons(G_874, lisp.makeCons(0, lisp.makeCons(G_875, lisp.S_nil))));
}
{
TMP_1003=lisp.callFunctionWithCallStack(G_927,0,L_N__695);
L_G358__697=lisp.values1(TMP_1003);
if(lisp.values1(L_G358__697) !== lisp.S_nil){
TMP_1004=lisp.values1(L_LIST__694);
}else{
{
TMP_1005=lisp.callFunctionWithCallStack(G_883,L_N__695);
TMP_1006=G_994.func(TMP_1005,L_LIST__694);
L_HEAD__699=lisp.values1(TMP_1006);
TMP_1007=lisp.CL_consp(L_HEAD__699);
if(lisp.values1(TMP_1007) !== lisp.S_nil){
TMP_1009=G_23.func(L_HEAD__699);
TMP_1010=lisp.CL_consp(TMP_1009);
if(lisp.values1(TMP_1010) !== lisp.S_nil){
BLOCK_NIL__700: for(;;){{
L_TRAIL__701=lisp.values1(L_LIST__694);
TMP_1012=G_23.func(L_HEAD__699);
L_HEAD__702=lisp.values1(TMP_1012);
for(;;){
TMP_1013=G_23.func(L_HEAD__702);
TMP_1014=G_3.func(TMP_1013);
if(lisp.values1(TMP_1014) !== lisp.S_nil){
{
L_G364__703=lisp.values1(L_TRAIL__701);
lisp.callFunctionWithCallStack(G_53,lisp.S_nil,L_G364__703);
}
BLOCK_RESULT_NIL__700=lisp.values1(L_LIST__694);
break BLOCK_NIL__700;
}else{
{
TMP_1015=G_23.func(L_TRAIL__701);
L_G368__705=lisp.values1(TMP_1015);
TMP_1016=G_23.func(L_HEAD__702);
L_G369__706=lisp.values1(TMP_1016);
L_TRAIL__701=lisp.values1(L_G368__705);
L_HEAD__702=lisp.values1(L_G369__706);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__700=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_1011=BLOCK_RESULT_NIL__700;
}else{
TMP_1011=lisp.values1(lisp.S_nil);
}
TMP_1008=TMP_1011;
}else{
TMP_1008=lisp.values1(lisp.S_nil);
}
}
TMP_1004=TMP_1008;
}
}
return TMP_1004;
});
CL_COMMON_LISP_NBUTLAST=lisp.values1(F_NBUTLAST_999);
let F_LAST1_1017;
F_LAST1_1017=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1018, arguments.length);
}
let L_G377__713;
let TMP_1023;
let L_G376__712;
let TMP_1022;
let L_NEXT__711;
let TMP_1021;
let L_L__710;
let BLOCK_RESULT_NIL__709;
let TMP_1020;
let TMP_1019;
let L_LIST__707;
L_LIST__707=arguments[0];
TMP_1019=lisp.CL_consp(L_LIST__707);
if(lisp.values1(TMP_1019) !== lisp.S_nil){
BLOCK_NIL__709: for(;;){{
L_L__710=lisp.values1(L_LIST__707);
TMP_1021=G_23.func(L_LIST__707);
L_NEXT__711=lisp.values1(TMP_1021);
for(;;){
TMP_1022=G_3.func(L_NEXT__711);
if(lisp.values1(TMP_1022) !== lisp.S_nil){
BLOCK_RESULT_NIL__709=lisp.values1(L_L__710);
break BLOCK_NIL__709;
}else{
{
L_G376__712=lisp.values1(L_NEXT__711);
TMP_1023=G_23.func(L_NEXT__711);
L_G377__713=lisp.values1(TMP_1023);
L_L__710=lisp.values1(L_G376__712);
L_NEXT__711=lisp.values1(L_G377__713);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__709=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_1020=BLOCK_RESULT_NIL__709;
}else{
TMP_1020=lisp.values1(L_LIST__707);
}
return TMP_1020;
});
CL_COMMON_LISP_LAST1=lisp.values1(F_LAST1_1017);
let F_LAST_1024;
F_LAST_1024=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_947, arguments.length);
}
let L_G387__724;
let TMP_1034;
let L_G386__723;
let TMP_1033;
let L_G385__722;
let TMP_1032;
let L_G384__721;
let TMP_1031;
let TMP_1030;
let TMP_1029;
let L_I__720;
let L_R__719;
let L_L__718;
let BLOCK_RESULT_NIL__717;
let TMP_1028;
let TMP_1027;
let TMP_1025;
let L_N__715;
let L_LIST__714;
L_LIST__714=arguments[0];
L_N__715=arguments.length > 1 ? arguments[1] : (lisp.values1(1));
TMP_1025=lisp.callFunctionWithCallStack(G_1026,L_N__715,1);
if(lisp.values1(TMP_1025) !== lisp.S_nil){
TMP_1028=G_1018.func(L_LIST__714);
TMP_1027=TMP_1028;
}else{
BLOCK_NIL__717: for(;;){{
L_L__718=lisp.values1(L_LIST__714);
L_R__719=lisp.values1(L_LIST__714);
L_I__720=lisp.values1(0);
for(;;){
TMP_1029=G_3.func(L_L__718);
if(lisp.values1(TMP_1029) !== lisp.S_nil){
BLOCK_RESULT_NIL__717=lisp.values1(L_R__719);
break BLOCK_NIL__717;
}else{
TMP_1030=lisp.callFunctionWithCallStack(G_927,L_I__720,L_N__715);
if(lisp.values1(TMP_1030) !== lisp.S_nil){
{
TMP_1031=G_23.func(L_R__719);
L_G384__721=lisp.values1(TMP_1031);
{
TMP_1032=G_17.func(L_R__719);
L_G385__722=lisp.values1(TMP_1032);
L_R__719=lisp.values1(L_G384__721);
}
}
}else{
}
{
TMP_1033=G_23.func(L_L__718);
L_G386__723=lisp.values1(TMP_1033);
TMP_1034=lisp.callFunctionWithCallStack(G_992,L_I__720);
L_G387__724=lisp.values1(TMP_1034);
L_L__718=lisp.values1(L_G386__723);
L_I__720=lisp.values1(L_G387__724);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__717=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_1027=BLOCK_RESULT_NIL__717;
}
return TMP_1027;
});
CL_COMMON_LISP_LAST=lisp.values1(F_LAST_1024);
let F_LDIFF_1035;
F_LDIFF_1035=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1036, arguments.length);
}
let TMP_1050;
let TMP_1049;
let TMP_1048;
let TMP_1047;
let TMP_1046;
let TMP_1045;
let TMP_1044;
let TMP_1043;
let TMP_1042;
let TMP_1041;
let TMP_1040;
let TMP_1039;
let L_SPLICE__731;
let L_RESULT__730;
let TMP_1038;
let L_LIST__729;
let BLOCK_RESULT_NIL__728;
let TMP_1037;
let L_OBJECT__726;
let L_LIST__725;
L_LIST__725=arguments[0];
L_OBJECT__726=arguments[1];
TMP_1037=G_11.func(L_LIST__725);
if(lisp.values1(TMP_1037) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_LIST__725,G_19);
}
BLOCK_NIL__728: for(;;){{
L_LIST__729=lisp.values1(L_LIST__725);
TMP_1038=G_19.func(lisp.S_nil);
L_RESULT__730=lisp.values1(TMP_1038);
L_SPLICE__731=lisp.values1(L_RESULT__730);
for(;;){
TMP_1039=G_3.func(L_LIST__729);
if(lisp.values1(TMP_1039) !== lisp.S_nil){
TMP_1040=lisp.callFunctionWithCallStack(G_641,L_LIST__729,L_OBJECT__726);
if(lisp.values1(TMP_1040) !== lisp.S_nil){
TMP_1042=G_23.func(L_RESULT__730);
TMP_1041=TMP_1042;
}else{
G_32.func(L_SPLICE__731,L_LIST__729);
TMP_1043=G_23.func(L_RESULT__730);
TMP_1041=TMP_1043;
}
BLOCK_RESULT_NIL__728=TMP_1041;
break BLOCK_NIL__728;
}else{
TMP_1044=lisp.callFunctionWithCallStack(G_641,L_LIST__729,L_OBJECT__726);
if(lisp.values1(TMP_1044) !== lisp.S_nil){
TMP_1045=G_23.func(L_RESULT__730);
BLOCK_RESULT_NIL__728=TMP_1045;
break BLOCK_NIL__728;
}else{
TMP_1046=G_17.func(L_LIST__729);
TMP_1047=G_19.func(TMP_1046);
TMP_1048=G_32.func(L_SPLICE__731,TMP_1047);
TMP_1049=G_23.func(TMP_1048);
L_SPLICE__731=lisp.values1(TMP_1049);
}
TMP_1050=G_23.func(L_LIST__729);
L_LIST__729=lisp.values1(TMP_1050);
continue;
}
break;
}
}
BLOCK_RESULT_NIL__728=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__728;
});
CL_COMMON_LISP_LDIFF=lisp.values1(F_LDIFF_1035);
let F_TAILP_1051;
F_TAILP_1051=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1052, arguments.length);
}
let L_G400__737;
let TMP_1057;
let TMP_1056;
let TMP_1055;
let TMP_1054;
let L_LIST__736;
let BLOCK_RESULT_NIL__735;
let TMP_1053;
let L_LIST__733;
let L_OBJECT__732;
L_OBJECT__732=arguments[0];
L_LIST__733=arguments[1];
TMP_1053=G_11.func(L_LIST__733);
if(lisp.values1(TMP_1053) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_LIST__733,G_19);
}
BLOCK_NIL__735: for(;;){{
L_LIST__736=lisp.values1(L_LIST__733);
for(;;){
TMP_1054=G_3.func(L_LIST__736);
if(lisp.values1(TMP_1054) !== lisp.S_nil){
TMP_1055=lisp.callFunctionWithCallStack(G_641,L_LIST__736,L_OBJECT__732);
BLOCK_RESULT_NIL__735=TMP_1055;
break BLOCK_NIL__735;
}else{
TMP_1056=lisp.callFunctionWithCallStack(G_641,L_OBJECT__732,L_LIST__736);
if(lisp.values1(TMP_1056) !== lisp.S_nil){
BLOCK_RESULT_NIL__735=lisp.values1(G_825);
break BLOCK_NIL__735;
}else{
}
{
TMP_1057=G_23.func(L_LIST__736);
L_G400__737=lisp.values1(TMP_1057);
L_LIST__736=lisp.values1(L_G400__737);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__735=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__735;
});
CL_COMMON_LISP_TAILP=lisp.values1(F_TAILP_1051);
let F_NTHCDR_1058;
F_NTHCDR_1058=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1059, arguments.length);
}
let L_G408__744;
let TMP_1065;
let TMP_1064;
let TMP_1063;
let L_____743;
let BLOCK_RESULT_NIL__742;
let L_G401__741;
let TMP_1062;
let TMP_1061;
let TMP_1060;
let L_LIST__739;
let L_N__738;
L_N__738=arguments[0];
L_LIST__739=arguments[1];
TMP_1060=lisp.CL_integerp(L_N__738);
if(lisp.values1(TMP_1060) !== lisp.S_nil){
TMP_1062=lisp.callFunctionWithCallStack(G_873,0,L_N__738);
TMP_1061=lisp.values1(TMP_1062);
}else{
TMP_1061=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1061) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_20,L_N__738,lisp.makeCons(G_874, lisp.makeCons(0, lisp.makeCons(G_875, lisp.S_nil))));
}
{
L_G401__741=lisp.values1(L_N__738);
BLOCK_NIL__742: for(;;){{
L_____743=lisp.values1(0);
for(;;){
TMP_1063=lisp.callFunctionWithCallStack(G_927,L_____743,L_G401__741);
if(lisp.values1(TMP_1063) !== lisp.S_nil){
BLOCK_RESULT_NIL__742=lisp.values1(lisp.S_nil);
break BLOCK_NIL__742;
}else{
TMP_1064=G_23.func(L_LIST__739);
L_LIST__739=lisp.values1(TMP_1064);
{
TMP_1065=lisp.callFunctionWithCallStack(G_857,L_____743,1);
L_G408__744=lisp.values1(TMP_1065);
L_____743=lisp.values1(L_G408__744);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__742=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_LIST__739);
});
CL_COMMON_LISP_NTHCDR=lisp.values1(F_NTHCDR_1058);
let F_REST_1066;
F_REST_1066=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_958, arguments.length);
}
let TMP_1067;
let L_LIST__745;
L_LIST__745=arguments[0];
TMP_1067=G_23.func(L_LIST__745);
return TMP_1067;
});
CL_COMMON_LISP_REST=lisp.values1(F_REST_1066);
let F_PROCESS_LIST_1068;
F_PROCESS_LIST_1068=(function(){
if(arguments.length !== 10) {
lisp.argumentsError(G_1069, arguments.length);
}
let L_G418__764;
let TMP_1080;
let TMP_1079;
let TMP_1078;
let TMP_1077;
let TMP_1076;
let TMP_1075;
let TMP_1074;
let L_REST__763;
let BLOCK_RESULT_NIL__762;
let L_CMP__761;
let TMP_1073;
let TMP_1072;
let TMP_1071;
let L_G410__759;
let TMP_1070;
let L_G409__758;
let L_RETURN__756;
let L_GET_ELEMENT__755;
let L_TEST_NOT_P__754;
let L_TEST_NOT__753;
let L_TEST_P__752;
let L_TEST__751;
let L_KEY_P__750;
let L_KEY__749;
let L_LIST__748;
let L_ITEM__747;
L_ITEM__747=arguments[0];
L_LIST__748=arguments[1];
L_KEY__749=arguments[2];
L_KEY_P__750=arguments[3];
L_TEST__751=arguments[4];
L_TEST_P__752=arguments[5];
L_TEST_NOT__753=arguments[6];
L_TEST_NOT_P__754=arguments[7];
L_GET_ELEMENT__755=arguments[8];
L_RETURN__756=arguments[9];
{
{
L_G409__758=lisp.values1(L_TEST_P__752);
if(lisp.values1(L_G409__758) !== lisp.S_nil){
TMP_1070=lisp.values1(L_TEST__751);
}else{
{
L_G410__759=lisp.values1(L_TEST_NOT_P__754);
if(lisp.values1(L_G410__759) !== lisp.S_nil){
TMP_1072=lisp.callFunctionWithCallStack(G_753,L_TEST_NOT__753);
TMP_1071=lisp.values1(TMP_1072);
}else{
TMP_1073=lisp.CL_symbolFunction(G_641);
TMP_1071=lisp.values1(TMP_1073);
}
}
TMP_1070=lisp.values1(lisp.values1(TMP_1071));
}
}
L_CMP__761=lisp.values1(lisp.values1(TMP_1070));
BLOCK_NIL__762: for(;;){{
L_REST__763=lisp.values1(L_LIST__748);
for(;;){
TMP_1074=G_8.func(L_REST__763);
if(lisp.values1(TMP_1074) !== lisp.S_nil){
BLOCK_RESULT_NIL__762=lisp.values1(lisp.S_nil);
break BLOCK_NIL__762;
}else{
TMP_1075=G_17.func(L_REST__763);
TMP_1076=lisp.CL_funcall(lisp.values1(L_GET_ELEMENT__755),TMP_1075);
TMP_1077=G_631.func(L_KEY__749,TMP_1076);
TMP_1078=lisp.CL_funcall(lisp.values1(L_CMP__761),L_ITEM__747,TMP_1077);
if(lisp.values1(TMP_1078) !== lisp.S_nil){
TMP_1079=lisp.CL_funcall(lisp.values1(L_RETURN__756),L_REST__763);
BLOCK_RESULT_NIL__762=TMP_1079;
break BLOCK_NIL__762;
}else{
}
{
TMP_1080=G_23.func(L_REST__763);
L_G418__764=lisp.values1(TMP_1080);
L_REST__763=lisp.values1(L_G418__764);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__762=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__762;
});
CL_COMMON_LISP_PROCESS_LIST=lisp.values1(F_PROCESS_LIST_1068);
let F_MEMBER_1081;
F_MEMBER_1081=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1082, arguments.length);
}
let TMP_1090;
let TMP_1089;
let TMP_1088;
let L_TEST_NOT_P__772;
let L_TEST_NOT__771;
let L_TEST_P__770;
let L_TEST__769;
let L_KEY_P__768;
let L_KEY__767;
let L_LIST__766;
let L_ITEM__765;
L_ITEM__765=arguments[0];
L_LIST__766=arguments[1];
let supplied_KEY__767;
for (let TMP_1083 = 2; TMP_1083 < arguments.length; TMP_1083 += 2) {
if(arguments[TMP_1083] === G_637){
supplied_KEY__767=arguments[TMP_1083+1];
break;
}
}
L_KEY__767=supplied_KEY__767 !== undefined ? supplied_KEY__767 : (lisp.values1(lisp.S_nil));
L_KEY_P__768=(supplied_KEY__767 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST__769;
for (let TMP_1084 = 2; TMP_1084 < arguments.length; TMP_1084 += 2) {
if(arguments[TMP_1084] === G_639){
supplied_TEST__769=arguments[TMP_1084+1];
break;
}
}
L_TEST__769=supplied_TEST__769 !== undefined ? supplied_TEST__769 : (lisp.values1(lisp.S_nil));
L_TEST_P__770=(supplied_TEST__769 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__771;
for (let TMP_1085 = 2; TMP_1085 < arguments.length; TMP_1085 += 2) {
if(arguments[TMP_1085] === G_643){
supplied_TEST_NOT__771=arguments[TMP_1085+1];
break;
}
}
L_TEST_NOT__771=supplied_TEST_NOT__771 !== undefined ? supplied_TEST_NOT__771 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__772=(supplied_TEST_NOT__771 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1086 = 2; TMP_1086 < arguments.length; TMP_1086 += 2) {
if(arguments[TMP_1086]!==G_643 && arguments[TMP_1086]!==G_639 && arguments[TMP_1086]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1086].name); }
}
TMP_1088=lisp.CL_symbolFunction(G_1087);
TMP_1089=lisp.CL_symbolFunction(G_1087);
TMP_1090=G_1069.func(L_ITEM__765,L_LIST__766,L_KEY__767,L_KEY_P__768,L_TEST__769,L_TEST_P__770,L_TEST_NOT__771,L_TEST_NOT_P__772,TMP_1088,TMP_1089);
return TMP_1090;
});
CL_COMMON_LISP_MEMBER=lisp.values1(F_MEMBER_1081);
let F_MEMBER_IF_1091;
F_MEMBER_IF_1091=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_1092, arguments.length);
}
let L_G425__780;
let TMP_1099;
let TMP_1098;
let TMP_1097;
let TMP_1096;
let TMP_1095;
let L_LIST__779;
let BLOCK_RESULT_NIL__778;
let L_KEY__776;
let L_LIST__775;
let L_PREDICATE__774;
L_PREDICATE__774=arguments[0];
L_LIST__775=arguments[1];
let supplied_KEY__776;
for (let TMP_1093 = 2; TMP_1093 < arguments.length; TMP_1093 += 2) {
if(arguments[TMP_1093] === G_637){
supplied_KEY__776=arguments[TMP_1093+1];
break;
}
}
L_KEY__776=supplied_KEY__776 !== undefined ? supplied_KEY__776 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1094 = 2; TMP_1094 < arguments.length; TMP_1094 += 2) {
if(arguments[TMP_1094]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1094].name); }
}
BLOCK_NIL__778: for(;;){{
L_LIST__779=lisp.values1(L_LIST__775);
for(;;){
TMP_1095=G_8.func(L_LIST__779);
if(lisp.values1(TMP_1095) !== lisp.S_nil){
BLOCK_RESULT_NIL__778=lisp.values1(lisp.S_nil);
break BLOCK_NIL__778;
}else{
TMP_1096=G_890.func(L_LIST__779);
TMP_1097=G_631.func(L_KEY__776,TMP_1096);
TMP_1098=lisp.CL_funcall(lisp.values1(L_PREDICATE__774),TMP_1097);
if(lisp.values1(TMP_1098) !== lisp.S_nil){
BLOCK_RESULT_NIL__778=lisp.values1(L_LIST__779);
break BLOCK_NIL__778;
}else{
}
{
TMP_1099=G_958.func(L_LIST__779);
L_G425__780=lisp.values1(TMP_1099);
L_LIST__779=lisp.values1(L_G425__780);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__778=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__778;
});
CL_COMMON_LISP_MEMBER_IF=lisp.values1(F_MEMBER_IF_1091);
let F_MEMBER_IF_NOT_1100;
F_MEMBER_IF_NOT_1100=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_1101, arguments.length);
}
let TMP_1105;
let TMP_1104;
let L_KEY__783;
let L_LIST__782;
let L_PREDICATE__781;
L_PREDICATE__781=arguments[0];
L_LIST__782=arguments[1];
let supplied_KEY__783;
for (let TMP_1102 = 2; TMP_1102 < arguments.length; TMP_1102 += 2) {
if(arguments[TMP_1102] === G_637){
supplied_KEY__783=arguments[TMP_1102+1];
break;
}
}
L_KEY__783=supplied_KEY__783 !== undefined ? supplied_KEY__783 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1103 = 2; TMP_1103 < arguments.length; TMP_1103 += 2) {
if(arguments[TMP_1103]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1103].name); }
}
TMP_1104=lisp.callFunctionWithCallStack(G_753,L_PREDICATE__781);
TMP_1105=G_1092.func(TMP_1104,L_LIST__782,G_637,L_KEY__783);
return TMP_1105;
});
CL_COMMON_LISP_MEMBER_IF_NOT=lisp.values1(F_MEMBER_IF_NOT_1100);
let F_MAPC_1107;
F_MAPC_1107=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1108, arguments.length);
}
let TMP_1124;
let L_G453__806;
let TMP_1123;
let L_G_STORE452__805;
let TMP_1122;
let L_G451__804;
let TMP_1121;
let TMP_1120;
let L_L__803;
let BLOCK_RESULT_NIL__802;
let F_COLLECT__797;
let TMP_1116;
let L_G441__796;
let L_G440__795;
let TMP_1115;
let TMP_1114;
let TMP_1113;
let L_A__793;
let TMP_1112;
let TMP_1111;
let L_G431__792;
let BLOCK_RESULT_NIL__791;
let BLOCK_RESULT_NIL__790;
let L_ARGLISTS__789;
let TMP_1110;
let TMP_1109;
let L_LISTS__787;
let L_LIST__786;
let L_FUNCTION__785;
L_FUNCTION__785=arguments[0];
L_LIST__786=arguments[1];
L_LISTS__787=lisp.jsArrayToList(arguments, 2);
{
TMP_1109=lisp.CL_cons(L_LIST__786,L_LISTS__787);
TMP_1110=G_828.func(TMP_1109);
L_ARGLISTS__789=lisp.values1(TMP_1110);
BLOCK_NIL__790: for(;;){for(;;){
BLOCK_NIL__791: for(;;){{
L_G431__792=lisp.values1(L_ARGLISTS__789);
for(;;){
TMP_1111=G_853.func(L_G431__792);
if(lisp.values1(TMP_1111) !== lisp.S_nil){
}else{
{
TMP_1112=G_17.func(L_G431__792);
L_A__793=lisp.values1(TMP_1112);
TMP_1113=G_23.func(L_G431__792);
L_G431__792=lisp.values1(TMP_1113);
TMP_1114=G_8.func(L_A__793);
if(lisp.values1(TMP_1114) !== lisp.S_nil){
BLOCK_RESULT_NIL__791=lisp.values1(G_825);
break BLOCK_NIL__791;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__791=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
if(lisp.values1(BLOCK_RESULT_NIL__791) !== lisp.S_nil){
BLOCK_RESULT_NIL__790=lisp.values1(lisp.S_nil);
break BLOCK_NIL__790;
}else{
{
TMP_1115=G_19.func(lisp.S_nil);
L_G440__795=lisp.values1(TMP_1115);
L_G441__796=lisp.values1(L_G440__795);
{
TMP_1116=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1119;
let L_G444__801;
let TMP_1118;
let L_G_STORE443__800;
let TMP_1117;
let L_G442__799;
let L_X__798;
L_X__798=arguments[0];
{
L_G442__799=lisp.values1(L_G441__796);
TMP_1117=G_19.func(L_X__798);
L_G_STORE443__800=lisp.values1(TMP_1117);
lisp.callFunctionWithCallStack(G_53,L_G_STORE443__800,L_G442__799);
}
{
TMP_1118=G_23.func(L_G441__796);
L_G444__801=lisp.values1(TMP_1118);
L_G441__796=(TMP_1119=lisp.values1(L_G444__801));
}
return lisp.values1(TMP_1119);
});
F_COLLECT__797=lisp.values1(TMP_1116);
BLOCK_NIL__802: for(;;){{
L_L__803=lisp.values1(L_ARGLISTS__789);
for(;;){
TMP_1120=G_8.func(L_L__803);
if(lisp.values1(TMP_1120) !== lisp.S_nil){
BLOCK_RESULT_NIL__802=lisp.values1(lisp.S_nil);
break BLOCK_NIL__802;
}else{
TMP_1121=G_66.func(L_L__803);
F_COLLECT__797(TMP_1121);
{
L_G451__804=lisp.values1(L_L__803);
TMP_1122=G_74.func(L_L__803);
L_G_STORE452__805=lisp.values1(TMP_1122);
lisp.callFunctionWithCallStack(G_35,L_G_STORE452__805,L_G451__804);
}
{
TMP_1123=G_23.func(L_L__803);
L_G453__806=lisp.values1(TMP_1123);
L_L__803=lisp.values1(L_G453__806);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__802=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1124=G_23.func(L_G440__795);
}
lisp.callFunctionWithCallStack(G_1125,L_FUNCTION__785,lisp.values1(lisp.values1(TMP_1124)));
continue;
}
break;
}
BLOCK_RESULT_NIL__790=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_LIST__786);
});
CL_COMMON_LISP_MAPC=lisp.values1(F_MAPC_1107);
let F_MAPCAR_1126;
F_MAPCAR_1126=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1127, arguments.length);
}
let TMP_1150;
let TMP_1149;
let TMP_1148;
let L_G485__835;
let TMP_1147;
let L_G_STORE484__834;
let TMP_1146;
let L_G483__833;
let TMP_1145;
let TMP_1144;
let L_L__832;
let BLOCK_RESULT_NIL__831;
let F_COLLECT__826;
let TMP_1140;
let L_G473__825;
let L_G472__824;
let TMP_1139;
let TMP_1138;
let TMP_1137;
let L_A__822;
let TMP_1136;
let TMP_1135;
let L_G463__821;
let BLOCK_RESULT_NIL__820;
let BLOCK_RESULT_NIL__819;
let F_COLLECT__814;
let TMP_1131;
let L_G455__813;
let L_G454__812;
let TMP_1130;
let L_ARGLISTS__811;
let TMP_1129;
let TMP_1128;
let L_LISTS__809;
let L_LIST__808;
let L_FUNCTION__807;
L_FUNCTION__807=arguments[0];
L_LIST__808=arguments[1];
L_LISTS__809=lisp.jsArrayToList(arguments, 2);
{
TMP_1128=lisp.CL_cons(L_LIST__808,L_LISTS__809);
TMP_1129=G_828.func(TMP_1128);
L_ARGLISTS__811=lisp.values1(TMP_1129);
{
TMP_1130=G_19.func(lisp.S_nil);
L_G454__812=lisp.values1(TMP_1130);
L_G455__813=lisp.values1(L_G454__812);
{
TMP_1131=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1134;
let L_G458__818;
let TMP_1133;
let L_G_STORE457__817;
let TMP_1132;
let L_G456__816;
let L_X__815;
L_X__815=arguments[0];
{
L_G456__816=lisp.values1(L_G455__813);
TMP_1132=G_19.func(L_X__815);
L_G_STORE457__817=lisp.values1(TMP_1132);
lisp.callFunctionWithCallStack(G_53,L_G_STORE457__817,L_G456__816);
}
{
TMP_1133=G_23.func(L_G455__813);
L_G458__818=lisp.values1(TMP_1133);
L_G455__813=(TMP_1134=lisp.values1(L_G458__818));
}
return lisp.values1(TMP_1134);
});
F_COLLECT__814=lisp.values1(TMP_1131);
BLOCK_NIL__819: for(;;){for(;;){
BLOCK_NIL__820: for(;;){{
L_G463__821=lisp.values1(L_ARGLISTS__811);
for(;;){
TMP_1135=G_853.func(L_G463__821);
if(lisp.values1(TMP_1135) !== lisp.S_nil){
}else{
{
TMP_1136=G_17.func(L_G463__821);
L_A__822=lisp.values1(TMP_1136);
TMP_1137=G_23.func(L_G463__821);
L_G463__821=lisp.values1(TMP_1137);
TMP_1138=G_8.func(L_A__822);
if(lisp.values1(TMP_1138) !== lisp.S_nil){
BLOCK_RESULT_NIL__820=lisp.values1(G_825);
break BLOCK_NIL__820;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__820=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
if(lisp.values1(BLOCK_RESULT_NIL__820) !== lisp.S_nil){
BLOCK_RESULT_NIL__819=lisp.values1(lisp.S_nil);
break BLOCK_NIL__819;
}else{
{
TMP_1139=G_19.func(lisp.S_nil);
L_G472__824=lisp.values1(TMP_1139);
L_G473__825=lisp.values1(L_G472__824);
{
TMP_1140=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1143;
let L_G476__830;
let TMP_1142;
let L_G_STORE475__829;
let TMP_1141;
let L_G474__828;
let L_X__827;
L_X__827=arguments[0];
{
L_G474__828=lisp.values1(L_G473__825);
TMP_1141=G_19.func(L_X__827);
L_G_STORE475__829=lisp.values1(TMP_1141);
lisp.callFunctionWithCallStack(G_53,L_G_STORE475__829,L_G474__828);
}
{
TMP_1142=G_23.func(L_G473__825);
L_G476__830=lisp.values1(TMP_1142);
L_G473__825=(TMP_1143=lisp.values1(L_G476__830));
}
return lisp.values1(TMP_1143);
});
F_COLLECT__826=lisp.values1(TMP_1140);
BLOCK_NIL__831: for(;;){{
L_L__832=lisp.values1(L_ARGLISTS__811);
for(;;){
TMP_1144=G_8.func(L_L__832);
if(lisp.values1(TMP_1144) !== lisp.S_nil){
BLOCK_RESULT_NIL__831=lisp.values1(lisp.S_nil);
break BLOCK_NIL__831;
}else{
TMP_1145=G_66.func(L_L__832);
F_COLLECT__826(TMP_1145);
{
L_G483__833=lisp.values1(L_L__832);
TMP_1146=G_74.func(L_L__832);
L_G_STORE484__834=lisp.values1(TMP_1146);
lisp.callFunctionWithCallStack(G_35,L_G_STORE484__834,L_G483__833);
}
{
TMP_1147=G_23.func(L_L__832);
L_G485__835=lisp.values1(TMP_1147);
L_L__832=lisp.values1(L_G485__835);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__831=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1148=G_23.func(L_G472__824);
}
TMP_1149=lisp.callFunctionWithCallStack(G_1125,L_FUNCTION__807,lisp.values1(lisp.values1(TMP_1148)));
F_COLLECT__814(TMP_1149);
continue;
}
break;
}
BLOCK_RESULT_NIL__819=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1150=G_23.func(L_G454__812);
}
}
return TMP_1150;
});
CL_COMMON_LISP_MAPCAR=lisp.values1(F_MAPCAR_1126);
let F_PERCENTMAPCAR_1151;
F_PERCENTMAPCAR_1151=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_43, arguments.length);
}
let TMP_1161;
let TMP_1160;
let TMP_1159;
let L_X__848;
let TMP_1158;
let TMP_1157;
let L_G491__847;
let F_COLLECT__841;
let TMP_1153;
let L_G487__840;
let L_G486__839;
let TMP_1152;
let L_LIST__837;
let L_FUNCTION__836;
L_FUNCTION__836=arguments[0];
L_LIST__837=arguments[1];
{
TMP_1152=G_19.func(lisp.S_nil);
L_G486__839=lisp.values1(TMP_1152);
L_G487__840=lisp.values1(L_G486__839);
{
TMP_1153=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1156;
let L_G490__845;
let TMP_1155;
let L_G_STORE489__844;
let TMP_1154;
let L_G488__843;
let L_X__842;
L_X__842=arguments[0];
{
L_G488__843=lisp.values1(L_G487__840);
TMP_1154=G_19.func(L_X__842);
L_G_STORE489__844=lisp.values1(TMP_1154);
lisp.callFunctionWithCallStack(G_53,L_G_STORE489__844,L_G488__843);
}
{
TMP_1155=G_23.func(L_G487__840);
L_G490__845=lisp.values1(TMP_1155);
L_G487__840=(TMP_1156=lisp.values1(L_G490__845));
}
return lisp.values1(TMP_1156);
});
F_COLLECT__841=lisp.values1(TMP_1153);
{
L_G491__847=lisp.values1(L_LIST__837);
for(;;){
TMP_1157=G_853.func(L_G491__847);
if(lisp.values1(TMP_1157) !== lisp.S_nil){
}else{
{
TMP_1158=G_17.func(L_G491__847);
L_X__848=lisp.values1(TMP_1158);
TMP_1159=G_23.func(L_G491__847);
L_G491__847=lisp.values1(TMP_1159);
TMP_1160=lisp.CL_funcall(lisp.values1(L_FUNCTION__836),L_X__848);
F_COLLECT__841(TMP_1160);
}
continue;
}
break;
}
}
}
TMP_1161=G_23.func(L_G486__839);
}
return TMP_1161;
});
CL_SYSTEM_PERCENTMAPCAR=lisp.values1(F_PERCENTMAPCAR_1151);
let F_MAPCAN_1162;
F_MAPCAN_1162=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1163, arguments.length);
}
let TMP_1181;
let TMP_1180;
let TMP_1179;
let L_G524__872;
let TMP_1178;
let L_G_STORE523__871;
let TMP_1177;
let L_G522__870;
let TMP_1176;
let TMP_1175;
let L_L__869;
let BLOCK_RESULT_NIL__868;
let F_COLLECT__863;
let TMP_1171;
let L_G512__862;
let L_G511__861;
let TMP_1170;
let TMP_1169;
let TMP_1168;
let L_A__859;
let TMP_1167;
let TMP_1166;
let L_G502__858;
let BLOCK_RESULT_NIL__857;
let BLOCK_RESULT_NIL__856;
let L_ACC__855;
let L_ARGLISTS__854;
let TMP_1165;
let TMP_1164;
let L_LISTS__852;
let L_LIST__851;
let L_FUNCTION__850;
L_FUNCTION__850=arguments[0];
L_LIST__851=arguments[1];
L_LISTS__852=lisp.jsArrayToList(arguments, 2);
{
TMP_1164=lisp.CL_cons(L_LIST__851,L_LISTS__852);
TMP_1165=G_828.func(TMP_1164);
L_ARGLISTS__854=lisp.values1(TMP_1165);
L_ACC__855=lisp.values1(lisp.S_nil);
BLOCK_NIL__856: for(;;){for(;;){
BLOCK_NIL__857: for(;;){{
L_G502__858=lisp.values1(L_ARGLISTS__854);
for(;;){
TMP_1166=G_853.func(L_G502__858);
if(lisp.values1(TMP_1166) !== lisp.S_nil){
}else{
{
TMP_1167=G_17.func(L_G502__858);
L_A__859=lisp.values1(TMP_1167);
TMP_1168=G_23.func(L_G502__858);
L_G502__858=lisp.values1(TMP_1168);
TMP_1169=G_8.func(L_A__859);
if(lisp.values1(TMP_1169) !== lisp.S_nil){
BLOCK_RESULT_NIL__857=lisp.values1(G_825);
break BLOCK_NIL__857;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__857=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
if(lisp.values1(BLOCK_RESULT_NIL__857) !== lisp.S_nil){
BLOCK_RESULT_NIL__856=lisp.values1(lisp.S_nil);
break BLOCK_NIL__856;
}else{
{
TMP_1170=G_19.func(lisp.S_nil);
L_G511__861=lisp.values1(TMP_1170);
L_G512__862=lisp.values1(L_G511__861);
{
TMP_1171=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1174;
let L_G515__867;
let TMP_1173;
let L_G_STORE514__866;
let TMP_1172;
let L_G513__865;
let L_X__864;
L_X__864=arguments[0];
{
L_G513__865=lisp.values1(L_G512__862);
TMP_1172=G_19.func(L_X__864);
L_G_STORE514__866=lisp.values1(TMP_1172);
lisp.callFunctionWithCallStack(G_53,L_G_STORE514__866,L_G513__865);
}
{
TMP_1173=G_23.func(L_G512__862);
L_G515__867=lisp.values1(TMP_1173);
L_G512__862=(TMP_1174=lisp.values1(L_G515__867));
}
return lisp.values1(TMP_1174);
});
F_COLLECT__863=lisp.values1(TMP_1171);
BLOCK_NIL__868: for(;;){{
L_L__869=lisp.values1(L_ARGLISTS__854);
for(;;){
TMP_1175=G_8.func(L_L__869);
if(lisp.values1(TMP_1175) !== lisp.S_nil){
BLOCK_RESULT_NIL__868=lisp.values1(lisp.S_nil);
break BLOCK_NIL__868;
}else{
TMP_1176=G_66.func(L_L__869);
F_COLLECT__863(TMP_1176);
{
L_G522__870=lisp.values1(L_L__869);
TMP_1177=G_74.func(L_L__869);
L_G_STORE523__871=lisp.values1(TMP_1177);
lisp.callFunctionWithCallStack(G_35,L_G_STORE523__871,L_G522__870);
}
{
TMP_1178=G_23.func(L_L__869);
L_G524__872=lisp.values1(TMP_1178);
L_L__869=lisp.values1(L_G524__872);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__868=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1179=G_23.func(L_G511__861);
}
TMP_1180=lisp.callFunctionWithCallStack(G_1125,L_FUNCTION__850,lisp.values1(lisp.values1(TMP_1179)));
TMP_1181=G_942.func(L_ACC__855,TMP_1180);
L_ACC__855=lisp.values1(TMP_1181);
continue;
}
break;
}
BLOCK_RESULT_NIL__856=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_ACC__855);
});
CL_COMMON_LISP_MAPCAN=lisp.values1(F_MAPCAN_1162);
let F_MAPL_1182;
F_MAPL_1182=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1183, arguments.length);
}
let TMP_1199;
let L_G551__894;
let TMP_1198;
let L_G_STORE550__893;
let TMP_1197;
let L_G549__892;
let TMP_1196;
let TMP_1195;
let L_L__891;
let BLOCK_RESULT_NIL__890;
let F_COLLECT__885;
let TMP_1191;
let L_G539__884;
let L_G538__883;
let TMP_1190;
let TMP_1189;
let TMP_1188;
let L_A__881;
let TMP_1187;
let TMP_1186;
let L_G529__880;
let BLOCK_RESULT_NIL__879;
let BLOCK_RESULT_NIL__878;
let L_ARGLISTS__877;
let TMP_1185;
let TMP_1184;
let L_LISTS__875;
let L_LIST__874;
let L_FUNCTION__873;
L_FUNCTION__873=arguments[0];
L_LIST__874=arguments[1];
L_LISTS__875=lisp.jsArrayToList(arguments, 2);
{
TMP_1184=lisp.CL_cons(L_LIST__874,L_LISTS__875);
TMP_1185=G_828.func(TMP_1184);
L_ARGLISTS__877=lisp.values1(TMP_1185);
BLOCK_NIL__878: for(;;){for(;;){
BLOCK_NIL__879: for(;;){{
L_G529__880=lisp.values1(L_ARGLISTS__877);
for(;;){
TMP_1186=G_853.func(L_G529__880);
if(lisp.values1(TMP_1186) !== lisp.S_nil){
}else{
{
TMP_1187=G_17.func(L_G529__880);
L_A__881=lisp.values1(TMP_1187);
TMP_1188=G_23.func(L_G529__880);
L_G529__880=lisp.values1(TMP_1188);
TMP_1189=G_8.func(L_A__881);
if(lisp.values1(TMP_1189) !== lisp.S_nil){
BLOCK_RESULT_NIL__879=lisp.values1(G_825);
break BLOCK_NIL__879;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__879=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
if(lisp.values1(BLOCK_RESULT_NIL__879) !== lisp.S_nil){
BLOCK_RESULT_NIL__878=lisp.values1(lisp.S_nil);
break BLOCK_NIL__878;
}else{
{
TMP_1190=G_19.func(lisp.S_nil);
L_G538__883=lisp.values1(TMP_1190);
L_G539__884=lisp.values1(L_G538__883);
{
TMP_1191=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1194;
let L_G542__889;
let TMP_1193;
let L_G_STORE541__888;
let TMP_1192;
let L_G540__887;
let L_X__886;
L_X__886=arguments[0];
{
L_G540__887=lisp.values1(L_G539__884);
TMP_1192=G_19.func(L_X__886);
L_G_STORE541__888=lisp.values1(TMP_1192);
lisp.callFunctionWithCallStack(G_53,L_G_STORE541__888,L_G540__887);
}
{
TMP_1193=G_23.func(L_G539__884);
L_G542__889=lisp.values1(TMP_1193);
L_G539__884=(TMP_1194=lisp.values1(L_G542__889));
}
return lisp.values1(TMP_1194);
});
F_COLLECT__885=lisp.values1(TMP_1191);
BLOCK_NIL__890: for(;;){{
L_L__891=lisp.values1(L_ARGLISTS__877);
for(;;){
TMP_1195=G_8.func(L_L__891);
if(lisp.values1(TMP_1195) !== lisp.S_nil){
BLOCK_RESULT_NIL__890=lisp.values1(lisp.S_nil);
break BLOCK_NIL__890;
}else{
TMP_1196=G_17.func(L_L__891);
F_COLLECT__885(TMP_1196);
{
L_G549__892=lisp.values1(L_L__891);
TMP_1197=G_74.func(L_L__891);
L_G_STORE550__893=lisp.values1(TMP_1197);
lisp.callFunctionWithCallStack(G_35,L_G_STORE550__893,L_G549__892);
}
{
TMP_1198=G_23.func(L_L__891);
L_G551__894=lisp.values1(TMP_1198);
L_L__891=lisp.values1(L_G551__894);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__890=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1199=G_23.func(L_G538__883);
}
lisp.callFunctionWithCallStack(G_1125,L_FUNCTION__873,lisp.values1(lisp.values1(TMP_1199)));
continue;
}
break;
}
BLOCK_RESULT_NIL__878=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_LIST__874);
});
CL_COMMON_LISP_MAPL=lisp.values1(F_MAPL_1182);
let F_MAPLIST_1200;
F_MAPLIST_1200=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1201, arguments.length);
}
let TMP_1224;
let TMP_1223;
let TMP_1222;
let L_G583__923;
let TMP_1221;
let L_G_STORE582__922;
let TMP_1220;
let L_G581__921;
let TMP_1219;
let TMP_1218;
let L_L__920;
let BLOCK_RESULT_NIL__919;
let F_COLLECT__914;
let TMP_1214;
let L_G571__913;
let L_G570__912;
let TMP_1213;
let TMP_1212;
let TMP_1211;
let L_A__910;
let TMP_1210;
let TMP_1209;
let L_G561__909;
let BLOCK_RESULT_NIL__908;
let BLOCK_RESULT_NIL__907;
let F_COLLECT__902;
let TMP_1205;
let L_G553__901;
let L_G552__900;
let TMP_1204;
let L_ARGLISTS__899;
let TMP_1203;
let TMP_1202;
let L_LISTS__897;
let L_LIST__896;
let L_FUNCTION__895;
L_FUNCTION__895=arguments[0];
L_LIST__896=arguments[1];
L_LISTS__897=lisp.jsArrayToList(arguments, 2);
{
TMP_1202=lisp.CL_cons(L_LIST__896,L_LISTS__897);
TMP_1203=G_828.func(TMP_1202);
L_ARGLISTS__899=lisp.values1(TMP_1203);
{
TMP_1204=G_19.func(lisp.S_nil);
L_G552__900=lisp.values1(TMP_1204);
L_G553__901=lisp.values1(L_G552__900);
{
TMP_1205=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1208;
let L_G556__906;
let TMP_1207;
let L_G_STORE555__905;
let TMP_1206;
let L_G554__904;
let L_X__903;
L_X__903=arguments[0];
{
L_G554__904=lisp.values1(L_G553__901);
TMP_1206=G_19.func(L_X__903);
L_G_STORE555__905=lisp.values1(TMP_1206);
lisp.callFunctionWithCallStack(G_53,L_G_STORE555__905,L_G554__904);
}
{
TMP_1207=G_23.func(L_G553__901);
L_G556__906=lisp.values1(TMP_1207);
L_G553__901=(TMP_1208=lisp.values1(L_G556__906));
}
return lisp.values1(TMP_1208);
});
F_COLLECT__902=lisp.values1(TMP_1205);
BLOCK_NIL__907: for(;;){for(;;){
BLOCK_NIL__908: for(;;){{
L_G561__909=lisp.values1(L_ARGLISTS__899);
for(;;){
TMP_1209=G_853.func(L_G561__909);
if(lisp.values1(TMP_1209) !== lisp.S_nil){
}else{
{
TMP_1210=G_17.func(L_G561__909);
L_A__910=lisp.values1(TMP_1210);
TMP_1211=G_23.func(L_G561__909);
L_G561__909=lisp.values1(TMP_1211);
TMP_1212=G_8.func(L_A__910);
if(lisp.values1(TMP_1212) !== lisp.S_nil){
BLOCK_RESULT_NIL__908=lisp.values1(G_825);
break BLOCK_NIL__908;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__908=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
if(lisp.values1(BLOCK_RESULT_NIL__908) !== lisp.S_nil){
BLOCK_RESULT_NIL__907=lisp.values1(lisp.S_nil);
break BLOCK_NIL__907;
}else{
{
TMP_1213=G_19.func(lisp.S_nil);
L_G570__912=lisp.values1(TMP_1213);
L_G571__913=lisp.values1(L_G570__912);
{
TMP_1214=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1217;
let L_G574__918;
let TMP_1216;
let L_G_STORE573__917;
let TMP_1215;
let L_G572__916;
let L_X__915;
L_X__915=arguments[0];
{
L_G572__916=lisp.values1(L_G571__913);
TMP_1215=G_19.func(L_X__915);
L_G_STORE573__917=lisp.values1(TMP_1215);
lisp.callFunctionWithCallStack(G_53,L_G_STORE573__917,L_G572__916);
}
{
TMP_1216=G_23.func(L_G571__913);
L_G574__918=lisp.values1(TMP_1216);
L_G571__913=(TMP_1217=lisp.values1(L_G574__918));
}
return lisp.values1(TMP_1217);
});
F_COLLECT__914=lisp.values1(TMP_1214);
BLOCK_NIL__919: for(;;){{
L_L__920=lisp.values1(L_ARGLISTS__899);
for(;;){
TMP_1218=G_8.func(L_L__920);
if(lisp.values1(TMP_1218) !== lisp.S_nil){
BLOCK_RESULT_NIL__919=lisp.values1(lisp.S_nil);
break BLOCK_NIL__919;
}else{
TMP_1219=G_17.func(L_L__920);
F_COLLECT__914(TMP_1219);
{
L_G581__921=lisp.values1(L_L__920);
TMP_1220=G_74.func(L_L__920);
L_G_STORE582__922=lisp.values1(TMP_1220);
lisp.callFunctionWithCallStack(G_35,L_G_STORE582__922,L_G581__921);
}
{
TMP_1221=G_23.func(L_L__920);
L_G583__923=lisp.values1(TMP_1221);
L_L__920=lisp.values1(L_G583__923);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__919=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1222=G_23.func(L_G570__912);
}
TMP_1223=lisp.callFunctionWithCallStack(G_1125,L_FUNCTION__895,lisp.values1(lisp.values1(TMP_1222)));
F_COLLECT__902(TMP_1223);
continue;
}
break;
}
BLOCK_RESULT_NIL__907=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1224=G_23.func(L_G552__900);
}
}
return TMP_1224;
});
CL_COMMON_LISP_MAPLIST=lisp.values1(F_MAPLIST_1200);
let F_MAPCON_1225;
F_MAPCON_1225=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1226, arguments.length);
}
let TMP_1244;
let TMP_1243;
let TMP_1242;
let L_G610__946;
let TMP_1241;
let L_G_STORE609__945;
let TMP_1240;
let L_G608__944;
let TMP_1239;
let TMP_1238;
let L_L__943;
let BLOCK_RESULT_NIL__942;
let F_COLLECT__937;
let TMP_1234;
let L_G598__936;
let L_G597__935;
let TMP_1233;
let TMP_1232;
let TMP_1231;
let L_A__933;
let TMP_1230;
let TMP_1229;
let L_G588__932;
let BLOCK_RESULT_NIL__931;
let BLOCK_RESULT_NIL__930;
let L_ACC__929;
let L_ARGLISTS__928;
let TMP_1228;
let TMP_1227;
let L_LISTS__926;
let L_LIST__925;
let L_FUNCTION__924;
L_FUNCTION__924=arguments[0];
L_LIST__925=arguments[1];
L_LISTS__926=lisp.jsArrayToList(arguments, 2);
{
TMP_1227=lisp.CL_cons(L_LIST__925,L_LISTS__926);
TMP_1228=G_828.func(TMP_1227);
L_ARGLISTS__928=lisp.values1(TMP_1228);
L_ACC__929=lisp.values1(lisp.S_nil);
BLOCK_NIL__930: for(;;){for(;;){
BLOCK_NIL__931: for(;;){{
L_G588__932=lisp.values1(L_ARGLISTS__928);
for(;;){
TMP_1229=G_853.func(L_G588__932);
if(lisp.values1(TMP_1229) !== lisp.S_nil){
}else{
{
TMP_1230=G_17.func(L_G588__932);
L_A__933=lisp.values1(TMP_1230);
TMP_1231=G_23.func(L_G588__932);
L_G588__932=lisp.values1(TMP_1231);
TMP_1232=G_8.func(L_A__933);
if(lisp.values1(TMP_1232) !== lisp.S_nil){
BLOCK_RESULT_NIL__931=lisp.values1(G_825);
break BLOCK_NIL__931;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__931=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
if(lisp.values1(BLOCK_RESULT_NIL__931) !== lisp.S_nil){
BLOCK_RESULT_NIL__930=lisp.values1(lisp.S_nil);
break BLOCK_NIL__930;
}else{
{
TMP_1233=G_19.func(lisp.S_nil);
L_G597__935=lisp.values1(TMP_1233);
L_G598__936=lisp.values1(L_G597__935);
{
TMP_1234=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1237;
let L_G601__941;
let TMP_1236;
let L_G_STORE600__940;
let TMP_1235;
let L_G599__939;
let L_X__938;
L_X__938=arguments[0];
{
L_G599__939=lisp.values1(L_G598__936);
TMP_1235=G_19.func(L_X__938);
L_G_STORE600__940=lisp.values1(TMP_1235);
lisp.callFunctionWithCallStack(G_53,L_G_STORE600__940,L_G599__939);
}
{
TMP_1236=G_23.func(L_G598__936);
L_G601__941=lisp.values1(TMP_1236);
L_G598__936=(TMP_1237=lisp.values1(L_G601__941));
}
return lisp.values1(TMP_1237);
});
F_COLLECT__937=lisp.values1(TMP_1234);
BLOCK_NIL__942: for(;;){{
L_L__943=lisp.values1(L_ARGLISTS__928);
for(;;){
TMP_1238=G_8.func(L_L__943);
if(lisp.values1(TMP_1238) !== lisp.S_nil){
BLOCK_RESULT_NIL__942=lisp.values1(lisp.S_nil);
break BLOCK_NIL__942;
}else{
TMP_1239=G_17.func(L_L__943);
F_COLLECT__937(TMP_1239);
{
L_G608__944=lisp.values1(L_L__943);
TMP_1240=G_74.func(L_L__943);
L_G_STORE609__945=lisp.values1(TMP_1240);
lisp.callFunctionWithCallStack(G_35,L_G_STORE609__945,L_G608__944);
}
{
TMP_1241=G_23.func(L_L__943);
L_G610__946=lisp.values1(TMP_1241);
L_L__943=lisp.values1(L_G610__946);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__942=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1242=G_23.func(L_G597__935);
}
TMP_1243=lisp.callFunctionWithCallStack(G_1125,L_FUNCTION__924,lisp.values1(lisp.values1(TMP_1242)));
TMP_1244=G_942.func(L_ACC__929,TMP_1243);
L_ACC__929=lisp.values1(TMP_1244);
continue;
}
break;
}
BLOCK_RESULT_NIL__930=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_ACC__929);
});
CL_COMMON_LISP_MAPCON=lisp.values1(F_MAPCON_1225);
let F_ACONS_1245;
F_ACONS_1245=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_1246, arguments.length);
}
let TMP_1248;
let TMP_1247;
let L_ALIST__949;
let L_VALUE__948;
let L_KEY__947;
L_KEY__947=arguments[0];
L_VALUE__948=arguments[1];
L_ALIST__949=arguments[2];
TMP_1247=lisp.CL_cons(L_KEY__947,L_VALUE__948);
TMP_1248=lisp.CL_cons(TMP_1247,L_ALIST__949);
return TMP_1248;
});
CL_COMMON_LISP_ACONS=lisp.values1(F_ACONS_1245);
let F_ASSOC_1249;
F_ASSOC_1249=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_653, arguments.length);
}
let L_G620__966;
let TMP_1265;
let TMP_1264;
let TMP_1263;
let TMP_1262;
let TMP_1261;
let L_ELT__965;
let TMP_1260;
let TMP_1259;
let L_REST__964;
let BLOCK_RESULT_NIL__963;
let L_CMP__962;
let TMP_1258;
let TMP_1257;
let TMP_1256;
let L_G612__960;
let TMP_1255;
let L_G611__959;
let TMP_1254;
let L_TEST_NOT_P__957;
let L_TEST_NOT__956;
let L_TESTP__955;
let L_TEST__954;
let L_KEY__953;
let L_ALIST__952;
let L_ITEM__951;
L_ITEM__951=arguments[0];
L_ALIST__952=arguments[1];
let supplied_KEY__953;
for (let TMP_1250 = 2; TMP_1250 < arguments.length; TMP_1250 += 2) {
if(arguments[TMP_1250] === G_637){
supplied_KEY__953=arguments[TMP_1250+1];
break;
}
}
L_KEY__953=supplied_KEY__953 !== undefined ? supplied_KEY__953 : (lisp.values1(lisp.S_nil));
let supplied_TEST__954;
for (let TMP_1251 = 2; TMP_1251 < arguments.length; TMP_1251 += 2) {
if(arguments[TMP_1251] === G_639){
supplied_TEST__954=arguments[TMP_1251+1];
break;
}
}
L_TEST__954=supplied_TEST__954 !== undefined ? supplied_TEST__954 : (lisp.values1(lisp.S_nil));
L_TESTP__955=(supplied_TEST__954 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__956;
for (let TMP_1252 = 2; TMP_1252 < arguments.length; TMP_1252 += 2) {
if(arguments[TMP_1252] === G_643){
supplied_TEST_NOT__956=arguments[TMP_1252+1];
break;
}
}
L_TEST_NOT__956=supplied_TEST_NOT__956 !== undefined ? supplied_TEST_NOT__956 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__957=(supplied_TEST_NOT__956 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1253 = 2; TMP_1253 < arguments.length; TMP_1253 += 2) {
if(arguments[TMP_1253]!==G_643 && arguments[TMP_1253]!==G_639 && arguments[TMP_1253]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1253].name); }
}
if(lisp.values1(L_TESTP__955) !== lisp.S_nil){
TMP_1254=lisp.values1(L_TEST_NOT_P__957);
}else{
TMP_1254=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1254) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
{
L_G611__959=lisp.values1(L_TESTP__955);
if(lisp.values1(L_G611__959) !== lisp.S_nil){
TMP_1255=lisp.values1(L_TEST__954);
}else{
{
L_G612__960=lisp.values1(L_TEST_NOT_P__957);
if(lisp.values1(L_G612__960) !== lisp.S_nil){
TMP_1257=lisp.callFunctionWithCallStack(G_753,L_TEST_NOT__956);
TMP_1256=lisp.values1(TMP_1257);
}else{
TMP_1258=lisp.CL_symbolFunction(G_641);
TMP_1256=lisp.values1(TMP_1258);
}
}
TMP_1255=lisp.values1(lisp.values1(TMP_1256));
}
}
L_CMP__962=lisp.values1(lisp.values1(TMP_1255));
BLOCK_NIL__963: for(;;){{
L_REST__964=lisp.values1(L_ALIST__952);
for(;;){
TMP_1259=G_8.func(L_REST__964);
if(lisp.values1(TMP_1259) !== lisp.S_nil){
BLOCK_RESULT_NIL__963=lisp.values1(lisp.S_nil);
break BLOCK_NIL__963;
}else{
{
TMP_1260=G_17.func(L_REST__964);
L_ELT__965=lisp.values1(TMP_1260);
if(lisp.values1(L_ELT__965) !== lisp.S_nil){
TMP_1262=G_17.func(L_ELT__965);
TMP_1263=G_631.func(L_KEY__953,TMP_1262);
TMP_1264=lisp.CL_funcall(lisp.values1(L_CMP__962),L_ITEM__951,TMP_1263);
TMP_1261=lisp.values1(TMP_1264);
}else{
TMP_1261=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1261) !== lisp.S_nil){
BLOCK_RESULT_NIL__963=lisp.values1(L_ELT__965);
break BLOCK_NIL__963;
}else{
}
}
{
TMP_1265=G_23.func(L_REST__964);
L_G620__966=lisp.values1(TMP_1265);
L_REST__964=lisp.values1(L_G620__966);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__963=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__963;
});
CL_COMMON_LISP_ASSOC=lisp.values1(F_ASSOC_1249);
let F_ASSOC_IF_1266;
F_ASSOC_IF_1266=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_1267, arguments.length);
}
let TMP_1276;
let TMP_1275;
let TMP_1274;
let TMP_1273;
let TMP_1272;
let L_ELT__973;
let TMP_1271;
let TMP_1270;
let L_G621__972;
let BLOCK_RESULT_NIL__971;
let L_KEY__969;
let L_ALIST__968;
let L_PREDICATE__967;
L_PREDICATE__967=arguments[0];
L_ALIST__968=arguments[1];
let supplied_KEY__969;
for (let TMP_1268 = 2; TMP_1268 < arguments.length; TMP_1268 += 2) {
if(arguments[TMP_1268] === G_637){
supplied_KEY__969=arguments[TMP_1268+1];
break;
}
}
L_KEY__969=supplied_KEY__969 !== undefined ? supplied_KEY__969 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1269 = 2; TMP_1269 < arguments.length; TMP_1269 += 2) {
if(arguments[TMP_1269]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1269].name); }
}
BLOCK_NIL__971: for(;;){{
L_G621__972=lisp.values1(L_ALIST__968);
for(;;){
TMP_1270=G_853.func(L_G621__972);
if(lisp.values1(TMP_1270) !== lisp.S_nil){
}else{
{
TMP_1271=G_17.func(L_G621__972);
L_ELT__973=lisp.values1(TMP_1271);
TMP_1272=G_23.func(L_G621__972);
L_G621__972=lisp.values1(TMP_1272);
if(lisp.values1(L_ELT__973) !== lisp.S_nil){
TMP_1274=G_17.func(L_ELT__973);
TMP_1275=G_631.func(L_KEY__969,TMP_1274);
TMP_1276=lisp.CL_funcall(lisp.values1(L_PREDICATE__967),TMP_1275);
TMP_1273=lisp.values1(TMP_1276);
}else{
TMP_1273=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1273) !== lisp.S_nil){
BLOCK_RESULT_NIL__971=lisp.values1(L_ELT__973);
break BLOCK_NIL__971;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__971=lisp.values1(lisp.S_nil);
break;
}
return BLOCK_RESULT_NIL__971;
});
CL_COMMON_LISP_ASSOC_IF=lisp.values1(F_ASSOC_IF_1266);
let F_ASSOC_IF_NOT_1277;
F_ASSOC_IF_NOT_1277=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_1278, arguments.length);
}
let TMP_1282;
let TMP_1281;
let L_KEY__977;
let L_ALIST__976;
let L_PREDICATE__975;
L_PREDICATE__975=arguments[0];
L_ALIST__976=arguments[1];
let supplied_KEY__977;
for (let TMP_1279 = 2; TMP_1279 < arguments.length; TMP_1279 += 2) {
if(arguments[TMP_1279] === G_637){
supplied_KEY__977=arguments[TMP_1279+1];
break;
}
}
L_KEY__977=supplied_KEY__977 !== undefined ? supplied_KEY__977 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1280 = 2; TMP_1280 < arguments.length; TMP_1280 += 2) {
if(arguments[TMP_1280]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1280].name); }
}
TMP_1281=lisp.callFunctionWithCallStack(G_753,L_PREDICATE__975);
TMP_1282=G_1267.func(TMP_1281,L_ALIST__976,G_637,L_KEY__977);
return TMP_1282;
});
CL_COMMON_LISP_ASSOC_IF_NOT=lisp.values1(F_ASSOC_IF_NOT_1277);
let F_COPY_ALIST_1283;
F_COPY_ALIST_1283=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1284, arguments.length);
}
let TMP_1295;
let TMP_1294;
let TMP_1293;
let TMP_1292;
let L_G635__987;
let TMP_1291;
let L_NEW_ELT__986;
let TMP_1290;
let TMP_1289;
let TMP_1288;
let TMP_1287;
let L_ELT__985;
let TMP_1286;
let TMP_1285;
let L_G628__984;
let L_TAIL__982;
let L_HEAD__981;
let L_ALIST__979;
L_ALIST__979=arguments[0];
{
L_HEAD__981=lisp.values1(lisp.S_nil);
L_TAIL__982=lisp.values1(lisp.S_nil);
{
L_G628__984=lisp.values1(L_ALIST__979);
for(;;){
TMP_1285=G_853.func(L_G628__984);
if(lisp.values1(TMP_1285) !== lisp.S_nil){
}else{
{
TMP_1286=G_17.func(L_G628__984);
L_ELT__985=lisp.values1(TMP_1286);
TMP_1287=G_23.func(L_G628__984);
L_G628__984=lisp.values1(TMP_1287);
{
TMP_1288=G_17.func(L_ELT__985);
TMP_1289=G_23.func(L_ELT__985);
TMP_1290=lisp.CL_cons(TMP_1288,TMP_1289);
L_NEW_ELT__986=lisp.values1(TMP_1290);
{
TMP_1291=G_8.func(L_TAIL__982);
L_G635__987=lisp.values1(TMP_1291);
if(lisp.values1(L_G635__987) !== lisp.S_nil){
TMP_1292=G_19.func(L_NEW_ELT__986);
L_TAIL__982=(TMP_1293=lisp.values1(TMP_1292));
L_HEAD__981=lisp.values1(TMP_1293);
}else{
TMP_1294=G_19.func(L_NEW_ELT__986);
G_32.func(L_TAIL__982,TMP_1294);
TMP_1295=G_23.func(L_TAIL__982);
L_TAIL__982=lisp.values1(TMP_1295);
}
}
}
}
continue;
}
break;
}
}
}
return lisp.values1(L_HEAD__981);
});
CL_COMMON_LISP_COPY_ALIST=lisp.values1(F_COPY_ALIST_1283);
let F_PAIRLIS_1296;
F_PAIRLIS_1296=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_1297, arguments.length);
}
let L_G646__1000;
let TMP_1309;
let L_G645__999;
let TMP_1308;
let TMP_1307;
let TMP_1306;
let TMP_1305;
let TMP_1304;
let TMP_1303;
let TMP_1302;
let TMP_1301;
let L_G642__998;
let TMP_1300;
let TMP_1299;
let L_G641__997;
let TMP_1298;
let L_DATA__996;
let L_KEYS__995;
let BLOCK_RESULT_NIL__994;
let L_ALIST__992;
let L_DATA__991;
let L_KEYS__990;
L_KEYS__990=arguments[0];
L_DATA__991=arguments[1];
L_ALIST__992=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
BLOCK_NIL__994: for(;;){{
L_KEYS__995=lisp.values1(L_KEYS__990);
L_DATA__996=lisp.values1(L_DATA__991);
for(;;){
{
TMP_1298=G_8.func(L_KEYS__995);
L_G641__997=lisp.values1(TMP_1298);
if(lisp.values1(L_G641__997) !== lisp.S_nil){
TMP_1299=lisp.values1(L_G641__997);
}else{
{
TMP_1300=G_8.func(L_DATA__996);
L_G642__998=lisp.values1(TMP_1300);
if(lisp.values1(L_G642__998) !== lisp.S_nil){
TMP_1301=lisp.values1(L_G642__998);
}else{
TMP_1301=lisp.values1(lisp.S_nil);
}
}
TMP_1299=lisp.values1(lisp.values1(TMP_1301));
}
}
if(lisp.values1(lisp.values1(TMP_1299)) !== lisp.S_nil){
TMP_1302=G_8.func(L_KEYS__995);
if(lisp.values1(TMP_1302) !== lisp.S_nil){
TMP_1304=G_8.func(L_DATA__996);
TMP_1303=lisp.values1(TMP_1304);
}else{
TMP_1303=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1303) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([84, 104, 101, 32, 108, 105, 115, 116, 115, 32, 111, 102, 32, 107, 101, 121, 115, 32, 97, 110, 100, 32, 100, 97, 116, 97, 32, 97, 114, 101, 32, 111, 102, 32, 117, 110, 101, 113, 117, 97, 108, 32, 108, 101, 110, 103, 116, 104, 46])));
}
BLOCK_RESULT_NIL__994=lisp.values1(L_ALIST__992);
break BLOCK_NIL__994;
}else{
TMP_1305=G_17.func(L_KEYS__995);
TMP_1306=G_17.func(L_DATA__996);
TMP_1307=G_1246.func(TMP_1305,TMP_1306,L_ALIST__992);
L_ALIST__992=lisp.values1(TMP_1307);
{
TMP_1308=G_23.func(L_KEYS__995);
L_G645__999=lisp.values1(TMP_1308);
TMP_1309=G_23.func(L_DATA__996);
L_G646__1000=lisp.values1(TMP_1309);
L_KEYS__995=lisp.values1(L_G645__999);
L_DATA__996=lisp.values1(L_G646__1000);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__994=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__994;
});
CL_COMMON_LISP_PAIRLIS=lisp.values1(F_PAIRLIS_1296);
let F_RASSOC_1310;
F_RASSOC_1310=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1311, arguments.length);
}
let L_G656__1016;
let TMP_1327;
let TMP_1326;
let TMP_1325;
let TMP_1324;
let TMP_1323;
let L_ELT__1015;
let TMP_1322;
let TMP_1321;
let L_REST__1014;
let BLOCK_RESULT_NIL__1013;
let L_CMP__1012;
let TMP_1320;
let TMP_1319;
let TMP_1318;
let L_G648__1010;
let TMP_1317;
let L_G647__1009;
let TMP_1316;
let L_TEST_NOT_P__1007;
let L_TEST_NOT__1006;
let L_TESTP__1005;
let L_TEST__1004;
let L_KEY__1003;
let L_ALIST__1002;
let L_ITEM__1001;
L_ITEM__1001=arguments[0];
L_ALIST__1002=arguments[1];
let supplied_KEY__1003;
for (let TMP_1312 = 2; TMP_1312 < arguments.length; TMP_1312 += 2) {
if(arguments[TMP_1312] === G_637){
supplied_KEY__1003=arguments[TMP_1312+1];
break;
}
}
L_KEY__1003=supplied_KEY__1003 !== undefined ? supplied_KEY__1003 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1004;
for (let TMP_1313 = 2; TMP_1313 < arguments.length; TMP_1313 += 2) {
if(arguments[TMP_1313] === G_639){
supplied_TEST__1004=arguments[TMP_1313+1];
break;
}
}
L_TEST__1004=supplied_TEST__1004 !== undefined ? supplied_TEST__1004 : (lisp.values1(lisp.S_nil));
L_TESTP__1005=(supplied_TEST__1004 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1006;
for (let TMP_1314 = 2; TMP_1314 < arguments.length; TMP_1314 += 2) {
if(arguments[TMP_1314] === G_643){
supplied_TEST_NOT__1006=arguments[TMP_1314+1];
break;
}
}
L_TEST_NOT__1006=supplied_TEST_NOT__1006 !== undefined ? supplied_TEST_NOT__1006 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1007=(supplied_TEST_NOT__1006 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1315 = 2; TMP_1315 < arguments.length; TMP_1315 += 2) {
if(arguments[TMP_1315]!==G_643 && arguments[TMP_1315]!==G_639 && arguments[TMP_1315]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1315].name); }
}
if(lisp.values1(L_TESTP__1005) !== lisp.S_nil){
TMP_1316=lisp.values1(L_TEST_NOT_P__1007);
}else{
TMP_1316=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1316) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
{
L_G647__1009=lisp.values1(L_TESTP__1005);
if(lisp.values1(L_G647__1009) !== lisp.S_nil){
TMP_1317=lisp.values1(L_TEST__1004);
}else{
{
L_G648__1010=lisp.values1(L_TEST_NOT_P__1007);
if(lisp.values1(L_G648__1010) !== lisp.S_nil){
TMP_1319=lisp.callFunctionWithCallStack(G_753,L_TEST_NOT__1006);
TMP_1318=lisp.values1(TMP_1319);
}else{
TMP_1320=lisp.CL_symbolFunction(G_641);
TMP_1318=lisp.values1(TMP_1320);
}
}
TMP_1317=lisp.values1(lisp.values1(TMP_1318));
}
}
L_CMP__1012=lisp.values1(lisp.values1(TMP_1317));
BLOCK_NIL__1013: for(;;){{
L_REST__1014=lisp.values1(L_ALIST__1002);
for(;;){
TMP_1321=G_8.func(L_REST__1014);
if(lisp.values1(TMP_1321) !== lisp.S_nil){
BLOCK_RESULT_NIL__1013=lisp.values1(lisp.S_nil);
break BLOCK_NIL__1013;
}else{
{
TMP_1322=G_17.func(L_REST__1014);
L_ELT__1015=lisp.values1(TMP_1322);
if(lisp.values1(L_ELT__1015) !== lisp.S_nil){
TMP_1324=G_23.func(L_ELT__1015);
TMP_1325=G_631.func(L_KEY__1003,TMP_1324);
TMP_1326=lisp.CL_funcall(lisp.values1(L_CMP__1012),L_ITEM__1001,TMP_1325);
TMP_1323=lisp.values1(TMP_1326);
}else{
TMP_1323=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1323) !== lisp.S_nil){
BLOCK_RESULT_NIL__1013=lisp.values1(L_ELT__1015);
break BLOCK_NIL__1013;
}else{
}
}
{
TMP_1327=G_23.func(L_REST__1014);
L_G656__1016=lisp.values1(TMP_1327);
L_REST__1014=lisp.values1(L_G656__1016);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__1013=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__1013;
});
CL_COMMON_LISP_RASSOC=lisp.values1(F_RASSOC_1310);
let F_RASSOC_IF_1328;
F_RASSOC_IF_1328=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_1329, arguments.length);
}
let TMP_1338;
let TMP_1337;
let TMP_1336;
let TMP_1335;
let TMP_1334;
let L_ELT__1023;
let TMP_1333;
let TMP_1332;
let L_G657__1022;
let BLOCK_RESULT_NIL__1021;
let L_KEY__1019;
let L_ALIST__1018;
let L_PREDICATE__1017;
L_PREDICATE__1017=arguments[0];
L_ALIST__1018=arguments[1];
let supplied_KEY__1019;
for (let TMP_1330 = 2; TMP_1330 < arguments.length; TMP_1330 += 2) {
if(arguments[TMP_1330] === G_637){
supplied_KEY__1019=arguments[TMP_1330+1];
break;
}
}
L_KEY__1019=supplied_KEY__1019 !== undefined ? supplied_KEY__1019 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1331 = 2; TMP_1331 < arguments.length; TMP_1331 += 2) {
if(arguments[TMP_1331]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1331].name); }
}
BLOCK_NIL__1021: for(;;){{
L_G657__1022=lisp.values1(L_ALIST__1018);
for(;;){
TMP_1332=G_853.func(L_G657__1022);
if(lisp.values1(TMP_1332) !== lisp.S_nil){
}else{
{
TMP_1333=G_17.func(L_G657__1022);
L_ELT__1023=lisp.values1(TMP_1333);
TMP_1334=G_23.func(L_G657__1022);
L_G657__1022=lisp.values1(TMP_1334);
if(lisp.values1(L_ELT__1023) !== lisp.S_nil){
TMP_1336=G_23.func(L_ELT__1023);
TMP_1337=G_631.func(L_KEY__1019,TMP_1336);
TMP_1338=lisp.CL_funcall(lisp.values1(L_PREDICATE__1017),TMP_1337);
TMP_1335=lisp.values1(TMP_1338);
}else{
TMP_1335=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1335) !== lisp.S_nil){
BLOCK_RESULT_NIL__1021=lisp.values1(L_ELT__1023);
break BLOCK_NIL__1021;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__1021=lisp.values1(lisp.S_nil);
break;
}
return BLOCK_RESULT_NIL__1021;
});
CL_COMMON_LISP_RASSOC_IF=lisp.values1(F_RASSOC_IF_1328);
let F_RASSOC_IF_NOT_1339;
F_RASSOC_IF_NOT_1339=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_1340, arguments.length);
}
let TMP_1344;
let TMP_1343;
let L_KEY__1027;
let L_ALIST__1026;
let L_PREDICATE__1025;
L_PREDICATE__1025=arguments[0];
L_ALIST__1026=arguments[1];
let supplied_KEY__1027;
for (let TMP_1341 = 2; TMP_1341 < arguments.length; TMP_1341 += 2) {
if(arguments[TMP_1341] === G_637){
supplied_KEY__1027=arguments[TMP_1341+1];
break;
}
}
L_KEY__1027=supplied_KEY__1027 !== undefined ? supplied_KEY__1027 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1342 = 2; TMP_1342 < arguments.length; TMP_1342 += 2) {
if(arguments[TMP_1342]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1342].name); }
}
TMP_1343=lisp.callFunctionWithCallStack(G_753,L_PREDICATE__1025);
TMP_1344=G_1329.func(TMP_1343,L_ALIST__1026,G_637,L_KEY__1027);
return TMP_1344;
});
CL_COMMON_LISP_RASSOC_IF_NOT=lisp.values1(F_RASSOC_IF_NOT_1339);
let F_GET_PROPERTIES_1345;
F_GET_PROPERTIES_1345=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1346, arguments.length);
}
let L_G670__1034;
let TMP_1354;
let TMP_1353;
let TMP_1352;
let TMP_1351;
let TMP_1350;
let TMP_1349;
let TMP_1348;
let TMP_1347;
let L_PLIST__1033;
let BLOCK_RESULT_NIL__1032;
let L_INDICATOR_LIST__1030;
let L_PLIST__1029;
L_PLIST__1029=arguments[0];
L_INDICATOR_LIST__1030=arguments[1];
BLOCK_NIL__1032: for(;;){{
L_PLIST__1033=lisp.values1(L_PLIST__1029);
for(;;){
TMP_1347=G_853.func(L_PLIST__1033);
if(lisp.values1(TMP_1347) !== lisp.S_nil){
TMP_1348=lisp.CL_values(lisp.S_nil,lisp.S_nil,lisp.S_nil);
BLOCK_RESULT_NIL__1032=TMP_1348;
break BLOCK_NIL__1032;
}else{
TMP_1349=G_17.func(L_PLIST__1033);
TMP_1350=G_1082.func(TMP_1349,L_INDICATOR_LIST__1030);
if(lisp.values1(TMP_1350) !== lisp.S_nil){
TMP_1351=G_17.func(L_PLIST__1033);
TMP_1352=G_70.func(L_PLIST__1033);
TMP_1353=lisp.CL_values(TMP_1351,TMP_1352,L_PLIST__1033);
BLOCK_RESULT_NIL__1032=TMP_1353;
break BLOCK_NIL__1032;
}else{
}
{
TMP_1354=G_78.func(L_PLIST__1033);
L_G670__1034=lisp.values1(TMP_1354);
L_PLIST__1033=lisp.values1(L_G670__1034);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__1032=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__1032;
});
CL_COMMON_LISP_GET_PROPERTIES=lisp.values1(F_GET_PROPERTIES_1345);
let F_GETF_1355;
F_GETF_1355=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_1356, arguments.length);
}
let L_G677__1041;
let TMP_1361;
let TMP_1360;
let TMP_1359;
let TMP_1358;
let TMP_1357;
let L_LIST__1040;
let BLOCK_RESULT_NIL__1039;
let L_DEFAULT__1037;
let L_INDICATOR__1036;
let L_PLACE__1035;
L_PLACE__1035=arguments[0];
L_INDICATOR__1036=arguments[1];
L_DEFAULT__1037=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
BLOCK_NIL__1039: for(;;){{
L_LIST__1040=lisp.values1(L_PLACE__1035);
for(;;){
TMP_1357=G_8.func(L_LIST__1040);
if(lisp.values1(TMP_1357) !== lisp.S_nil){
BLOCK_RESULT_NIL__1039=lisp.values1(L_DEFAULT__1037);
break BLOCK_NIL__1039;
}else{
TMP_1358=G_17.func(L_LIST__1040);
TMP_1359=lisp.CL_eq(L_INDICATOR__1036,TMP_1358);
if(lisp.values1(TMP_1359) !== lisp.S_nil){
TMP_1360=G_70.func(L_LIST__1040);
BLOCK_RESULT_NIL__1039=TMP_1360;
break BLOCK_NIL__1039;
}else{
}
{
TMP_1361=G_78.func(L_LIST__1040);
L_G677__1041=lisp.values1(TMP_1361);
L_LIST__1040=lisp.values1(L_G677__1041);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__1039=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__1039;
});
CL_COMMON_LISP_GETF=lisp.values1(F_GETF_1355);
let F_PERCENTPUTF_1362;
F_PERCENTPUTF_1362=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_1363, arguments.length);
}
let L_G686__1050;
let TMP_1368;
let L_G_STORE685__1049;
let L_G684__1048;
let TMP_1367;
let TMP_1366;
let TMP_1365;
let TMP_1364;
let L_PLISTSTAR__1047;
let BLOCK_RESULT_NIL__1046;
let L_INDICATOR__1044;
let L_NEW_VALUE__1043;
let L_PLIST__1042;
L_PLIST__1042=arguments[0];
L_NEW_VALUE__1043=arguments[1];
L_INDICATOR__1044=arguments[2];
BLOCK_NIL__1046: for(;;){{
L_PLISTSTAR__1047=lisp.values1(L_PLIST__1042);
for(;;){
TMP_1364=G_853.func(L_PLISTSTAR__1047);
if(lisp.values1(TMP_1364) !== lisp.S_nil){
TMP_1365=G_48.func(L_INDICATOR__1044,L_NEW_VALUE__1043,L_PLIST__1042);
BLOCK_RESULT_NIL__1046=TMP_1365;
break BLOCK_NIL__1046;
}else{
TMP_1366=G_17.func(L_PLISTSTAR__1047);
TMP_1367=lisp.CL_eq(TMP_1366,L_INDICATOR__1044);
if(lisp.values1(TMP_1367) !== lisp.S_nil){
{
L_G684__1048=lisp.values1(L_PLISTSTAR__1047);
L_G_STORE685__1049=lisp.values1(L_NEW_VALUE__1043);
lisp.callFunctionWithCallStack(G_230,L_G_STORE685__1049,L_G684__1048);
}
BLOCK_RESULT_NIL__1046=lisp.values1(L_PLIST__1042);
break BLOCK_NIL__1046;
}else{
}
{
TMP_1368=G_78.func(L_PLISTSTAR__1047);
L_G686__1050=lisp.values1(TMP_1368);
L_PLISTSTAR__1047=lisp.values1(L_G686__1050);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__1046=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__1046;
});
CL_COMMON_LISP_PERCENTPUTF=lisp.values1(F_PERCENTPUTF_1362);
let F_PERCENTREMF_1396;
F_PERCENTREMF_1396=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1397, arguments.length);
}
let L_G703__1077;
let TMP_1407;
let L_G702__1076;
let TMP_1406;
let L_G_STORE701__1075;
let TMP_1405;
let L_G700__1074;
let TMP_1404;
let TMP_1403;
let TMP_1402;
let TMP_1401;
let TMP_1400;
let TMP_1399;
let TMP_1398;
let L_PLISTSTAR__1073;
let L_PREV__1072;
let BLOCK_RESULT_NIL__1071;
let L_INDICATOR__1069;
let L_PLIST__1068;
L_PLIST__1068=arguments[0];
L_INDICATOR__1069=arguments[1];
BLOCK_NIL__1071: for(;;){{
L_PREV__1072=lisp.values1(lisp.S_nil);
L_PLISTSTAR__1073=lisp.values1(L_PLIST__1068);
for(;;){
TMP_1398=G_853.func(L_PLISTSTAR__1073);
if(lisp.values1(TMP_1398) !== lisp.S_nil){
TMP_1399=lisp.CL_values(L_PLIST__1068,lisp.S_nil);
BLOCK_RESULT_NIL__1071=TMP_1399;
break BLOCK_NIL__1071;
}else{
TMP_1400=G_17.func(L_PLISTSTAR__1073);
TMP_1401=lisp.CL_eq(L_INDICATOR__1069,TMP_1400);
if(lisp.values1(TMP_1401) !== lisp.S_nil){
TMP_1402=G_8.func(L_PREV__1072);
if(lisp.values1(TMP_1402) !== lisp.S_nil){
TMP_1404=G_78.func(L_PLIST__1068);
TMP_1403=lisp.values1(TMP_1404);
}else{
{
L_G700__1074=lisp.values1(L_PREV__1072);
TMP_1405=G_78.func(L_PLISTSTAR__1073);
L_G_STORE701__1075=lisp.values1(TMP_1405);
lisp.callFunctionWithCallStack(G_256,L_G_STORE701__1075,L_G700__1074);
}
TMP_1403=lisp.values1(lisp.values1(L_PLIST__1068));
}
TMP_1406=lisp.CL_values(TMP_1403,G_825);
BLOCK_RESULT_NIL__1071=TMP_1406;
break BLOCK_NIL__1071;
}else{
}
{
L_G702__1076=lisp.values1(L_PLISTSTAR__1073);
TMP_1407=G_78.func(L_PLISTSTAR__1073);
L_G703__1077=lisp.values1(TMP_1407);
L_PREV__1072=lisp.values1(L_G702__1076);
L_PLISTSTAR__1073=lisp.values1(L_G703__1077);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__1071=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__1071;
});
CL_COMMON_LISP_PERCENTREMF=lisp.values1(F_PERCENTREMF_1396);
let F_MEMBER_AUX_1409;
F_MEMBER_AUX_1409=(function(){
if(arguments.length !== 7) {
lisp.argumentsError(G_1410, arguments.length);
}
let TMP_1416;
let TMP_1415;
let TMP_1414;
let L_G706__1087;
let TMP_1413;
let TMP_1412;
let L_G705__1086;
let TMP_1411;
let L_TEST_NOT_P__1084;
let L_TEST_NOT__1083;
let L_TESTP__1082;
let L_TEST__1081;
let L_KEY__1080;
let L_LIST__1079;
let L_X__1078;
L_X__1078=arguments[0];
L_LIST__1079=arguments[1];
L_KEY__1080=arguments[2];
L_TEST__1081=arguments[3];
L_TESTP__1082=arguments[4];
L_TEST_NOT__1083=arguments[5];
L_TEST_NOT_P__1084=arguments[6];
TMP_1411=G_631.func(L_KEY__1080,L_X__1078);
L_X__1078=lisp.values1(TMP_1411);
{
L_G705__1086=lisp.values1(L_TESTP__1082);
if(lisp.values1(L_G705__1086) !== lisp.S_nil){
TMP_1413=G_1082.func(L_X__1078,L_LIST__1079,G_637,L_KEY__1080,G_639,L_TEST__1081);
TMP_1412=TMP_1413;
}else{
{
L_G706__1087=lisp.values1(L_TEST_NOT_P__1084);
if(lisp.values1(L_G706__1087) !== lisp.S_nil){
TMP_1415=G_1082.func(L_X__1078,L_LIST__1079,G_637,L_KEY__1080,G_643,L_TEST_NOT__1083);
TMP_1414=TMP_1415;
}else{
TMP_1416=G_1082.func(L_X__1078,L_LIST__1079,G_637,L_KEY__1080);
TMP_1414=TMP_1416;
}
}
TMP_1412=TMP_1414;
}
}
return TMP_1412;
});
CL_COMMON_LISP_MEMBER_AUX=lisp.values1(F_MEMBER_AUX_1409);
let F_INTERSECTION_1417;
F_INTERSECTION_1417=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1418, arguments.length);
}
let L_G715__1101;
let TMP_1428;
let TMP_1427;
let TMP_1426;
let L_X__1100;
let TMP_1425;
let TMP_1424;
let L_G708__1099;
let L_ACC__1097;
let TMP_1423;
let L_TEST_NOT_P__1095;
let L_TEST_NOT__1094;
let L_TESTP__1093;
let L_TEST__1092;
let L_KEY__1091;
let L_LIST_2__1090;
let L_LIST_1__1089;
L_LIST_1__1089=arguments[0];
L_LIST_2__1090=arguments[1];
let supplied_KEY__1091;
for (let TMP_1419 = 2; TMP_1419 < arguments.length; TMP_1419 += 2) {
if(arguments[TMP_1419] === G_637){
supplied_KEY__1091=arguments[TMP_1419+1];
break;
}
}
L_KEY__1091=supplied_KEY__1091 !== undefined ? supplied_KEY__1091 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1092;
for (let TMP_1420 = 2; TMP_1420 < arguments.length; TMP_1420 += 2) {
if(arguments[TMP_1420] === G_639){
supplied_TEST__1092=arguments[TMP_1420+1];
break;
}
}
L_TEST__1092=supplied_TEST__1092 !== undefined ? supplied_TEST__1092 : (lisp.values1(lisp.S_nil));
L_TESTP__1093=(supplied_TEST__1092 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1094;
for (let TMP_1421 = 2; TMP_1421 < arguments.length; TMP_1421 += 2) {
if(arguments[TMP_1421] === G_643){
supplied_TEST_NOT__1094=arguments[TMP_1421+1];
break;
}
}
L_TEST_NOT__1094=supplied_TEST_NOT__1094 !== undefined ? supplied_TEST_NOT__1094 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1095=(supplied_TEST_NOT__1094 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1422 = 2; TMP_1422 < arguments.length; TMP_1422 += 2) {
if(arguments[TMP_1422]!==G_643 && arguments[TMP_1422]!==G_639 && arguments[TMP_1422]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1422].name); }
}
if(lisp.values1(L_TESTP__1093) !== lisp.S_nil){
TMP_1423=lisp.values1(L_TEST_NOT_P__1095);
}else{
TMP_1423=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1423) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
L_ACC__1097=lisp.values1(lisp.S_nil);
{
L_G708__1099=lisp.values1(L_LIST_1__1089);
for(;;){
TMP_1424=G_853.func(L_G708__1099);
if(lisp.values1(TMP_1424) !== lisp.S_nil){
}else{
{
TMP_1425=G_17.func(L_G708__1099);
L_X__1100=lisp.values1(TMP_1425);
TMP_1426=G_23.func(L_G708__1099);
L_G708__1099=lisp.values1(TMP_1426);
TMP_1427=G_1410.func(L_X__1100,L_LIST_2__1090,L_KEY__1091,L_TEST__1092,L_TESTP__1093,L_TEST_NOT__1094,L_TEST_NOT_P__1095);
if(lisp.values1(TMP_1427) !== lisp.S_nil){
{
TMP_1428=lisp.CL_cons(L_X__1100,L_ACC__1097);
L_G715__1101=lisp.values1(TMP_1428);
L_ACC__1097=lisp.values1(L_G715__1101);
}
}else{
}
}
continue;
}
break;
}
}
}
return lisp.values1(L_ACC__1097);
});
CL_COMMON_LISP_INTERSECTION=lisp.values1(F_INTERSECTION_1417);
let F_NINTERSECTION_1429;
F_NINTERSECTION_1429=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1430, arguments.length);
}
let TMP_1442;
let L_NEW__1118;
let L_NEW__1117;
let L_NEW__1116;
let TMP_1441;
let L_OUT__1115;
let L_LIST__1114;
let TMP_1440;
let TMP_1439;
let TMP_1438;
let BLOCK_RESULT_NIL__1113;
let L_LIST_1__1112;
let L_RESULT__1111;
let TMP_1437;
let TMP_1436;
let TMP_1435;
let L_TEST_NOT_P__1109;
let L_TEST_NOT__1108;
let L_TESTP__1107;
let L_TEST__1106;
let L_KEY__1105;
let L_LIST_2__1104;
let L_LIST_1__1103;
L_LIST_1__1103=arguments[0];
L_LIST_2__1104=arguments[1];
let supplied_KEY__1105;
for (let TMP_1431 = 2; TMP_1431 < arguments.length; TMP_1431 += 2) {
if(arguments[TMP_1431] === G_637){
supplied_KEY__1105=arguments[TMP_1431+1];
break;
}
}
L_KEY__1105=supplied_KEY__1105 !== undefined ? supplied_KEY__1105 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1106;
for (let TMP_1432 = 2; TMP_1432 < arguments.length; TMP_1432 += 2) {
if(arguments[TMP_1432] === G_639){
supplied_TEST__1106=arguments[TMP_1432+1];
break;
}
}
L_TEST__1106=supplied_TEST__1106 !== undefined ? supplied_TEST__1106 : (lisp.values1(lisp.S_nil));
L_TESTP__1107=(supplied_TEST__1106 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1108;
for (let TMP_1433 = 2; TMP_1433 < arguments.length; TMP_1433 += 2) {
if(arguments[TMP_1433] === G_643){
supplied_TEST_NOT__1108=arguments[TMP_1433+1];
break;
}
}
L_TEST_NOT__1108=supplied_TEST_NOT__1108 !== undefined ? supplied_TEST_NOT__1108 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1109=(supplied_TEST_NOT__1108 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1434 = 2; TMP_1434 < arguments.length; TMP_1434 += 2) {
if(arguments[TMP_1434]!==G_643 && arguments[TMP_1434]!==G_639 && arguments[TMP_1434]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1434].name); }
}
if(lisp.values1(L_TESTP__1107) !== lisp.S_nil){
TMP_1435=lisp.values1(L_TEST_NOT_P__1109);
}else{
TMP_1435=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1435) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
if(lisp.values1(L_LIST_1__1103) !== lisp.S_nil){
TMP_1436=lisp.values1(L_LIST_2__1104);
}else{
TMP_1436=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1436) !== lisp.S_nil){
{
L_RESULT__1111=lisp.values1(lisp.S_nil);
L_LIST_1__1112=lisp.values1(L_LIST_1__1103);
BLOCK_NIL__1113: for(;;){for(;;){
TMP_1438=G_853.func(L_LIST_1__1112);
if(lisp.values1(TMP_1438) !== lisp.S_nil){
BLOCK_RESULT_NIL__1113=lisp.values1(lisp.S_nil);
break BLOCK_NIL__1113;
}else{
TMP_1439=G_17.func(L_LIST_1__1112);
TMP_1440=G_1410.func(TMP_1439,L_LIST_2__1104,L_KEY__1105,L_TEST__1106,L_TESTP__1107,L_TEST_NOT__1108,L_TEST_NOT_P__1109);
if(lisp.values1(TMP_1440) !== lisp.S_nil){
{
L_LIST__1114=lisp.values1(L_LIST_1__1112);
L_OUT__1115=lisp.values1(L_LIST_1__1112);
TMP_1441=G_23.func(L_LIST__1114);
L_NEW__1116=lisp.values1(TMP_1441);
L_NEW__1117=lisp.values1(L_RESULT__1111);
L_NEW__1118=lisp.values1(L_LIST_1__1112);
L_LIST_1__1112=lisp.values1(L_NEW__1116);
G_32.func(L_LIST__1114,L_NEW__1117);
L_RESULT__1111=lisp.values1(L_NEW__1118);
lisp.CL_values(L_OUT__1115);
}
}else{
TMP_1442=G_23.func(L_LIST_1__1112);
L_LIST_1__1112=lisp.values1(TMP_1442);
}
continue;
}
break;
}
BLOCK_RESULT_NIL__1113=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1437=lisp.values1(L_RESULT__1111);
}else{
TMP_1437=lisp.values1(lisp.S_nil);
}
return TMP_1437;
});
CL_COMMON_LISP_NINTERSECTION=lisp.values1(F_NINTERSECTION_1429);
let F_ADJOIN_1443;
F_ADJOIN_1443=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1444, arguments.length);
}
let TMP_1456;
let TMP_1455;
let TMP_1454;
let TMP_1453;
let TMP_1452;
let TMP_1451;
let TMP_1450;
let TMP_1449;
let L_TEST_NOT_P__1126;
let L_TEST_NOT__1125;
let L_TESTP__1124;
let L_TEST__1123;
let L_KEY_P__1122;
let L_KEY__1121;
let L_LIST__1120;
let L_ITEM__1119;
L_ITEM__1119=arguments[0];
L_LIST__1120=arguments[1];
let supplied_KEY__1121;
for (let TMP_1445 = 2; TMP_1445 < arguments.length; TMP_1445 += 2) {
if(arguments[TMP_1445] === G_637){
supplied_KEY__1121=arguments[TMP_1445+1];
break;
}
}
L_KEY__1121=supplied_KEY__1121 !== undefined ? supplied_KEY__1121 : (lisp.values1(lisp.S_nil));
L_KEY_P__1122=(supplied_KEY__1121 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST__1123;
for (let TMP_1446 = 2; TMP_1446 < arguments.length; TMP_1446 += 2) {
if(arguments[TMP_1446] === G_639){
supplied_TEST__1123=arguments[TMP_1446+1];
break;
}
}
L_TEST__1123=supplied_TEST__1123 !== undefined ? supplied_TEST__1123 : (lisp.values1(lisp.S_nil));
L_TESTP__1124=(supplied_TEST__1123 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1125;
for (let TMP_1447 = 2; TMP_1447 < arguments.length; TMP_1447 += 2) {
if(arguments[TMP_1447] === G_643){
supplied_TEST_NOT__1125=arguments[TMP_1447+1];
break;
}
}
L_TEST_NOT__1125=supplied_TEST_NOT__1125 !== undefined ? supplied_TEST_NOT__1125 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1126=(supplied_TEST_NOT__1125 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1448 = 2; TMP_1448 < arguments.length; TMP_1448 += 2) {
if(arguments[TMP_1448]!==G_643 && arguments[TMP_1448]!==G_639 && arguments[TMP_1448]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1448].name); }
}
if(lisp.values1(L_TESTP__1124) !== lisp.S_nil){
TMP_1449=lisp.values1(L_TEST_NOT_P__1126);
}else{
TMP_1449=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1449) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
if(lisp.values1(L_KEY_P__1122) !== lisp.S_nil){
TMP_1451=G_631.func(L_KEY__1121,L_ITEM__1119);
TMP_1450=lisp.values1(TMP_1451);
}else{
TMP_1450=lisp.values1(L_ITEM__1119);
}
TMP_1452=lisp.CL_symbolFunction(G_1087);
TMP_1453=lisp.CL_symbolFunction(G_1087);
TMP_1454=G_1069.func(TMP_1450,L_LIST__1120,L_KEY__1121,L_KEY_P__1122,L_TEST__1123,L_TESTP__1124,L_TEST_NOT__1125,L_TEST_NOT_P__1126,TMP_1452,TMP_1453);
if(lisp.values1(TMP_1454) !== lisp.S_nil){
TMP_1455=lisp.values1(L_LIST__1120);
}else{
TMP_1456=lisp.CL_cons(L_ITEM__1119,L_LIST__1120);
TMP_1455=TMP_1456;
}
return TMP_1455;
});
CL_COMMON_LISP_ADJOIN=lisp.values1(F_ADJOIN_1443);
let F_SET_DIFFERENCE_1458;
F_SET_DIFFERENCE_1458=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1459, arguments.length);
}
let L_G730__1140;
let TMP_1469;
let TMP_1468;
let TMP_1467;
let L_X__1139;
let TMP_1466;
let TMP_1465;
let L_G723__1138;
let L_ACC__1136;
let TMP_1464;
let L_TEST_NOT_P__1134;
let L_TEST_NOT__1133;
let L_TESTP__1132;
let L_TEST__1131;
let L_KEY__1130;
let L_LIST_2__1129;
let L_LIST_1__1128;
L_LIST_1__1128=arguments[0];
L_LIST_2__1129=arguments[1];
let supplied_KEY__1130;
for (let TMP_1460 = 2; TMP_1460 < arguments.length; TMP_1460 += 2) {
if(arguments[TMP_1460] === G_637){
supplied_KEY__1130=arguments[TMP_1460+1];
break;
}
}
L_KEY__1130=supplied_KEY__1130 !== undefined ? supplied_KEY__1130 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1131;
for (let TMP_1461 = 2; TMP_1461 < arguments.length; TMP_1461 += 2) {
if(arguments[TMP_1461] === G_639){
supplied_TEST__1131=arguments[TMP_1461+1];
break;
}
}
L_TEST__1131=supplied_TEST__1131 !== undefined ? supplied_TEST__1131 : (lisp.values1(lisp.S_nil));
L_TESTP__1132=(supplied_TEST__1131 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1133;
for (let TMP_1462 = 2; TMP_1462 < arguments.length; TMP_1462 += 2) {
if(arguments[TMP_1462] === G_643){
supplied_TEST_NOT__1133=arguments[TMP_1462+1];
break;
}
}
L_TEST_NOT__1133=supplied_TEST_NOT__1133 !== undefined ? supplied_TEST_NOT__1133 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1134=(supplied_TEST_NOT__1133 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1463 = 2; TMP_1463 < arguments.length; TMP_1463 += 2) {
if(arguments[TMP_1463]!==G_643 && arguments[TMP_1463]!==G_639 && arguments[TMP_1463]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1463].name); }
}
if(lisp.values1(L_TESTP__1132) !== lisp.S_nil){
TMP_1464=lisp.values1(L_TEST_NOT_P__1134);
}else{
TMP_1464=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1464) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
L_ACC__1136=lisp.values1(lisp.S_nil);
{
L_G723__1138=lisp.values1(L_LIST_1__1128);
for(;;){
TMP_1465=G_853.func(L_G723__1138);
if(lisp.values1(TMP_1465) !== lisp.S_nil){
}else{
{
TMP_1466=G_17.func(L_G723__1138);
L_X__1139=lisp.values1(TMP_1466);
TMP_1467=G_23.func(L_G723__1138);
L_G723__1138=lisp.values1(TMP_1467);
TMP_1468=G_1410.func(L_X__1139,L_LIST_2__1129,L_KEY__1130,L_TEST__1131,L_TESTP__1132,L_TEST_NOT__1133,L_TEST_NOT_P__1134);
if(lisp.values1(TMP_1468) !== lisp.S_nil){
}else{
{
TMP_1469=lisp.CL_cons(L_X__1139,L_ACC__1136);
L_G730__1140=lisp.values1(TMP_1469);
L_ACC__1136=lisp.values1(L_G730__1140);
}
}
}
continue;
}
break;
}
}
}
return lisp.values1(L_ACC__1136);
});
CL_COMMON_LISP_SET_DIFFERENCE=lisp.values1(F_SET_DIFFERENCE_1458);
let F_NSET_DIFFERENCE_1470;
F_NSET_DIFFERENCE_1470=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1471, arguments.length);
}
let L_NEW__1157;
let L_NEW__1156;
let L_NEW__1155;
let TMP_1481;
let L_OUT__1154;
let L_LIST__1153;
let TMP_1480;
let TMP_1479;
let TMP_1478;
let TMP_1477;
let BLOCK_RESULT_NIL__1152;
let L_LIST_1__1151;
let L_RESULT__1150;
let TMP_1476;
let L_TEST_NOT_P__1148;
let L_TEST_NOT__1147;
let L_TESTP__1146;
let L_TEST__1145;
let L_KEY__1144;
let L_LIST_2__1143;
let L_LIST_1__1142;
L_LIST_1__1142=arguments[0];
L_LIST_2__1143=arguments[1];
let supplied_KEY__1144;
for (let TMP_1472 = 2; TMP_1472 < arguments.length; TMP_1472 += 2) {
if(arguments[TMP_1472] === G_637){
supplied_KEY__1144=arguments[TMP_1472+1];
break;
}
}
L_KEY__1144=supplied_KEY__1144 !== undefined ? supplied_KEY__1144 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1145;
for (let TMP_1473 = 2; TMP_1473 < arguments.length; TMP_1473 += 2) {
if(arguments[TMP_1473] === G_639){
supplied_TEST__1145=arguments[TMP_1473+1];
break;
}
}
L_TEST__1145=supplied_TEST__1145 !== undefined ? supplied_TEST__1145 : (lisp.values1(lisp.S_nil));
L_TESTP__1146=(supplied_TEST__1145 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1147;
for (let TMP_1474 = 2; TMP_1474 < arguments.length; TMP_1474 += 2) {
if(arguments[TMP_1474] === G_643){
supplied_TEST_NOT__1147=arguments[TMP_1474+1];
break;
}
}
L_TEST_NOT__1147=supplied_TEST_NOT__1147 !== undefined ? supplied_TEST_NOT__1147 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1148=(supplied_TEST_NOT__1147 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1475 = 2; TMP_1475 < arguments.length; TMP_1475 += 2) {
if(arguments[TMP_1475]!==G_643 && arguments[TMP_1475]!==G_639 && arguments[TMP_1475]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1475].name); }
}
if(lisp.values1(L_TESTP__1146) !== lisp.S_nil){
TMP_1476=lisp.values1(L_TEST_NOT_P__1148);
}else{
TMP_1476=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1476) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
L_RESULT__1150=lisp.values1(lisp.S_nil);
L_LIST_1__1151=lisp.values1(L_LIST_1__1142);
BLOCK_NIL__1152: for(;;){for(;;){
TMP_1477=G_853.func(L_LIST_1__1151);
if(lisp.values1(TMP_1477) !== lisp.S_nil){
BLOCK_RESULT_NIL__1152=lisp.values1(lisp.S_nil);
break BLOCK_NIL__1152;
}else{
TMP_1478=G_17.func(L_LIST_1__1151);
TMP_1479=G_1410.func(TMP_1478,L_LIST_2__1143,L_KEY__1144,L_TEST__1145,L_TESTP__1146,L_TEST_NOT__1147,L_TEST_NOT_P__1148);
if(lisp.values1(TMP_1479) !== lisp.S_nil){
TMP_1480=G_23.func(L_LIST_1__1151);
L_LIST_1__1151=lisp.values1(TMP_1480);
}else{
{
L_LIST__1153=lisp.values1(L_LIST_1__1151);
L_OUT__1154=lisp.values1(L_LIST_1__1151);
TMP_1481=G_23.func(L_LIST__1153);
L_NEW__1155=lisp.values1(TMP_1481);
L_NEW__1156=lisp.values1(L_RESULT__1150);
L_NEW__1157=lisp.values1(L_LIST_1__1151);
L_LIST_1__1151=lisp.values1(L_NEW__1155);
G_32.func(L_LIST__1153,L_NEW__1156);
L_RESULT__1150=lisp.values1(L_NEW__1157);
lisp.CL_values(L_OUT__1154);
}
}
continue;
}
break;
}
BLOCK_RESULT_NIL__1152=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_RESULT__1150);
});
CL_COMMON_LISP_NSET_DIFFERENCE=lisp.values1(F_NSET_DIFFERENCE_1470);
let F_SET_EXCLUSIVE_OR_1482;
F_SET_EXCLUSIVE_OR_1482=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1483, arguments.length);
}
let TMP_1492;
let TMP_1491;
let TMP_1490;
let TMP_1489;
let TMP_1488;
let L_ARGS__1163;
let L_TEST_NOT__1162;
let L_TEST__1161;
let L_KEY__1160;
let L_LIST_2__1159;
let L_LIST_1__1158;
L_LIST_1__1158=arguments[0];
L_LIST_2__1159=arguments[1];
let supplied_KEY__1160;
for (let TMP_1484 = 2; TMP_1484 < arguments.length; TMP_1484 += 2) {
if(arguments[TMP_1484] === G_637){
supplied_KEY__1160=arguments[TMP_1484+1];
break;
}
}
L_KEY__1160=supplied_KEY__1160 !== undefined ? supplied_KEY__1160 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1161;
for (let TMP_1485 = 2; TMP_1485 < arguments.length; TMP_1485 += 2) {
if(arguments[TMP_1485] === G_639){
supplied_TEST__1161=arguments[TMP_1485+1];
break;
}
}
L_TEST__1161=supplied_TEST__1161 !== undefined ? supplied_TEST__1161 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__1162;
for (let TMP_1486 = 2; TMP_1486 < arguments.length; TMP_1486 += 2) {
if(arguments[TMP_1486] === G_643){
supplied_TEST_NOT__1162=arguments[TMP_1486+1];
break;
}
}
L_TEST_NOT__1162=supplied_TEST_NOT__1162 !== undefined ? supplied_TEST_NOT__1162 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1487 = 2; TMP_1487 < arguments.length; TMP_1487 += 2) {
if(arguments[TMP_1487]!==G_643 && arguments[TMP_1487]!==G_639 && arguments[TMP_1487]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1487].name); }
}
L_ARGS__1163=lisp.jsArrayToList(arguments, 2);
TMP_1488=lisp.CL_symbolFunction(G_1459);
TMP_1489=lisp.callFunctionWithCallStack(G_1125,TMP_1488,L_LIST_1__1158,L_LIST_2__1159,L_ARGS__1163);
TMP_1490=lisp.CL_symbolFunction(G_1459);
TMP_1491=lisp.callFunctionWithCallStack(G_1125,TMP_1490,L_LIST_2__1159,L_LIST_1__1158,L_ARGS__1163);
TMP_1492=G_942.func(TMP_1489,TMP_1491);
return TMP_1492;
});
CL_COMMON_LISP_SET_EXCLUSIVE_OR=lisp.values1(F_SET_EXCLUSIVE_OR_1482);
let F_NSET_EXCLUSIVE_OR_1493;
F_NSET_EXCLUSIVE_OR_1493=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1494, arguments.length);
}
let TMP_1504;
let TMP_1503;
let TMP_1502;
let TMP_1501;
let TMP_1500;
let L_COPY__1172;
let TMP_1499;
let L_ARGS__1170;
let L_TEST_NOT__1169;
let L_TEST__1168;
let L_KEY__1167;
let L_LIST_2__1166;
let L_LIST_1__1165;
L_LIST_1__1165=arguments[0];
L_LIST_2__1166=arguments[1];
let supplied_KEY__1167;
for (let TMP_1495 = 2; TMP_1495 < arguments.length; TMP_1495 += 2) {
if(arguments[TMP_1495] === G_637){
supplied_KEY__1167=arguments[TMP_1495+1];
break;
}
}
L_KEY__1167=supplied_KEY__1167 !== undefined ? supplied_KEY__1167 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1168;
for (let TMP_1496 = 2; TMP_1496 < arguments.length; TMP_1496 += 2) {
if(arguments[TMP_1496] === G_639){
supplied_TEST__1168=arguments[TMP_1496+1];
break;
}
}
L_TEST__1168=supplied_TEST__1168 !== undefined ? supplied_TEST__1168 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__1169;
for (let TMP_1497 = 2; TMP_1497 < arguments.length; TMP_1497 += 2) {
if(arguments[TMP_1497] === G_643){
supplied_TEST_NOT__1169=arguments[TMP_1497+1];
break;
}
}
L_TEST_NOT__1169=supplied_TEST_NOT__1169 !== undefined ? supplied_TEST_NOT__1169 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1498 = 2; TMP_1498 < arguments.length; TMP_1498 += 2) {
if(arguments[TMP_1498]!==G_643 && arguments[TMP_1498]!==G_639 && arguments[TMP_1498]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1498].name); }
}
L_ARGS__1170=lisp.jsArrayToList(arguments, 2);
{
TMP_1499=G_828.func(L_LIST_1__1165);
L_COPY__1172=lisp.values1(TMP_1499);
TMP_1500=lisp.CL_symbolFunction(G_1471);
TMP_1501=lisp.callFunctionWithCallStack(G_1125,TMP_1500,L_LIST_1__1165,L_LIST_2__1166,L_ARGS__1170);
TMP_1502=lisp.CL_symbolFunction(G_1471);
TMP_1503=lisp.callFunctionWithCallStack(G_1125,TMP_1502,L_LIST_2__1166,L_COPY__1172,L_ARGS__1170);
TMP_1504=G_942.func(TMP_1501,TMP_1503);
}
return TMP_1504;
});
CL_COMMON_LISP_NSET_EXCLUSIVE_OR=lisp.values1(F_NSET_EXCLUSIVE_OR_1493);
let F_SUBSETP_1505;
F_SUBSETP_1505=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1506, arguments.length);
}
let TMP_1515;
let TMP_1514;
let L_X__1183;
let TMP_1513;
let TMP_1512;
let L_G737__1182;
let BLOCK_RESULT_NIL__1181;
let TMP_1511;
let L_TEST_NOT_P__1179;
let L_TEST_NOT__1178;
let L_TESTP__1177;
let L_TEST__1176;
let L_KEY__1175;
let L_LIST_2__1174;
let L_LIST_1__1173;
L_LIST_1__1173=arguments[0];
L_LIST_2__1174=arguments[1];
let supplied_KEY__1175;
for (let TMP_1507 = 2; TMP_1507 < arguments.length; TMP_1507 += 2) {
if(arguments[TMP_1507] === G_637){
supplied_KEY__1175=arguments[TMP_1507+1];
break;
}
}
L_KEY__1175=supplied_KEY__1175 !== undefined ? supplied_KEY__1175 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1176;
for (let TMP_1508 = 2; TMP_1508 < arguments.length; TMP_1508 += 2) {
if(arguments[TMP_1508] === G_639){
supplied_TEST__1176=arguments[TMP_1508+1];
break;
}
}
L_TEST__1176=supplied_TEST__1176 !== undefined ? supplied_TEST__1176 : (lisp.values1(lisp.S_nil));
L_TESTP__1177=(supplied_TEST__1176 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1178;
for (let TMP_1509 = 2; TMP_1509 < arguments.length; TMP_1509 += 2) {
if(arguments[TMP_1509] === G_643){
supplied_TEST_NOT__1178=arguments[TMP_1509+1];
break;
}
}
L_TEST_NOT__1178=supplied_TEST_NOT__1178 !== undefined ? supplied_TEST_NOT__1178 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1179=(supplied_TEST_NOT__1178 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1510 = 2; TMP_1510 < arguments.length; TMP_1510 += 2) {
if(arguments[TMP_1510]!==G_643 && arguments[TMP_1510]!==G_639 && arguments[TMP_1510]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1510].name); }
}
if(lisp.values1(L_TESTP__1177) !== lisp.S_nil){
TMP_1511=lisp.values1(L_TEST_NOT_P__1179);
}else{
TMP_1511=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1511) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
BLOCK_NIL__1181: for(;;){{
L_G737__1182=lisp.values1(L_LIST_1__1173);
for(;;){
TMP_1512=G_853.func(L_G737__1182);
if(lisp.values1(TMP_1512) !== lisp.S_nil){
}else{
{
TMP_1513=G_17.func(L_G737__1182);
L_X__1183=lisp.values1(TMP_1513);
TMP_1514=G_23.func(L_G737__1182);
L_G737__1182=lisp.values1(TMP_1514);
TMP_1515=G_1410.func(L_X__1183,L_LIST_2__1174,L_KEY__1175,L_TEST__1176,L_TESTP__1177,L_TEST_NOT__1178,L_TEST_NOT_P__1179);
if(lisp.values1(TMP_1515) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__1181=lisp.values1(lisp.S_nil);
break BLOCK_NIL__1181;
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__1181=lisp.values1(G_825);
break;
}
return BLOCK_RESULT_NIL__1181;
});
CL_COMMON_LISP_SUBSETP=lisp.values1(F_SUBSETP_1505);
let F_UNION_1516;
F_UNION_1516=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1517, arguments.length);
}
let L_G751__1197;
let TMP_1527;
let TMP_1526;
let TMP_1525;
let L_X__1196;
let TMP_1524;
let TMP_1523;
let L_G744__1195;
let L_ACC__1193;
let TMP_1522;
let L_TEST_NOT_P__1191;
let L_TEST_NOT__1190;
let L_TESTP__1189;
let L_TEST__1188;
let L_KEY__1187;
let L_LIST_2__1186;
let L_LIST_1__1185;
L_LIST_1__1185=arguments[0];
L_LIST_2__1186=arguments[1];
let supplied_KEY__1187;
for (let TMP_1518 = 2; TMP_1518 < arguments.length; TMP_1518 += 2) {
if(arguments[TMP_1518] === G_637){
supplied_KEY__1187=arguments[TMP_1518+1];
break;
}
}
L_KEY__1187=supplied_KEY__1187 !== undefined ? supplied_KEY__1187 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1188;
for (let TMP_1519 = 2; TMP_1519 < arguments.length; TMP_1519 += 2) {
if(arguments[TMP_1519] === G_639){
supplied_TEST__1188=arguments[TMP_1519+1];
break;
}
}
L_TEST__1188=supplied_TEST__1188 !== undefined ? supplied_TEST__1188 : (lisp.values1(lisp.S_nil));
L_TESTP__1189=(supplied_TEST__1188 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1190;
for (let TMP_1520 = 2; TMP_1520 < arguments.length; TMP_1520 += 2) {
if(arguments[TMP_1520] === G_643){
supplied_TEST_NOT__1190=arguments[TMP_1520+1];
break;
}
}
L_TEST_NOT__1190=supplied_TEST_NOT__1190 !== undefined ? supplied_TEST_NOT__1190 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1191=(supplied_TEST_NOT__1190 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1521 = 2; TMP_1521 < arguments.length; TMP_1521 += 2) {
if(arguments[TMP_1521]!==G_643 && arguments[TMP_1521]!==G_639 && arguments[TMP_1521]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1521].name); }
}
if(lisp.values1(L_TESTP__1189) !== lisp.S_nil){
TMP_1522=lisp.values1(L_TEST_NOT_P__1191);
}else{
TMP_1522=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1522) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
L_ACC__1193=lisp.values1(L_LIST_2__1186);
{
L_G744__1195=lisp.values1(L_LIST_1__1185);
for(;;){
TMP_1523=G_853.func(L_G744__1195);
if(lisp.values1(TMP_1523) !== lisp.S_nil){
}else{
{
TMP_1524=G_17.func(L_G744__1195);
L_X__1196=lisp.values1(TMP_1524);
TMP_1525=G_23.func(L_G744__1195);
L_G744__1195=lisp.values1(TMP_1525);
TMP_1526=G_1410.func(L_X__1196,L_LIST_2__1186,L_KEY__1187,L_TEST__1188,L_TESTP__1189,L_TEST_NOT__1190,L_TEST_NOT_P__1191);
if(lisp.values1(TMP_1526) !== lisp.S_nil){
}else{
{
TMP_1527=lisp.CL_cons(L_X__1196,L_ACC__1193);
L_G751__1197=lisp.values1(TMP_1527);
L_ACC__1193=lisp.values1(L_G751__1197);
}
}
}
continue;
}
break;
}
}
}
return lisp.values1(L_ACC__1193);
});
CL_COMMON_LISP_UNION=lisp.values1(F_UNION_1516);
let F_NUNION_1528;
F_NUNION_1528=(function(){
if(arguments.length < 2 || 8 < arguments.length) {
lisp.argumentsError(G_1529, arguments.length);
}
let L_G759__1210;
let TMP_1539;
let TMP_1538;
let TMP_1537;
let L_X__1209;
let TMP_1536;
let TMP_1535;
let L_G752__1208;
let TMP_1534;
let L_TEST_NOT_P__1205;
let L_TEST_NOT__1204;
let L_TESTP__1203;
let L_TEST__1202;
let L_KEY__1201;
let L_LIST_2__1200;
let L_LIST_1__1199;
L_LIST_1__1199=arguments[0];
L_LIST_2__1200=arguments[1];
let supplied_KEY__1201;
for (let TMP_1530 = 2; TMP_1530 < arguments.length; TMP_1530 += 2) {
if(arguments[TMP_1530] === G_637){
supplied_KEY__1201=arguments[TMP_1530+1];
break;
}
}
L_KEY__1201=supplied_KEY__1201 !== undefined ? supplied_KEY__1201 : (lisp.values1(lisp.S_nil));
let supplied_TEST__1202;
for (let TMP_1531 = 2; TMP_1531 < arguments.length; TMP_1531 += 2) {
if(arguments[TMP_1531] === G_639){
supplied_TEST__1202=arguments[TMP_1531+1];
break;
}
}
L_TEST__1202=supplied_TEST__1202 !== undefined ? supplied_TEST__1202 : (lisp.values1(lisp.S_nil));
L_TESTP__1203=(supplied_TEST__1202 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_TEST_NOT__1204;
for (let TMP_1532 = 2; TMP_1532 < arguments.length; TMP_1532 += 2) {
if(arguments[TMP_1532] === G_643){
supplied_TEST_NOT__1204=arguments[TMP_1532+1];
break;
}
}
L_TEST_NOT__1204=supplied_TEST_NOT__1204 !== undefined ? supplied_TEST_NOT__1204 : (lisp.values1(lisp.S_nil));
L_TEST_NOT_P__1205=(supplied_TEST_NOT__1204 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1533 = 2; TMP_1533 < arguments.length; TMP_1533 += 2) {
if(arguments[TMP_1533]!==G_643 && arguments[TMP_1533]!==G_639 && arguments[TMP_1533]!==G_637) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1533].name); }
}
if(lisp.values1(L_TESTP__1203) !== lisp.S_nil){
TMP_1534=lisp.values1(L_TEST_NOT_P__1205);
}else{
TMP_1534=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1534) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([58, 84, 69, 83, 84, 32, 97, 110, 100, 32, 58, 84, 69, 83, 84, 45, 78, 79, 84, 32, 119, 101, 114, 101, 32, 98, 111, 116, 104, 32, 115, 117, 112, 112, 108, 105, 101, 100, 46])));
}else{
}
{
L_G752__1208=lisp.values1(L_LIST_1__1199);
for(;;){
TMP_1535=G_853.func(L_G752__1208);
if(lisp.values1(TMP_1535) !== lisp.S_nil){
}else{
{
TMP_1536=G_17.func(L_G752__1208);
L_X__1209=lisp.values1(TMP_1536);
TMP_1537=G_23.func(L_G752__1208);
L_G752__1208=lisp.values1(TMP_1537);
TMP_1538=G_1410.func(L_X__1209,L_LIST_2__1200,L_KEY__1201,L_TEST__1202,L_TESTP__1203,L_TEST_NOT__1204,L_TEST_NOT_P__1205);
if(lisp.values1(TMP_1538) !== lisp.S_nil){
}else{
{
TMP_1539=lisp.CL_cons(L_X__1209,L_LIST_1__1199);
L_G759__1210=lisp.values1(TMP_1539);
L_LIST_1__1199=lisp.values1(L_G759__1210);
}
}
}
continue;
}
break;
}
}
return lisp.values1(L_LIST_1__1199);
});
CL_COMMON_LISP_NUNION=lisp.values1(F_NUNION_1528);
// initialize symbols
G_3 = lisp.intern('ATOM', 'COMMON-LISP');
G_6 = lisp.intern('NOT', 'COMMON-LISP');
G_8 = lisp.intern('NULL', 'COMMON-LISP');
G_11 = lisp.intern('LISTP', 'COMMON-LISP');
G_17 = lisp.intern('CAR', 'COMMON-LISP');
G_19 = lisp.intern('LIST', 'COMMON-LISP');
G_20 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_23 = lisp.intern('CDR', 'COMMON-LISP');
G_27 = lisp.intern('RPLACA', 'COMMON-LISP');
G_29 = lisp.intern('CONS', 'COMMON-LISP');
G_32 = lisp.intern('RPLACD', 'COMMON-LISP');
G_35 = lisp.intern('(SETF CAR)', 'COMMON-LISP');
G_37 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_41 = lisp.intern('GENSYM', 'COMMON-LISP');
G_43 = lisp.intern('%MAPCAR', 'SYSTEM');
G_44 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_48 = lisp.intern('LIST*', 'COMMON-LISP');
G_51 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_53 = lisp.intern('(SETF CDR)', 'COMMON-LISP');
G_66 = lisp.intern('CAAR', 'COMMON-LISP');
G_70 = lisp.intern('CADR', 'COMMON-LISP');
G_74 = lisp.intern('CDAR', 'COMMON-LISP');
G_78 = lisp.intern('CDDR', 'COMMON-LISP');
G_82 = lisp.intern('CAAAR', 'COMMON-LISP');
G_87 = lisp.intern('CAADR', 'COMMON-LISP');
G_92 = lisp.intern('CADAR', 'COMMON-LISP');
G_97 = lisp.intern('CADDR', 'COMMON-LISP');
G_102 = lisp.intern('CDAAR', 'COMMON-LISP');
G_107 = lisp.intern('CDADR', 'COMMON-LISP');
G_112 = lisp.intern('CDDAR', 'COMMON-LISP');
G_117 = lisp.intern('CDDDR', 'COMMON-LISP');
G_122 = lisp.intern('CAAAAR', 'COMMON-LISP');
G_128 = lisp.intern('CAAADR', 'COMMON-LISP');
G_134 = lisp.intern('CAADAR', 'COMMON-LISP');
G_140 = lisp.intern('CAADDR', 'COMMON-LISP');
G_146 = lisp.intern('CADAAR', 'COMMON-LISP');
G_152 = lisp.intern('CADADR', 'COMMON-LISP');
G_158 = lisp.intern('CADDAR', 'COMMON-LISP');
G_164 = lisp.intern('CADDDR', 'COMMON-LISP');
G_170 = lisp.intern('CDAAAR', 'COMMON-LISP');
G_176 = lisp.intern('CDAADR', 'COMMON-LISP');
G_182 = lisp.intern('CDADAR', 'COMMON-LISP');
G_188 = lisp.intern('CDADDR', 'COMMON-LISP');
G_194 = lisp.intern('CDDAAR', 'COMMON-LISP');
G_200 = lisp.intern('CDDADR', 'COMMON-LISP');
G_206 = lisp.intern('CDDDAR', 'COMMON-LISP');
G_212 = lisp.intern('CDDDDR', 'COMMON-LISP');
G_217 = lisp.intern('(SETF CAAR)', 'COMMON-LISP');
G_230 = lisp.intern('(SETF CADR)', 'COMMON-LISP');
G_243 = lisp.intern('(SETF CDAR)', 'COMMON-LISP');
G_256 = lisp.intern('(SETF CDDR)', 'COMMON-LISP');
G_269 = lisp.intern('(SETF CAAAR)', 'COMMON-LISP');
G_283 = lisp.intern('(SETF CAADR)', 'COMMON-LISP');
G_297 = lisp.intern('(SETF CADAR)', 'COMMON-LISP');
G_311 = lisp.intern('(SETF CADDR)', 'COMMON-LISP');
G_325 = lisp.intern('(SETF CDAAR)', 'COMMON-LISP');
G_339 = lisp.intern('(SETF CDADR)', 'COMMON-LISP');
G_353 = lisp.intern('(SETF CDDAR)', 'COMMON-LISP');
G_367 = lisp.intern('(SETF CDDDR)', 'COMMON-LISP');
G_381 = lisp.intern('(SETF CAAAAR)', 'COMMON-LISP');
G_396 = lisp.intern('(SETF CAAADR)', 'COMMON-LISP');
G_411 = lisp.intern('(SETF CAADAR)', 'COMMON-LISP');
G_426 = lisp.intern('(SETF CAADDR)', 'COMMON-LISP');
G_441 = lisp.intern('(SETF CADAAR)', 'COMMON-LISP');
G_456 = lisp.intern('(SETF CADADR)', 'COMMON-LISP');
G_471 = lisp.intern('(SETF CADDAR)', 'COMMON-LISP');
G_486 = lisp.intern('(SETF CADDDR)', 'COMMON-LISP');
G_501 = lisp.intern('(SETF CDAAAR)', 'COMMON-LISP');
G_516 = lisp.intern('(SETF CDAADR)', 'COMMON-LISP');
G_531 = lisp.intern('(SETF CDADAR)', 'COMMON-LISP');
G_546 = lisp.intern('(SETF CDADDR)', 'COMMON-LISP');
G_561 = lisp.intern('(SETF CDDAAR)', 'COMMON-LISP');
G_576 = lisp.intern('(SETF CDDADR)', 'COMMON-LISP');
G_591 = lisp.intern('(SETF CDDDAR)', 'COMMON-LISP');
G_606 = lisp.intern('(SETF CDDDDR)', 'COMMON-LISP');
G_622 = lisp.intern('COPY-TREE', 'COMMON-LISP');
G_631 = lisp.intern('APPLY-KEY', 'COMMON-LISP');
G_636 = lisp.intern('SUBLIS', 'COMMON-LISP');
G_637 = lisp.intern('KEY', 'KEYWORD');
G_639 = lisp.intern('TEST', 'KEYWORD');
G_641 = lisp.intern('EQL', 'COMMON-LISP');
G_643 = lisp.intern('TEST-NOT', 'KEYWORD');
G_648 = lisp.intern('ERROR', 'COMMON-LISP');
G_653 = lisp.intern('ASSOC', 'COMMON-LISP');
G_672 = lisp.intern('NSUBLIS', 'COMMON-LISP');
G_697 = lisp.intern('SUBST', 'COMMON-LISP');
G_727 = lisp.intern('SUBST-IF', 'COMMON-LISP');
G_749 = lisp.intern('SUBST-IF-NOT', 'COMMON-LISP');
G_753 = lisp.intern('COMPLEMENT', 'COMMON-LISP');
G_756 = lisp.intern('NSUBST', 'COMMON-LISP');
G_778 = lisp.intern('NSUBST-IF', 'COMMON-LISP');
G_793 = lisp.intern('NSUBST-IF-NOT', 'COMMON-LISP');
G_799 = lisp.intern('TREE-EQUAL', 'COMMON-LISP');
G_825 = lisp.intern('T', 'COMMON-LISP');
G_828 = lisp.intern('COPY-LIST', 'COMMON-LISP');
G_851 = lisp.intern('LIST-LENGTH', 'COMMON-LISP');
G_853 = lisp.intern('ENDP', 'COMMON-LISP');
G_857 = lisp.intern('+', 'COMMON-LISP');
G_861 = lisp.intern('>', 'COMMON-LISP');
G_866 = lisp.intern('MAKE-LIST', 'COMMON-LISP');
G_867 = lisp.intern('INITIAL-ELEMENT', 'KEYWORD');
G_873 = lisp.intern('<=', 'COMMON-LISP');
G_874 = lisp.intern('INTEGER', 'COMMON-LISP');
G_875 = lisp.intern('*', 'COMMON-LISP');
G_878 = lisp.intern('ZEROP', 'COMMON-LISP');
G_881 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_883 = lisp.intern('1-', 'COMMON-LISP');
G_887 = lisp.intern('PUSH', 'COMMON-LISP');
G_888 = lisp.intern('POP', 'COMMON-LISP');
G_890 = lisp.intern('FIRST', 'COMMON-LISP');
G_893 = lisp.intern('SECOND', 'COMMON-LISP');
G_895 = lisp.intern('NTH', 'COMMON-LISP');
G_897 = lisp.intern('THIRD', 'COMMON-LISP');
G_900 = lisp.intern('FOURTH', 'COMMON-LISP');
G_903 = lisp.intern('FIFTH', 'COMMON-LISP');
G_906 = lisp.intern('SIXTH', 'COMMON-LISP');
G_909 = lisp.intern('SEVENTH', 'COMMON-LISP');
G_912 = lisp.intern('EIGHTH', 'COMMON-LISP');
G_915 = lisp.intern('NINTH', 'COMMON-LISP');
G_918 = lisp.intern('TENTH', 'COMMON-LISP');
G_920 = lisp.intern('VALUE', 'COMMON-LISP');
G_921 = lisp.intern('BACKQUOTE', 'SYSTEM');
G_922 = lisp.intern('SETF', 'COMMON-LISP');
G_923 = lisp.intern('UNQUOTE', 'SYSTEM');
G_927 = lisp.intern('>=', 'COMMON-LISP');
G_932 = lisp.intern('SET-NTH', 'COMMON-LISP');
G_942 = lisp.intern('NCONC', 'COMMON-LISP');
G_947 = lisp.intern('LAST', 'COMMON-LISP');
G_949 = lisp.intern('APPEND', 'COMMON-LISP');
G_958 = lisp.intern('REST', 'COMMON-LISP');
G_972 = lisp.intern('REVAPPEND', 'COMMON-LISP');
G_974 = lisp.intern('REVERSE', 'COMMON-LISP');
G_977 = lisp.intern('NRECONC', 'COMMON-LISP');
G_981 = lisp.intern('BUTLAST', 'COMMON-LISP');
G_992 = lisp.intern('1+', 'COMMON-LISP');
G_994 = lisp.intern('NBUTLIST-NTHCDR', 'COMMON-LISP');
G_1000 = lisp.intern('NBUTLAST', 'COMMON-LISP');
G_1018 = lisp.intern('LAST1', 'COMMON-LISP');
G_1026 = lisp.intern('=', 'COMMON-LISP');
G_1036 = lisp.intern('LDIFF', 'COMMON-LISP');
G_1052 = lisp.intern('TAILP', 'COMMON-LISP');
G_1059 = lisp.intern('NTHCDR', 'COMMON-LISP');
G_1069 = lisp.intern('PROCESS-LIST', 'COMMON-LISP');
G_1082 = lisp.intern('MEMBER', 'COMMON-LISP');
G_1087 = lisp.intern('IDENTITY', 'COMMON-LISP');
G_1092 = lisp.intern('MEMBER-IF', 'COMMON-LISP');
G_1101 = lisp.intern('MEMBER-IF-NOT', 'COMMON-LISP');
G_1106 = lisp.intern('WITH-ACCUMULATE', 'COMMON-LISP');
G_1108 = lisp.intern('MAPC', 'COMMON-LISP');
G_1125 = lisp.intern('APPLY', 'COMMON-LISP');
G_1127 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_1163 = lisp.intern('MAPCAN', 'COMMON-LISP');
G_1183 = lisp.intern('MAPL', 'COMMON-LISP');
G_1201 = lisp.intern('MAPLIST', 'COMMON-LISP');
G_1226 = lisp.intern('MAPCON', 'COMMON-LISP');
G_1246 = lisp.intern('ACONS', 'COMMON-LISP');
G_1267 = lisp.intern('ASSOC-IF', 'COMMON-LISP');
G_1278 = lisp.intern('ASSOC-IF-NOT', 'COMMON-LISP');
G_1284 = lisp.intern('COPY-ALIST', 'COMMON-LISP');
G_1297 = lisp.intern('PAIRLIS', 'COMMON-LISP');
G_1311 = lisp.intern('RASSOC', 'COMMON-LISP');
G_1329 = lisp.intern('RASSOC-IF', 'COMMON-LISP');
G_1340 = lisp.intern('RASSOC-IF-NOT', 'COMMON-LISP');
G_1346 = lisp.intern('GET-PROPERTIES', 'COMMON-LISP');
G_1356 = lisp.intern('GETF', 'COMMON-LISP');
G_1363 = lisp.intern('%PUTF', 'COMMON-LISP');
G_1383 = lisp.intern('LET', 'COMMON-LISP');
G_1392 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_1394 = lisp.intern('!GET-SETF-EXPANSION', 'COMMON-LISP');
G_1397 = lisp.intern('%REMF', 'COMMON-LISP');
G_1408 = lisp.intern('REMF', 'COMMON-LISP');
G_1410 = lisp.intern('MEMBER-AUX', 'COMMON-LISP');
G_1418 = lisp.intern('INTERSECTION', 'COMMON-LISP');
G_1430 = lisp.intern('NINTERSECTION', 'COMMON-LISP');
G_1444 = lisp.intern('ADJOIN', 'COMMON-LISP');
G_1457 = lisp.intern('PUSHNEW', 'COMMON-LISP');
G_1459 = lisp.intern('SET-DIFFERENCE', 'COMMON-LISP');
G_1471 = lisp.intern('NSET-DIFFERENCE', 'COMMON-LISP');
G_1483 = lisp.intern('SET-EXCLUSIVE-OR', 'COMMON-LISP');
G_1494 = lisp.intern('NSET-EXCLUSIVE-OR', 'COMMON-LISP');
G_1506 = lisp.intern('SUBSETP', 'COMMON-LISP');
G_1517 = lisp.intern('UNION', 'COMMON-LISP');
G_1529 = lisp.intern('NUNION', 'COMMON-LISP');
G_1540 = lisp.intern('MACRO', 'COMPILER');
G_1543 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_1546 = lisp.intern('OBJ', 'COMMON-LISP');
G_1547 = lisp.intern('PLACE', 'COMMON-LISP');
G_1554 = lisp.intern('LET*', 'COMMON-LISP');
G_1579 = lisp.intern('PROG1', 'COMMON-LISP');
G_1590 = lisp.intern('&BODY', 'COMMON-LISP');
G_1591 = lisp.intern('BODY', 'COMMON-LISP');
G_1604 = lisp.intern('LABELS', 'COMMON-LISP');
G_1605 = lisp.intern('COLLECT', 'COMMON-LISP');
G_1606 = lisp.intern('X', 'COMMON-LISP');
G_1620 = lisp.intern('INDICATOR', 'COMMON-LISP');
G_1630 = lisp.intern('MULTIPLE-VALUE-BIND', 'COMMON-LISP');
G_1643 = lisp.intern('ITEM', 'COMMON-LISP');
G_1644 = lisp.intern('&REST', 'COMMON-LISP');
G_1645 = lisp.intern('ARGS', 'COMMON-LISP');
G_1646 = lisp.intern('&KEY', 'COMMON-LISP');
G_1647 = lisp.intern('KEY', 'COMMON-LISP');
G_1648 = lisp.intern('TEST', 'COMMON-LISP');
G_1649 = lisp.intern('TEST-NOT', 'COMMON-LISP');
G_1659 = lisp.intern('NIL', 'COMMON-LISP');
G_1686 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_ATOM.lisp_name = 'ATOM'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_ATOM);
CL_COMMON_LISP_NULL.lisp_name = 'NULL'
lisp.setSymbolFunction(G_8, CL_COMMON_LISP_NULL);
CL_COMMON_LISP_LISTP.lisp_name = 'LISTP'
lisp.setSymbolFunction(G_11, CL_COMMON_LISP_LISTP);
CL_COMMON_LISP_CAR.lisp_name = 'CAR'
lisp.setSymbolFunction(G_17, CL_COMMON_LISP_CAR);
CL_COMMON_LISP_CDR.lisp_name = 'CDR'
lisp.setSymbolFunction(G_23, CL_COMMON_LISP_CDR);
CL_COMMON_LISP_RPLACA.lisp_name = 'RPLACA'
lisp.setSymbolFunction(G_27, CL_COMMON_LISP_RPLACA);
CL_COMMON_LISP_RPLACD.lisp_name = 'RPLACD'
lisp.setSymbolFunction(G_32, CL_COMMON_LISP_RPLACD);
TMP_36=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_CONS__20;
let L_VALUE__19;
L_VALUE__19=arguments[0];
L_CONS__20=arguments[1];
G_27.func(L_CONS__20,L_VALUE__19);
return lisp.values1(L_VALUE__19);
});
lisp.CL_setSymbolFunction(G_35,TMP_36);
TMP_38=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_50;
let TMP_49;
let TMP_47;
let TMP_46;
let L_STORE4__28;
let TMP_45;
let L_GENSYMS2__27;
let TMP_42;
let TMP_39;
let L_ARGS3__25;
let L_G8__23;
let L_G7__22;
L_G7__22=arguments[0];
{
L_G8__23=lisp.values1(L_G7__22);
{
L_ARGS3__25=lisp.values1(L_G8__23);
{
TMP_39=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_40;
let L_X__26;
L_X__26=arguments[0];
TMP_40=lisp.callFunctionWithCallStack(G_41);
return TMP_40;
});
TMP_42=G_43.func(TMP_39,L_ARGS3__25);
L_GENSYMS2__27=lisp.values1(TMP_42);
TMP_45=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE4__28=lisp.values1(TMP_45);
TMP_46=G_19.func(L_STORE4__28);
TMP_47=G_48.func(G_35,L_STORE4__28,L_GENSYMS2__27);
TMP_49=G_48.func(G_17,L_GENSYMS2__27);
TMP_50=lisp.CL_values(L_GENSYMS2__27,L_ARGS3__25,TMP_46,TMP_47,TMP_49);
}
}
}
return TMP_50;
});
lisp.CL_put(G_17,G_37,TMP_38);
TMP_52=lisp.CL_symbolFunction(G_35);
lisp.CL_put(G_17,G_51,TMP_52);
TMP_54=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_CONS__32;
let L_VALUE__31;
L_VALUE__31=arguments[0];
L_CONS__32=arguments[1];
G_32.func(L_CONS__32,L_VALUE__31);
return lisp.values1(L_VALUE__31);
});
lisp.CL_setSymbolFunction(G_53,TMP_54);
TMP_55=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_63;
let TMP_62;
let TMP_61;
let TMP_60;
let L_STORE12__40;
let TMP_59;
let L_GENSYMS10__39;
let TMP_58;
let TMP_56;
let L_ARGS11__37;
let L_G16__35;
let L_G15__34;
L_G15__34=arguments[0];
{
L_G16__35=lisp.values1(L_G15__34);
{
L_ARGS11__37=lisp.values1(L_G16__35);
{
TMP_56=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_57;
let L_X__38;
L_X__38=arguments[0];
TMP_57=lisp.callFunctionWithCallStack(G_41);
return TMP_57;
});
TMP_58=G_43.func(TMP_56,L_ARGS11__37);
L_GENSYMS10__39=lisp.values1(TMP_58);
TMP_59=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE12__40=lisp.values1(TMP_59);
TMP_60=G_19.func(L_STORE12__40);
TMP_61=G_48.func(G_53,L_STORE12__40,L_GENSYMS10__39);
TMP_62=G_48.func(G_23,L_GENSYMS10__39);
TMP_63=lisp.CL_values(L_GENSYMS10__39,L_ARGS11__37,TMP_60,TMP_61,TMP_62);
}
}
}
return TMP_63;
});
lisp.CL_put(G_23,G_37,TMP_55);
TMP_64=lisp.CL_symbolFunction(G_53);
lisp.CL_put(G_23,G_51,TMP_64);
CL_COMMON_LISP_CAAR.lisp_name = 'CAAR'
lisp.setSymbolFunction(G_66, CL_COMMON_LISP_CAAR);
CL_COMMON_LISP_CADR.lisp_name = 'CADR'
lisp.setSymbolFunction(G_70, CL_COMMON_LISP_CADR);
CL_COMMON_LISP_CDAR.lisp_name = 'CDAR'
lisp.setSymbolFunction(G_74, CL_COMMON_LISP_CDAR);
CL_COMMON_LISP_CDDR.lisp_name = 'CDDR'
lisp.setSymbolFunction(G_78, CL_COMMON_LISP_CDDR);
CL_COMMON_LISP_CAAAR.lisp_name = 'CAAAR'
lisp.setSymbolFunction(G_82, CL_COMMON_LISP_CAAAR);
CL_COMMON_LISP_CAADR.lisp_name = 'CAADR'
lisp.setSymbolFunction(G_87, CL_COMMON_LISP_CAADR);
CL_COMMON_LISP_CADAR.lisp_name = 'CADAR'
lisp.setSymbolFunction(G_92, CL_COMMON_LISP_CADAR);
CL_COMMON_LISP_CADDR.lisp_name = 'CADDR'
lisp.setSymbolFunction(G_97, CL_COMMON_LISP_CADDR);
CL_COMMON_LISP_CDAAR.lisp_name = 'CDAAR'
lisp.setSymbolFunction(G_102, CL_COMMON_LISP_CDAAR);
CL_COMMON_LISP_CDADR.lisp_name = 'CDADR'
lisp.setSymbolFunction(G_107, CL_COMMON_LISP_CDADR);
CL_COMMON_LISP_CDDAR.lisp_name = 'CDDAR'
lisp.setSymbolFunction(G_112, CL_COMMON_LISP_CDDAR);
CL_COMMON_LISP_CDDDR.lisp_name = 'CDDDR'
lisp.setSymbolFunction(G_117, CL_COMMON_LISP_CDDDR);
CL_COMMON_LISP_CAAAAR.lisp_name = 'CAAAAR'
lisp.setSymbolFunction(G_122, CL_COMMON_LISP_CAAAAR);
CL_COMMON_LISP_CAAADR.lisp_name = 'CAAADR'
lisp.setSymbolFunction(G_128, CL_COMMON_LISP_CAAADR);
CL_COMMON_LISP_CAADAR.lisp_name = 'CAADAR'
lisp.setSymbolFunction(G_134, CL_COMMON_LISP_CAADAR);
CL_COMMON_LISP_CAADDR.lisp_name = 'CAADDR'
lisp.setSymbolFunction(G_140, CL_COMMON_LISP_CAADDR);
CL_COMMON_LISP_CADAAR.lisp_name = 'CADAAR'
lisp.setSymbolFunction(G_146, CL_COMMON_LISP_CADAAR);
CL_COMMON_LISP_CADADR.lisp_name = 'CADADR'
lisp.setSymbolFunction(G_152, CL_COMMON_LISP_CADADR);
CL_COMMON_LISP_CADDAR.lisp_name = 'CADDAR'
lisp.setSymbolFunction(G_158, CL_COMMON_LISP_CADDAR);
CL_COMMON_LISP_CADDDR.lisp_name = 'CADDDR'
lisp.setSymbolFunction(G_164, CL_COMMON_LISP_CADDDR);
CL_COMMON_LISP_CDAAAR.lisp_name = 'CDAAAR'
lisp.setSymbolFunction(G_170, CL_COMMON_LISP_CDAAAR);
CL_COMMON_LISP_CDAADR.lisp_name = 'CDAADR'
lisp.setSymbolFunction(G_176, CL_COMMON_LISP_CDAADR);
CL_COMMON_LISP_CDADAR.lisp_name = 'CDADAR'
lisp.setSymbolFunction(G_182, CL_COMMON_LISP_CDADAR);
CL_COMMON_LISP_CDADDR.lisp_name = 'CDADDR'
lisp.setSymbolFunction(G_188, CL_COMMON_LISP_CDADDR);
CL_COMMON_LISP_CDDAAR.lisp_name = 'CDDAAR'
lisp.setSymbolFunction(G_194, CL_COMMON_LISP_CDDAAR);
CL_COMMON_LISP_CDDADR.lisp_name = 'CDDADR'
lisp.setSymbolFunction(G_200, CL_COMMON_LISP_CDDADR);
CL_COMMON_LISP_CDDDAR.lisp_name = 'CDDDAR'
lisp.setSymbolFunction(G_206, CL_COMMON_LISP_CDDDAR);
CL_COMMON_LISP_CDDDDR.lisp_name = 'CDDDDR'
lisp.setSymbolFunction(G_212, CL_COMMON_LISP_CDDDDR);
TMP_218=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_219;
let L_X__100;
let L_VALUE__99;
L_VALUE__99=arguments[0];
L_X__100=arguments[1];
TMP_219=G_17.func(L_X__100);
G_27.func(TMP_219,L_VALUE__99);
return lisp.values1(L_VALUE__99);
});
lisp.CL_setSymbolFunction(G_217,TMP_218);
TMP_220=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_228;
let TMP_227;
let TMP_226;
let TMP_225;
let L_STORE20__108;
let TMP_224;
let L_GENSYMS18__107;
let TMP_223;
let TMP_221;
let L_ARGS19__105;
let L_G24__103;
let L_G23__102;
L_G23__102=arguments[0];
{
L_G24__103=lisp.values1(L_G23__102);
{
L_ARGS19__105=lisp.values1(L_G24__103);
{
TMP_221=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_222;
let L_X__106;
L_X__106=arguments[0];
TMP_222=lisp.callFunctionWithCallStack(G_41);
return TMP_222;
});
TMP_223=G_43.func(TMP_221,L_ARGS19__105);
L_GENSYMS18__107=lisp.values1(TMP_223);
TMP_224=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE20__108=lisp.values1(TMP_224);
TMP_225=G_19.func(L_STORE20__108);
TMP_226=G_48.func(G_217,L_STORE20__108,L_GENSYMS18__107);
TMP_227=G_48.func(G_66,L_GENSYMS18__107);
TMP_228=lisp.CL_values(L_GENSYMS18__107,L_ARGS19__105,TMP_225,TMP_226,TMP_227);
}
}
}
return TMP_228;
});
lisp.CL_put(G_66,G_37,TMP_220);
TMP_229=lisp.CL_symbolFunction(G_217);
lisp.CL_put(G_66,G_51,TMP_229);
TMP_231=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_232;
let L_X__112;
let L_VALUE__111;
L_VALUE__111=arguments[0];
L_X__112=arguments[1];
TMP_232=G_23.func(L_X__112);
G_27.func(TMP_232,L_VALUE__111);
return lisp.values1(L_VALUE__111);
});
lisp.CL_setSymbolFunction(G_230,TMP_231);
TMP_233=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_241;
let TMP_240;
let TMP_239;
let TMP_238;
let L_STORE28__120;
let TMP_237;
let L_GENSYMS26__119;
let TMP_236;
let TMP_234;
let L_ARGS27__117;
let L_G32__115;
let L_G31__114;
L_G31__114=arguments[0];
{
L_G32__115=lisp.values1(L_G31__114);
{
L_ARGS27__117=lisp.values1(L_G32__115);
{
TMP_234=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_235;
let L_X__118;
L_X__118=arguments[0];
TMP_235=lisp.callFunctionWithCallStack(G_41);
return TMP_235;
});
TMP_236=G_43.func(TMP_234,L_ARGS27__117);
L_GENSYMS26__119=lisp.values1(TMP_236);
TMP_237=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE28__120=lisp.values1(TMP_237);
TMP_238=G_19.func(L_STORE28__120);
TMP_239=G_48.func(G_230,L_STORE28__120,L_GENSYMS26__119);
TMP_240=G_48.func(G_70,L_GENSYMS26__119);
TMP_241=lisp.CL_values(L_GENSYMS26__119,L_ARGS27__117,TMP_238,TMP_239,TMP_240);
}
}
}
return TMP_241;
});
lisp.CL_put(G_70,G_37,TMP_233);
TMP_242=lisp.CL_symbolFunction(G_230);
lisp.CL_put(G_70,G_51,TMP_242);
TMP_244=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_245;
let L_X__124;
let L_VALUE__123;
L_VALUE__123=arguments[0];
L_X__124=arguments[1];
TMP_245=G_17.func(L_X__124);
G_32.func(TMP_245,L_VALUE__123);
return lisp.values1(L_VALUE__123);
});
lisp.CL_setSymbolFunction(G_243,TMP_244);
TMP_246=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_254;
let TMP_253;
let TMP_252;
let TMP_251;
let L_STORE36__132;
let TMP_250;
let L_GENSYMS34__131;
let TMP_249;
let TMP_247;
let L_ARGS35__129;
let L_G40__127;
let L_G39__126;
L_G39__126=arguments[0];
{
L_G40__127=lisp.values1(L_G39__126);
{
L_ARGS35__129=lisp.values1(L_G40__127);
{
TMP_247=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_248;
let L_X__130;
L_X__130=arguments[0];
TMP_248=lisp.callFunctionWithCallStack(G_41);
return TMP_248;
});
TMP_249=G_43.func(TMP_247,L_ARGS35__129);
L_GENSYMS34__131=lisp.values1(TMP_249);
TMP_250=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE36__132=lisp.values1(TMP_250);
TMP_251=G_19.func(L_STORE36__132);
TMP_252=G_48.func(G_243,L_STORE36__132,L_GENSYMS34__131);
TMP_253=G_48.func(G_74,L_GENSYMS34__131);
TMP_254=lisp.CL_values(L_GENSYMS34__131,L_ARGS35__129,TMP_251,TMP_252,TMP_253);
}
}
}
return TMP_254;
});
lisp.CL_put(G_74,G_37,TMP_246);
TMP_255=lisp.CL_symbolFunction(G_243);
lisp.CL_put(G_74,G_51,TMP_255);
TMP_257=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_258;
let L_X__136;
let L_VALUE__135;
L_VALUE__135=arguments[0];
L_X__136=arguments[1];
TMP_258=G_23.func(L_X__136);
G_32.func(TMP_258,L_VALUE__135);
return lisp.values1(L_VALUE__135);
});
lisp.CL_setSymbolFunction(G_256,TMP_257);
TMP_259=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_267;
let TMP_266;
let TMP_265;
let TMP_264;
let L_STORE44__144;
let TMP_263;
let L_GENSYMS42__143;
let TMP_262;
let TMP_260;
let L_ARGS43__141;
let L_G48__139;
let L_G47__138;
L_G47__138=arguments[0];
{
L_G48__139=lisp.values1(L_G47__138);
{
L_ARGS43__141=lisp.values1(L_G48__139);
{
TMP_260=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_261;
let L_X__142;
L_X__142=arguments[0];
TMP_261=lisp.callFunctionWithCallStack(G_41);
return TMP_261;
});
TMP_262=G_43.func(TMP_260,L_ARGS43__141);
L_GENSYMS42__143=lisp.values1(TMP_262);
TMP_263=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE44__144=lisp.values1(TMP_263);
TMP_264=G_19.func(L_STORE44__144);
TMP_265=G_48.func(G_256,L_STORE44__144,L_GENSYMS42__143);
TMP_266=G_48.func(G_78,L_GENSYMS42__143);
TMP_267=lisp.CL_values(L_GENSYMS42__143,L_ARGS43__141,TMP_264,TMP_265,TMP_266);
}
}
}
return TMP_267;
});
lisp.CL_put(G_78,G_37,TMP_259);
TMP_268=lisp.CL_symbolFunction(G_256);
lisp.CL_put(G_78,G_51,TMP_268);
TMP_270=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_272;
let TMP_271;
let L_X__148;
let L_VALUE__147;
L_VALUE__147=arguments[0];
L_X__148=arguments[1];
TMP_271=G_17.func(L_X__148);
TMP_272=G_17.func(TMP_271);
G_27.func(TMP_272,L_VALUE__147);
return lisp.values1(L_VALUE__147);
});
lisp.CL_setSymbolFunction(G_269,TMP_270);
TMP_273=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_281;
let TMP_280;
let TMP_279;
let TMP_278;
let L_STORE52__156;
let TMP_277;
let L_GENSYMS50__155;
let TMP_276;
let TMP_274;
let L_ARGS51__153;
let L_G56__151;
let L_G55__150;
L_G55__150=arguments[0];
{
L_G56__151=lisp.values1(L_G55__150);
{
L_ARGS51__153=lisp.values1(L_G56__151);
{
TMP_274=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_275;
let L_X__154;
L_X__154=arguments[0];
TMP_275=lisp.callFunctionWithCallStack(G_41);
return TMP_275;
});
TMP_276=G_43.func(TMP_274,L_ARGS51__153);
L_GENSYMS50__155=lisp.values1(TMP_276);
TMP_277=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE52__156=lisp.values1(TMP_277);
TMP_278=G_19.func(L_STORE52__156);
TMP_279=G_48.func(G_269,L_STORE52__156,L_GENSYMS50__155);
TMP_280=G_48.func(G_82,L_GENSYMS50__155);
TMP_281=lisp.CL_values(L_GENSYMS50__155,L_ARGS51__153,TMP_278,TMP_279,TMP_280);
}
}
}
return TMP_281;
});
lisp.CL_put(G_82,G_37,TMP_273);
TMP_282=lisp.CL_symbolFunction(G_269);
lisp.CL_put(G_82,G_51,TMP_282);
TMP_284=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_286;
let TMP_285;
let L_X__160;
let L_VALUE__159;
L_VALUE__159=arguments[0];
L_X__160=arguments[1];
TMP_285=G_23.func(L_X__160);
TMP_286=G_17.func(TMP_285);
G_27.func(TMP_286,L_VALUE__159);
return lisp.values1(L_VALUE__159);
});
lisp.CL_setSymbolFunction(G_283,TMP_284);
TMP_287=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_295;
let TMP_294;
let TMP_293;
let TMP_292;
let L_STORE60__168;
let TMP_291;
let L_GENSYMS58__167;
let TMP_290;
let TMP_288;
let L_ARGS59__165;
let L_G64__163;
let L_G63__162;
L_G63__162=arguments[0];
{
L_G64__163=lisp.values1(L_G63__162);
{
L_ARGS59__165=lisp.values1(L_G64__163);
{
TMP_288=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_289;
let L_X__166;
L_X__166=arguments[0];
TMP_289=lisp.callFunctionWithCallStack(G_41);
return TMP_289;
});
TMP_290=G_43.func(TMP_288,L_ARGS59__165);
L_GENSYMS58__167=lisp.values1(TMP_290);
TMP_291=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE60__168=lisp.values1(TMP_291);
TMP_292=G_19.func(L_STORE60__168);
TMP_293=G_48.func(G_283,L_STORE60__168,L_GENSYMS58__167);
TMP_294=G_48.func(G_87,L_GENSYMS58__167);
TMP_295=lisp.CL_values(L_GENSYMS58__167,L_ARGS59__165,TMP_292,TMP_293,TMP_294);
}
}
}
return TMP_295;
});
lisp.CL_put(G_87,G_37,TMP_287);
TMP_296=lisp.CL_symbolFunction(G_283);
lisp.CL_put(G_87,G_51,TMP_296);
TMP_298=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_300;
let TMP_299;
let L_X__172;
let L_VALUE__171;
L_VALUE__171=arguments[0];
L_X__172=arguments[1];
TMP_299=G_17.func(L_X__172);
TMP_300=G_23.func(TMP_299);
G_27.func(TMP_300,L_VALUE__171);
return lisp.values1(L_VALUE__171);
});
lisp.CL_setSymbolFunction(G_297,TMP_298);
TMP_301=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_309;
let TMP_308;
let TMP_307;
let TMP_306;
let L_STORE68__180;
let TMP_305;
let L_GENSYMS66__179;
let TMP_304;
let TMP_302;
let L_ARGS67__177;
let L_G72__175;
let L_G71__174;
L_G71__174=arguments[0];
{
L_G72__175=lisp.values1(L_G71__174);
{
L_ARGS67__177=lisp.values1(L_G72__175);
{
TMP_302=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_303;
let L_X__178;
L_X__178=arguments[0];
TMP_303=lisp.callFunctionWithCallStack(G_41);
return TMP_303;
});
TMP_304=G_43.func(TMP_302,L_ARGS67__177);
L_GENSYMS66__179=lisp.values1(TMP_304);
TMP_305=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE68__180=lisp.values1(TMP_305);
TMP_306=G_19.func(L_STORE68__180);
TMP_307=G_48.func(G_297,L_STORE68__180,L_GENSYMS66__179);
TMP_308=G_48.func(G_92,L_GENSYMS66__179);
TMP_309=lisp.CL_values(L_GENSYMS66__179,L_ARGS67__177,TMP_306,TMP_307,TMP_308);
}
}
}
return TMP_309;
});
lisp.CL_put(G_92,G_37,TMP_301);
TMP_310=lisp.CL_symbolFunction(G_297);
lisp.CL_put(G_92,G_51,TMP_310);
TMP_312=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_314;
let TMP_313;
let L_X__184;
let L_VALUE__183;
L_VALUE__183=arguments[0];
L_X__184=arguments[1];
TMP_313=G_23.func(L_X__184);
TMP_314=G_23.func(TMP_313);
G_27.func(TMP_314,L_VALUE__183);
return lisp.values1(L_VALUE__183);
});
lisp.CL_setSymbolFunction(G_311,TMP_312);
TMP_315=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_323;
let TMP_322;
let TMP_321;
let TMP_320;
let L_STORE76__192;
let TMP_319;
let L_GENSYMS74__191;
let TMP_318;
let TMP_316;
let L_ARGS75__189;
let L_G80__187;
let L_G79__186;
L_G79__186=arguments[0];
{
L_G80__187=lisp.values1(L_G79__186);
{
L_ARGS75__189=lisp.values1(L_G80__187);
{
TMP_316=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_317;
let L_X__190;
L_X__190=arguments[0];
TMP_317=lisp.callFunctionWithCallStack(G_41);
return TMP_317;
});
TMP_318=G_43.func(TMP_316,L_ARGS75__189);
L_GENSYMS74__191=lisp.values1(TMP_318);
TMP_319=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE76__192=lisp.values1(TMP_319);
TMP_320=G_19.func(L_STORE76__192);
TMP_321=G_48.func(G_311,L_STORE76__192,L_GENSYMS74__191);
TMP_322=G_48.func(G_97,L_GENSYMS74__191);
TMP_323=lisp.CL_values(L_GENSYMS74__191,L_ARGS75__189,TMP_320,TMP_321,TMP_322);
}
}
}
return TMP_323;
});
lisp.CL_put(G_97,G_37,TMP_315);
TMP_324=lisp.CL_symbolFunction(G_311);
lisp.CL_put(G_97,G_51,TMP_324);
TMP_326=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_328;
let TMP_327;
let L_X__196;
let L_VALUE__195;
L_VALUE__195=arguments[0];
L_X__196=arguments[1];
TMP_327=G_17.func(L_X__196);
TMP_328=G_17.func(TMP_327);
G_32.func(TMP_328,L_VALUE__195);
return lisp.values1(L_VALUE__195);
});
lisp.CL_setSymbolFunction(G_325,TMP_326);
TMP_329=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_337;
let TMP_336;
let TMP_335;
let TMP_334;
let L_STORE84__204;
let TMP_333;
let L_GENSYMS82__203;
let TMP_332;
let TMP_330;
let L_ARGS83__201;
let L_G88__199;
let L_G87__198;
L_G87__198=arguments[0];
{
L_G88__199=lisp.values1(L_G87__198);
{
L_ARGS83__201=lisp.values1(L_G88__199);
{
TMP_330=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_331;
let L_X__202;
L_X__202=arguments[0];
TMP_331=lisp.callFunctionWithCallStack(G_41);
return TMP_331;
});
TMP_332=G_43.func(TMP_330,L_ARGS83__201);
L_GENSYMS82__203=lisp.values1(TMP_332);
TMP_333=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE84__204=lisp.values1(TMP_333);
TMP_334=G_19.func(L_STORE84__204);
TMP_335=G_48.func(G_325,L_STORE84__204,L_GENSYMS82__203);
TMP_336=G_48.func(G_102,L_GENSYMS82__203);
TMP_337=lisp.CL_values(L_GENSYMS82__203,L_ARGS83__201,TMP_334,TMP_335,TMP_336);
}
}
}
return TMP_337;
});
lisp.CL_put(G_102,G_37,TMP_329);
TMP_338=lisp.CL_symbolFunction(G_325);
lisp.CL_put(G_102,G_51,TMP_338);
TMP_340=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_342;
let TMP_341;
let L_X__208;
let L_VALUE__207;
L_VALUE__207=arguments[0];
L_X__208=arguments[1];
TMP_341=G_23.func(L_X__208);
TMP_342=G_17.func(TMP_341);
G_32.func(TMP_342,L_VALUE__207);
return lisp.values1(L_VALUE__207);
});
lisp.CL_setSymbolFunction(G_339,TMP_340);
TMP_343=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_351;
let TMP_350;
let TMP_349;
let TMP_348;
let L_STORE92__216;
let TMP_347;
let L_GENSYMS90__215;
let TMP_346;
let TMP_344;
let L_ARGS91__213;
let L_G96__211;
let L_G95__210;
L_G95__210=arguments[0];
{
L_G96__211=lisp.values1(L_G95__210);
{
L_ARGS91__213=lisp.values1(L_G96__211);
{
TMP_344=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_345;
let L_X__214;
L_X__214=arguments[0];
TMP_345=lisp.callFunctionWithCallStack(G_41);
return TMP_345;
});
TMP_346=G_43.func(TMP_344,L_ARGS91__213);
L_GENSYMS90__215=lisp.values1(TMP_346);
TMP_347=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE92__216=lisp.values1(TMP_347);
TMP_348=G_19.func(L_STORE92__216);
TMP_349=G_48.func(G_339,L_STORE92__216,L_GENSYMS90__215);
TMP_350=G_48.func(G_107,L_GENSYMS90__215);
TMP_351=lisp.CL_values(L_GENSYMS90__215,L_ARGS91__213,TMP_348,TMP_349,TMP_350);
}
}
}
return TMP_351;
});
lisp.CL_put(G_107,G_37,TMP_343);
TMP_352=lisp.CL_symbolFunction(G_339);
lisp.CL_put(G_107,G_51,TMP_352);
TMP_354=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_356;
let TMP_355;
let L_X__220;
let L_VALUE__219;
L_VALUE__219=arguments[0];
L_X__220=arguments[1];
TMP_355=G_17.func(L_X__220);
TMP_356=G_23.func(TMP_355);
G_32.func(TMP_356,L_VALUE__219);
return lisp.values1(L_VALUE__219);
});
lisp.CL_setSymbolFunction(G_353,TMP_354);
TMP_357=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_365;
let TMP_364;
let TMP_363;
let TMP_362;
let L_STORE100__228;
let TMP_361;
let L_GENSYMS98__227;
let TMP_360;
let TMP_358;
let L_ARGS99__225;
let L_G104__223;
let L_G103__222;
L_G103__222=arguments[0];
{
L_G104__223=lisp.values1(L_G103__222);
{
L_ARGS99__225=lisp.values1(L_G104__223);
{
TMP_358=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_359;
let L_X__226;
L_X__226=arguments[0];
TMP_359=lisp.callFunctionWithCallStack(G_41);
return TMP_359;
});
TMP_360=G_43.func(TMP_358,L_ARGS99__225);
L_GENSYMS98__227=lisp.values1(TMP_360);
TMP_361=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE100__228=lisp.values1(TMP_361);
TMP_362=G_19.func(L_STORE100__228);
TMP_363=G_48.func(G_353,L_STORE100__228,L_GENSYMS98__227);
TMP_364=G_48.func(G_112,L_GENSYMS98__227);
TMP_365=lisp.CL_values(L_GENSYMS98__227,L_ARGS99__225,TMP_362,TMP_363,TMP_364);
}
}
}
return TMP_365;
});
lisp.CL_put(G_112,G_37,TMP_357);
TMP_366=lisp.CL_symbolFunction(G_353);
lisp.CL_put(G_112,G_51,TMP_366);
TMP_368=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_370;
let TMP_369;
let L_X__232;
let L_VALUE__231;
L_VALUE__231=arguments[0];
L_X__232=arguments[1];
TMP_369=G_23.func(L_X__232);
TMP_370=G_23.func(TMP_369);
G_32.func(TMP_370,L_VALUE__231);
return lisp.values1(L_VALUE__231);
});
lisp.CL_setSymbolFunction(G_367,TMP_368);
TMP_371=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_379;
let TMP_378;
let TMP_377;
let TMP_376;
let L_STORE108__240;
let TMP_375;
let L_GENSYMS106__239;
let TMP_374;
let TMP_372;
let L_ARGS107__237;
let L_G112__235;
let L_G111__234;
L_G111__234=arguments[0];
{
L_G112__235=lisp.values1(L_G111__234);
{
L_ARGS107__237=lisp.values1(L_G112__235);
{
TMP_372=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_373;
let L_X__238;
L_X__238=arguments[0];
TMP_373=lisp.callFunctionWithCallStack(G_41);
return TMP_373;
});
TMP_374=G_43.func(TMP_372,L_ARGS107__237);
L_GENSYMS106__239=lisp.values1(TMP_374);
TMP_375=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE108__240=lisp.values1(TMP_375);
TMP_376=G_19.func(L_STORE108__240);
TMP_377=G_48.func(G_367,L_STORE108__240,L_GENSYMS106__239);
TMP_378=G_48.func(G_117,L_GENSYMS106__239);
TMP_379=lisp.CL_values(L_GENSYMS106__239,L_ARGS107__237,TMP_376,TMP_377,TMP_378);
}
}
}
return TMP_379;
});
lisp.CL_put(G_117,G_37,TMP_371);
TMP_380=lisp.CL_symbolFunction(G_367);
lisp.CL_put(G_117,G_51,TMP_380);
TMP_382=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_385;
let TMP_384;
let TMP_383;
let L_X__244;
let L_VALUE__243;
L_VALUE__243=arguments[0];
L_X__244=arguments[1];
TMP_383=G_17.func(L_X__244);
TMP_384=G_17.func(TMP_383);
TMP_385=G_17.func(TMP_384);
G_27.func(TMP_385,L_VALUE__243);
return lisp.values1(L_VALUE__243);
});
lisp.CL_setSymbolFunction(G_381,TMP_382);
TMP_386=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_394;
let TMP_393;
let TMP_392;
let TMP_391;
let L_STORE116__252;
let TMP_390;
let L_GENSYMS114__251;
let TMP_389;
let TMP_387;
let L_ARGS115__249;
let L_G120__247;
let L_G119__246;
L_G119__246=arguments[0];
{
L_G120__247=lisp.values1(L_G119__246);
{
L_ARGS115__249=lisp.values1(L_G120__247);
{
TMP_387=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_388;
let L_X__250;
L_X__250=arguments[0];
TMP_388=lisp.callFunctionWithCallStack(G_41);
return TMP_388;
});
TMP_389=G_43.func(TMP_387,L_ARGS115__249);
L_GENSYMS114__251=lisp.values1(TMP_389);
TMP_390=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE116__252=lisp.values1(TMP_390);
TMP_391=G_19.func(L_STORE116__252);
TMP_392=G_48.func(G_381,L_STORE116__252,L_GENSYMS114__251);
TMP_393=G_48.func(G_122,L_GENSYMS114__251);
TMP_394=lisp.CL_values(L_GENSYMS114__251,L_ARGS115__249,TMP_391,TMP_392,TMP_393);
}
}
}
return TMP_394;
});
lisp.CL_put(G_122,G_37,TMP_386);
TMP_395=lisp.CL_symbolFunction(G_381);
lisp.CL_put(G_122,G_51,TMP_395);
TMP_397=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_400;
let TMP_399;
let TMP_398;
let L_X__256;
let L_VALUE__255;
L_VALUE__255=arguments[0];
L_X__256=arguments[1];
TMP_398=G_23.func(L_X__256);
TMP_399=G_17.func(TMP_398);
TMP_400=G_17.func(TMP_399);
G_27.func(TMP_400,L_VALUE__255);
return lisp.values1(L_VALUE__255);
});
lisp.CL_setSymbolFunction(G_396,TMP_397);
TMP_401=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_409;
let TMP_408;
let TMP_407;
let TMP_406;
let L_STORE124__264;
let TMP_405;
let L_GENSYMS122__263;
let TMP_404;
let TMP_402;
let L_ARGS123__261;
let L_G128__259;
let L_G127__258;
L_G127__258=arguments[0];
{
L_G128__259=lisp.values1(L_G127__258);
{
L_ARGS123__261=lisp.values1(L_G128__259);
{
TMP_402=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_403;
let L_X__262;
L_X__262=arguments[0];
TMP_403=lisp.callFunctionWithCallStack(G_41);
return TMP_403;
});
TMP_404=G_43.func(TMP_402,L_ARGS123__261);
L_GENSYMS122__263=lisp.values1(TMP_404);
TMP_405=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE124__264=lisp.values1(TMP_405);
TMP_406=G_19.func(L_STORE124__264);
TMP_407=G_48.func(G_396,L_STORE124__264,L_GENSYMS122__263);
TMP_408=G_48.func(G_128,L_GENSYMS122__263);
TMP_409=lisp.CL_values(L_GENSYMS122__263,L_ARGS123__261,TMP_406,TMP_407,TMP_408);
}
}
}
return TMP_409;
});
lisp.CL_put(G_128,G_37,TMP_401);
TMP_410=lisp.CL_symbolFunction(G_396);
lisp.CL_put(G_128,G_51,TMP_410);
TMP_412=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_415;
let TMP_414;
let TMP_413;
let L_X__268;
let L_VALUE__267;
L_VALUE__267=arguments[0];
L_X__268=arguments[1];
TMP_413=G_17.func(L_X__268);
TMP_414=G_23.func(TMP_413);
TMP_415=G_17.func(TMP_414);
G_27.func(TMP_415,L_VALUE__267);
return lisp.values1(L_VALUE__267);
});
lisp.CL_setSymbolFunction(G_411,TMP_412);
TMP_416=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_424;
let TMP_423;
let TMP_422;
let TMP_421;
let L_STORE132__276;
let TMP_420;
let L_GENSYMS130__275;
let TMP_419;
let TMP_417;
let L_ARGS131__273;
let L_G136__271;
let L_G135__270;
L_G135__270=arguments[0];
{
L_G136__271=lisp.values1(L_G135__270);
{
L_ARGS131__273=lisp.values1(L_G136__271);
{
TMP_417=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_418;
let L_X__274;
L_X__274=arguments[0];
TMP_418=lisp.callFunctionWithCallStack(G_41);
return TMP_418;
});
TMP_419=G_43.func(TMP_417,L_ARGS131__273);
L_GENSYMS130__275=lisp.values1(TMP_419);
TMP_420=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE132__276=lisp.values1(TMP_420);
TMP_421=G_19.func(L_STORE132__276);
TMP_422=G_48.func(G_411,L_STORE132__276,L_GENSYMS130__275);
TMP_423=G_48.func(G_134,L_GENSYMS130__275);
TMP_424=lisp.CL_values(L_GENSYMS130__275,L_ARGS131__273,TMP_421,TMP_422,TMP_423);
}
}
}
return TMP_424;
});
lisp.CL_put(G_134,G_37,TMP_416);
TMP_425=lisp.CL_symbolFunction(G_411);
lisp.CL_put(G_134,G_51,TMP_425);
TMP_427=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_430;
let TMP_429;
let TMP_428;
let L_X__280;
let L_VALUE__279;
L_VALUE__279=arguments[0];
L_X__280=arguments[1];
TMP_428=G_23.func(L_X__280);
TMP_429=G_23.func(TMP_428);
TMP_430=G_17.func(TMP_429);
G_27.func(TMP_430,L_VALUE__279);
return lisp.values1(L_VALUE__279);
});
lisp.CL_setSymbolFunction(G_426,TMP_427);
TMP_431=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_439;
let TMP_438;
let TMP_437;
let TMP_436;
let L_STORE140__288;
let TMP_435;
let L_GENSYMS138__287;
let TMP_434;
let TMP_432;
let L_ARGS139__285;
let L_G144__283;
let L_G143__282;
L_G143__282=arguments[0];
{
L_G144__283=lisp.values1(L_G143__282);
{
L_ARGS139__285=lisp.values1(L_G144__283);
{
TMP_432=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_433;
let L_X__286;
L_X__286=arguments[0];
TMP_433=lisp.callFunctionWithCallStack(G_41);
return TMP_433;
});
TMP_434=G_43.func(TMP_432,L_ARGS139__285);
L_GENSYMS138__287=lisp.values1(TMP_434);
TMP_435=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE140__288=lisp.values1(TMP_435);
TMP_436=G_19.func(L_STORE140__288);
TMP_437=G_48.func(G_426,L_STORE140__288,L_GENSYMS138__287);
TMP_438=G_48.func(G_140,L_GENSYMS138__287);
TMP_439=lisp.CL_values(L_GENSYMS138__287,L_ARGS139__285,TMP_436,TMP_437,TMP_438);
}
}
}
return TMP_439;
});
lisp.CL_put(G_140,G_37,TMP_431);
TMP_440=lisp.CL_symbolFunction(G_426);
lisp.CL_put(G_140,G_51,TMP_440);
TMP_442=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_445;
let TMP_444;
let TMP_443;
let L_X__292;
let L_VALUE__291;
L_VALUE__291=arguments[0];
L_X__292=arguments[1];
TMP_443=G_17.func(L_X__292);
TMP_444=G_17.func(TMP_443);
TMP_445=G_23.func(TMP_444);
G_27.func(TMP_445,L_VALUE__291);
return lisp.values1(L_VALUE__291);
});
lisp.CL_setSymbolFunction(G_441,TMP_442);
TMP_446=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_454;
let TMP_453;
let TMP_452;
let TMP_451;
let L_STORE148__300;
let TMP_450;
let L_GENSYMS146__299;
let TMP_449;
let TMP_447;
let L_ARGS147__297;
let L_G152__295;
let L_G151__294;
L_G151__294=arguments[0];
{
L_G152__295=lisp.values1(L_G151__294);
{
L_ARGS147__297=lisp.values1(L_G152__295);
{
TMP_447=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_448;
let L_X__298;
L_X__298=arguments[0];
TMP_448=lisp.callFunctionWithCallStack(G_41);
return TMP_448;
});
TMP_449=G_43.func(TMP_447,L_ARGS147__297);
L_GENSYMS146__299=lisp.values1(TMP_449);
TMP_450=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE148__300=lisp.values1(TMP_450);
TMP_451=G_19.func(L_STORE148__300);
TMP_452=G_48.func(G_441,L_STORE148__300,L_GENSYMS146__299);
TMP_453=G_48.func(G_146,L_GENSYMS146__299);
TMP_454=lisp.CL_values(L_GENSYMS146__299,L_ARGS147__297,TMP_451,TMP_452,TMP_453);
}
}
}
return TMP_454;
});
lisp.CL_put(G_146,G_37,TMP_446);
TMP_455=lisp.CL_symbolFunction(G_441);
lisp.CL_put(G_146,G_51,TMP_455);
TMP_457=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_460;
let TMP_459;
let TMP_458;
let L_X__304;
let L_VALUE__303;
L_VALUE__303=arguments[0];
L_X__304=arguments[1];
TMP_458=G_23.func(L_X__304);
TMP_459=G_17.func(TMP_458);
TMP_460=G_23.func(TMP_459);
G_27.func(TMP_460,L_VALUE__303);
return lisp.values1(L_VALUE__303);
});
lisp.CL_setSymbolFunction(G_456,TMP_457);
TMP_461=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_469;
let TMP_468;
let TMP_467;
let TMP_466;
let L_STORE156__312;
let TMP_465;
let L_GENSYMS154__311;
let TMP_464;
let TMP_462;
let L_ARGS155__309;
let L_G160__307;
let L_G159__306;
L_G159__306=arguments[0];
{
L_G160__307=lisp.values1(L_G159__306);
{
L_ARGS155__309=lisp.values1(L_G160__307);
{
TMP_462=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_463;
let L_X__310;
L_X__310=arguments[0];
TMP_463=lisp.callFunctionWithCallStack(G_41);
return TMP_463;
});
TMP_464=G_43.func(TMP_462,L_ARGS155__309);
L_GENSYMS154__311=lisp.values1(TMP_464);
TMP_465=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE156__312=lisp.values1(TMP_465);
TMP_466=G_19.func(L_STORE156__312);
TMP_467=G_48.func(G_456,L_STORE156__312,L_GENSYMS154__311);
TMP_468=G_48.func(G_152,L_GENSYMS154__311);
TMP_469=lisp.CL_values(L_GENSYMS154__311,L_ARGS155__309,TMP_466,TMP_467,TMP_468);
}
}
}
return TMP_469;
});
lisp.CL_put(G_152,G_37,TMP_461);
TMP_470=lisp.CL_symbolFunction(G_456);
lisp.CL_put(G_152,G_51,TMP_470);
TMP_472=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_475;
let TMP_474;
let TMP_473;
let L_X__316;
let L_VALUE__315;
L_VALUE__315=arguments[0];
L_X__316=arguments[1];
TMP_473=G_17.func(L_X__316);
TMP_474=G_23.func(TMP_473);
TMP_475=G_23.func(TMP_474);
G_27.func(TMP_475,L_VALUE__315);
return lisp.values1(L_VALUE__315);
});
lisp.CL_setSymbolFunction(G_471,TMP_472);
TMP_476=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_484;
let TMP_483;
let TMP_482;
let TMP_481;
let L_STORE164__324;
let TMP_480;
let L_GENSYMS162__323;
let TMP_479;
let TMP_477;
let L_ARGS163__321;
let L_G168__319;
let L_G167__318;
L_G167__318=arguments[0];
{
L_G168__319=lisp.values1(L_G167__318);
{
L_ARGS163__321=lisp.values1(L_G168__319);
{
TMP_477=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_478;
let L_X__322;
L_X__322=arguments[0];
TMP_478=lisp.callFunctionWithCallStack(G_41);
return TMP_478;
});
TMP_479=G_43.func(TMP_477,L_ARGS163__321);
L_GENSYMS162__323=lisp.values1(TMP_479);
TMP_480=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE164__324=lisp.values1(TMP_480);
TMP_481=G_19.func(L_STORE164__324);
TMP_482=G_48.func(G_471,L_STORE164__324,L_GENSYMS162__323);
TMP_483=G_48.func(G_158,L_GENSYMS162__323);
TMP_484=lisp.CL_values(L_GENSYMS162__323,L_ARGS163__321,TMP_481,TMP_482,TMP_483);
}
}
}
return TMP_484;
});
lisp.CL_put(G_158,G_37,TMP_476);
TMP_485=lisp.CL_symbolFunction(G_471);
lisp.CL_put(G_158,G_51,TMP_485);
TMP_487=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_490;
let TMP_489;
let TMP_488;
let L_X__328;
let L_VALUE__327;
L_VALUE__327=arguments[0];
L_X__328=arguments[1];
TMP_488=G_23.func(L_X__328);
TMP_489=G_23.func(TMP_488);
TMP_490=G_23.func(TMP_489);
G_27.func(TMP_490,L_VALUE__327);
return lisp.values1(L_VALUE__327);
});
lisp.CL_setSymbolFunction(G_486,TMP_487);
TMP_491=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_499;
let TMP_498;
let TMP_497;
let TMP_496;
let L_STORE172__336;
let TMP_495;
let L_GENSYMS170__335;
let TMP_494;
let TMP_492;
let L_ARGS171__333;
let L_G176__331;
let L_G175__330;
L_G175__330=arguments[0];
{
L_G176__331=lisp.values1(L_G175__330);
{
L_ARGS171__333=lisp.values1(L_G176__331);
{
TMP_492=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_493;
let L_X__334;
L_X__334=arguments[0];
TMP_493=lisp.callFunctionWithCallStack(G_41);
return TMP_493;
});
TMP_494=G_43.func(TMP_492,L_ARGS171__333);
L_GENSYMS170__335=lisp.values1(TMP_494);
TMP_495=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE172__336=lisp.values1(TMP_495);
TMP_496=G_19.func(L_STORE172__336);
TMP_497=G_48.func(G_486,L_STORE172__336,L_GENSYMS170__335);
TMP_498=G_48.func(G_164,L_GENSYMS170__335);
TMP_499=lisp.CL_values(L_GENSYMS170__335,L_ARGS171__333,TMP_496,TMP_497,TMP_498);
}
}
}
return TMP_499;
});
lisp.CL_put(G_164,G_37,TMP_491);
TMP_500=lisp.CL_symbolFunction(G_486);
lisp.CL_put(G_164,G_51,TMP_500);
TMP_502=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_505;
let TMP_504;
let TMP_503;
let L_X__340;
let L_VALUE__339;
L_VALUE__339=arguments[0];
L_X__340=arguments[1];
TMP_503=G_17.func(L_X__340);
TMP_504=G_17.func(TMP_503);
TMP_505=G_17.func(TMP_504);
G_32.func(TMP_505,L_VALUE__339);
return lisp.values1(L_VALUE__339);
});
lisp.CL_setSymbolFunction(G_501,TMP_502);
TMP_506=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_514;
let TMP_513;
let TMP_512;
let TMP_511;
let L_STORE180__348;
let TMP_510;
let L_GENSYMS178__347;
let TMP_509;
let TMP_507;
let L_ARGS179__345;
let L_G184__343;
let L_G183__342;
L_G183__342=arguments[0];
{
L_G184__343=lisp.values1(L_G183__342);
{
L_ARGS179__345=lisp.values1(L_G184__343);
{
TMP_507=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_508;
let L_X__346;
L_X__346=arguments[0];
TMP_508=lisp.callFunctionWithCallStack(G_41);
return TMP_508;
});
TMP_509=G_43.func(TMP_507,L_ARGS179__345);
L_GENSYMS178__347=lisp.values1(TMP_509);
TMP_510=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE180__348=lisp.values1(TMP_510);
TMP_511=G_19.func(L_STORE180__348);
TMP_512=G_48.func(G_501,L_STORE180__348,L_GENSYMS178__347);
TMP_513=G_48.func(G_170,L_GENSYMS178__347);
TMP_514=lisp.CL_values(L_GENSYMS178__347,L_ARGS179__345,TMP_511,TMP_512,TMP_513);
}
}
}
return TMP_514;
});
lisp.CL_put(G_170,G_37,TMP_506);
TMP_515=lisp.CL_symbolFunction(G_501);
lisp.CL_put(G_170,G_51,TMP_515);
TMP_517=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_520;
let TMP_519;
let TMP_518;
let L_X__352;
let L_VALUE__351;
L_VALUE__351=arguments[0];
L_X__352=arguments[1];
TMP_518=G_23.func(L_X__352);
TMP_519=G_17.func(TMP_518);
TMP_520=G_17.func(TMP_519);
G_32.func(TMP_520,L_VALUE__351);
return lisp.values1(L_VALUE__351);
});
lisp.CL_setSymbolFunction(G_516,TMP_517);
TMP_521=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_529;
let TMP_528;
let TMP_527;
let TMP_526;
let L_STORE188__360;
let TMP_525;
let L_GENSYMS186__359;
let TMP_524;
let TMP_522;
let L_ARGS187__357;
let L_G192__355;
let L_G191__354;
L_G191__354=arguments[0];
{
L_G192__355=lisp.values1(L_G191__354);
{
L_ARGS187__357=lisp.values1(L_G192__355);
{
TMP_522=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_523;
let L_X__358;
L_X__358=arguments[0];
TMP_523=lisp.callFunctionWithCallStack(G_41);
return TMP_523;
});
TMP_524=G_43.func(TMP_522,L_ARGS187__357);
L_GENSYMS186__359=lisp.values1(TMP_524);
TMP_525=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE188__360=lisp.values1(TMP_525);
TMP_526=G_19.func(L_STORE188__360);
TMP_527=G_48.func(G_516,L_STORE188__360,L_GENSYMS186__359);
TMP_528=G_48.func(G_176,L_GENSYMS186__359);
TMP_529=lisp.CL_values(L_GENSYMS186__359,L_ARGS187__357,TMP_526,TMP_527,TMP_528);
}
}
}
return TMP_529;
});
lisp.CL_put(G_176,G_37,TMP_521);
TMP_530=lisp.CL_symbolFunction(G_516);
lisp.CL_put(G_176,G_51,TMP_530);
TMP_532=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_535;
let TMP_534;
let TMP_533;
let L_X__364;
let L_VALUE__363;
L_VALUE__363=arguments[0];
L_X__364=arguments[1];
TMP_533=G_17.func(L_X__364);
TMP_534=G_23.func(TMP_533);
TMP_535=G_17.func(TMP_534);
G_32.func(TMP_535,L_VALUE__363);
return lisp.values1(L_VALUE__363);
});
lisp.CL_setSymbolFunction(G_531,TMP_532);
TMP_536=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_544;
let TMP_543;
let TMP_542;
let TMP_541;
let L_STORE196__372;
let TMP_540;
let L_GENSYMS194__371;
let TMP_539;
let TMP_537;
let L_ARGS195__369;
let L_G200__367;
let L_G199__366;
L_G199__366=arguments[0];
{
L_G200__367=lisp.values1(L_G199__366);
{
L_ARGS195__369=lisp.values1(L_G200__367);
{
TMP_537=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_538;
let L_X__370;
L_X__370=arguments[0];
TMP_538=lisp.callFunctionWithCallStack(G_41);
return TMP_538;
});
TMP_539=G_43.func(TMP_537,L_ARGS195__369);
L_GENSYMS194__371=lisp.values1(TMP_539);
TMP_540=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE196__372=lisp.values1(TMP_540);
TMP_541=G_19.func(L_STORE196__372);
TMP_542=G_48.func(G_531,L_STORE196__372,L_GENSYMS194__371);
TMP_543=G_48.func(G_182,L_GENSYMS194__371);
TMP_544=lisp.CL_values(L_GENSYMS194__371,L_ARGS195__369,TMP_541,TMP_542,TMP_543);
}
}
}
return TMP_544;
});
lisp.CL_put(G_182,G_37,TMP_536);
TMP_545=lisp.CL_symbolFunction(G_531);
lisp.CL_put(G_182,G_51,TMP_545);
TMP_547=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_550;
let TMP_549;
let TMP_548;
let L_X__376;
let L_VALUE__375;
L_VALUE__375=arguments[0];
L_X__376=arguments[1];
TMP_548=G_23.func(L_X__376);
TMP_549=G_23.func(TMP_548);
TMP_550=G_17.func(TMP_549);
G_32.func(TMP_550,L_VALUE__375);
return lisp.values1(L_VALUE__375);
});
lisp.CL_setSymbolFunction(G_546,TMP_547);
TMP_551=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_559;
let TMP_558;
let TMP_557;
let TMP_556;
let L_STORE204__384;
let TMP_555;
let L_GENSYMS202__383;
let TMP_554;
let TMP_552;
let L_ARGS203__381;
let L_G208__379;
let L_G207__378;
L_G207__378=arguments[0];
{
L_G208__379=lisp.values1(L_G207__378);
{
L_ARGS203__381=lisp.values1(L_G208__379);
{
TMP_552=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_553;
let L_X__382;
L_X__382=arguments[0];
TMP_553=lisp.callFunctionWithCallStack(G_41);
return TMP_553;
});
TMP_554=G_43.func(TMP_552,L_ARGS203__381);
L_GENSYMS202__383=lisp.values1(TMP_554);
TMP_555=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE204__384=lisp.values1(TMP_555);
TMP_556=G_19.func(L_STORE204__384);
TMP_557=G_48.func(G_546,L_STORE204__384,L_GENSYMS202__383);
TMP_558=G_48.func(G_188,L_GENSYMS202__383);
TMP_559=lisp.CL_values(L_GENSYMS202__383,L_ARGS203__381,TMP_556,TMP_557,TMP_558);
}
}
}
return TMP_559;
});
lisp.CL_put(G_188,G_37,TMP_551);
TMP_560=lisp.CL_symbolFunction(G_546);
lisp.CL_put(G_188,G_51,TMP_560);
TMP_562=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_565;
let TMP_564;
let TMP_563;
let L_X__388;
let L_VALUE__387;
L_VALUE__387=arguments[0];
L_X__388=arguments[1];
TMP_563=G_17.func(L_X__388);
TMP_564=G_17.func(TMP_563);
TMP_565=G_23.func(TMP_564);
G_32.func(TMP_565,L_VALUE__387);
return lisp.values1(L_VALUE__387);
});
lisp.CL_setSymbolFunction(G_561,TMP_562);
TMP_566=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_574;
let TMP_573;
let TMP_572;
let TMP_571;
let L_STORE212__396;
let TMP_570;
let L_GENSYMS210__395;
let TMP_569;
let TMP_567;
let L_ARGS211__393;
let L_G216__391;
let L_G215__390;
L_G215__390=arguments[0];
{
L_G216__391=lisp.values1(L_G215__390);
{
L_ARGS211__393=lisp.values1(L_G216__391);
{
TMP_567=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_568;
let L_X__394;
L_X__394=arguments[0];
TMP_568=lisp.callFunctionWithCallStack(G_41);
return TMP_568;
});
TMP_569=G_43.func(TMP_567,L_ARGS211__393);
L_GENSYMS210__395=lisp.values1(TMP_569);
TMP_570=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE212__396=lisp.values1(TMP_570);
TMP_571=G_19.func(L_STORE212__396);
TMP_572=G_48.func(G_561,L_STORE212__396,L_GENSYMS210__395);
TMP_573=G_48.func(G_194,L_GENSYMS210__395);
TMP_574=lisp.CL_values(L_GENSYMS210__395,L_ARGS211__393,TMP_571,TMP_572,TMP_573);
}
}
}
return TMP_574;
});
lisp.CL_put(G_194,G_37,TMP_566);
TMP_575=lisp.CL_symbolFunction(G_561);
lisp.CL_put(G_194,G_51,TMP_575);
TMP_577=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_580;
let TMP_579;
let TMP_578;
let L_X__400;
let L_VALUE__399;
L_VALUE__399=arguments[0];
L_X__400=arguments[1];
TMP_578=G_23.func(L_X__400);
TMP_579=G_17.func(TMP_578);
TMP_580=G_23.func(TMP_579);
G_32.func(TMP_580,L_VALUE__399);
return lisp.values1(L_VALUE__399);
});
lisp.CL_setSymbolFunction(G_576,TMP_577);
TMP_581=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_589;
let TMP_588;
let TMP_587;
let TMP_586;
let L_STORE220__408;
let TMP_585;
let L_GENSYMS218__407;
let TMP_584;
let TMP_582;
let L_ARGS219__405;
let L_G224__403;
let L_G223__402;
L_G223__402=arguments[0];
{
L_G224__403=lisp.values1(L_G223__402);
{
L_ARGS219__405=lisp.values1(L_G224__403);
{
TMP_582=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_583;
let L_X__406;
L_X__406=arguments[0];
TMP_583=lisp.callFunctionWithCallStack(G_41);
return TMP_583;
});
TMP_584=G_43.func(TMP_582,L_ARGS219__405);
L_GENSYMS218__407=lisp.values1(TMP_584);
TMP_585=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE220__408=lisp.values1(TMP_585);
TMP_586=G_19.func(L_STORE220__408);
TMP_587=G_48.func(G_576,L_STORE220__408,L_GENSYMS218__407);
TMP_588=G_48.func(G_200,L_GENSYMS218__407);
TMP_589=lisp.CL_values(L_GENSYMS218__407,L_ARGS219__405,TMP_586,TMP_587,TMP_588);
}
}
}
return TMP_589;
});
lisp.CL_put(G_200,G_37,TMP_581);
TMP_590=lisp.CL_symbolFunction(G_576);
lisp.CL_put(G_200,G_51,TMP_590);
TMP_592=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_595;
let TMP_594;
let TMP_593;
let L_X__412;
let L_VALUE__411;
L_VALUE__411=arguments[0];
L_X__412=arguments[1];
TMP_593=G_17.func(L_X__412);
TMP_594=G_23.func(TMP_593);
TMP_595=G_23.func(TMP_594);
G_32.func(TMP_595,L_VALUE__411);
return lisp.values1(L_VALUE__411);
});
lisp.CL_setSymbolFunction(G_591,TMP_592);
TMP_596=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_604;
let TMP_603;
let TMP_602;
let TMP_601;
let L_STORE228__420;
let TMP_600;
let L_GENSYMS226__419;
let TMP_599;
let TMP_597;
let L_ARGS227__417;
let L_G232__415;
let L_G231__414;
L_G231__414=arguments[0];
{
L_G232__415=lisp.values1(L_G231__414);
{
L_ARGS227__417=lisp.values1(L_G232__415);
{
TMP_597=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_598;
let L_X__418;
L_X__418=arguments[0];
TMP_598=lisp.callFunctionWithCallStack(G_41);
return TMP_598;
});
TMP_599=G_43.func(TMP_597,L_ARGS227__417);
L_GENSYMS226__419=lisp.values1(TMP_599);
TMP_600=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE228__420=lisp.values1(TMP_600);
TMP_601=G_19.func(L_STORE228__420);
TMP_602=G_48.func(G_591,L_STORE228__420,L_GENSYMS226__419);
TMP_603=G_48.func(G_206,L_GENSYMS226__419);
TMP_604=lisp.CL_values(L_GENSYMS226__419,L_ARGS227__417,TMP_601,TMP_602,TMP_603);
}
}
}
return TMP_604;
});
lisp.CL_put(G_206,G_37,TMP_596);
TMP_605=lisp.CL_symbolFunction(G_591);
lisp.CL_put(G_206,G_51,TMP_605);
TMP_607=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_610;
let TMP_609;
let TMP_608;
let L_X__424;
let L_VALUE__423;
L_VALUE__423=arguments[0];
L_X__424=arguments[1];
TMP_608=G_23.func(L_X__424);
TMP_609=G_23.func(TMP_608);
TMP_610=G_23.func(TMP_609);
G_32.func(TMP_610,L_VALUE__423);
return lisp.values1(L_VALUE__423);
});
lisp.CL_setSymbolFunction(G_606,TMP_607);
TMP_611=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_619;
let TMP_618;
let TMP_617;
let TMP_616;
let L_STORE236__432;
let TMP_615;
let L_GENSYMS234__431;
let TMP_614;
let TMP_612;
let L_ARGS235__429;
let L_G240__427;
let L_G239__426;
L_G239__426=arguments[0];
{
L_G240__427=lisp.values1(L_G239__426);
{
L_ARGS235__429=lisp.values1(L_G240__427);
{
TMP_612=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_613;
let L_X__430;
L_X__430=arguments[0];
TMP_613=lisp.callFunctionWithCallStack(G_41);
return TMP_613;
});
TMP_614=G_43.func(TMP_612,L_ARGS235__429);
L_GENSYMS234__431=lisp.values1(TMP_614);
TMP_615=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE236__432=lisp.values1(TMP_615);
TMP_616=G_19.func(L_STORE236__432);
TMP_617=G_48.func(G_606,L_STORE236__432,L_GENSYMS234__431);
TMP_618=G_48.func(G_212,L_GENSYMS234__431);
TMP_619=lisp.CL_values(L_GENSYMS234__431,L_ARGS235__429,TMP_616,TMP_617,TMP_618);
}
}
}
return TMP_619;
});
lisp.CL_put(G_212,G_37,TMP_611);
TMP_620=lisp.CL_symbolFunction(G_606);
lisp.CL_put(G_212,G_51,TMP_620);
CL_COMMON_LISP_COPY_TREE.lisp_name = 'COPY-TREE'
lisp.setSymbolFunction(G_622, CL_COMMON_LISP_COPY_TREE);
CL_COMMON_LISP_APPLY_KEY.lisp_name = 'APPLY-KEY'
lisp.setSymbolFunction(G_631, CL_COMMON_LISP_APPLY_KEY);
CL_COMMON_LISP_SUBLIS.lisp_name = 'SUBLIS'
lisp.setSymbolFunction(G_636, CL_COMMON_LISP_SUBLIS);
CL_COMMON_LISP_NSUBLIS.lisp_name = 'NSUBLIS'
lisp.setSymbolFunction(G_672, CL_COMMON_LISP_NSUBLIS);
CL_COMMON_LISP_SUBST.lisp_name = 'SUBST'
lisp.setSymbolFunction(G_697, CL_COMMON_LISP_SUBST);
CL_COMMON_LISP_SUBST_IF.lisp_name = 'SUBST-IF'
lisp.setSymbolFunction(G_727, CL_COMMON_LISP_SUBST_IF);
CL_COMMON_LISP_SUBST_IF_NOT.lisp_name = 'SUBST-IF-NOT'
lisp.setSymbolFunction(G_749, CL_COMMON_LISP_SUBST_IF_NOT);
CL_COMMON_LISP_NSUBST.lisp_name = 'NSUBST'
lisp.setSymbolFunction(G_756, CL_COMMON_LISP_NSUBST);
CL_COMMON_LISP_NSUBST_IF.lisp_name = 'NSUBST-IF'
lisp.setSymbolFunction(G_778, CL_COMMON_LISP_NSUBST_IF);
CL_COMMON_LISP_NSUBST_IF_NOT.lisp_name = 'NSUBST-IF-NOT'
lisp.setSymbolFunction(G_793, CL_COMMON_LISP_NSUBST_IF_NOT);
CL_COMMON_LISP_TREE_EQUAL.lisp_name = 'TREE-EQUAL'
lisp.setSymbolFunction(G_799, CL_COMMON_LISP_TREE_EQUAL);
CL_COMMON_LISP_COPY_LIST.lisp_name = 'COPY-LIST'
lisp.setSymbolFunction(G_828, CL_COMMON_LISP_COPY_LIST);
CL_COMMON_LISP_LIST.lisp_name = 'LIST'
lisp.setSymbolFunction(G_19, CL_COMMON_LISP_LIST);
CL_COMMON_LISP_LISTSTAR.lisp_name = 'LIST*'
lisp.setSymbolFunction(G_48, CL_COMMON_LISP_LISTSTAR);
CL_COMMON_LISP_LIST_LENGTH.lisp_name = 'LIST-LENGTH'
lisp.setSymbolFunction(G_851, CL_COMMON_LISP_LIST_LENGTH);
CL_COMMON_LISP_MAKE_LIST.lisp_name = 'MAKE-LIST'
lisp.setSymbolFunction(G_866, CL_COMMON_LISP_MAKE_LIST);
CL_COMMON_LISP_FIRST.lisp_name = 'FIRST'
lisp.setSymbolFunction(G_890, CL_COMMON_LISP_FIRST);
CL_COMMON_LISP_SECOND.lisp_name = 'SECOND'
lisp.setSymbolFunction(G_893, CL_COMMON_LISP_SECOND);
CL_COMMON_LISP_THIRD.lisp_name = 'THIRD'
lisp.setSymbolFunction(G_897, CL_COMMON_LISP_THIRD);
CL_COMMON_LISP_FOURTH.lisp_name = 'FOURTH'
lisp.setSymbolFunction(G_900, CL_COMMON_LISP_FOURTH);
CL_COMMON_LISP_FIFTH.lisp_name = 'FIFTH'
lisp.setSymbolFunction(G_903, CL_COMMON_LISP_FIFTH);
CL_COMMON_LISP_SIXTH.lisp_name = 'SIXTH'
lisp.setSymbolFunction(G_906, CL_COMMON_LISP_SIXTH);
CL_COMMON_LISP_SEVENTH.lisp_name = 'SEVENTH'
lisp.setSymbolFunction(G_909, CL_COMMON_LISP_SEVENTH);
CL_COMMON_LISP_EIGHTH.lisp_name = 'EIGHTH'
lisp.setSymbolFunction(G_912, CL_COMMON_LISP_EIGHTH);
CL_COMMON_LISP_NINTH.lisp_name = 'NINTH'
lisp.setSymbolFunction(G_915, CL_COMMON_LISP_NINTH);
CL_COMMON_LISP_TENTH.lisp_name = 'TENTH'
lisp.setSymbolFunction(G_918, CL_COMMON_LISP_TENTH);
lisp.CL_put(G_890,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(0, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_893,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(1, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_897,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(2, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_900,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(3, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_903,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(4, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_906,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(5, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_909,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(6, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_912,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(7, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_915,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(8, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
lisp.CL_put(G_918,G_37,lisp.makeCons(lisp.makeCons(G_19, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_920, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_921, lisp.makeCons(lisp.makeCons(G_922, lisp.makeCons(lisp.makeCons(G_895, lisp.makeCons(9, lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_923, lisp.makeCons(G_920, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.S_nil))));
CL_COMMON_LISP_NTH.lisp_name = 'NTH'
lisp.setSymbolFunction(G_895, CL_COMMON_LISP_NTH);
CL_COMMON_LISP_SET_NTH.lisp_name = 'SET-NTH'
lisp.setSymbolFunction(G_932, CL_COMMON_LISP_SET_NTH);
lisp.CL_put(G_895,G_37,G_932);
CL_COMMON_LISP_ENDP.lisp_name = 'ENDP'
lisp.setSymbolFunction(G_853, CL_COMMON_LISP_ENDP);
CL_COMMON_LISP_NCONC.lisp_name = 'NCONC'
lisp.setSymbolFunction(G_942, CL_COMMON_LISP_NCONC);
CL_COMMON_LISP_APPEND.lisp_name = 'APPEND'
lisp.setSymbolFunction(G_949, CL_COMMON_LISP_APPEND);
CL_COMMON_LISP_REVAPPEND.lisp_name = 'REVAPPEND'
lisp.setSymbolFunction(G_972, CL_COMMON_LISP_REVAPPEND);
CL_COMMON_LISP_NRECONC.lisp_name = 'NRECONC'
lisp.setSymbolFunction(G_977, CL_COMMON_LISP_NRECONC);
CL_COMMON_LISP_BUTLAST.lisp_name = 'BUTLAST'
lisp.setSymbolFunction(G_981, CL_COMMON_LISP_BUTLAST);
CL_COMMON_LISP_NBUTLIST_NTHCDR.lisp_name = 'NBUTLIST-NTHCDR'
lisp.setSymbolFunction(G_994, CL_COMMON_LISP_NBUTLIST_NTHCDR);
CL_COMMON_LISP_NBUTLAST.lisp_name = 'NBUTLAST'
lisp.setSymbolFunction(G_1000, CL_COMMON_LISP_NBUTLAST);
CL_COMMON_LISP_LAST1.lisp_name = 'LAST1'
lisp.setSymbolFunction(G_1018, CL_COMMON_LISP_LAST1);
CL_COMMON_LISP_LAST.lisp_name = 'LAST'
lisp.setSymbolFunction(G_947, CL_COMMON_LISP_LAST);
CL_COMMON_LISP_LDIFF.lisp_name = 'LDIFF'
lisp.setSymbolFunction(G_1036, CL_COMMON_LISP_LDIFF);
CL_COMMON_LISP_TAILP.lisp_name = 'TAILP'
lisp.setSymbolFunction(G_1052, CL_COMMON_LISP_TAILP);
CL_COMMON_LISP_NTHCDR.lisp_name = 'NTHCDR'
lisp.setSymbolFunction(G_1059, CL_COMMON_LISP_NTHCDR);
CL_COMMON_LISP_REST.lisp_name = 'REST'
lisp.setSymbolFunction(G_958, CL_COMMON_LISP_REST);
lisp.CL_put(G_958,G_37,G_32);
CL_COMMON_LISP_PROCESS_LIST.lisp_name = 'PROCESS-LIST'
lisp.setSymbolFunction(G_1069, CL_COMMON_LISP_PROCESS_LIST);
CL_COMMON_LISP_MEMBER.lisp_name = 'MEMBER'
lisp.setSymbolFunction(G_1082, CL_COMMON_LISP_MEMBER);
CL_COMMON_LISP_MEMBER_IF.lisp_name = 'MEMBER-IF'
lisp.setSymbolFunction(G_1092, CL_COMMON_LISP_MEMBER_IF);
CL_COMMON_LISP_MEMBER_IF_NOT.lisp_name = 'MEMBER-IF-NOT'
lisp.setSymbolFunction(G_1101, CL_COMMON_LISP_MEMBER_IF_NOT);
CL_COMMON_LISP_MAPC.lisp_name = 'MAPC'
lisp.setSymbolFunction(G_1108, CL_COMMON_LISP_MAPC);
CL_COMMON_LISP_MAPCAR.lisp_name = 'MAPCAR'
lisp.setSymbolFunction(G_1127, CL_COMMON_LISP_MAPCAR);
CL_SYSTEM_PERCENTMAPCAR.lisp_name = '%MAPCAR'
lisp.setSymbolFunction(G_43, CL_SYSTEM_PERCENTMAPCAR);
CL_COMMON_LISP_MAPCAN.lisp_name = 'MAPCAN'
lisp.setSymbolFunction(G_1163, CL_COMMON_LISP_MAPCAN);
CL_COMMON_LISP_MAPL.lisp_name = 'MAPL'
lisp.setSymbolFunction(G_1183, CL_COMMON_LISP_MAPL);
CL_COMMON_LISP_MAPLIST.lisp_name = 'MAPLIST'
lisp.setSymbolFunction(G_1201, CL_COMMON_LISP_MAPLIST);
CL_COMMON_LISP_MAPCON.lisp_name = 'MAPCON'
lisp.setSymbolFunction(G_1226, CL_COMMON_LISP_MAPCON);
CL_COMMON_LISP_ACONS.lisp_name = 'ACONS'
lisp.setSymbolFunction(G_1246, CL_COMMON_LISP_ACONS);
CL_COMMON_LISP_ASSOC.lisp_name = 'ASSOC'
lisp.setSymbolFunction(G_653, CL_COMMON_LISP_ASSOC);
CL_COMMON_LISP_ASSOC_IF.lisp_name = 'ASSOC-IF'
lisp.setSymbolFunction(G_1267, CL_COMMON_LISP_ASSOC_IF);
CL_COMMON_LISP_ASSOC_IF_NOT.lisp_name = 'ASSOC-IF-NOT'
lisp.setSymbolFunction(G_1278, CL_COMMON_LISP_ASSOC_IF_NOT);
CL_COMMON_LISP_COPY_ALIST.lisp_name = 'COPY-ALIST'
lisp.setSymbolFunction(G_1284, CL_COMMON_LISP_COPY_ALIST);
CL_COMMON_LISP_PAIRLIS.lisp_name = 'PAIRLIS'
lisp.setSymbolFunction(G_1297, CL_COMMON_LISP_PAIRLIS);
CL_COMMON_LISP_RASSOC.lisp_name = 'RASSOC'
lisp.setSymbolFunction(G_1311, CL_COMMON_LISP_RASSOC);
CL_COMMON_LISP_RASSOC_IF.lisp_name = 'RASSOC-IF'
lisp.setSymbolFunction(G_1329, CL_COMMON_LISP_RASSOC_IF);
CL_COMMON_LISP_RASSOC_IF_NOT.lisp_name = 'RASSOC-IF-NOT'
lisp.setSymbolFunction(G_1340, CL_COMMON_LISP_RASSOC_IF_NOT);
CL_COMMON_LISP_GET_PROPERTIES.lisp_name = 'GET-PROPERTIES'
lisp.setSymbolFunction(G_1346, CL_COMMON_LISP_GET_PROPERTIES);
CL_COMMON_LISP_GETF.lisp_name = 'GETF'
lisp.setSymbolFunction(G_1356, CL_COMMON_LISP_GETF);
CL_COMMON_LISP_PERCENTPUTF.lisp_name = '%PUTF'
lisp.setSymbolFunction(G_1363, CL_COMMON_LISP_PERCENTPUTF);
TMP_1369=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1395;
let TMP_1393;
let TMP_1391;
let TMP_1375;
let L_DEFAULT__1058;
let TMP_1374;
let L_G691__1057;
let TMP_1373;
let L_INDICATOR__1056;
let TMP_1372;
let L_G690__1055;
let TMP_1371;
let L_PLACE__1054;
let TMP_1370;
let L_G688__1052;
let L_G687__1051;
L_G687__1051=arguments[0];
{
L_G688__1052=lisp.values1(L_G687__1051);
{
TMP_1370=G_890.func(L_G688__1052);
L_PLACE__1054=lisp.values1(TMP_1370);
TMP_1371=G_958.func(L_G688__1052);
L_G690__1055=lisp.values1(TMP_1371);
TMP_1372=G_890.func(L_G690__1055);
L_INDICATOR__1056=lisp.values1(TMP_1372);
TMP_1373=G_958.func(L_G690__1055);
L_G691__1057=lisp.values1(TMP_1373);
TMP_1374=G_890.func(L_G691__1057);
L_DEFAULT__1058=lisp.values1(TMP_1374);
TMP_1375=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1390;
let TMP_1389;
let TMP_1388;
let TMP_1387;
let TMP_1386;
let TMP_1385;
let TMP_1384;
let TMP_1382;
let TMP_1381;
let TMP_1380;
let TMP_1379;
let TMP_1378;
let L_STORE__1067;
let TMP_1377;
let L_NEWVAL__1066;
let TMP_1376;
let L_G693__1065;
let L_ACCESS_FORM__1064;
let L_STORE_FORM__1063;
let L_STORES__1062;
let L_VALS__1061;
let L_VARS__1060;
L_VARS__1060=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALS__1061=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_STORES__1062=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_STORE_FORM__1063=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_ACCESS_FORM__1064=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G693__1065=lisp.jsArrayToList(arguments, 5);
{
TMP_1376=lisp.callFunctionWithCallStack(G_41);
L_NEWVAL__1066=lisp.values1(TMP_1376);
TMP_1377=lisp.callFunctionWithCallStack(G_41);
L_STORE__1067=lisp.values1(TMP_1377);
TMP_1378=G_19.func(L_NEWVAL__1066);
TMP_1379=G_949.func(L_VARS__1060,TMP_1378);
TMP_1380=G_19.func(L_INDICATOR__1056);
TMP_1381=G_949.func(L_VALS__1061,TMP_1380);
TMP_1382=G_19.func(L_STORE__1067);
TMP_1384=G_17.func(L_STORES__1062);
TMP_1385=G_19.func(G_1363,L_ACCESS_FORM__1064,L_STORE__1067,L_NEWVAL__1066);
TMP_1386=G_19.func(TMP_1384,TMP_1385);
TMP_1387=G_19.func(TMP_1386);
TMP_1388=G_19.func(G_1383,TMP_1387,L_STORE_FORM__1063,L_STORE__1067);
TMP_1389=G_19.func(G_1356,L_ACCESS_FORM__1064,L_NEWVAL__1066,L_DEFAULT__1058);
TMP_1390=lisp.CL_values(TMP_1379,TMP_1381,TMP_1382,TMP_1388,TMP_1389);
}
return TMP_1390;
});
TMP_1391=lisp.callFunctionWithCallStack(G_1392,TMP_1375);
TMP_1393=lisp.callFunctionWithCallStack(G_1394,L_PLACE__1054);
TMP_1395=lisp.CL_multipleValueCall(TMP_1391,TMP_1393);
}
}
return TMP_1395;
});
lisp.CL_put(G_1356,G_37,TMP_1369);
CL_COMMON_LISP_PERCENTREMF.lisp_name = '%REMF'
lisp.setSymbolFunction(G_1397, CL_COMMON_LISP_PERCENTREMF);
CL_COMMON_LISP_MEMBER_AUX.lisp_name = 'MEMBER-AUX'
lisp.setSymbolFunction(G_1410, CL_COMMON_LISP_MEMBER_AUX);
CL_COMMON_LISP_INTERSECTION.lisp_name = 'INTERSECTION'
lisp.setSymbolFunction(G_1418, CL_COMMON_LISP_INTERSECTION);
CL_COMMON_LISP_NINTERSECTION.lisp_name = 'NINTERSECTION'
lisp.setSymbolFunction(G_1430, CL_COMMON_LISP_NINTERSECTION);
CL_COMMON_LISP_ADJOIN.lisp_name = 'ADJOIN'
lisp.setSymbolFunction(G_1444, CL_COMMON_LISP_ADJOIN);
CL_COMMON_LISP_SET_DIFFERENCE.lisp_name = 'SET-DIFFERENCE'
lisp.setSymbolFunction(G_1459, CL_COMMON_LISP_SET_DIFFERENCE);
CL_COMMON_LISP_NSET_DIFFERENCE.lisp_name = 'NSET-DIFFERENCE'
lisp.setSymbolFunction(G_1471, CL_COMMON_LISP_NSET_DIFFERENCE);
CL_COMMON_LISP_SET_EXCLUSIVE_OR.lisp_name = 'SET-EXCLUSIVE-OR'
lisp.setSymbolFunction(G_1483, CL_COMMON_LISP_SET_EXCLUSIVE_OR);
CL_COMMON_LISP_NSET_EXCLUSIVE_OR.lisp_name = 'NSET-EXCLUSIVE-OR'
lisp.setSymbolFunction(G_1494, CL_COMMON_LISP_NSET_EXCLUSIVE_OR);
CL_COMMON_LISP_SUBSETP.lisp_name = 'SUBSETP'
lisp.setSymbolFunction(G_1506, CL_COMMON_LISP_SUBSETP);
CL_COMMON_LISP_UNION.lisp_name = 'UNION'
lisp.setSymbolFunction(G_1517, CL_COMMON_LISP_UNION);
CL_COMMON_LISP_NUNION.lisp_name = 'NUNION'
lisp.setSymbolFunction(G_1529, CL_COMMON_LISP_NUNION);
TMP_1541=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1564;
let TMP_1563;
let TMP_1562;
let TMP_1553;
let L_G763__1218;
let TMP_1552;
let L_PLACE__1217;
let TMP_1551;
let L_G762__1216;
let TMP_1550;
let L_OBJ__1215;
let TMP_1549;
let L_G761__1214;
let TMP_1548;
let TMP_1545;
let TMP_1544;
let TMP_1542;
let L_G760__1213;
let L_G275__1212;
L_G275__1212=lisp.jsArrayToList(arguments, 0);
{
L_G760__1213=lisp.values1(L_G275__1212);
{
TMP_1542=lisp.callFunctionWithCallStack(G_1543,L_G760__1213);
TMP_1544=lisp.callFunctionWithCallStack(G_873,2,TMP_1542,2);
if(lisp.values1(TMP_1544) !== lisp.S_nil){
TMP_1545=lisp.values1(lisp.S_nil);
}else{
TMP_1548=lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1546, lisp.makeCons(G_1547, lisp.S_nil)),L_G760__1213);
TMP_1545=lisp.values1(lisp.values1(TMP_1548));
}
L_G761__1214=lisp.values1(TMP_1545);
TMP_1549=G_890.func(L_G760__1213);
L_OBJ__1215=lisp.values1(TMP_1549);
TMP_1550=G_958.func(L_G760__1213);
L_G762__1216=lisp.values1(TMP_1550);
TMP_1551=G_890.func(L_G762__1216);
L_PLACE__1217=lisp.values1(TMP_1551);
TMP_1552=G_958.func(L_G762__1216);
L_G763__1218=lisp.values1(TMP_1552);
TMP_1553=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1561;
let TMP_1560;
let TMP_1559;
let TMP_1558;
let TMP_1557;
let TMP_1556;
let TMP_1555;
let L_G764__1224;
let L_ACCESS_FORM__1223;
let L_STORE_FORM__1222;
let L_STORES__1221;
let L_VALS__1220;
let L_VARS__1219;
L_VARS__1219=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALS__1220=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_STORES__1221=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_STORE_FORM__1222=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_ACCESS_FORM__1223=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G764__1224=lisp.jsArrayToList(arguments, 5);
TMP_1555=lisp.CL_symbolFunction(G_19);
TMP_1556=G_949.func(L_VARS__1219,L_STORES__1221);
TMP_1557=G_19.func(G_29,L_OBJ__1215,L_ACCESS_FORM__1223);
TMP_1558=G_19.func(TMP_1557);
TMP_1559=G_949.func(L_VALS__1220,TMP_1558);
TMP_1560=G_1127.func(TMP_1555,TMP_1556,TMP_1559);
TMP_1561=G_19.func(G_1554,TMP_1560,L_STORE_FORM__1222);
return TMP_1561;
});
TMP_1562=lisp.callFunctionWithCallStack(G_1392,TMP_1553);
TMP_1563=lisp.callFunctionWithCallStack(G_1394,L_PLACE__1217);
TMP_1564=lisp.CL_multipleValueCall(TMP_1562,TMP_1563);
}
}
return TMP_1564;
});
lisp.CL_put(G_887,G_1540,TMP_1541);
TMP_1565=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1585;
let TMP_1584;
let TMP_1583;
let TMP_1572;
let L_G767__1229;
let TMP_1571;
let L_PLACE__1228;
let TMP_1570;
let L_G766__1227;
let TMP_1569;
let TMP_1568;
let TMP_1567;
let TMP_1566;
let L_G765__1226;
let L_G276__1225;
L_G276__1225=lisp.jsArrayToList(arguments, 0);
{
L_G765__1226=lisp.values1(L_G276__1225);
{
TMP_1566=lisp.callFunctionWithCallStack(G_1543,L_G765__1226);
TMP_1567=lisp.callFunctionWithCallStack(G_873,1,TMP_1566,1);
if(lisp.values1(TMP_1567) !== lisp.S_nil){
TMP_1568=lisp.values1(lisp.S_nil);
}else{
TMP_1569=lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1547, lisp.S_nil),L_G765__1226);
TMP_1568=lisp.values1(lisp.values1(TMP_1569));
}
L_G766__1227=lisp.values1(TMP_1568);
TMP_1570=G_890.func(L_G765__1226);
L_PLACE__1228=lisp.values1(TMP_1570);
TMP_1571=G_958.func(L_G765__1226);
L_G767__1229=lisp.values1(TMP_1571);
TMP_1572=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1582;
let TMP_1581;
let TMP_1580;
let TMP_1578;
let TMP_1577;
let TMP_1576;
let TMP_1575;
let TMP_1574;
let TMP_1573;
let L_G768__1235;
let L_ACCESS_FORM__1234;
let L_STORE_FORM__1233;
let L_STORES__1232;
let L_VALS__1231;
let L_VARS__1230;
L_VARS__1230=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALS__1231=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_STORES__1232=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_STORE_FORM__1233=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_ACCESS_FORM__1234=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G768__1235=lisp.jsArrayToList(arguments, 5);
TMP_1573=lisp.CL_symbolFunction(G_19);
TMP_1574=G_949.func(L_VARS__1230,L_STORES__1232);
TMP_1575=G_19.func(G_23,L_ACCESS_FORM__1234);
TMP_1576=G_19.func(TMP_1575);
TMP_1577=G_949.func(L_VALS__1231,TMP_1576);
TMP_1578=G_1127.func(TMP_1573,TMP_1574,TMP_1577);
TMP_1580=G_19.func(G_17,L_ACCESS_FORM__1234);
TMP_1581=G_19.func(G_1579,TMP_1580,L_STORE_FORM__1233);
TMP_1582=G_19.func(G_1554,TMP_1578,TMP_1581);
return TMP_1582;
});
TMP_1583=lisp.callFunctionWithCallStack(G_1392,TMP_1572);
TMP_1584=lisp.callFunctionWithCallStack(G_1394,L_PLACE__1228);
TMP_1585=lisp.CL_multipleValueCall(TMP_1583,TMP_1584);
}
}
return TMP_1585;
});
lisp.CL_put(G_888,G_1540,TMP_1565);
TMP_1586=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1615;
let TMP_1614;
let TMP_1613;
let TMP_1612;
let TMP_1611;
let TMP_1610;
let TMP_1609;
let TMP_1608;
let TMP_1607;
let TMP_1603;
let TMP_1602;
let TMP_1601;
let L_G_TAIL__1244;
let TMP_1600;
let L_G_HEAD__1243;
let TMP_1599;
let L_BODY__1242;
let L_G773__1241;
let TMP_1598;
let L_G772__1240;
let TMP_1597;
let TMP_1596;
let TMP_1595;
let TMP_1594;
let L_G771__1239;
let TMP_1593;
let L_G770__1238;
let TMP_1592;
let TMP_1589;
let TMP_1588;
let TMP_1587;
let L_G769__1237;
let L_G426__1236;
L_G426__1236=lisp.jsArrayToList(arguments, 0);
{
L_G769__1237=lisp.values1(L_G426__1236);
{
TMP_1587=lisp.callFunctionWithCallStack(G_1543,L_G769__1237);
TMP_1588=lisp.callFunctionWithCallStack(G_873,1,TMP_1587);
if(lisp.values1(TMP_1588) !== lisp.S_nil){
TMP_1589=lisp.values1(lisp.S_nil);
}else{
TMP_1592=lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.S_nil, lisp.makeCons(G_1590, lisp.makeCons(G_1591, lisp.S_nil))),L_G769__1237);
TMP_1589=lisp.values1(lisp.values1(TMP_1592));
}
L_G770__1238=lisp.values1(TMP_1589);
TMP_1593=G_890.func(L_G769__1237);
L_G771__1239=lisp.values1(TMP_1593);
TMP_1594=lisp.callFunctionWithCallStack(G_1543,L_G771__1239);
TMP_1595=lisp.callFunctionWithCallStack(G_873,0,TMP_1594,0);
if(lisp.values1(TMP_1595) !== lisp.S_nil){
TMP_1596=lisp.values1(lisp.S_nil);
}else{
TMP_1597=lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.S_nil,L_G771__1239);
TMP_1596=lisp.values1(lisp.values1(TMP_1597));
}
L_G772__1240=lisp.values1(TMP_1596);
TMP_1598=G_958.func(L_G769__1237);
L_G773__1241=lisp.values1(TMP_1598);
L_BODY__1242=lisp.values1(L_G773__1241);
{
TMP_1599=lisp.callFunctionWithCallStack(G_41);
L_G_HEAD__1243=lisp.values1(TMP_1599);
TMP_1600=lisp.callFunctionWithCallStack(G_41);
L_G_TAIL__1244=lisp.values1(TMP_1600);
TMP_1601=lisp.CL_cons(L_G_HEAD__1243,lisp.makeCons(lisp.makeCons(G_19, lisp.makeCons(lisp.S_nil, lisp.S_nil)), lisp.S_nil));
TMP_1602=G_19.func(L_G_TAIL__1244,L_G_HEAD__1243);
TMP_1603=G_19.func(TMP_1601,TMP_1602);
TMP_1607=G_19.func(G_23,L_G_TAIL__1244);
TMP_1608=G_48.func(G_922,TMP_1607,lisp.makeCons(lisp.makeCons(G_19, lisp.makeCons(G_1606, lisp.S_nil)), lisp.S_nil));
TMP_1609=G_19.func(G_23,L_G_TAIL__1244);
TMP_1610=G_19.func(G_922,L_G_TAIL__1244,TMP_1609);
TMP_1611=G_19.func(G_1605,lisp.makeCons(G_1606, lisp.S_nil),TMP_1608,TMP_1610);
TMP_1612=G_19.func(TMP_1611);
TMP_1613=G_48.func(G_1604,TMP_1612,L_BODY__1242);
TMP_1614=G_19.func(G_23,L_G_HEAD__1243);
TMP_1615=G_19.func(G_1554,TMP_1603,TMP_1613,TMP_1614);
}
}
}
return TMP_1615;
});
lisp.CL_put(G_1106,G_1540,TMP_1586);
TMP_1616=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1638;
let TMP_1637;
let TMP_1636;
let TMP_1626;
let L_G777__1251;
let TMP_1625;
let L_INDICATOR__1250;
let TMP_1624;
let L_G776__1249;
let TMP_1623;
let L_PLACE__1248;
let TMP_1622;
let L_G775__1247;
let TMP_1621;
let TMP_1619;
let TMP_1618;
let TMP_1617;
let L_G774__1246;
let L_G704__1245;
L_G704__1245=lisp.jsArrayToList(arguments, 0);
{
L_G774__1246=lisp.values1(L_G704__1245);
{
TMP_1617=lisp.callFunctionWithCallStack(G_1543,L_G774__1246);
TMP_1618=lisp.callFunctionWithCallStack(G_873,2,TMP_1617,2);
if(lisp.values1(TMP_1618) !== lisp.S_nil){
TMP_1619=lisp.values1(lisp.S_nil);
}else{
TMP_1621=lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1547, lisp.makeCons(G_1620, lisp.S_nil)),L_G774__1246);
TMP_1619=lisp.values1(lisp.values1(TMP_1621));
}
L_G775__1247=lisp.values1(TMP_1619);
TMP_1622=G_890.func(L_G774__1246);
L_PLACE__1248=lisp.values1(TMP_1622);
TMP_1623=G_958.func(L_G774__1246);
L_G776__1249=lisp.values1(TMP_1623);
TMP_1624=G_890.func(L_G776__1249);
L_INDICATOR__1250=lisp.values1(TMP_1624);
TMP_1625=G_958.func(L_G776__1249);
L_G777__1251=lisp.values1(TMP_1625);
TMP_1626=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1635;
let TMP_1634;
let TMP_1633;
let TMP_1632;
let TMP_1631;
let TMP_1629;
let TMP_1628;
let L_OK__1258;
let TMP_1627;
let L_G778__1257;
let L_ACCESS_FORM__1256;
let L_STORE_FORM__1255;
let L_STORES__1254;
let L_VALS__1253;
let L_VARS__1252;
L_VARS__1252=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALS__1253=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_STORES__1254=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_STORE_FORM__1255=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_ACCESS_FORM__1256=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G778__1257=lisp.jsArrayToList(arguments, 5);
{
TMP_1627=lisp.callFunctionWithCallStack(G_41);
L_OK__1258=lisp.values1(TMP_1627);
TMP_1628=lisp.CL_symbolFunction(G_19);
TMP_1629=G_1127.func(TMP_1628,L_VARS__1252,L_VALS__1253);
TMP_1631=G_17.func(L_STORES__1254);
TMP_1632=G_19.func(TMP_1631,L_OK__1258);
TMP_1633=G_19.func(G_1397,L_ACCESS_FORM__1256,L_INDICATOR__1250);
TMP_1634=G_19.func(G_1630,TMP_1632,TMP_1633,L_STORE_FORM__1255,L_OK__1258);
TMP_1635=G_19.func(G_1554,TMP_1629,TMP_1634);
}
return TMP_1635;
});
TMP_1636=lisp.callFunctionWithCallStack(G_1392,TMP_1626);
TMP_1637=lisp.callFunctionWithCallStack(G_1394,L_PLACE__1248);
TMP_1638=lisp.CL_multipleValueCall(TMP_1636,TMP_1637);
}
}
return TMP_1638;
});
lisp.CL_put(G_1408,G_1540,TMP_1616);
TMP_1639=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1685;
let TMP_1684;
let TMP_1683;
let TMP_1675;
let L_TEST_NOT__1276;
let TMP_1674;
let L_TEST__1275;
let TMP_1673;
let L_KEY__1274;
let TMP_1672;
let L_G783__1273;
let L_G794__1272;
let TMP_1671;
let TMP_1670;
let TMP_1669;
let L_G793__1271;
let TMP_1668;
let TMP_1667;
let TMP_1666;
let L_G792__1270;
let TMP_1665;
let TMP_1664;
let TMP_1663;
let L_G791__1269;
let TMP_1662;
let TMP_1661;
let TMP_1658;
let L_G784__1268;
let TMP_1656;
let L_ARGS__1266;
let L_G782__1265;
let TMP_1654;
let L_PLACE__1264;
let TMP_1653;
let L_G781__1263;
let TMP_1652;
let L_ITEM__1262;
let TMP_1651;
let L_G780__1261;
let TMP_1650;
let TMP_1642;
let TMP_1641;
let TMP_1640;
let L_G779__1260;
let L_G722__1259;
L_G722__1259=lisp.jsArrayToList(arguments, 0);
{
L_G779__1260=lisp.values1(L_G722__1259);
{
TMP_1640=lisp.callFunctionWithCallStack(G_1543,L_G779__1260);
TMP_1641=lisp.callFunctionWithCallStack(G_873,2,TMP_1640);
if(lisp.values1(TMP_1641) !== lisp.S_nil){
TMP_1642=lisp.values1(lisp.S_nil);
}else{
TMP_1650=lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1643, lisp.makeCons(G_1547, lisp.makeCons(G_1644, lisp.makeCons(G_1645, lisp.makeCons(G_1646, lisp.makeCons(G_1647, lisp.makeCons(G_1648, lisp.makeCons(G_1649, lisp.S_nil)))))))),L_G779__1260);
TMP_1642=lisp.values1(lisp.values1(TMP_1650));
}
L_G780__1261=lisp.values1(TMP_1642);
TMP_1651=G_890.func(L_G779__1260);
L_ITEM__1262=lisp.values1(TMP_1651);
TMP_1652=G_958.func(L_G779__1260);
L_G781__1263=lisp.values1(TMP_1652);
TMP_1653=G_890.func(L_G781__1263);
L_PLACE__1264=lisp.values1(TMP_1653);
TMP_1654=G_958.func(L_G781__1263);
L_G782__1265=lisp.values1(TMP_1654);
L_ARGS__1266=lisp.values1(L_G782__1265);
try {
{
L_G784__1268=lisp.values1(L_G782__1265);
let HOST_G786_STATE = 'G788';
HOST_G786: for(;;){
try{
switch(HOST_G786_STATE){
case 'G788':
case 'G787':
TMP_1658=G_8.func(L_G784__1268);
if(lisp.values1(TMP_1658) !== lisp.S_nil){
throw new lisp.BlockValue(G_1659,lisp.values1(lisp.S_nil));}else{
let HOST_G789_STATE = 'G790';
HOST_G789: for(;;){
try{
switch(HOST_G789_STATE){
case 'G790':
{
TMP_1661=G_890.func(L_G784__1268);
TMP_1662=lisp.CL_eq(G_643,TMP_1661);
L_G791__1269=lisp.values1(TMP_1662);
if(lisp.values1(L_G791__1269) !== lisp.S_nil){
TMP_1663=lisp.values1(L_G791__1269);
}else{
{
TMP_1664=G_890.func(L_G784__1268);
TMP_1665=lisp.CL_eq(G_639,TMP_1664);
L_G792__1270=lisp.values1(TMP_1665);
if(lisp.values1(L_G792__1270) !== lisp.S_nil){
TMP_1666=lisp.values1(L_G792__1270);
}else{
{
TMP_1667=G_890.func(L_G784__1268);
TMP_1668=lisp.CL_eq(G_637,TMP_1667);
L_G793__1271=lisp.values1(TMP_1668);
if(lisp.values1(L_G793__1271) !== lisp.S_nil){
TMP_1669=lisp.values1(L_G793__1271);
}else{
TMP_1669=lisp.values1(lisp.S_nil);
}
}
TMP_1666=lisp.values1(lisp.values1(TMP_1669));
}
}
TMP_1663=lisp.values1(lisp.values1(TMP_1666));
}
}
if(lisp.values1(lisp.values1(TMP_1663)) !== lisp.S_nil){
}else{
TMP_1670=G_890.func(L_G784__1268);
lisp.callFunctionWithCallStack(G_648,G_44.func(lisp.codeArrayToString([85, 110, 107, 110, 111, 119, 110, 32, 38, 107, 101, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 58, 32, 126, 83])),TMP_1670);
}
}
break;
}catch(ERR_1660){
if(ERR_1660 instanceof lisp.TagValue && ERR_1660.id==='HOST_G789'){HOST_G789_STATE=ERR_1660.index;}
else{throw ERR_1660;}}
}
{
TMP_1671=G_78.func(L_G784__1268);
L_G794__1272=lisp.values1(TMP_1671);
L_G784__1268=lisp.values1(L_G794__1272);
}
throw new lisp.TagValue('HOST_G786', 'G787');
}
}
break;
}catch(ERR_1657){
if(ERR_1657 instanceof lisp.TagValue && ERR_1657.id==='HOST_G786'){HOST_G786_STATE=ERR_1657.index;}
else{throw ERR_1657;}}
}
}
TMP_1656=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)))
}catch(E__1655){if(E__1655 instanceof lisp.BlockValue && E__1655.name === G_1659){TMP_1656=E__1655.value;}
else{throw E__1655;}
}
L_G783__1273=lisp.values1(TMP_1656);
TMP_1672=G_1356.func(L_G782__1265,G_637);
L_KEY__1274=lisp.values1(TMP_1672);
TMP_1673=G_1356.func(L_G782__1265,G_639);
L_TEST__1275=lisp.values1(TMP_1673);
TMP_1674=G_1356.func(L_G782__1265,G_643);
L_TEST_NOT__1276=lisp.values1(TMP_1674);
TMP_1675=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1682;
let TMP_1681;
let TMP_1680;
let TMP_1679;
let TMP_1678;
let TMP_1677;
let TMP_1676;
let L_G795__1282;
let L_ACCESS_FORM__1281;
let L_STORE_FORM__1280;
let L_STORES__1279;
let L_VALS__1278;
let L_VARS__1277;
L_VARS__1277=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALS__1278=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_STORES__1279=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_STORE_FORM__1280=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_ACCESS_FORM__1281=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G795__1282=lisp.jsArrayToList(arguments, 5);
TMP_1676=lisp.CL_symbolFunction(G_19);
TMP_1677=G_949.func(L_VARS__1277,L_STORES__1279);
TMP_1678=G_48.func(G_1444,L_ITEM__1262,L_ACCESS_FORM__1281,L_ARGS__1266);
TMP_1679=G_19.func(TMP_1678);
TMP_1680=G_949.func(L_VALS__1278,TMP_1679);
TMP_1681=G_1127.func(TMP_1676,TMP_1677,TMP_1680);
TMP_1682=G_19.func(G_1554,TMP_1681,L_STORE_FORM__1280);
return TMP_1682;
});
TMP_1683=lisp.callFunctionWithCallStack(G_1392,TMP_1675);
TMP_1684=lisp.callFunctionWithCallStack(G_1394,L_PLACE__1264);
TMP_1685=lisp.CL_multipleValueCall(TMP_1683,TMP_1684);
}
}
return TMP_1685;
});
lisp.CL_put(G_1457,G_1540,TMP_1639);
}catch(TMP_1){G_1686.func();
console.log(TMP_1.message);
}


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_7;
let G_9;
let G_14;
let G_15;
let G_17;
let G_21;
let G_25;
let G_26;
let G_28;
let G_30;
let G_32;
let G_33;
let G_34;
let G_35;
let G_38;
let G_40;
let G_43;
let G_45;
let G_47;
let G_49;
let G_55;
let G_57;
let G_58;
let G_62;
let G_64;
let G_66;
let G_68;
let G_71;
let G_74;
let G_76;
let G_82;
let G_85;
let G_90;
let G_93;
let G_94;
let G_97;
let G_100;
let G_101;
let G_103;
let G_108;
let G_110;
let G_112;
let G_114;
let G_118;
let G_124;
let G_130;
let G_132;
let G_135;
let G_136;
let G_140;
let G_142;
let G_144;
let G_149;
let G_162;
let G_164;
let G_168;
let G_169;
let G_171;
let G_172;
let G_174;
let G_178;
let G_180;
let G_181;
let G_184;
let G_186;
let G_188;
let G_189;
let G_190;
let G_191;
let G_192;
let G_193;
let G_194;
let G_197;
let G_199;
let G_206;
let G_209;
let G_217;
let G_218;
let G_219;
let G_223;
let G_228;
let G_229;
let G_248;
let G_249;
let G_255;
let G_258;
let G_263;
let G_267;
let G_282;
let G_284;
let G_285;
let G_287;
let CL_COMMON_LISP_PRINT_BACKTRACE;
let CL_COMMON_LISP_GEN_HANDLER_CASE_1;
let CL_COMMON_LISP_EOF_ERROR;
let CL_COMMON_LISP_TYPE_ERROR;
let CL_COMMON_LISP_ARGUMENTS_ERROR;
let CL_COMMON_LISP_UNBOUND_VARIABLE;
let CL_COMMON_LISP_UNDEFINED_FUNCTION;
let CL_COMMON_LISP_PROGRAM_ERROR;
let CL_COMMON_LISP_SIMPLE_ERROR;
let CL_COMMON_LISP_ERROR;
let CL_COMMON_LISP_INVOKE_DEBUGGER;
let CL_COMMON_LISP_SIGNAL;
let CL_COMMON_LISP_SIGNAL_1;
let CL_COMMON_LISP_COERCE_TO_CONDITION;
let TMP_277;
let TMP_244;
let TMP_213;
let TMP_182;
let TMP_69;
let TMP_3;
// toplevel defun
let F_COERCE_TO_CONDITION_6;
F_COERCE_TO_CONDITION_6=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_7, arguments.length);
}
let TMP_37;
let TMP_36;
let TMP_31;
let L_G3__8;
let TMP_29;
let TMP_27;
let TMP_24;
let TMP_23;
let TMP_22;
let TMP_20;
let TMP_19;
let TMP_18;
let TMP_16;
let TMP_13;
let L_G0__7;
let TMP_12;
let L_G2__6;
let TMP_11;
let TMP_10;
let L_G1__5;
let TMP_8;
let L_DEFAULT_CONDITION__3;
let L_ARGUMENTS__2;
let L_DATUM__1;
L_DATUM__1=arguments[0];
L_ARGUMENTS__2=arguments[1];
L_DEFAULT_CONDITION__3=arguments[2];
{
{
TMP_8=lisp.callFunctionWithCallStack(G_9,L_DATUM__1);
L_G1__5=lisp.values1(TMP_8);
if(lisp.values1(L_G1__5) !== lisp.S_nil){
TMP_10=lisp.values1(L_G1__5);
}else{
{
TMP_11=lisp.CL_functionp(L_DATUM__1);
L_G2__6=lisp.values1(TMP_11);
if(lisp.values1(L_G2__6) !== lisp.S_nil){
TMP_12=lisp.values1(L_G2__6);
}else{
TMP_12=lisp.values1(lisp.S_nil);
}
}
TMP_10=lisp.values1(lisp.values1(TMP_12));
}
}
L_G0__7=lisp.values1(lisp.values1(TMP_10));
if(lisp.values1(L_G0__7) !== lisp.S_nil){
TMP_16=lisp.callFunctionWithCallStack(G_17,L_DEFAULT_CONDITION__3,G_14,L_DATUM__1,G_15,L_ARGUMENTS__2);
TMP_13=TMP_16;
}else{
{
TMP_18=lisp.CL_structurep(L_DATUM__1);
if(lisp.values1(TMP_18) !== lisp.S_nil){
TMP_20=lisp.CL_structureName(L_DATUM__1);
TMP_22=lisp.CL_eq(TMP_20,G_21);
if(lisp.values1(TMP_22) !== lisp.S_nil){
TMP_24=lisp.callFunctionWithCallStack(G_25,L_DATUM__1);
TMP_27=lisp.callFunctionWithCallStack(G_28,G_26);
TMP_29=lisp.callFunctionWithCallStack(G_30,TMP_24,TMP_27);
TMP_23=lisp.values1(TMP_29);
}else{
TMP_23=lisp.values1(lisp.S_nil);
}
TMP_19=lisp.values1(TMP_23);
}else{
TMP_19=lisp.values1(lisp.S_nil);
}
L_G3__8=lisp.values1(TMP_19);
if(lisp.values1(L_G3__8) !== lisp.S_nil){
if(lisp.values1(L_ARGUMENTS__2) !== lisp.S_nil){
G_35.func(G_32,G_33,L_ARGUMENTS__2,G_34,lisp.S_nil);
}else{
}
TMP_31=lisp.values1(L_DATUM__1);
}else{
TMP_36=lisp.CL_symbolFunction(G_17);
TMP_37=lisp.callFunctionWithCallStack(G_38,TMP_36,L_DATUM__1,L_ARGUMENTS__2);
TMP_31=TMP_37;
}
}
TMP_13=TMP_31;
}
}
return TMP_13;
});
CL_COMMON_LISP_COERCE_TO_CONDITION=lisp.values1(F_COERCE_TO_CONDITION_6);
let F_SIGNAL_1_39;
F_SIGNAL_1_39=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_40, arguments.length);
}
let TMP_54;
let TMP_53;
let TMP_52;
let TMP_51;
let L_HANDLER__19;
let TMP_50;
let TMP_48;
let L_G11__18;
let L_G14__17;
let TMP_46;
let L_G13__16;
let TMP_44;
let TMP_42;
let BLOCK_RESULT_NIL__14;
let save_STARHANDLER_CLUSTERSSTAR__13;
let L_CLASS__12;
let TMP_41;
let L_CONDITION__10;
L_CONDITION__10=arguments[0];
{
TMP_41=lisp.callFunctionWithCallStack(G_25,L_CONDITION__10);
L_CLASS__12=lisp.values1(TMP_41);
save_STARHANDLER_CLUSTERSSTAR__13=G_2.value;
G_2.value=lisp.values1(lisp.symbolValue(G_2));
try{
BLOCK_NIL__14: for(;;){for(;;){
TMP_42=lisp.callFunctionWithCallStack(G_43,lisp.symbolValue(G_2));
if(lisp.values1(TMP_42) !== lisp.S_nil){
BLOCK_RESULT_NIL__14=lisp.values1(lisp.S_nil);
break BLOCK_NIL__14;
}else{
{
{
TMP_44=lisp.callFunctionWithCallStack(G_45,lisp.symbolValue(G_2));
L_G13__16=lisp.values1(TMP_44);
{
TMP_46=lisp.callFunctionWithCallStack(G_47,lisp.symbolValue(G_2));
L_G14__17=lisp.values1(TMP_46);
lisp.setSymbolValue(G_2, lisp.values1(L_G13__16));
}
}
L_G11__18=lisp.values1(lisp.values1(lisp.values1(lisp.values1(L_G14__17))));
for(;;){
TMP_48=lisp.callFunctionWithCallStack(G_49,L_G11__18);
if(lisp.values1(TMP_48) !== lisp.S_nil){
}else{
{
TMP_50=lisp.callFunctionWithCallStack(G_47,L_G11__18);
L_HANDLER__19=lisp.values1(TMP_50);
TMP_51=lisp.callFunctionWithCallStack(G_45,L_G11__18);
L_G11__18=lisp.values1(TMP_51);
TMP_52=lisp.callFunctionWithCallStack(G_47,L_HANDLER__19);
TMP_53=lisp.callFunctionWithCallStack(G_30,L_CLASS__12,TMP_52);
if(lisp.values1(TMP_53) !== lisp.S_nil){
TMP_54=lisp.callFunctionWithCallStack(G_55,L_HANDLER__19);
lisp.CL_funcall(lisp.values1(TMP_54),L_CONDITION__10);
}else{
}
}
continue;
}
break;
}
}
continue;
}
break;
}
BLOCK_RESULT_NIL__14=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}finally{
G_2.value=save_STARHANDLER_CLUSTERSSTAR__13;
}
}
return BLOCK_RESULT_NIL__14;
});
CL_COMMON_LISP_SIGNAL_1=lisp.values1(F_SIGNAL_1_39);
let F_SIGNAL_56;
F_SIGNAL_56=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_57, arguments.length);
}
let TMP_60;
let L_CONDITION__24;
let TMP_59;
let L_ARGUMENTS__22;
let L_DATUM__21;
L_DATUM__21=arguments[0];
L_ARGUMENTS__22=lisp.jsArrayToList(arguments, 1);
{
TMP_59=G_7.func(L_DATUM__21,L_ARGUMENTS__22,G_58);
L_CONDITION__24=lisp.values1(TMP_59);
TMP_60=G_40.func(L_CONDITION__24);
}
return TMP_60;
});
CL_COMMON_LISP_SIGNAL=lisp.values1(F_SIGNAL_56);
let F_INVOKE_DEBUGGER_61;
F_INVOKE_DEBUGGER_61=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_62, arguments.length);
}
let TMP_67;
let TMP_65;
let TMP_63;
let L_CONDITION__25;
L_CONDITION__25=arguments[0];
TMP_63=lisp.callFunctionWithCallStack(G_64,L_CONDITION__25);
TMP_65=lisp.callFunctionWithCallStack(G_66,TMP_63);
TMP_67=lisp.CL_error(TMP_65);
return TMP_67;
});
CL_COMMON_LISP_INVOKE_DEBUGGER=lisp.values1(F_INVOKE_DEBUGGER_61);
let F_ERROR_70;
F_ERROR_70=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_35, arguments.length);
}
let TMP_84;
let L_CONDITION__31;
let TMP_83;
let save_STARIN_ERRORSTAR__30;
let TMP_81;
let TMP_80;
let TMP_79;
let TMP_78;
let TMP_77;
let TMP_75;
let TMP_73;
let TMP_72;
let L_ARGUMENTS__28;
let L_DATUM__27;
L_DATUM__27=arguments[0];
L_ARGUMENTS__28=lisp.jsArrayToList(arguments, 1);
TMP_72=lisp.CL_fboundp(G_71);
TMP_73=lisp.callFunctionWithCallStack(G_74,TMP_72);
if(lisp.values1(TMP_73) !== lisp.S_nil){
TMP_77=lisp.CL_symbolFunction(G_76);
TMP_78=lisp.callFunctionWithCallStack(G_64,L_DATUM__27);
TMP_79=lisp.callFunctionWithCallStack(G_38,TMP_77,lisp.S_nil,TMP_78,L_ARGUMENTS__28);
TMP_80=lisp.callFunctionWithCallStack(G_66,TMP_79);
TMP_81=lisp.CL_error(TMP_80);
TMP_75=TMP_81;
}else{
{
save_STARIN_ERRORSTAR__30=G_68.value;
G_68.value=lisp.values1(G_5);
TMP_83=G_7.func(L_DATUM__27,L_ARGUMENTS__28,G_82);
L_CONDITION__31=lisp.values1(TMP_83);
try{
G_40.func(L_CONDITION__31);
TMP_84=G_62.func(L_CONDITION__31);
}finally{
G_68.value=save_STARIN_ERRORSTAR__30;
}
}
TMP_75=TMP_84;
}
return TMP_75;
});
CL_COMMON_LISP_ERROR=lisp.values1(F_ERROR_70);
let F_SIMPLE_ERROR_86;
F_SIMPLE_ERROR_86=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_82, arguments.length);
}
let TMP_88;
let TMP_87;
let L_ARGUMENTS__33;
let L_STRING__32;
L_STRING__32=arguments[0];
L_ARGUMENTS__33=lisp.jsArrayToList(arguments, 1);
TMP_87=lisp.CL_symbolFunction(G_35);
TMP_88=lisp.callFunctionWithCallStack(G_38,TMP_87,L_STRING__32,L_ARGUMENTS__33);
return TMP_88;
});
CL_COMMON_LISP_SIMPLE_ERROR=lisp.values1(F_SIMPLE_ERROR_86);
let F_PROGRAM_ERROR_89;
F_PROGRAM_ERROR_89=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_90, arguments.length);
}
let TMP_91;
let L_ARGUMENTS__36;
let L_STRING__35;
L_STRING__35=arguments[0];
L_ARGUMENTS__36=lisp.jsArrayToList(arguments, 1);
TMP_91=G_35.func(G_90,G_14,L_STRING__35,G_15,L_ARGUMENTS__36);
return TMP_91;
});
CL_COMMON_LISP_PROGRAM_ERROR=lisp.values1(F_PROGRAM_ERROR_89);
let F_UNDEFINED_FUNCTION_92;
F_UNDEFINED_FUNCTION_92=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_93, arguments.length);
}
let TMP_95;
let L_NAME__38;
L_NAME__38=arguments[0];
TMP_95=G_35.func(G_93,G_94,L_NAME__38);
return TMP_95;
});
CL_COMMON_LISP_UNDEFINED_FUNCTION=lisp.values1(F_UNDEFINED_FUNCTION_92);
let F_UNBOUND_VARIABLE_96;
F_UNBOUND_VARIABLE_96=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_97, arguments.length);
}
let TMP_98;
let L_NAME__40;
L_NAME__40=arguments[0];
TMP_98=G_35.func(G_97,G_94,L_NAME__40);
return TMP_98;
});
CL_COMMON_LISP_UNBOUND_VARIABLE=lisp.values1(F_UNBOUND_VARIABLE_96);
let F_ARGUMENTS_ERROR_99;
F_ARGUMENTS_ERROR_99=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_100, arguments.length);
}
let TMP_104;
let TMP_102;
let L_NUM_ARGS__43;
let L_NAME__42;
L_NAME__42=arguments[0];
L_NUM_ARGS__43=arguments[1];
TMP_102=lisp.callFunctionWithCallStack(G_103,L_NAME__42,L_NUM_ARGS__43);
TMP_104=G_35.func(G_90,G_14,G_101.func(lisp.codeArrayToString([105, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 126, 65, 58, 32, 126, 65])),G_15,TMP_102);
return TMP_104;
});
CL_COMMON_LISP_ARGUMENTS_ERROR=lisp.values1(F_ARGUMENTS_ERROR_99);
let F_TYPE_ERROR_105;
F_TYPE_ERROR_105=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_32, arguments.length);
}
let TMP_106;
let L_EXPECTED_TYPE__46;
let L_DATUM__45;
L_DATUM__45=arguments[0];
L_EXPECTED_TYPE__46=arguments[1];
TMP_106=G_35.func(G_32,G_33,L_DATUM__45,G_34,L_EXPECTED_TYPE__46);
return TMP_106;
});
CL_COMMON_LISP_TYPE_ERROR=lisp.values1(F_TYPE_ERROR_105);
let F_EOF_ERROR_107;
F_EOF_ERROR_107=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_108, arguments.length);
}
let TMP_109;
TMP_109=G_35.func(G_101.func(lisp.codeArrayToString([69, 110, 100, 32, 111, 102, 32, 102, 105, 108, 101])));
return TMP_109;
});
CL_COMMON_LISP_EOF_ERROR=lisp.values1(F_EOF_ERROR_107);
let F_GEN_HANDLER_CASE_1_111;
F_GEN_HANDLER_CASE_1_111=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_112, arguments.length);
}
let TMP_167;
let TMP_166;
let TMP_165;
let TMP_163;
let TMP_161;
let TMP_153;
let TMP_152;
let TMP_151;
let TMP_150;
let TMP_148;
let TMP_137;
let TMP_134;
let TMP_133;
let TMP_131;
let TMP_129;
let TMP_126;
let TMP_125;
let L_G_TEMP__58;
let TMP_123;
let L_G_BLOCK_NAME__57;
let TMP_122;
let L_TAG_NAMES__56;
let TMP_121;
let TMP_119;
let L_FUN_NAMES__54;
let TMP_117;
let TMP_115;
let L_G_FORM_NAME__52;
let TMP_113;
let L_FORM__50;
let L_ERROR_CLAUSES__49;
L_ERROR_CLAUSES__49=arguments[0];
L_FORM__50=arguments[1];
{
TMP_113=lisp.callFunctionWithCallStack(G_114);
L_G_FORM_NAME__52=lisp.values1(TMP_113);
TMP_115=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_116;
let L_ARG__53;
L_ARG__53=arguments[0];
TMP_116=lisp.callFunctionWithCallStack(G_114);
return TMP_116;
});
TMP_117=lisp.callFunctionWithCallStack(G_118,TMP_115,L_ERROR_CLAUSES__49);
L_FUN_NAMES__54=lisp.values1(TMP_117);
TMP_119=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_120;
let L_ARG__55;
L_ARG__55=arguments[0];
TMP_120=lisp.callFunctionWithCallStack(G_114);
return TMP_120;
});
TMP_121=lisp.callFunctionWithCallStack(G_118,TMP_119,L_ERROR_CLAUSES__49);
L_TAG_NAMES__56=lisp.values1(TMP_121);
TMP_122=lisp.callFunctionWithCallStack(G_114);
L_G_BLOCK_NAME__57=lisp.values1(TMP_122);
TMP_123=lisp.callFunctionWithCallStack(G_114);
L_G_TEMP__58=lisp.values1(TMP_123);
TMP_125=lisp.callFunctionWithCallStack(G_103,L_G_FORM_NAME__52,lisp.S_nil,L_FORM__50);
TMP_126=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_128;
let TMP_127;
let L_FUN_NAME__60;
let L_C__59;
L_C__59=arguments[0];
L_FUN_NAME__60=arguments[1];
TMP_127=lisp.callFunctionWithCallStack(G_45,L_C__59);
TMP_128=lisp.CL_cons(L_FUN_NAME__60,TMP_127);
return TMP_128;
});
TMP_129=lisp.callFunctionWithCallStack(G_130,TMP_126,L_ERROR_CLAUSES__49,L_FUN_NAMES__54);
TMP_131=lisp.CL_cons(TMP_125,TMP_129);
TMP_133=lisp.callFunctionWithCallStack(G_103,L_G_TEMP__58);
TMP_134=lisp.callFunctionWithCallStack(G_103,TMP_133);
TMP_137=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_147;
let TMP_146;
let TMP_145;
let TMP_143;
let TMP_141;
let TMP_139;
let L_ARG__63;
let TMP_138;
let L_TAG_NAME__62;
let L_C__61;
L_C__61=arguments[0];
L_TAG_NAME__62=arguments[1];
{
TMP_138=lisp.callFunctionWithCallStack(G_114);
L_ARG__63=lisp.values1(TMP_138);
TMP_139=lisp.callFunctionWithCallStack(G_47,L_C__61);
TMP_141=lisp.callFunctionWithCallStack(G_103,L_ARG__63);
TMP_143=lisp.callFunctionWithCallStack(G_103,G_142,L_G_TEMP__58,L_ARG__63);
TMP_145=lisp.callFunctionWithCallStack(G_103,G_144,L_TAG_NAME__62);
TMP_146=lisp.callFunctionWithCallStack(G_103,G_140,TMP_141,TMP_143,TMP_145);
TMP_147=lisp.callFunctionWithCallStack(G_103,TMP_139,TMP_146);
}
return TMP_147;
});
TMP_148=lisp.callFunctionWithCallStack(G_130,TMP_137,L_ERROR_CLAUSES__49,L_TAG_NAMES__56);
TMP_150=lisp.callFunctionWithCallStack(G_103,L_G_FORM_NAME__52);
TMP_151=lisp.callFunctionWithCallStack(G_103,G_149,L_G_BLOCK_NAME__57,TMP_150);
TMP_152=lisp.callFunctionWithCallStack(G_103,G_110,TMP_148,TMP_151);
TMP_153=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_160;
let TMP_159;
let TMP_158;
let TMP_157;
let TMP_156;
let TMP_155;
let TMP_154;
let L_ERROR_CLAUSE__66;
let L_FUN_NAME__65;
let L_TAG_NAME__64;
L_TAG_NAME__64=arguments[0];
L_FUN_NAME__65=arguments[1];
L_ERROR_CLAUSE__66=arguments[2];
TMP_154=lisp.callFunctionWithCallStack(G_55,L_ERROR_CLAUSE__66);
TMP_155=lisp.callFunctionWithCallStack(G_43,TMP_154);
if(lisp.values1(TMP_155) !== lisp.S_nil){
TMP_156=lisp.values1(lisp.S_nil);
}else{
TMP_157=lisp.callFunctionWithCallStack(G_103,L_G_TEMP__58);
TMP_156=lisp.values1(TMP_157);
}
TMP_158=lisp.CL_cons(L_FUN_NAME__65,TMP_156);
TMP_159=lisp.callFunctionWithCallStack(G_103,G_149,L_G_BLOCK_NAME__57,TMP_158);
TMP_160=lisp.callFunctionWithCallStack(G_103,L_TAG_NAME__64,TMP_159);
return TMP_160;
});
TMP_161=lisp.callFunctionWithCallStack(G_162,TMP_153,L_TAG_NAMES__56,L_FUN_NAMES__54,L_ERROR_CLAUSES__49);
TMP_163=lisp.callFunctionWithCallStack(G_164,G_136,TMP_152,TMP_161);
TMP_165=lisp.callFunctionWithCallStack(G_103,G_135,L_G_BLOCK_NAME__57,TMP_163);
TMP_166=lisp.callFunctionWithCallStack(G_103,G_132,TMP_134,TMP_165);
TMP_167=lisp.callFunctionWithCallStack(G_103,G_124,TMP_131,TMP_166);
}
return TMP_167;
});
CL_COMMON_LISP_GEN_HANDLER_CASE_1=lisp.values1(F_GEN_HANDLER_CASE_1_111);
let F_PRINT_BACKTRACE_170;
F_PRINT_BACKTRACE_170=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_171, arguments.length);
}
let TMP_179;
let TMP_177;
let TMP_176;
let L_STREAM__67;
let supplied_STREAM__67;
for (let TMP_173 = 0; TMP_173 < arguments.length; TMP_173 += 2) {
if(arguments[TMP_173] === G_172){
supplied_STREAM__67=arguments[TMP_173+1];
break;
}
}
L_STREAM__67=supplied_STREAM__67 !== undefined ? supplied_STREAM__67 : (lisp.values1(lisp.symbolValue(G_174)));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_175 = 0; TMP_175 < arguments.length; TMP_175 += 2) {
if(arguments[TMP_175]!==G_172) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_175].name); }
}
TMP_176=lisp.getBacktrace();
TMP_177=lisp.callFunctionWithCallStack(G_178,TMP_176);
TMP_179=lisp.callFunctionWithCallStack(G_180,TMP_177,L_STREAM__67);
return TMP_179;
});
CL_COMMON_LISP_PRINT_BACKTRACE=lisp.values1(F_PRINT_BACKTRACE_170);
// initialize symbols
G_2 = lisp.intern('*HANDLER-CLUSTERS*', 'COMMON-LISP');
G_4 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_5 = lisp.intern('T', 'COMMON-LISP');
G_7 = lisp.intern('COERCE-TO-CONDITION', 'COMMON-LISP');
G_9 = lisp.intern('STRINGP', 'COMMON-LISP');
G_14 = lisp.intern('FORMAT-CONTROL', 'KEYWORD');
G_15 = lisp.intern('FORMAT-ARGUMENTS', 'KEYWORD');
G_17 = lisp.intern('MAKE-CONDITION', 'COMMON-LISP');
G_21 = lisp.intern('STANDARD-INSTANCE', 'COMMON-LISP');
G_25 = lisp.intern('CLASS-OF', 'COMMON-LISP');
G_26 = lisp.intern('BASE-CONDITION', 'COMMON-LISP');
G_28 = lisp.intern('FIND-CLASS', 'COMMON-LISP');
G_30 = lisp.intern('SUBCLASSP', 'COMMON-LISP');
G_32 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_33 = lisp.intern('DATUM', 'KEYWORD');
G_34 = lisp.intern('EXPECTED-TYPE', 'KEYWORD');
G_35 = lisp.intern('ERROR', 'COMMON-LISP');
G_38 = lisp.intern('APPLY', 'COMMON-LISP');
G_40 = lisp.intern('SIGNAL-1', 'COMMON-LISP');
G_43 = lisp.intern('NULL', 'COMMON-LISP');
G_45 = lisp.intern('CDR', 'COMMON-LISP');
G_47 = lisp.intern('CAR', 'COMMON-LISP');
G_49 = lisp.intern('ENDP', 'COMMON-LISP');
G_55 = lisp.intern('CADR', 'COMMON-LISP');
G_57 = lisp.intern('SIGNAL', 'COMMON-LISP');
G_58 = lisp.intern('SIMPLE-CONDITION', 'COMMON-LISP');
G_62 = lisp.intern('INVOKE-DEBUGGER', 'COMMON-LISP');
G_64 = lisp.intern('PRINC-TO-STRING', 'COMMON-LISP');
G_66 = lisp.intern('CL->JS', 'FFI');
G_68 = lisp.intern('*IN-ERROR*', 'COMMON-LISP');
G_71 = lisp.intern('MAKE-INSTANCE', 'COMMON-LISP');
G_74 = lisp.intern('NOT', 'COMMON-LISP');
G_76 = lisp.intern('FORMAT', 'COMMON-LISP');
G_82 = lisp.intern('SIMPLE-ERROR', 'COMMON-LISP');
G_85 = lisp.intern('ASSERT', 'COMMON-LISP');
G_90 = lisp.intern('PROGRAM-ERROR', 'COMMON-LISP');
G_93 = lisp.intern('UNDEFINED-FUNCTION', 'COMMON-LISP');
G_94 = lisp.intern('NAME', 'KEYWORD');
G_97 = lisp.intern('UNBOUND-VARIABLE', 'COMMON-LISP');
G_100 = lisp.intern('ARGUMENTS-ERROR', 'COMMON-LISP');
G_101 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_103 = lisp.intern('LIST', 'COMMON-LISP');
G_108 = lisp.intern('EOF-ERROR', 'COMMON-LISP');
G_110 = lisp.intern('HANDLER-BIND', 'COMMON-LISP');
G_112 = lisp.intern('GEN-HANDLER-CASE-1', 'COMMON-LISP');
G_114 = lisp.intern('GENSYM', 'COMMON-LISP');
G_118 = lisp.intern('%MAPCAR', 'SYSTEM');
G_124 = lisp.intern('FLET', 'COMMON-LISP');
G_130 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_132 = lisp.intern('LET', 'COMMON-LISP');
G_135 = lisp.intern('BLOCK', 'COMMON-LISP');
G_136 = lisp.intern('TAGBODY', 'COMMON-LISP');
G_140 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_142 = lisp.intern('SETQ', 'COMMON-LISP');
G_144 = lisp.intern('GO', 'COMMON-LISP');
G_149 = lisp.intern('RETURN-FROM', 'COMMON-LISP');
G_162 = lisp.intern('MAPCAN', 'COMMON-LISP');
G_164 = lisp.intern('LIST*', 'COMMON-LISP');
G_168 = lisp.intern('HANDLER-CASE', 'COMMON-LISP');
G_169 = lisp.intern('IGNORE-ERRORS', 'COMMON-LISP');
G_171 = lisp.intern('PRINT-BACKTRACE', 'COMMON-LISP');
G_172 = lisp.intern('STREAM', 'KEYWORD');
G_174 = lisp.intern('*STANDARD-OUTPUT*', 'COMMON-LISP');
G_178 = lisp.intern('JS->CL', 'FFI');
G_180 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_181 = lisp.intern('MACRO', 'COMPILER');
G_184 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_186 = lisp.intern('<=', 'COMMON-LISP');
G_188 = lisp.intern('TEST-FORM', 'COMMON-LISP');
G_189 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_190 = lisp.intern('PLACE', 'COMMON-LISP');
G_191 = lisp.intern('DATUM', 'COMMON-LISP');
G_192 = lisp.intern('DATUM-P', 'COMMON-LISP');
G_193 = lisp.intern('&REST', 'COMMON-LISP');
G_194 = lisp.intern('ARGUMENTS', 'COMMON-LISP');
G_197 = lisp.intern('FIRST', 'COMMON-LISP');
G_199 = lisp.intern('REST', 'COMMON-LISP');
G_206 = lisp.intern('UNLESS', 'COMMON-LISP');
G_209 = lisp.intern('QUOTE', 'COMMON-LISP');
G_217 = lisp.intern('BINDINGS', 'COMMON-LISP');
G_218 = lisp.intern('&BODY', 'COMMON-LISP');
G_219 = lisp.intern('FORMS', 'COMMON-LISP');
G_223 = lisp.intern('CONS', 'COMMON-LISP');
G_228 = lisp.intern('TYPE', 'COMMON-LISP');
G_229 = lisp.intern('HANDLER', 'COMMON-LISP');
G_248 = lisp.intern('FORM', 'COMMON-LISP');
G_249 = lisp.intern('CASES', 'COMMON-LISP');
G_255 = lisp.intern('NO-ERROR', 'KEYWORD');
G_258 = lisp.intern('REMOVE-IF', 'COMMON-LISP');
G_263 = lisp.intern('FIND-IF', 'COMMON-LISP');
G_267 = lisp.intern('MULTIPLE-VALUE-CALL', 'COMMON-LISP');
G_282 = lisp.intern('PROGN', 'COMMON-LISP');
G_284 = lisp.intern('CONDITION', 'COMMON-LISP');
G_285 = lisp.intern('VALUES', 'COMMON-LISP');
G_287 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');TMP_3=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_3) !== lisp.S_nil){
}else{
lisp.CL_set(G_2,lisp.S_nil);
}
lisp.CL_put(G_2,G_4,G_5);
CL_COMMON_LISP_COERCE_TO_CONDITION.lisp_name = 'COERCE-TO-CONDITION'
lisp.setSymbolFunction(G_7, CL_COMMON_LISP_COERCE_TO_CONDITION);
CL_COMMON_LISP_SIGNAL_1.lisp_name = 'SIGNAL-1'
lisp.setSymbolFunction(G_40, CL_COMMON_LISP_SIGNAL_1);
CL_COMMON_LISP_SIGNAL.lisp_name = 'SIGNAL'
lisp.setSymbolFunction(G_57, CL_COMMON_LISP_SIGNAL);
CL_COMMON_LISP_INVOKE_DEBUGGER.lisp_name = 'INVOKE-DEBUGGER'
lisp.setSymbolFunction(G_62, CL_COMMON_LISP_INVOKE_DEBUGGER);
TMP_69=lisp.CL_boundp(G_68);
if(lisp.values1(TMP_69) !== lisp.S_nil){
}else{
lisp.CL_set(G_68,lisp.S_nil);
}
lisp.CL_put(G_68,G_4,G_5);
CL_COMMON_LISP_ERROR.lisp_name = 'ERROR'
lisp.setSymbolFunction(G_35, CL_COMMON_LISP_ERROR);
CL_COMMON_LISP_SIMPLE_ERROR.lisp_name = 'SIMPLE-ERROR'
lisp.setSymbolFunction(G_82, CL_COMMON_LISP_SIMPLE_ERROR);
CL_COMMON_LISP_PROGRAM_ERROR.lisp_name = 'PROGRAM-ERROR'
lisp.setSymbolFunction(G_90, CL_COMMON_LISP_PROGRAM_ERROR);
CL_COMMON_LISP_UNDEFINED_FUNCTION.lisp_name = 'UNDEFINED-FUNCTION'
lisp.setSymbolFunction(G_93, CL_COMMON_LISP_UNDEFINED_FUNCTION);
CL_COMMON_LISP_UNBOUND_VARIABLE.lisp_name = 'UNBOUND-VARIABLE'
lisp.setSymbolFunction(G_97, CL_COMMON_LISP_UNBOUND_VARIABLE);
CL_COMMON_LISP_ARGUMENTS_ERROR.lisp_name = 'ARGUMENTS-ERROR'
lisp.setSymbolFunction(G_100, CL_COMMON_LISP_ARGUMENTS_ERROR);
CL_COMMON_LISP_TYPE_ERROR.lisp_name = 'TYPE-ERROR'
lisp.setSymbolFunction(G_32, CL_COMMON_LISP_TYPE_ERROR);
CL_COMMON_LISP_EOF_ERROR.lisp_name = 'EOF-ERROR'
lisp.setSymbolFunction(G_108, CL_COMMON_LISP_EOF_ERROR);
CL_COMMON_LISP_GEN_HANDLER_CASE_1.lisp_name = 'GEN-HANDLER-CASE-1'
lisp.setSymbolFunction(G_112, CL_COMMON_LISP_GEN_HANDLER_CASE_1);
CL_COMMON_LISP_PRINT_BACKTRACE.lisp_name = 'PRINT-BACKTRACE'
lisp.setSymbolFunction(G_171, CL_COMMON_LISP_PRINT_BACKTRACE);
TMP_182=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_212;
let TMP_211;
let TMP_210;
let TMP_208;
let TMP_207;
let L_ARGUMENTS__79;
let L_G28__78;
let TMP_205;
let L_DATUM__77;
let TMP_204;
let TMP_203;
let L_DATUM_P__76;
let TMP_202;
let L_G27__75;
let TMP_201;
let L_PLACE__74;
let TMP_200;
let L_G26__73;
let TMP_198;
let L_TEST_FORM__72;
let TMP_196;
let L_G25__71;
let TMP_195;
let TMP_187;
let TMP_185;
let TMP_183;
let L_G24__70;
let L_G20__69;
L_G20__69=lisp.jsArrayToList(arguments, 0);
{
L_G24__70=lisp.values1(L_G20__69);
{
TMP_183=lisp.callFunctionWithCallStack(G_184,L_G24__70);
TMP_185=lisp.callFunctionWithCallStack(G_186,1,TMP_183);
if(lisp.values1(TMP_185) !== lisp.S_nil){
TMP_187=lisp.values1(lisp.S_nil);
}else{
TMP_195=G_35.func(G_101.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_188, lisp.makeCons(G_189, lisp.makeCons(G_190, lisp.makeCons(lisp.makeCons(G_191, lisp.makeCons(lisp.S_nil, lisp.makeCons(G_192, lisp.S_nil))), lisp.makeCons(G_193, lisp.makeCons(G_194, lisp.S_nil)))))),L_G24__70);
TMP_187=lisp.values1(lisp.values1(TMP_195));
}
L_G25__71=lisp.values1(TMP_187);
TMP_196=lisp.callFunctionWithCallStack(G_197,L_G24__70);
L_TEST_FORM__72=lisp.values1(TMP_196);
TMP_198=lisp.callFunctionWithCallStack(G_199,L_G24__70);
L_G26__73=lisp.values1(TMP_198);
TMP_200=lisp.callFunctionWithCallStack(G_197,L_G26__73);
L_PLACE__74=lisp.values1(TMP_200);
TMP_201=lisp.callFunctionWithCallStack(G_199,L_G26__73);
L_G27__75=lisp.values1(TMP_201);
if(lisp.values1(L_G27__75) !== lisp.S_nil){
TMP_202=lisp.values1(G_5);
}else{
TMP_202=lisp.values1(lisp.S_nil);
}
L_DATUM_P__76=lisp.values1(TMP_202);
if(lisp.values1(L_G27__75) !== lisp.S_nil){
TMP_204=lisp.callFunctionWithCallStack(G_197,L_G27__75);
TMP_203=lisp.values1(TMP_204);
}else{
TMP_203=lisp.values1(lisp.S_nil);
}
L_DATUM__77=lisp.values1(TMP_203);
TMP_205=lisp.callFunctionWithCallStack(G_199,L_G27__75);
L_G28__78=lisp.values1(TMP_205);
L_ARGUMENTS__79=lisp.values1(L_G28__78);
if(lisp.values1(L_DATUM_P__76) !== lisp.S_nil){
TMP_208=lisp.callFunctionWithCallStack(G_164,G_35,L_DATUM__77,L_ARGUMENTS__79);
TMP_207=lisp.values1(TMP_208);
}else{
TMP_210=lisp.callFunctionWithCallStack(G_103,G_209,L_TEST_FORM__72);
TMP_211=lisp.callFunctionWithCallStack(G_103,G_35,G_101.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),TMP_210);
TMP_207=lisp.values1(TMP_211);
}
TMP_212=lisp.callFunctionWithCallStack(G_103,G_206,L_TEST_FORM__72,TMP_207);
}
}
return TMP_212;
});
lisp.CL_put(G_85,G_181,TMP_182);
TMP_213=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_243;
let TMP_242;
let TMP_241;
let TMP_240;
let TMP_239;
let TMP_238;
let TMP_224;
let L_FORMS__85;
let L_G31__84;
let TMP_222;
let L_BINDINGS__83;
let TMP_221;
let L_G30__82;
let TMP_220;
let TMP_216;
let TMP_215;
let TMP_214;
let L_G29__81;
let L_G21__80;
L_G21__80=lisp.jsArrayToList(arguments, 0);
{
L_G29__81=lisp.values1(L_G21__80);
{
TMP_214=lisp.callFunctionWithCallStack(G_184,L_G29__81);
TMP_215=lisp.callFunctionWithCallStack(G_186,1,TMP_214);
if(lisp.values1(TMP_215) !== lisp.S_nil){
TMP_216=lisp.values1(lisp.S_nil);
}else{
TMP_220=G_35.func(G_101.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_217, lisp.makeCons(G_218, lisp.makeCons(G_219, lisp.S_nil))),L_G29__81);
TMP_216=lisp.values1(lisp.values1(TMP_220));
}
L_G30__82=lisp.values1(TMP_216);
TMP_221=lisp.callFunctionWithCallStack(G_197,L_G29__81);
L_BINDINGS__83=lisp.values1(TMP_221);
TMP_222=lisp.callFunctionWithCallStack(G_199,L_G29__81);
L_G31__84=lisp.values1(TMP_222);
L_FORMS__85=lisp.values1(L_G31__84);
TMP_224=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_237;
let TMP_236;
let TMP_235;
let L_G35__92;
let TMP_234;
let L_HANDLER__91;
let TMP_233;
let L_G34__90;
let TMP_232;
let L_TYPE__89;
let TMP_231;
let L_G33__88;
let TMP_230;
let TMP_227;
let TMP_226;
let TMP_225;
let L_G32__87;
let L_BINDING__86;
L_BINDING__86=arguments[0];
{
L_G32__87=lisp.values1(L_BINDING__86);
{
TMP_225=lisp.callFunctionWithCallStack(G_184,L_G32__87);
TMP_226=lisp.callFunctionWithCallStack(G_186,2,TMP_225,2);
if(lisp.values1(TMP_226) !== lisp.S_nil){
TMP_227=lisp.values1(lisp.S_nil);
}else{
TMP_230=G_35.func(G_101.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_228, lisp.makeCons(G_229, lisp.S_nil)),L_G32__87);
TMP_227=lisp.values1(lisp.values1(TMP_230));
}
L_G33__88=lisp.values1(TMP_227);
TMP_231=lisp.callFunctionWithCallStack(G_197,L_G32__87);
L_TYPE__89=lisp.values1(TMP_231);
TMP_232=lisp.callFunctionWithCallStack(G_199,L_G32__87);
L_G34__90=lisp.values1(TMP_232);
TMP_233=lisp.callFunctionWithCallStack(G_197,L_G34__90);
L_HANDLER__91=lisp.values1(TMP_233);
TMP_234=lisp.callFunctionWithCallStack(G_199,L_G34__90);
L_G35__92=lisp.values1(TMP_234);
TMP_235=lisp.callFunctionWithCallStack(G_103,G_209,L_TYPE__89);
TMP_236=lisp.callFunctionWithCallStack(G_103,G_28,TMP_235);
TMP_237=lisp.callFunctionWithCallStack(G_103,G_103,TMP_236,L_HANDLER__91);
}
}
return TMP_237;
});
TMP_238=lisp.callFunctionWithCallStack(G_130,TMP_224,L_BINDINGS__83);
TMP_239=lisp.CL_cons(G_103,TMP_238);
TMP_240=lisp.callFunctionWithCallStack(G_164,G_223,TMP_239,lisp.makeCons(G_2, lisp.S_nil));
TMP_241=lisp.callFunctionWithCallStack(G_103,G_2,TMP_240);
TMP_242=lisp.callFunctionWithCallStack(G_103,TMP_241);
TMP_243=lisp.callFunctionWithCallStack(G_164,G_132,TMP_242,L_FORMS__85);
}
}
return TMP_243;
});
lisp.CL_put(G_110,G_181,TMP_213);
TMP_244=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_276;
let TMP_275;
let TMP_274;
let TMP_273;
let TMP_272;
let TMP_271;
let TMP_270;
let TMP_269;
let TMP_268;
let L_G_NORMAL_RETURN__104;
let TMP_266;
let L_G_ERROR_RETURN__103;
let TMP_265;
let TMP_264;
let L_NO_ERROR_CLAUSE__102;
let TMP_262;
let TMP_259;
let L_ERROR_CLAUSES__100;
let TMP_257;
let TMP_253;
let L_CASES__98;
let L_G38__97;
let TMP_252;
let L_FORM__96;
let TMP_251;
let L_G37__95;
let TMP_250;
let TMP_247;
let TMP_246;
let TMP_245;
let L_G36__94;
let L_G22__93;
L_G22__93=lisp.jsArrayToList(arguments, 0);
{
L_G36__94=lisp.values1(L_G22__93);
{
TMP_245=lisp.callFunctionWithCallStack(G_184,L_G36__94);
TMP_246=lisp.callFunctionWithCallStack(G_186,1,TMP_245);
if(lisp.values1(TMP_246) !== lisp.S_nil){
TMP_247=lisp.values1(lisp.S_nil);
}else{
TMP_250=G_35.func(G_101.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_248, lisp.makeCons(G_193, lisp.makeCons(G_249, lisp.S_nil))),L_G36__94);
TMP_247=lisp.values1(lisp.values1(TMP_250));
}
L_G37__95=lisp.values1(TMP_247);
TMP_251=lisp.callFunctionWithCallStack(G_197,L_G36__94);
L_FORM__96=lisp.values1(TMP_251);
TMP_252=lisp.callFunctionWithCallStack(G_199,L_G36__94);
L_G38__97=lisp.values1(TMP_252);
L_CASES__98=lisp.values1(L_G38__97);
{
TMP_253=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_256;
let TMP_254;
let L_C__99;
L_C__99=arguments[0];
TMP_254=lisp.callFunctionWithCallStack(G_47,L_C__99);
TMP_256=lisp.CL_eq(TMP_254,G_255);
return TMP_256;
});
TMP_257=lisp.callFunctionWithCallStack(G_258,TMP_253,L_CASES__98);
L_ERROR_CLAUSES__100=lisp.values1(TMP_257);
TMP_259=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_261;
let TMP_260;
let L_C__101;
L_C__101=arguments[0];
TMP_260=lisp.callFunctionWithCallStack(G_47,L_C__101);
TMP_261=lisp.CL_eq(TMP_260,G_255);
return TMP_261;
});
TMP_262=lisp.callFunctionWithCallStack(G_263,TMP_259,L_CASES__98);
L_NO_ERROR_CLAUSE__102=lisp.values1(TMP_262);
if(lisp.values1(L_NO_ERROR_CLAUSE__102) !== lisp.S_nil){
{
TMP_265=lisp.callFunctionWithCallStack(G_114);
L_G_ERROR_RETURN__103=lisp.values1(TMP_265);
TMP_266=lisp.callFunctionWithCallStack(G_114);
L_G_NORMAL_RETURN__104=lisp.values1(TMP_266);
TMP_268=lisp.callFunctionWithCallStack(G_45,L_NO_ERROR_CLAUSE__102);
TMP_269=lisp.CL_cons(G_140,TMP_268);
TMP_270=lisp.callFunctionWithCallStack(G_103,G_149,L_G_NORMAL_RETURN__104,L_FORM__96);
TMP_271=lisp.callFunctionWithCallStack(G_164,G_168,TMP_270,L_ERROR_CLAUSES__100);
TMP_272=lisp.callFunctionWithCallStack(G_103,G_149,L_G_ERROR_RETURN__103,TMP_271);
TMP_273=lisp.callFunctionWithCallStack(G_103,G_135,L_G_NORMAL_RETURN__104,TMP_272);
TMP_274=lisp.callFunctionWithCallStack(G_103,G_267,TMP_269,TMP_273);
TMP_275=lisp.callFunctionWithCallStack(G_103,G_135,L_G_ERROR_RETURN__103,TMP_274);
}
TMP_264=TMP_275;
}else{
TMP_276=G_112.func(L_ERROR_CLAUSES__100,L_FORM__96);
TMP_264=TMP_276;
}
}
}
}
return TMP_264;
});
lisp.CL_put(G_168,G_181,TMP_244);
TMP_277=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_286;
let TMP_283;
let L_FORMS__108;
let L_G40__107;
let TMP_281;
let TMP_280;
let TMP_279;
let TMP_278;
let L_G39__106;
let L_G23__105;
L_G23__105=lisp.jsArrayToList(arguments, 0);
{
L_G39__106=lisp.values1(L_G23__105);
{
TMP_278=lisp.callFunctionWithCallStack(G_184,L_G39__106);
TMP_279=lisp.callFunctionWithCallStack(G_186,0,TMP_278);
if(lisp.values1(TMP_279) !== lisp.S_nil){
TMP_280=lisp.values1(lisp.S_nil);
}else{
TMP_281=G_35.func(G_101.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_193, lisp.makeCons(G_219, lisp.S_nil)),L_G39__106);
TMP_280=lisp.values1(lisp.values1(TMP_281));
}
L_G40__107=lisp.values1(TMP_280);
L_FORMS__108=lisp.values1(L_G39__106);
TMP_283=lisp.CL_cons(G_282,L_FORMS__108);
TMP_286=lisp.callFunctionWithCallStack(G_164,G_168,TMP_283,lisp.makeCons(lisp.makeCons(G_35, lisp.makeCons(lisp.makeCons(G_284, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_285, lisp.makeCons(lisp.S_nil, lisp.makeCons(G_284, lisp.S_nil))), lisp.S_nil))), lisp.S_nil));
}
}
return TMP_286;
});
lisp.CL_put(G_169,G_181,TMP_277);
}catch(TMP_1){G_287.func();
console.log(TMP_1.message);
}


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_6;
let G_9;
let G_11;
let G_13;
let G_16;
let G_18;
let G_26;
let G_28;
let G_30;
let G_33;
let G_35;
let G_36;
let G_38;
let G_40;
let G_41;
let G_45;
let G_46;
let G_50;
let G_52;
let G_57;
let G_61;
let G_63;
let G_64;
let G_66;
let G_68;
let G_71;
let G_73;
let G_74;
let G_75;
let G_76;
let G_77;
let G_78;
let G_79;
let G_80;
let G_81;
let G_82;
let G_85;
let G_93;
let G_95;
let G_98;
let G_99;
let G_102;
let G_104;
let G_106;
let G_107;
let G_108;
let G_116;
let G_117;
let G_118;
let G_119;
let G_120;
let G_121;
let G_122;
let G_123;
let G_124;
let G_125;
let G_126;
let G_132;
let G_167;
let G_177;
let G_178;
let G_179;
let G_182;
let G_183;
let G_185;
let G_189;
let G_190;
let G_206;
let G_208;
let G_224;
let G_231;
let G_232;
let G_239;
let G_250;
let G_251;
let G_252;
let G_253;
let G_257;
let G_259;
let G_260;
let G_270;
let G_272;
let G_276;
let G_277;
let G_279;
let G_283;
let G_285;
let G_290;
let G_300;
let G_309;
let CL_COMMON_LISP_STRUCTURE_PRINTER;
let CL_COMMON_LISP_PARSE_STRUCTURE_NAME_AND_OPTIONS;
let CL_COMMON_LISP_COPY_STRUCTURE;
let TMP_100;
// toplevel defun
let F_COPY_STRUCTURE_2;
F_COPY_STRUCTURE_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_7;
let TMP_4;
let L_X__1;
L_X__1=arguments[0];
TMP_4=lisp.CL_structurep(L_X__1);
if(lisp.values1(TMP_4) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_6,L_X__1,G_5);
}
TMP_7=lisp.CL_copyStructure(L_X__1);
return TMP_7;
});
CL_COMMON_LISP_COPY_STRUCTURE=lisp.values1(F_COPY_STRUCTURE_2);
let F_PARSE_STRUCTURE_NAME_AND_OPTIONS_8;
F_PARSE_STRUCTURE_NAME_AND_OPTIONS_8=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_9, arguments.length);
}
let TMP_92;
let TMP_91;
let TMP_90;
let TMP_89;
let TMP_88;
let TMP_87;
let TMP_86;
let TMP_84;
let TMP_10;
let L_NAME_AND_OPTIONS__3;
L_NAME_AND_OPTIONS__3=arguments[0];
TMP_10=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_83;
let L_G16__28;
let TMP_72;
let TMP_70;
let L_G15__27;
let TMP_69;
let TMP_67;
let L_G14__26;
let TMP_65;
let TMP_62;
let TMP_60;
let TMP_59;
let L_G13__25;
let TMP_58;
let TMP_56;
let TMP_55;
let TMP_54;
let L_G12__24;
let TMP_53;
let TMP_51;
let TMP_49;
let TMP_48;
let L_G11__23;
let TMP_47;
let TMP_44;
let TMP_43;
let L_G10__22;
let TMP_42;
let TMP_39;
let L_G9__21;
let TMP_37;
let L_G8__20;
let TMP_34;
let TMP_32;
let TMP_31;
let TMP_29;
let L_OPTION__19;
let TMP_27;
let TMP_25;
let L_G1__18;
let L_PRINT_FUNCTION__16;
let L_PREDICATE_NAME__15;
let TMP_24;
let TMP_23;
let TMP_22;
let L_COPIER_NAME__14;
let TMP_21;
let TMP_20;
let TMP_19;
let L_CONSTRUCTOR_NAME__13;
let TMP_17;
let TMP_15;
let TMP_14;
let L_NAMED_OPTION__12;
let L_TYPE_OPTION__11;
let L_INCLUDED_OPTION__10;
let L_CONSTRUCTOR_OPTION__9;
let L_CONC_NAME__8;
let TMP_12;
let L_G0__7;
let L_OPTIONS__6;
let L_STRUCTURE_NAME__5;
L_STRUCTURE_NAME__5=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_OPTIONS__6=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G0__7=lisp.jsArrayToList(arguments, 2);
{
TMP_12=lisp.callFunctionWithCallStack(G_13,lisp.S_nil,G_11.func(lisp.codeArrayToString([126, 65, 45])),L_STRUCTURE_NAME__5);
L_CONC_NAME__8=lisp.values1(TMP_12);
L_CONSTRUCTOR_OPTION__9=lisp.values1(lisp.S_nil);
L_INCLUDED_OPTION__10=lisp.values1(lisp.S_nil);
L_TYPE_OPTION__11=lisp.values1(lisp.S_nil);
L_NAMED_OPTION__12=lisp.values1(lisp.S_nil);
TMP_14=lisp.callFunctionWithCallStack(G_13,lisp.S_nil,G_11.func(lisp.codeArrayToString([77, 65, 75, 69, 45, 126, 65])),L_STRUCTURE_NAME__5);
TMP_15=lisp.callFunctionWithCallStack(G_16,L_STRUCTURE_NAME__5);
TMP_17=lisp.callFunctionWithCallStack(G_18,TMP_14,TMP_15);
L_CONSTRUCTOR_NAME__13=lisp.values1(TMP_17);
TMP_19=lisp.callFunctionWithCallStack(G_13,lisp.S_nil,G_11.func(lisp.codeArrayToString([67, 79, 80, 89, 45, 126, 65])),L_STRUCTURE_NAME__5);
TMP_20=lisp.callFunctionWithCallStack(G_16,L_STRUCTURE_NAME__5);
TMP_21=lisp.callFunctionWithCallStack(G_18,TMP_19,TMP_20);
L_COPIER_NAME__14=lisp.values1(TMP_21);
TMP_22=lisp.callFunctionWithCallStack(G_13,lisp.S_nil,G_11.func(lisp.codeArrayToString([126, 65, 45, 80])),L_STRUCTURE_NAME__5);
TMP_23=lisp.callFunctionWithCallStack(G_16,L_STRUCTURE_NAME__5);
TMP_24=lisp.callFunctionWithCallStack(G_18,TMP_22,TMP_23);
L_PREDICATE_NAME__15=lisp.values1(TMP_24);
L_PRINT_FUNCTION__16=lisp.values1(lisp.S_nil);
{
L_G1__18=lisp.values1(L_OPTIONS__6);
for(;;){
TMP_25=lisp.callFunctionWithCallStack(G_26,L_G1__18);
if(lisp.values1(TMP_25) !== lisp.S_nil){
}else{
{
TMP_27=lisp.callFunctionWithCallStack(G_28,L_G1__18);
L_OPTION__19=lisp.values1(TMP_27);
TMP_29=lisp.callFunctionWithCallStack(G_30,L_G1__18);
L_G1__18=lisp.values1(TMP_29);
TMP_31=lisp.CL_consp(L_OPTION__19);
if(lisp.values1(TMP_31) !== lisp.S_nil){
}else{
TMP_32=lisp.callFunctionWithCallStack(G_33,L_OPTION__19);
L_OPTION__19=lisp.values1(TMP_32);
}
{
TMP_34=lisp.callFunctionWithCallStack(G_35,L_OPTION__19);
L_G8__20=lisp.values1(TMP_34);
{
TMP_37=lisp.callFunctionWithCallStack(G_38,L_G8__20,G_36);
L_G9__21=lisp.values1(TMP_37);
if(lisp.values1(L_G9__21) !== lisp.S_nil){
TMP_39=lisp.callFunctionWithCallStack(G_40,L_OPTION__19);
L_CONC_NAME__8=lisp.values1(TMP_39);
}else{
{
TMP_42=lisp.callFunctionWithCallStack(G_38,L_G8__20,G_41);
L_G10__22=lisp.values1(TMP_42);
if(lisp.values1(L_G10__22) !== lisp.S_nil){
TMP_43=lisp.callFunctionWithCallStack(G_40,L_OPTION__19);
L_CONSTRUCTOR_NAME__13=lisp.values1(TMP_43);
TMP_44=lisp.callFunctionWithCallStack(G_45,L_OPTION__19);
L_CONSTRUCTOR_OPTION__9=lisp.values1(TMP_44);
}else{
{
TMP_47=lisp.callFunctionWithCallStack(G_38,L_G8__20,G_46);
L_G11__23=lisp.values1(TMP_47);
if(lisp.values1(L_G11__23) !== lisp.S_nil){
TMP_48=lisp.callFunctionWithCallStack(G_45,L_OPTION__19);
TMP_49=lisp.callFunctionWithCallStack(G_50,TMP_48);
if(lisp.values1(TMP_49) !== lisp.S_nil){
}else{
TMP_51=lisp.callFunctionWithCallStack(G_40,L_OPTION__19);
L_COPIER_NAME__14=lisp.values1(TMP_51);
}
}else{
{
TMP_53=lisp.callFunctionWithCallStack(G_38,L_G8__20,G_52);
L_G12__24=lisp.values1(TMP_53);
if(lisp.values1(L_G12__24) !== lisp.S_nil){
TMP_54=lisp.callFunctionWithCallStack(G_45,L_OPTION__19);
TMP_55=lisp.callFunctionWithCallStack(G_50,TMP_54);
if(lisp.values1(TMP_55) !== lisp.S_nil){
}else{
TMP_56=lisp.callFunctionWithCallStack(G_40,L_OPTION__19);
L_PREDICATE_NAME__15=lisp.values1(TMP_56);
}
}else{
{
TMP_58=lisp.callFunctionWithCallStack(G_38,L_G8__20,G_57);
L_G13__25=lisp.values1(TMP_58);
if(lisp.values1(L_G13__25) !== lisp.S_nil){
TMP_59=lisp.callFunctionWithCallStack(G_40,L_OPTION__19);
TMP_60=lisp.callFunctionWithCallStack(G_61,L_OPTION__19);
TMP_62=lisp.CL_cons(TMP_59,TMP_60);
L_INCLUDED_OPTION__10=lisp.values1(TMP_62);
}else{
{
TMP_65=lisp.callFunctionWithCallStack(G_66,L_G8__20,lisp.makeCons(G_63, lisp.makeCons(G_64, lisp.S_nil)));
L_G14__26=lisp.values1(TMP_65);
if(lisp.values1(L_G14__26) !== lisp.S_nil){
TMP_67=lisp.callFunctionWithCallStack(G_40,L_OPTION__19);
L_PRINT_FUNCTION__16=lisp.values1(TMP_67);
}else{
{
TMP_69=lisp.callFunctionWithCallStack(G_38,L_G8__20,G_68);
L_G15__27=lisp.values1(TMP_69);
if(lisp.values1(L_G15__27) !== lisp.S_nil){
TMP_70=lisp.callFunctionWithCallStack(G_40,L_OPTION__19);
L_TYPE_OPTION__11=lisp.values1(TMP_70);
}else{
{
TMP_72=lisp.callFunctionWithCallStack(G_38,L_G8__20,G_71);
L_G16__28=lisp.values1(TMP_72);
if(lisp.values1(L_G16__28) !== lisp.S_nil){
L_NAMED_OPTION__12=lisp.values1(G_73);
}else{
lisp.callFunctionWithCallStack(G_74,G_11.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G8__20,lisp.makeCons(G_36, lisp.makeCons(G_41, lisp.makeCons(G_46, lisp.makeCons(G_52, lisp.makeCons(G_57, lisp.makeCons(G_63, lisp.makeCons(G_64, lisp.makeCons(G_68, lisp.makeCons(G_71, lisp.S_nil))))))))));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
continue;
}
break;
}
}
TMP_83=lisp.callFunctionWithCallStack(G_33,G_75,L_STRUCTURE_NAME__5,G_36,L_CONC_NAME__8,G_76,L_CONSTRUCTOR_OPTION__9,G_77,L_INCLUDED_OPTION__10,G_78,L_TYPE_OPTION__11,G_79,L_NAMED_OPTION__12,G_80,L_CONSTRUCTOR_NAME__13,G_81,L_COPIER_NAME__14,G_82,L_PREDICATE_NAME__15,G_64,L_PRINT_FUNCTION__16);
}
return TMP_83;
});
TMP_84=lisp.callFunctionWithCallStack(G_85,TMP_10);
TMP_86=lisp.CL_consp(L_NAME_AND_OPTIONS__3);
if(lisp.values1(TMP_86) !== lisp.S_nil){
TMP_88=lisp.callFunctionWithCallStack(G_35,L_NAME_AND_OPTIONS__3);
TMP_89=lisp.callFunctionWithCallStack(G_45,L_NAME_AND_OPTIONS__3);
TMP_90=lisp.CL_values(TMP_88,TMP_89);
TMP_87=TMP_90;
}else{
TMP_91=lisp.CL_values(L_NAME_AND_OPTIONS__3,lisp.S_nil);
TMP_87=TMP_91;
}
TMP_92=lisp.CL_multipleValueCall(TMP_84,TMP_87);
return TMP_92;
});
CL_COMMON_LISP_PARSE_STRUCTURE_NAME_AND_OPTIONS=lisp.values1(F_PARSE_STRUCTURE_NAME_AND_OPTIONS_8);
let F_STRUCTURE_PRINTER_94;
F_STRUCTURE_PRINTER_94=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_95, arguments.length);
}
let TMP_97;
let TMP_96;
let L_STRUCTURE__31;
L_STRUCTURE__31=arguments[0];
TMP_96=lisp.CL_structureName(L_STRUCTURE__31);
TMP_97=lisp.callFunctionWithCallStack(G_98,TMP_96,G_95);
return TMP_97;
});
CL_COMMON_LISP_STRUCTURE_PRINTER=lisp.values1(F_STRUCTURE_PRINTER_94);
// initialize symbols
G_3 = lisp.intern('COPY-STRUCTURE', 'COMMON-LISP');
G_5 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_6 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_9 = lisp.intern('PARSE-STRUCTURE-NAME-AND-OPTIONS', 'COMMON-LISP');
G_11 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_13 = lisp.intern('FORMAT', 'COMMON-LISP');
G_16 = lisp.intern('SYMBOL-PACKAGE', 'COMMON-LISP');
G_18 = lisp.intern('INTERN', 'COMMON-LISP');
G_26 = lisp.intern('ENDP', 'COMMON-LISP');
G_28 = lisp.intern('CAR', 'COMMON-LISP');
G_30 = lisp.intern('CDR', 'COMMON-LISP');
G_33 = lisp.intern('LIST', 'COMMON-LISP');
G_35 = lisp.intern('FIRST', 'COMMON-LISP');
G_36 = lisp.intern('CONC-NAME', 'KEYWORD');
G_38 = lisp.intern('EQL', 'COMMON-LISP');
G_40 = lisp.intern('SECOND', 'COMMON-LISP');
G_41 = lisp.intern('CONSTRUCTOR', 'KEYWORD');
G_45 = lisp.intern('REST', 'COMMON-LISP');
G_46 = lisp.intern('COPIER', 'KEYWORD');
G_50 = lisp.intern('NULL', 'COMMON-LISP');
G_52 = lisp.intern('PREDICATE', 'KEYWORD');
G_57 = lisp.intern('INCLUDE', 'KEYWORD');
G_61 = lisp.intern('CDDR', 'COMMON-LISP');
G_63 = lisp.intern('PRINT-OBJECT', 'KEYWORD');
G_64 = lisp.intern('PRINT-FUNCTION', 'KEYWORD');
G_66 = lisp.intern('MEMBER', 'COMMON-LISP');
G_68 = lisp.intern('TYPE', 'KEYWORD');
G_71 = lisp.intern('NAMED', 'KEYWORD');
G_73 = lisp.intern('T', 'COMMON-LISP');
G_74 = lisp.intern('ERROR', 'COMMON-LISP');
G_75 = lisp.intern('STRUCTURE-NAME', 'KEYWORD');
G_76 = lisp.intern('CONSTRUCTOR-OPTION', 'KEYWORD');
G_77 = lisp.intern('INCLUDED-OPTION', 'KEYWORD');
G_78 = lisp.intern('TYPE-OPTION', 'KEYWORD');
G_79 = lisp.intern('NAMED-OPTION', 'KEYWORD');
G_80 = lisp.intern('CONSTRUCTOR-NAME', 'KEYWORD');
G_81 = lisp.intern('COPIER-NAME', 'KEYWORD');
G_82 = lisp.intern('PREDICATE-NAME', 'KEYWORD');
G_85 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_93 = lisp.intern('DEFSTRUCT', 'COMMON-LISP');
G_95 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_98 = lisp.intern('GET', 'COMMON-LISP');
G_99 = lisp.intern('MACRO', 'COMPILER');
G_102 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_104 = lisp.intern('<=', 'COMMON-LISP');
G_106 = lisp.intern('NAME-AND-OPTIONS', 'COMMON-LISP');
G_107 = lisp.intern('&REST', 'COMMON-LISP');
G_108 = lisp.intern('SLOT-DESCRIPTIONS', 'COMMON-LISP');
G_116 = lisp.intern('&KEY', 'COMMON-LISP');
G_117 = lisp.intern('STRUCTURE-NAME', 'COMMON-LISP');
G_118 = lisp.intern('CONC-NAME', 'COMMON-LISP');
G_119 = lisp.intern('CONSTRUCTOR-OPTION', 'COMMON-LISP');
G_120 = lisp.intern('INCLUDED-OPTION', 'COMMON-LISP');
G_121 = lisp.intern('TYPE-OPTION', 'COMMON-LISP');
G_122 = lisp.intern('NAMED-OPTION', 'COMMON-LISP');
G_123 = lisp.intern('CONSTRUCTOR-NAME', 'COMMON-LISP');
G_124 = lisp.intern('COPIER-NAME', 'COMMON-LISP');
G_125 = lisp.intern('PREDICATE-NAME', 'COMMON-LISP');
G_126 = lisp.intern('PRINT-FUNCTION', 'COMMON-LISP');
G_132 = lisp.intern('NIL', 'COMMON-LISP');
G_167 = lisp.intern('GETF', 'COMMON-LISP');
G_177 = lisp.intern('SYMBOL', 'COMMON-LISP');
G_178 = lisp.intern('CHECK-TYPE', 'COMMON-LISP');
G_179 = lisp.intern('PROGN', 'COMMON-LISP');
G_182 = lisp.intern('DEFUN', 'COMMON-LISP');
G_183 = lisp.intern('X', 'COMMON-LISP');
G_185 = lisp.intern('LIST*', 'COMMON-LISP');
G_189 = lisp.intern('TYPEP', 'COMMON-LISP');
G_190 = lisp.intern('QUOTE', 'COMMON-LISP');
G_206 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_208 = lisp.intern('MAKE-STRUCTURE', 'SYSTEM');
G_224 = lisp.intern('+', 'COMMON-LISP');
G_231 = lisp.intern('TYPE', 'COMMON-LISP');
G_232 = lisp.intern('READ-ONLY', 'COMMON-LISP');
G_239 = lisp.intern('READ-ONLY', 'KEYWORD');
G_250 = lisp.intern('STRUCTURE', 'COMMON-LISP');
G_251 = lisp.intern('UNLESS', 'COMMON-LISP');
G_252 = lisp.intern('STRUCTURE-P', 'SYSTEM');
G_253 = lisp.intern('%STRUCTURE-REF', 'SYSTEM');
G_257 = lisp.intern('SETF', 'COMMON-LISP');
G_259 = lisp.intern('VALUE', 'COMMON-LISP');
G_260 = lisp.intern('%STRUCTURE-SET', 'SYSTEM');
G_270 = lisp.intern('GENSYM', 'COMMON-LISP');
G_272 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_276 = lisp.intern('STREAM', 'COMMON-LISP');
G_277 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_279 = lisp.intern('STRING', 'COMMON-LISP');
G_283 = lisp.intern('=', 'COMMON-LISP');
G_285 = lisp.intern('PRIN1', 'COMMON-LISP');
G_290 = lisp.intern('KEYWORD', 'KEYWORD');
G_300 = lisp.intern('APPEND', 'COMMON-LISP');
G_309 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_COPY_STRUCTURE.lisp_name = 'COPY-STRUCTURE'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_COPY_STRUCTURE);
CL_COMMON_LISP_PARSE_STRUCTURE_NAME_AND_OPTIONS.lisp_name = 'PARSE-STRUCTURE-NAME-AND-OPTIONS'
lisp.setSymbolFunction(G_9, CL_COMMON_LISP_PARSE_STRUCTURE_NAME_AND_OPTIONS);
CL_COMMON_LISP_STRUCTURE_PRINTER.lisp_name = 'STRUCTURE-PRINTER'
lisp.setSymbolFunction(G_95, CL_COMMON_LISP_STRUCTURE_PRINTER);
TMP_100=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_308;
let TMP_307;
let TMP_306;
let TMP_305;
let TMP_304;
let TMP_303;
let TMP_302;
let TMP_301;
let TMP_299;
let TMP_298;
let TMP_281;
let L_I__85;
let TMP_280;
let TMP_278;
let TMP_275;
let TMP_274;
let TMP_273;
let L_STREAM__84;
let TMP_271;
let L_STRUCTURE__83;
let TMP_269;
let TMP_268;
let TMP_267;
let TMP_266;
let TMP_265;
let TMP_217;
let L_I__68;
let TMP_216;
let TMP_215;
let TMP_214;
let TMP_210;
let TMP_209;
let TMP_207;
let TMP_205;
let TMP_199;
let TMP_198;
let TMP_197;
let TMP_196;
let TMP_195;
let TMP_194;
let TMP_193;
let TMP_192;
let TMP_191;
let TMP_188;
let TMP_187;
let TMP_186;
let TMP_184;
let TMP_181;
let TMP_180;
let L_PRINT_FUNCTION__64;
let TMP_176;
let L_PREDICATE_NAME__63;
let TMP_175;
let L_COPIER_NAME__62;
let TMP_174;
let L_CONSTRUCTOR_NAME__61;
let TMP_173;
let L_NAMED_OPTION__60;
let TMP_172;
let L_TYPE_OPTION__59;
let TMP_171;
let L_INCLUDED_OPTION__58;
let TMP_170;
let L_CONSTRUCTOR_OPTION__57;
let TMP_169;
let L_CONC_NAME__56;
let TMP_168;
let L_STRUCTURE_NAME__55;
let TMP_166;
let L_G24__54;
let L_G42__53;
let TMP_165;
let TMP_164;
let TMP_163;
let L_G41__52;
let TMP_162;
let TMP_161;
let TMP_160;
let L_G40__51;
let TMP_159;
let TMP_158;
let TMP_157;
let L_G39__50;
let TMP_156;
let TMP_155;
let TMP_154;
let L_G38__49;
let TMP_153;
let TMP_152;
let TMP_151;
let L_G37__48;
let TMP_150;
let TMP_149;
let TMP_148;
let L_G36__47;
let TMP_147;
let TMP_146;
let TMP_145;
let L_G35__46;
let TMP_144;
let TMP_143;
let TMP_142;
let L_G34__45;
let TMP_141;
let TMP_140;
let TMP_139;
let L_G33__44;
let TMP_138;
let TMP_137;
let TMP_136;
let L_G32__43;
let TMP_135;
let TMP_134;
let TMP_131;
let L_G25__42;
let TMP_129;
let L_G23__40;
let TMP_127;
let TMP_115;
let TMP_114;
let TMP_113;
let L_G22__39;
let TMP_112;
let L_SLOT_DESCRIPTIONS__38;
let L_G21__37;
let TMP_111;
let L_NAME_AND_OPTIONS__36;
let TMP_110;
let L_G20__35;
let TMP_109;
let TMP_105;
let TMP_103;
let TMP_101;
let L_G19__34;
let L_G18__33;
L_G18__33=lisp.jsArrayToList(arguments, 0);
{
L_G19__34=lisp.values1(L_G18__33);
{
TMP_101=lisp.callFunctionWithCallStack(G_102,L_G19__34);
TMP_103=lisp.callFunctionWithCallStack(G_104,1,TMP_101);
if(lisp.values1(TMP_103) !== lisp.S_nil){
TMP_105=lisp.values1(lisp.S_nil);
}else{
TMP_109=lisp.callFunctionWithCallStack(G_74,G_11.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_106, lisp.makeCons(G_107, lisp.makeCons(G_108, lisp.S_nil))),L_G19__34);
TMP_105=lisp.values1(lisp.values1(TMP_109));
}
L_G20__35=lisp.values1(TMP_105);
TMP_110=lisp.callFunctionWithCallStack(G_35,L_G19__34);
L_NAME_AND_OPTIONS__36=lisp.values1(TMP_110);
TMP_111=lisp.callFunctionWithCallStack(G_45,L_G19__34);
L_G21__37=lisp.values1(TMP_111);
L_SLOT_DESCRIPTIONS__38=lisp.values1(L_G21__37);
{
TMP_112=G_9.func(L_NAME_AND_OPTIONS__36);
L_G22__39=lisp.values1(TMP_112);
{
TMP_113=lisp.callFunctionWithCallStack(G_102,L_G22__39);
TMP_114=lisp.callFunctionWithCallStack(G_104,0,TMP_113);
if(lisp.values1(TMP_114) !== lisp.S_nil){
TMP_115=lisp.values1(lisp.S_nil);
}else{
TMP_127=lisp.callFunctionWithCallStack(G_74,G_11.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_116, lisp.makeCons(G_117, lisp.makeCons(G_118, lisp.makeCons(G_119, lisp.makeCons(G_120, lisp.makeCons(G_121, lisp.makeCons(G_122, lisp.makeCons(G_123, lisp.makeCons(G_124, lisp.makeCons(G_125, lisp.makeCons(G_126, lisp.S_nil))))))))))),L_G22__39);
TMP_115=lisp.values1(lisp.values1(TMP_127));
}
L_G23__40=lisp.values1(TMP_115);
try {
{
L_G25__42=lisp.values1(L_G22__39);
let HOST_G27_STATE = 'G29';
HOST_G27: for(;;){
try{
switch(HOST_G27_STATE){
case 'G29':
case 'G28':
TMP_131=lisp.callFunctionWithCallStack(G_50,L_G25__42);
if(lisp.values1(TMP_131) !== lisp.S_nil){
throw new lisp.BlockValue(G_132,lisp.values1(lisp.S_nil));}else{
let HOST_G30_STATE = 'G31';
HOST_G30: for(;;){
try{
switch(HOST_G30_STATE){
case 'G31':
{
TMP_134=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_135=lisp.CL_eq(G_64,TMP_134);
L_G32__43=lisp.values1(TMP_135);
if(lisp.values1(L_G32__43) !== lisp.S_nil){
TMP_136=lisp.values1(L_G32__43);
}else{
{
TMP_137=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_138=lisp.CL_eq(G_82,TMP_137);
L_G33__44=lisp.values1(TMP_138);
if(lisp.values1(L_G33__44) !== lisp.S_nil){
TMP_139=lisp.values1(L_G33__44);
}else{
{
TMP_140=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_141=lisp.CL_eq(G_81,TMP_140);
L_G34__45=lisp.values1(TMP_141);
if(lisp.values1(L_G34__45) !== lisp.S_nil){
TMP_142=lisp.values1(L_G34__45);
}else{
{
TMP_143=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_144=lisp.CL_eq(G_80,TMP_143);
L_G35__46=lisp.values1(TMP_144);
if(lisp.values1(L_G35__46) !== lisp.S_nil){
TMP_145=lisp.values1(L_G35__46);
}else{
{
TMP_146=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_147=lisp.CL_eq(G_79,TMP_146);
L_G36__47=lisp.values1(TMP_147);
if(lisp.values1(L_G36__47) !== lisp.S_nil){
TMP_148=lisp.values1(L_G36__47);
}else{
{
TMP_149=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_150=lisp.CL_eq(G_78,TMP_149);
L_G37__48=lisp.values1(TMP_150);
if(lisp.values1(L_G37__48) !== lisp.S_nil){
TMP_151=lisp.values1(L_G37__48);
}else{
{
TMP_152=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_153=lisp.CL_eq(G_77,TMP_152);
L_G38__49=lisp.values1(TMP_153);
if(lisp.values1(L_G38__49) !== lisp.S_nil){
TMP_154=lisp.values1(L_G38__49);
}else{
{
TMP_155=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_156=lisp.CL_eq(G_76,TMP_155);
L_G39__50=lisp.values1(TMP_156);
if(lisp.values1(L_G39__50) !== lisp.S_nil){
TMP_157=lisp.values1(L_G39__50);
}else{
{
TMP_158=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_159=lisp.CL_eq(G_36,TMP_158);
L_G40__51=lisp.values1(TMP_159);
if(lisp.values1(L_G40__51) !== lisp.S_nil){
TMP_160=lisp.values1(L_G40__51);
}else{
{
TMP_161=lisp.callFunctionWithCallStack(G_35,L_G25__42);
TMP_162=lisp.CL_eq(G_75,TMP_161);
L_G41__52=lisp.values1(TMP_162);
if(lisp.values1(L_G41__52) !== lisp.S_nil){
TMP_163=lisp.values1(L_G41__52);
}else{
TMP_163=lisp.values1(lisp.S_nil);
}
}
TMP_160=lisp.values1(lisp.values1(TMP_163));
}
}
TMP_157=lisp.values1(lisp.values1(TMP_160));
}
}
TMP_154=lisp.values1(lisp.values1(TMP_157));
}
}
TMP_151=lisp.values1(lisp.values1(TMP_154));
}
}
TMP_148=lisp.values1(lisp.values1(TMP_151));
}
}
TMP_145=lisp.values1(lisp.values1(TMP_148));
}
}
TMP_142=lisp.values1(lisp.values1(TMP_145));
}
}
TMP_139=lisp.values1(lisp.values1(TMP_142));
}
}
TMP_136=lisp.values1(lisp.values1(TMP_139));
}
}
if(lisp.values1(lisp.values1(TMP_136)) !== lisp.S_nil){
}else{
TMP_164=lisp.callFunctionWithCallStack(G_35,L_G25__42);
lisp.callFunctionWithCallStack(G_74,G_11.func(lisp.codeArrayToString([85, 110, 107, 110, 111, 119, 110, 32, 38, 107, 101, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 58, 32, 126, 83])),TMP_164);
}
}
break;
}catch(ERR_133){
if(ERR_133 instanceof lisp.TagValue && ERR_133.id==='HOST_G30'){HOST_G30_STATE=ERR_133.index;}
else{throw ERR_133;}}
}
{
TMP_165=lisp.callFunctionWithCallStack(G_61,L_G25__42);
L_G42__53=lisp.values1(TMP_165);
L_G25__42=lisp.values1(L_G42__53);
}
throw new lisp.TagValue('HOST_G27', 'G28');
}
}
break;
}catch(ERR_130){
if(ERR_130 instanceof lisp.TagValue && ERR_130.id==='HOST_G27'){HOST_G27_STATE=ERR_130.index;}
else{throw ERR_130;}}
}
}
TMP_129=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)))
}catch(E__128){if(E__128 instanceof lisp.BlockValue && E__128.name === G_132){TMP_129=E__128.value;}
else{throw E__128;}
}
L_G24__54=lisp.values1(TMP_129);
TMP_166=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_75);
L_STRUCTURE_NAME__55=lisp.values1(TMP_166);
TMP_168=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_36);
L_CONC_NAME__56=lisp.values1(TMP_168);
TMP_169=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_76);
L_CONSTRUCTOR_OPTION__57=lisp.values1(TMP_169);
TMP_170=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_77);
L_INCLUDED_OPTION__58=lisp.values1(TMP_170);
TMP_171=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_78);
L_TYPE_OPTION__59=lisp.values1(TMP_171);
TMP_172=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_79);
L_NAMED_OPTION__60=lisp.values1(TMP_172);
TMP_173=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_80);
L_CONSTRUCTOR_NAME__61=lisp.values1(TMP_173);
TMP_174=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_81);
L_COPIER_NAME__62=lisp.values1(TMP_174);
TMP_175=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_82);
L_PREDICATE_NAME__63=lisp.values1(TMP_175);
TMP_176=lisp.callFunctionWithCallStack(G_167,L_G22__39,G_64);
L_PRINT_FUNCTION__64=lisp.values1(TMP_176);
lisp.callFunctionWithCallStack(G_178,L_STRUCTURE_NAME__55,lisp.symbolValue(G_177));
TMP_180=lisp.callFunctionWithCallStack(G_50,L_COPIER_NAME__62);
if(lisp.values1(TMP_180) !== lisp.S_nil){
TMP_181=lisp.values1(lisp.S_nil);
}else{
TMP_184=lisp.callFunctionWithCallStack(G_185,G_182,L_COPIER_NAME__62,lisp.makeCons(lisp.makeCons(G_183, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_3, lisp.makeCons(G_183, lisp.S_nil)), lisp.S_nil)));
TMP_186=lisp.callFunctionWithCallStack(G_33,TMP_184);
TMP_181=lisp.values1(lisp.values1(TMP_186));
}
TMP_187=lisp.callFunctionWithCallStack(G_50,L_PREDICATE_NAME__63);
if(lisp.values1(TMP_187) !== lisp.S_nil){
TMP_188=lisp.values1(lisp.S_nil);
}else{
TMP_191=lisp.callFunctionWithCallStack(G_33,G_190,L_STRUCTURE_NAME__55);
TMP_192=lisp.callFunctionWithCallStack(G_33,G_189,G_183,TMP_191);
TMP_193=lisp.callFunctionWithCallStack(G_33,G_182,L_PREDICATE_NAME__63,lisp.makeCons(G_183, lisp.S_nil),TMP_192);
TMP_194=lisp.callFunctionWithCallStack(G_33,TMP_193);
TMP_188=lisp.values1(lisp.values1(TMP_194));
}
if(lisp.values1(L_CONSTRUCTOR_OPTION__57) !== lisp.S_nil){
TMP_196=lisp.callFunctionWithCallStack(G_45,L_CONSTRUCTOR_OPTION__57);
TMP_195=lisp.values1(TMP_196);
}else{
TMP_195=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_195) !== lisp.S_nil){
TMP_198=lisp.callFunctionWithCallStack(G_40,L_CONSTRUCTOR_OPTION__57);
TMP_197=lisp.values1(TMP_198);
}else{
TMP_199=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_204;
let TMP_203;
let TMP_202;
let TMP_201;
let TMP_200;
let L_SLOT_DESC__65;
L_SLOT_DESC__65=arguments[0];
TMP_200=lisp.CL_consp(L_SLOT_DESC__65);
if(lisp.values1(TMP_200) !== lisp.S_nil){
TMP_202=lisp.callFunctionWithCallStack(G_35,L_SLOT_DESC__65);
TMP_203=lisp.callFunctionWithCallStack(G_40,L_SLOT_DESC__65);
TMP_204=lisp.callFunctionWithCallStack(G_33,TMP_202,TMP_203);
TMP_201=TMP_204;
}else{
TMP_201=lisp.values1(L_SLOT_DESC__65);
}
return TMP_201;
});
TMP_205=lisp.callFunctionWithCallStack(G_206,TMP_199,L_SLOT_DESCRIPTIONS__38);
TMP_207=lisp.CL_cons(G_116,TMP_205);
TMP_197=lisp.values1(TMP_207);
}
TMP_209=lisp.callFunctionWithCallStack(G_33,G_190,L_STRUCTURE_NAME__55);
TMP_210=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_SLOT_NAME__67;
let TMP_213;
let TMP_212;
let TMP_211;
let L_SLOT_DESC__66;
L_SLOT_DESC__66=arguments[0];
{
TMP_211=lisp.CL_consp(L_SLOT_DESC__66);
if(lisp.values1(TMP_211) !== lisp.S_nil){
TMP_213=lisp.callFunctionWithCallStack(G_35,L_SLOT_DESC__66);
TMP_212=lisp.values1(TMP_213);
}else{
TMP_212=lisp.values1(L_SLOT_DESC__66);
}
L_SLOT_NAME__67=lisp.values1(TMP_212);
}
return lisp.values1(L_SLOT_NAME__67);
});
TMP_214=lisp.callFunctionWithCallStack(G_206,TMP_210,L_SLOT_DESCRIPTIONS__38);
TMP_215=lisp.callFunctionWithCallStack(G_185,G_208,TMP_209,TMP_214);
TMP_216=lisp.callFunctionWithCallStack(G_33,G_182,L_CONSTRUCTOR_NAME__61,TMP_197,TMP_215);
{
L_I__68=lisp.values1(-1);
TMP_217=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_264;
let TMP_263;
let TMP_262;
let TMP_261;
let TMP_258;
let TMP_256;
let TMP_255;
let TMP_254;
let L_READ_ONLY__82;
let TMP_249;
let L_TYPE__81;
let TMP_248;
let L_G46__80;
let L_G56__79;
let TMP_247;
let TMP_246;
let TMP_245;
let L_G55__78;
let TMP_244;
let TMP_243;
let TMP_242;
let L_G54__77;
let TMP_241;
let TMP_240;
let TMP_237;
let L_G47__76;
let TMP_235;
let L_G45__74;
let TMP_233;
let TMP_230;
let TMP_229;
let TMP_228;
let L_G44__73;
let TMP_227;
let TMP_226;
let TMP_225;
let L_G43__72;
let TMP_223;
let L_ACCESSOR__71;
let TMP_222;
let TMP_221;
let L_SLOT_NAME__70;
let TMP_220;
let TMP_219;
let TMP_218;
let L_SLOT_DESC__69;
L_SLOT_DESC__69=arguments[0];
{
TMP_218=lisp.CL_consp(L_SLOT_DESC__69);
if(lisp.values1(TMP_218) !== lisp.S_nil){
TMP_220=lisp.callFunctionWithCallStack(G_35,L_SLOT_DESC__69);
TMP_219=lisp.values1(TMP_220);
}else{
TMP_219=lisp.values1(L_SLOT_DESC__69);
}
L_SLOT_NAME__70=lisp.values1(TMP_219);
TMP_221=lisp.callFunctionWithCallStack(G_13,lisp.S_nil,G_11.func(lisp.codeArrayToString([126, 65, 126, 65])),L_CONC_NAME__56,L_SLOT_NAME__70);
TMP_222=lisp.callFunctionWithCallStack(G_18,TMP_221);
L_ACCESSOR__71=lisp.values1(TMP_222);
{
TMP_223=lisp.callFunctionWithCallStack(G_224,L_I__68,1);
L_G43__72=lisp.values1(TMP_223);
L_I__68=lisp.values1(L_G43__72);
}
{
TMP_225=lisp.CL_consp(L_SLOT_DESC__69);
if(lisp.values1(TMP_225) !== lisp.S_nil){
TMP_227=lisp.callFunctionWithCallStack(G_61,L_SLOT_DESC__69);
TMP_226=lisp.values1(TMP_227);
}else{
TMP_226=lisp.values1(lisp.S_nil);
}
L_G44__73=lisp.values1(TMP_226);
{
TMP_228=lisp.callFunctionWithCallStack(G_102,L_G44__73);
TMP_229=lisp.callFunctionWithCallStack(G_104,0,TMP_228);
if(lisp.values1(TMP_229) !== lisp.S_nil){
TMP_230=lisp.values1(lisp.S_nil);
}else{
TMP_233=lisp.callFunctionWithCallStack(G_74,G_11.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_116, lisp.makeCons(G_231, lisp.makeCons(G_232, lisp.S_nil))),L_G44__73);
TMP_230=lisp.values1(lisp.values1(TMP_233));
}
L_G45__74=lisp.values1(TMP_230);
try {
{
L_G47__76=lisp.values1(L_G44__73);
let HOST_G49_STATE = 'G51';
HOST_G49: for(;;){
try{
switch(HOST_G49_STATE){
case 'G51':
case 'G50':
TMP_237=lisp.callFunctionWithCallStack(G_50,L_G47__76);
if(lisp.values1(TMP_237) !== lisp.S_nil){
throw new lisp.BlockValue(G_132,lisp.values1(lisp.S_nil));}else{
let HOST_G52_STATE = 'G53';
HOST_G52: for(;;){
try{
switch(HOST_G52_STATE){
case 'G53':
{
TMP_240=lisp.callFunctionWithCallStack(G_35,L_G47__76);
TMP_241=lisp.CL_eq(G_239,TMP_240);
L_G54__77=lisp.values1(TMP_241);
if(lisp.values1(L_G54__77) !== lisp.S_nil){
TMP_242=lisp.values1(L_G54__77);
}else{
{
TMP_243=lisp.callFunctionWithCallStack(G_35,L_G47__76);
TMP_244=lisp.CL_eq(G_68,TMP_243);
L_G55__78=lisp.values1(TMP_244);
if(lisp.values1(L_G55__78) !== lisp.S_nil){
TMP_245=lisp.values1(L_G55__78);
}else{
TMP_245=lisp.values1(lisp.S_nil);
}
}
TMP_242=lisp.values1(lisp.values1(TMP_245));
}
}
if(lisp.values1(lisp.values1(TMP_242)) !== lisp.S_nil){
}else{
TMP_246=lisp.callFunctionWithCallStack(G_35,L_G47__76);
lisp.callFunctionWithCallStack(G_74,G_11.func(lisp.codeArrayToString([85, 110, 107, 110, 111, 119, 110, 32, 38, 107, 101, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 58, 32, 126, 83])),TMP_246);
}
}
break;
}catch(ERR_238){
if(ERR_238 instanceof lisp.TagValue && ERR_238.id==='HOST_G52'){HOST_G52_STATE=ERR_238.index;}
else{throw ERR_238;}}
}
{
TMP_247=lisp.callFunctionWithCallStack(G_61,L_G47__76);
L_G56__79=lisp.values1(TMP_247);
L_G47__76=lisp.values1(L_G56__79);
}
throw new lisp.TagValue('HOST_G49', 'G50');
}
}
break;
}catch(ERR_236){
if(ERR_236 instanceof lisp.TagValue && ERR_236.id==='HOST_G49'){HOST_G49_STATE=ERR_236.index;}
else{throw ERR_236;}}
}
}
TMP_235=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)))
}catch(E__234){if(E__234 instanceof lisp.BlockValue && E__234.name === G_132){TMP_235=E__234.value;}
else{throw E__234;}
}
L_G46__80=lisp.values1(TMP_235);
TMP_248=lisp.callFunctionWithCallStack(G_167,L_G44__73,G_68);
L_TYPE__81=lisp.values1(TMP_248);
TMP_249=lisp.callFunctionWithCallStack(G_167,L_G44__73,G_239);
L_READ_ONLY__82=lisp.values1(TMP_249);
TMP_254=lisp.callFunctionWithCallStack(G_33,G_253,G_250,L_I__68);
TMP_255=lisp.callFunctionWithCallStack(G_33,G_182,L_ACCESSOR__71,lisp.makeCons(G_250, lisp.S_nil),lisp.makeCons(G_251, lisp.makeCons(lisp.makeCons(G_252, lisp.makeCons(G_250, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_6, lisp.makeCons(G_250, lisp.makeCons(lisp.makeCons(G_190, lisp.makeCons(G_5, lisp.S_nil)), lisp.S_nil))), lisp.S_nil))),TMP_254);
if(lisp.values1(L_READ_ONLY__82) !== lisp.S_nil){
TMP_256=lisp.values1(lisp.S_nil);
}else{
TMP_258=lisp.callFunctionWithCallStack(G_33,G_257,L_ACCESSOR__71);
TMP_261=lisp.callFunctionWithCallStack(G_185,G_260,G_250,L_I__68,lisp.makeCons(G_259, lisp.S_nil));
TMP_262=lisp.callFunctionWithCallStack(G_33,G_182,TMP_258,lisp.makeCons(G_259, lisp.makeCons(G_250, lisp.S_nil)),lisp.makeCons(G_251, lisp.makeCons(lisp.makeCons(G_252, lisp.makeCons(G_250, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_6, lisp.makeCons(G_250, lisp.makeCons(lisp.makeCons(G_190, lisp.makeCons(G_5, lisp.S_nil)), lisp.S_nil))), lisp.S_nil))),TMP_261);
TMP_263=lisp.callFunctionWithCallStack(G_33,TMP_262);
TMP_256=lisp.values1(lisp.values1(TMP_263));
}
TMP_264=lisp.callFunctionWithCallStack(G_185,G_179,TMP_255,TMP_256);
}
}
}
return TMP_264;
});
TMP_265=lisp.callFunctionWithCallStack(G_206,TMP_217,L_SLOT_DESCRIPTIONS__38);
}
TMP_266=lisp.callFunctionWithCallStack(G_33,G_190,L_STRUCTURE_NAME__55);
TMP_267=lisp.callFunctionWithCallStack(G_185,G_98,TMP_266,lisp.makeCons(lisp.makeCons(G_190, lisp.makeCons(G_95, lisp.S_nil)), lisp.S_nil));
if(lisp.values1(L_PRINT_FUNCTION__64) !== lisp.S_nil){
{
TMP_269=lisp.callFunctionWithCallStack(G_270);
L_STRUCTURE__83=lisp.values1(TMP_269);
TMP_271=lisp.callFunctionWithCallStack(G_270);
L_STREAM__84=lisp.values1(TMP_271);
TMP_273=lisp.callFunctionWithCallStack(G_33,L_STRUCTURE__83,L_STREAM__84);
TMP_274=lisp.callFunctionWithCallStack(G_185,L_PRINT_FUNCTION__64,L_STRUCTURE__83,L_STREAM__84,lisp.makeCons(0, lisp.S_nil));
TMP_275=lisp.callFunctionWithCallStack(G_33,G_272,TMP_273,TMP_274);
}
TMP_268=lisp.values1(lisp.values1(TMP_275));
}else{
TMP_278=lisp.callFunctionWithCallStack(G_279,L_STRUCTURE_NAME__55);
TMP_280=lisp.callFunctionWithCallStack(G_185,G_277,TMP_278,lisp.makeCons(G_276, lisp.S_nil));
{
L_I__85=lisp.values1(-1);
TMP_281=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_297;
let TMP_296;
let TMP_295;
let TMP_294;
let L_G57__87;
let TMP_293;
let TMP_292;
let TMP_291;
let TMP_289;
let TMP_288;
let TMP_287;
let TMP_286;
let TMP_284;
let TMP_282;
let L_SLOT_DESC__86;
L_SLOT_DESC__86=arguments[0];
TMP_282=lisp.callFunctionWithCallStack(G_283,L_I__85,-1);
if(lisp.values1(TMP_282) !== lisp.S_nil){
TMP_284=lisp.values1(lisp.S_nil);
}else{
TMP_284=lisp.values1(lisp.values1(lisp.makeCons(G_277, lisp.makeCons(G_11.func(lisp.codeArrayToString([32])), lisp.makeCons(G_276, lisp.S_nil)))));
}
TMP_286=lisp.CL_consp(L_SLOT_DESC__86);
if(lisp.values1(TMP_286) !== lisp.S_nil){
TMP_288=lisp.callFunctionWithCallStack(G_35,L_SLOT_DESC__86);
TMP_287=lisp.values1(TMP_288);
}else{
TMP_287=lisp.values1(L_SLOT_DESC__86);
}
TMP_289=lisp.callFunctionWithCallStack(G_279,TMP_287);
TMP_291=lisp.callFunctionWithCallStack(G_18,TMP_289,G_290);
TMP_292=lisp.callFunctionWithCallStack(G_185,G_285,TMP_291,lisp.makeCons(G_276, lisp.S_nil));
{
TMP_293=lisp.callFunctionWithCallStack(G_224,L_I__85,1);
L_G57__87=lisp.values1(TMP_293);
L_I__85=(TMP_294=lisp.values1(L_G57__87));
}
TMP_295=lisp.callFunctionWithCallStack(G_33,G_253,G_250,lisp.values1(TMP_294));
TMP_296=lisp.callFunctionWithCallStack(G_185,G_285,TMP_295,lisp.makeCons(G_276, lisp.S_nil));
TMP_297=lisp.callFunctionWithCallStack(G_33,G_179,TMP_284,TMP_292,lisp.makeCons(G_277, lisp.makeCons(G_11.func(lisp.codeArrayToString([32])), lisp.makeCons(G_276, lisp.S_nil))),TMP_296);
return TMP_297;
});
TMP_298=lisp.callFunctionWithCallStack(G_206,TMP_281,L_SLOT_DESCRIPTIONS__38);
}
TMP_299=lisp.callFunctionWithCallStack(G_300,lisp.values1(TMP_298),lisp.makeCons(lisp.makeCons(G_277, lisp.makeCons(G_11.func(lisp.codeArrayToString([41])), lisp.makeCons(G_276, lisp.S_nil))), lisp.S_nil));
TMP_301=lisp.callFunctionWithCallStack(G_185,G_272,lisp.makeCons(G_250, lisp.makeCons(G_276, lisp.S_nil)),lisp.makeCons(G_277, lisp.makeCons(G_11.func(lisp.codeArrayToString([35, 83, 40])), lisp.makeCons(G_276, lisp.S_nil))),TMP_280,lisp.makeCons(G_277, lisp.makeCons(G_11.func(lisp.codeArrayToString([32])), lisp.makeCons(G_276, lisp.S_nil))),TMP_299);
TMP_268=lisp.values1(TMP_301);
}
TMP_302=lisp.callFunctionWithCallStack(G_33,G_257,TMP_267,TMP_268);
TMP_303=lisp.callFunctionWithCallStack(G_33,G_190,L_STRUCTURE_NAME__55);
TMP_304=lisp.callFunctionWithCallStack(G_33,TMP_302,TMP_303);
TMP_305=lisp.callFunctionWithCallStack(G_300,lisp.values1(TMP_265),TMP_304);
TMP_306=lisp.CL_cons(TMP_216,TMP_305);
TMP_307=lisp.callFunctionWithCallStack(G_300,TMP_181,TMP_188,TMP_306);
TMP_308=lisp.CL_cons(G_179,TMP_307);
}
}
}
}
return TMP_308;
});
lisp.CL_put(G_93,G_99,TMP_100);
}catch(TMP_1){G_309.func();
console.log(TMP_1.message);
}


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_8;
let G_11;
let G_13;
let G_20;
let G_22;
let G_26;
let G_30;
let G_33;
let G_35;
let G_37;
let G_38;
let G_41;
let G_45;
let G_47;
let G_50;
let G_52;
let G_55;
let G_57;
let G_58;
let G_59;
let G_60;
let G_61;
let G_62;
let G_63;
let G_64;
let G_65;
let G_66;
let G_67;
let G_69;
let G_72;
let G_74;
let G_77;
let G_78;
let G_82;
let G_84;
let G_86;
let G_88;
let G_90;
let G_91;
let G_93;
let G_95;
let G_108;
let G_121;
let G_123;
let G_124;
let G_129;
let G_132;
let G_134;
let G_136;
let G_138;
let G_139;
let G_140;
let G_141;
let G_143;
let G_145;
let G_147;
let G_149;
let G_151;
let G_153;
let G_155;
let G_158;
let G_163;
let G_165;
let G_167;
let G_179;
let CL_COMMON_LISP_COPY_SYMBOL;
let CL_COMMON_LISP_GENTEMP;
let CL_COMMON_LISP_GENSYM;
let CL_COMMON_LISP_SET;
let CL_COMMON_LISP_SYMBOL_FUNCTION;
let CL_COMMON_LISP_SYMBOL_VALUE;
let CL_COMMON_LISP_REMPROP;
let CL_COMMON_LISP_SYMBOL_PLIST;
let CL_COMMON_LISP_GET;
let CL_COMMON_LISP_KEYWORDP;
let CL_COMMON_LISP_SYMBOL_PACKAGE;
let CL_COMMON_LISP_SYMBOL_NAME;
let CL_COMMON_LISP_MAKE_SYMBOL;
let TMP_156;
let TMP_154;
let TMP_152;
let TMP_122;
let TMP_120;
let TMP_111;
let TMP_109;
let TMP_107;
let TMP_98;
let TMP_96;
let TMP_56;
let TMP_42;
let TMP_39;
// toplevel defun
let F_MAKE_SYMBOL_2;
F_MAKE_SYMBOL_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_6;
let TMP_4;
let L_STRING__1;
L_STRING__1=arguments[0];
TMP_4=lisp.callFunctionWithCallStack(G_5,L_STRING__1);
TMP_6=lisp.CL_makeSymbol(TMP_4);
return TMP_6;
});
CL_COMMON_LISP_MAKE_SYMBOL=lisp.values1(F_MAKE_SYMBOL_2);
let F_SYMBOL_NAME_7;
F_SYMBOL_NAME_7=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_8, arguments.length);
}
let TMP_10;
let TMP_9;
let L_SYMBOL__3;
L_SYMBOL__3=arguments[0];
TMP_9=lisp.CL_symbolName(L_SYMBOL__3);
TMP_10=lisp.callFunctionWithCallStack(G_11,TMP_9);
return TMP_10;
});
CL_COMMON_LISP_SYMBOL_NAME=lisp.values1(F_SYMBOL_NAME_7);
let F_SYMBOL_PACKAGE_12;
F_SYMBOL_PACKAGE_12=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_13, arguments.length);
}
let TMP_19;
let TMP_18;
let TMP_17;
let TMP_16;
let TMP_15;
let TMP_14;
let L_SYMBOL__5;
L_SYMBOL__5=arguments[0];
TMP_14=lisp.CL_symbolPackage(L_SYMBOL__5);
TMP_15=lisp.CL_eq(TMP_14,null);
if(lisp.values1(TMP_15) !== lisp.S_nil){
TMP_16=lisp.values1(lisp.S_nil);
}else{
TMP_17=lisp.CL_symbolPackage(L_SYMBOL__5);
TMP_18=lisp.callFunctionWithCallStack(G_11,TMP_17);
TMP_19=lisp.callFunctionWithCallStack(G_20,TMP_18);
TMP_16=TMP_19;
}
return TMP_16;
});
CL_COMMON_LISP_SYMBOL_PACKAGE=lisp.values1(F_SYMBOL_PACKAGE_12);
let F_KEYWORDP_21;
F_KEYWORDP_21=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_22, arguments.length);
}
let TMP_28;
let TMP_27;
let TMP_25;
let TMP_24;
let TMP_23;
let L_X__7;
L_X__7=arguments[0];
TMP_23=lisp.CL_symbolp(L_X__7);
if(lisp.values1(TMP_23) !== lisp.S_nil){
TMP_25=G_13.func(L_X__7);
TMP_27=lisp.callFunctionWithCallStack(G_20,G_26);
TMP_28=lisp.CL_eq(TMP_25,TMP_27);
TMP_24=TMP_28;
}else{
TMP_24=lisp.values1(lisp.S_nil);
}
return TMP_24;
});
CL_COMMON_LISP_KEYWORDP=lisp.values1(F_KEYWORDP_21);
let F_GET_29;
F_GET_29=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_30, arguments.length);
}
let TMP_32;
let TMP_31;
let L_DEFAULT__11;
let L_INDICATOR__10;
let L_SYMBOL__9;
L_SYMBOL__9=arguments[0];
L_INDICATOR__10=arguments[1];
L_DEFAULT__11=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
TMP_31=lisp.CL_symbolPlist(L_SYMBOL__9);
TMP_32=lisp.callFunctionWithCallStack(G_33,TMP_31,L_INDICATOR__10,L_DEFAULT__11);
return TMP_32;
});
CL_COMMON_LISP_GET=lisp.values1(F_GET_29);
let F_SYMBOL_PLIST_34;
F_SYMBOL_PLIST_34=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_35, arguments.length);
}
let TMP_36;
let L_SYMBOL__13;
L_SYMBOL__13=arguments[0];
TMP_36=lisp.callFunctionWithCallStack(G_37,L_SYMBOL__13);
return TMP_36;
});
CL_COMMON_LISP_SYMBOL_PLIST=lisp.values1(F_SYMBOL_PLIST_34);
let F_REMPROP_68;
F_REMPROP_68=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_69, arguments.length);
}
let L_G19__38;
let L_G18__37;
let TMP_80;
let L_G_STORE17__36;
let TMP_79;
let L_G16__35;
let L_G_STORE15__34;
let TMP_76;
let L_G14__33;
let TMP_75;
let TMP_73;
let TMP_71;
let L_PREV__32;
let L_PLIST__31;
let TMP_70;
let BLOCK_RESULT_NIL__30;
let L_INDICATOR__28;
let L_SYMBOL__27;
L_SYMBOL__27=arguments[0];
L_INDICATOR__28=arguments[1];
BLOCK_NIL__30: for(;;){{
TMP_70=lisp.CL_symbolPlist(L_SYMBOL__27);
L_PLIST__31=lisp.values1(TMP_70);
L_PREV__32=lisp.values1(lisp.S_nil);
for(;;){
TMP_71=lisp.callFunctionWithCallStack(G_72,L_PLIST__31);
if(lisp.values1(TMP_71) !== lisp.S_nil){
BLOCK_RESULT_NIL__30=lisp.values1(lisp.S_nil);
break BLOCK_NIL__30;
}else{
TMP_73=lisp.callFunctionWithCallStack(G_74,L_PLIST__31);
TMP_75=lisp.CL_eq(L_INDICATOR__28,TMP_73);
if(lisp.values1(TMP_75) !== lisp.S_nil){
if(lisp.values1(L_PREV__32) !== lisp.S_nil){
{
L_G14__33=lisp.values1(L_PREV__32);
TMP_76=lisp.callFunctionWithCallStack(G_77,L_PLIST__31);
L_G_STORE15__34=lisp.values1(TMP_76);
lisp.callFunctionWithCallStack(G_78,L_G_STORE15__34,L_G14__33);
}
}else{
{
L_G16__35=lisp.values1(L_SYMBOL__27);
TMP_79=lisp.callFunctionWithCallStack(G_77,L_PLIST__31);
L_G_STORE17__36=lisp.values1(TMP_79);
lisp.callFunctionWithCallStack(G_38,L_G_STORE17__36,L_G16__35);
}
}
BLOCK_RESULT_NIL__30=lisp.values1(L_PLIST__31);
break BLOCK_NIL__30;
}else{
}
{
TMP_80=lisp.callFunctionWithCallStack(G_77,L_PLIST__31);
L_G18__37=lisp.values1(TMP_80);
L_G19__38=lisp.values1(L_PLIST__31);
L_PLIST__31=lisp.values1(L_G18__37);
L_PREV__32=lisp.values1(L_G19__38);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__30=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__30;
});
CL_COMMON_LISP_REMPROP=lisp.values1(F_REMPROP_68);
let F_SYMBOL_VALUE_81;
F_SYMBOL_VALUE_81=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_82, arguments.length);
}
let TMP_83;
let L_SYMBOL__39;
L_SYMBOL__39=arguments[0];
TMP_83=lisp.callFunctionWithCallStack(G_84,L_SYMBOL__39);
return TMP_83;
});
CL_COMMON_LISP_SYMBOL_VALUE=lisp.values1(F_SYMBOL_VALUE_81);
let F_SYMBOL_FUNCTION_85;
F_SYMBOL_FUNCTION_85=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_86, arguments.length);
}
let TMP_87;
let L_SYMBOL__41;
L_SYMBOL__41=arguments[0];
TMP_87=lisp.callFunctionWithCallStack(G_88,L_SYMBOL__41);
return TMP_87;
});
CL_COMMON_LISP_SYMBOL_FUNCTION=lisp.values1(F_SYMBOL_FUNCTION_85);
let F_SET_89;
F_SET_89=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_90, arguments.length);
}
let TMP_94;
let TMP_92;
let L_VALUE__44;
let L_SYMBOL__43;
L_SYMBOL__43=arguments[0];
L_VALUE__44=arguments[1];
TMP_92=G_30.func(L_SYMBOL__43,G_91);
if(lisp.values1(TMP_92) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_93,G_11.func(lisp.codeArrayToString([67, 111, 110, 115, 116, 97, 110, 116, 32, 109, 111, 100, 105, 102, 105, 99, 97, 116, 105, 111, 110, 58, 32, 97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 115, 101, 116, 32, 83, 89, 77, 66, 79, 76, 45, 86, 65, 76, 85, 69, 32, 111, 102, 32, 126, 65, 46])),L_SYMBOL__43);
}else{
}
TMP_94=lisp.CL_set(L_SYMBOL__43,L_VALUE__44);
return TMP_94;
});
CL_COMMON_LISP_SET=lisp.values1(F_SET_89);
let F_GENSYM_125;
F_GENSYM_125=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_45, arguments.length);
}
let TMP_150;
let L_G40__76;
let TMP_148;
let L_G39__75;
let TMP_146;
let TMP_144;
let TMP_142;
let TMP_137;
let L_G37__73;
let TMP_135;
let TMP_133;
let TMP_131;
let TMP_130;
let L_G36__72;
let TMP_128;
let TMP_127;
let TMP_126;
let L_PREFIX__70;
L_PREFIX__70=arguments.length > 0 ? arguments[0] : (lisp.values1(G_11.func(lisp.codeArrayToString([71]))));
{
TMP_126=lisp.CL_integerp(L_PREFIX__70);
if(lisp.values1(TMP_126) !== lisp.S_nil){
TMP_128=lisp.callFunctionWithCallStack(G_129,0,L_PREFIX__70);
TMP_127=lisp.values1(TMP_128);
}else{
TMP_127=lisp.values1(lisp.S_nil);
}
L_G36__72=lisp.values1(TMP_127);
if(lisp.values1(L_G36__72) !== lisp.S_nil){
TMP_131=lisp.callFunctionWithCallStack(G_132,lisp.S_nil,G_11.func(lisp.codeArrayToString([71, 126, 68])),L_PREFIX__70);
TMP_130=lisp.values1(TMP_131);
}else{
{
TMP_133=lisp.callFunctionWithCallStack(G_134,L_PREFIX__70);
TMP_135=lisp.callFunctionWithCallStack(G_136,TMP_133);
L_G37__73=lisp.values1(TMP_135);
if(lisp.values1(L_G37__73) !== lisp.S_nil){
TMP_142=lisp.callFunctionWithCallStack(G_143,L_PREFIX__70,lisp.makeCons(G_138, lisp.makeCons(G_139, lisp.makeCons(lisp.makeCons(G_140, lisp.makeCons(0, lisp.makeCons(G_141, lisp.S_nil))), lisp.S_nil))));
TMP_137=lisp.values1(TMP_142);
}else{
{
TMP_144=lisp.callFunctionWithCallStack(G_145,lisp.symbolValue(G_121));
TMP_146=lisp.callFunctionWithCallStack(G_147,L_PREFIX__70,TMP_144);
L_G39__75=lisp.values1(TMP_146);
{
TMP_148=lisp.callFunctionWithCallStack(G_149,lisp.symbolValue(G_121),1);
L_G40__76=lisp.values1(TMP_148);
lisp.setSymbolValue(G_121, lisp.values1(L_G40__76));
}
}
TMP_137=lisp.values1(lisp.values1(lisp.values1(L_G39__75)));
}
}
TMP_130=lisp.values1(lisp.values1(TMP_137));
}
}
TMP_150=G_3.func(lisp.values1(TMP_130));
return TMP_150;
});
CL_COMMON_LISP_GENSYM=lisp.values1(F_GENSYM_125);
let F_GENTEMP_157;
F_GENTEMP_157=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_158, arguments.length);
}
let TMP_164;
let TMP_162;
let L_G47__82;
let TMP_161;
let L_NAME__81;
let TMP_160;
let TMP_159;
let BLOCK_RESULT_NIL__80;
let L_PACKAGE__78;
let L_PREFIX__77;
L_PREFIX__77=arguments.length > 0 ? arguments[0] : (lisp.values1(G_11.func(lisp.codeArrayToString([84]))));
L_PACKAGE__78=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_153)));
BLOCK_NIL__80: for(;;){for(;;){
{
TMP_159=lisp.callFunctionWithCallStack(G_145,lisp.symbolValue(G_151));
TMP_160=lisp.callFunctionWithCallStack(G_147,L_PREFIX__77,TMP_159);
L_NAME__81=lisp.values1(TMP_160);
{
TMP_161=lisp.callFunctionWithCallStack(G_149,lisp.symbolValue(G_151),1);
L_G47__82=lisp.values1(TMP_161);
lisp.setSymbolValue(G_151, lisp.values1(L_G47__82));
}
TMP_162=lisp.callFunctionWithCallStack(G_163,L_NAME__81,L_PACKAGE__78);
if(lisp.values1(TMP_162) !== lisp.S_nil){
}else{
TMP_164=lisp.callFunctionWithCallStack(G_165,L_NAME__81,L_PACKAGE__78);
BLOCK_RESULT_NIL__80=TMP_164;
break BLOCK_NIL__80;
}
}
continue;
break;
}
BLOCK_RESULT_NIL__80=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__80;
});
CL_COMMON_LISP_GENTEMP=lisp.values1(F_GENTEMP_157);
let F_COPY_SYMBOL_166;
F_COPY_SYMBOL_166=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_167, arguments.length);
}
let TMP_178;
let TMP_177;
let L_G_STORE54__93;
let TMP_176;
let L_G53__92;
let L_G_STORE52__91;
let TMP_175;
let L_G51__90;
let TMP_174;
let L_G_STORE50__89;
let TMP_173;
let L_G49__88;
let TMP_172;
let L_NEW_SYMBOL__87;
let TMP_171;
let TMP_170;
let TMP_169;
let L_G48__86;
let TMP_168;
let L_COPY_PROPS__84;
let L_SYMBOL__83;
L_SYMBOL__83=arguments[0];
L_COPY_PROPS__84=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
TMP_168=lisp.CL_symbolp(L_SYMBOL__83);
if(lisp.values1(TMP_168) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_143,L_SYMBOL__83,G_57);
}
{
L_G48__86=lisp.values1(L_COPY_PROPS__84);
if(lisp.values1(L_G48__86) !== lisp.S_nil){
{
TMP_170=lisp.callFunctionWithCallStack(G_139,L_SYMBOL__83);
TMP_171=G_3.func(TMP_170);
L_NEW_SYMBOL__87=lisp.values1(TMP_171);
TMP_172=lisp.CL_boundp(L_SYMBOL__83);
if(lisp.values1(TMP_172) !== lisp.S_nil){
{
L_G49__88=lisp.values1(L_NEW_SYMBOL__87);
TMP_173=lisp.CL_symbolValue(L_SYMBOL__83);
L_G_STORE50__89=lisp.values1(TMP_173);
lisp.callFunctionWithCallStack(G_95,L_G_STORE50__89,L_G49__88);
}
}else{
}
TMP_174=lisp.CL_fboundp(L_SYMBOL__83);
if(lisp.values1(TMP_174) !== lisp.S_nil){
{
L_G51__90=lisp.values1(L_NEW_SYMBOL__87);
TMP_175=lisp.CL_symbolFunction(L_SYMBOL__83);
L_G_STORE52__91=lisp.values1(TMP_175);
lisp.callFunctionWithCallStack(G_108,L_G_STORE52__91,L_G51__90);
}
}else{
}
{
L_G53__92=lisp.values1(L_NEW_SYMBOL__87);
TMP_176=lisp.CL_symbolPlist(L_SYMBOL__83);
L_G_STORE54__93=lisp.values1(TMP_176);
lisp.callFunctionWithCallStack(G_38,L_G_STORE54__93,L_G53__92);
}
}
TMP_169=lisp.values1(L_NEW_SYMBOL__87);
}else{
TMP_177=lisp.callFunctionWithCallStack(G_139,L_SYMBOL__83);
TMP_178=G_3.func(TMP_177);
TMP_169=TMP_178;
}
}
return TMP_169;
});
CL_COMMON_LISP_COPY_SYMBOL=lisp.values1(F_COPY_SYMBOL_166);
// initialize symbols
G_3 = lisp.intern('MAKE-SYMBOL', 'COMMON-LISP');
G_5 = lisp.intern('ARRAY-TO-RAW-STRING', 'SYSTEM');
G_8 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_11 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_13 = lisp.intern('SYMBOL-PACKAGE', 'COMMON-LISP');
G_20 = lisp.intern('FIND-PACKAGE', 'COMMON-LISP');
G_22 = lisp.intern('KEYWORDP', 'COMMON-LISP');
G_26 = lisp.intern('KEYWORD', 'KEYWORD');
G_30 = lisp.intern('GET', 'COMMON-LISP');
G_33 = lisp.intern('GETF', 'COMMON-LISP');
G_35 = lisp.intern('SYMBOL-PLIST', 'COMMON-LISP');
G_37 = lisp.intern('SYMBOL-PLIST', 'SYSTEM');
G_38 = lisp.intern('(SETF SYMBOL-PLIST)', 'COMMON-LISP');
G_41 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_45 = lisp.intern('GENSYM', 'COMMON-LISP');
G_47 = lisp.intern('%MAPCAR', 'SYSTEM');
G_50 = lisp.intern('LIST', 'COMMON-LISP');
G_52 = lisp.intern('LIST*', 'COMMON-LISP');
G_55 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_57 = lisp.intern('SYMBOL', 'COMMON-LISP');
G_58 = lisp.intern('INDICATOR', 'COMMON-LISP');
G_59 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_60 = lisp.intern('DEFAULT', 'COMMON-LISP');
G_61 = lisp.intern('VALUE', 'COMMON-LISP');
G_62 = lisp.intern('LET', 'COMMON-LISP');
G_63 = lisp.intern('G-VALUE', 'COMMON-LISP');
G_64 = lisp.intern('BACKQUOTE', 'SYSTEM');
G_65 = lisp.intern('UNQUOTE', 'SYSTEM');
G_66 = lisp.intern('PUT', 'SYSTEM');
G_67 = lisp.intern('PROGN', 'COMMON-LISP');
G_69 = lisp.intern('REMPROP', 'COMMON-LISP');
G_72 = lisp.intern('NULL', 'COMMON-LISP');
G_74 = lisp.intern('CAR', 'COMMON-LISP');
G_77 = lisp.intern('CDDR', 'COMMON-LISP');
G_78 = lisp.intern('(SETF CDDR)', 'COMMON-LISP');
G_82 = lisp.intern('SYMBOL-VALUE', 'COMMON-LISP');
G_84 = lisp.intern('SYMBOL-VALUE', 'SYSTEM');
G_86 = lisp.intern('SYMBOL-FUNCTION', 'COMMON-LISP');
G_88 = lisp.intern('SYMBOL-FUNCTION', 'SYSTEM');
G_90 = lisp.intern('SET', 'COMMON-LISP');
G_91 = lisp.intern('CONSTANT', 'COMPILER');
G_93 = lisp.intern('ERROR', 'COMMON-LISP');
G_95 = lisp.intern('(SETF SYMBOL-VALUE)', 'COMMON-LISP');
G_108 = lisp.intern('(SETF SYMBOL-FUNCTION)', 'COMMON-LISP');
G_121 = lisp.intern('*GENSYM-COUNTER*', 'COMMON-LISP');
G_123 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_124 = lisp.intern('T', 'COMMON-LISP');
G_129 = lisp.intern('<=', 'COMMON-LISP');
G_132 = lisp.intern('FORMAT', 'COMMON-LISP');
G_134 = lisp.intern('STRINGP', 'COMMON-LISP');
G_136 = lisp.intern('NOT', 'COMMON-LISP');
G_138 = lisp.intern('OR', 'COMMON-LISP');
G_139 = lisp.intern('STRING', 'COMMON-LISP');
G_140 = lisp.intern('INTEGER', 'COMMON-LISP');
G_141 = lisp.intern('*', 'COMMON-LISP');
G_143 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_145 = lisp.intern('PRINC-TO-STRING', 'COMMON-LISP');
G_147 = lisp.intern('STRING-APPEND', 'SYSTEM');
G_149 = lisp.intern('+', 'COMMON-LISP');
G_151 = lisp.intern('*GENTEMP-COUNTER*', 'COMMON-LISP');
G_153 = lisp.intern('*PACKAGE*', 'COMMON-LISP');
G_155 = lisp.intern('CL-USER', 'KEYWORD');
G_158 = lisp.intern('GENTEMP', 'COMMON-LISP');
G_163 = lisp.intern('FIND-SYMBOL', 'COMMON-LISP');
G_165 = lisp.intern('INTERN', 'COMMON-LISP');
G_167 = lisp.intern('COPY-SYMBOL', 'COMMON-LISP');
G_179 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_MAKE_SYMBOL.lisp_name = 'MAKE-SYMBOL'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_MAKE_SYMBOL);
CL_COMMON_LISP_SYMBOL_NAME.lisp_name = 'SYMBOL-NAME'
lisp.setSymbolFunction(G_8, CL_COMMON_LISP_SYMBOL_NAME);
CL_COMMON_LISP_SYMBOL_PACKAGE.lisp_name = 'SYMBOL-PACKAGE'
lisp.setSymbolFunction(G_13, CL_COMMON_LISP_SYMBOL_PACKAGE);
CL_COMMON_LISP_KEYWORDP.lisp_name = 'KEYWORDP'
lisp.setSymbolFunction(G_22, CL_COMMON_LISP_KEYWORDP);
CL_COMMON_LISP_GET.lisp_name = 'GET'
lisp.setSymbolFunction(G_30, CL_COMMON_LISP_GET);
CL_COMMON_LISP_SYMBOL_PLIST.lisp_name = 'SYMBOL-PLIST'
lisp.setSymbolFunction(G_35, CL_COMMON_LISP_SYMBOL_PLIST);
TMP_39=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_40;
let L_SYMBOL__16;
let L_PLIST__15;
L_PLIST__15=arguments[0];
L_SYMBOL__16=arguments[1];
TMP_40=lisp.CL_setSymbolPlist(L_SYMBOL__16,L_PLIST__15);
return TMP_40;
});
lisp.CL_setSymbolFunction(G_38,TMP_39);
TMP_42=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_54;
let TMP_53;
let TMP_51;
let TMP_49;
let L_STORE2__24;
let TMP_48;
let L_GENSYMS0__23;
let TMP_46;
let TMP_43;
let L_ARGS1__21;
let L_G6__19;
let L_G5__18;
L_G5__18=arguments[0];
{
L_G6__19=lisp.values1(L_G5__18);
{
L_ARGS1__21=lisp.values1(L_G6__19);
{
TMP_43=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_44;
let L_X__22;
L_X__22=arguments[0];
TMP_44=G_45.func();
return TMP_44;
});
TMP_46=lisp.callFunctionWithCallStack(G_47,TMP_43,L_ARGS1__21);
L_GENSYMS0__23=lisp.values1(TMP_46);
TMP_48=G_45.func(G_11.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE2__24=lisp.values1(TMP_48);
TMP_49=lisp.callFunctionWithCallStack(G_50,L_STORE2__24);
TMP_51=lisp.callFunctionWithCallStack(G_52,G_38,L_STORE2__24,L_GENSYMS0__23);
TMP_53=lisp.callFunctionWithCallStack(G_52,G_35,L_GENSYMS0__23);
TMP_54=lisp.CL_values(L_GENSYMS0__23,L_ARGS1__21,TMP_49,TMP_51,TMP_53);
}
}
}
return TMP_54;
});
lisp.CL_put(G_35,G_41,TMP_42);
TMP_56=lisp.CL_symbolFunction(G_38);
lisp.CL_put(G_35,G_55,TMP_56);
lisp.CL_put(G_30,G_41,lisp.makeCons(lisp.makeCons(G_57, lisp.makeCons(G_58, lisp.makeCons(G_59, lisp.makeCons(G_60, lisp.S_nil)))), lisp.makeCons(lisp.makeCons(G_61, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_62, lisp.makeCons(lisp.makeCons(lisp.makeCons(G_63, lisp.makeCons(lisp.makeCons(G_45, lisp.S_nil), lisp.S_nil)), lisp.S_nil), lisp.makeCons(lisp.makeCons(G_64, lisp.makeCons(lisp.makeCons(G_62, lisp.makeCons(lisp.makeCons(lisp.makeCons(lisp.makeCons(G_65, lisp.makeCons(G_63, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_65, lisp.makeCons(G_61, lisp.S_nil)), lisp.S_nil)), lisp.S_nil), lisp.makeCons(lisp.makeCons(G_66, lisp.makeCons(lisp.makeCons(G_65, lisp.makeCons(G_57, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_65, lisp.makeCons(G_58, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_67, lisp.makeCons(lisp.makeCons(G_65, lisp.makeCons(G_60, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_65, lisp.makeCons(G_63, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)))), lisp.makeCons(lisp.makeCons(G_65, lisp.makeCons(G_63, lisp.S_nil)), lisp.S_nil)))), lisp.S_nil)), lisp.S_nil))), lisp.S_nil))));
CL_COMMON_LISP_REMPROP.lisp_name = 'REMPROP'
lisp.setSymbolFunction(G_69, CL_COMMON_LISP_REMPROP);
CL_COMMON_LISP_SYMBOL_VALUE.lisp_name = 'SYMBOL-VALUE'
lisp.setSymbolFunction(G_82, CL_COMMON_LISP_SYMBOL_VALUE);
CL_COMMON_LISP_SYMBOL_FUNCTION.lisp_name = 'SYMBOL-FUNCTION'
lisp.setSymbolFunction(G_86, CL_COMMON_LISP_SYMBOL_FUNCTION);
CL_COMMON_LISP_SET.lisp_name = 'SET'
lisp.setSymbolFunction(G_90, CL_COMMON_LISP_SET);
TMP_96=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_97;
let L_SYMBOL__47;
let L_VALUE__46;
L_VALUE__46=arguments[0];
L_SYMBOL__47=arguments[1];
TMP_97=G_90.func(L_SYMBOL__47,L_VALUE__46);
return TMP_97;
});
lisp.CL_setSymbolFunction(G_95,TMP_96);
TMP_98=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_106;
let TMP_105;
let TMP_104;
let TMP_103;
let L_STORE22__55;
let TMP_102;
let L_GENSYMS20__54;
let TMP_101;
let TMP_99;
let L_ARGS21__52;
let L_G26__50;
let L_G25__49;
L_G25__49=arguments[0];
{
L_G26__50=lisp.values1(L_G25__49);
{
L_ARGS21__52=lisp.values1(L_G26__50);
{
TMP_99=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_100;
let L_X__53;
L_X__53=arguments[0];
TMP_100=G_45.func();
return TMP_100;
});
TMP_101=lisp.callFunctionWithCallStack(G_47,TMP_99,L_ARGS21__52);
L_GENSYMS20__54=lisp.values1(TMP_101);
TMP_102=G_45.func(G_11.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE22__55=lisp.values1(TMP_102);
TMP_103=lisp.callFunctionWithCallStack(G_50,L_STORE22__55);
TMP_104=lisp.callFunctionWithCallStack(G_52,G_95,L_STORE22__55,L_GENSYMS20__54);
TMP_105=lisp.callFunctionWithCallStack(G_52,G_82,L_GENSYMS20__54);
TMP_106=lisp.CL_values(L_GENSYMS20__54,L_ARGS21__52,TMP_103,TMP_104,TMP_105);
}
}
}
return TMP_106;
});
lisp.CL_put(G_82,G_41,TMP_98);
TMP_107=lisp.CL_symbolFunction(G_95);
lisp.CL_put(G_82,G_55,TMP_107);
TMP_109=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_110;
let L_SYMBOL__59;
let L_FUNCTION__58;
L_FUNCTION__58=arguments[0];
L_SYMBOL__59=arguments[1];
TMP_110=lisp.CL_setSymbolFunction(L_SYMBOL__59,L_FUNCTION__58);
return TMP_110;
});
lisp.CL_setSymbolFunction(G_108,TMP_109);
TMP_111=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_119;
let TMP_118;
let TMP_117;
let TMP_116;
let L_STORE30__67;
let TMP_115;
let L_GENSYMS28__66;
let TMP_114;
let TMP_112;
let L_ARGS29__64;
let L_G34__62;
let L_G33__61;
L_G33__61=arguments[0];
{
L_G34__62=lisp.values1(L_G33__61);
{
L_ARGS29__64=lisp.values1(L_G34__62);
{
TMP_112=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_113;
let L_X__65;
L_X__65=arguments[0];
TMP_113=G_45.func();
return TMP_113;
});
TMP_114=lisp.callFunctionWithCallStack(G_47,TMP_112,L_ARGS29__64);
L_GENSYMS28__66=lisp.values1(TMP_114);
TMP_115=G_45.func(G_11.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE30__67=lisp.values1(TMP_115);
TMP_116=lisp.callFunctionWithCallStack(G_50,L_STORE30__67);
TMP_117=lisp.callFunctionWithCallStack(G_52,G_108,L_STORE30__67,L_GENSYMS28__66);
TMP_118=lisp.callFunctionWithCallStack(G_52,G_86,L_GENSYMS28__66);
TMP_119=lisp.CL_values(L_GENSYMS28__66,L_ARGS29__64,TMP_116,TMP_117,TMP_118);
}
}
}
return TMP_119;
});
lisp.CL_put(G_86,G_41,TMP_111);
TMP_120=lisp.CL_symbolFunction(G_108);
lisp.CL_put(G_86,G_55,TMP_120);
TMP_122=lisp.CL_boundp(G_121);
if(lisp.values1(TMP_122) !== lisp.S_nil){
}else{
lisp.CL_set(G_121,0);
}
lisp.CL_put(G_121,G_123,G_124);
CL_COMMON_LISP_GENSYM.lisp_name = 'GENSYM'
lisp.setSymbolFunction(G_45, CL_COMMON_LISP_GENSYM);
TMP_152=lisp.CL_boundp(G_151);
if(lisp.values1(TMP_152) !== lisp.S_nil){
}else{
lisp.CL_set(G_151,0);
}
lisp.CL_put(G_151,G_123,G_124);
TMP_154=lisp.CL_boundp(G_153);
if(lisp.values1(TMP_154) !== lisp.S_nil){
}else{
TMP_156=lisp.callFunctionWithCallStack(G_20,G_155);
lisp.CL_set(G_153,TMP_156);
}
lisp.CL_put(G_153,G_123,G_124);
CL_COMMON_LISP_GENTEMP.lisp_name = 'GENTEMP'
lisp.setSymbolFunction(G_158, CL_COMMON_LISP_GENTEMP);
CL_COMMON_LISP_COPY_SYMBOL.lisp_name = 'COPY-SYMBOL'
lisp.setSymbolFunction(G_167, CL_COMMON_LISP_COPY_SYMBOL);
}catch(TMP_1){G_179.func();
console.log(TMP_1.message);
}


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_8;
let G_9;
let G_12;
let G_13;
let G_14;
let G_15;
let G_16;
let G_17;
let G_18;
let G_20;
let G_26;
let G_27;
let G_29;
let G_31;
let G_32;
let G_34;
let G_36;
let G_37;
let G_39;
let G_43;
let G_45;
let G_49;
let G_52;
let G_55;
let G_59;
let G_63;
let G_66;
let G_68;
let G_76;
let G_77;
let G_78;
let G_79;
let G_80;
let G_81;
let G_87;
let G_90;
let G_91;
let G_92;
let G_93;
let G_96;
let G_98;
let G_99;
let G_101;
let G_107;
let G_108;
let G_112;
let G_119;
let G_123;
let G_124;
let G_128;
let G_135;
let G_139;
let G_142;
let G_145;
let G_151;
let G_155;
let G_156;
let G_157;
let G_164;
let G_165;
let G_167;
let G_176;
let G_180;
let G_182;
let G_185;
let G_186;
let G_191;
let G_192;
let G_195;
let G_197;
let G_199;
let G_200;
let G_201;
let G_204;
let G_206;
let G_210;
let G_211;
let G_214;
let G_223;
let G_224;
let G_229;
let G_232;
let G_237;
let G_241;
let G_249;
let G_260;
let G_282;
let G_285;
let CL_COMMON_LISP_TYPE_OF;
let CL_COMMON_LISP_SUBTYPEP;
let CL_COMMON_LISP_TYPEP;
let CL_COMMON_LISP_CANONICALIZE_TYPE;
let CL_COMMON_LISP_EXPAND_DEFTYPE;
let CL_COMMON_LISP_DEFTYPE_EXPANDER;
let CL_COMMON_LISP_PARSE_DEFTYPE_LAMBDA_LIST;
let TMP_252;
let TMP_219;
let TMP_193;
let TMP_53;
let TMP_40;
let TMP_38;
// toplevel defun
let F_PARSE_DEFTYPE_LAMBDA_LIST_2;
F_PARSE_DEFTYPE_LAMBDA_LIST_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_30;
let TMP_4;
let L_STATE__3;
let L_LAMBDA_LIST__1;
L_LAMBDA_LIST__1=arguments[0];
{
L_STATE__3=lisp.values1(lisp.S_nil);
TMP_4=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_28;
let TMP_25;
let TMP_24;
let TMP_23;
let L_G3__8;
let TMP_22;
let TMP_21;
let L_G2__7;
let TMP_19;
let TMP_11;
let L_G1__6;
let TMP_10;
let TMP_7;
let L_G0__5;
let TMP_6;
let L_X__4;
L_X__4=arguments[0];
{
TMP_6=lisp.CL_eq(L_X__4,G_5);
L_G0__5=lisp.values1(TMP_6);
if(lisp.values1(L_G0__5) !== lisp.S_nil){
L_STATE__3=lisp.values1(G_8);
TMP_7=lisp.values1(L_X__4);
}else{
{
TMP_10=lisp.CL_eq(L_X__4,G_9);
L_G1__6=lisp.values1(TMP_10);
if(lisp.values1(L_G1__6) !== lisp.S_nil){
L_STATE__3=lisp.values1(G_12);
TMP_11=lisp.values1(L_X__4);
}else{
{
TMP_19=lisp.callFunctionWithCallStack(G_20,L_X__4,lisp.makeCons(G_13, lisp.makeCons(G_14, lisp.makeCons(G_15, lisp.makeCons(G_16, lisp.makeCons(G_9, lisp.makeCons(G_5, lisp.makeCons(G_17, lisp.makeCons(G_18, lisp.S_nil)))))))));
L_G2__7=lisp.values1(TMP_19);
if(lisp.values1(L_G2__7) !== lisp.S_nil){
L_STATE__3=lisp.values1(lisp.S_nil);
TMP_21=lisp.values1(L_X__4);
}else{
{
TMP_22=lisp.callFunctionWithCallStack(G_20,L_STATE__3,lisp.makeCons(G_8, lisp.makeCons(G_12, lisp.S_nil)));
L_G3__8=lisp.values1(TMP_22);
if(lisp.values1(L_G3__8) !== lisp.S_nil){
TMP_24=lisp.CL_symbolp(L_X__4);
if(lisp.values1(TMP_24) !== lisp.S_nil){
TMP_28=lisp.callFunctionWithCallStack(G_29,L_X__4,lisp.makeCons(G_26, lisp.makeCons(G_27, lisp.S_nil)));
TMP_25=TMP_28;
}else{
TMP_25=lisp.values1(L_X__4);
}
TMP_23=TMP_25;
}else{
TMP_23=lisp.values1(L_X__4);
}
}
TMP_21=TMP_23;
}
}
TMP_11=TMP_21;
}
}
TMP_7=TMP_11;
}
}
return TMP_7;
});
TMP_30=lisp.callFunctionWithCallStack(G_31,TMP_4,L_LAMBDA_LIST__1);
}
return TMP_30;
});
CL_COMMON_LISP_PARSE_DEFTYPE_LAMBDA_LIST=lisp.values1(F_PARSE_DEFTYPE_LAMBDA_LIST_2);
let F_DEFTYPE_EXPANDER_33;
F_DEFTYPE_EXPANDER_33=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_34, arguments.length);
}
let TMP_35;
let L_SYMBOL__10;
L_SYMBOL__10=arguments[0];
TMP_35=lisp.callFunctionWithCallStack(G_36,L_SYMBOL__10,G_34);
return TMP_35;
});
CL_COMMON_LISP_DEFTYPE_EXPANDER=lisp.values1(F_DEFTYPE_EXPANDER_33);
let F_EXPAND_DEFTYPE_54;
F_EXPAND_DEFTYPE_54=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_55, arguments.length);
}
let TMP_65;
let L_EXPANDER__33;
let TMP_64;
let L_ARGS__32;
let TMP_62;
let TMP_61;
let TMP_60;
let L_NAME__31;
let TMP_58;
let TMP_57;
let TMP_56;
let BLOCK_RESULT_NIL__30;
let L_TYPE__28;
L_TYPE__28=arguments[0];
BLOCK_NIL__30: for(;;){for(;;){
{
TMP_56=lisp.CL_consp(L_TYPE__28);
if(lisp.values1(TMP_56) !== lisp.S_nil){
TMP_58=lisp.callFunctionWithCallStack(G_59,L_TYPE__28);
TMP_57=lisp.values1(TMP_58);
}else{
TMP_57=lisp.values1(L_TYPE__28);
}
L_NAME__31=lisp.values1(TMP_57);
TMP_60=lisp.CL_consp(L_TYPE__28);
if(lisp.values1(TMP_60) !== lisp.S_nil){
TMP_62=lisp.callFunctionWithCallStack(G_63,L_TYPE__28);
TMP_61=lisp.values1(TMP_62);
}else{
TMP_61=lisp.values1(lisp.S_nil);
}
L_ARGS__32=lisp.values1(TMP_61);
{
TMP_64=G_34.func(L_NAME__31);
L_EXPANDER__33=lisp.values1(TMP_64);
if(lisp.values1(L_EXPANDER__33) !== lisp.S_nil){
TMP_65=lisp.callFunctionWithCallStack(G_66,L_EXPANDER__33,L_ARGS__32);
L_TYPE__28=lisp.values1(TMP_65);
}else{
BLOCK_RESULT_NIL__30=lisp.values1(L_TYPE__28);
break BLOCK_NIL__30;
}
}
}
continue;
break;
}
BLOCK_RESULT_NIL__30=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__30;
});
CL_COMMON_LISP_EXPAND_DEFTYPE=lisp.values1(F_EXPAND_DEFTYPE_54);
let F_CANONICALIZE_TYPE_67;
F_CANONICALIZE_TYPE_67=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_68, arguments.length);
}
let TMP_95;
let L_G26__40;
let TMP_94;
let TMP_89;
let TMP_88;
let TMP_86;
let TMP_85;
let TMP_84;
let TMP_83;
let L_G25__39;
let TMP_82;
let L_G24__38;
let L_ARGS__37;
let TMP_75;
let TMP_74;
let TMP_73;
let L_NAME__36;
let TMP_72;
let TMP_71;
let TMP_70;
let TMP_69;
let L_TYPE__34;
L_TYPE__34=arguments[0];
TMP_69=G_55.func(L_TYPE__34);
L_TYPE__34=lisp.values1(TMP_69);
{
TMP_70=lisp.CL_consp(L_TYPE__34);
if(lisp.values1(TMP_70) !== lisp.S_nil){
TMP_72=lisp.callFunctionWithCallStack(G_59,L_TYPE__34);
TMP_71=lisp.values1(TMP_72);
}else{
TMP_71=lisp.values1(L_TYPE__34);
}
L_NAME__36=lisp.values1(TMP_71);
TMP_73=lisp.CL_consp(L_TYPE__34);
if(lisp.values1(TMP_73) !== lisp.S_nil){
TMP_75=lisp.callFunctionWithCallStack(G_63,L_TYPE__34);
TMP_74=lisp.values1(TMP_75);
}else{
TMP_74=lisp.values1(lisp.S_nil);
}
L_ARGS__37=lisp.values1(TMP_74);
{
L_G24__38=lisp.values1(L_NAME__36);
{
TMP_82=lisp.callFunctionWithCallStack(G_20,L_G24__38,lisp.makeCons(G_76, lisp.makeCons(G_77, lisp.makeCons(G_78, lisp.makeCons(G_79, lisp.makeCons(G_80, lisp.makeCons(G_81, lisp.S_nil)))))));
L_G25__39=lisp.values1(TMP_82);
if(lisp.values1(L_G25__39) !== lisp.S_nil){
TMP_84=lisp.callFunctionWithCallStack(G_59,L_ARGS__37);
TMP_85=lisp.callFunctionWithCallStack(G_20,TMP_84,lisp.makeCons(G_27, lisp.makeCons(lisp.S_nil, lisp.S_nil)));
if(lisp.values1(TMP_85) !== lisp.S_nil){
TMP_86=lisp.values1(G_87);
}else{
TMP_88=lisp.callFunctionWithCallStack(G_59,L_ARGS__37);
TMP_86=lisp.values1(TMP_88);
}
TMP_89=lisp.callFunctionWithCallStack(G_29,G_76,TMP_86);
TMP_83=TMP_89;
}else{
{
TMP_94=lisp.callFunctionWithCallStack(G_20,L_G24__38,lisp.makeCons(G_90, lisp.makeCons(G_91, lisp.makeCons(G_92, lisp.makeCons(G_93, lisp.S_nil)))));
L_G26__40=lisp.values1(TMP_94);
if(lisp.values1(L_G26__40) !== lisp.S_nil){
TMP_95=lisp.values1(lisp.makeCons(G_76, lisp.makeCons(G_96, lisp.S_nil)));
}else{
TMP_95=lisp.values1(L_TYPE__34);
}
}
TMP_83=TMP_95;
}
}
}
}
return TMP_83;
});
CL_COMMON_LISP_CANONICALIZE_TYPE=lisp.values1(F_CANONICALIZE_TYPE_67);
let F_TYPEP_97;
F_TYPEP_97=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_98, arguments.length);
}
let TMP_149;
let TMP_148;
let TMP_147;
let L_G39__57;
let TMP_146;
let TMP_144;
let TMP_143;
let TMP_141;
let TMP_140;
let L_G38__56;
let TMP_138;
let TMP_137;
let TMP_136;
let TMP_134;
let TMP_133;
let TMP_132;
let TMP_131;
let TMP_130;
let L_G36__54;
let TMP_129;
let TMP_127;
let TMP_126;
let L_G35__53;
let TMP_125;
let TMP_122;
let TMP_121;
let L_G34__52;
let TMP_120;
let TMP_118;
let TMP_117;
let L_G33__51;
let TMP_116;
let TMP_115;
let TMP_114;
let L_G32__50;
let TMP_113;
let TMP_111;
let TMP_110;
let L_G31__49;
let TMP_109;
let TMP_106;
let TMP_105;
let L_G30__48;
let TMP_104;
let TMP_103;
let TMP_102;
let L_G29__47;
let TMP_100;
let L_G28__46;
let L_ENVIRONMENT__44;
let L_TYPE__43;
let L_OBJECT__42;
L_OBJECT__42=arguments[0];
L_TYPE__43=arguments[1];
L_ENVIRONMENT__44=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
{
L_G28__46=lisp.values1(L_TYPE__43);
{
TMP_100=lisp.callFunctionWithCallStack(G_101,L_G28__46,G_99);
L_G29__47=lisp.values1(TMP_100);
if(lisp.values1(L_G29__47) !== lisp.S_nil){
TMP_103=lisp.callFunctionWithCallStack(G_99,L_OBJECT__42);
TMP_102=TMP_103;
}else{
{
TMP_104=lisp.callFunctionWithCallStack(G_101,L_G28__46,G_29);
L_G30__48=lisp.values1(TMP_104);
if(lisp.values1(L_G30__48) !== lisp.S_nil){
TMP_106=lisp.callFunctionWithCallStack(G_107,L_OBJECT__42);
TMP_105=TMP_106;
}else{
{
TMP_109=lisp.callFunctionWithCallStack(G_101,L_G28__46,G_108);
L_G31__49=lisp.values1(TMP_109);
if(lisp.values1(L_G31__49) !== lisp.S_nil){
TMP_111=lisp.CL_consp(L_OBJECT__42);
TMP_110=TMP_111;
}else{
{
TMP_113=lisp.callFunctionWithCallStack(G_101,L_G28__46,G_112);
L_G32__50=lisp.values1(TMP_113);
if(lisp.values1(L_G32__50) !== lisp.S_nil){
TMP_115=lisp.CL_symbolp(L_OBJECT__42);
TMP_114=TMP_115;
}else{
{
TMP_116=lisp.callFunctionWithCallStack(G_101,L_G28__46,G_90);
L_G33__51=lisp.values1(TMP_116);
if(lisp.values1(L_G33__51) !== lisp.S_nil){
TMP_118=lisp.callFunctionWithCallStack(G_119,L_OBJECT__42);
TMP_117=TMP_118;
}else{
{
TMP_120=lisp.callFunctionWithCallStack(G_101,L_G28__46,G_78);
L_G34__52=lisp.values1(TMP_120);
if(lisp.values1(L_G34__52) !== lisp.S_nil){
TMP_122=lisp.callFunctionWithCallStack(G_123,L_OBJECT__42);
TMP_121=TMP_122;
}else{
{
TMP_125=lisp.callFunctionWithCallStack(G_101,L_G28__46,G_124);
L_G35__53=lisp.values1(TMP_125);
if(lisp.values1(L_G35__53) !== lisp.S_nil){
TMP_127=lisp.CL_integerp(L_OBJECT__42);
TMP_126=TMP_127;
}else{
{
TMP_129=lisp.callFunctionWithCallStack(G_101,L_G28__46,G_128);
L_G36__54=lisp.values1(TMP_129);
if(lisp.values1(L_G36__54) !== lisp.S_nil){
TMP_131=lisp.CL_numberp(L_OBJECT__42);
TMP_130=TMP_131;
}else{
{
TMP_132=lisp.CL_structurep(L_OBJECT__42);
if(lisp.values1(TMP_132) !== lisp.S_nil){
TMP_134=lisp.CL_structureName(L_OBJECT__42);
TMP_136=lisp.CL_eq(TMP_134,G_135);
if(lisp.values1(TMP_136) !== lisp.S_nil){
TMP_138=lisp.callFunctionWithCallStack(G_139,L_TYPE__43,lisp.S_nil);
TMP_137=lisp.values1(TMP_138);
}else{
TMP_137=lisp.values1(lisp.S_nil);
}
TMP_133=lisp.values1(TMP_137);
}else{
TMP_133=lisp.values1(lisp.S_nil);
}
L_G38__56=lisp.values1(TMP_133);
if(lisp.values1(L_G38__56) !== lisp.S_nil){
TMP_141=lisp.callFunctionWithCallStack(G_142,L_OBJECT__42);
TMP_143=lisp.callFunctionWithCallStack(G_139,L_TYPE__43,lisp.S_nil);
TMP_144=lisp.callFunctionWithCallStack(G_145,TMP_141,TMP_143);
TMP_140=TMP_144;
}else{
{
TMP_146=lisp.CL_structurep(L_OBJECT__42);
L_G39__57=lisp.values1(TMP_146);
if(lisp.values1(L_G39__57) !== lisp.S_nil){
TMP_148=lisp.CL_structureName(L_OBJECT__42);
TMP_149=lisp.CL_eq(TMP_148,L_TYPE__43);
TMP_147=TMP_149;
}else{
TMP_147=lisp.values1(lisp.S_nil);
}
}
TMP_140=TMP_147;
}
}
TMP_130=TMP_140;
}
}
TMP_126=TMP_130;
}
}
TMP_121=TMP_126;
}
}
TMP_117=TMP_121;
}
}
TMP_114=TMP_117;
}
}
TMP_110=TMP_114;
}
}
TMP_105=TMP_110;
}
}
TMP_102=TMP_105;
}
}
}
return TMP_102;
});
CL_COMMON_LISP_TYPEP=lisp.values1(F_TYPEP_97);
let F_SUBTYPEP_150;
F_SUBTYPEP_150=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_151, arguments.length);
}
let TMP_163;
let TMP_162;
let TMP_161;
let L_G41__63;
let TMP_160;
let TMP_159;
let TMP_158;
let TMP_154;
let TMP_153;
let L_G40__62;
let TMP_152;
let L_ENVIRONMENT__60;
let L_TYPE2__59;
let L_TYPE1__58;
L_TYPE1__58=arguments[0];
L_TYPE2__59=arguments[1];
L_ENVIRONMENT__60=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
{
TMP_152=lisp.CL_eq(L_TYPE1__58,L_TYPE2__59);
L_G40__62=lisp.values1(TMP_152);
if(lisp.values1(L_G40__62) !== lisp.S_nil){
TMP_154=lisp.CL_values(G_87,G_87);
TMP_153=TMP_154;
}else{
{
TMP_158=lisp.callFunctionWithCallStack(G_20,L_TYPE1__58,lisp.makeCons(G_96, lisp.makeCons(G_155, lisp.makeCons(G_156, lisp.makeCons(G_157, lisp.S_nil)))));
if(lisp.values1(TMP_158) !== lisp.S_nil){
TMP_160=lisp.CL_eq(L_TYPE2__59,G_96);
TMP_159=lisp.values1(TMP_160);
}else{
TMP_159=lisp.values1(lisp.S_nil);
}
L_G41__63=lisp.values1(TMP_159);
if(lisp.values1(L_G41__63) !== lisp.S_nil){
TMP_162=lisp.CL_values(G_87,G_87);
TMP_161=TMP_162;
}else{
TMP_163=lisp.CL_values(lisp.S_nil,lisp.S_nil);
TMP_161=TMP_163;
}
}
TMP_153=TMP_161;
}
}
return TMP_153;
});
CL_COMMON_LISP_SUBTYPEP=lisp.values1(F_SUBTYPEP_150);
let F_TYPE_OF_166;
F_TYPE_OF_166=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_167, arguments.length);
}
let TMP_190;
let TMP_189;
let TMP_188;
let L_G55__77;
let TMP_187;
let TMP_184;
let L_G53__75;
let TMP_183;
let TMP_181;
let L_G51__73;
let TMP_179;
let TMP_178;
let L_G50__72;
let TMP_177;
let TMP_175;
let L_G49__71;
let TMP_174;
let TMP_173;
let L_G48__70;
let TMP_172;
let TMP_171;
let L_G47__69;
let TMP_170;
let TMP_169;
let L_G46__68;
let TMP_168;
let L_G45__67;
let L_OBJECT__65;
L_OBJECT__65=arguments[0];
{
L_G45__67=lisp.values1(L_OBJECT__65);
{
TMP_168=G_98.func(L_G45__67,G_124);
L_G46__68=lisp.values1(TMP_168);
if(lisp.values1(L_G46__68) !== lisp.S_nil){
TMP_169=lisp.values1(G_124);
}else{
{
TMP_170=G_98.func(L_G45__67,G_96);
L_G47__69=lisp.values1(TMP_170);
if(lisp.values1(L_G47__69) !== lisp.S_nil){
TMP_171=lisp.values1(G_96);
}else{
{
TMP_172=G_98.func(L_G45__67,G_112);
L_G48__70=lisp.values1(TMP_172);
if(lisp.values1(L_G48__70) !== lisp.S_nil){
{
TMP_174=lisp.CL_eq(L_OBJECT__65,G_87);
L_G49__71=lisp.values1(TMP_174);
if(lisp.values1(L_G49__71) !== lisp.S_nil){
TMP_175=lisp.values1(G_176);
}else{
{
TMP_177=lisp.CL_eq(L_OBJECT__65,lisp.S_nil);
L_G50__72=lisp.values1(TMP_177);
if(lisp.values1(L_G50__72) !== lisp.S_nil){
TMP_178=lisp.values1(G_99);
}else{
{
TMP_179=lisp.callFunctionWithCallStack(G_180,L_OBJECT__65);
L_G51__73=lisp.values1(TMP_179);
if(lisp.values1(L_G51__73) !== lisp.S_nil){
TMP_181=lisp.values1(G_182);
}else{
TMP_181=lisp.values1(G_112);
}
}
TMP_178=TMP_181;
}
}
TMP_175=TMP_178;
}
}
TMP_173=TMP_175;
}else{
{
TMP_183=G_98.func(L_G45__67,G_76);
L_G53__75=lisp.values1(TMP_183);
if(lisp.values1(L_G53__75) !== lisp.S_nil){
TMP_184=lisp.values1(lisp.makeCons(G_76, lisp.makeCons(lisp.makeCons(G_185, lisp.makeCons(G_186, lisp.S_nil)), lisp.S_nil)));
}else{
{
TMP_187=lisp.CL_structurep(L_OBJECT__65);
L_G55__77=lisp.values1(TMP_187);
if(lisp.values1(L_G55__77) !== lisp.S_nil){
TMP_189=lisp.CL_structureName(L_OBJECT__65);
TMP_188=TMP_189;
}else{
TMP_190=lisp.callFunctionWithCallStack(G_191,G_45.func(lisp.codeArrayToString([117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 111, 98, 106, 101, 99, 116, 58, 32, 126, 83])),L_OBJECT__65);
TMP_188=TMP_190;
}
}
TMP_184=TMP_188;
}
}
TMP_173=TMP_184;
}
}
TMP_171=TMP_173;
}
}
TMP_169=TMP_171;
}
}
}
return TMP_169;
});
CL_COMMON_LISP_TYPE_OF=lisp.values1(F_TYPE_OF_166);
// initialize symbols
G_3 = lisp.intern('PARSE-DEFTYPE-LAMBDA-LIST', 'COMMON-LISP');
G_5 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_8 = lisp.intern('OPTIONAL', 'KEYWORD');
G_9 = lisp.intern('&KEY', 'COMMON-LISP');
G_12 = lisp.intern('KEY', 'KEYWORD');
G_13 = lisp.intern('&ALLOW-OTHER-KEYS', 'COMMON-LISP');
G_14 = lisp.intern('&AUX', 'COMMON-LISP');
G_15 = lisp.intern('&BODY', 'COMMON-LISP');
G_16 = lisp.intern('&ENVIRONMENT', 'COMMON-LISP');
G_17 = lisp.intern('&REST', 'COMMON-LISP');
G_18 = lisp.intern('&WHOLE', 'COMMON-LISP');
G_20 = lisp.intern('MEMBER', 'COMMON-LISP');
G_26 = lisp.intern('QUOTE', 'COMMON-LISP');
G_27 = lisp.intern('*', 'COMMON-LISP');
G_29 = lisp.intern('LIST', 'COMMON-LISP');
G_31 = lisp.intern('%MAPCAR', 'SYSTEM');
G_32 = lisp.intern('DEFTYPE', 'COMMON-LISP');
G_34 = lisp.intern('DEFTYPE-EXPANDER', 'COMMON-LISP');
G_36 = lisp.intern('GET', 'COMMON-LISP');
G_37 = lisp.intern('(SETF DEFTYPE-EXPANDER)', 'COMMON-LISP');
G_39 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_43 = lisp.intern('GENSYM', 'COMMON-LISP');
G_45 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_49 = lisp.intern('LIST*', 'COMMON-LISP');
G_52 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_55 = lisp.intern('EXPAND-DEFTYPE', 'COMMON-LISP');
G_59 = lisp.intern('CAR', 'COMMON-LISP');
G_63 = lisp.intern('CDR', 'COMMON-LISP');
G_66 = lisp.intern('APPLY', 'COMMON-LISP');
G_68 = lisp.intern('CANONICALIZE-TYPE', 'COMMON-LISP');
G_76 = lisp.intern('ARRAY', 'COMMON-LISP');
G_77 = lisp.intern('SIMPLE-ARRAY', 'COMMON-LISP');
G_78 = lisp.intern('VECTOR', 'COMMON-LISP');
G_79 = lisp.intern('SIMPLE-VECTOR', 'COMMON-LISP');
G_80 = lisp.intern('BIT-VECTOR', 'COMMON-LISP');
G_81 = lisp.intern('SIMPLE-BIT-VECTOR', 'COMMON-LISP');
G_87 = lisp.intern('T', 'COMMON-LISP');
G_90 = lisp.intern('STRING', 'COMMON-LISP');
G_91 = lisp.intern('SIMPLE-STRING', 'COMMON-LISP');
G_92 = lisp.intern('BASE-STRING', 'COMMON-LISP');
G_93 = lisp.intern('SIMPLE-BASE-STRING', 'COMMON-LISP');
G_96 = lisp.intern('CHARACTER', 'COMMON-LISP');
G_98 = lisp.intern('TYPEP', 'COMMON-LISP');
G_99 = lisp.intern('NULL', 'COMMON-LISP');
G_101 = lisp.intern('EQL', 'COMMON-LISP');
G_107 = lisp.intern('LISTP', 'COMMON-LISP');
G_108 = lisp.intern('CONS', 'COMMON-LISP');
G_112 = lisp.intern('SYMBOL', 'COMMON-LISP');
G_119 = lisp.intern('STRINGP', 'COMMON-LISP');
G_123 = lisp.intern('VECTORP', 'COMMON-LISP');
G_124 = lisp.intern('INTEGER', 'COMMON-LISP');
G_128 = lisp.intern('NUMBERP', 'COMMON-LISP');
G_135 = lisp.intern('STANDARD-INSTANCE', 'COMMON-LISP');
G_139 = lisp.intern('FIND-CLASS', 'COMMON-LISP');
G_142 = lisp.intern('CLASS-OF', 'COMMON-LISP');
G_145 = lisp.intern('SUBCLASSP', 'COMMON-LISP');
G_151 = lisp.intern('SUBTYPEP', 'COMMON-LISP');
G_155 = lisp.intern('BASE-CHAR', 'COMMON-LISP');
G_156 = lisp.intern('STANDARD-CHAR', 'COMMON-LISP');
G_157 = lisp.intern('EXTENDED-CHAR', 'COMMON-LISP');
G_164 = lisp.intern('TYPECASE', 'COMMON-LISP');
G_165 = lisp.intern('ETYPECASE', 'COMMON-LISP');
G_167 = lisp.intern('TYPE-OF', 'COMMON-LISP');
G_176 = lisp.intern('BOOLEAN', 'COMMON-LISP');
G_180 = lisp.intern('KEYWORDP', 'COMMON-LISP');
G_182 = lisp.intern('KEYWORD', 'COMMON-LISP');
G_185 = lisp.intern('ARRAY-ELEMENT-TYPE', 'COMMON-LISP');
G_186 = lisp.intern('OBJECT', 'COMMON-LISP');
G_191 = lisp.intern('ERROR', 'COMMON-LISP');
G_192 = lisp.intern('MACRO', 'COMPILER');
G_195 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_197 = lisp.intern('<=', 'COMMON-LISP');
G_199 = lisp.intern('NAME', 'COMMON-LISP');
G_200 = lisp.intern('LAMBDA-LIST', 'COMMON-LISP');
G_201 = lisp.intern('BODY', 'COMMON-LISP');
G_204 = lisp.intern('FIRST', 'COMMON-LISP');
G_206 = lisp.intern('REST', 'COMMON-LISP');
G_210 = lisp.intern('PROGN', 'COMMON-LISP');
G_211 = lisp.intern('SETF', 'COMMON-LISP');
G_214 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_223 = lisp.intern('KEYFORM', 'COMMON-LISP');
G_224 = lisp.intern('CASES', 'COMMON-LISP');
G_229 = lisp.intern('LET', 'COMMON-LISP');
G_232 = lisp.intern('COND', 'COMMON-LISP');
G_237 = lisp.intern('TYPE', 'COMMON-LISP');
G_241 = lisp.intern('OTHERWISE', 'COMMON-LISP');
G_249 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_260 = lisp.intern('OR', 'COMMON-LISP');
G_282 = lisp.intern('APPEND', 'COMMON-LISP');
G_285 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_PARSE_DEFTYPE_LAMBDA_LIST.lisp_name = 'PARSE-DEFTYPE-LAMBDA-LIST'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_PARSE_DEFTYPE_LAMBDA_LIST);
CL_COMMON_LISP_DEFTYPE_EXPANDER.lisp_name = 'DEFTYPE-EXPANDER'
lisp.setSymbolFunction(G_34, CL_COMMON_LISP_DEFTYPE_EXPANDER);
TMP_38=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G14__18;
let L_G13__17;
let L_G11__15;
let L_SYMBOL__13;
let L_EXPANDER__12;
L_EXPANDER__12=arguments[0];
L_SYMBOL__13=arguments[1];
{
L_G11__15=lisp.values1(L_SYMBOL__13);
L_G13__17=lisp.values1(L_EXPANDER__12);
{
L_G14__18=lisp.values1(L_G13__17);
lisp.CL_put(L_G11__15,G_34,L_G14__18);
}
}
return lisp.values1(L_G14__18);
});
lisp.CL_setSymbolFunction(G_37,TMP_38);
TMP_40=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_51;
let TMP_50;
let TMP_48;
let TMP_47;
let L_STORE8__25;
let TMP_46;
let L_GENSYMS6__24;
let TMP_44;
let TMP_41;
let L_ARGS7__22;
let L_G16__20;
let L_G15__19;
L_G15__19=arguments[0];
{
L_G16__20=lisp.values1(L_G15__19);
{
L_ARGS7__22=lisp.values1(L_G16__20);
{
TMP_41=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_42;
let L_X__23;
L_X__23=arguments[0];
TMP_42=lisp.callFunctionWithCallStack(G_43);
return TMP_42;
});
TMP_44=lisp.callFunctionWithCallStack(G_31,TMP_41,L_ARGS7__22);
L_GENSYMS6__24=lisp.values1(TMP_44);
TMP_46=lisp.callFunctionWithCallStack(G_43,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE8__25=lisp.values1(TMP_46);
TMP_47=lisp.callFunctionWithCallStack(G_29,L_STORE8__25);
TMP_48=lisp.callFunctionWithCallStack(G_49,G_37,L_STORE8__25,L_GENSYMS6__24);
TMP_50=lisp.callFunctionWithCallStack(G_49,G_34,L_GENSYMS6__24);
TMP_51=lisp.CL_values(L_GENSYMS6__24,L_ARGS7__22,TMP_47,TMP_48,TMP_50);
}
}
}
return TMP_51;
});
lisp.CL_put(G_34,G_39,TMP_40);
TMP_53=lisp.CL_symbolFunction(G_37);
lisp.CL_put(G_34,G_52,TMP_53);
CL_COMMON_LISP_EXPAND_DEFTYPE.lisp_name = 'EXPAND-DEFTYPE'
lisp.setSymbolFunction(G_55, CL_COMMON_LISP_EXPAND_DEFTYPE);
CL_COMMON_LISP_CANONICALIZE_TYPE.lisp_name = 'CANONICALIZE-TYPE'
lisp.setSymbolFunction(G_68, CL_COMMON_LISP_CANONICALIZE_TYPE);
CL_COMMON_LISP_TYPEP.lisp_name = 'TYPEP'
lisp.setSymbolFunction(G_98, CL_COMMON_LISP_TYPEP);
CL_COMMON_LISP_SUBTYPEP.lisp_name = 'SUBTYPEP'
lisp.setSymbolFunction(G_151, CL_COMMON_LISP_SUBTYPEP);
CL_COMMON_LISP_TYPE_OF.lisp_name = 'TYPE-OF'
lisp.setSymbolFunction(G_167, CL_COMMON_LISP_TYPE_OF);
TMP_193=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_218;
let TMP_217;
let TMP_216;
let TMP_215;
let TMP_213;
let TMP_212;
let TMP_209;
let L_BODY__86;
let L_G60__85;
let TMP_208;
let L_LAMBDA_LIST__84;
let TMP_207;
let L_G59__83;
let TMP_205;
let L_NAME__82;
let TMP_203;
let L_G58__81;
let TMP_202;
let TMP_198;
let TMP_196;
let TMP_194;
let L_G57__80;
let L_G5__79;
L_G5__79=lisp.jsArrayToList(arguments, 0);
{
L_G57__80=lisp.values1(L_G5__79);
{
TMP_194=lisp.callFunctionWithCallStack(G_195,L_G57__80);
TMP_196=lisp.callFunctionWithCallStack(G_197,2,TMP_194);
if(lisp.values1(TMP_196) !== lisp.S_nil){
TMP_198=lisp.values1(lisp.S_nil);
}else{
TMP_202=lisp.callFunctionWithCallStack(G_191,G_45.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_199, lisp.makeCons(G_200, lisp.makeCons(G_15, lisp.makeCons(G_201, lisp.S_nil)))),L_G57__80);
TMP_198=lisp.values1(lisp.values1(TMP_202));
}
L_G58__81=lisp.values1(TMP_198);
TMP_203=lisp.callFunctionWithCallStack(G_204,L_G57__80);
L_NAME__82=lisp.values1(TMP_203);
TMP_205=lisp.callFunctionWithCallStack(G_206,L_G57__80);
L_G59__83=lisp.values1(TMP_205);
TMP_207=lisp.callFunctionWithCallStack(G_204,L_G59__83);
L_LAMBDA_LIST__84=lisp.values1(TMP_207);
TMP_208=lisp.callFunctionWithCallStack(G_206,L_G59__83);
L_G60__85=lisp.values1(TMP_208);
L_BODY__86=lisp.values1(L_G60__85);
TMP_209=G_3.func(L_LAMBDA_LIST__84);
L_LAMBDA_LIST__84=lisp.values1(TMP_209);
TMP_212=lisp.callFunctionWithCallStack(G_29,G_26,L_NAME__82);
TMP_213=lisp.callFunctionWithCallStack(G_29,G_34,TMP_212);
TMP_215=lisp.callFunctionWithCallStack(G_49,G_214,L_LAMBDA_LIST__84,L_BODY__86);
TMP_216=lisp.callFunctionWithCallStack(G_29,G_211,TMP_213,TMP_215);
TMP_217=lisp.callFunctionWithCallStack(G_29,G_26,L_NAME__82);
TMP_218=lisp.callFunctionWithCallStack(G_29,G_210,TMP_216,TMP_217);
}
}
return TMP_218;
});
lisp.CL_put(G_32,G_192,TMP_193);
TMP_219=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_251;
let TMP_250;
let TMP_248;
let TMP_233;
let TMP_231;
let TMP_230;
let L_GVALUE__93;
let TMP_228;
let L_CASES__92;
let L_G63__91;
let TMP_227;
let L_KEYFORM__90;
let TMP_226;
let L_G62__89;
let TMP_225;
let TMP_222;
let TMP_221;
let TMP_220;
let L_G61__88;
let L_G43__87;
L_G43__87=lisp.jsArrayToList(arguments, 0);
{
L_G61__88=lisp.values1(L_G43__87);
{
TMP_220=lisp.callFunctionWithCallStack(G_195,L_G61__88);
TMP_221=lisp.callFunctionWithCallStack(G_197,1,TMP_220);
if(lisp.values1(TMP_221) !== lisp.S_nil){
TMP_222=lisp.values1(lisp.S_nil);
}else{
TMP_225=lisp.callFunctionWithCallStack(G_191,G_45.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_223, lisp.makeCons(G_15, lisp.makeCons(G_224, lisp.S_nil))),L_G61__88);
TMP_222=lisp.values1(lisp.values1(TMP_225));
}
L_G62__89=lisp.values1(TMP_222);
TMP_226=lisp.callFunctionWithCallStack(G_204,L_G61__88);
L_KEYFORM__90=lisp.values1(TMP_226);
TMP_227=lisp.callFunctionWithCallStack(G_206,L_G61__88);
L_G63__91=lisp.values1(TMP_227);
L_CASES__92=lisp.values1(L_G63__91);
{
TMP_228=lisp.callFunctionWithCallStack(G_43);
L_GVALUE__93=lisp.values1(TMP_228);
TMP_230=lisp.callFunctionWithCallStack(G_29,L_GVALUE__93,L_KEYFORM__90);
TMP_231=lisp.callFunctionWithCallStack(G_29,TMP_230);
TMP_233=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_247;
let TMP_246;
let TMP_245;
let TMP_244;
let TMP_243;
let TMP_242;
let L_BODY__99;
let L_G66__98;
let TMP_240;
let L_TYPE__97;
let TMP_239;
let L_G65__96;
let TMP_238;
let TMP_236;
let TMP_235;
let TMP_234;
let L_G64__95;
let L_C__94;
L_C__94=arguments[0];
{
L_G64__95=lisp.values1(L_C__94);
{
TMP_234=lisp.callFunctionWithCallStack(G_195,L_G64__95);
TMP_235=lisp.callFunctionWithCallStack(G_197,1,TMP_234);
if(lisp.values1(TMP_235) !== lisp.S_nil){
TMP_236=lisp.values1(lisp.S_nil);
}else{
TMP_238=lisp.callFunctionWithCallStack(G_191,G_45.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_237, G_201),L_G64__95);
TMP_236=lisp.values1(lisp.values1(TMP_238));
}
L_G65__96=lisp.values1(TMP_236);
TMP_239=lisp.callFunctionWithCallStack(G_204,L_G64__95);
L_TYPE__97=lisp.values1(TMP_239);
TMP_240=lisp.callFunctionWithCallStack(G_206,L_G64__95);
L_G66__98=lisp.values1(TMP_240);
L_BODY__99=lisp.values1(L_G66__98);
TMP_242=lisp.CL_eq(L_TYPE__97,G_241);
if(lisp.values1(TMP_242) !== lisp.S_nil){
TMP_244=lisp.CL_cons(G_87,L_BODY__99);
TMP_243=TMP_244;
}else{
TMP_245=lisp.callFunctionWithCallStack(G_29,G_26,L_TYPE__97);
TMP_246=lisp.callFunctionWithCallStack(G_29,G_98,L_GVALUE__93,TMP_245);
TMP_247=lisp.CL_cons(TMP_246,L_BODY__99);
TMP_243=TMP_247;
}
}
}
return TMP_243;
});
TMP_248=lisp.callFunctionWithCallStack(G_249,TMP_233,L_CASES__92);
TMP_250=lisp.CL_cons(G_232,TMP_248);
TMP_251=lisp.callFunctionWithCallStack(G_29,G_229,TMP_231,TMP_250);
}
}
}
return TMP_251;
});
lisp.CL_put(G_164,G_192,TMP_219);
TMP_252=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_284;
let TMP_283;
let TMP_281;
let TMP_280;
let TMP_279;
let TMP_278;
let TMP_277;
let TMP_276;
let TMP_266;
let TMP_265;
let TMP_264;
let L_EXPECTED_TYPE__107;
let TMP_263;
let TMP_262;
let TMP_261;
let L_GVALUE__106;
let TMP_259;
let L_CASES__105;
let L_G69__104;
let TMP_258;
let L_KEYFORM__103;
let TMP_257;
let L_G68__102;
let TMP_256;
let TMP_255;
let TMP_254;
let TMP_253;
let L_G67__101;
let L_G44__100;
L_G44__100=lisp.jsArrayToList(arguments, 0);
{
L_G67__101=lisp.values1(L_G44__100);
{
TMP_253=lisp.callFunctionWithCallStack(G_195,L_G67__101);
TMP_254=lisp.callFunctionWithCallStack(G_197,1,TMP_253);
if(lisp.values1(TMP_254) !== lisp.S_nil){
TMP_255=lisp.values1(lisp.S_nil);
}else{
TMP_256=lisp.callFunctionWithCallStack(G_191,G_45.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_223, lisp.makeCons(G_15, lisp.makeCons(G_224, lisp.S_nil))),L_G67__101);
TMP_255=lisp.values1(lisp.values1(TMP_256));
}
L_G68__102=lisp.values1(TMP_255);
TMP_257=lisp.callFunctionWithCallStack(G_204,L_G67__101);
L_KEYFORM__103=lisp.values1(TMP_257);
TMP_258=lisp.callFunctionWithCallStack(G_206,L_G67__101);
L_G69__104=lisp.values1(TMP_258);
L_CASES__105=lisp.values1(L_G69__104);
{
TMP_259=lisp.callFunctionWithCallStack(G_43);
L_GVALUE__106=lisp.values1(TMP_259);
TMP_261=lisp.CL_symbolFunction(G_204);
TMP_262=lisp.callFunctionWithCallStack(G_249,TMP_261,L_CASES__105);
TMP_263=lisp.CL_cons(G_260,TMP_262);
L_EXPECTED_TYPE__107=lisp.values1(TMP_263);
TMP_264=lisp.callFunctionWithCallStack(G_29,L_GVALUE__106,L_KEYFORM__103);
TMP_265=lisp.callFunctionWithCallStack(G_29,TMP_264);
TMP_266=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_275;
let TMP_274;
let TMP_273;
let L_BODY__113;
let L_G72__112;
let TMP_272;
let L_TYPE__111;
let TMP_271;
let L_G71__110;
let TMP_270;
let TMP_269;
let TMP_268;
let TMP_267;
let L_G70__109;
let L_C__108;
L_C__108=arguments[0];
{
L_G70__109=lisp.values1(L_C__108);
{
TMP_267=lisp.callFunctionWithCallStack(G_195,L_G70__109);
TMP_268=lisp.callFunctionWithCallStack(G_197,1,TMP_267);
if(lisp.values1(TMP_268) !== lisp.S_nil){
TMP_269=lisp.values1(lisp.S_nil);
}else{
TMP_270=lisp.callFunctionWithCallStack(G_191,G_45.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_237, G_201),L_G70__109);
TMP_269=lisp.values1(lisp.values1(TMP_270));
}
L_G71__110=lisp.values1(TMP_269);
TMP_271=lisp.callFunctionWithCallStack(G_204,L_G70__109);
L_TYPE__111=lisp.values1(TMP_271);
TMP_272=lisp.callFunctionWithCallStack(G_206,L_G70__109);
L_G72__112=lisp.values1(TMP_272);
L_BODY__113=lisp.values1(L_G72__112);
TMP_273=lisp.callFunctionWithCallStack(G_29,G_26,L_TYPE__111);
TMP_274=lisp.callFunctionWithCallStack(G_29,G_98,L_GVALUE__106,TMP_273);
TMP_275=lisp.CL_cons(TMP_274,L_BODY__113);
}
}
return TMP_275;
});
TMP_276=lisp.callFunctionWithCallStack(G_249,TMP_266,L_CASES__105);
TMP_277=lisp.callFunctionWithCallStack(G_29,G_26,L_EXPECTED_TYPE__107);
TMP_278=lisp.callFunctionWithCallStack(G_29,G_191,G_45.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 84, 89, 80, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_GVALUE__106,TMP_277);
TMP_279=lisp.callFunctionWithCallStack(G_29,G_87,TMP_278);
TMP_280=lisp.callFunctionWithCallStack(G_29,TMP_279);
TMP_281=lisp.callFunctionWithCallStack(G_282,TMP_276,TMP_280);
TMP_283=lisp.CL_cons(G_232,TMP_281);
TMP_284=lisp.callFunctionWithCallStack(G_29,G_229,TMP_265,TMP_283);
}
}
}
return TMP_284;
});
lisp.CL_put(G_165,G_192,TMP_252);
}catch(TMP_1){G_285.func();
console.log(TMP_1.message);
}


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_5;
let G_7;
let G_9;
let G_11;
let G_12;
let G_14;
let G_22;
let G_25;
let G_34;
let G_45;
let G_50;
let G_51;
let G_59;
let G_60;
let G_68;
let G_76;
let G_84;
let G_92;
let G_101;
let G_106;
let G_109;
let G_114;
let G_117;
let G_121;
let G_124;
let G_127;
let G_130;
let G_133;
let G_136;
let G_140;
let G_144;
let G_150;
let G_156;
let G_161;
let G_163;
let G_164;
let CL_COMMON_LISP_RANDOM;
let CL_COMMON_LISP_EXPT;
let CL_COMMON_LISP_MAX;
let CL_COMMON_LISP_MIN;
let CL_COMMON_LISP_ODDP;
let CL_COMMON_LISP_EVENP;
let CL_COMMON_LISP_ZEROP;
let CL_COMMON_LISP_1_;
let CL_COMMON_LISP_1PLUS;
let CL_COMMON_LISP_MINUSP;
let CL_COMMON_LISP_PLUSP;
let CL_COMMON_LISP_FLOATP;
let CL_COMMON_LISP_FLOOR;
let CL_COMMON_LISP_MOD;
let CL_COMMON_LISP_REM;
let CL_COMMON_LISP_LOGAND;
let CL_COMMON_LISP_SLASH;
let CL_COMMON_LISP__;
let TMP_93;
let TMP_85;
let TMP_77;
let TMP_69;
let TMP_61;
let TMP_52;
let TMP_15;
let TMP_3;
// toplevel defun
let F___21;
F___21=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_22, arguments.length);
}
let TMP_32;
let TMP_31;
let TMP_30;
let L_N__20;
let TMP_29;
let TMP_28;
let L_G14__19;
let TMP_27;
let TMP_26;
let TMP_24;
let TMP_23;
let L_NUMBERS__16;
let L_NUMBER__15;
L_NUMBER__15=arguments[0];
L_NUMBERS__16=lisp.jsArrayToList(arguments, 1);
TMP_23=lisp.CL_numberp(L_NUMBER__15);
if(lisp.values1(TMP_23) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__15,G_11);
}
TMP_24=lisp.callFunctionWithCallStack(G_25,L_NUMBERS__16);
if(lisp.values1(TMP_24) !== lisp.S_nil){
TMP_27=lisp.CL_negate(L_NUMBER__15);
TMP_26=TMP_27;
}else{
{
L_G14__19=lisp.values1(L_NUMBERS__16);
for(;;){
TMP_28=lisp.callFunctionWithCallStack(G_5,L_G14__19);
if(lisp.values1(TMP_28) !== lisp.S_nil){
}else{
{
TMP_29=lisp.callFunctionWithCallStack(G_7,L_G14__19);
L_N__20=lisp.values1(TMP_29);
TMP_30=lisp.callFunctionWithCallStack(G_9,L_G14__19);
L_G14__19=lisp.values1(TMP_30);
TMP_31=lisp.CL_numberp(L_N__20);
if(lisp.values1(TMP_31) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__20,G_11);
}
TMP_32=lisp.CL_sub(L_NUMBER__15,L_N__20);
L_NUMBER__15=lisp.values1(TMP_32);
}
continue;
}
break;
}
}
TMP_26=lisp.values1(L_NUMBER__15);
}
return TMP_26;
});
CL_COMMON_LISP__=lisp.values1(F___21);
let F_SLASH_33;
F_SLASH_33=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_34, arguments.length);
}
let TMP_43;
let TMP_42;
let TMP_41;
let L_N__27;
let TMP_40;
let TMP_39;
let L_G21__26;
let TMP_38;
let TMP_37;
let TMP_36;
let TMP_35;
let L_NUMBERS__23;
let L_NUMBER__22;
L_NUMBER__22=arguments[0];
L_NUMBERS__23=lisp.jsArrayToList(arguments, 1);
TMP_35=lisp.CL_numberp(L_NUMBER__22);
if(lisp.values1(TMP_35) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__22,G_11);
}
TMP_36=lisp.callFunctionWithCallStack(G_25,L_NUMBERS__23);
if(lisp.values1(TMP_36) !== lisp.S_nil){
TMP_38=G_34.func(1,L_NUMBER__22);
TMP_37=TMP_38;
}else{
{
L_G21__26=lisp.values1(L_NUMBERS__23);
for(;;){
TMP_39=lisp.callFunctionWithCallStack(G_5,L_G21__26);
if(lisp.values1(TMP_39) !== lisp.S_nil){
}else{
{
TMP_40=lisp.callFunctionWithCallStack(G_7,L_G21__26);
L_N__27=lisp.values1(TMP_40);
TMP_41=lisp.callFunctionWithCallStack(G_9,L_G21__26);
L_G21__26=lisp.values1(TMP_41);
TMP_42=lisp.CL_numberp(L_N__27);
if(lisp.values1(TMP_42) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__27,G_11);
}
TMP_43=lisp.CL_floor(L_NUMBER__22,L_N__27);
L_NUMBER__22=lisp.values1(TMP_43);
}
continue;
}
break;
}
}
TMP_37=lisp.values1(L_NUMBER__22);
}
return TMP_37;
});
CL_COMMON_LISP_SLASH=lisp.values1(F_SLASH_33);
let F_LOGAND_44;
F_LOGAND_44=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_45, arguments.length);
}
let TMP_49;
let TMP_48;
let L_I__34;
let TMP_47;
let TMP_46;
let L_G28__33;
let L_RESULT__31;
let L_INTEGERS__29;
L_INTEGERS__29=lisp.jsArrayToList(arguments, 0);
{
L_RESULT__31=lisp.values1(-1);
{
L_G28__33=lisp.values1(L_INTEGERS__29);
for(;;){
TMP_46=lisp.callFunctionWithCallStack(G_5,L_G28__33);
if(lisp.values1(TMP_46) !== lisp.S_nil){
}else{
{
TMP_47=lisp.callFunctionWithCallStack(G_7,L_G28__33);
L_I__34=lisp.values1(TMP_47);
TMP_48=lisp.callFunctionWithCallStack(G_9,L_G28__33);
L_G28__33=lisp.values1(TMP_48);
TMP_49=lisp.CL_integerp(L_I__34);
if(lisp.values1(TMP_49) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_I__34,G_50);
}
L_RESULT__31=lisp.values1((L_RESULT__31 & L_I__34));
}
continue;
}
break;
}
}
}
return lisp.values1(L_RESULT__31);
});
CL_COMMON_LISP_LOGAND=lisp.values1(F_LOGAND_44);
let F_REM_100;
F_REM_100=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_101, arguments.length);
}
let TMP_104;
let TMP_103;
let TMP_102;
let L_DIVISOR__79;
let L_NUMBER__78;
L_NUMBER__78=arguments[0];
L_DIVISOR__79=arguments[1];
TMP_102=lisp.CL_numberp(L_NUMBER__78);
if(lisp.values1(TMP_102) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__78,G_11);
}
TMP_103=lisp.CL_numberp(L_DIVISOR__79);
if(lisp.values1(TMP_103) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_DIVISOR__79,G_11);
}
TMP_104=lisp.CL_rem(L_NUMBER__78,L_DIVISOR__79);
return TMP_104;
});
CL_COMMON_LISP_REM=lisp.values1(F_REM_100);
let F_MOD_105;
F_MOD_105=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_106, arguments.length);
}
let TMP_107;
let L_DIVISOR__82;
let L_NUMBER__81;
L_NUMBER__81=arguments[0];
L_DIVISOR__82=arguments[1];
TMP_107=G_101.func(L_NUMBER__81,L_DIVISOR__82);
return TMP_107;
});
CL_COMMON_LISP_MOD=lisp.values1(F_MOD_105);
let F_FLOOR_108;
F_FLOOR_108=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_109, arguments.length);
}
let TMP_112;
let TMP_111;
let TMP_110;
let L_DIVISOR__85;
let L_NUMBER__84;
L_NUMBER__84=arguments[0];
L_DIVISOR__85=arguments.length > 1 ? arguments[1] : (lisp.values1(1));
TMP_110=lisp.CL_numberp(L_NUMBER__84);
if(lisp.values1(TMP_110) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__84,G_11);
}
TMP_111=lisp.CL_numberp(L_DIVISOR__85);
if(lisp.values1(TMP_111) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_DIVISOR__85,G_11);
}
TMP_112=lisp.CL_floor(L_NUMBER__84,L_DIVISOR__85);
return TMP_112;
});
CL_COMMON_LISP_FLOOR=lisp.values1(F_FLOOR_108);
let F_FLOATP_113;
F_FLOATP_113=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_114, arguments.length);
}
let TMP_119;
let TMP_118;
let TMP_116;
let TMP_115;
let L_X__87;
L_X__87=arguments[0];
TMP_115=lisp.CL_integerp(L_X__87);
TMP_116=lisp.callFunctionWithCallStack(G_117,TMP_115);
if(lisp.values1(TMP_116) !== lisp.S_nil){
TMP_119=lisp.CL_numberp(L_X__87);
TMP_118=TMP_119;
}else{
TMP_118=lisp.values1(lisp.S_nil);
}
return TMP_118;
});
CL_COMMON_LISP_FLOATP=lisp.values1(F_FLOATP_113);
let F_PLUSP_120;
F_PLUSP_120=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_121, arguments.length);
}
let TMP_122;
let L_X__89;
L_X__89=arguments[0];
TMP_122=lisp.callFunctionWithCallStack(G_76,0,L_X__89);
return TMP_122;
});
CL_COMMON_LISP_PLUSP=lisp.values1(F_PLUSP_120);
let F_MINUSP_123;
F_MINUSP_123=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_124, arguments.length);
}
let TMP_125;
let L_X__91;
L_X__91=arguments[0];
TMP_125=lisp.callFunctionWithCallStack(G_76,L_X__91,0);
return TMP_125;
});
CL_COMMON_LISP_MINUSP=lisp.values1(F_MINUSP_123);
let F_1PLUS_126;
F_1PLUS_126=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_127, arguments.length);
}
let TMP_128;
let L_X__93;
L_X__93=arguments[0];
TMP_128=lisp.callFunctionWithCallStack(G_2,L_X__93,1);
return TMP_128;
});
CL_COMMON_LISP_1PLUS=lisp.values1(F_1PLUS_126);
let F_1__129;
F_1__129=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_130, arguments.length);
}
let TMP_131;
let L_X__95;
L_X__95=arguments[0];
TMP_131=G_22.func(L_X__95,1);
return TMP_131;
});
CL_COMMON_LISP_1_=lisp.values1(F_1__129);
let F_ZEROP_132;
F_ZEROP_132=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_133, arguments.length);
}
let TMP_134;
let L_X__97;
L_X__97=arguments[0];
TMP_134=lisp.callFunctionWithCallStack(G_51,L_X__97,0);
return TMP_134;
});
CL_COMMON_LISP_ZEROP=lisp.values1(F_ZEROP_132);
let F_EVENP_135;
F_EVENP_135=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_136, arguments.length);
}
let TMP_138;
let TMP_137;
let L_X__99;
L_X__99=arguments[0];
TMP_137=G_101.func(L_X__99,2);
TMP_138=lisp.callFunctionWithCallStack(G_51,0,TMP_137);
return TMP_138;
});
CL_COMMON_LISP_EVENP=lisp.values1(F_EVENP_135);
let F_ODDP_139;
F_ODDP_139=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_140, arguments.length);
}
let TMP_142;
let TMP_141;
let L_X__101;
L_X__101=arguments[0];
TMP_141=G_101.func(L_X__101,2);
TMP_142=lisp.callFunctionWithCallStack(G_51,1,TMP_141);
return TMP_142;
});
CL_COMMON_LISP_ODDP=lisp.values1(F_ODDP_139);
let F_MIN_143;
F_MIN_143=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_144, arguments.length);
}
let TMP_148;
let TMP_147;
let L_N__108;
let TMP_146;
let TMP_145;
let L_G77__107;
let L_MORE_NUMBERS__104;
let L_NUMBER__103;
L_NUMBER__103=arguments[0];
L_MORE_NUMBERS__104=lisp.jsArrayToList(arguments, 1);
{
L_G77__107=lisp.values1(L_MORE_NUMBERS__104);
for(;;){
TMP_145=lisp.callFunctionWithCallStack(G_5,L_G77__107);
if(lisp.values1(TMP_145) !== lisp.S_nil){
}else{
{
TMP_146=lisp.callFunctionWithCallStack(G_7,L_G77__107);
L_N__108=lisp.values1(TMP_146);
TMP_147=lisp.callFunctionWithCallStack(G_9,L_G77__107);
L_G77__107=lisp.values1(TMP_147);
TMP_148=lisp.callFunctionWithCallStack(G_76,L_N__108,L_NUMBER__103);
if(lisp.values1(TMP_148) !== lisp.S_nil){
L_NUMBER__103=lisp.values1(L_N__108);
}else{
}
}
continue;
}
break;
}
}
return lisp.values1(L_NUMBER__103);
});
CL_COMMON_LISP_MIN=lisp.values1(F_MIN_143);
let F_MAX_149;
F_MAX_149=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_150, arguments.length);
}
let TMP_154;
let TMP_153;
let L_N__115;
let TMP_152;
let TMP_151;
let L_G84__114;
let L_MORE_NUMBERS__111;
let L_NUMBER__110;
L_NUMBER__110=arguments[0];
L_MORE_NUMBERS__111=lisp.jsArrayToList(arguments, 1);
{
L_G84__114=lisp.values1(L_MORE_NUMBERS__111);
for(;;){
TMP_151=lisp.callFunctionWithCallStack(G_5,L_G84__114);
if(lisp.values1(TMP_151) !== lisp.S_nil){
}else{
{
TMP_152=lisp.callFunctionWithCallStack(G_7,L_G84__114);
L_N__115=lisp.values1(TMP_152);
TMP_153=lisp.callFunctionWithCallStack(G_9,L_G84__114);
L_G84__114=lisp.values1(TMP_153);
TMP_154=lisp.callFunctionWithCallStack(G_76,L_NUMBER__110,L_N__115);
if(lisp.values1(TMP_154) !== lisp.S_nil){
L_NUMBER__110=lisp.values1(L_N__115);
}else{
}
}
continue;
}
break;
}
}
return lisp.values1(L_NUMBER__110);
});
CL_COMMON_LISP_MAX=lisp.values1(F_MAX_149);
let F_EXPT_155;
F_EXPT_155=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_156, arguments.length);
}
let L_G98__124;
let TMP_159;
let TMP_158;
let TMP_157;
let L_I__123;
let BLOCK_RESULT_NIL__122;
let L_G91__121;
let L_ACC__120;
let L_POWER__118;
let L_BASE__117;
L_BASE__117=arguments[0];
L_POWER__118=arguments[1];
{
L_ACC__120=lisp.values1(1);
{
L_G91__121=lisp.values1(L_POWER__118);
BLOCK_NIL__122: for(;;){{
L_I__123=lisp.values1(0);
for(;;){
TMP_157=lisp.callFunctionWithCallStack(G_84,L_I__123,L_G91__121);
if(lisp.values1(TMP_157) !== lisp.S_nil){
BLOCK_RESULT_NIL__122=lisp.values1(lisp.S_nil);
break BLOCK_NIL__122;
}else{
TMP_158=lisp.callFunctionWithCallStack(G_14,L_ACC__120,L_BASE__117);
L_ACC__120=lisp.values1(TMP_158);
{
TMP_159=lisp.callFunctionWithCallStack(G_2,L_I__123,1);
L_G98__124=lisp.values1(TMP_159);
L_I__123=lisp.values1(L_G98__124);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__122=lisp.values1(lisp.S_nil);
break;
}
}
}
return lisp.values1(L_ACC__120);
});
CL_COMMON_LISP_EXPT=lisp.values1(F_EXPT_155);
let F_RANDOM_160;
F_RANDOM_160=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_161, arguments.length);
}
let TMP_162;
let L_N__125;
L_N__125=arguments[0];
TMP_162=lisp.callFunctionWithCallStack(G_163,L_N__125);
return TMP_162;
});
CL_COMMON_LISP_RANDOM=lisp.values1(F_RANDOM_160);
// initialize symbols
G_2 = lisp.intern('+', 'COMMON-LISP');
G_5 = lisp.intern('ENDP', 'COMMON-LISP');
G_7 = lisp.intern('CAR', 'COMMON-LISP');
G_9 = lisp.intern('CDR', 'COMMON-LISP');
G_11 = lisp.intern('NUMBER', 'COMMON-LISP');
G_12 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_14 = lisp.intern('*', 'COMMON-LISP');
G_22 = lisp.intern('-', 'COMMON-LISP');
G_25 = lisp.intern('NULL', 'COMMON-LISP');
G_34 = lisp.intern('/', 'COMMON-LISP');
G_45 = lisp.intern('LOGAND', 'COMMON-LISP');
G_50 = lisp.intern('INTEGER', 'COMMON-LISP');
G_51 = lisp.intern('=', 'COMMON-LISP');
G_59 = lisp.intern('T', 'COMMON-LISP');
G_60 = lisp.intern('/=', 'COMMON-LISP');
G_68 = lisp.intern('>', 'COMMON-LISP');
G_76 = lisp.intern('<', 'COMMON-LISP');
G_84 = lisp.intern('>=', 'COMMON-LISP');
G_92 = lisp.intern('<=', 'COMMON-LISP');
G_101 = lisp.intern('REM', 'COMMON-LISP');
G_106 = lisp.intern('MOD', 'COMMON-LISP');
G_109 = lisp.intern('FLOOR', 'COMMON-LISP');
G_114 = lisp.intern('FLOATP', 'COMMON-LISP');
G_117 = lisp.intern('NOT', 'COMMON-LISP');
G_121 = lisp.intern('PLUSP', 'COMMON-LISP');
G_124 = lisp.intern('MINUSP', 'COMMON-LISP');
G_127 = lisp.intern('1+', 'COMMON-LISP');
G_130 = lisp.intern('1-', 'COMMON-LISP');
G_133 = lisp.intern('ZEROP', 'COMMON-LISP');
G_136 = lisp.intern('EVENP', 'COMMON-LISP');
G_140 = lisp.intern('ODDP', 'COMMON-LISP');
G_144 = lisp.intern('MIN', 'COMMON-LISP');
G_150 = lisp.intern('MAX', 'COMMON-LISP');
G_156 = lisp.intern('EXPT', 'COMMON-LISP');
G_161 = lisp.intern('RANDOM', 'COMMON-LISP');
G_163 = lisp.intern('RANDOM', 'SYSTEM');
G_164 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');TMP_3=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_13;
let TMP_10;
let TMP_8;
let L_N__6;
let TMP_6;
let TMP_4;
let L_G0__5;
let L_ACC__3;
let L_NUMBERS__1;
L_NUMBERS__1=lisp.jsArrayToList(arguments, 0);
{
L_ACC__3=lisp.values1(0);
{
L_G0__5=lisp.values1(L_NUMBERS__1);
for(;;){
TMP_4=lisp.callFunctionWithCallStack(G_5,L_G0__5);
if(lisp.values1(TMP_4) !== lisp.S_nil){
}else{
{
TMP_6=lisp.callFunctionWithCallStack(G_7,L_G0__5);
L_N__6=lisp.values1(TMP_6);
TMP_8=lisp.callFunctionWithCallStack(G_9,L_G0__5);
L_G0__5=lisp.values1(TMP_8);
TMP_10=lisp.CL_numberp(L_N__6);
if(lisp.values1(TMP_10) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__6,G_11);
}
TMP_13=lisp.CL_add(L_ACC__3,L_N__6);
L_ACC__3=lisp.values1(TMP_13);
}
continue;
}
break;
}
}
}
return lisp.values1(L_ACC__3);
});
lisp.CL_setSymbolFunction(G_2,TMP_3);
TMP_15=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_20;
let TMP_19;
let TMP_18;
let L_N__13;
let TMP_17;
let TMP_16;
let L_G7__12;
let L_ACC__10;
let L_NUMBERS__8;
L_NUMBERS__8=lisp.jsArrayToList(arguments, 0);
{
L_ACC__10=lisp.values1(1);
{
L_G7__12=lisp.values1(L_NUMBERS__8);
for(;;){
TMP_16=lisp.callFunctionWithCallStack(G_5,L_G7__12);
if(lisp.values1(TMP_16) !== lisp.S_nil){
}else{
{
TMP_17=lisp.callFunctionWithCallStack(G_7,L_G7__12);
L_N__13=lisp.values1(TMP_17);
TMP_18=lisp.callFunctionWithCallStack(G_9,L_G7__12);
L_G7__12=lisp.values1(TMP_18);
TMP_19=lisp.CL_numberp(L_N__13);
if(lisp.values1(TMP_19) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__13,G_11);
}
TMP_20=lisp.CL_mul(L_ACC__10,L_N__13);
L_ACC__10=lisp.values1(TMP_20);
}
continue;
}
break;
}
}
}
return lisp.values1(L_ACC__10);
});
lisp.CL_setSymbolFunction(G_14,TMP_15);
CL_COMMON_LISP__.lisp_name = '-'
lisp.setSymbolFunction(G_22, CL_COMMON_LISP__);
CL_COMMON_LISP_SLASH.lisp_name = '/'
lisp.setSymbolFunction(G_34, CL_COMMON_LISP_SLASH);
CL_COMMON_LISP_LOGAND.lisp_name = 'LOGAND'
lisp.setSymbolFunction(G_45, CL_COMMON_LISP_LOGAND);
TMP_52=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_58;
let TMP_57;
let TMP_56;
let L_N__41;
let TMP_55;
let TMP_54;
let L_G35__40;
let BLOCK_RESULT_NIL__39;
let TMP_53;
let L_NUMBERS__37;
let L_NUMBER__36;
L_NUMBER__36=arguments[0];
L_NUMBERS__37=lisp.jsArrayToList(arguments, 1);
TMP_53=lisp.CL_numberp(L_NUMBER__36);
if(lisp.values1(TMP_53) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__36,G_11);
}
BLOCK_NIL__39: for(;;){{
L_G35__40=lisp.values1(L_NUMBERS__37);
for(;;){
TMP_54=lisp.callFunctionWithCallStack(G_5,L_G35__40);
if(lisp.values1(TMP_54) !== lisp.S_nil){
}else{
{
TMP_55=lisp.callFunctionWithCallStack(G_7,L_G35__40);
L_N__41=lisp.values1(TMP_55);
TMP_56=lisp.callFunctionWithCallStack(G_9,L_G35__40);
L_G35__40=lisp.values1(TMP_56);
TMP_57=lisp.CL_numberp(L_N__41);
if(lisp.values1(TMP_57) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__41,G_11);
}
TMP_58=lisp.CL_numberEqual(L_NUMBER__36,L_N__41);
if(lisp.values1(TMP_58) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__39=lisp.values1(lisp.S_nil);
break BLOCK_NIL__39;
}
L_NUMBER__36=lisp.values1(L_N__41);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__39=lisp.values1(G_59);
break;
}
return BLOCK_RESULT_NIL__39;
});
lisp.CL_setSymbolFunction(G_51,TMP_52);
TMP_61=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_67;
let TMP_66;
let TMP_65;
let L_N__48;
let TMP_64;
let TMP_63;
let L_G42__47;
let BLOCK_RESULT_NIL__46;
let TMP_62;
let L_NUMBERS__44;
let L_NUMBER__43;
L_NUMBER__43=arguments[0];
L_NUMBERS__44=lisp.jsArrayToList(arguments, 1);
TMP_62=lisp.CL_numberp(L_NUMBER__43);
if(lisp.values1(TMP_62) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__43,G_11);
}
BLOCK_NIL__46: for(;;){{
L_G42__47=lisp.values1(L_NUMBERS__44);
for(;;){
TMP_63=lisp.callFunctionWithCallStack(G_5,L_G42__47);
if(lisp.values1(TMP_63) !== lisp.S_nil){
}else{
{
TMP_64=lisp.callFunctionWithCallStack(G_7,L_G42__47);
L_N__48=lisp.values1(TMP_64);
TMP_65=lisp.callFunctionWithCallStack(G_9,L_G42__47);
L_G42__47=lisp.values1(TMP_65);
TMP_66=lisp.CL_numberp(L_N__48);
if(lisp.values1(TMP_66) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__48,G_11);
}
TMP_67=lisp.CL_numberNotEqual(L_NUMBER__43,L_N__48);
if(lisp.values1(TMP_67) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__46=lisp.values1(lisp.S_nil);
break BLOCK_NIL__46;
}
L_NUMBER__43=lisp.values1(L_N__48);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__46=lisp.values1(G_59);
break;
}
return BLOCK_RESULT_NIL__46;
});
lisp.CL_setSymbolFunction(G_60,TMP_61);
TMP_69=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_75;
let TMP_74;
let TMP_73;
let L_N__55;
let TMP_72;
let TMP_71;
let L_G49__54;
let BLOCK_RESULT_NIL__53;
let TMP_70;
let L_NUMBERS__51;
let L_NUMBER__50;
L_NUMBER__50=arguments[0];
L_NUMBERS__51=lisp.jsArrayToList(arguments, 1);
TMP_70=lisp.CL_numberp(L_NUMBER__50);
if(lisp.values1(TMP_70) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__50,G_11);
}
BLOCK_NIL__53: for(;;){{
L_G49__54=lisp.values1(L_NUMBERS__51);
for(;;){
TMP_71=lisp.callFunctionWithCallStack(G_5,L_G49__54);
if(lisp.values1(TMP_71) !== lisp.S_nil){
}else{
{
TMP_72=lisp.callFunctionWithCallStack(G_7,L_G49__54);
L_N__55=lisp.values1(TMP_72);
TMP_73=lisp.callFunctionWithCallStack(G_9,L_G49__54);
L_G49__54=lisp.values1(TMP_73);
TMP_74=lisp.CL_numberp(L_N__55);
if(lisp.values1(TMP_74) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__55,G_11);
}
TMP_75=lisp.CL_greaterThan(L_NUMBER__50,L_N__55);
if(lisp.values1(TMP_75) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__53=lisp.values1(lisp.S_nil);
break BLOCK_NIL__53;
}
L_NUMBER__50=lisp.values1(L_N__55);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__53=lisp.values1(G_59);
break;
}
return BLOCK_RESULT_NIL__53;
});
lisp.CL_setSymbolFunction(G_68,TMP_69);
TMP_77=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_83;
let TMP_82;
let TMP_81;
let L_N__62;
let TMP_80;
let TMP_79;
let L_G56__61;
let BLOCK_RESULT_NIL__60;
let TMP_78;
let L_NUMBERS__58;
let L_NUMBER__57;
L_NUMBER__57=arguments[0];
L_NUMBERS__58=lisp.jsArrayToList(arguments, 1);
TMP_78=lisp.CL_numberp(L_NUMBER__57);
if(lisp.values1(TMP_78) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__57,G_11);
}
BLOCK_NIL__60: for(;;){{
L_G56__61=lisp.values1(L_NUMBERS__58);
for(;;){
TMP_79=lisp.callFunctionWithCallStack(G_5,L_G56__61);
if(lisp.values1(TMP_79) !== lisp.S_nil){
}else{
{
TMP_80=lisp.callFunctionWithCallStack(G_7,L_G56__61);
L_N__62=lisp.values1(TMP_80);
TMP_81=lisp.callFunctionWithCallStack(G_9,L_G56__61);
L_G56__61=lisp.values1(TMP_81);
TMP_82=lisp.CL_numberp(L_N__62);
if(lisp.values1(TMP_82) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__62,G_11);
}
TMP_83=lisp.CL_lessThan(L_NUMBER__57,L_N__62);
if(lisp.values1(TMP_83) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__60=lisp.values1(lisp.S_nil);
break BLOCK_NIL__60;
}
L_NUMBER__57=lisp.values1(L_N__62);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__60=lisp.values1(G_59);
break;
}
return BLOCK_RESULT_NIL__60;
});
lisp.CL_setSymbolFunction(G_76,TMP_77);
TMP_85=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_91;
let TMP_90;
let TMP_89;
let L_N__69;
let TMP_88;
let TMP_87;
let L_G63__68;
let BLOCK_RESULT_NIL__67;
let TMP_86;
let L_NUMBERS__65;
let L_NUMBER__64;
L_NUMBER__64=arguments[0];
L_NUMBERS__65=lisp.jsArrayToList(arguments, 1);
TMP_86=lisp.CL_numberp(L_NUMBER__64);
if(lisp.values1(TMP_86) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__64,G_11);
}
BLOCK_NIL__67: for(;;){{
L_G63__68=lisp.values1(L_NUMBERS__65);
for(;;){
TMP_87=lisp.callFunctionWithCallStack(G_5,L_G63__68);
if(lisp.values1(TMP_87) !== lisp.S_nil){
}else{
{
TMP_88=lisp.callFunctionWithCallStack(G_7,L_G63__68);
L_N__69=lisp.values1(TMP_88);
TMP_89=lisp.callFunctionWithCallStack(G_9,L_G63__68);
L_G63__68=lisp.values1(TMP_89);
TMP_90=lisp.CL_numberp(L_N__69);
if(lisp.values1(TMP_90) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__69,G_11);
}
TMP_91=lisp.CL_greaterEqual(L_NUMBER__64,L_N__69);
if(lisp.values1(TMP_91) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__67=lisp.values1(lisp.S_nil);
break BLOCK_NIL__67;
}
L_NUMBER__64=lisp.values1(L_N__69);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__67=lisp.values1(G_59);
break;
}
return BLOCK_RESULT_NIL__67;
});
lisp.CL_setSymbolFunction(G_84,TMP_85);
TMP_93=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_99;
let TMP_98;
let TMP_97;
let L_N__76;
let TMP_96;
let TMP_95;
let L_G70__75;
let BLOCK_RESULT_NIL__74;
let TMP_94;
let L_NUMBERS__72;
let L_NUMBER__71;
L_NUMBER__71=arguments[0];
L_NUMBERS__72=lisp.jsArrayToList(arguments, 1);
TMP_94=lisp.CL_numberp(L_NUMBER__71);
if(lisp.values1(TMP_94) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_NUMBER__71,G_11);
}
BLOCK_NIL__74: for(;;){{
L_G70__75=lisp.values1(L_NUMBERS__72);
for(;;){
TMP_95=lisp.callFunctionWithCallStack(G_5,L_G70__75);
if(lisp.values1(TMP_95) !== lisp.S_nil){
}else{
{
TMP_96=lisp.callFunctionWithCallStack(G_7,L_G70__75);
L_N__76=lisp.values1(TMP_96);
TMP_97=lisp.callFunctionWithCallStack(G_9,L_G70__75);
L_G70__75=lisp.values1(TMP_97);
TMP_98=lisp.CL_numberp(L_N__76);
if(lisp.values1(TMP_98) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_12,L_N__76,G_11);
}
TMP_99=lisp.CL_lessEqual(L_NUMBER__71,L_N__76);
if(lisp.values1(TMP_99) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__74=lisp.values1(lisp.S_nil);
break BLOCK_NIL__74;
}
L_NUMBER__71=lisp.values1(L_N__76);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__74=lisp.values1(G_59);
break;
}
return BLOCK_RESULT_NIL__74;
});
lisp.CL_setSymbolFunction(G_92,TMP_93);
CL_COMMON_LISP_REM.lisp_name = 'REM'
lisp.setSymbolFunction(G_101, CL_COMMON_LISP_REM);
CL_COMMON_LISP_MOD.lisp_name = 'MOD'
lisp.setSymbolFunction(G_106, CL_COMMON_LISP_MOD);
CL_COMMON_LISP_FLOOR.lisp_name = 'FLOOR'
lisp.setSymbolFunction(G_109, CL_COMMON_LISP_FLOOR);
CL_COMMON_LISP_FLOATP.lisp_name = 'FLOATP'
lisp.setSymbolFunction(G_114, CL_COMMON_LISP_FLOATP);
CL_COMMON_LISP_PLUSP.lisp_name = 'PLUSP'
lisp.setSymbolFunction(G_121, CL_COMMON_LISP_PLUSP);
CL_COMMON_LISP_MINUSP.lisp_name = 'MINUSP'
lisp.setSymbolFunction(G_124, CL_COMMON_LISP_MINUSP);
CL_COMMON_LISP_1PLUS.lisp_name = '1+'
lisp.setSymbolFunction(G_127, CL_COMMON_LISP_1PLUS);
CL_COMMON_LISP_1_.lisp_name = '1-'
lisp.setSymbolFunction(G_130, CL_COMMON_LISP_1_);
CL_COMMON_LISP_ZEROP.lisp_name = 'ZEROP'
lisp.setSymbolFunction(G_133, CL_COMMON_LISP_ZEROP);
CL_COMMON_LISP_EVENP.lisp_name = 'EVENP'
lisp.setSymbolFunction(G_136, CL_COMMON_LISP_EVENP);
CL_COMMON_LISP_ODDP.lisp_name = 'ODDP'
lisp.setSymbolFunction(G_140, CL_COMMON_LISP_ODDP);
CL_COMMON_LISP_MIN.lisp_name = 'MIN'
lisp.setSymbolFunction(G_144, CL_COMMON_LISP_MIN);
CL_COMMON_LISP_MAX.lisp_name = 'MAX'
lisp.setSymbolFunction(G_150, CL_COMMON_LISP_MAX);
CL_COMMON_LISP_EXPT.lisp_name = 'EXPT'
lisp.setSymbolFunction(G_156, CL_COMMON_LISP_EXPT);
CL_COMMON_LISP_RANDOM.lisp_name = 'RANDOM'
lisp.setSymbolFunction(G_161, CL_COMMON_LISP_RANDOM);
}catch(TMP_1){G_164.func();
console.log(TMP_1.message);
}


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_4;
let G_6;
let G_8;
let G_9;
let G_11;
let G_13;
let G_15;
let G_17;
let G_19;
let G_21;
let G_23;
let G_28;
let G_30;
let G_31;
let G_33;
let G_37;
let G_41;
let G_43;
let G_44;
let G_47;
let G_49;
let G_52;
let G_55;
let G_58;
let G_73;
let G_76;
let G_91;
let G_94;
let G_109;
let G_112;
let G_127;
let G_130;
let G_145;
let G_148;
let G_163;
let G_166;
let G_181;
let G_182;
let G_192;
let G_194;
let G_197;
let G_198;
let G_199;
let G_200;
let G_202;
let G_204;
let G_206;
let G_210;
let G_213;
let G_215;
let G_217;
let G_221;
let G_223;
let G_225;
let G_227;
let G_229;
let G_231;
let G_233;
let G_237;
let G_238;
let G_242;
let G_245;
let G_248;
let G_252;
let G_257;
let G_261;
let G_267;
let G_274;
let G_276;
let G_287;
let G_294;
let G_301;
let G_303;
let G_306;
let G_308;
let G_310;
let G_324;
let G_325;
let G_327;
let G_331;
let G_335;
let G_337;
let G_339;
let G_357;
let G_359;
let G_375;
let G_379;
let G_383;
let G_385;
let G_389;
let G_401;
let G_404;
let G_408;
let G_412;
let G_414;
let G_428;
let G_434;
let G_441;
let G_444;
let G_451;
let G_454;
let G_456;
let G_464;
let G_467;
let G_469;
let G_470;
let G_478;
let G_480;
let G_496;
let G_499;
let G_503;
let G_507;
let G_509;
let G_513;
let G_525;
let G_527;
let G_528;
let G_563;
let G_589;
let G_603;
let G_616;
let G_625;
let G_628;
let G_643;
let G_647;
let G_663;
let G_667;
let G_683;
let G_687;
let G_700;
let G_706;
let G_719;
let G_731;
let CL_COMMON_LISP_ARRAY_EQUALP;
let CL_COMMON_LISP_VECTOR_LENGTH;
let CL_COMMON_LISP_BIT_AND;
let CL_COMMON_LISP_SBIT;
let CL_COMMON_LISP_BIT;
let CL_COMMON_LISP_SVREF;
let CL_COMMON_LISP_VECTOR_PUSH_EXTEND;
let CL_COMMON_LISP_VECTOR_PUSH;
let CL_COMMON_LISP_VECTOR_POP;
let CL_COMMON_LISP_ROW_MAJOR_AREF;
let CL_COMMON_LISP_PERCENTSTRING_SET;
let CL_SYSTEM_PERCENTVECTOR_REF;
let CL_COMMON_LISP_AREF;
let CL_COMMON_LISP_ARRAY_IN_BOUNDS_P;
let CL_COMMON_LISP_ARRAY_ROW_MAJOR_INDEX;
let CL_COMMON_LISP_PERCENTARRAY_ROW_MAJOR_INDEX;
let CL_COMMON_LISP_SUBSCRIPTS_ERROR;
let CL_COMMON_LISP_ARRAY_DISPLACEMENT;
let CL_COMMON_LISP_ARRAY_DIMENSION;
let CL_COMMON_LISP_ARRAY_HAS_FILL_POINTER_P;
let CL_COMMON_LISP_SIMPLE_BIT_VECTOR_P;
let CL_COMMON_LISP_SIMPLE_VECTOR_P;
let CL_COMMON_LISP_VECTORP;
let CL_COMMON_LISP_FILL_POINTER;
let CL_COMMON_LISP_ADJUSTABLE_ARRAY_P;
let CL_COMMON_LISP_VECTOR;
let CL_SYSTEM_ARRAY_TO_RAW_STRING;
let CL_SYSTEM_RAW_STRING_TO_ARRAY;
let CL_COMMON_LISP_SIMPLE_MAKE_STRING;
let CL_SYSTEM_RAW_ARRAY_TO_ARRAY;
let CL_COMMON_LISP_ADJUST_ARRAY;
let CL_COMMON_LISP_MAKE_ARRAY;
let CL_COMMON_LISP_MAKE_OR_ADJUST_ARRAY;
let CL_COMMON_LISP_COPY_ARRAY_CONTENTS;
let CL_COMMON_LISP_MAKE_ARRAY_CONTENTS_WITH_INITIAL_ELEMENT;
let CL_COMMON_LISP_MAKE_ARRAY_CONTENTS_WITH_INITIAL_CONTENTS;
let CL_COMMON_LISP_UPGRADED_ARRAY_ELEMENT_TYPE;
let CL_COMMON_LISP_ARRAY_ELEMENT_TYPE;
let CL_COMMON_LISP_ARRAY_RANK;
let CL_COMMON_LISP_ARRAY_FILL_POINTER;
let CL_COMMON_LISP_ARRAY_DISPLACED_INDEX_OFFSET;
let CL_COMMON_LISP_ARRAY_DISPLACED_TO;
let CL_COMMON_LISP_ARRAY_TOTAL_SIZE;
let CL_COMMON_LISP_ARRAY_DIMENSIONS;
let CL_COMMON_LISP_ARRAY_CONTENTS;
let CL_COMMON_LISP_PERCENTMAKE_ARRAY;
let CL_COMMON_LISP_ARRAYP;
let TMP_681;
let TMP_672;
let TMP_668;
let TMP_661;
let TMP_652;
let TMP_648;
let TMP_641;
let TMP_632;
let TMP_629;
let TMP_587;
let TMP_578;
let TMP_564;
let TMP_552;
let TMP_543;
let TMP_529;
let TMP_426;
let TMP_417;
let TMP_415;
let L_G67__129;
let L_G66__128;
let TMP_180;
let TMP_179;
let TMP_170;
let TMP_167;
let TMP_161;
let TMP_152;
let TMP_149;
let TMP_143;
let TMP_134;
let TMP_131;
let TMP_125;
let TMP_116;
let TMP_113;
let TMP_107;
let TMP_98;
let TMP_95;
let TMP_89;
let TMP_80;
let TMP_77;
let TMP_71;
let TMP_62;
let TMP_59;
let TMP_53;
let TMP_38;
let TMP_34;
// toplevel defun
let F_ARRAYP_2;
F_ARRAYP_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_5;
let L_X__1;
L_X__1=arguments[0];
TMP_5=lisp.callFunctionWithCallStack(G_6,L_X__1,G_4);
return TMP_5;
});
CL_COMMON_LISP_ARRAYP=lisp.values1(F_ARRAYP_2);
let F_PERCENTMAKE_ARRAY_7;
F_PERCENTMAKE_ARRAY_7=(function(){
if(arguments.length < 0 || 16 < arguments.length) {
lisp.argumentsError(G_8, arguments.length);
}
let TMP_26;
let L_ELEMENT_TYPE__10;
let L_RANK__9;
let L_FILL_POINTER__8;
let L_DISPLACED_INDEX_OFFSET__7;
let L_DISPLACED_TO__6;
let L_TOTAL_SIZE__5;
let L_DIMENSIONS__4;
let L_CONTENTS__3;
let supplied_CONTENTS__3;
for (let TMP_10 = 0; TMP_10 < arguments.length; TMP_10 += 2) {
if(arguments[TMP_10] === G_9){
supplied_CONTENTS__3=arguments[TMP_10+1];
break;
}
}
L_CONTENTS__3=supplied_CONTENTS__3 !== undefined ? supplied_CONTENTS__3 : (lisp.values1(lisp.S_nil));
let supplied_DIMENSIONS__4;
for (let TMP_12 = 0; TMP_12 < arguments.length; TMP_12 += 2) {
if(arguments[TMP_12] === G_11){
supplied_DIMENSIONS__4=arguments[TMP_12+1];
break;
}
}
L_DIMENSIONS__4=supplied_DIMENSIONS__4 !== undefined ? supplied_DIMENSIONS__4 : (lisp.values1(lisp.S_nil));
let supplied_TOTAL_SIZE__5;
for (let TMP_14 = 0; TMP_14 < arguments.length; TMP_14 += 2) {
if(arguments[TMP_14] === G_13){
supplied_TOTAL_SIZE__5=arguments[TMP_14+1];
break;
}
}
L_TOTAL_SIZE__5=supplied_TOTAL_SIZE__5 !== undefined ? supplied_TOTAL_SIZE__5 : (lisp.values1(lisp.S_nil));
let supplied_DISPLACED_TO__6;
for (let TMP_16 = 0; TMP_16 < arguments.length; TMP_16 += 2) {
if(arguments[TMP_16] === G_15){
supplied_DISPLACED_TO__6=arguments[TMP_16+1];
break;
}
}
L_DISPLACED_TO__6=supplied_DISPLACED_TO__6 !== undefined ? supplied_DISPLACED_TO__6 : (lisp.values1(lisp.S_nil));
let supplied_DISPLACED_INDEX_OFFSET__7;
for (let TMP_18 = 0; TMP_18 < arguments.length; TMP_18 += 2) {
if(arguments[TMP_18] === G_17){
supplied_DISPLACED_INDEX_OFFSET__7=arguments[TMP_18+1];
break;
}
}
L_DISPLACED_INDEX_OFFSET__7=supplied_DISPLACED_INDEX_OFFSET__7 !== undefined ? supplied_DISPLACED_INDEX_OFFSET__7 : (lisp.values1(lisp.S_nil));
let supplied_FILL_POINTER__8;
for (let TMP_20 = 0; TMP_20 < arguments.length; TMP_20 += 2) {
if(arguments[TMP_20] === G_19){
supplied_FILL_POINTER__8=arguments[TMP_20+1];
break;
}
}
L_FILL_POINTER__8=supplied_FILL_POINTER__8 !== undefined ? supplied_FILL_POINTER__8 : (lisp.values1(lisp.S_nil));
let supplied_RANK__9;
for (let TMP_22 = 0; TMP_22 < arguments.length; TMP_22 += 2) {
if(arguments[TMP_22] === G_21){
supplied_RANK__9=arguments[TMP_22+1];
break;
}
}
L_RANK__9=supplied_RANK__9 !== undefined ? supplied_RANK__9 : (lisp.values1(lisp.S_nil));
let supplied_ELEMENT_TYPE__10;
for (let TMP_24 = 0; TMP_24 < arguments.length; TMP_24 += 2) {
if(arguments[TMP_24] === G_23){
supplied_ELEMENT_TYPE__10=arguments[TMP_24+1];
break;
}
}
L_ELEMENT_TYPE__10=supplied_ELEMENT_TYPE__10 !== undefined ? supplied_ELEMENT_TYPE__10 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_25 = 0; TMP_25 < arguments.length; TMP_25 += 2) {
if(arguments[TMP_25]!==G_23 && arguments[TMP_25]!==G_21 && arguments[TMP_25]!==G_19 && arguments[TMP_25]!==G_17 && arguments[TMP_25]!==G_15 && arguments[TMP_25]!==G_13 && arguments[TMP_25]!==G_11 && arguments[TMP_25]!==G_9) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_25].name); }
}
TMP_26=lisp.CL_makeStructure(G_4,L_CONTENTS__3,L_DIMENSIONS__4,L_TOTAL_SIZE__5,L_DISPLACED_TO__6,L_DISPLACED_INDEX_OFFSET__7,L_FILL_POINTER__8,L_RANK__9,L_ELEMENT_TYPE__10);
return TMP_26;
});
CL_COMMON_LISP_PERCENTMAKE_ARRAY=lisp.values1(F_PERCENTMAKE_ARRAY_7);
let F_ARRAY_CONTENTS_27;
F_ARRAY_CONTENTS_27=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_28, arguments.length);
}
let TMP_32;
let TMP_29;
let L_STRUCTURE__12;
L_STRUCTURE__12=arguments[0];
TMP_29=lisp.CL_structurep(L_STRUCTURE__12);
if(lisp.values1(TMP_29) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__12,G_30);
}
TMP_32=lisp.CL_structureRef(L_STRUCTURE__12,0);
return TMP_32;
});
CL_COMMON_LISP_ARRAY_CONTENTS=lisp.values1(F_ARRAY_CONTENTS_27);
let F_ARRAY_DIMENSIONS_54;
F_ARRAY_DIMENSIONS_54=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_55, arguments.length);
}
let TMP_57;
let TMP_56;
let L_STRUCTURE__26;
L_STRUCTURE__26=arguments[0];
TMP_56=lisp.CL_structurep(L_STRUCTURE__26);
if(lisp.values1(TMP_56) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__26,G_30);
}
TMP_57=lisp.CL_structureRef(L_STRUCTURE__26,1);
return TMP_57;
});
CL_COMMON_LISP_ARRAY_DIMENSIONS=lisp.values1(F_ARRAY_DIMENSIONS_54);
let F_ARRAY_TOTAL_SIZE_72;
F_ARRAY_TOTAL_SIZE_72=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_73, arguments.length);
}
let TMP_75;
let TMP_74;
let L_STRUCTURE__40;
L_STRUCTURE__40=arguments[0];
TMP_74=lisp.CL_structurep(L_STRUCTURE__40);
if(lisp.values1(TMP_74) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__40,G_30);
}
TMP_75=lisp.CL_structureRef(L_STRUCTURE__40,2);
return TMP_75;
});
CL_COMMON_LISP_ARRAY_TOTAL_SIZE=lisp.values1(F_ARRAY_TOTAL_SIZE_72);
let F_ARRAY_DISPLACED_TO_90;
F_ARRAY_DISPLACED_TO_90=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_91, arguments.length);
}
let TMP_93;
let TMP_92;
let L_STRUCTURE__54;
L_STRUCTURE__54=arguments[0];
TMP_92=lisp.CL_structurep(L_STRUCTURE__54);
if(lisp.values1(TMP_92) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__54,G_30);
}
TMP_93=lisp.CL_structureRef(L_STRUCTURE__54,3);
return TMP_93;
});
CL_COMMON_LISP_ARRAY_DISPLACED_TO=lisp.values1(F_ARRAY_DISPLACED_TO_90);
let F_ARRAY_DISPLACED_INDEX_OFFSET_108;
F_ARRAY_DISPLACED_INDEX_OFFSET_108=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_109, arguments.length);
}
let TMP_111;
let TMP_110;
let L_STRUCTURE__68;
L_STRUCTURE__68=arguments[0];
TMP_110=lisp.CL_structurep(L_STRUCTURE__68);
if(lisp.values1(TMP_110) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__68,G_30);
}
TMP_111=lisp.CL_structureRef(L_STRUCTURE__68,4);
return TMP_111;
});
CL_COMMON_LISP_ARRAY_DISPLACED_INDEX_OFFSET=lisp.values1(F_ARRAY_DISPLACED_INDEX_OFFSET_108);
let F_ARRAY_FILL_POINTER_126;
F_ARRAY_FILL_POINTER_126=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_127, arguments.length);
}
let TMP_129;
let TMP_128;
let L_STRUCTURE__82;
L_STRUCTURE__82=arguments[0];
TMP_128=lisp.CL_structurep(L_STRUCTURE__82);
if(lisp.values1(TMP_128) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__82,G_30);
}
TMP_129=lisp.CL_structureRef(L_STRUCTURE__82,5);
return TMP_129;
});
CL_COMMON_LISP_ARRAY_FILL_POINTER=lisp.values1(F_ARRAY_FILL_POINTER_126);
let F_ARRAY_RANK_144;
F_ARRAY_RANK_144=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_145, arguments.length);
}
let TMP_147;
let TMP_146;
let L_STRUCTURE__96;
L_STRUCTURE__96=arguments[0];
TMP_146=lisp.CL_structurep(L_STRUCTURE__96);
if(lisp.values1(TMP_146) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__96,G_30);
}
TMP_147=lisp.CL_structureRef(L_STRUCTURE__96,6);
return TMP_147;
});
CL_COMMON_LISP_ARRAY_RANK=lisp.values1(F_ARRAY_RANK_144);
let F_ARRAY_ELEMENT_TYPE_162;
F_ARRAY_ELEMENT_TYPE_162=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_163, arguments.length);
}
let TMP_165;
let TMP_164;
let L_STRUCTURE__110;
L_STRUCTURE__110=arguments[0];
TMP_164=lisp.CL_structurep(L_STRUCTURE__110);
if(lisp.values1(TMP_164) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__110,G_30);
}
TMP_165=lisp.CL_structureRef(L_STRUCTURE__110,7);
return TMP_165;
});
CL_COMMON_LISP_ARRAY_ELEMENT_TYPE=lisp.values1(F_ARRAY_ELEMENT_TYPE_162);
let F_UPGRADED_ARRAY_ELEMENT_TYPE_193;
F_UPGRADED_ARRAY_ELEMENT_TYPE_193=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_194, arguments.length);
}
let TMP_203;
let L_G70__134;
let TMP_201;
let L_G69__133;
let TMP_196;
let L_G68__132;
let TMP_195;
let L_TYPESPEC__130;
L_TYPESPEC__130=arguments[0];
{
TMP_195=lisp.CL_symbolp(L_TYPESPEC__130);
L_G68__132=lisp.values1(TMP_195);
if(lisp.values1(L_G68__132) !== lisp.S_nil){
{
L_G69__133=lisp.values1(L_TYPESPEC__130);
{
TMP_201=lisp.callFunctionWithCallStack(G_202,L_G69__133,lisp.makeCons(G_197, lisp.makeCons(G_198, lisp.makeCons(G_199, lisp.makeCons(G_200, lisp.S_nil)))));
L_G70__134=lisp.values1(TMP_201);
if(lisp.values1(L_G70__134) !== lisp.S_nil){
TMP_203=lisp.values1(G_197);
}else{
TMP_203=lisp.values1(G_204);
}
}
}
TMP_196=TMP_203;
}else{
TMP_196=lisp.values1(G_204);
}
}
return TMP_196;
});
CL_COMMON_LISP_UPGRADED_ARRAY_ELEMENT_TYPE=lisp.values1(F_UPGRADED_ARRAY_ELEMENT_TYPE_193);
let F_MAKE_ARRAY_CONTENTS_WITH_INITIAL_CONTENTS_205;
F_MAKE_ARRAY_CONTENTS_WITH_INITIAL_CONTENTS_205=(function(){
if(arguments.length !== 5) {
lisp.argumentsError(G_206, arguments.length);
}
let F_F__154;
let TMP_240;
let L_RAW_ARRAY__153;
let TMP_239;
let L_I__152;
let L_RAW_ARRAY__150;
let TMP_236;
let TMP_235;
let L_G81__149;
let TMP_234;
let L_G80__148;
let TMP_232;
let TMP_230;
let TMP_228;
let TMP_226;
let TMP_224;
let TMP_222;
let L_I__147;
let BLOCK_RESULT_NIL__146;
let TMP_220;
let TMP_219;
let TMP_218;
let TMP_216;
let L_RAW_STRING__145;
let TMP_214;
let L_LEN__144;
let TMP_212;
let TMP_211;
let L_G73__143;
let TMP_209;
let TMP_208;
let TMP_207;
let L_INITIAL_CONTENTS__141;
let L_ELEMENT_TYPE__140;
let L_RANK__139;
let L_TOTAL_SIZE__138;
let L_DIMENSIONS__137;
L_DIMENSIONS__137=arguments[0];
L_TOTAL_SIZE__138=arguments[1];
L_RANK__139=arguments[2];
L_ELEMENT_TYPE__140=arguments[3];
L_INITIAL_CONTENTS__141=arguments[4];
{
TMP_207=lisp.CL_eq(L_ELEMENT_TYPE__140,G_197);
if(lisp.values1(TMP_207) !== lisp.S_nil){
TMP_209=lisp.callFunctionWithCallStack(G_210,L_RANK__139,1);
TMP_208=lisp.values1(TMP_209);
}else{
TMP_208=lisp.values1(lisp.S_nil);
}
L_G73__143=lisp.values1(TMP_208);
if(lisp.values1(L_G73__143) !== lisp.S_nil){
{
TMP_212=lisp.callFunctionWithCallStack(G_213,L_INITIAL_CONTENTS__141);
L_LEN__144=lisp.values1(TMP_212);
TMP_214=lisp.callFunctionWithCallStack(G_215);
L_RAW_STRING__145=lisp.values1(TMP_214);
TMP_216=lisp.callFunctionWithCallStack(G_217,L_DIMENSIONS__137);
TMP_218=lisp.callFunctionWithCallStack(G_210,TMP_216,L_LEN__144);
if(lisp.values1(TMP_218) !== lisp.S_nil){
}else{
TMP_219=lisp.callFunctionWithCallStack(G_213,L_INITIAL_CONTENTS__141);
TMP_220=lisp.callFunctionWithCallStack(G_217,L_DIMENSIONS__137);
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([84, 104, 101, 114, 101, 32, 97, 114, 101, 32, 126, 68, 32, 101, 108, 101, 109, 101, 110, 116, 115, 32, 105, 110, 32, 116, 104, 101, 32, 58, 73, 78, 73, 84, 73, 65, 76, 45, 67, 79, 78, 84, 69, 78, 84, 83, 44, 32, 98, 117, 116, 32, 116, 104, 101, 32, 118, 101, 99, 116, 111, 114, 32, 108, 101, 110, 103, 116, 104, 32, 105, 115, 32, 126, 68, 46])),TMP_219,TMP_220);
}
BLOCK_NIL__146: for(;;){{
L_I__147=lisp.values1(0);
for(;;){
TMP_222=lisp.callFunctionWithCallStack(G_223,L_I__147,L_LEN__144);
if(lisp.values1(TMP_222) !== lisp.S_nil){
BLOCK_RESULT_NIL__146=lisp.values1(lisp.S_nil);
break BLOCK_NIL__146;
}else{
TMP_224=lisp.callFunctionWithCallStack(G_225,L_INITIAL_CONTENTS__141,L_I__147);
TMP_226=lisp.callFunctionWithCallStack(G_227,TMP_224);
TMP_228=G_229.func(TMP_226);
TMP_230=lisp.callFunctionWithCallStack(G_231,L_RAW_STRING__145,TMP_228);
L_RAW_STRING__145=lisp.values1(TMP_230);
{
TMP_232=lisp.callFunctionWithCallStack(G_233,L_I__147);
L_G80__148=lisp.values1(TMP_232);
L_I__147=lisp.values1(L_G80__148);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__146=lisp.values1(lisp.S_nil);
break;
}
}
TMP_211=lisp.values1(L_RAW_STRING__145);
}else{
{
TMP_234=lisp.callFunctionWithCallStack(G_210,L_RANK__139,0);
L_G81__149=lisp.values1(TMP_234);
if(lisp.values1(L_G81__149) !== lisp.S_nil){
{
TMP_236=lisp.callFunctionWithCallStack(G_237,1);
L_RAW_ARRAY__150=lisp.values1(TMP_236);
lisp.callFunctionWithCallStack(G_238,L_RAW_ARRAY__150,0,L_INITIAL_CONTENTS__141);
}
TMP_235=lisp.values1(L_RAW_ARRAY__150);
}else{
{
L_I__152=lisp.values1(-1);
TMP_239=lisp.callFunctionWithCallStack(G_237,L_TOTAL_SIZE__138);
L_RAW_ARRAY__153=lisp.values1(TMP_239);
{
TMP_240=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_265;
let TMP_262;
let TMP_260;
let TMP_255;
let TMP_254;
let TMP_253;
let TMP_251;
let TMP_250;
let TMP_249;
let TMP_247;
let TMP_246;
let TMP_244;
let TMP_243;
let L_G83__157;
let TMP_241;
let L_INITIAL_CONTENTS__156;
let L_DIMENSIONS__155;
L_DIMENSIONS__155=arguments[0];
L_INITIAL_CONTENTS__156=arguments[1];
{
TMP_241=lisp.callFunctionWithCallStack(G_242,L_DIMENSIONS__155);
L_G83__157=lisp.values1(TMP_241);
if(lisp.values1(L_G83__157) !== lisp.S_nil){
TMP_243=lisp.values1(L_G83__157);
}else{
TMP_244=lisp.callFunctionWithCallStack(G_245,L_DIMENSIONS__155);
TMP_246=lisp.callFunctionWithCallStack(G_213,L_INITIAL_CONTENTS__156);
TMP_247=lisp.callFunctionWithCallStack(G_248,TMP_244,TMP_246);
if(lisp.values1(TMP_247) !== lisp.S_nil){
TMP_249=lisp.callFunctionWithCallStack(G_213,L_INITIAL_CONTENTS__156);
TMP_250=lisp.callFunctionWithCallStack(G_245,L_DIMENSIONS__155);
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([84, 104, 101, 114, 101, 32, 97, 114, 101, 32, 126, 68, 32, 101, 108, 101, 109, 101, 110, 116, 115, 32, 105, 110, 32, 116, 104, 101, 32, 58, 73, 78, 73, 84, 73, 65, 76, 45, 67, 79, 78, 84, 69, 78, 84, 83, 44, 32, 98, 117, 116, 32, 116, 104, 101, 32, 118, 101, 99, 116, 111, 114, 32, 108, 101, 110, 103, 116, 104, 32, 105, 115, 32, 126, 68, 46])),TMP_249,TMP_250);
}else{
}
TMP_251=lisp.callFunctionWithCallStack(G_252,L_DIMENSIONS__155);
TMP_253=lisp.callFunctionWithCallStack(G_242,TMP_251);
if(lisp.values1(TMP_253) !== lisp.S_nil){
TMP_255=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_259;
let TMP_258;
let L_G85__160;
let TMP_256;
let L_CONTENT__159;
L_CONTENT__159=arguments[0];
{
TMP_256=lisp.callFunctionWithCallStack(G_257,L_I__152,1);
L_G85__160=lisp.values1(TMP_256);
L_I__152=(TMP_258=lisp.values1(L_G85__160));
}
TMP_259=lisp.callFunctionWithCallStack(G_238,L_RAW_ARRAY__153,lisp.values1(TMP_258),L_CONTENT__159);
return TMP_259;
});
TMP_260=lisp.callFunctionWithCallStack(G_261,lisp.S_nil,TMP_255,L_INITIAL_CONTENTS__156);
TMP_254=TMP_260;
}else{
TMP_262=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_264;
let TMP_263;
let L_CONTENT__161;
L_CONTENT__161=arguments[0];
TMP_263=lisp.callFunctionWithCallStack(G_252,L_DIMENSIONS__155);
TMP_264=F_F__154(TMP_263,L_CONTENT__161);
return TMP_264;
});
TMP_265=lisp.callFunctionWithCallStack(G_261,lisp.S_nil,TMP_262,L_INITIAL_CONTENTS__156);
TMP_254=TMP_265;
}
TMP_243=TMP_254;
}
}
return TMP_243;
});
F_F__154=lisp.values1(TMP_240);
F_F__154(L_DIMENSIONS__137,L_INITIAL_CONTENTS__141);
}
}
TMP_235=lisp.values1(L_RAW_ARRAY__153);
}
}
TMP_211=TMP_235;
}
}
return TMP_211;
});
CL_COMMON_LISP_MAKE_ARRAY_CONTENTS_WITH_INITIAL_CONTENTS=lisp.values1(F_MAKE_ARRAY_CONTENTS_WITH_INITIAL_CONTENTS_205);
let F_MAKE_ARRAY_CONTENTS_WITH_INITIAL_ELEMENT_266;
F_MAKE_ARRAY_CONTENTS_WITH_INITIAL_ELEMENT_266=(function(){
if(arguments.length !== 6) {
lisp.argumentsError(G_267, arguments.length);
}
let TMP_292;
let L_RAW_ARRAY__180;
let TMP_291;
let L_RAW_ARRAY__178;
let TMP_290;
let TMP_289;
let L_G95__177;
let TMP_288;
let TMP_286;
let TMP_285;
let TMP_284;
let TMP_283;
let L_G94__176;
let TMP_282;
let L_G93__175;
let TMP_281;
let TMP_280;
let TMP_279;
let L_I__174;
let BLOCK_RESULT_NIL__173;
let L_LENGTH__172;
let TMP_278;
let L_RAW_STRING__171;
let TMP_277;
let L_INITIAL_RAW_STRING__170;
let TMP_275;
let TMP_273;
let TMP_272;
let TMP_271;
let L_G86__169;
let TMP_270;
let TMP_269;
let TMP_268;
let L_INITIAL_ELEMENT_P__167;
let L_INITIAL_ELEMENT__166;
let L_ELEMENT_TYPE__165;
let L_RANK__164;
let L_TOTAL_SIZE__163;
let L_DIMENSIONS__162;
L_DIMENSIONS__162=arguments[0];
L_TOTAL_SIZE__163=arguments[1];
L_RANK__164=arguments[2];
L_ELEMENT_TYPE__165=arguments[3];
L_INITIAL_ELEMENT__166=arguments[4];
L_INITIAL_ELEMENT_P__167=arguments[5];
{
TMP_268=lisp.CL_eq(L_ELEMENT_TYPE__165,G_197);
if(lisp.values1(TMP_268) !== lisp.S_nil){
TMP_270=lisp.callFunctionWithCallStack(G_210,L_RANK__164,1);
TMP_269=lisp.values1(TMP_270);
}else{
TMP_269=lisp.values1(lisp.S_nil);
}
L_G86__169=lisp.values1(TMP_269);
if(lisp.values1(L_G86__169) !== lisp.S_nil){
{
if(lisp.values1(L_INITIAL_ELEMENT_P__167) !== lisp.S_nil){
TMP_273=lisp.callFunctionWithCallStack(G_274,L_INITIAL_ELEMENT__166);
TMP_272=lisp.values1(TMP_273);
}else{
TMP_272=lisp.values1(0);
}
TMP_275=lisp.callFunctionWithCallStack(G_276,TMP_272);
L_INITIAL_RAW_STRING__170=lisp.values1(TMP_275);
TMP_277=lisp.callFunctionWithCallStack(G_215);
L_RAW_STRING__171=lisp.values1(TMP_277);
TMP_278=lisp.callFunctionWithCallStack(G_217,L_DIMENSIONS__162);
L_LENGTH__172=lisp.values1(TMP_278);
BLOCK_NIL__173: for(;;){{
L_I__174=lisp.values1(0);
for(;;){
TMP_279=lisp.callFunctionWithCallStack(G_223,L_I__174,L_LENGTH__172);
if(lisp.values1(TMP_279) !== lisp.S_nil){
BLOCK_RESULT_NIL__173=lisp.values1(lisp.S_nil);
break BLOCK_NIL__173;
}else{
TMP_280=lisp.callFunctionWithCallStack(G_231,L_RAW_STRING__171,L_INITIAL_RAW_STRING__170);
L_RAW_STRING__171=lisp.values1(TMP_280);
{
TMP_281=lisp.callFunctionWithCallStack(G_233,L_I__174);
L_G93__175=lisp.values1(TMP_281);
L_I__174=lisp.values1(L_G93__175);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__173=lisp.values1(lisp.S_nil);
break;
}
}
TMP_271=lisp.values1(L_RAW_STRING__171);
}else{
{
TMP_282=lisp.callFunctionWithCallStack(G_210,L_RANK__164,1);
L_G94__176=lisp.values1(TMP_282);
if(lisp.values1(L_G94__176) !== lisp.S_nil){
TMP_284=lisp.callFunctionWithCallStack(G_217,L_DIMENSIONS__162);
TMP_285=lisp.callFunctionWithCallStack(G_237,TMP_284);
TMP_286=lisp.callFunctionWithCallStack(G_287,TMP_285,L_INITIAL_ELEMENT__166);
TMP_283=TMP_286;
}else{
{
TMP_288=lisp.callFunctionWithCallStack(G_210,L_RANK__164,0);
L_G95__177=lisp.values1(TMP_288);
if(lisp.values1(L_G95__177) !== lisp.S_nil){
{
TMP_290=lisp.callFunctionWithCallStack(G_237,1);
L_RAW_ARRAY__178=lisp.values1(TMP_290);
lisp.callFunctionWithCallStack(G_238,L_RAW_ARRAY__178,0,L_INITIAL_ELEMENT__166);
}
TMP_289=lisp.values1(L_RAW_ARRAY__178);
}else{
{
TMP_291=lisp.callFunctionWithCallStack(G_237,L_TOTAL_SIZE__163);
L_RAW_ARRAY__180=lisp.values1(TMP_291);
TMP_292=lisp.callFunctionWithCallStack(G_287,L_RAW_ARRAY__180,L_INITIAL_ELEMENT__166);
}
TMP_289=TMP_292;
}
}
TMP_283=TMP_289;
}
}
TMP_271=TMP_283;
}
}
return TMP_271;
});
CL_COMMON_LISP_MAKE_ARRAY_CONTENTS_WITH_INITIAL_ELEMENT=lisp.values1(F_MAKE_ARRAY_CONTENTS_WITH_INITIAL_ELEMENT_266);
let F_COPY_ARRAY_CONTENTS_293;
F_COPY_ARRAY_CONTENTS_293=(function(){
if(arguments.length !== 6) {
lisp.argumentsError(G_294, arguments.length);
}
let F_COPY__190;
let TMP_295;
let L_O__189;
let L_N__188;
let L_INITIAL_ELEMENT_P__186;
let L_INITIAL_ELEMENT__185;
let L_NEW__184;
let L_NEW_DIMENSIONS__183;
let L_OLD__182;
let L_OLD_DIMENSIONS__181;
L_OLD_DIMENSIONS__181=arguments[0];
L_OLD__182=arguments[1];
L_NEW_DIMENSIONS__183=arguments[2];
L_NEW__184=arguments[3];
L_INITIAL_ELEMENT__185=arguments[4];
L_INITIAL_ELEMENT_P__186=arguments[5];
{
L_N__188=lisp.values1(0);
L_O__189=lisp.values1(0);
{
TMP_295=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G115__210;
let TMP_329;
let L_G114__209;
let TMP_328;
let TMP_326;
let L_G110__207;
let TMP_323;
let TMP_322;
let L_OLD__206;
let TMP_321;
let L_G112__205;
let TMP_320;
let L_OLD__204;
let L_G111__203;
let L_G107__202;
let TMP_319;
let L_G109__201;
let TMP_318;
let L_G108__200;
let TMP_317;
let TMP_316;
let L_G106__199;
let TMP_315;
let TMP_314;
let TMP_313;
let TMP_312;
let L_G102__197;
let TMP_311;
let TMP_309;
let TMP_307;
let TMP_305;
let TMP_304;
let TMP_302;
let TMP_300;
let TMP_299;
let TMP_298;
let L_I__196;
let BLOCK_RESULT_NIL__195;
let L_G97__194;
let TMP_297;
let L_OLD_KEY__193;
let TMP_296;
let L_OLD_DIMS__192;
let L_NEW_DIMS__191;
L_NEW_DIMS__191=arguments[0];
L_OLD_DIMS__192=arguments[1];
{
TMP_296=lisp.callFunctionWithCallStack(G_217,L_OLD_DIMS__192);
L_OLD_KEY__193=lisp.values1(TMP_296);
{
TMP_297=lisp.callFunctionWithCallStack(G_217,L_NEW_DIMS__191);
L_G97__194=lisp.values1(TMP_297);
BLOCK_NIL__195: for(;;){{
L_I__196=lisp.values1(0);
for(;;){
TMP_298=lisp.callFunctionWithCallStack(G_223,L_I__196,L_G97__194);
if(lisp.values1(TMP_298) !== lisp.S_nil){
if(lisp.values1(L_OLD_KEY__193) !== lisp.S_nil){
TMP_300=lisp.callFunctionWithCallStack(G_301,L_I__196,L_OLD_KEY__193);
TMP_299=lisp.values1(TMP_300);
}else{
TMP_299=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_299) !== lisp.S_nil){
{
TMP_304=lisp.CL_symbolFunction(G_303);
TMP_305=lisp.callFunctionWithCallStack(G_306,L_OLD_KEY__193,L_I__196);
TMP_307=lisp.callFunctionWithCallStack(G_308,L_OLD_DIMS__192);
TMP_309=lisp.callFunctionWithCallStack(G_310,TMP_304,TMP_305,TMP_307);
TMP_311=lisp.callFunctionWithCallStack(G_257,L_O__189,TMP_309);
L_G102__197=lisp.values1(TMP_311);
L_O__189=(TMP_312=lisp.values1(L_G102__197));
}
TMP_302=lisp.values1(TMP_312);
}else{
TMP_302=lisp.values1(lisp.S_nil);
}
BLOCK_RESULT_NIL__195=TMP_302;
break BLOCK_NIL__195;
}else{
if(lisp.values1(L_OLD_KEY__193) !== lisp.S_nil){
TMP_314=lisp.callFunctionWithCallStack(G_301,L_I__196,L_OLD_KEY__193);
TMP_313=lisp.values1(TMP_314);
}else{
TMP_313=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_313) !== lisp.S_nil){
}else{
L_OLD_DIMS__192=lisp.values1(lisp.S_nil);
}
{
TMP_315=lisp.callFunctionWithCallStack(G_252,L_NEW_DIMS__191);
L_G106__199=lisp.values1(TMP_315);
if(lisp.values1(L_G106__199) !== lisp.S_nil){
TMP_316=lisp.callFunctionWithCallStack(G_252,L_NEW_DIMS__191);
TMP_317=lisp.callFunctionWithCallStack(G_252,L_OLD_DIMS__192);
F_COPY__190(TMP_316,TMP_317);
}else{
{
{
L_G108__200=lisp.values1(L_OLD_DIMS__192);
if(lisp.values1(L_G108__200) !== lisp.S_nil){
TMP_318=lisp.values1(L_G108__200);
}else{
{
L_G109__201=lisp.values1(L_INITIAL_ELEMENT_P__186);
if(lisp.values1(L_G109__201) !== lisp.S_nil){
TMP_319=lisp.values1(L_G109__201);
}else{
TMP_319=lisp.values1(lisp.S_nil);
}
}
TMP_318=lisp.values1(lisp.values1(TMP_319));
}
}
L_G107__202=lisp.values1(lisp.values1(TMP_318));
if(lisp.values1(L_G107__202) !== lisp.S_nil){
{
L_G111__203=lisp.values1(L_NEW__184);
{
L_OLD__204=lisp.values1(L_N__188);
TMP_320=lisp.callFunctionWithCallStack(G_233,L_OLD__204);
L_N__188=lisp.values1(TMP_320);
}
L_G112__205=lisp.values1(lisp.values1(lisp.values1(L_OLD__204)));
if(lisp.values1(L_OLD_DIMS__192) !== lisp.S_nil){
{
L_OLD__206=lisp.values1(L_O__189);
TMP_322=lisp.callFunctionWithCallStack(G_233,L_OLD__206);
L_O__189=lisp.values1(TMP_322);
}
TMP_323=G_324.func(L_OLD__182,lisp.values1(lisp.values1(L_OLD__206)));
TMP_321=lisp.values1(TMP_323);
}else{
TMP_321=lisp.values1(L_INITIAL_ELEMENT__185);
}
L_G110__207=lisp.values1(TMP_321);
TMP_326=lisp.callFunctionWithCallStack(G_327,lisp.makeCons(G_325, lisp.makeCons(G_324, lisp.S_nil)));
lisp.CL_funcall(lisp.values1(TMP_326),L_G110__207,L_G111__203,L_G112__205);
}
}else{
{
TMP_328=lisp.callFunctionWithCallStack(G_257,L_N__188,1);
L_G114__209=lisp.values1(TMP_328);
L_N__188=lisp.values1(L_G114__209);
}
}
}
}
}
{
TMP_329=lisp.callFunctionWithCallStack(G_257,L_I__196,1);
L_G115__210=lisp.values1(TMP_329);
L_I__196=lisp.values1(L_G115__210);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__195=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
}
return BLOCK_RESULT_NIL__195;
});
F_COPY__190=lisp.values1(TMP_295);
F_COPY__190(L_NEW_DIMENSIONS__183,L_OLD_DIMENSIONS__181);
}
}
return lisp.values1(L_NEW__184);
});
CL_COMMON_LISP_COPY_ARRAY_CONTENTS=lisp.values1(F_COPY_ARRAY_CONTENTS_293);
let F_MAKE_OR_ADJUST_ARRAY_330;
F_MAKE_OR_ADJUST_ARRAY_330=(function(){
if(arguments.length < 2 || 16 < arguments.length) {
lisp.argumentsError(G_331, arguments.length);
}
let L_G_STORE133__246;
let L_G132__245;
let L_G_STORE131__244;
let L_G130__243;
let L_G_STORE129__242;
let L_G128__241;
let L_G_STORE127__240;
let L_G126__239;
let TMP_373;
let TMP_372;
let L_G125__238;
let L_NEW_ARRAY__237;
let TMP_371;
let L_CONTENTS__236;
let TMP_370;
let TMP_369;
let TMP_368;
let TMP_367;
let TMP_366;
let TMP_365;
let L_G123__234;
let TMP_364;
let L_G122__233;
let TMP_363;
let L_G121__232;
let L_TOTAL_SIZE__231;
let TMP_362;
let TMP_361;
let L_ELEMENT_TYPE__230;
let TMP_360;
let L_G120__229;
let TMP_358;
let TMP_356;
let TMP_355;
let TMP_354;
let TMP_353;
let L_G119__228;
let TMP_352;
let TMP_351;
let L_RANK__227;
let TMP_350;
let L_DIMENSIONS__226;
let TMP_349;
let TMP_348;
let L_G117__224;
let TMP_347;
let TMP_346;
let L_G116__223;
let TMP_345;
let L_DISPLACED_INDEX_OFFSET__221;
let L_DISPLACED_TO__220;
let L_FILL_POINTER__219;
let L_ADJUSTABLE__218;
let L_INITIAL_CONTENTS_P__217;
let L_INITIAL_CONTENTS__216;
let L_INITIAL_ELEMENT_P__215;
let L_INITIAL_ELEMENT__214;
let L_ELEMENT_TYPE__213;
let TMP_334;
let TMP_333;
let L_DIMENSIONS__212;
let L_ARRAY__211;
L_ARRAY__211=arguments[0];
L_DIMENSIONS__212=arguments[1];
let supplied_ELEMENT_TYPE__213;
for (let TMP_332 = 2; TMP_332 < arguments.length; TMP_332 += 2) {
if(arguments[TMP_332] === G_23){
supplied_ELEMENT_TYPE__213=arguments[TMP_332+1];
break;
}
}
if(lisp.values1(L_ARRAY__211) !== lisp.S_nil){
TMP_334=G_163.func(L_ARRAY__211);
TMP_333=lisp.values1(TMP_334);
}else{
TMP_333=lisp.values1(G_204);
}
L_ELEMENT_TYPE__213=supplied_ELEMENT_TYPE__213 !== undefined ? supplied_ELEMENT_TYPE__213 : (lisp.values1(TMP_333));
let supplied_INITIAL_ELEMENT__214;
for (let TMP_336 = 2; TMP_336 < arguments.length; TMP_336 += 2) {
if(arguments[TMP_336] === G_335){
supplied_INITIAL_ELEMENT__214=arguments[TMP_336+1];
break;
}
}
L_INITIAL_ELEMENT__214=supplied_INITIAL_ELEMENT__214 !== undefined ? supplied_INITIAL_ELEMENT__214 : (lisp.values1(lisp.S_nil));
L_INITIAL_ELEMENT_P__215=(supplied_INITIAL_ELEMENT__214 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_INITIAL_CONTENTS__216;
for (let TMP_338 = 2; TMP_338 < arguments.length; TMP_338 += 2) {
if(arguments[TMP_338] === G_337){
supplied_INITIAL_CONTENTS__216=arguments[TMP_338+1];
break;
}
}
L_INITIAL_CONTENTS__216=supplied_INITIAL_CONTENTS__216 !== undefined ? supplied_INITIAL_CONTENTS__216 : (lisp.values1(lisp.S_nil));
L_INITIAL_CONTENTS_P__217=(supplied_INITIAL_CONTENTS__216 !== undefined ? lisp.S_t : lisp.S_nil);
let supplied_ADJUSTABLE__218;
for (let TMP_340 = 2; TMP_340 < arguments.length; TMP_340 += 2) {
if(arguments[TMP_340] === G_339){
supplied_ADJUSTABLE__218=arguments[TMP_340+1];
break;
}
}
L_ADJUSTABLE__218=supplied_ADJUSTABLE__218 !== undefined ? supplied_ADJUSTABLE__218 : (lisp.values1(lisp.S_nil));
let supplied_FILL_POINTER__219;
for (let TMP_341 = 2; TMP_341 < arguments.length; TMP_341 += 2) {
if(arguments[TMP_341] === G_19){
supplied_FILL_POINTER__219=arguments[TMP_341+1];
break;
}
}
L_FILL_POINTER__219=supplied_FILL_POINTER__219 !== undefined ? supplied_FILL_POINTER__219 : (lisp.values1(lisp.S_nil));
let supplied_DISPLACED_TO__220;
for (let TMP_342 = 2; TMP_342 < arguments.length; TMP_342 += 2) {
if(arguments[TMP_342] === G_15){
supplied_DISPLACED_TO__220=arguments[TMP_342+1];
break;
}
}
L_DISPLACED_TO__220=supplied_DISPLACED_TO__220 !== undefined ? supplied_DISPLACED_TO__220 : (lisp.values1(lisp.S_nil));
let supplied_DISPLACED_INDEX_OFFSET__221;
for (let TMP_343 = 2; TMP_343 < arguments.length; TMP_343 += 2) {
if(arguments[TMP_343] === G_17){
supplied_DISPLACED_INDEX_OFFSET__221=arguments[TMP_343+1];
break;
}
}
L_DISPLACED_INDEX_OFFSET__221=supplied_DISPLACED_INDEX_OFFSET__221 !== undefined ? supplied_DISPLACED_INDEX_OFFSET__221 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_344 = 2; TMP_344 < arguments.length; TMP_344 += 2) {
if(arguments[TMP_344]!==G_17 && arguments[TMP_344]!==G_15 && arguments[TMP_344]!==G_19 && arguments[TMP_344]!==G_339 && arguments[TMP_344]!==G_337 && arguments[TMP_344]!==G_335 && arguments[TMP_344]!==G_23) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_344].name); }
}
{
{
TMP_345=lisp.callFunctionWithCallStack(G_242,L_DIMENSIONS__212);
L_G116__223=lisp.values1(TMP_345);
if(lisp.values1(L_G116__223) !== lisp.S_nil){
TMP_346=lisp.values1(lisp.S_nil);
}else{
{
TMP_347=lisp.CL_consp(L_DIMENSIONS__212);
L_G117__224=lisp.values1(TMP_347);
if(lisp.values1(L_G117__224) !== lisp.S_nil){
TMP_348=lisp.values1(L_DIMENSIONS__212);
}else{
TMP_349=lisp.callFunctionWithCallStack(G_47,L_DIMENSIONS__212);
TMP_348=lisp.values1(TMP_349);
}
}
TMP_346=lisp.values1(lisp.values1(TMP_348));
}
}
L_DIMENSIONS__226=lisp.values1(lisp.values1(TMP_346));
TMP_350=lisp.callFunctionWithCallStack(G_213,L_DIMENSIONS__226);
L_RANK__227=lisp.values1(TMP_350);
if(lisp.values1(L_FILL_POINTER__219) !== lisp.S_nil){
TMP_351=lisp.callFunctionWithCallStack(G_248,L_RANK__227,1);
if(lisp.values1(TMP_351) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([79, 110, 108, 121, 32, 118, 101, 99, 116, 111, 114, 115, 32, 99, 97, 110, 32, 104, 97, 118, 101, 32, 102, 105, 108, 108, 32, 112, 111, 105, 110, 116, 101, 114, 115, 46])));
}else{
}
{
TMP_352=lisp.CL_eq(L_FILL_POINTER__219,G_204);
L_G119__228=lisp.values1(TMP_352);
if(lisp.values1(L_G119__228) !== lisp.S_nil){
TMP_353=lisp.callFunctionWithCallStack(G_217,L_DIMENSIONS__226);
L_FILL_POINTER__219=lisp.values1(TMP_353);
}else{
{
TMP_354=lisp.CL_integerp(L_FILL_POINTER__219);
if(lisp.values1(TMP_354) !== lisp.S_nil){
TMP_356=lisp.callFunctionWithCallStack(G_357,0,L_FILL_POINTER__219);
TMP_355=lisp.values1(TMP_356);
}else{
TMP_355=lisp.values1(lisp.S_nil);
}
TMP_358=lisp.callFunctionWithCallStack(G_359,TMP_355);
L_G120__229=lisp.values1(TMP_358);
if(lisp.values1(L_G120__229) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([66, 97, 100, 32, 102, 105, 108, 108, 45, 112, 111, 105, 110, 116, 101, 114, 58, 32, 126, 83])),L_FILL_POINTER__219);
}else{
}
}
}
}
}else{
}
{
TMP_360=G_194.func(L_ELEMENT_TYPE__213);
L_ELEMENT_TYPE__230=lisp.values1(TMP_360);
TMP_361=lisp.CL_symbolFunction(G_303);
TMP_362=lisp.callFunctionWithCallStack(G_310,TMP_361,L_DIMENSIONS__226);
L_TOTAL_SIZE__231=lisp.values1(TMP_362);
{
L_G121__232=lisp.values1(L_DISPLACED_TO__220);
if(lisp.values1(L_G121__232) !== lisp.S_nil){
{
L_G122__233=lisp.values1(L_INITIAL_CONTENTS_P__217);
if(lisp.values1(L_G122__233) !== lisp.S_nil){
TMP_364=lisp.values1(L_G122__233);
}else{
{
L_G123__234=lisp.values1(L_INITIAL_ELEMENT_P__215);
if(lisp.values1(L_G123__234) !== lisp.S_nil){
TMP_365=lisp.values1(L_G123__234);
}else{
TMP_365=lisp.values1(lisp.S_nil);
}
}
TMP_364=lisp.values1(lisp.values1(TMP_365));
}
}
if(lisp.values1(lisp.values1(TMP_364)) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([58, 73, 78, 73, 84, 73, 65, 76, 45, 69, 76, 69, 77, 69, 78, 84, 32, 109, 97, 121, 32, 110, 111, 116, 32, 98, 101, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 32, 119, 105, 116, 104, 32, 116, 104, 101, 32, 58, 68, 73, 83, 80, 76, 65, 67, 69, 68, 45, 84, 79, 32, 111, 112, 116, 105, 111, 110])));
}else{
}
if(lisp.values1(L_DISPLACED_INDEX_OFFSET__221) !== lisp.S_nil){
}else{
L_DISPLACED_INDEX_OFFSET__221=lisp.values1(0);
}
TMP_366=G_28.func(L_DISPLACED_TO__220);
TMP_363=lisp.values1(lisp.values1(TMP_366));
}else{
if(lisp.values1(L_INITIAL_CONTENTS_P__217) !== lisp.S_nil){
TMP_367=lisp.values1(L_INITIAL_ELEMENT_P__215);
}else{
TMP_367=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_367) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([67, 97, 110, 39, 116, 32, 115, 112, 101, 99, 105, 102, 121, 32, 98, 111, 116, 104, 32, 58, 73, 78, 73, 84, 73, 65, 76, 45, 69, 76, 69, 77, 69, 78, 84, 32, 97, 110, 100, 32, 58, 73, 78, 73, 84, 73, 65, 76, 45, 67, 79, 78, 84, 69, 78, 84, 83])));
}else{
}
if(lisp.values1(L_INITIAL_CONTENTS_P__217) !== lisp.S_nil){
TMP_369=G_206.func(L_DIMENSIONS__226,L_TOTAL_SIZE__231,L_RANK__227,L_ELEMENT_TYPE__230,L_INITIAL_CONTENTS__216);
TMP_368=lisp.values1(TMP_369);
}else{
TMP_370=G_267.func(L_DIMENSIONS__226,L_TOTAL_SIZE__231,L_RANK__227,L_ELEMENT_TYPE__230,L_INITIAL_ELEMENT__214,L_INITIAL_ELEMENT_P__215);
TMP_368=lisp.values1(TMP_370);
}
TMP_363=lisp.values1(lisp.values1(TMP_368));
}
}
L_CONTENTS__236=lisp.values1(lisp.values1(TMP_363));
TMP_371=G_8.func(G_9,L_CONTENTS__236,G_11,L_DIMENSIONS__226,G_13,L_TOTAL_SIZE__231,G_15,L_DISPLACED_TO__220,G_17,L_DISPLACED_INDEX_OFFSET__221,G_19,L_FILL_POINTER__219,G_21,L_RANK__227,G_23,L_ELEMENT_TYPE__230);
L_NEW_ARRAY__237=lisp.values1(TMP_371);
{
L_G125__238=lisp.values1(L_ARRAY__211);
if(lisp.values1(L_G125__238) !== lisp.S_nil){
TMP_373=G_55.func(L_ARRAY__211);
G_294.func(TMP_373,L_ARRAY__211,L_DIMENSIONS__226,L_NEW_ARRAY__237,L_INITIAL_ELEMENT__214,L_INITIAL_ELEMENT_P__215);
{
L_G126__239=lisp.values1(L_ARRAY__211);
L_G_STORE127__240=lisp.values1(L_DIMENSIONS__226);
lisp.callFunctionWithCallStack(G_58,L_G_STORE127__240,L_G126__239);
}
{
L_G128__241=lisp.values1(L_ARRAY__211);
L_G_STORE129__242=lisp.values1(L_TOTAL_SIZE__231);
lisp.callFunctionWithCallStack(G_76,L_G_STORE129__242,L_G128__241);
}
{
L_G130__243=lisp.values1(L_ARRAY__211);
L_G_STORE131__244=lisp.values1(L_DISPLACED_INDEX_OFFSET__221);
lisp.callFunctionWithCallStack(G_112,L_G_STORE131__244,L_G130__243);
}
{
L_G132__245=lisp.values1(L_ARRAY__211);
L_G_STORE133__246=lisp.values1(L_RANK__227);
lisp.callFunctionWithCallStack(G_148,L_G_STORE133__246,L_G132__245);
}
TMP_372=lisp.values1(L_NEW_ARRAY__237);
}else{
TMP_372=lisp.values1(L_NEW_ARRAY__237);
}
}
}
}
return TMP_372;
});
CL_COMMON_LISP_MAKE_OR_ADJUST_ARRAY=lisp.values1(F_MAKE_OR_ADJUST_ARRAY_330);
let F_MAKE_ARRAY_374;
F_MAKE_ARRAY_374=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_375, arguments.length);
}
let TMP_377;
let TMP_376;
let L_ARGS__249;
let L_DIMENSIONS__248;
L_DIMENSIONS__248=arguments[0];
L_ARGS__249=lisp.jsArrayToList(arguments, 1);
TMP_376=lisp.CL_symbolFunction(G_331);
TMP_377=lisp.callFunctionWithCallStack(G_310,TMP_376,lisp.S_nil,L_DIMENSIONS__248,L_ARGS__249);
return TMP_377;
});
CL_COMMON_LISP_MAKE_ARRAY=lisp.values1(F_MAKE_ARRAY_374);
let F_ADJUST_ARRAY_378;
F_ADJUST_ARRAY_378=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_379, arguments.length);
}
let TMP_381;
let TMP_380;
let L_ARGS__253;
let L_DIMENSIONS__252;
let L_ARRAY__251;
L_ARRAY__251=arguments[0];
L_DIMENSIONS__252=arguments[1];
L_ARGS__253=lisp.jsArrayToList(arguments, 2);
TMP_380=lisp.CL_symbolFunction(G_331);
TMP_381=lisp.callFunctionWithCallStack(G_310,TMP_380,L_ARRAY__251,L_DIMENSIONS__252,L_ARGS__253);
return TMP_381;
});
CL_COMMON_LISP_ADJUST_ARRAY=lisp.values1(F_ADJUST_ARRAY_378);
let F_RAW_ARRAY_TO_ARRAY_382;
F_RAW_ARRAY_TO_ARRAY_382=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_383, arguments.length);
}
let TMP_387;
let TMP_386;
let L_LENGTH__257;
let TMP_384;
let L_JS_ARRAY__255;
L_JS_ARRAY__255=arguments[0];
{
TMP_384=lisp.callFunctionWithCallStack(G_385,L_JS_ARRAY__255);
L_LENGTH__257=lisp.values1(TMP_384);
TMP_386=lisp.callFunctionWithCallStack(G_47,L_LENGTH__257);
TMP_387=G_8.func(G_9,L_JS_ARRAY__255,G_11,TMP_386,G_13,L_LENGTH__257,G_21,1,G_23,G_204);
}
return TMP_387;
});
CL_SYSTEM_RAW_ARRAY_TO_ARRAY=lisp.values1(F_RAW_ARRAY_TO_ARRAY_382);
let F_SIMPLE_MAKE_STRING_388;
F_SIMPLE_MAKE_STRING_388=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_389, arguments.length);
}
let TMP_392;
let TMP_391;
let L_LENGTH__260;
let TMP_390;
let L_RAW_STRING__258;
L_RAW_STRING__258=arguments[0];
{
TMP_390=lisp.callFunctionWithCallStack(G_385,L_RAW_STRING__258);
L_LENGTH__260=lisp.values1(TMP_390);
TMP_391=lisp.callFunctionWithCallStack(G_47,L_LENGTH__260);
TMP_392=G_8.func(G_9,L_RAW_STRING__258,G_11,TMP_391,G_13,L_LENGTH__260,G_21,1,G_23,G_197);
}
return TMP_392;
});
CL_COMMON_LISP_SIMPLE_MAKE_STRING=lisp.values1(F_SIMPLE_MAKE_STRING_388);
let F_RAW_STRING_TO_ARRAY_393;
F_RAW_STRING_TO_ARRAY_393=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_44, arguments.length);
}
let TMP_394;
let L_RAW_STRING__261;
L_RAW_STRING__261=arguments[0];
TMP_394=G_389.func(L_RAW_STRING__261);
return TMP_394;
});
CL_SYSTEM_RAW_STRING_TO_ARRAY=lisp.values1(F_RAW_STRING_TO_ARRAY_393);
let F_ARRAY_TO_RAW_STRING_395;
F_ARRAY_TO_RAW_STRING_395=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_229, arguments.length);
}
let TMP_402;
let TMP_400;
let TMP_399;
let TMP_398;
let TMP_397;
let TMP_396;
let L_ARRAY__263;
L_ARRAY__263=arguments[0];
TMP_396=G_127.func(L_ARRAY__263);
if(lisp.values1(TMP_396) !== lisp.S_nil){
TMP_398=G_28.func(L_ARRAY__263);
TMP_399=G_127.func(L_ARRAY__263);
TMP_400=lisp.callFunctionWithCallStack(G_401,TMP_398,0,TMP_399);
TMP_397=TMP_400;
}else{
TMP_402=G_28.func(L_ARRAY__263);
TMP_397=TMP_402;
}
return TMP_397;
});
CL_SYSTEM_ARRAY_TO_RAW_STRING=lisp.values1(F_ARRAY_TO_RAW_STRING_395);
let F_VECTOR_403;
F_VECTOR_403=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_404, arguments.length);
}
let TMP_406;
let TMP_405;
let L_ARGS__265;
L_ARGS__265=lisp.jsArrayToList(arguments, 0);
TMP_405=lisp.callFunctionWithCallStack(G_213,L_ARGS__265);
TMP_406=G_375.func(TMP_405,G_337,L_ARGS__265);
return TMP_406;
});
CL_COMMON_LISP_VECTOR=lisp.values1(F_VECTOR_403);
let F_ADJUSTABLE_ARRAY_P_407;
F_ADJUSTABLE_ARRAY_P_407=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_408, arguments.length);
}
let TMP_410;
let TMP_409;
let L_ARRAY__267;
L_ARRAY__267=arguments[0];
TMP_409=G_127.func(L_ARRAY__267);
if(lisp.values1(TMP_409) !== lisp.S_nil){
TMP_410=lisp.values1(G_204);
}else{
TMP_410=lisp.values1(lisp.S_nil);
}
return TMP_410;
});
CL_COMMON_LISP_ADJUSTABLE_ARRAY_P=lisp.values1(F_ADJUSTABLE_ARRAY_P_407);
let F_FILL_POINTER_411;
F_FILL_POINTER_411=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_412, arguments.length);
}
let TMP_413;
let L_ARRAY__269;
L_ARRAY__269=arguments[0];
TMP_413=G_127.func(L_ARRAY__269);
return TMP_413;
});
CL_COMMON_LISP_FILL_POINTER=lisp.values1(F_FILL_POINTER_411);
let F_VECTORP_427;
F_VECTORP_427=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_428, arguments.length);
}
let TMP_432;
let TMP_431;
let TMP_430;
let TMP_429;
let L_X__285;
L_X__285=arguments[0];
TMP_429=G_3.func(L_X__285);
if(lisp.values1(TMP_429) !== lisp.S_nil){
TMP_431=G_145.func(L_X__285);
TMP_432=lisp.callFunctionWithCallStack(G_210,1,TMP_431);
TMP_430=TMP_432;
}else{
TMP_430=lisp.values1(lisp.S_nil);
}
return TMP_430;
});
CL_COMMON_LISP_VECTORP=lisp.values1(F_VECTORP_427);
let F_SIMPLE_VECTOR_P_433;
F_SIMPLE_VECTOR_P_433=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_434, arguments.length);
}
let TMP_442;
let TMP_440;
let TMP_439;
let TMP_438;
let TMP_437;
let TMP_436;
let TMP_435;
let L_X__287;
L_X__287=arguments[0];
TMP_435=G_3.func(L_X__287);
if(lisp.values1(TMP_435) !== lisp.S_nil){
TMP_437=G_145.func(L_X__287);
TMP_438=lisp.callFunctionWithCallStack(G_210,1,TMP_437);
if(lisp.values1(TMP_438) !== lisp.S_nil){
TMP_440=G_441.func(L_X__287);
TMP_442=lisp.callFunctionWithCallStack(G_359,TMP_440);
TMP_439=TMP_442;
}else{
TMP_439=lisp.values1(lisp.S_nil);
}
TMP_436=TMP_439;
}else{
TMP_436=lisp.values1(lisp.S_nil);
}
return TMP_436;
});
CL_COMMON_LISP_SIMPLE_VECTOR_P=lisp.values1(F_SIMPLE_VECTOR_P_433);
let F_SIMPLE_BIT_VECTOR_P_443;
F_SIMPLE_BIT_VECTOR_P_443=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_444, arguments.length);
}
let TMP_445;
let L_X__289;
L_X__289=arguments[0];
TMP_445=G_434.func(L_X__289);
return TMP_445;
});
CL_COMMON_LISP_SIMPLE_BIT_VECTOR_P=lisp.values1(F_SIMPLE_BIT_VECTOR_P_443);
let F_ARRAY_HAS_FILL_POINTER_P_446;
F_ARRAY_HAS_FILL_POINTER_P_446=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_441, arguments.length);
}
let TMP_449;
let TMP_448;
let TMP_447;
let L_ARRAY__291;
L_ARRAY__291=arguments[0];
TMP_447=G_127.func(L_ARRAY__291);
TMP_448=lisp.callFunctionWithCallStack(G_242,TMP_447);
TMP_449=lisp.callFunctionWithCallStack(G_359,TMP_448);
return TMP_449;
});
CL_COMMON_LISP_ARRAY_HAS_FILL_POINTER_P=lisp.values1(F_ARRAY_HAS_FILL_POINTER_P_446);
let F_ARRAY_DIMENSION_450;
F_ARRAY_DIMENSION_450=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_451, arguments.length);
}
let TMP_453;
let TMP_452;
let L_AXIS_NUMBER__294;
let L_ARRAY__293;
L_ARRAY__293=arguments[0];
L_AXIS_NUMBER__294=arguments[1];
TMP_452=G_55.func(L_ARRAY__293);
TMP_453=lisp.callFunctionWithCallStack(G_454,L_AXIS_NUMBER__294,TMP_452);
return TMP_453;
});
CL_COMMON_LISP_ARRAY_DIMENSION=lisp.values1(F_ARRAY_DIMENSION_450);
let F_ARRAY_DISPLACEMENT_455;
F_ARRAY_DISPLACEMENT_455=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_456, arguments.length);
}
let TMP_462;
let TMP_461;
let TMP_460;
let TMP_459;
let TMP_458;
let TMP_457;
let L_ARRAY__296;
L_ARRAY__296=arguments[0];
TMP_457=G_91.func(L_ARRAY__296);
if(lisp.values1(TMP_457) !== lisp.S_nil){
TMP_459=G_91.func(L_ARRAY__296);
TMP_460=G_109.func(L_ARRAY__296);
TMP_461=lisp.CL_values(TMP_459,TMP_460);
TMP_458=TMP_461;
}else{
TMP_462=lisp.CL_values(lisp.S_nil,0);
TMP_458=TMP_462;
}
return TMP_458;
});
CL_COMMON_LISP_ARRAY_DISPLACEMENT=lisp.values1(F_ARRAY_DISPLACEMENT_455);
let F_SUBSCRIPTS_ERROR_463;
F_SUBSCRIPTS_ERROR_463=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_464, arguments.length);
}
let TMP_465;
let L_RANK__299;
let L_N_SUBSCRIPTS__298;
L_N_SUBSCRIPTS__298=arguments[0];
L_RANK__299=arguments[1];
TMP_465=lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([87, 114, 111, 110, 103, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 115, 117, 98, 115, 99, 114, 105, 112, 116, 115, 44, 32, 126, 68, 44, 32, 102, 111, 114, 32, 97, 114, 114, 97, 121, 32, 111, 102, 32, 114, 97, 110, 107, 32, 126, 68, 46])),L_N_SUBSCRIPTS__298,L_RANK__299);
return TMP_465;
});
CL_COMMON_LISP_SUBSCRIPTS_ERROR=lisp.values1(F_SUBSCRIPTS_ERROR_463);
let F_PERCENTARRAY_ROW_MAJOR_INDEX_466;
F_PERCENTARRAY_ROW_MAJOR_INDEX_466=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_467, arguments.length);
}
let L_G154__316;
let TMP_494;
let TMP_493;
let L_G153__315;
let TMP_492;
let TMP_491;
let TMP_490;
let L_G152__314;
let TMP_489;
let TMP_488;
let L_G151__313;
let TMP_487;
let L_DIM__312;
let TMP_486;
let L_INDEX__311;
let TMP_485;
let TMP_484;
let TMP_483;
let TMP_482;
let TMP_481;
let TMP_479;
let L_RESULT__310;
let L_CHUNK_SIZE__309;
let L_AXIS__308;
let TMP_477;
let BLOCK_RESULT_NIL__307;
let TMP_476;
let TMP_475;
let TMP_474;
let L_DIMENSIONS__306;
let TMP_473;
let L_RANK__305;
let TMP_472;
let TMP_471;
let TMP_468;
let L_OUT_OF_BOUNDS_ERROR_P__303;
let L_SUBSCRIPTS__302;
let L_ARRAY__301;
L_ARRAY__301=arguments[0];
L_SUBSCRIPTS__302=arguments[1];
L_OUT_OF_BOUNDS_ERROR_P__303=arguments[2];
TMP_468=lisp.callFunctionWithCallStack(G_469,L_SUBSCRIPTS__302);
if(lisp.values1(TMP_468) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),lisp.makeCons(G_469, lisp.makeCons(G_470, lisp.S_nil)));
}
TMP_471=G_3.func(L_ARRAY__301);
if(lisp.values1(TMP_471) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_ARRAY__301,G_4);
}
{
TMP_472=G_145.func(L_ARRAY__301);
L_RANK__305=lisp.values1(TMP_472);
TMP_473=G_55.func(L_ARRAY__301);
L_DIMENSIONS__306=lisp.values1(TMP_473);
TMP_474=lisp.callFunctionWithCallStack(G_213,L_SUBSCRIPTS__302);
TMP_475=lisp.callFunctionWithCallStack(G_210,L_RANK__305,TMP_474);
if(lisp.values1(TMP_475) !== lisp.S_nil){
}else{
TMP_476=lisp.callFunctionWithCallStack(G_213,L_SUBSCRIPTS__302);
G_464.func(TMP_476,L_RANK__305);
}
BLOCK_NIL__307: for(;;){{
TMP_477=lisp.callFunctionWithCallStack(G_478,L_RANK__305);
L_AXIS__308=lisp.values1(TMP_477);
L_CHUNK_SIZE__309=lisp.values1(1);
L_RESULT__310=lisp.values1(0);
for(;;){
TMP_479=lisp.callFunctionWithCallStack(G_480,L_AXIS__308);
if(lisp.values1(TMP_479) !== lisp.S_nil){
TMP_481=G_91.func(L_ARRAY__301);
if(lisp.values1(TMP_481) !== lisp.S_nil){
TMP_483=G_109.func(L_ARRAY__301);
TMP_484=lisp.callFunctionWithCallStack(G_257,L_RESULT__310,TMP_483);
TMP_482=TMP_484;
}else{
TMP_482=lisp.values1(L_RESULT__310);
}
BLOCK_RESULT_NIL__307=TMP_482;
break BLOCK_NIL__307;
}else{
{
TMP_485=lisp.callFunctionWithCallStack(G_454,L_AXIS__308,L_SUBSCRIPTS__302);
L_INDEX__311=lisp.values1(TMP_485);
TMP_486=lisp.callFunctionWithCallStack(G_454,L_AXIS__308,L_DIMENSIONS__306);
L_DIM__312=lisp.values1(TMP_486);
{
TMP_487=lisp.callFunctionWithCallStack(G_301,L_INDEX__311,0);
L_G151__313=lisp.values1(TMP_487);
if(lisp.values1(L_G151__313) !== lisp.S_nil){
TMP_488=lisp.values1(L_G151__313);
}else{
{
TMP_489=lisp.callFunctionWithCallStack(G_357,L_DIM__312,L_INDEX__311);
L_G152__314=lisp.values1(TMP_489);
if(lisp.values1(L_G152__314) !== lisp.S_nil){
TMP_490=lisp.values1(L_G152__314);
}else{
TMP_490=lisp.values1(lisp.S_nil);
}
}
TMP_488=lisp.values1(lisp.values1(TMP_490));
}
}
if(lisp.values1(lisp.values1(TMP_488)) !== lisp.S_nil){
if(lisp.values1(L_OUT_OF_BOUNDS_ERROR_P__303) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 105, 110, 100, 101, 120, 32, 126, 68, 32, 102, 111, 114, 32, 97, 120, 105, 115, 32, 126, 68, 32, 111, 102, 32, 126, 83, 44, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 97, 32, 110, 111, 110, 45, 110, 101, 103, 97, 116, 105, 118, 101, 32, 105, 110, 116, 101, 103, 101, 114, 32, 98, 101, 108, 111, 119, 32, 126, 68, 46])),L_INDEX__311,L_AXIS__308,L_ARRAY__301,L_INDEX__311);
}else{
BLOCK_RESULT_NIL__307=lisp.values1(lisp.S_nil);
break BLOCK_NIL__307;
}
}else{
}
{
TMP_491=lisp.callFunctionWithCallStack(G_303,L_CHUNK_SIZE__309,L_INDEX__311);
TMP_492=lisp.callFunctionWithCallStack(G_257,L_RESULT__310,TMP_491);
L_G153__315=lisp.values1(TMP_492);
L_RESULT__310=lisp.values1(L_G153__315);
}
TMP_493=lisp.callFunctionWithCallStack(G_303,L_CHUNK_SIZE__309,L_DIM__312);
L_CHUNK_SIZE__309=lisp.values1(TMP_493);
}
{
TMP_494=lisp.callFunctionWithCallStack(G_478,L_AXIS__308);
L_G154__316=lisp.values1(TMP_494);
L_AXIS__308=lisp.values1(L_G154__316);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__307=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__307;
});
CL_COMMON_LISP_PERCENTARRAY_ROW_MAJOR_INDEX=lisp.values1(F_PERCENTARRAY_ROW_MAJOR_INDEX_466);
let F_ARRAY_ROW_MAJOR_INDEX_495;
F_ARRAY_ROW_MAJOR_INDEX_495=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_496, arguments.length);
}
let TMP_497;
let L_SUBSCRIPTS__318;
let L_ARRAY__317;
L_ARRAY__317=arguments[0];
L_SUBSCRIPTS__318=lisp.jsArrayToList(arguments, 1);
TMP_497=G_467.func(L_ARRAY__317,L_SUBSCRIPTS__318,G_204);
return TMP_497;
});
CL_COMMON_LISP_ARRAY_ROW_MAJOR_INDEX=lisp.values1(F_ARRAY_ROW_MAJOR_INDEX_495);
let F_ARRAY_IN_BOUNDS_P_498;
F_ARRAY_IN_BOUNDS_P_498=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_499, arguments.length);
}
let TMP_501;
let TMP_500;
let L_SUBSCRIPTS__321;
let L_ARRAY__320;
L_ARRAY__320=arguments[0];
L_SUBSCRIPTS__321=lisp.jsArrayToList(arguments, 1);
TMP_500=G_467.func(L_ARRAY__320,L_SUBSCRIPTS__321,lisp.S_nil);
if(lisp.values1(TMP_500) !== lisp.S_nil){
TMP_501=lisp.values1(G_204);
}else{
TMP_501=lisp.values1(lisp.S_nil);
}
return TMP_501;
});
CL_COMMON_LISP_ARRAY_IN_BOUNDS_P=lisp.values1(F_ARRAY_IN_BOUNDS_P_498);
let F_AREF_502;
F_AREF_502=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_503, arguments.length);
}
let TMP_506;
let TMP_505;
let TMP_504;
let L_SUBSCRIPTS__324;
let L_ARRAY__323;
L_ARRAY__323=arguments[0];
L_SUBSCRIPTS__324=lisp.jsArrayToList(arguments, 1);
TMP_504=G_28.func(L_ARRAY__323);
TMP_505=G_467.func(L_ARRAY__323,L_SUBSCRIPTS__324,G_204);
TMP_506=lisp.callFunctionWithCallStack(G_507,TMP_504,TMP_505);
return TMP_506;
});
CL_COMMON_LISP_AREF=lisp.values1(F_AREF_502);
let F_PERCENTVECTOR_REF_508;
F_PERCENTVECTOR_REF_508=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_509, arguments.length);
}
let TMP_511;
let TMP_510;
let L_INDEX__327;
let L_VECTOR__326;
L_VECTOR__326=arguments[0];
L_INDEX__327=arguments[1];
TMP_510=G_28.func(L_VECTOR__326);
TMP_511=lisp.callFunctionWithCallStack(G_507,TMP_510,L_INDEX__327);
return TMP_511;
});
CL_SYSTEM_PERCENTVECTOR_REF=lisp.values1(F_PERCENTVECTOR_REF_508);
let F_PERCENTSTRING_SET_512;
F_PERCENTSTRING_SET_512=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_513, arguments.length);
}
let L_G_STORE158__336;
let TMP_526;
let TMP_524;
let TMP_523;
let TMP_522;
let TMP_521;
let TMP_520;
let L_G157__335;
let TMP_519;
let L_G156__334;
let TMP_518;
let TMP_517;
let TMP_516;
let L_G155__333;
let TMP_515;
let TMP_514;
let L_VALUE__331;
let L_INDEX__330;
let L_ARRAY__329;
L_ARRAY__329=arguments[0];
L_INDEX__330=arguments[1];
L_VALUE__331=arguments[2];
TMP_514=lisp.CL_characterp(L_VALUE__331);
if(lisp.values1(TMP_514) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_VALUE__331,G_197);
}
{
TMP_515=lisp.callFunctionWithCallStack(G_301,L_INDEX__330,0);
L_G155__333=lisp.values1(TMP_515);
if(lisp.values1(L_G155__333) !== lisp.S_nil){
TMP_516=lisp.values1(L_G155__333);
}else{
{
TMP_517=G_73.func(L_ARRAY__329);
TMP_518=lisp.callFunctionWithCallStack(G_357,TMP_517,L_INDEX__330);
L_G156__334=lisp.values1(TMP_518);
if(lisp.values1(L_G156__334) !== lisp.S_nil){
TMP_519=lisp.values1(L_G156__334);
}else{
TMP_519=lisp.values1(lisp.S_nil);
}
}
TMP_516=lisp.values1(lisp.values1(TMP_519));
}
}
if(lisp.values1(lisp.values1(TMP_516)) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 105, 110, 100, 101, 120, 32, 126, 68, 32, 102, 111, 114, 32, 126, 83, 44, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 97, 32, 110, 111, 110, 45, 110, 101, 103, 97, 116, 105, 118, 101, 32, 105, 110, 116, 101, 103, 101, 114, 32, 98, 101, 108, 111, 119, 32, 126, 68, 46])),L_INDEX__330,L_ARRAY__329,L_INDEX__330);
}else{
}
{
L_G157__335=lisp.values1(L_ARRAY__329);
TMP_520=G_28.func(L_ARRAY__329);
TMP_521=lisp.callFunctionWithCallStack(G_401,TMP_520,0,L_INDEX__330);
TMP_522=G_28.func(L_ARRAY__329);
TMP_523=lisp.callFunctionWithCallStack(G_233,L_INDEX__330);
TMP_524=lisp.callFunctionWithCallStack(G_525,TMP_522,TMP_523);
TMP_526=lisp.callFunctionWithCallStack(G_527,TMP_521,L_VALUE__331,TMP_524);
L_G_STORE158__336=lisp.values1(TMP_526);
lisp.callFunctionWithCallStack(G_33,L_G_STORE158__336,L_G157__335);
}
return lisp.values1(L_VALUE__331);
});
CL_COMMON_LISP_PERCENTSTRING_SET=lisp.values1(F_PERCENTSTRING_SET_512);
let F_ROW_MAJOR_AREF_553;
F_ROW_MAJOR_AREF_553=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_324, arguments.length);
}
let TMP_562;
let TMP_561;
let TMP_560;
let TMP_559;
let L_G170__356;
let TMP_558;
let TMP_557;
let TMP_556;
let L_G169__355;
let TMP_555;
let TMP_554;
let L_INDEX__353;
let L_ARRAY__352;
L_ARRAY__352=arguments[0];
L_INDEX__353=arguments[1];
TMP_554=G_3.func(L_ARRAY__352);
if(lisp.values1(TMP_554) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_ARRAY__352,G_4);
}
{
TMP_555=lisp.callFunctionWithCallStack(G_301,L_INDEX__353,0);
L_G169__355=lisp.values1(TMP_555);
if(lisp.values1(L_G169__355) !== lisp.S_nil){
TMP_556=lisp.values1(L_G169__355);
}else{
{
TMP_557=G_73.func(L_ARRAY__352);
TMP_558=lisp.callFunctionWithCallStack(G_357,TMP_557,L_INDEX__353);
L_G170__356=lisp.values1(TMP_558);
if(lisp.values1(L_G170__356) !== lisp.S_nil){
TMP_559=lisp.values1(L_G170__356);
}else{
TMP_559=lisp.values1(lisp.S_nil);
}
}
TMP_556=lisp.values1(lisp.values1(TMP_559));
}
}
if(lisp.values1(lisp.values1(TMP_556)) !== lisp.S_nil){
TMP_560=G_73.func(L_ARRAY__352);
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 105, 110, 100, 101, 120, 32, 126, 68, 32, 102, 111, 114, 32, 126, 83, 44, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 97, 32, 110, 111, 110, 45, 110, 101, 103, 97, 116, 105, 118, 101, 32, 105, 110, 116, 101, 103, 101, 114, 32, 98, 101, 108, 111, 119, 32, 126, 68, 46])),L_INDEX__353,L_ARRAY__352,TMP_560);
}else{
}
TMP_561=G_28.func(L_ARRAY__352);
TMP_562=lisp.callFunctionWithCallStack(G_507,TMP_561,L_INDEX__353);
return TMP_562;
});
CL_COMMON_LISP_ROW_MAJOR_AREF=lisp.values1(F_ROW_MAJOR_AREF_553);
let F_VECTOR_POP_588;
F_VECTOR_POP_588=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_589, arguments.length);
}
let TMP_601;
let TMP_600;
let TMP_599;
let L_G_STORE186__379;
let TMP_598;
let TMP_597;
let L_G185__378;
let TMP_596;
let TMP_595;
let L_G184__377;
let TMP_594;
let TMP_593;
let TMP_592;
let L_G183__376;
let TMP_591;
let TMP_590;
let L_VECTOR__374;
L_VECTOR__374=arguments[0];
{
TMP_590=G_127.func(L_VECTOR__374);
TMP_591=lisp.callFunctionWithCallStack(G_242,TMP_590);
L_G183__376=lisp.values1(TMP_591);
if(lisp.values1(L_G183__376) !== lisp.S_nil){
TMP_592=lisp.values1(L_G183__376);
}else{
{
TMP_593=G_127.func(L_VECTOR__374);
TMP_594=lisp.callFunctionWithCallStack(G_223,0,TMP_593);
L_G184__377=lisp.values1(TMP_594);
if(lisp.values1(L_G184__377) !== lisp.S_nil){
TMP_595=lisp.values1(L_G184__377);
}else{
TMP_595=lisp.values1(lisp.S_nil);
}
}
TMP_592=lisp.values1(lisp.values1(TMP_595));
}
}
if(lisp.values1(lisp.values1(TMP_592)) !== lisp.S_nil){
TMP_596=lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([84, 104, 101, 32, 102, 105, 108, 108, 32, 112, 111, 105, 110, 116, 101, 114, 32, 111, 102, 32, 116, 104, 101, 32, 118, 101, 99, 116, 111, 114, 32, 126, 83, 32, 105, 115, 32, 122, 101, 114, 111, 46])),L_VECTOR__374);
lisp.callFunctionWithCallStack(G_221,TMP_596);
}else{
}
{
L_G185__378=lisp.values1(L_VECTOR__374);
TMP_597=G_127.func(L_G185__378);
TMP_598=lisp.callFunctionWithCallStack(G_306,TMP_597,1);
L_G_STORE186__379=lisp.values1(TMP_598);
lisp.callFunctionWithCallStack(G_130,L_G_STORE186__379,L_G185__378);
}
TMP_599=G_28.func(L_VECTOR__374);
TMP_600=G_127.func(L_VECTOR__374);
TMP_601=lisp.callFunctionWithCallStack(G_507,TMP_599,TMP_600);
return TMP_601;
});
CL_COMMON_LISP_VECTOR_POP=lisp.values1(F_VECTOR_POP_588);
let F_VECTOR_PUSH_602;
F_VECTOR_PUSH_602=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_603, arguments.length);
}
let L_G_STORE191__388;
let L_G190__387;
let L_G189__386;
let L_G_STORE188__385;
let TMP_614;
let TMP_613;
let L_G187__384;
let TMP_612;
let TMP_611;
let TMP_610;
let TMP_609;
let TMP_608;
let TMP_607;
let TMP_606;
let TMP_605;
let L_FP__383;
let TMP_604;
let L_VECTOR__381;
let L_NEW_ELEMENT__380;
L_NEW_ELEMENT__380=arguments[0];
L_VECTOR__381=arguments[1];
{
TMP_604=G_127.func(L_VECTOR__381);
L_FP__383=lisp.values1(TMP_604);
TMP_605=G_127.func(L_VECTOR__381);
if(lisp.values1(TMP_605) !== lisp.S_nil){
TMP_607=G_127.func(L_VECTOR__381);
TMP_608=lisp.callFunctionWithCallStack(G_357,0,TMP_607);
TMP_606=lisp.values1(TMP_608);
}else{
TMP_606=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_606) !== lisp.S_nil){
TMP_610=G_73.func(L_VECTOR__381);
TMP_611=lisp.callFunctionWithCallStack(G_301,L_FP__383,TMP_610);
if(lisp.values1(TMP_611) !== lisp.S_nil){
{
L_G187__384=lisp.values1(L_VECTOR__381);
TMP_613=G_127.func(L_G187__384);
TMP_614=lisp.callFunctionWithCallStack(G_257,TMP_613,1);
L_G_STORE188__385=lisp.values1(TMP_614);
lisp.callFunctionWithCallStack(G_130,L_G_STORE188__385,L_G187__384);
}
{
L_G189__386=lisp.values1(L_VECTOR__381);
L_G190__387=lisp.values1(L_FP__383);
L_G_STORE191__388=lisp.values1(L_NEW_ELEMENT__380);
lisp.callFunctionWithCallStack(G_528,L_G_STORE191__388,L_G189__386,L_G190__387);
}
TMP_612=lisp.values1(L_FP__383);
}else{
TMP_612=lisp.values1(lisp.S_nil);
}
TMP_609=TMP_612;
}else{
TMP_609=lisp.values1(lisp.S_nil);
}
}
return TMP_609;
});
CL_COMMON_LISP_VECTOR_PUSH=lisp.values1(F_VECTOR_PUSH_602);
let F_VECTOR_PUSH_EXTEND_615;
F_VECTOR_PUSH_EXTEND_615=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_616, arguments.length);
}
let L_G_STORE196__398;
let TMP_623;
let TMP_622;
let L_G195__397;
let L_G_STORE194__396;
let L_G193__395;
let L_G192__394;
let TMP_621;
let TMP_620;
let TMP_619;
let L_FP__393;
let TMP_618;
let L_SIZE__392;
let TMP_617;
let L_VECTOR__390;
let L_NEW_ELEMENT__389;
L_NEW_ELEMENT__389=arguments[0];
L_VECTOR__390=arguments[1];
{
TMP_617=G_73.func(L_VECTOR__390);
L_SIZE__392=lisp.values1(TMP_617);
TMP_618=G_127.func(L_VECTOR__390);
L_FP__393=lisp.values1(TMP_618);
TMP_619=lisp.callFunctionWithCallStack(G_223,L_FP__393,L_SIZE__392);
if(lisp.values1(TMP_619) !== lisp.S_nil){
TMP_620=lisp.callFunctionWithCallStack(G_233,L_SIZE__392);
TMP_621=lisp.callFunctionWithCallStack(G_303,TMP_620,2);
G_379.func(L_VECTOR__390,TMP_621);
}else{
}
{
L_G192__394=lisp.values1(L_VECTOR__390);
L_G193__395=lisp.values1(L_FP__393);
L_G_STORE194__396=lisp.values1(L_NEW_ELEMENT__389);
lisp.callFunctionWithCallStack(G_528,L_G_STORE194__396,L_G192__394,L_G193__395);
}
{
L_G195__397=lisp.values1(L_VECTOR__390);
TMP_622=G_127.func(L_G195__397);
TMP_623=lisp.callFunctionWithCallStack(G_257,TMP_622,1);
L_G_STORE196__398=lisp.values1(TMP_623);
lisp.callFunctionWithCallStack(G_130,L_G_STORE196__398,L_G195__397);
}
}
return lisp.values1(L_FP__393);
});
CL_COMMON_LISP_VECTOR_PUSH_EXTEND=lisp.values1(F_VECTOR_PUSH_EXTEND_615);
let F_SVREF_624;
F_SVREF_624=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_625, arguments.length);
}
let TMP_627;
let TMP_626;
let L_INDEX__400;
let L_VECTOR__399;
L_VECTOR__399=arguments[0];
L_INDEX__400=arguments[1];
TMP_626=G_28.func(L_VECTOR__399);
TMP_627=lisp.callFunctionWithCallStack(G_507,TMP_626,L_INDEX__400);
return TMP_627;
});
CL_COMMON_LISP_SVREF=lisp.values1(F_SVREF_624);
let F_BIT_642;
F_BIT_642=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_643, arguments.length);
}
let TMP_646;
let TMP_645;
let TMP_644;
let L_SUBSCRIPTS__416;
let L_BIT_ARRAY__415;
L_BIT_ARRAY__415=arguments[0];
L_SUBSCRIPTS__416=lisp.jsArrayToList(arguments, 1);
TMP_644=G_28.func(L_BIT_ARRAY__415);
TMP_645=G_467.func(L_BIT_ARRAY__415,L_SUBSCRIPTS__416,G_204);
TMP_646=lisp.callFunctionWithCallStack(G_507,TMP_644,TMP_645);
return TMP_646;
});
CL_COMMON_LISP_BIT=lisp.values1(F_BIT_642);
let F_SBIT_662;
F_SBIT_662=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_663, arguments.length);
}
let TMP_666;
let TMP_665;
let TMP_664;
let L_SUBSCRIPTS__432;
let L_BIT_ARRAY__431;
L_BIT_ARRAY__431=arguments[0];
L_SUBSCRIPTS__432=lisp.jsArrayToList(arguments, 1);
TMP_664=G_28.func(L_BIT_ARRAY__431);
TMP_665=G_467.func(L_BIT_ARRAY__431,L_SUBSCRIPTS__432,G_204);
TMP_666=lisp.callFunctionWithCallStack(G_507,TMP_664,TMP_665);
return TMP_666;
});
CL_COMMON_LISP_SBIT=lisp.values1(F_SBIT_662);
let F_BIT_AND_682;
F_BIT_AND_682=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_683, arguments.length);
}
let L_G235__462;
let TMP_698;
let L_G_STORE234__461;
let TMP_697;
let TMP_696;
let L_G233__460;
let L_G232__459;
let TMP_695;
let L_I__458;
let BLOCK_RESULT_NIL__457;
let L_G225__456;
let TMP_694;
let L_DST_BIT_ARRAY__455;
let TMP_693;
let TMP_692;
let TMP_691;
let L_G223__453;
let TMP_690;
let TMP_689;
let L_G222__452;
let TMP_688;
let L_G221__451;
let TMP_686;
let TMP_685;
let TMP_684;
let L_OPT_ARG__449;
let L_BIT_ARRAY_2__448;
let L_BIT_ARRAY_1__447;
L_BIT_ARRAY_1__447=arguments[0];
L_BIT_ARRAY_2__448=arguments[1];
L_OPT_ARG__449=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
TMP_684=G_55.func(L_BIT_ARRAY_1__447);
TMP_685=G_55.func(L_BIT_ARRAY_2__448);
TMP_686=lisp.callFunctionWithCallStack(G_687,TMP_684,TMP_685);
if(lisp.values1(TMP_686) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([126, 83, 32, 97, 110, 100, 32, 126, 83, 32, 100, 111, 110, 39, 116, 32, 104, 97, 118, 101, 32, 116, 104, 101, 32, 115, 97, 109, 101, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 115, 46])),L_BIT_ARRAY_1__447,L_BIT_ARRAY_2__448);
}
{
{
L_G221__451=lisp.values1(L_OPT_ARG__449);
{
TMP_688=lisp.callFunctionWithCallStack(G_202,L_G221__451,lisp.makeCons(G_204, lisp.S_nil));
L_G222__452=lisp.values1(TMP_688);
if(lisp.values1(L_G222__452) !== lisp.S_nil){
TMP_689=lisp.values1(L_BIT_ARRAY_1__447);
}else{
{
TMP_690=lisp.callFunctionWithCallStack(G_202,L_G221__451,lisp.makeCons(lisp.S_nil, lisp.S_nil));
L_G223__453=lisp.values1(TMP_690);
if(lisp.values1(L_G223__453) !== lisp.S_nil){
TMP_692=G_55.func(L_BIT_ARRAY_1__447);
TMP_693=G_375.func(TMP_692,G_23,G_643);
TMP_691=lisp.values1(TMP_693);
}else{
TMP_691=lisp.values1(L_OPT_ARG__449);
}
}
TMP_689=lisp.values1(lisp.values1(TMP_691));
}
}
}
L_DST_BIT_ARRAY__455=lisp.values1(lisp.values1(lisp.values1(TMP_689)));
{
TMP_694=G_73.func(L_BIT_ARRAY_1__447);
L_G225__456=lisp.values1(TMP_694);
BLOCK_NIL__457: for(;;){{
L_I__458=lisp.values1(0);
for(;;){
TMP_695=lisp.callFunctionWithCallStack(G_223,L_I__458,L_G225__456);
if(lisp.values1(TMP_695) !== lisp.S_nil){
BLOCK_RESULT_NIL__457=lisp.values1(lisp.S_nil);
break BLOCK_NIL__457;
}else{
{
L_G232__459=lisp.values1(L_DST_BIT_ARRAY__455);
L_G233__460=lisp.values1(L_I__458);
TMP_696=lisp.callFunctionWithCallStack(G_507,L_BIT_ARRAY_1__447,L_I__458);
TMP_697=lisp.callFunctionWithCallStack(G_507,L_BIT_ARRAY_2__448,L_I__458);
L_G_STORE234__461=lisp.values1((TMP_696 & TMP_697));
lisp.callFunctionWithCallStack(G_563,L_G_STORE234__461,L_G232__459,L_G233__460);
}
{
TMP_698=lisp.callFunctionWithCallStack(G_257,L_I__458,1);
L_G235__462=lisp.values1(TMP_698);
L_I__458=lisp.values1(L_G235__462);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__457=lisp.values1(lisp.S_nil);
break;
}
}
}
return lisp.values1(L_DST_BIT_ARRAY__455);
});
CL_COMMON_LISP_BIT_AND=lisp.values1(F_BIT_AND_682);
let F_VECTOR_LENGTH_699;
F_VECTOR_LENGTH_699=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_700, arguments.length);
}
let TMP_704;
let L_G237__466;
let TMP_703;
let TMP_702;
let L_G236__465;
let TMP_701;
let L_VECTOR__463;
L_VECTOR__463=arguments[0];
{
TMP_701=G_127.func(L_VECTOR__463);
L_G236__465=lisp.values1(TMP_701);
if(lisp.values1(L_G236__465) !== lisp.S_nil){
TMP_702=lisp.values1(L_G236__465);
}else{
{
TMP_703=G_73.func(L_VECTOR__463);
L_G237__466=lisp.values1(TMP_703);
if(lisp.values1(L_G237__466) !== lisp.S_nil){
TMP_704=lisp.values1(L_G237__466);
}else{
TMP_704=lisp.values1(lisp.S_nil);
}
}
TMP_702=TMP_704;
}
}
return TMP_702;
});
CL_COMMON_LISP_VECTOR_LENGTH=lisp.values1(F_VECTOR_LENGTH_699);
let F_ARRAY_EQUALP_705;
F_ARRAY_EQUALP_705=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_706, arguments.length);
}
let L_G253__479;
let TMP_730;
let TMP_729;
let TMP_728;
let TMP_727;
let TMP_726;
let L_I__478;
let BLOCK_RESULT_NIL__477;
let L_G246__476;
let TMP_725;
let TMP_724;
let TMP_723;
let TMP_722;
let TMP_721;
let L_G245__475;
let TMP_720;
let TMP_718;
let TMP_717;
let TMP_716;
let TMP_715;
let L_I__474;
let BLOCK_RESULT_NIL__473;
let L_G238__472;
let TMP_714;
let TMP_713;
let L_LEN2__471;
let TMP_712;
let L_LEN1__470;
let TMP_711;
let TMP_710;
let TMP_709;
let TMP_708;
let TMP_707;
let L_Y__468;
let L_X__467;
L_X__467=arguments[0];
L_Y__468=arguments[1];
TMP_707=G_428.func(L_X__467);
if(lisp.values1(TMP_707) !== lisp.S_nil){
TMP_709=G_428.func(L_Y__468);
if(lisp.values1(TMP_709) !== lisp.S_nil){
{
TMP_711=G_700.func(L_X__467);
L_LEN1__470=lisp.values1(TMP_711);
TMP_712=G_700.func(L_Y__468);
L_LEN2__471=lisp.values1(TMP_712);
TMP_713=lisp.callFunctionWithCallStack(G_210,L_LEN1__470,L_LEN2__471);
if(lisp.values1(TMP_713) !== lisp.S_nil){
{
L_G238__472=lisp.values1(L_LEN1__470);
BLOCK_NIL__473: for(;;){{
L_I__474=lisp.values1(0);
for(;;){
TMP_715=lisp.callFunctionWithCallStack(G_223,L_I__474,L_G238__472);
if(lisp.values1(TMP_715) !== lisp.S_nil){
BLOCK_RESULT_NIL__473=lisp.values1(G_204);
break BLOCK_NIL__473;
}else{
TMP_716=G_625.func(L_X__467,L_I__474);
TMP_717=G_625.func(L_Y__468,L_I__474);
TMP_718=lisp.callFunctionWithCallStack(G_719,TMP_716,TMP_717);
if(lisp.values1(TMP_718) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__473=lisp.values1(lisp.S_nil);
break BLOCK_NIL__473;
}
{
TMP_720=lisp.callFunctionWithCallStack(G_257,L_I__474,1);
L_G245__475=lisp.values1(TMP_720);
L_I__474=lisp.values1(L_G245__475);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__473=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_714=BLOCK_RESULT_NIL__473;
}else{
TMP_714=lisp.values1(lisp.S_nil);
}
}
TMP_710=TMP_714;
}else{
TMP_710=lisp.values1(lisp.S_nil);
}
TMP_708=TMP_710;
}else{
TMP_721=G_55.func(L_X__467);
TMP_722=G_55.func(L_Y__468);
TMP_723=lisp.callFunctionWithCallStack(G_687,TMP_721,TMP_722);
if(lisp.values1(TMP_723) !== lisp.S_nil){
{
TMP_725=G_73.func(L_X__467);
L_G246__476=lisp.values1(TMP_725);
BLOCK_NIL__477: for(;;){{
L_I__478=lisp.values1(0);
for(;;){
TMP_726=lisp.callFunctionWithCallStack(G_223,L_I__478,L_G246__476);
if(lisp.values1(TMP_726) !== lisp.S_nil){
BLOCK_RESULT_NIL__477=lisp.values1(G_204);
break BLOCK_NIL__477;
}else{
TMP_727=G_324.func(L_X__467,L_I__478);
TMP_728=G_324.func(L_Y__468,L_I__478);
TMP_729=lisp.callFunctionWithCallStack(G_719,TMP_727,TMP_728);
if(lisp.values1(TMP_729) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__477=lisp.values1(lisp.S_nil);
break BLOCK_NIL__477;
}
{
TMP_730=lisp.callFunctionWithCallStack(G_257,L_I__478,1);
L_G253__479=lisp.values1(TMP_730);
L_I__478=lisp.values1(L_G253__479);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__477=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_724=BLOCK_RESULT_NIL__477;
}else{
TMP_724=lisp.values1(lisp.S_nil);
}
TMP_708=TMP_724;
}
return TMP_708;
});
CL_COMMON_LISP_ARRAY_EQUALP=lisp.values1(F_ARRAY_EQUALP_705);
// initialize symbols
G_3 = lisp.intern('ARRAYP', 'COMMON-LISP');
G_4 = lisp.intern('ARRAY', 'COMMON-LISP');
G_6 = lisp.intern('TYPEP', 'COMMON-LISP');
G_8 = lisp.intern('%MAKE-ARRAY', 'COMMON-LISP');
G_9 = lisp.intern('CONTENTS', 'KEYWORD');
G_11 = lisp.intern('DIMENSIONS', 'KEYWORD');
G_13 = lisp.intern('TOTAL-SIZE', 'KEYWORD');
G_15 = lisp.intern('DISPLACED-TO', 'KEYWORD');
G_17 = lisp.intern('DISPLACED-INDEX-OFFSET', 'KEYWORD');
G_19 = lisp.intern('FILL-POINTER', 'KEYWORD');
G_21 = lisp.intern('RANK', 'KEYWORD');
G_23 = lisp.intern('ELEMENT-TYPE', 'KEYWORD');
G_28 = lisp.intern('ARRAY-CONTENTS', 'COMMON-LISP');
G_30 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_31 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_33 = lisp.intern('(SETF ARRAY-CONTENTS)', 'COMMON-LISP');
G_37 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_41 = lisp.intern('GENSYM', 'COMMON-LISP');
G_43 = lisp.intern('%MAPCAR', 'SYSTEM');
G_44 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_47 = lisp.intern('LIST', 'COMMON-LISP');
G_49 = lisp.intern('LIST*', 'COMMON-LISP');
G_52 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_55 = lisp.intern('ARRAY-DIMENSIONS', 'COMMON-LISP');
G_58 = lisp.intern('(SETF ARRAY-DIMENSIONS)', 'COMMON-LISP');
G_73 = lisp.intern('ARRAY-TOTAL-SIZE', 'COMMON-LISP');
G_76 = lisp.intern('(SETF ARRAY-TOTAL-SIZE)', 'COMMON-LISP');
G_91 = lisp.intern('ARRAY-DISPLACED-TO', 'COMMON-LISP');
G_94 = lisp.intern('(SETF ARRAY-DISPLACED-TO)', 'COMMON-LISP');
G_109 = lisp.intern('ARRAY-DISPLACED-INDEX-OFFSET', 'COMMON-LISP');
G_112 = lisp.intern('(SETF ARRAY-DISPLACED-INDEX-OFFSET)', 'COMMON-LISP');
G_127 = lisp.intern('ARRAY-FILL-POINTER', 'COMMON-LISP');
G_130 = lisp.intern('(SETF ARRAY-FILL-POINTER)', 'COMMON-LISP');
G_145 = lisp.intern('ARRAY-RANK', 'COMMON-LISP');
G_148 = lisp.intern('(SETF ARRAY-RANK)', 'COMMON-LISP');
G_163 = lisp.intern('ARRAY-ELEMENT-TYPE', 'COMMON-LISP');
G_166 = lisp.intern('(SETF ARRAY-ELEMENT-TYPE)', 'COMMON-LISP');
G_181 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_182 = lisp.intern('PRIN1', 'COMMON-LISP');
G_192 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_194 = lisp.intern('UPGRADED-ARRAY-ELEMENT-TYPE', 'COMMON-LISP');
G_197 = lisp.intern('CHARACTER', 'COMMON-LISP');
G_198 = lisp.intern('BASE-CHAR', 'COMMON-LISP');
G_199 = lisp.intern('STANDARD-CHAR', 'COMMON-LISP');
G_200 = lisp.intern('EXTENDED-CHAR', 'COMMON-LISP');
G_202 = lisp.intern('MEMBER', 'COMMON-LISP');
G_204 = lisp.intern('T', 'COMMON-LISP');
G_206 = lisp.intern('MAKE-ARRAY-CONTENTS-WITH-INITIAL-CONTENTS', 'COMMON-LISP');
G_210 = lisp.intern('=', 'COMMON-LISP');
G_213 = lisp.intern('LENGTH', 'COMMON-LISP');
G_215 = lisp.intern('MAKE-RAW-STRING', 'SYSTEM');
G_217 = lisp.intern('CAR', 'COMMON-LISP');
G_221 = lisp.intern('ERROR', 'COMMON-LISP');
G_223 = lisp.intern('>=', 'COMMON-LISP');
G_225 = lisp.intern('ELT', 'COMMON-LISP');
G_227 = lisp.intern('STRING', 'COMMON-LISP');
G_229 = lisp.intern('ARRAY-TO-RAW-STRING', 'SYSTEM');
G_231 = lisp.intern('CONCAT-RAW-STRING/2', 'SYSTEM');
G_233 = lisp.intern('1+', 'COMMON-LISP');
G_237 = lisp.intern('MAKE-RAW-ARRAY', 'SYSTEM');
G_238 = lisp.intern('RAW-ARRAY-SET', 'SYSTEM');
G_242 = lisp.intern('NULL', 'COMMON-LISP');
G_245 = lisp.intern('FIRST', 'COMMON-LISP');
G_248 = lisp.intern('/=', 'COMMON-LISP');
G_252 = lisp.intern('CDR', 'COMMON-LISP');
G_257 = lisp.intern('+', 'COMMON-LISP');
G_261 = lisp.intern('MAP', 'COMMON-LISP');
G_267 = lisp.intern('MAKE-ARRAY-CONTENTS-WITH-INITIAL-ELEMENT', 'COMMON-LISP');
G_274 = lisp.intern('CHAR-CODE', 'COMMON-LISP');
G_276 = lisp.intern('CODE-TO-RAW-STRING', 'SYSTEM');
G_287 = lisp.intern('FILL-RAW-ARRAY', 'SYSTEM');
G_294 = lisp.intern('COPY-ARRAY-CONTENTS', 'COMMON-LISP');
G_301 = lisp.intern('<', 'COMMON-LISP');
G_303 = lisp.intern('*', 'COMMON-LISP');
G_306 = lisp.intern('-', 'COMMON-LISP');
G_308 = lisp.intern('REST', 'COMMON-LISP');
G_310 = lisp.intern('APPLY', 'COMMON-LISP');
G_324 = lisp.intern('ROW-MAJOR-AREF', 'COMMON-LISP');
G_325 = lisp.intern('SETF', 'COMMON-LISP');
G_327 = lisp.intern('FDEFINITION', 'COMMON-LISP');
G_331 = lisp.intern('MAKE-OR-ADJUST-ARRAY', 'COMMON-LISP');
G_335 = lisp.intern('INITIAL-ELEMENT', 'KEYWORD');
G_337 = lisp.intern('INITIAL-CONTENTS', 'KEYWORD');
G_339 = lisp.intern('ADJUSTABLE', 'KEYWORD');
G_357 = lisp.intern('<=', 'COMMON-LISP');
G_359 = lisp.intern('NOT', 'COMMON-LISP');
G_375 = lisp.intern('MAKE-ARRAY', 'COMMON-LISP');
G_379 = lisp.intern('ADJUST-ARRAY', 'COMMON-LISP');
G_383 = lisp.intern('RAW-ARRAY-TO-ARRAY', 'SYSTEM');
G_385 = lisp.intern('RAW-ARRAY-LENGTH', 'SYSTEM');
G_389 = lisp.intern('SIMPLE-MAKE-STRING', 'COMMON-LISP');
G_401 = lisp.intern('SUB-RAW-STRING/3', 'SYSTEM');
G_404 = lisp.intern('VECTOR', 'COMMON-LISP');
G_408 = lisp.intern('ADJUSTABLE-ARRAY-P', 'COMMON-LISP');
G_412 = lisp.intern('FILL-POINTER', 'COMMON-LISP');
G_414 = lisp.intern('(SETF FILL-POINTER)', 'COMMON-LISP');
G_428 = lisp.intern('VECTORP', 'COMMON-LISP');
G_434 = lisp.intern('SIMPLE-VECTOR-P', 'COMMON-LISP');
G_441 = lisp.intern('ARRAY-HAS-FILL-POINTER-P', 'COMMON-LISP');
G_444 = lisp.intern('SIMPLE-BIT-VECTOR-P', 'COMMON-LISP');
G_451 = lisp.intern('ARRAY-DIMENSION', 'COMMON-LISP');
G_454 = lisp.intern('NTH', 'COMMON-LISP');
G_456 = lisp.intern('ARRAY-DISPLACEMENT', 'COMMON-LISP');
G_464 = lisp.intern('SUBSCRIPTS-ERROR', 'COMMON-LISP');
G_467 = lisp.intern('%ARRAY-ROW-MAJOR-INDEX', 'COMMON-LISP');
G_469 = lisp.intern('LISTP', 'COMMON-LISP');
G_470 = lisp.intern('SUBSCRIPTS', 'COMMON-LISP');
G_478 = lisp.intern('1-', 'COMMON-LISP');
G_480 = lisp.intern('MINUSP', 'COMMON-LISP');
G_496 = lisp.intern('ARRAY-ROW-MAJOR-INDEX', 'COMMON-LISP');
G_499 = lisp.intern('ARRAY-IN-BOUNDS-P', 'COMMON-LISP');
G_503 = lisp.intern('AREF', 'COMMON-LISP');
G_507 = lisp.intern('RAW-ARRAY-REF', 'SYSTEM');
G_509 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_513 = lisp.intern('%STRING-SET', 'COMMON-LISP');
G_525 = lisp.intern('SUB-RAW-STRING/2', 'SYSTEM');
G_527 = lisp.intern('CONCAT-RAW-STRING/3', 'SYSTEM');
G_528 = lisp.intern('(SETF AREF)', 'COMMON-LISP');
G_563 = lisp.intern('(SETF ROW-MAJOR-AREF)', 'COMMON-LISP');
G_589 = lisp.intern('VECTOR-POP', 'COMMON-LISP');
G_603 = lisp.intern('VECTOR-PUSH', 'COMMON-LISP');
G_616 = lisp.intern('VECTOR-PUSH-EXTEND', 'COMMON-LISP');
G_625 = lisp.intern('SVREF', 'COMMON-LISP');
G_628 = lisp.intern('(SETF SVREF)', 'COMMON-LISP');
G_643 = lisp.intern('BIT', 'COMMON-LISP');
G_647 = lisp.intern('(SETF BIT)', 'COMMON-LISP');
G_663 = lisp.intern('SBIT', 'COMMON-LISP');
G_667 = lisp.intern('(SETF SBIT)', 'COMMON-LISP');
G_683 = lisp.intern('BIT-AND', 'COMMON-LISP');
G_687 = lisp.intern('EQUAL', 'COMMON-LISP');
G_700 = lisp.intern('VECTOR-LENGTH', 'COMMON-LISP');
G_706 = lisp.intern('ARRAY-EQUALP', 'COMMON-LISP');
G_719 = lisp.intern('EQUALP', 'COMMON-LISP');
G_731 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_ARRAYP.lisp_name = 'ARRAYP'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_ARRAYP);
CL_COMMON_LISP_PERCENTMAKE_ARRAY.lisp_name = '%MAKE-ARRAY'
lisp.setSymbolFunction(G_8, CL_COMMON_LISP_PERCENTMAKE_ARRAY);
CL_COMMON_LISP_ARRAY_CONTENTS.lisp_name = 'ARRAY-CONTENTS'
lisp.setSymbolFunction(G_28, CL_COMMON_LISP_ARRAY_CONTENTS);
TMP_34=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_36;
let TMP_35;
let L_STRUCTURE__15;
let L_VALUE__14;
L_VALUE__14=arguments[0];
L_STRUCTURE__15=arguments[1];
TMP_35=lisp.CL_structurep(L_STRUCTURE__15);
if(lisp.values1(TMP_35) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__15,G_30);
}
TMP_36=lisp.CL_structureSet(L_STRUCTURE__15,0,L_VALUE__14);
return TMP_36;
});
lisp.CL_setSymbolFunction(G_33,TMP_34);
TMP_38=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_51;
let TMP_50;
let TMP_48;
let TMP_46;
let L_STORE2__23;
let TMP_45;
let L_GENSYMS0__22;
let TMP_42;
let TMP_39;
let L_ARGS1__20;
let L_G6__18;
let L_G5__17;
L_G5__17=arguments[0];
{
L_G6__18=lisp.values1(L_G5__17);
{
L_ARGS1__20=lisp.values1(L_G6__18);
{
TMP_39=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_40;
let L_X__21;
L_X__21=arguments[0];
TMP_40=lisp.callFunctionWithCallStack(G_41);
return TMP_40;
});
TMP_42=lisp.callFunctionWithCallStack(G_43,TMP_39,L_ARGS1__20);
L_GENSYMS0__22=lisp.values1(TMP_42);
TMP_45=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE2__23=lisp.values1(TMP_45);
TMP_46=lisp.callFunctionWithCallStack(G_47,L_STORE2__23);
TMP_48=lisp.callFunctionWithCallStack(G_49,G_33,L_STORE2__23,L_GENSYMS0__22);
TMP_50=lisp.callFunctionWithCallStack(G_49,G_28,L_GENSYMS0__22);
TMP_51=lisp.CL_values(L_GENSYMS0__22,L_ARGS1__20,TMP_46,TMP_48,TMP_50);
}
}
}
return TMP_51;
});
lisp.CL_put(G_28,G_37,TMP_38);
TMP_53=lisp.CL_symbolFunction(G_33);
lisp.CL_put(G_28,G_52,TMP_53);
CL_COMMON_LISP_ARRAY_DIMENSIONS.lisp_name = 'ARRAY-DIMENSIONS'
lisp.setSymbolFunction(G_55, CL_COMMON_LISP_ARRAY_DIMENSIONS);
TMP_59=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_61;
let TMP_60;
let L_STRUCTURE__29;
let L_VALUE__28;
L_VALUE__28=arguments[0];
L_STRUCTURE__29=arguments[1];
TMP_60=lisp.CL_structurep(L_STRUCTURE__29);
if(lisp.values1(TMP_60) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__29,G_30);
}
TMP_61=lisp.CL_structureSet(L_STRUCTURE__29,1,L_VALUE__28);
return TMP_61;
});
lisp.CL_setSymbolFunction(G_58,TMP_59);
TMP_62=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_70;
let TMP_69;
let TMP_68;
let TMP_67;
let L_STORE10__37;
let TMP_66;
let L_GENSYMS8__36;
let TMP_65;
let TMP_63;
let L_ARGS9__34;
let L_G14__32;
let L_G13__31;
L_G13__31=arguments[0];
{
L_G14__32=lisp.values1(L_G13__31);
{
L_ARGS9__34=lisp.values1(L_G14__32);
{
TMP_63=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_64;
let L_X__35;
L_X__35=arguments[0];
TMP_64=lisp.callFunctionWithCallStack(G_41);
return TMP_64;
});
TMP_65=lisp.callFunctionWithCallStack(G_43,TMP_63,L_ARGS9__34);
L_GENSYMS8__36=lisp.values1(TMP_65);
TMP_66=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE10__37=lisp.values1(TMP_66);
TMP_67=lisp.callFunctionWithCallStack(G_47,L_STORE10__37);
TMP_68=lisp.callFunctionWithCallStack(G_49,G_58,L_STORE10__37,L_GENSYMS8__36);
TMP_69=lisp.callFunctionWithCallStack(G_49,G_55,L_GENSYMS8__36);
TMP_70=lisp.CL_values(L_GENSYMS8__36,L_ARGS9__34,TMP_67,TMP_68,TMP_69);
}
}
}
return TMP_70;
});
lisp.CL_put(G_55,G_37,TMP_62);
TMP_71=lisp.CL_symbolFunction(G_58);
lisp.CL_put(G_55,G_52,TMP_71);
CL_COMMON_LISP_ARRAY_TOTAL_SIZE.lisp_name = 'ARRAY-TOTAL-SIZE'
lisp.setSymbolFunction(G_73, CL_COMMON_LISP_ARRAY_TOTAL_SIZE);
TMP_77=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_79;
let TMP_78;
let L_STRUCTURE__43;
let L_VALUE__42;
L_VALUE__42=arguments[0];
L_STRUCTURE__43=arguments[1];
TMP_78=lisp.CL_structurep(L_STRUCTURE__43);
if(lisp.values1(TMP_78) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__43,G_30);
}
TMP_79=lisp.CL_structureSet(L_STRUCTURE__43,2,L_VALUE__42);
return TMP_79;
});
lisp.CL_setSymbolFunction(G_76,TMP_77);
TMP_80=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_88;
let TMP_87;
let TMP_86;
let TMP_85;
let L_STORE18__51;
let TMP_84;
let L_GENSYMS16__50;
let TMP_83;
let TMP_81;
let L_ARGS17__48;
let L_G22__46;
let L_G21__45;
L_G21__45=arguments[0];
{
L_G22__46=lisp.values1(L_G21__45);
{
L_ARGS17__48=lisp.values1(L_G22__46);
{
TMP_81=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_82;
let L_X__49;
L_X__49=arguments[0];
TMP_82=lisp.callFunctionWithCallStack(G_41);
return TMP_82;
});
TMP_83=lisp.callFunctionWithCallStack(G_43,TMP_81,L_ARGS17__48);
L_GENSYMS16__50=lisp.values1(TMP_83);
TMP_84=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE18__51=lisp.values1(TMP_84);
TMP_85=lisp.callFunctionWithCallStack(G_47,L_STORE18__51);
TMP_86=lisp.callFunctionWithCallStack(G_49,G_76,L_STORE18__51,L_GENSYMS16__50);
TMP_87=lisp.callFunctionWithCallStack(G_49,G_73,L_GENSYMS16__50);
TMP_88=lisp.CL_values(L_GENSYMS16__50,L_ARGS17__48,TMP_85,TMP_86,TMP_87);
}
}
}
return TMP_88;
});
lisp.CL_put(G_73,G_37,TMP_80);
TMP_89=lisp.CL_symbolFunction(G_76);
lisp.CL_put(G_73,G_52,TMP_89);
CL_COMMON_LISP_ARRAY_DISPLACED_TO.lisp_name = 'ARRAY-DISPLACED-TO'
lisp.setSymbolFunction(G_91, CL_COMMON_LISP_ARRAY_DISPLACED_TO);
TMP_95=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_97;
let TMP_96;
let L_STRUCTURE__57;
let L_VALUE__56;
L_VALUE__56=arguments[0];
L_STRUCTURE__57=arguments[1];
TMP_96=lisp.CL_structurep(L_STRUCTURE__57);
if(lisp.values1(TMP_96) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__57,G_30);
}
TMP_97=lisp.CL_structureSet(L_STRUCTURE__57,3,L_VALUE__56);
return TMP_97;
});
lisp.CL_setSymbolFunction(G_94,TMP_95);
TMP_98=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_106;
let TMP_105;
let TMP_104;
let TMP_103;
let L_STORE26__65;
let TMP_102;
let L_GENSYMS24__64;
let TMP_101;
let TMP_99;
let L_ARGS25__62;
let L_G30__60;
let L_G29__59;
L_G29__59=arguments[0];
{
L_G30__60=lisp.values1(L_G29__59);
{
L_ARGS25__62=lisp.values1(L_G30__60);
{
TMP_99=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_100;
let L_X__63;
L_X__63=arguments[0];
TMP_100=lisp.callFunctionWithCallStack(G_41);
return TMP_100;
});
TMP_101=lisp.callFunctionWithCallStack(G_43,TMP_99,L_ARGS25__62);
L_GENSYMS24__64=lisp.values1(TMP_101);
TMP_102=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE26__65=lisp.values1(TMP_102);
TMP_103=lisp.callFunctionWithCallStack(G_47,L_STORE26__65);
TMP_104=lisp.callFunctionWithCallStack(G_49,G_94,L_STORE26__65,L_GENSYMS24__64);
TMP_105=lisp.callFunctionWithCallStack(G_49,G_91,L_GENSYMS24__64);
TMP_106=lisp.CL_values(L_GENSYMS24__64,L_ARGS25__62,TMP_103,TMP_104,TMP_105);
}
}
}
return TMP_106;
});
lisp.CL_put(G_91,G_37,TMP_98);
TMP_107=lisp.CL_symbolFunction(G_94);
lisp.CL_put(G_91,G_52,TMP_107);
CL_COMMON_LISP_ARRAY_DISPLACED_INDEX_OFFSET.lisp_name = 'ARRAY-DISPLACED-INDEX-OFFSET'
lisp.setSymbolFunction(G_109, CL_COMMON_LISP_ARRAY_DISPLACED_INDEX_OFFSET);
TMP_113=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_115;
let TMP_114;
let L_STRUCTURE__71;
let L_VALUE__70;
L_VALUE__70=arguments[0];
L_STRUCTURE__71=arguments[1];
TMP_114=lisp.CL_structurep(L_STRUCTURE__71);
if(lisp.values1(TMP_114) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__71,G_30);
}
TMP_115=lisp.CL_structureSet(L_STRUCTURE__71,4,L_VALUE__70);
return TMP_115;
});
lisp.CL_setSymbolFunction(G_112,TMP_113);
TMP_116=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_124;
let TMP_123;
let TMP_122;
let TMP_121;
let L_STORE34__79;
let TMP_120;
let L_GENSYMS32__78;
let TMP_119;
let TMP_117;
let L_ARGS33__76;
let L_G38__74;
let L_G37__73;
L_G37__73=arguments[0];
{
L_G38__74=lisp.values1(L_G37__73);
{
L_ARGS33__76=lisp.values1(L_G38__74);
{
TMP_117=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_118;
let L_X__77;
L_X__77=arguments[0];
TMP_118=lisp.callFunctionWithCallStack(G_41);
return TMP_118;
});
TMP_119=lisp.callFunctionWithCallStack(G_43,TMP_117,L_ARGS33__76);
L_GENSYMS32__78=lisp.values1(TMP_119);
TMP_120=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE34__79=lisp.values1(TMP_120);
TMP_121=lisp.callFunctionWithCallStack(G_47,L_STORE34__79);
TMP_122=lisp.callFunctionWithCallStack(G_49,G_112,L_STORE34__79,L_GENSYMS32__78);
TMP_123=lisp.callFunctionWithCallStack(G_49,G_109,L_GENSYMS32__78);
TMP_124=lisp.CL_values(L_GENSYMS32__78,L_ARGS33__76,TMP_121,TMP_122,TMP_123);
}
}
}
return TMP_124;
});
lisp.CL_put(G_109,G_37,TMP_116);
TMP_125=lisp.CL_symbolFunction(G_112);
lisp.CL_put(G_109,G_52,TMP_125);
CL_COMMON_LISP_ARRAY_FILL_POINTER.lisp_name = 'ARRAY-FILL-POINTER'
lisp.setSymbolFunction(G_127, CL_COMMON_LISP_ARRAY_FILL_POINTER);
TMP_131=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_133;
let TMP_132;
let L_STRUCTURE__85;
let L_VALUE__84;
L_VALUE__84=arguments[0];
L_STRUCTURE__85=arguments[1];
TMP_132=lisp.CL_structurep(L_STRUCTURE__85);
if(lisp.values1(TMP_132) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__85,G_30);
}
TMP_133=lisp.CL_structureSet(L_STRUCTURE__85,5,L_VALUE__84);
return TMP_133;
});
lisp.CL_setSymbolFunction(G_130,TMP_131);
TMP_134=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_142;
let TMP_141;
let TMP_140;
let TMP_139;
let L_STORE42__93;
let TMP_138;
let L_GENSYMS40__92;
let TMP_137;
let TMP_135;
let L_ARGS41__90;
let L_G46__88;
let L_G45__87;
L_G45__87=arguments[0];
{
L_G46__88=lisp.values1(L_G45__87);
{
L_ARGS41__90=lisp.values1(L_G46__88);
{
TMP_135=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_136;
let L_X__91;
L_X__91=arguments[0];
TMP_136=lisp.callFunctionWithCallStack(G_41);
return TMP_136;
});
TMP_137=lisp.callFunctionWithCallStack(G_43,TMP_135,L_ARGS41__90);
L_GENSYMS40__92=lisp.values1(TMP_137);
TMP_138=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE42__93=lisp.values1(TMP_138);
TMP_139=lisp.callFunctionWithCallStack(G_47,L_STORE42__93);
TMP_140=lisp.callFunctionWithCallStack(G_49,G_130,L_STORE42__93,L_GENSYMS40__92);
TMP_141=lisp.callFunctionWithCallStack(G_49,G_127,L_GENSYMS40__92);
TMP_142=lisp.CL_values(L_GENSYMS40__92,L_ARGS41__90,TMP_139,TMP_140,TMP_141);
}
}
}
return TMP_142;
});
lisp.CL_put(G_127,G_37,TMP_134);
TMP_143=lisp.CL_symbolFunction(G_130);
lisp.CL_put(G_127,G_52,TMP_143);
CL_COMMON_LISP_ARRAY_RANK.lisp_name = 'ARRAY-RANK'
lisp.setSymbolFunction(G_145, CL_COMMON_LISP_ARRAY_RANK);
TMP_149=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_151;
let TMP_150;
let L_STRUCTURE__99;
let L_VALUE__98;
L_VALUE__98=arguments[0];
L_STRUCTURE__99=arguments[1];
TMP_150=lisp.CL_structurep(L_STRUCTURE__99);
if(lisp.values1(TMP_150) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__99,G_30);
}
TMP_151=lisp.CL_structureSet(L_STRUCTURE__99,6,L_VALUE__98);
return TMP_151;
});
lisp.CL_setSymbolFunction(G_148,TMP_149);
TMP_152=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_160;
let TMP_159;
let TMP_158;
let TMP_157;
let L_STORE50__107;
let TMP_156;
let L_GENSYMS48__106;
let TMP_155;
let TMP_153;
let L_ARGS49__104;
let L_G54__102;
let L_G53__101;
L_G53__101=arguments[0];
{
L_G54__102=lisp.values1(L_G53__101);
{
L_ARGS49__104=lisp.values1(L_G54__102);
{
TMP_153=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_154;
let L_X__105;
L_X__105=arguments[0];
TMP_154=lisp.callFunctionWithCallStack(G_41);
return TMP_154;
});
TMP_155=lisp.callFunctionWithCallStack(G_43,TMP_153,L_ARGS49__104);
L_GENSYMS48__106=lisp.values1(TMP_155);
TMP_156=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE50__107=lisp.values1(TMP_156);
TMP_157=lisp.callFunctionWithCallStack(G_47,L_STORE50__107);
TMP_158=lisp.callFunctionWithCallStack(G_49,G_148,L_STORE50__107,L_GENSYMS48__106);
TMP_159=lisp.callFunctionWithCallStack(G_49,G_145,L_GENSYMS48__106);
TMP_160=lisp.CL_values(L_GENSYMS48__106,L_ARGS49__104,TMP_157,TMP_158,TMP_159);
}
}
}
return TMP_160;
});
lisp.CL_put(G_145,G_37,TMP_152);
TMP_161=lisp.CL_symbolFunction(G_148);
lisp.CL_put(G_145,G_52,TMP_161);
CL_COMMON_LISP_ARRAY_ELEMENT_TYPE.lisp_name = 'ARRAY-ELEMENT-TYPE'
lisp.setSymbolFunction(G_163, CL_COMMON_LISP_ARRAY_ELEMENT_TYPE);
TMP_167=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_169;
let TMP_168;
let L_STRUCTURE__113;
let L_VALUE__112;
L_VALUE__112=arguments[0];
L_STRUCTURE__113=arguments[1];
TMP_168=lisp.CL_structurep(L_STRUCTURE__113);
if(lisp.values1(TMP_168) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_STRUCTURE__113,G_30);
}
TMP_169=lisp.CL_structureSet(L_STRUCTURE__113,7,L_VALUE__112);
return TMP_169;
});
lisp.CL_setSymbolFunction(G_166,TMP_167);
TMP_170=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_178;
let TMP_177;
let TMP_176;
let TMP_175;
let L_STORE58__121;
let TMP_174;
let L_GENSYMS56__120;
let TMP_173;
let TMP_171;
let L_ARGS57__118;
let L_G62__116;
let L_G61__115;
L_G61__115=arguments[0];
{
L_G62__116=lisp.values1(L_G61__115);
{
L_ARGS57__118=lisp.values1(L_G62__116);
{
TMP_171=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_172;
let L_X__119;
L_X__119=arguments[0];
TMP_172=lisp.callFunctionWithCallStack(G_41);
return TMP_172;
});
TMP_173=lisp.callFunctionWithCallStack(G_43,TMP_171,L_ARGS57__118);
L_GENSYMS56__120=lisp.values1(TMP_173);
TMP_174=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE58__121=lisp.values1(TMP_174);
TMP_175=lisp.callFunctionWithCallStack(G_47,L_STORE58__121);
TMP_176=lisp.callFunctionWithCallStack(G_49,G_166,L_STORE58__121,L_GENSYMS56__120);
TMP_177=lisp.callFunctionWithCallStack(G_49,G_163,L_GENSYMS56__120);
TMP_178=lisp.CL_values(L_GENSYMS56__120,L_ARGS57__118,TMP_175,TMP_176,TMP_177);
}
}
}
return TMP_178;
});
lisp.CL_put(G_163,G_37,TMP_170);
TMP_179=lisp.CL_symbolFunction(G_166);
lisp.CL_put(G_163,G_52,TMP_179);
{
TMP_180=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_191;
let TMP_190;
let TMP_189;
let TMP_188;
let TMP_187;
let TMP_186;
let TMP_185;
let TMP_184;
let TMP_183;
let L_STREAM__127;
let L_STRUCTURE__126;
L_STRUCTURE__126=arguments[0];
L_STREAM__127=arguments[1];
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([65, 82, 82, 65, 89])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_182,G_9,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
TMP_183=lisp.CL_structureRef(L_STRUCTURE__126,0);
lisp.callFunctionWithCallStack(G_182,TMP_183,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_182,G_11,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
TMP_184=lisp.CL_structureRef(L_STRUCTURE__126,1);
lisp.callFunctionWithCallStack(G_182,TMP_184,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_182,G_13,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
TMP_185=lisp.CL_structureRef(L_STRUCTURE__126,2);
lisp.callFunctionWithCallStack(G_182,TMP_185,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_182,G_15,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
TMP_186=lisp.CL_structureRef(L_STRUCTURE__126,3);
lisp.callFunctionWithCallStack(G_182,TMP_186,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_182,G_17,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
TMP_187=lisp.CL_structureRef(L_STRUCTURE__126,4);
lisp.callFunctionWithCallStack(G_182,TMP_187,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_182,G_19,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
TMP_188=lisp.CL_structureRef(L_STRUCTURE__126,5);
lisp.callFunctionWithCallStack(G_182,TMP_188,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_182,G_21,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
TMP_189=lisp.CL_structureRef(L_STRUCTURE__126,6);
lisp.callFunctionWithCallStack(G_182,TMP_189,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
lisp.callFunctionWithCallStack(G_182,G_23,L_STREAM__127);
lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([32])),L_STREAM__127);
TMP_190=lisp.CL_structureRef(L_STRUCTURE__126,7);
lisp.callFunctionWithCallStack(G_182,TMP_190,L_STREAM__127);
TMP_191=lisp.callFunctionWithCallStack(G_181,G_44.func(lisp.codeArrayToString([41])),L_STREAM__127);
return TMP_191;
});
L_G66__128=lisp.values1(TMP_180);
{
L_G67__129=lisp.values1(L_G66__128);
lisp.CL_put(G_4,G_192,L_G67__129);
}
}
CL_COMMON_LISP_UPGRADED_ARRAY_ELEMENT_TYPE.lisp_name = 'UPGRADED-ARRAY-ELEMENT-TYPE'
lisp.setSymbolFunction(G_194, CL_COMMON_LISP_UPGRADED_ARRAY_ELEMENT_TYPE);
CL_COMMON_LISP_MAKE_ARRAY_CONTENTS_WITH_INITIAL_CONTENTS.lisp_name = 'MAKE-ARRAY-CONTENTS-WITH-INITIAL-CONTENTS'
lisp.setSymbolFunction(G_206, CL_COMMON_LISP_MAKE_ARRAY_CONTENTS_WITH_INITIAL_CONTENTS);
CL_COMMON_LISP_MAKE_ARRAY_CONTENTS_WITH_INITIAL_ELEMENT.lisp_name = 'MAKE-ARRAY-CONTENTS-WITH-INITIAL-ELEMENT'
lisp.setSymbolFunction(G_267, CL_COMMON_LISP_MAKE_ARRAY_CONTENTS_WITH_INITIAL_ELEMENT);
CL_COMMON_LISP_COPY_ARRAY_CONTENTS.lisp_name = 'COPY-ARRAY-CONTENTS'
lisp.setSymbolFunction(G_294, CL_COMMON_LISP_COPY_ARRAY_CONTENTS);
CL_COMMON_LISP_MAKE_OR_ADJUST_ARRAY.lisp_name = 'MAKE-OR-ADJUST-ARRAY'
lisp.setSymbolFunction(G_331, CL_COMMON_LISP_MAKE_OR_ADJUST_ARRAY);
CL_COMMON_LISP_MAKE_ARRAY.lisp_name = 'MAKE-ARRAY'
lisp.setSymbolFunction(G_375, CL_COMMON_LISP_MAKE_ARRAY);
CL_COMMON_LISP_ADJUST_ARRAY.lisp_name = 'ADJUST-ARRAY'
lisp.setSymbolFunction(G_379, CL_COMMON_LISP_ADJUST_ARRAY);
CL_SYSTEM_RAW_ARRAY_TO_ARRAY.lisp_name = 'RAW-ARRAY-TO-ARRAY'
lisp.setSymbolFunction(G_383, CL_SYSTEM_RAW_ARRAY_TO_ARRAY);
CL_COMMON_LISP_SIMPLE_MAKE_STRING.lisp_name = 'SIMPLE-MAKE-STRING'
lisp.setSymbolFunction(G_389, CL_COMMON_LISP_SIMPLE_MAKE_STRING);
CL_SYSTEM_RAW_STRING_TO_ARRAY.lisp_name = 'RAW-STRING-TO-ARRAY'
lisp.setSymbolFunction(G_44, CL_SYSTEM_RAW_STRING_TO_ARRAY);
CL_SYSTEM_ARRAY_TO_RAW_STRING.lisp_name = 'ARRAY-TO-RAW-STRING'
lisp.setSymbolFunction(G_229, CL_SYSTEM_ARRAY_TO_RAW_STRING);
CL_COMMON_LISP_VECTOR.lisp_name = 'VECTOR'
lisp.setSymbolFunction(G_404, CL_COMMON_LISP_VECTOR);
CL_COMMON_LISP_ADJUSTABLE_ARRAY_P.lisp_name = 'ADJUSTABLE-ARRAY-P'
lisp.setSymbolFunction(G_408, CL_COMMON_LISP_ADJUSTABLE_ARRAY_P);
CL_COMMON_LISP_FILL_POINTER.lisp_name = 'FILL-POINTER'
lisp.setSymbolFunction(G_412, CL_COMMON_LISP_FILL_POINTER);
TMP_415=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_416;
let L_G_STORE141__275;
let L_G140__274;
let L_ARRAY__272;
let L_FILL_POINTER__271;
L_FILL_POINTER__271=arguments[0];
L_ARRAY__272=arguments[1];
{
L_G140__274=lisp.values1(L_ARRAY__272);
L_G_STORE141__275=lisp.values1(L_FILL_POINTER__271);
TMP_416=lisp.callFunctionWithCallStack(G_130,L_G_STORE141__275,L_G140__274);
}
return TMP_416;
});
lisp.CL_setSymbolFunction(G_414,TMP_415);
TMP_417=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_425;
let TMP_424;
let TMP_423;
let TMP_422;
let L_STORE137__282;
let TMP_421;
let L_GENSYMS135__281;
let TMP_420;
let TMP_418;
let L_ARGS136__279;
let L_G143__277;
let L_G142__276;
L_G142__276=arguments[0];
{
L_G143__277=lisp.values1(L_G142__276);
{
L_ARGS136__279=lisp.values1(L_G143__277);
{
TMP_418=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_419;
let L_X__280;
L_X__280=arguments[0];
TMP_419=lisp.callFunctionWithCallStack(G_41);
return TMP_419;
});
TMP_420=lisp.callFunctionWithCallStack(G_43,TMP_418,L_ARGS136__279);
L_GENSYMS135__281=lisp.values1(TMP_420);
TMP_421=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE137__282=lisp.values1(TMP_421);
TMP_422=lisp.callFunctionWithCallStack(G_47,L_STORE137__282);
TMP_423=lisp.callFunctionWithCallStack(G_49,G_414,L_STORE137__282,L_GENSYMS135__281);
TMP_424=lisp.callFunctionWithCallStack(G_49,G_412,L_GENSYMS135__281);
TMP_425=lisp.CL_values(L_GENSYMS135__281,L_ARGS136__279,TMP_422,TMP_423,TMP_424);
}
}
}
return TMP_425;
});
lisp.CL_put(G_412,G_37,TMP_417);
TMP_426=lisp.CL_symbolFunction(G_414);
lisp.CL_put(G_412,G_52,TMP_426);
CL_COMMON_LISP_VECTORP.lisp_name = 'VECTORP'
lisp.setSymbolFunction(G_428, CL_COMMON_LISP_VECTORP);
CL_COMMON_LISP_SIMPLE_VECTOR_P.lisp_name = 'SIMPLE-VECTOR-P'
lisp.setSymbolFunction(G_434, CL_COMMON_LISP_SIMPLE_VECTOR_P);
CL_COMMON_LISP_SIMPLE_BIT_VECTOR_P.lisp_name = 'SIMPLE-BIT-VECTOR-P'
lisp.setSymbolFunction(G_444, CL_COMMON_LISP_SIMPLE_BIT_VECTOR_P);
CL_COMMON_LISP_ARRAY_HAS_FILL_POINTER_P.lisp_name = 'ARRAY-HAS-FILL-POINTER-P'
lisp.setSymbolFunction(G_441, CL_COMMON_LISP_ARRAY_HAS_FILL_POINTER_P);
CL_COMMON_LISP_ARRAY_DIMENSION.lisp_name = 'ARRAY-DIMENSION'
lisp.setSymbolFunction(G_451, CL_COMMON_LISP_ARRAY_DIMENSION);
CL_COMMON_LISP_ARRAY_DISPLACEMENT.lisp_name = 'ARRAY-DISPLACEMENT'
lisp.setSymbolFunction(G_456, CL_COMMON_LISP_ARRAY_DISPLACEMENT);
CL_COMMON_LISP_SUBSCRIPTS_ERROR.lisp_name = 'SUBSCRIPTS-ERROR'
lisp.setSymbolFunction(G_464, CL_COMMON_LISP_SUBSCRIPTS_ERROR);
CL_COMMON_LISP_PERCENTARRAY_ROW_MAJOR_INDEX.lisp_name = '%ARRAY-ROW-MAJOR-INDEX'
lisp.setSymbolFunction(G_467, CL_COMMON_LISP_PERCENTARRAY_ROW_MAJOR_INDEX);
CL_COMMON_LISP_ARRAY_ROW_MAJOR_INDEX.lisp_name = 'ARRAY-ROW-MAJOR-INDEX'
lisp.setSymbolFunction(G_496, CL_COMMON_LISP_ARRAY_ROW_MAJOR_INDEX);
CL_COMMON_LISP_ARRAY_IN_BOUNDS_P.lisp_name = 'ARRAY-IN-BOUNDS-P'
lisp.setSymbolFunction(G_499, CL_COMMON_LISP_ARRAY_IN_BOUNDS_P);
CL_COMMON_LISP_AREF.lisp_name = 'AREF'
lisp.setSymbolFunction(G_503, CL_COMMON_LISP_AREF);
CL_SYSTEM_PERCENTVECTOR_REF.lisp_name = '%VECTOR-REF'
lisp.setSymbolFunction(G_509, CL_SYSTEM_PERCENTVECTOR_REF);
CL_COMMON_LISP_PERCENTSTRING_SET.lisp_name = '%STRING-SET'
lisp.setSymbolFunction(G_513, CL_COMMON_LISP_PERCENTSTRING_SET);
TMP_529=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_542;
let TMP_541;
let TMP_540;
let TMP_539;
let TMP_538;
let TMP_537;
let TMP_536;
let TMP_535;
let TMP_534;
let TMP_533;
let L_G164__341;
let TMP_532;
let TMP_531;
let TMP_530;
let L_SUBSCRIPTS__339;
let L_ARRAY__338;
let L_VALUE__337;
L_VALUE__337=arguments[0];
L_ARRAY__338=arguments[1];
L_SUBSCRIPTS__339=lisp.jsArrayToList(arguments, 2);
TMP_530=G_3.func(L_ARRAY__338);
if(lisp.values1(TMP_530) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_ARRAY__338,G_4);
}
{
TMP_531=G_163.func(L_ARRAY__338);
TMP_532=lisp.CL_eq(TMP_531,G_197);
L_G164__341=lisp.values1(TMP_532);
if(lisp.values1(L_G164__341) !== lisp.S_nil){
if(lisp.values1(L_SUBSCRIPTS__339) !== lisp.S_nil){
TMP_535=lisp.callFunctionWithCallStack(G_252,L_SUBSCRIPTS__339);
TMP_536=lisp.callFunctionWithCallStack(G_242,TMP_535);
TMP_534=lisp.values1(TMP_536);
}else{
TMP_534=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_534) !== lisp.S_nil){
}else{
TMP_537=lisp.callFunctionWithCallStack(G_213,L_SUBSCRIPTS__339);
G_464.func(TMP_537,1);
}
TMP_538=lisp.callFunctionWithCallStack(G_217,L_SUBSCRIPTS__339);
TMP_539=G_513.func(L_ARRAY__338,TMP_538,L_VALUE__337);
TMP_533=TMP_539;
}else{
TMP_540=G_28.func(L_ARRAY__338);
TMP_541=G_467.func(L_ARRAY__338,L_SUBSCRIPTS__339,G_204);
TMP_542=lisp.callFunctionWithCallStack(G_238,TMP_540,TMP_541,L_VALUE__337);
TMP_533=TMP_542;
}
}
return TMP_533;
});
lisp.CL_setSymbolFunction(G_528,TMP_529);
TMP_543=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_551;
let TMP_550;
let TMP_549;
let TMP_548;
let L_STORE161__349;
let TMP_547;
let L_GENSYMS159__348;
let TMP_546;
let TMP_544;
let L_ARGS160__346;
let L_G167__344;
let L_G166__343;
L_G166__343=arguments[0];
{
L_G167__344=lisp.values1(L_G166__343);
{
L_ARGS160__346=lisp.values1(L_G167__344);
{
TMP_544=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_545;
let L_X__347;
L_X__347=arguments[0];
TMP_545=lisp.callFunctionWithCallStack(G_41);
return TMP_545;
});
TMP_546=lisp.callFunctionWithCallStack(G_43,TMP_544,L_ARGS160__346);
L_GENSYMS159__348=lisp.values1(TMP_546);
TMP_547=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE161__349=lisp.values1(TMP_547);
TMP_548=lisp.callFunctionWithCallStack(G_47,L_STORE161__349);
TMP_549=lisp.callFunctionWithCallStack(G_49,G_528,L_STORE161__349,L_GENSYMS159__348);
TMP_550=lisp.callFunctionWithCallStack(G_49,G_503,L_GENSYMS159__348);
TMP_551=lisp.CL_values(L_GENSYMS159__348,L_ARGS160__346,TMP_548,TMP_549,TMP_550);
}
}
}
return TMP_551;
});
lisp.CL_put(G_503,G_37,TMP_543);
TMP_552=lisp.CL_symbolFunction(G_528);
lisp.CL_put(G_503,G_52,TMP_552);
CL_COMMON_LISP_ROW_MAJOR_AREF.lisp_name = 'ROW-MAJOR-AREF'
lisp.setSymbolFunction(G_324, CL_COMMON_LISP_ROW_MAJOR_AREF);
TMP_564=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_577;
let TMP_576;
let TMP_575;
let TMP_574;
let L_G179__364;
let TMP_573;
let TMP_572;
let TMP_571;
let L_G178__363;
let TMP_570;
let TMP_569;
let TMP_568;
let L_G176__361;
let TMP_567;
let TMP_566;
let TMP_565;
let L_INDEX__359;
let L_ARRAY__358;
let L_VALUE__357;
L_VALUE__357=arguments[0];
L_ARRAY__358=arguments[1];
L_INDEX__359=arguments[2];
TMP_565=G_3.func(L_ARRAY__358);
if(lisp.values1(TMP_565) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_31,L_ARRAY__358,G_4);
}
{
TMP_566=G_163.func(L_ARRAY__358);
TMP_567=lisp.CL_eq(TMP_566,G_197);
L_G176__361=lisp.values1(TMP_567);
if(lisp.values1(L_G176__361) !== lisp.S_nil){
TMP_569=G_513.func(L_ARRAY__358,L_INDEX__359,L_VALUE__357);
TMP_568=TMP_569;
}else{
{
TMP_570=lisp.callFunctionWithCallStack(G_301,L_INDEX__359,0);
L_G178__363=lisp.values1(TMP_570);
if(lisp.values1(L_G178__363) !== lisp.S_nil){
TMP_571=lisp.values1(L_G178__363);
}else{
{
TMP_572=G_73.func(L_ARRAY__358);
TMP_573=lisp.callFunctionWithCallStack(G_357,TMP_572,L_INDEX__359);
L_G179__364=lisp.values1(TMP_573);
if(lisp.values1(L_G179__364) !== lisp.S_nil){
TMP_574=lisp.values1(L_G179__364);
}else{
TMP_574=lisp.values1(lisp.S_nil);
}
}
TMP_571=lisp.values1(lisp.values1(TMP_574));
}
}
if(lisp.values1(lisp.values1(TMP_571)) !== lisp.S_nil){
TMP_575=G_73.func(L_ARRAY__358);
lisp.callFunctionWithCallStack(G_221,G_44.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 105, 110, 100, 101, 120, 32, 126, 68, 32, 102, 111, 114, 32, 126, 83, 44, 32, 115, 104, 111, 117, 108, 100, 32, 98, 101, 32, 97, 32, 110, 111, 110, 45, 110, 101, 103, 97, 116, 105, 118, 101, 32, 105, 110, 116, 101, 103, 101, 114, 32, 98, 101, 108, 111, 119, 32, 126, 68, 46])),L_INDEX__359,L_ARRAY__358,TMP_575);
}else{
}
TMP_576=G_28.func(L_ARRAY__358);
TMP_577=lisp.callFunctionWithCallStack(G_238,TMP_576,L_INDEX__359,L_VALUE__357);
TMP_568=TMP_577;
}
}
return TMP_568;
});
lisp.CL_setSymbolFunction(G_563,TMP_564);
TMP_578=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_586;
let TMP_585;
let TMP_584;
let TMP_583;
let L_STORE173__371;
let TMP_582;
let L_GENSYMS171__370;
let TMP_581;
let TMP_579;
let L_ARGS172__368;
let L_G181__366;
let L_G180__365;
L_G180__365=arguments[0];
{
L_G181__366=lisp.values1(L_G180__365);
{
L_ARGS172__368=lisp.values1(L_G181__366);
{
TMP_579=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_580;
let L_X__369;
L_X__369=arguments[0];
TMP_580=lisp.callFunctionWithCallStack(G_41);
return TMP_580;
});
TMP_581=lisp.callFunctionWithCallStack(G_43,TMP_579,L_ARGS172__368);
L_GENSYMS171__370=lisp.values1(TMP_581);
TMP_582=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE173__371=lisp.values1(TMP_582);
TMP_583=lisp.callFunctionWithCallStack(G_47,L_STORE173__371);
TMP_584=lisp.callFunctionWithCallStack(G_49,G_563,L_STORE173__371,L_GENSYMS171__370);
TMP_585=lisp.callFunctionWithCallStack(G_49,G_324,L_GENSYMS171__370);
TMP_586=lisp.CL_values(L_GENSYMS171__370,L_ARGS172__368,TMP_583,TMP_584,TMP_585);
}
}
}
return TMP_586;
});
lisp.CL_put(G_324,G_37,TMP_578);
TMP_587=lisp.CL_symbolFunction(G_563);
lisp.CL_put(G_324,G_52,TMP_587);
CL_COMMON_LISP_VECTOR_POP.lisp_name = 'VECTOR-POP'
lisp.setSymbolFunction(G_589, CL_COMMON_LISP_VECTOR_POP);
CL_COMMON_LISP_VECTOR_PUSH.lisp_name = 'VECTOR-PUSH'
lisp.setSymbolFunction(G_603, CL_COMMON_LISP_VECTOR_PUSH);
CL_COMMON_LISP_VECTOR_PUSH_EXTEND.lisp_name = 'VECTOR-PUSH-EXTEND'
lisp.setSymbolFunction(G_616, CL_COMMON_LISP_VECTOR_PUSH_EXTEND);
CL_COMMON_LISP_SVREF.lisp_name = 'SVREF'
lisp.setSymbolFunction(G_625, CL_COMMON_LISP_SVREF);
TMP_629=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_631;
let TMP_630;
let L_INDEX__404;
let L_VECTOR__403;
let L_VALUE__402;
L_VALUE__402=arguments[0];
L_VECTOR__403=arguments[1];
L_INDEX__404=arguments[2];
TMP_630=G_28.func(L_VECTOR__403);
TMP_631=lisp.callFunctionWithCallStack(G_238,TMP_630,L_INDEX__404,L_VALUE__402);
return TMP_631;
});
lisp.CL_setSymbolFunction(G_628,TMP_629);
TMP_632=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_640;
let TMP_639;
let TMP_638;
let TMP_637;
let L_STORE199__412;
let TMP_636;
let L_GENSYMS197__411;
let TMP_635;
let TMP_633;
let L_ARGS198__409;
let L_G203__407;
let L_G202__406;
L_G202__406=arguments[0];
{
L_G203__407=lisp.values1(L_G202__406);
{
L_ARGS198__409=lisp.values1(L_G203__407);
{
TMP_633=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_634;
let L_X__410;
L_X__410=arguments[0];
TMP_634=lisp.callFunctionWithCallStack(G_41);
return TMP_634;
});
TMP_635=lisp.callFunctionWithCallStack(G_43,TMP_633,L_ARGS198__409);
L_GENSYMS197__411=lisp.values1(TMP_635);
TMP_636=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE199__412=lisp.values1(TMP_636);
TMP_637=lisp.callFunctionWithCallStack(G_47,L_STORE199__412);
TMP_638=lisp.callFunctionWithCallStack(G_49,G_628,L_STORE199__412,L_GENSYMS197__411);
TMP_639=lisp.callFunctionWithCallStack(G_49,G_625,L_GENSYMS197__411);
TMP_640=lisp.CL_values(L_GENSYMS197__411,L_ARGS198__409,TMP_637,TMP_638,TMP_639);
}
}
}
return TMP_640;
});
lisp.CL_put(G_625,G_37,TMP_632);
TMP_641=lisp.CL_symbolFunction(G_628);
lisp.CL_put(G_625,G_52,TMP_641);
CL_COMMON_LISP_BIT.lisp_name = 'BIT'
lisp.setSymbolFunction(G_643, CL_COMMON_LISP_BIT);
TMP_648=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_651;
let TMP_650;
let TMP_649;
let L_SUBSCRIPTS__420;
let L_BIT_ARRAY__419;
let L_BIT__418;
L_BIT__418=arguments[0];
L_BIT_ARRAY__419=arguments[1];
L_SUBSCRIPTS__420=lisp.jsArrayToList(arguments, 2);
TMP_649=G_28.func(L_BIT_ARRAY__419);
TMP_650=G_467.func(L_BIT_ARRAY__419,L_SUBSCRIPTS__420,G_204);
TMP_651=lisp.callFunctionWithCallStack(G_238,TMP_649,TMP_650,L_BIT__418);
return TMP_651;
});
lisp.CL_setSymbolFunction(G_647,TMP_648);
TMP_652=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_660;
let TMP_659;
let TMP_658;
let TMP_657;
let L_STORE207__428;
let TMP_656;
let L_GENSYMS205__427;
let TMP_655;
let TMP_653;
let L_ARGS206__425;
let L_G211__423;
let L_G210__422;
L_G210__422=arguments[0];
{
L_G211__423=lisp.values1(L_G210__422);
{
L_ARGS206__425=lisp.values1(L_G211__423);
{
TMP_653=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_654;
let L_X__426;
L_X__426=arguments[0];
TMP_654=lisp.callFunctionWithCallStack(G_41);
return TMP_654;
});
TMP_655=lisp.callFunctionWithCallStack(G_43,TMP_653,L_ARGS206__425);
L_GENSYMS205__427=lisp.values1(TMP_655);
TMP_656=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE207__428=lisp.values1(TMP_656);
TMP_657=lisp.callFunctionWithCallStack(G_47,L_STORE207__428);
TMP_658=lisp.callFunctionWithCallStack(G_49,G_647,L_STORE207__428,L_GENSYMS205__427);
TMP_659=lisp.callFunctionWithCallStack(G_49,G_643,L_GENSYMS205__427);
TMP_660=lisp.CL_values(L_GENSYMS205__427,L_ARGS206__425,TMP_657,TMP_658,TMP_659);
}
}
}
return TMP_660;
});
lisp.CL_put(G_643,G_37,TMP_652);
TMP_661=lisp.CL_symbolFunction(G_647);
lisp.CL_put(G_643,G_52,TMP_661);
CL_COMMON_LISP_SBIT.lisp_name = 'SBIT'
lisp.setSymbolFunction(G_663, CL_COMMON_LISP_SBIT);
TMP_668=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_671;
let TMP_670;
let TMP_669;
let L_SUBSCRIPTS__436;
let L_BIT_ARRAY__435;
let L_BIT__434;
L_BIT__434=arguments[0];
L_BIT_ARRAY__435=arguments[1];
L_SUBSCRIPTS__436=lisp.jsArrayToList(arguments, 2);
TMP_669=G_28.func(L_BIT_ARRAY__435);
TMP_670=G_467.func(L_BIT_ARRAY__435,L_SUBSCRIPTS__436,G_204);
TMP_671=lisp.callFunctionWithCallStack(G_238,TMP_669,TMP_670,L_BIT__434);
return TMP_671;
});
lisp.CL_setSymbolFunction(G_667,TMP_668);
TMP_672=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_680;
let TMP_679;
let TMP_678;
let TMP_677;
let L_STORE215__444;
let TMP_676;
let L_GENSYMS213__443;
let TMP_675;
let TMP_673;
let L_ARGS214__441;
let L_G219__439;
let L_G218__438;
L_G218__438=arguments[0];
{
L_G219__439=lisp.values1(L_G218__438);
{
L_ARGS214__441=lisp.values1(L_G219__439);
{
TMP_673=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_674;
let L_X__442;
L_X__442=arguments[0];
TMP_674=lisp.callFunctionWithCallStack(G_41);
return TMP_674;
});
TMP_675=lisp.callFunctionWithCallStack(G_43,TMP_673,L_ARGS214__441);
L_GENSYMS213__443=lisp.values1(TMP_675);
TMP_676=lisp.callFunctionWithCallStack(G_41,G_44.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE215__444=lisp.values1(TMP_676);
TMP_677=lisp.callFunctionWithCallStack(G_47,L_STORE215__444);
TMP_678=lisp.callFunctionWithCallStack(G_49,G_667,L_STORE215__444,L_GENSYMS213__443);
TMP_679=lisp.callFunctionWithCallStack(G_49,G_663,L_GENSYMS213__443);
TMP_680=lisp.CL_values(L_GENSYMS213__443,L_ARGS214__441,TMP_677,TMP_678,TMP_679);
}
}
}
return TMP_680;
});
lisp.CL_put(G_663,G_37,TMP_672);
TMP_681=lisp.CL_symbolFunction(G_667);
lisp.CL_put(G_663,G_52,TMP_681);
CL_COMMON_LISP_BIT_AND.lisp_name = 'BIT-AND'
lisp.setSymbolFunction(G_683, CL_COMMON_LISP_BIT_AND);
CL_COMMON_LISP_VECTOR_LENGTH.lisp_name = 'VECTOR-LENGTH'
lisp.setSymbolFunction(G_700, CL_COMMON_LISP_VECTOR_LENGTH);
CL_COMMON_LISP_ARRAY_EQUALP.lisp_name = 'ARRAY-EQUALP'
lisp.setSymbolFunction(G_706, CL_COMMON_LISP_ARRAY_EQUALP);
}catch(TMP_1){G_731.func();
console.log(TMP_1.message);
}


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_5;
let G_6;
let G_8;
let G_12;
let G_13;
let G_14;
let G_15;
let G_18;
let G_20;
let G_23;
let G_25;
let G_29;
let G_31;
let G_34;
let G_42;
let G_48;
let G_54;
let G_56;
let G_57;
let G_67;
let G_70;
let G_72;
let G_74;
let G_76;
let G_83;
let G_91;
let G_92;
let G_96;
let G_100;
let G_101;
let G_108;
let G_109;
let G_113;
let G_117;
let G_121;
let G_125;
let G_129;
let G_133;
let G_135;
let G_137;
let G_139;
let G_142;
let G_146;
let G_159;
let G_160;
let G_165;
let G_168;
let G_172;
let G_177;
let G_186;
let G_190;
let G_203;
let G_206;
let G_212;
let G_219;
let G_226;
let G_229;
let G_232;
let G_238;
let G_241;
let G_244;
let G_246;
let G_247;
let G_250;
let G_252;
let CL_COMMON_LISP_NAME_CHAR;
let CL_COMMON_LISP_CHAR_NAME;
let CL_COMMON_LISP_BOTH_CASE_P;
let CL_COMMON_LISP_LOWER_CASE_P;
let CL_COMMON_LISP_UPPER_CASE_P;
let CL_COMMON_LISP_STANDARD_CHAR_P;
let CL_COMMON_LISP_GRAPHIC_CHAR_P;
let CL_COMMON_LISP_ALPHANUMERICP;
let CL_COMMON_LISP_CHAR_INT;
let CL_COMMON_LISP_DIGIT_CHAR;
let CL_COMMON_LISP_ALPHA_CHAR_P;
let CL_COMMON_LISP_CHARACTER;
let CL_COMMON_LISP_CHAR_NOT_EQUAL;
let CL_COMMON_LISP_CHARSLASHEQUAL;
let CL_COMMON_LISP_CHAR_NOT_GREATERP;
let CL_COMMON_LISP_CHAR_NOT_LESSP;
let CL_COMMON_LISP_CHAR_GREATERP;
let CL_COMMON_LISP_CHAR_LESSP;
let CL_COMMON_LISP_CHAR_EQUAL;
let CL_COMMON_LISP_CHARGREATEREQUAL;
let CL_COMMON_LISP_CHARLESSEQUAL;
let CL_COMMON_LISP_CHARGREATER;
let CL_COMMON_LISP_CHARLESS;
let CL_COMMON_LISP_CHAREQUAL;
let CL_COMMON_LISP_CHAR_CMP;
let CL_COMMON_LISP_CHAR_CMP_IGNORE_CASE;
let CL_COMMON_LISP_DIGIT_CHAR_P;
let CL_COMMON_LISP_PERCENTDIGIT_CHAR_TO_DIGIT;
let CL_COMMON_LISP_PERCENTALPHA_TO_DIGIT;
let CL_COMMON_LISP_CHAR_UPCASE;
let CL_COMMON_LISP_CHAR_DOWNCASE;
let CL_COMMON_LISP_CHAR_CODE;
let CL_COMMON_LISP_CODE_CHAR;
// toplevel defun
let F_CODE_CHAR_7;
F_CODE_CHAR_7=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_8, arguments.length);
}
let TMP_16;
let TMP_11;
let TMP_10;
let TMP_9;
let L_CODE__1;
L_CODE__1=arguments[0];
TMP_9=lisp.CL_integerp(L_CODE__1);
if(lisp.values1(TMP_9) !== lisp.S_nil){
TMP_11=lisp.callFunctionWithCallStack(G_12,0,L_CODE__1);
TMP_10=lisp.values1(TMP_11);
}else{
TMP_10=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_10) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_15,L_CODE__1,lisp.makeCons(G_13, lisp.makeCons(0, lisp.makeCons(G_14, lisp.S_nil))));
}
TMP_16=lisp.CL_codeChar(L_CODE__1);
return TMP_16;
});
CL_COMMON_LISP_CODE_CHAR=lisp.values1(F_CODE_CHAR_7);
let F_CHAR_CODE_17;
F_CHAR_CODE_17=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_18, arguments.length);
}
let TMP_21;
let TMP_19;
let L_CHAR__3;
L_CHAR__3=arguments[0];
TMP_19=lisp.CL_characterp(L_CHAR__3);
if(lisp.values1(TMP_19) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_15,L_CHAR__3,G_20);
}
TMP_21=lisp.CL_charCode(L_CHAR__3);
return TMP_21;
});
CL_COMMON_LISP_CHAR_CODE=lisp.values1(F_CHAR_CODE_17);
let F_CHAR_DOWNCASE_22;
F_CHAR_DOWNCASE_22=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_23, arguments.length);
}
let TMP_32;
let TMP_30;
let TMP_28;
let TMP_27;
let TMP_26;
let TMP_24;
let L_CHAR__5;
L_CHAR__5=arguments[0];
TMP_24=G_25.func(lisp.makeCharacter(65),L_CHAR__5,lisp.makeCharacter(90));
if(lisp.values1(TMP_24) !== lisp.S_nil){
TMP_27=G_18.func(L_CHAR__5);
TMP_28=lisp.callFunctionWithCallStack(G_29,TMP_27,65);
TMP_30=lisp.callFunctionWithCallStack(G_31,TMP_28,97);
TMP_32=G_8.func(TMP_30);
TMP_26=TMP_32;
}else{
TMP_26=lisp.values1(L_CHAR__5);
}
return TMP_26;
});
CL_COMMON_LISP_CHAR_DOWNCASE=lisp.values1(F_CHAR_DOWNCASE_22);
let F_CHAR_UPCASE_33;
F_CHAR_UPCASE_33=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_34, arguments.length);
}
let TMP_40;
let TMP_39;
let TMP_38;
let TMP_37;
let TMP_36;
let TMP_35;
let L_CHAR__7;
L_CHAR__7=arguments[0];
TMP_35=G_25.func(lisp.makeCharacter(97),L_CHAR__7,lisp.makeCharacter(122));
if(lisp.values1(TMP_35) !== lisp.S_nil){
TMP_37=G_18.func(L_CHAR__7);
TMP_38=lisp.callFunctionWithCallStack(G_29,TMP_37,97);
TMP_39=lisp.callFunctionWithCallStack(G_31,TMP_38,65);
TMP_40=G_8.func(TMP_39);
TMP_36=TMP_40;
}else{
TMP_36=lisp.values1(L_CHAR__7);
}
return TMP_36;
});
CL_COMMON_LISP_CHAR_UPCASE=lisp.values1(F_CHAR_UPCASE_33);
let F_PERCENTALPHA_TO_DIGIT_41;
F_PERCENTALPHA_TO_DIGIT_41=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_42, arguments.length);
}
let TMP_46;
let TMP_45;
let TMP_44;
let TMP_43;
let L_CHAR__9;
L_CHAR__9=arguments[0];
TMP_43=G_23.func(L_CHAR__9);
TMP_44=G_18.func(TMP_43);
TMP_45=lisp.callFunctionWithCallStack(G_29,TMP_44,97);
TMP_46=lisp.callFunctionWithCallStack(G_31,10,TMP_45);
return TMP_46;
});
CL_COMMON_LISP_PERCENTALPHA_TO_DIGIT=lisp.values1(F_PERCENTALPHA_TO_DIGIT_41);
let F_PERCENTDIGIT_CHAR_TO_DIGIT_47;
F_PERCENTDIGIT_CHAR_TO_DIGIT_47=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_48, arguments.length);
}
let TMP_52;
let TMP_51;
let TMP_50;
let TMP_49;
let L_CHAR__11;
L_CHAR__11=arguments[0];
TMP_49=G_25.func(lisp.makeCharacter(48),L_CHAR__11,lisp.makeCharacter(57));
if(lisp.values1(TMP_49) !== lisp.S_nil){
TMP_51=G_18.func(L_CHAR__11);
TMP_52=lisp.callFunctionWithCallStack(G_29,TMP_51,48);
TMP_50=TMP_52;
}else{
TMP_50=lisp.values1(lisp.S_nil);
}
return TMP_50;
});
CL_COMMON_LISP_PERCENTDIGIT_CHAR_TO_DIGIT=lisp.values1(F_PERCENTDIGIT_CHAR_TO_DIGIT_47);
let F_DIGIT_CHAR_P_53;
F_DIGIT_CHAR_P_53=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_54, arguments.length);
}
let TMP_68;
let TMP_66;
let TMP_65;
let L_DIGIT__18;
let TMP_64;
let TMP_63;
let TMP_62;
let TMP_61;
let L_G1__17;
let TMP_60;
let TMP_59;
let L_G0__16;
let TMP_58;
let TMP_55;
let L_RADIX__14;
let L_CHAR__13;
L_CHAR__13=arguments[0];
L_RADIX__14=arguments.length > 1 ? arguments[1] : (lisp.values1(10));
TMP_55=lisp.callFunctionWithCallStack(G_12,2,L_RADIX__14,36);
if(lisp.values1(TMP_55) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_57,G_6.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),lisp.makeCons(G_12, lisp.makeCons(2, lisp.makeCons(G_56, lisp.makeCons(36, lisp.S_nil)))));
}
{
{
TMP_58=G_25.func(lisp.makeCharacter(97),L_CHAR__13,lisp.makeCharacter(122));
L_G0__16=lisp.values1(TMP_58);
if(lisp.values1(L_G0__16) !== lisp.S_nil){
TMP_59=lisp.values1(L_G0__16);
}else{
{
TMP_60=G_25.func(lisp.makeCharacter(65),L_CHAR__13,lisp.makeCharacter(90));
L_G1__17=lisp.values1(TMP_60);
if(lisp.values1(L_G1__17) !== lisp.S_nil){
TMP_61=lisp.values1(L_G1__17);
}else{
TMP_61=lisp.values1(lisp.S_nil);
}
}
TMP_59=lisp.values1(lisp.values1(TMP_61));
}
}
if(lisp.values1(lisp.values1(TMP_59)) !== lisp.S_nil){
TMP_63=G_42.func(L_CHAR__13);
TMP_62=lisp.values1(TMP_63);
}else{
TMP_64=G_48.func(L_CHAR__13);
TMP_62=lisp.values1(TMP_64);
}
L_DIGIT__18=lisp.values1(TMP_62);
if(lisp.values1(L_DIGIT__18) !== lisp.S_nil){
TMP_66=lisp.callFunctionWithCallStack(G_67,-1,L_DIGIT__18,L_RADIX__14);
TMP_65=lisp.values1(TMP_66);
}else{
TMP_65=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_65) !== lisp.S_nil){
TMP_68=lisp.values1(L_DIGIT__18);
}else{
TMP_68=lisp.values1(lisp.S_nil);
}
}
return TMP_68;
});
CL_COMMON_LISP_DIGIT_CHAR_P=lisp.values1(F_DIGIT_CHAR_P_53);
let F_CHAR_CMP_IGNORE_CASE_69;
F_CHAR_CMP_IGNORE_CASE_69=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_70, arguments.length);
}
let TMP_81;
let TMP_80;
let TMP_79;
let TMP_78;
let TMP_77;
let TMP_75;
let L_C__25;
let TMP_73;
let TMP_71;
let L_G2__24;
let BLOCK_RESULT_NIL__23;
let L_CHARACTERS__21;
let L_CHARACTER__20;
let L_CMP__19;
L_CMP__19=arguments[0];
L_CHARACTER__20=arguments[1];
L_CHARACTERS__21=arguments[2];
BLOCK_NIL__23: for(;;){{
L_G2__24=lisp.values1(L_CHARACTERS__21);
for(;;){
TMP_71=lisp.callFunctionWithCallStack(G_72,L_G2__24);
if(lisp.values1(TMP_71) !== lisp.S_nil){
}else{
{
TMP_73=lisp.callFunctionWithCallStack(G_74,L_G2__24);
L_C__25=lisp.values1(TMP_73);
TMP_75=lisp.callFunctionWithCallStack(G_76,L_G2__24);
L_G2__24=lisp.values1(TMP_75);
TMP_77=G_34.func(L_CHARACTER__20);
TMP_78=G_18.func(TMP_77);
TMP_79=G_34.func(L_C__25);
TMP_80=G_18.func(TMP_79);
TMP_81=lisp.CL_funcall(lisp.values1(L_CMP__19),TMP_78,TMP_80);
if(lisp.values1(TMP_81) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__23=lisp.values1(lisp.S_nil);
break BLOCK_NIL__23;
}
L_CHARACTER__20=lisp.values1(L_C__25);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__23=lisp.values1(G_4);
break;
}
return BLOCK_RESULT_NIL__23;
});
CL_COMMON_LISP_CHAR_CMP_IGNORE_CASE=lisp.values1(F_CHAR_CMP_IGNORE_CASE_69);
let F_CHAR_CMP_82;
F_CHAR_CMP_82=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_83, arguments.length);
}
let TMP_89;
let TMP_88;
let TMP_87;
let TMP_86;
let L_C__33;
let TMP_85;
let TMP_84;
let L_G9__32;
let BLOCK_RESULT_NIL__31;
let L_CHARACTERS__29;
let L_CHARACTER__28;
let L_CMP__27;
L_CMP__27=arguments[0];
L_CHARACTER__28=arguments[1];
L_CHARACTERS__29=arguments[2];
BLOCK_NIL__31: for(;;){{
L_G9__32=lisp.values1(L_CHARACTERS__29);
for(;;){
TMP_84=lisp.callFunctionWithCallStack(G_72,L_G9__32);
if(lisp.values1(TMP_84) !== lisp.S_nil){
}else{
{
TMP_85=lisp.callFunctionWithCallStack(G_74,L_G9__32);
L_C__33=lisp.values1(TMP_85);
TMP_86=lisp.callFunctionWithCallStack(G_76,L_G9__32);
L_G9__32=lisp.values1(TMP_86);
TMP_87=G_18.func(L_CHARACTER__28);
TMP_88=G_18.func(L_C__33);
TMP_89=lisp.CL_funcall(lisp.values1(L_CMP__27),TMP_87,TMP_88);
if(lisp.values1(TMP_89) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__31=lisp.values1(lisp.S_nil);
break BLOCK_NIL__31;
}
L_CHARACTER__28=lisp.values1(L_C__33);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__31=lisp.values1(G_4);
break;
}
return BLOCK_RESULT_NIL__31;
});
CL_COMMON_LISP_CHAR_CMP=lisp.values1(F_CHAR_CMP_82);
let F_CHAREQUAL_90;
F_CHAREQUAL_90=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_91, arguments.length);
}
let TMP_94;
let TMP_93;
let L_CHARACTERS__36;
let L_CHARACTER__35;
L_CHARACTER__35=arguments[0];
L_CHARACTERS__36=lisp.jsArrayToList(arguments, 1);
TMP_93=lisp.CL_symbolFunction(G_92);
TMP_94=G_83.func(TMP_93,L_CHARACTER__35,L_CHARACTERS__36);
return TMP_94;
});
CL_COMMON_LISP_CHAREQUAL=lisp.values1(F_CHAREQUAL_90);
let F_CHARLESS_95;
F_CHARLESS_95=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_96, arguments.length);
}
let TMP_98;
let TMP_97;
let L_CHARACTERS__39;
let L_CHARACTER__38;
L_CHARACTER__38=arguments[0];
L_CHARACTERS__39=lisp.jsArrayToList(arguments, 1);
TMP_97=lisp.CL_symbolFunction(G_67);
TMP_98=G_83.func(TMP_97,L_CHARACTER__38,L_CHARACTERS__39);
return TMP_98;
});
CL_COMMON_LISP_CHARLESS=lisp.values1(F_CHARLESS_95);
let F_CHARGREATER_99;
F_CHARGREATER_99=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_100, arguments.length);
}
let TMP_103;
let TMP_102;
let L_CHARACTERS__42;
let L_CHARACTER__41;
L_CHARACTER__41=arguments[0];
L_CHARACTERS__42=lisp.jsArrayToList(arguments, 1);
TMP_102=lisp.CL_symbolFunction(G_101);
TMP_103=G_83.func(TMP_102,L_CHARACTER__41,L_CHARACTERS__42);
return TMP_103;
});
CL_COMMON_LISP_CHARGREATER=lisp.values1(F_CHARGREATER_99);
let F_CHARLESSEQUAL_104;
F_CHARLESSEQUAL_104=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_25, arguments.length);
}
let TMP_106;
let TMP_105;
let L_CHARACTERS__45;
let L_CHARACTER__44;
L_CHARACTER__44=arguments[0];
L_CHARACTERS__45=lisp.jsArrayToList(arguments, 1);
TMP_105=lisp.CL_symbolFunction(G_12);
TMP_106=G_83.func(TMP_105,L_CHARACTER__44,L_CHARACTERS__45);
return TMP_106;
});
CL_COMMON_LISP_CHARLESSEQUAL=lisp.values1(F_CHARLESSEQUAL_104);
let F_CHARGREATEREQUAL_107;
F_CHARGREATEREQUAL_107=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_108, arguments.length);
}
let TMP_111;
let TMP_110;
let L_CHARACTERS__48;
let L_CHARACTER__47;
L_CHARACTER__47=arguments[0];
L_CHARACTERS__48=lisp.jsArrayToList(arguments, 1);
TMP_110=lisp.CL_symbolFunction(G_109);
TMP_111=G_83.func(TMP_110,L_CHARACTER__47,L_CHARACTERS__48);
return TMP_111;
});
CL_COMMON_LISP_CHARGREATEREQUAL=lisp.values1(F_CHARGREATEREQUAL_107);
let F_CHAR_EQUAL_112;
F_CHAR_EQUAL_112=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_113, arguments.length);
}
let TMP_115;
let TMP_114;
let L_CHARACTERS__51;
let L_CHARACTER__50;
L_CHARACTER__50=arguments[0];
L_CHARACTERS__51=lisp.jsArrayToList(arguments, 1);
TMP_114=lisp.CL_symbolFunction(G_92);
TMP_115=G_70.func(TMP_114,L_CHARACTER__50,L_CHARACTERS__51);
return TMP_115;
});
CL_COMMON_LISP_CHAR_EQUAL=lisp.values1(F_CHAR_EQUAL_112);
let F_CHAR_LESSP_116;
F_CHAR_LESSP_116=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_117, arguments.length);
}
let TMP_119;
let TMP_118;
let L_CHARACTERS__54;
let L_CHARACTER__53;
L_CHARACTER__53=arguments[0];
L_CHARACTERS__54=lisp.jsArrayToList(arguments, 1);
TMP_118=lisp.CL_symbolFunction(G_67);
TMP_119=G_70.func(TMP_118,L_CHARACTER__53,L_CHARACTERS__54);
return TMP_119;
});
CL_COMMON_LISP_CHAR_LESSP=lisp.values1(F_CHAR_LESSP_116);
let F_CHAR_GREATERP_120;
F_CHAR_GREATERP_120=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_121, arguments.length);
}
let TMP_123;
let TMP_122;
let L_CHARACTERS__57;
let L_CHARACTER__56;
L_CHARACTER__56=arguments[0];
L_CHARACTERS__57=lisp.jsArrayToList(arguments, 1);
TMP_122=lisp.CL_symbolFunction(G_101);
TMP_123=G_70.func(TMP_122,L_CHARACTER__56,L_CHARACTERS__57);
return TMP_123;
});
CL_COMMON_LISP_CHAR_GREATERP=lisp.values1(F_CHAR_GREATERP_120);
let F_CHAR_NOT_LESSP_124;
F_CHAR_NOT_LESSP_124=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_125, arguments.length);
}
let TMP_127;
let TMP_126;
let L_CHARACTERS__60;
let L_CHARACTER__59;
L_CHARACTER__59=arguments[0];
L_CHARACTERS__60=lisp.jsArrayToList(arguments, 1);
TMP_126=lisp.CL_symbolFunction(G_109);
TMP_127=G_70.func(TMP_126,L_CHARACTER__59,L_CHARACTERS__60);
return TMP_127;
});
CL_COMMON_LISP_CHAR_NOT_LESSP=lisp.values1(F_CHAR_NOT_LESSP_124);
let F_CHAR_NOT_GREATERP_128;
F_CHAR_NOT_GREATERP_128=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_129, arguments.length);
}
let TMP_131;
let TMP_130;
let L_CHARACTERS__63;
let L_CHARACTER__62;
L_CHARACTER__62=arguments[0];
L_CHARACTERS__63=lisp.jsArrayToList(arguments, 1);
TMP_130=lisp.CL_symbolFunction(G_12);
TMP_131=G_70.func(TMP_130,L_CHARACTER__62,L_CHARACTERS__63);
return TMP_131;
});
CL_COMMON_LISP_CHAR_NOT_GREATERP=lisp.values1(F_CHAR_NOT_GREATERP_128);
let F_CHARSLASHEQUAL_132;
F_CHARSLASHEQUAL_132=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_133, arguments.length);
}
let L_G22__72;
let L_G24__71;
let TMP_144;
let L_G23__70;
let TMP_143;
let TMP_141;
let TMP_140;
let TMP_138;
let TMP_136;
let TMP_134;
let L_C__69;
let BLOCK_RESULT_NIL__68;
let L_CHARACTERS__66;
let L_CHARACTER__65;
L_CHARACTER__65=arguments[0];
L_CHARACTERS__66=lisp.jsArrayToList(arguments, 1);
BLOCK_NIL__68: for(;;){{
L_C__69=lisp.values1(L_CHARACTER__65);
for(;;){
TMP_134=lisp.callFunctionWithCallStack(G_135,L_CHARACTERS__66);
if(lisp.values1(TMP_134) !== lisp.S_nil){
BLOCK_RESULT_NIL__68=lisp.values1(G_4);
break BLOCK_NIL__68;
}else{
TMP_136=G_18.func(L_C__69);
TMP_138=lisp.CL_symbolFunction(G_92);
TMP_140=lisp.CL_symbolFunction(G_18);
TMP_141=lisp.callFunctionWithCallStack(G_142,TMP_136,L_CHARACTERS__66,G_137,TMP_138,G_139,TMP_140);
if(lisp.values1(TMP_141) !== lisp.S_nil){
BLOCK_RESULT_NIL__68=lisp.values1(lisp.S_nil);
break BLOCK_NIL__68;
}else{
}
{
{
TMP_143=lisp.callFunctionWithCallStack(G_76,L_CHARACTERS__66);
L_G23__70=lisp.values1(TMP_143);
{
TMP_144=lisp.callFunctionWithCallStack(G_74,L_CHARACTERS__66);
L_G24__71=lisp.values1(TMP_144);
L_CHARACTERS__66=lisp.values1(L_G23__70);
}
}
L_G22__72=lisp.values1(lisp.values1(lisp.values1(lisp.values1(L_G24__71))));
L_C__69=lisp.values1(L_G22__72);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__68=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__68;
});
CL_COMMON_LISP_CHARSLASHEQUAL=lisp.values1(F_CHARSLASHEQUAL_132);
let F_CHAR_NOT_EQUAL_145;
F_CHAR_NOT_EQUAL_145=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_146, arguments.length);
}
let L_G31__81;
let L_G33__80;
let TMP_156;
let L_G32__79;
let TMP_155;
let TMP_154;
let TMP_151;
let TMP_150;
let TMP_149;
let TMP_148;
let TMP_147;
let L_C__77;
let BLOCK_RESULT_NIL__76;
let L_CHARACTERS__74;
let L_CHARACTER__73;
L_CHARACTER__73=arguments[0];
L_CHARACTERS__74=lisp.jsArrayToList(arguments, 1);
BLOCK_NIL__76: for(;;){{
L_C__77=lisp.values1(L_CHARACTER__73);
for(;;){
TMP_147=lisp.callFunctionWithCallStack(G_135,L_CHARACTERS__74);
if(lisp.values1(TMP_147) !== lisp.S_nil){
BLOCK_RESULT_NIL__76=lisp.values1(G_4);
break BLOCK_NIL__76;
}else{
TMP_148=G_34.func(L_C__77);
TMP_149=G_18.func(TMP_148);
TMP_150=lisp.CL_symbolFunction(G_92);
TMP_151=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_153;
let TMP_152;
let L_CHAR__78;
L_CHAR__78=arguments[0];
TMP_152=G_34.func(L_CHAR__78);
TMP_153=G_18.func(TMP_152);
return TMP_153;
});
TMP_154=lisp.callFunctionWithCallStack(G_142,TMP_149,L_CHARACTERS__74,G_137,TMP_150,G_139,TMP_151);
if(lisp.values1(TMP_154) !== lisp.S_nil){
BLOCK_RESULT_NIL__76=lisp.values1(lisp.S_nil);
break BLOCK_NIL__76;
}else{
}
{
{
TMP_155=lisp.callFunctionWithCallStack(G_76,L_CHARACTERS__74);
L_G32__79=lisp.values1(TMP_155);
{
TMP_156=lisp.callFunctionWithCallStack(G_74,L_CHARACTERS__74);
L_G33__80=lisp.values1(TMP_156);
L_CHARACTERS__74=lisp.values1(L_G32__79);
}
}
L_G31__81=lisp.values1(lisp.values1(lisp.values1(lisp.values1(L_G33__80))));
L_C__77=lisp.values1(L_G31__81);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__76=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__76;
});
CL_COMMON_LISP_CHAR_NOT_EQUAL=lisp.values1(F_CHAR_NOT_EQUAL_145);
let F_CHARACTER_157;
F_CHARACTER_157=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_20, arguments.length);
}
let TMP_184;
let TMP_183;
let TMP_182;
let TMP_181;
let TMP_180;
let TMP_179;
let TMP_178;
let TMP_176;
let TMP_175;
let L_G36__87;
let TMP_174;
let TMP_173;
let TMP_171;
let TMP_170;
let TMP_169;
let TMP_167;
let TMP_166;
let L_G35__86;
let TMP_164;
let TMP_163;
let L_G34__85;
let TMP_162;
let F_TYPE_ERROR__84;
let TMP_158;
let L_X__82;
L_X__82=arguments[0];
{
TMP_158=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_161;
TMP_161=lisp.callFunctionWithCallStack(G_15,L_X__82,lisp.makeCons(G_159, lisp.makeCons(G_20, lisp.makeCons(lisp.makeCons(G_160, lisp.makeCons(G_20, lisp.makeCons(lisp.makeCons(1, lisp.S_nil), lisp.S_nil))), lisp.S_nil))));
return TMP_161;
});
F_TYPE_ERROR__84=lisp.values1(TMP_158);
{
TMP_162=lisp.CL_characterp(L_X__82);
L_G34__85=lisp.values1(TMP_162);
if(lisp.values1(L_G34__85) !== lisp.S_nil){
TMP_163=lisp.values1(L_X__82);
}else{
{
TMP_164=lisp.callFunctionWithCallStack(G_165,L_X__82);
L_G35__86=lisp.values1(TMP_164);
if(lisp.values1(L_G35__86) !== lisp.S_nil){
TMP_167=lisp.callFunctionWithCallStack(G_168,L_X__82);
TMP_169=lisp.callFunctionWithCallStack(G_92,1,TMP_167);
if(lisp.values1(TMP_169) !== lisp.S_nil){
TMP_171=lisp.callFunctionWithCallStack(G_172,L_X__82,0);
TMP_170=TMP_171;
}else{
TMP_173=F_TYPE_ERROR__84();
TMP_170=TMP_173;
}
TMP_166=TMP_170;
}else{
{
TMP_174=lisp.CL_symbolp(L_X__82);
L_G36__87=lisp.values1(TMP_174);
if(lisp.values1(L_G36__87) !== lisp.S_nil){
TMP_176=lisp.callFunctionWithCallStack(G_177,L_X__82);
TMP_178=lisp.callFunctionWithCallStack(G_168,TMP_176);
TMP_179=lisp.callFunctionWithCallStack(G_92,1,TMP_178);
if(lisp.values1(TMP_179) !== lisp.S_nil){
TMP_181=lisp.callFunctionWithCallStack(G_177,L_X__82);
TMP_182=lisp.callFunctionWithCallStack(G_172,TMP_181,0);
TMP_180=TMP_182;
}else{
TMP_183=F_TYPE_ERROR__84();
TMP_180=TMP_183;
}
TMP_175=TMP_180;
}else{
TMP_184=F_TYPE_ERROR__84();
TMP_175=TMP_184;
}
}
TMP_166=TMP_175;
}
}
TMP_163=TMP_166;
}
}
}
return TMP_163;
});
CL_COMMON_LISP_CHARACTER=lisp.values1(F_CHARACTER_157);
let F_ALPHA_CHAR_P_185;
F_ALPHA_CHAR_P_185=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_186, arguments.length);
}
let TMP_188;
let TMP_187;
let L_C__89;
L_C__89=arguments[0];
TMP_187=G_23.func(L_C__89);
TMP_188=G_25.func(lisp.makeCharacter(97),TMP_187,lisp.makeCharacter(122));
return TMP_188;
});
CL_COMMON_LISP_ALPHA_CHAR_P=lisp.values1(F_ALPHA_CHAR_P_185);
let F_DIGIT_CHAR_189;
F_DIGIT_CHAR_189=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_190, arguments.length);
}
let TMP_201;
let TMP_200;
let TMP_199;
let TMP_198;
let TMP_197;
let TMP_196;
let TMP_195;
let TMP_194;
let TMP_193;
let TMP_192;
let TMP_191;
let L_RADIX__92;
let L_WEIGHT__91;
L_WEIGHT__91=arguments[0];
L_RADIX__92=arguments.length > 1 ? arguments[1] : (lisp.values1(10));
TMP_191=lisp.callFunctionWithCallStack(G_109,L_WEIGHT__91,0);
if(lisp.values1(TMP_191) !== lisp.S_nil){
TMP_193=lisp.callFunctionWithCallStack(G_67,L_WEIGHT__91,L_RADIX__92);
if(lisp.values1(TMP_193) !== lisp.S_nil){
TMP_195=lisp.callFunctionWithCallStack(G_67,L_WEIGHT__91,36);
if(lisp.values1(TMP_195) !== lisp.S_nil){
TMP_197=lisp.callFunctionWithCallStack(G_67,L_WEIGHT__91,10);
if(lisp.values1(TMP_197) !== lisp.S_nil){
TMP_199=lisp.callFunctionWithCallStack(G_31,48,L_WEIGHT__91);
TMP_198=lisp.values1(TMP_199);
}else{
TMP_200=lisp.callFunctionWithCallStack(G_31,55,L_WEIGHT__91);
TMP_198=lisp.values1(TMP_200);
}
TMP_201=G_8.func(TMP_198);
TMP_196=TMP_201;
}else{
TMP_196=lisp.values1(lisp.S_nil);
}
TMP_194=TMP_196;
}else{
TMP_194=lisp.values1(lisp.S_nil);
}
TMP_192=TMP_194;
}else{
TMP_192=lisp.values1(lisp.S_nil);
}
return TMP_192;
});
CL_COMMON_LISP_DIGIT_CHAR=lisp.values1(F_DIGIT_CHAR_189);
let F_CHAR_INT_202;
F_CHAR_INT_202=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_203, arguments.length);
}
let TMP_204;
let L_CHAR__94;
L_CHAR__94=arguments[0];
TMP_204=G_18.func(L_CHAR__94);
return TMP_204;
});
CL_COMMON_LISP_CHAR_INT=lisp.values1(F_CHAR_INT_202);
let F_ALPHANUMERICP_205;
F_ALPHANUMERICP_205=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_206, arguments.length);
}
let TMP_210;
let L_G39__99;
let TMP_209;
let TMP_208;
let L_G38__98;
let TMP_207;
let L_C__96;
L_C__96=arguments[0];
{
TMP_207=G_186.func(L_C__96);
L_G38__98=lisp.values1(TMP_207);
if(lisp.values1(L_G38__98) !== lisp.S_nil){
TMP_208=lisp.values1(L_G38__98);
}else{
{
TMP_209=G_25.func(lisp.makeCharacter(48),L_C__96,lisp.makeCharacter(57));
L_G39__99=lisp.values1(TMP_209);
if(lisp.values1(L_G39__99) !== lisp.S_nil){
TMP_210=lisp.values1(L_G39__99);
}else{
TMP_210=lisp.values1(lisp.S_nil);
}
}
TMP_208=TMP_210;
}
}
return TMP_208;
});
CL_COMMON_LISP_ALPHANUMERICP=lisp.values1(F_ALPHANUMERICP_205);
let F_GRAPHIC_CHAR_P_211;
F_GRAPHIC_CHAR_P_211=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_212, arguments.length);
}
let TMP_217;
let L_G41__103;
let TMP_216;
let TMP_215;
let L_G40__102;
let TMP_214;
let TMP_213;
let L_C__100;
L_C__100=arguments[0];
TMP_213=G_18.func(L_C__100);
L_C__100=lisp.values1(TMP_213);
{
TMP_214=lisp.callFunctionWithCallStack(G_12,32,L_C__100,126);
L_G40__102=lisp.values1(TMP_214);
if(lisp.values1(L_G40__102) !== lisp.S_nil){
TMP_215=lisp.values1(L_G40__102);
}else{
{
TMP_216=lisp.callFunctionWithCallStack(G_12,160,L_C__100);
L_G41__103=lisp.values1(TMP_216);
if(lisp.values1(L_G41__103) !== lisp.S_nil){
TMP_217=lisp.values1(L_G41__103);
}else{
TMP_217=lisp.values1(lisp.S_nil);
}
}
TMP_215=TMP_217;
}
}
return TMP_215;
});
CL_COMMON_LISP_GRAPHIC_CHAR_P=lisp.values1(F_GRAPHIC_CHAR_P_211);
let F_STANDARD_CHAR_P_218;
F_STANDARD_CHAR_P_218=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_219, arguments.length);
}
let TMP_224;
let L_G43__107;
let TMP_223;
let TMP_222;
let L_G42__106;
let TMP_221;
let TMP_220;
let L_C__104;
L_C__104=arguments[0];
TMP_220=G_18.func(L_C__104);
L_C__104=lisp.values1(TMP_220);
{
TMP_221=lisp.callFunctionWithCallStack(G_12,32,L_C__104,126);
L_G42__106=lisp.values1(TMP_221);
if(lisp.values1(L_G42__106) !== lisp.S_nil){
TMP_222=lisp.values1(L_G42__106);
}else{
{
TMP_223=lisp.callFunctionWithCallStack(G_92,L_C__104,10);
L_G43__107=lisp.values1(TMP_223);
if(lisp.values1(L_G43__107) !== lisp.S_nil){
TMP_224=lisp.values1(L_G43__107);
}else{
TMP_224=lisp.values1(lisp.S_nil);
}
}
TMP_222=TMP_224;
}
}
return TMP_222;
});
CL_COMMON_LISP_STANDARD_CHAR_P=lisp.values1(F_STANDARD_CHAR_P_218);
let F_UPPER_CASE_P_225;
F_UPPER_CASE_P_225=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_226, arguments.length);
}
let TMP_227;
let L_C__108;
L_C__108=arguments[0];
TMP_227=G_25.func(lisp.makeCharacter(65),L_C__108,lisp.makeCharacter(90));
return TMP_227;
});
CL_COMMON_LISP_UPPER_CASE_P=lisp.values1(F_UPPER_CASE_P_225);
let F_LOWER_CASE_P_228;
F_LOWER_CASE_P_228=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_229, arguments.length);
}
let TMP_230;
let L_C__110;
L_C__110=arguments[0];
TMP_230=G_25.func(lisp.makeCharacter(97),L_C__110,lisp.makeCharacter(122));
return TMP_230;
});
CL_COMMON_LISP_LOWER_CASE_P=lisp.values1(F_LOWER_CASE_P_228);
let F_BOTH_CASE_P_231;
F_BOTH_CASE_P_231=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_232, arguments.length);
}
let TMP_236;
let L_G45__115;
let TMP_235;
let TMP_234;
let L_G44__114;
let TMP_233;
let L_C__112;
L_C__112=arguments[0];
{
TMP_233=G_226.func(L_C__112);
L_G44__114=lisp.values1(TMP_233);
if(lisp.values1(L_G44__114) !== lisp.S_nil){
TMP_234=lisp.values1(L_G44__114);
}else{
{
TMP_235=G_229.func(L_C__112);
L_G45__115=lisp.values1(TMP_235);
if(lisp.values1(L_G45__115) !== lisp.S_nil){
TMP_236=lisp.values1(L_G45__115);
}else{
TMP_236=lisp.values1(lisp.S_nil);
}
}
TMP_234=TMP_236;
}
}
return TMP_234;
});
CL_COMMON_LISP_BOTH_CASE_P=lisp.values1(F_BOTH_CASE_P_231);
let F_CHAR_NAME_237;
F_CHAR_NAME_237=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_238, arguments.length);
}
let TMP_242;
let TMP_240;
let TMP_239;
let L_C__116;
L_C__116=arguments[0];
TMP_239=lisp.CL_characterp(L_C__116);
if(lisp.values1(TMP_239) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_15,L_C__116,G_20);
}
TMP_240=lisp.callFunctionWithCallStack(G_241,L_C__116,lisp.symbolValue(G_5));
TMP_242=lisp.callFunctionWithCallStack(G_76,TMP_240);
return TMP_242;
});
CL_COMMON_LISP_CHAR_NAME=lisp.values1(F_CHAR_NAME_237);
let F_NAME_CHAR_243;
F_NAME_CHAR_243=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_244, arguments.length);
}
let TMP_251;
let TMP_249;
let TMP_248;
let TMP_245;
let L_NAME__118;
L_NAME__118=arguments[0];
TMP_245=lisp.callFunctionWithCallStack(G_165,L_NAME__118);
if(lisp.values1(TMP_245) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_15,L_NAME__118,G_246);
}
TMP_248=lisp.CL_symbolFunction(G_247);
TMP_249=lisp.callFunctionWithCallStack(G_250,L_NAME__118,lisp.symbolValue(G_5),G_137,TMP_248);
TMP_251=lisp.callFunctionWithCallStack(G_74,TMP_249);
return TMP_251;
});
CL_COMMON_LISP_NAME_CHAR=lisp.values1(F_NAME_CHAR_243);
// initialize symbols
G_2 = lisp.intern('CHAR-CODE-LIMIT', 'COMMON-LISP');
G_3 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_4 = lisp.intern('T', 'COMMON-LISP');
G_5 = lisp.intern('*CHAR-NAME-TABLE*', 'COMMON-LISP');
G_6 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_8 = lisp.intern('CODE-CHAR', 'COMMON-LISP');
G_12 = lisp.intern('<=', 'COMMON-LISP');
G_13 = lisp.intern('INTEGER', 'COMMON-LISP');
G_14 = lisp.intern('*', 'COMMON-LISP');
G_15 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_18 = lisp.intern('CHAR-CODE', 'COMMON-LISP');
G_20 = lisp.intern('CHARACTER', 'COMMON-LISP');
G_23 = lisp.intern('CHAR-DOWNCASE', 'COMMON-LISP');
G_25 = lisp.intern('CHAR<=', 'COMMON-LISP');
G_29 = lisp.intern('-', 'COMMON-LISP');
G_31 = lisp.intern('+', 'COMMON-LISP');
G_34 = lisp.intern('CHAR-UPCASE', 'COMMON-LISP');
G_42 = lisp.intern('%ALPHA-TO-DIGIT', 'COMMON-LISP');
G_48 = lisp.intern('%DIGIT-CHAR-TO-DIGIT', 'COMMON-LISP');
G_54 = lisp.intern('DIGIT-CHAR-P', 'COMMON-LISP');
G_56 = lisp.intern('RADIX', 'COMMON-LISP');
G_57 = lisp.intern('ERROR', 'COMMON-LISP');
G_67 = lisp.intern('<', 'COMMON-LISP');
G_70 = lisp.intern('CHAR-CMP-IGNORE-CASE', 'COMMON-LISP');
G_72 = lisp.intern('ENDP', 'COMMON-LISP');
G_74 = lisp.intern('CAR', 'COMMON-LISP');
G_76 = lisp.intern('CDR', 'COMMON-LISP');
G_83 = lisp.intern('CHAR-CMP', 'COMMON-LISP');
G_91 = lisp.intern('CHAR=', 'COMMON-LISP');
G_92 = lisp.intern('=', 'COMMON-LISP');
G_96 = lisp.intern('CHAR<', 'COMMON-LISP');
G_100 = lisp.intern('CHAR>', 'COMMON-LISP');
G_101 = lisp.intern('>', 'COMMON-LISP');
G_108 = lisp.intern('CHAR>=', 'COMMON-LISP');
G_109 = lisp.intern('>=', 'COMMON-LISP');
G_113 = lisp.intern('CHAR-EQUAL', 'COMMON-LISP');
G_117 = lisp.intern('CHAR-LESSP', 'COMMON-LISP');
G_121 = lisp.intern('CHAR-GREATERP', 'COMMON-LISP');
G_125 = lisp.intern('CHAR-NOT-LESSP', 'COMMON-LISP');
G_129 = lisp.intern('CHAR-NOT-GREATERP', 'COMMON-LISP');
G_133 = lisp.intern('CHAR/=', 'COMMON-LISP');
G_135 = lisp.intern('NULL', 'COMMON-LISP');
G_137 = lisp.intern('TEST', 'KEYWORD');
G_139 = lisp.intern('KEY', 'KEYWORD');
G_142 = lisp.intern('MEMBER', 'COMMON-LISP');
G_146 = lisp.intern('CHAR-NOT-EQUAL', 'COMMON-LISP');
G_159 = lisp.intern('OR', 'COMMON-LISP');
G_160 = lisp.intern('ARRAY', 'COMMON-LISP');
G_165 = lisp.intern('STRINGP', 'COMMON-LISP');
G_168 = lisp.intern('LENGTH', 'COMMON-LISP');
G_172 = lisp.intern('CHAR', 'COMMON-LISP');
G_177 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_186 = lisp.intern('ALPHA-CHAR-P', 'COMMON-LISP');
G_190 = lisp.intern('DIGIT-CHAR', 'COMMON-LISP');
G_203 = lisp.intern('CHAR-INT', 'COMMON-LISP');
G_206 = lisp.intern('ALPHANUMERICP', 'COMMON-LISP');
G_212 = lisp.intern('GRAPHIC-CHAR-P', 'COMMON-LISP');
G_219 = lisp.intern('STANDARD-CHAR-P', 'COMMON-LISP');
G_226 = lisp.intern('UPPER-CASE-P', 'COMMON-LISP');
G_229 = lisp.intern('LOWER-CASE-P', 'COMMON-LISP');
G_232 = lisp.intern('BOTH-CASE-P', 'COMMON-LISP');
G_238 = lisp.intern('CHAR-NAME', 'COMMON-LISP');
G_241 = lisp.intern('ASSOC', 'COMMON-LISP');
G_244 = lisp.intern('NAME-CHAR', 'COMMON-LISP');
G_246 = lisp.intern('STRING', 'COMMON-LISP');
G_247 = lisp.intern('EQUAL', 'COMMON-LISP');
G_250 = lisp.intern('RASSOC', 'COMMON-LISP');
G_252 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');lisp.CL_set(G_2,1114112);
lisp.CL_put(G_2,G_3,G_4);
lisp.CL_set(G_5,lisp.makeCons(lisp.makeCons(lisp.makeCharacter(10), G_6.func(lisp.codeArrayToString([78, 101, 119, 108, 105, 110, 101]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(32), G_6.func(lisp.codeArrayToString([83, 112, 97, 99, 101]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(127), G_6.func(lisp.codeArrayToString([82, 117, 98, 111, 117, 116]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(12), G_6.func(lisp.codeArrayToString([80, 97, 103, 101]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(9), G_6.func(lisp.codeArrayToString([84, 97, 98]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(8), G_6.func(lisp.codeArrayToString([66, 97, 99, 107, 115, 112, 97, 99, 101]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(13), G_6.func(lisp.codeArrayToString([82, 101, 116, 117, 114, 110]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(10), G_6.func(lisp.codeArrayToString([76, 105, 110, 101, 102, 101, 101, 100]))), lisp.S_nil)))))))));
lisp.CL_put(G_5,G_3,G_4);
CL_COMMON_LISP_CODE_CHAR.lisp_name = 'CODE-CHAR'
lisp.setSymbolFunction(G_8, CL_COMMON_LISP_CODE_CHAR);
CL_COMMON_LISP_CHAR_CODE.lisp_name = 'CHAR-CODE'
lisp.setSymbolFunction(G_18, CL_COMMON_LISP_CHAR_CODE);
CL_COMMON_LISP_CHAR_DOWNCASE.lisp_name = 'CHAR-DOWNCASE'
lisp.setSymbolFunction(G_23, CL_COMMON_LISP_CHAR_DOWNCASE);
CL_COMMON_LISP_CHAR_UPCASE.lisp_name = 'CHAR-UPCASE'
lisp.setSymbolFunction(G_34, CL_COMMON_LISP_CHAR_UPCASE);
CL_COMMON_LISP_PERCENTALPHA_TO_DIGIT.lisp_name = '%ALPHA-TO-DIGIT'
lisp.setSymbolFunction(G_42, CL_COMMON_LISP_PERCENTALPHA_TO_DIGIT);
CL_COMMON_LISP_PERCENTDIGIT_CHAR_TO_DIGIT.lisp_name = '%DIGIT-CHAR-TO-DIGIT'
lisp.setSymbolFunction(G_48, CL_COMMON_LISP_PERCENTDIGIT_CHAR_TO_DIGIT);
CL_COMMON_LISP_DIGIT_CHAR_P.lisp_name = 'DIGIT-CHAR-P'
lisp.setSymbolFunction(G_54, CL_COMMON_LISP_DIGIT_CHAR_P);
CL_COMMON_LISP_CHAR_CMP_IGNORE_CASE.lisp_name = 'CHAR-CMP-IGNORE-CASE'
lisp.setSymbolFunction(G_70, CL_COMMON_LISP_CHAR_CMP_IGNORE_CASE);
CL_COMMON_LISP_CHAR_CMP.lisp_name = 'CHAR-CMP'
lisp.setSymbolFunction(G_83, CL_COMMON_LISP_CHAR_CMP);
CL_COMMON_LISP_CHAREQUAL.lisp_name = 'CHAR='
lisp.setSymbolFunction(G_91, CL_COMMON_LISP_CHAREQUAL);
CL_COMMON_LISP_CHARLESS.lisp_name = 'CHAR<'
lisp.setSymbolFunction(G_96, CL_COMMON_LISP_CHARLESS);
CL_COMMON_LISP_CHARGREATER.lisp_name = 'CHAR>'
lisp.setSymbolFunction(G_100, CL_COMMON_LISP_CHARGREATER);
CL_COMMON_LISP_CHARLESSEQUAL.lisp_name = 'CHAR<='
lisp.setSymbolFunction(G_25, CL_COMMON_LISP_CHARLESSEQUAL);
CL_COMMON_LISP_CHARGREATEREQUAL.lisp_name = 'CHAR>='
lisp.setSymbolFunction(G_108, CL_COMMON_LISP_CHARGREATEREQUAL);
CL_COMMON_LISP_CHAR_EQUAL.lisp_name = 'CHAR-EQUAL'
lisp.setSymbolFunction(G_113, CL_COMMON_LISP_CHAR_EQUAL);
CL_COMMON_LISP_CHAR_LESSP.lisp_name = 'CHAR-LESSP'
lisp.setSymbolFunction(G_117, CL_COMMON_LISP_CHAR_LESSP);
CL_COMMON_LISP_CHAR_GREATERP.lisp_name = 'CHAR-GREATERP'
lisp.setSymbolFunction(G_121, CL_COMMON_LISP_CHAR_GREATERP);
CL_COMMON_LISP_CHAR_NOT_LESSP.lisp_name = 'CHAR-NOT-LESSP'
lisp.setSymbolFunction(G_125, CL_COMMON_LISP_CHAR_NOT_LESSP);
CL_COMMON_LISP_CHAR_NOT_GREATERP.lisp_name = 'CHAR-NOT-GREATERP'
lisp.setSymbolFunction(G_129, CL_COMMON_LISP_CHAR_NOT_GREATERP);
CL_COMMON_LISP_CHARSLASHEQUAL.lisp_name = 'CHAR/='
lisp.setSymbolFunction(G_133, CL_COMMON_LISP_CHARSLASHEQUAL);
CL_COMMON_LISP_CHAR_NOT_EQUAL.lisp_name = 'CHAR-NOT-EQUAL'
lisp.setSymbolFunction(G_146, CL_COMMON_LISP_CHAR_NOT_EQUAL);
CL_COMMON_LISP_CHARACTER.lisp_name = 'CHARACTER'
lisp.setSymbolFunction(G_20, CL_COMMON_LISP_CHARACTER);
CL_COMMON_LISP_ALPHA_CHAR_P.lisp_name = 'ALPHA-CHAR-P'
lisp.setSymbolFunction(G_186, CL_COMMON_LISP_ALPHA_CHAR_P);
CL_COMMON_LISP_DIGIT_CHAR.lisp_name = 'DIGIT-CHAR'
lisp.setSymbolFunction(G_190, CL_COMMON_LISP_DIGIT_CHAR);
CL_COMMON_LISP_CHAR_INT.lisp_name = 'CHAR-INT'
lisp.setSymbolFunction(G_203, CL_COMMON_LISP_CHAR_INT);
CL_COMMON_LISP_ALPHANUMERICP.lisp_name = 'ALPHANUMERICP'
lisp.setSymbolFunction(G_206, CL_COMMON_LISP_ALPHANUMERICP);
CL_COMMON_LISP_GRAPHIC_CHAR_P.lisp_name = 'GRAPHIC-CHAR-P'
lisp.setSymbolFunction(G_212, CL_COMMON_LISP_GRAPHIC_CHAR_P);
CL_COMMON_LISP_STANDARD_CHAR_P.lisp_name = 'STANDARD-CHAR-P'
lisp.setSymbolFunction(G_219, CL_COMMON_LISP_STANDARD_CHAR_P);
CL_COMMON_LISP_UPPER_CASE_P.lisp_name = 'UPPER-CASE-P'
lisp.setSymbolFunction(G_226, CL_COMMON_LISP_UPPER_CASE_P);
CL_COMMON_LISP_LOWER_CASE_P.lisp_name = 'LOWER-CASE-P'
lisp.setSymbolFunction(G_229, CL_COMMON_LISP_LOWER_CASE_P);
CL_COMMON_LISP_BOTH_CASE_P.lisp_name = 'BOTH-CASE-P'
lisp.setSymbolFunction(G_232, CL_COMMON_LISP_BOTH_CASE_P);
CL_COMMON_LISP_CHAR_NAME.lisp_name = 'CHAR-NAME'
lisp.setSymbolFunction(G_238, CL_COMMON_LISP_CHAR_NAME);
CL_COMMON_LISP_NAME_CHAR.lisp_name = 'NAME-CHAR'
lisp.setSymbolFunction(G_244, CL_COMMON_LISP_NAME_CHAR);
}catch(TMP_1){G_252.func();
console.log(TMP_1.message);
}


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_7;
let G_9;
let G_12;
let G_19;
let G_21;
let G_23;
let G_29;
let G_31;
let G_33;
let G_37;
let G_38;
let G_40;
let G_42;
let G_46;
let G_49;
let G_52;
let G_54;
let G_56;
let G_58;
let G_61;
let G_62;
let G_64;
let G_69;
let G_71;
let G_78;
let G_81;
let G_89;
let G_102;
let G_112;
let G_118;
let G_120;
let G_121;
let G_123;
let G_125;
let G_127;
let G_130;
let G_132;
let G_133;
let G_135;
let G_137;
let G_139;
let G_141;
let G_153;
let G_165;
let G_181;
let G_186;
let G_188;
let G_190;
let G_193;
let G_195;
let G_201;
let G_207;
let G_212;
let G_217;
let G_233;
let G_235;
let G_241;
let G_242;
let G_244;
let G_246;
let G_248;
let G_254;
let G_264;
let G_268;
let G_281;
let G_294;
let G_307;
let G_320;
let G_329;
let G_342;
let G_355;
let G_368;
let G_381;
let G_394;
let G_396;
let G_400;
let G_404;
let G_406;
let G_409;
let G_411;
let G_414;
let G_417;
let G_419;
let G_434;
let G_435;
let G_441;
let CL_COMMON_LISP_MAKE_STRING;
let CL_COMMON_LISP_SCHAR;
let CL_COMMON_LISP_CHAR;
let CL_COMMON_LISP_STRING_NOT_LESSP;
let CL_COMMON_LISP_STRING_LESSP;
let CL_COMMON_LISP_STRING_NOT_GREATERP;
let CL_COMMON_LISP_STRING_GREATERP;
let CL_COMMON_LISP_STRING_NOT_EQUAL;
let CL_COMMON_LISP_STRING_EQUAL;
let CL_COMMON_LISP_STRINGGREATEREQUAL;
let CL_COMMON_LISP_STRINGLESSEQUAL;
let CL_COMMON_LISP_STRINGGREATER;
let CL_COMMON_LISP_STRINGLESS;
let CL_COMMON_LISP_STRINGSLASHEQUAL;
let CL_COMMON_LISP_STRINGEQUAL;
let CL_COMMON_LISP_STRING_CMP;
let CL_COMMON_LISP_STRING_RIGHT_TRIM;
let CL_COMMON_LISP_STRING_LEFT_TRIM;
let CL_COMMON_LISP_STRING_TRIM;
let CL_COMMON_LISP_END_POSITION_WITH_BAG;
let CL_COMMON_LISP_START_POSITION_WITH_BAG;
let CL_COMMON_LISP_NSTRING_CAPITALIZE;
let CL_COMMON_LISP_NSTRING_DOWNCASE;
let CL_COMMON_LISP_NSTRING_UPCASE;
let CL_COMMON_LISP_STRING_CAPITALIZE;
let CL_COMMON_LISP_STRING_DOWNCASE;
let CL_COMMON_LISP_STRING_UPCASE;
let CL_SYSTEM_STRING_APPENDSTAR;
let CL_SYSTEM_STRING_APPEND;
let CL_COMMON_LISP_STRING;
let CL_COMMON_LISP_SIMPLE_STRING_P;
let CL_COMMON_LISP_STRINGP;
let TMP_432;
let TMP_423;
let TMP_420;
let TMP_415;
let TMP_401;
let TMP_397;
// toplevel defun
let F_STRINGP_2;
F_STRINGP_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_10;
let TMP_8;
let TMP_6;
let TMP_4;
let L_X__1;
L_X__1=arguments[0];
TMP_4=lisp.callFunctionWithCallStack(G_5,L_X__1);
if(lisp.values1(TMP_4) !== lisp.S_nil){
TMP_8=lisp.callFunctionWithCallStack(G_9,L_X__1);
TMP_10=lisp.CL_eq(G_7,TMP_8);
TMP_6=TMP_10;
}else{
TMP_6=lisp.values1(lisp.S_nil);
}
return TMP_6;
});
CL_COMMON_LISP_STRINGP=lisp.values1(F_STRINGP_2);
let F_SIMPLE_STRING_P_11;
F_SIMPLE_STRING_P_11=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_12, arguments.length);
}
let TMP_20;
let TMP_18;
let TMP_17;
let TMP_16;
let TMP_15;
let TMP_14;
let TMP_13;
let L_X__3;
L_X__3=arguments[0];
TMP_13=lisp.callFunctionWithCallStack(G_5,L_X__3);
if(lisp.values1(TMP_13) !== lisp.S_nil){
TMP_15=lisp.callFunctionWithCallStack(G_9,L_X__3);
TMP_16=lisp.CL_eq(G_7,TMP_15);
if(lisp.values1(TMP_16) !== lisp.S_nil){
TMP_18=lisp.callFunctionWithCallStack(G_19,L_X__3);
TMP_20=lisp.callFunctionWithCallStack(G_21,TMP_18);
TMP_17=TMP_20;
}else{
TMP_17=lisp.values1(lisp.S_nil);
}
TMP_14=TMP_17;
}else{
TMP_14=lisp.values1(lisp.S_nil);
}
return TMP_14;
});
CL_COMMON_LISP_SIMPLE_STRING_P=lisp.values1(F_SIMPLE_STRING_P_11);
let F_STRING_22;
F_STRING_22=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_23, arguments.length);
}
let TMP_39;
let TMP_36;
let TMP_35;
let L_G2__9;
let TMP_34;
let TMP_32;
let TMP_30;
let TMP_28;
let TMP_27;
let L_G1__8;
let TMP_26;
let TMP_25;
let L_G0__7;
let TMP_24;
let L_X__5;
L_X__5=arguments[0];
{
TMP_24=G_3.func(L_X__5);
L_G0__7=lisp.values1(TMP_24);
if(lisp.values1(L_G0__7) !== lisp.S_nil){
TMP_25=lisp.values1(L_X__5);
}else{
{
TMP_26=lisp.CL_characterp(L_X__5);
L_G1__8=lisp.values1(TMP_26);
if(lisp.values1(L_G1__8) !== lisp.S_nil){
TMP_28=lisp.callFunctionWithCallStack(G_29,L_X__5);
TMP_30=lisp.callFunctionWithCallStack(G_31,TMP_28);
TMP_32=lisp.callFunctionWithCallStack(G_33,TMP_30);
TMP_27=TMP_32;
}else{
{
TMP_34=lisp.CL_symbolp(L_X__5);
L_G2__9=lisp.values1(TMP_34);
if(lisp.values1(L_G2__9) !== lisp.S_nil){
TMP_36=lisp.callFunctionWithCallStack(G_37,L_X__5);
TMP_35=TMP_36;
}else{
TMP_39=lisp.callFunctionWithCallStack(G_40,L_X__5,G_38);
TMP_35=TMP_39;
}
}
TMP_27=TMP_35;
}
}
TMP_25=TMP_27;
}
}
return TMP_25;
});
CL_COMMON_LISP_STRING=lisp.values1(F_STRING_22);
let F_STRING_APPEND_41;
F_STRING_APPEND_41=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_42, arguments.length);
}
let TMP_50;
let TMP_48;
let TMP_47;
let TMP_45;
let TMP_44;
let TMP_43;
let L_Y__12;
let L_X__11;
L_X__11=arguments[0];
L_Y__12=arguments[1];
TMP_43=G_3.func(L_X__11);
if(lisp.values1(TMP_43) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_40,L_X__11,G_23);
}
TMP_44=G_3.func(L_Y__12);
if(lisp.values1(TMP_44) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_40,L_Y__12,G_23);
}
TMP_45=lisp.callFunctionWithCallStack(G_46,L_X__11);
TMP_47=lisp.callFunctionWithCallStack(G_46,L_Y__12);
TMP_48=lisp.callFunctionWithCallStack(G_49,TMP_45,TMP_47);
TMP_50=lisp.callFunctionWithCallStack(G_33,TMP_48);
return TMP_50;
});
CL_SYSTEM_STRING_APPEND=lisp.values1(F_STRING_APPEND_41);
let F_STRING_APPENDSTAR_51;
F_STRING_APPENDSTAR_51=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_52, arguments.length);
}
let TMP_59;
let TMP_57;
let L_S__19;
let TMP_55;
let TMP_53;
let L_G4__18;
let L_STRINGS__15;
let L_STRING__14;
L_STRING__14=arguments[0];
L_STRINGS__15=lisp.jsArrayToList(arguments, 1);
{
L_G4__18=lisp.values1(L_STRINGS__15);
for(;;){
TMP_53=lisp.callFunctionWithCallStack(G_54,L_G4__18);
if(lisp.values1(TMP_53) !== lisp.S_nil){
}else{
{
TMP_55=lisp.callFunctionWithCallStack(G_56,L_G4__18);
L_S__19=lisp.values1(TMP_55);
TMP_57=lisp.callFunctionWithCallStack(G_58,L_G4__18);
L_G4__18=lisp.values1(TMP_57);
TMP_59=G_42.func(L_STRING__14,L_S__19);
L_STRING__14=lisp.values1(TMP_59);
}
continue;
}
break;
}
}
return lisp.values1(L_STRING__14);
});
CL_SYSTEM_STRING_APPENDSTAR=lisp.values1(F_STRING_APPENDSTAR_51);
let F_STRING_UPCASE_60;
F_STRING_UPCASE_60=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_61, arguments.length);
}
let TMP_87;
let TMP_86;
let TMP_85;
let TMP_84;
let TMP_83;
let TMP_82;
let TMP_80;
let TMP_79;
let TMP_77;
let TMP_76;
let TMP_75;
let TMP_74;
let TMP_73;
let TMP_72;
let TMP_70;
let TMP_68;
let TMP_67;
let L_END__23;
let L_START__22;
let L_STRING__21;
L_STRING__21=arguments[0];
let supplied_START__22;
for (let TMP_63 = 1; TMP_63 < arguments.length; TMP_63 += 2) {
if(arguments[TMP_63] === G_62){
supplied_START__22=arguments[TMP_63+1];
break;
}
}
L_START__22=supplied_START__22 !== undefined ? supplied_START__22 : (lisp.values1(0));
let supplied_END__23;
for (let TMP_65 = 1; TMP_65 < arguments.length; TMP_65 += 2) {
if(arguments[TMP_65] === G_64){
supplied_END__23=arguments[TMP_65+1];
break;
}
}
L_END__23=supplied_END__23 !== undefined ? supplied_END__23 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_66 = 1; TMP_66 < arguments.length; TMP_66 += 2) {
if(arguments[TMP_66]!==G_64 && arguments[TMP_66]!==G_62) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_66].name); }
}
TMP_67=G_23.func(L_STRING__21);
L_STRING__21=lisp.values1(TMP_67);
if(lisp.values1(L_END__23) !== lisp.S_nil){
}else{
TMP_68=lisp.callFunctionWithCallStack(G_69,L_STRING__21);
L_END__23=lisp.values1(TMP_68);
}
TMP_70=lisp.callFunctionWithCallStack(G_71,L_START__22,0);
if(lisp.values1(TMP_70) !== lisp.S_nil){
TMP_73=lisp.callFunctionWithCallStack(G_69,L_STRING__21);
TMP_74=lisp.callFunctionWithCallStack(G_71,L_END__23,TMP_73);
TMP_72=lisp.values1(TMP_74);
}else{
TMP_72=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_72) !== lisp.S_nil){
TMP_76=lisp.callFunctionWithCallStack(G_46,L_STRING__21);
TMP_77=lisp.callFunctionWithCallStack(G_78,TMP_76);
TMP_79=lisp.callFunctionWithCallStack(G_33,TMP_77);
TMP_75=TMP_79;
}else{
TMP_80=lisp.callFunctionWithCallStack(G_81,L_STRING__21,0,L_START__22);
TMP_82=lisp.callFunctionWithCallStack(G_81,L_STRING__21,L_START__22,L_END__23);
TMP_83=lisp.callFunctionWithCallStack(G_46,TMP_82);
TMP_84=lisp.callFunctionWithCallStack(G_78,TMP_83);
TMP_85=lisp.callFunctionWithCallStack(G_33,TMP_84);
TMP_86=lisp.callFunctionWithCallStack(G_81,L_STRING__21,L_END__23);
TMP_87=G_52.func(TMP_80,TMP_85,TMP_86);
TMP_75=TMP_87;
}
return TMP_75;
});
CL_COMMON_LISP_STRING_UPCASE=lisp.values1(F_STRING_UPCASE_60);
let F_STRING_DOWNCASE_88;
F_STRING_DOWNCASE_88=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_89, arguments.length);
}
let TMP_110;
let TMP_109;
let TMP_108;
let TMP_107;
let TMP_106;
let TMP_105;
let TMP_104;
let TMP_103;
let TMP_101;
let TMP_100;
let TMP_99;
let TMP_98;
let TMP_97;
let TMP_96;
let TMP_95;
let TMP_94;
let TMP_93;
let L_END__27;
let L_START__26;
let L_STRING__25;
L_STRING__25=arguments[0];
let supplied_START__26;
for (let TMP_90 = 1; TMP_90 < arguments.length; TMP_90 += 2) {
if(arguments[TMP_90] === G_62){
supplied_START__26=arguments[TMP_90+1];
break;
}
}
L_START__26=supplied_START__26 !== undefined ? supplied_START__26 : (lisp.values1(0));
let supplied_END__27;
for (let TMP_91 = 1; TMP_91 < arguments.length; TMP_91 += 2) {
if(arguments[TMP_91] === G_64){
supplied_END__27=arguments[TMP_91+1];
break;
}
}
L_END__27=supplied_END__27 !== undefined ? supplied_END__27 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_92 = 1; TMP_92 < arguments.length; TMP_92 += 2) {
if(arguments[TMP_92]!==G_64 && arguments[TMP_92]!==G_62) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_92].name); }
}
TMP_93=G_23.func(L_STRING__25);
L_STRING__25=lisp.values1(TMP_93);
if(lisp.values1(L_END__27) !== lisp.S_nil){
}else{
TMP_94=lisp.callFunctionWithCallStack(G_69,L_STRING__25);
L_END__27=lisp.values1(TMP_94);
}
TMP_95=lisp.callFunctionWithCallStack(G_71,L_START__26,0);
if(lisp.values1(TMP_95) !== lisp.S_nil){
TMP_97=lisp.callFunctionWithCallStack(G_69,L_STRING__25);
TMP_98=lisp.callFunctionWithCallStack(G_71,L_END__27,TMP_97);
TMP_96=lisp.values1(TMP_98);
}else{
TMP_96=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_96) !== lisp.S_nil){
TMP_100=lisp.callFunctionWithCallStack(G_46,L_STRING__25);
TMP_101=lisp.callFunctionWithCallStack(G_102,TMP_100);
TMP_103=lisp.callFunctionWithCallStack(G_33,TMP_101);
TMP_99=TMP_103;
}else{
TMP_104=lisp.callFunctionWithCallStack(G_81,L_STRING__25,0,L_START__26);
TMP_105=lisp.callFunctionWithCallStack(G_81,L_STRING__25,L_START__26,L_END__27);
TMP_106=lisp.callFunctionWithCallStack(G_46,TMP_105);
TMP_107=lisp.callFunctionWithCallStack(G_102,TMP_106);
TMP_108=lisp.callFunctionWithCallStack(G_33,TMP_107);
TMP_109=lisp.callFunctionWithCallStack(G_81,L_STRING__25,L_END__27);
TMP_110=G_52.func(TMP_104,TMP_108,TMP_109);
TMP_99=TMP_110;
}
return TMP_99;
});
CL_COMMON_LISP_STRING_DOWNCASE=lisp.values1(F_STRING_DOWNCASE_88);
let F_STRING_CAPITALIZE_111;
F_STRING_CAPITALIZE_111=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_112, arguments.length);
}
let L_G22__43;
let TMP_138;
let L_G21__42;
let L_G20__41;
let TMP_136;
let TMP_134;
let L_G_STORE19__40;
let TMP_131;
let TMP_129;
let TMP_128;
let L_G18__39;
let L_G17__38;
let L_C__37;
let TMP_126;
let TMP_124;
let L_I__36;
let BLOCK_RESULT_NIL__35;
let L_NEW_STRING__34;
let TMP_122;
let TMP_119;
let L_FIRST__33;
let TMP_117;
let TMP_116;
let L_END__31;
let L_START__30;
let L_STRING__29;
L_STRING__29=arguments[0];
let supplied_START__30;
for (let TMP_113 = 1; TMP_113 < arguments.length; TMP_113 += 2) {
if(arguments[TMP_113] === G_62){
supplied_START__30=arguments[TMP_113+1];
break;
}
}
L_START__30=supplied_START__30 !== undefined ? supplied_START__30 : (lisp.values1(0));
let supplied_END__31;
for (let TMP_114 = 1; TMP_114 < arguments.length; TMP_114 += 2) {
if(arguments[TMP_114] === G_64){
supplied_END__31=arguments[TMP_114+1];
break;
}
}
L_END__31=supplied_END__31 !== undefined ? supplied_END__31 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_115 = 1; TMP_115 < arguments.length; TMP_115 += 2) {
if(arguments[TMP_115]!==G_64 && arguments[TMP_115]!==G_62) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_115].name); }
}
TMP_116=G_23.func(L_STRING__29);
L_STRING__29=lisp.values1(TMP_116);
if(lisp.values1(L_END__31) !== lisp.S_nil){
}else{
TMP_117=lisp.callFunctionWithCallStack(G_69,L_STRING__29);
L_END__31=lisp.values1(TMP_117);
}
{
L_FIRST__33=lisp.values1(G_118);
TMP_119=lisp.callFunctionWithCallStack(G_69,L_STRING__29);
TMP_122=lisp.callFunctionWithCallStack(G_123,TMP_119,G_120,G_7,G_121,L_STRING__29);
L_NEW_STRING__34=lisp.values1(TMP_122);
BLOCK_NIL__35: for(;;){{
L_I__36=lisp.values1(L_START__30);
for(;;){
TMP_124=lisp.callFunctionWithCallStack(G_125,L_I__36,L_END__31);
if(lisp.values1(TMP_124) !== lisp.S_nil){
BLOCK_RESULT_NIL__35=lisp.values1(lisp.S_nil);
break BLOCK_NIL__35;
}else{
{
TMP_126=lisp.callFunctionWithCallStack(G_127,L_STRING__29,L_I__36);
L_C__37=lisp.values1(TMP_126);
{
L_G17__38=lisp.values1(L_NEW_STRING__34);
L_G18__39=lisp.values1(L_I__36);
if(lisp.values1(L_FIRST__33) !== lisp.S_nil){
TMP_129=lisp.callFunctionWithCallStack(G_130,L_C__37);
TMP_128=lisp.values1(TMP_129);
}else{
TMP_131=lisp.callFunctionWithCallStack(G_132,L_C__37);
TMP_128=lisp.values1(TMP_131);
}
L_G_STORE19__40=lisp.values1(TMP_128);
lisp.callFunctionWithCallStack(G_133,L_G_STORE19__40,L_G17__38,L_G18__39);
}
{
TMP_134=lisp.callFunctionWithCallStack(G_135,L_C__37);
TMP_136=lisp.callFunctionWithCallStack(G_137,TMP_134);
L_G20__41=lisp.values1(TMP_136);
if(lisp.values1(L_G20__41) !== lisp.S_nil){
L_FIRST__33=lisp.values1(G_118);
}else{
{
L_G21__42=lisp.values1(L_FIRST__33);
if(lisp.values1(L_G21__42) !== lisp.S_nil){
L_FIRST__33=lisp.values1(lisp.S_nil);
}else{
}
}
}
}
}
{
TMP_138=lisp.callFunctionWithCallStack(G_139,L_I__36);
L_G22__43=lisp.values1(TMP_138);
L_I__36=lisp.values1(L_G22__43);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__35=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_NEW_STRING__34);
});
CL_COMMON_LISP_STRING_CAPITALIZE=lisp.values1(F_STRING_CAPITALIZE_111);
let F_NSTRING_UPCASE_140;
F_NSTRING_UPCASE_140=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_141, arguments.length);
}
let L_G34__55;
let TMP_151;
let L_G_STORE33__54;
let TMP_150;
let TMP_149;
let L_G32__53;
let L_G31__52;
let TMP_148;
let L_I__51;
let BLOCK_RESULT_NIL__50;
let TMP_147;
let L_G24__49;
let TMP_146;
let TMP_145;
let L_G23__48;
let L_END__46;
let L_START__45;
let L_STRING__44;
L_STRING__44=arguments[0];
let supplied_START__45;
for (let TMP_142 = 1; TMP_142 < arguments.length; TMP_142 += 2) {
if(arguments[TMP_142] === G_62){
supplied_START__45=arguments[TMP_142+1];
break;
}
}
L_START__45=supplied_START__45 !== undefined ? supplied_START__45 : (lisp.values1(0));
let supplied_END__46;
for (let TMP_143 = 1; TMP_143 < arguments.length; TMP_143 += 2) {
if(arguments[TMP_143] === G_64){
supplied_END__46=arguments[TMP_143+1];
break;
}
}
L_END__46=supplied_END__46 !== undefined ? supplied_END__46 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_144 = 1; TMP_144 < arguments.length; TMP_144 += 2) {
if(arguments[TMP_144]!==G_64 && arguments[TMP_144]!==G_62) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_144].name); }
}
{
L_G23__48=lisp.values1(L_END__46);
if(lisp.values1(L_G23__48) !== lisp.S_nil){
TMP_145=lisp.values1(L_G23__48);
}else{
{
TMP_146=lisp.callFunctionWithCallStack(G_69,L_STRING__44);
L_G24__49=lisp.values1(TMP_146);
if(lisp.values1(L_G24__49) !== lisp.S_nil){
TMP_147=lisp.values1(L_G24__49);
}else{
TMP_147=lisp.values1(lisp.S_nil);
}
}
TMP_145=lisp.values1(lisp.values1(TMP_147));
}
}
L_END__46=lisp.values1(lisp.values1(TMP_145));
BLOCK_NIL__50: for(;;){{
L_I__51=lisp.values1(L_START__45);
for(;;){
TMP_148=lisp.callFunctionWithCallStack(G_125,L_I__51,L_END__46);
if(lisp.values1(TMP_148) !== lisp.S_nil){
BLOCK_RESULT_NIL__50=lisp.values1(lisp.S_nil);
break BLOCK_NIL__50;
}else{
{
L_G31__52=lisp.values1(L_STRING__44);
L_G32__53=lisp.values1(L_I__51);
TMP_149=lisp.callFunctionWithCallStack(G_127,L_STRING__44,L_I__51);
TMP_150=lisp.callFunctionWithCallStack(G_130,TMP_149);
L_G_STORE33__54=lisp.values1(TMP_150);
lisp.callFunctionWithCallStack(G_133,L_G_STORE33__54,L_G31__52,L_G32__53);
}
{
TMP_151=lisp.callFunctionWithCallStack(G_139,L_I__51);
L_G34__55=lisp.values1(TMP_151);
L_I__51=lisp.values1(L_G34__55);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__50=lisp.values1(lisp.S_nil);
break;
}
return lisp.values1(L_STRING__44);
});
CL_COMMON_LISP_NSTRING_UPCASE=lisp.values1(F_NSTRING_UPCASE_140);
let F_NSTRING_DOWNCASE_152;
F_NSTRING_DOWNCASE_152=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_153, arguments.length);
}
let L_G46__67;
let TMP_163;
let L_G_STORE45__66;
let TMP_162;
let TMP_161;
let L_G44__65;
let L_G43__64;
let TMP_160;
let L_I__63;
let BLOCK_RESULT_NIL__62;
let TMP_159;
let L_G36__61;
let TMP_158;
let TMP_157;
let L_G35__60;
let L_END__58;
let L_START__57;
let L_STRING__56;
L_STRING__56=arguments[0];
let supplied_START__57;
for (let TMP_154 = 1; TMP_154 < arguments.length; TMP_154 += 2) {
if(arguments[TMP_154] === G_62){
supplied_START__57=arguments[TMP_154+1];
break;
}
}
L_START__57=supplied_START__57 !== undefined ? supplied_START__57 : (lisp.values1(0));
let supplied_END__58;
for (let TMP_155 = 1; TMP_155 < arguments.length; TMP_155 += 2) {
if(arguments[TMP_155] === G_64){
supplied_END__58=arguments[TMP_155+1];
break;
}
}
L_END__58=supplied_END__58 !== undefined ? supplied_END__58 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_156 = 1; TMP_156 < arguments.length; TMP_156 += 2) {
if(arguments[TMP_156]!==G_64 && arguments[TMP_156]!==G_62) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_156].name); }
}
{
L_G35__60=lisp.values1(L_END__58);
if(lisp.values1(L_G35__60) !== lisp.S_nil){
TMP_157=lisp.values1(L_G35__60);
}else{
{
TMP_158=lisp.callFunctionWithCallStack(G_69,L_STRING__56);
L_G36__61=lisp.values1(TMP_158);
if(lisp.values1(L_G36__61) !== lisp.S_nil){
TMP_159=lisp.values1(L_G36__61);
}else{
TMP_159=lisp.values1(lisp.S_nil);
}
}
TMP_157=lisp.values1(lisp.values1(TMP_159));
}
}
L_END__58=lisp.values1(lisp.values1(TMP_157));
BLOCK_NIL__62: for(;;){{
L_I__63=lisp.values1(L_START__57);
for(;;){
TMP_160=lisp.callFunctionWithCallStack(G_125,L_I__63,L_END__58);
if(lisp.values1(TMP_160) !== lisp.S_nil){
BLOCK_RESULT_NIL__62=lisp.values1(lisp.S_nil);
break BLOCK_NIL__62;
}else{
{
L_G43__64=lisp.values1(L_STRING__56);
L_G44__65=lisp.values1(L_I__63);
TMP_161=lisp.callFunctionWithCallStack(G_127,L_STRING__56,L_I__63);
TMP_162=lisp.callFunctionWithCallStack(G_132,TMP_161);
L_G_STORE45__66=lisp.values1(TMP_162);
lisp.callFunctionWithCallStack(G_133,L_G_STORE45__66,L_G43__64,L_G44__65);
}
{
TMP_163=lisp.callFunctionWithCallStack(G_139,L_I__63);
L_G46__67=lisp.values1(TMP_163);
L_I__63=lisp.values1(L_G46__67);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__62=lisp.values1(lisp.S_nil);
break;
}
return lisp.values1(L_STRING__56);
});
CL_COMMON_LISP_NSTRING_DOWNCASE=lisp.values1(F_NSTRING_DOWNCASE_152);
let F_NSTRING_CAPITALIZE_164;
F_NSTRING_CAPITALIZE_164=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_165, arguments.length);
}
let L_G60__83;
let TMP_179;
let L_G59__82;
let L_G58__81;
let TMP_178;
let TMP_177;
let L_G_STORE57__80;
let TMP_176;
let TMP_175;
let TMP_174;
let L_G56__79;
let L_G55__78;
let L_C__77;
let TMP_173;
let TMP_172;
let L_I__76;
let BLOCK_RESULT_NIL__75;
let L_FIRST__74;
let TMP_171;
let L_G48__73;
let TMP_170;
let TMP_169;
let L_G47__72;
let L_END__70;
let L_START__69;
let L_STRING__68;
L_STRING__68=arguments[0];
let supplied_START__69;
for (let TMP_166 = 1; TMP_166 < arguments.length; TMP_166 += 2) {
if(arguments[TMP_166] === G_62){
supplied_START__69=arguments[TMP_166+1];
break;
}
}
L_START__69=supplied_START__69 !== undefined ? supplied_START__69 : (lisp.values1(0));
let supplied_END__70;
for (let TMP_167 = 1; TMP_167 < arguments.length; TMP_167 += 2) {
if(arguments[TMP_167] === G_64){
supplied_END__70=arguments[TMP_167+1];
break;
}
}
L_END__70=supplied_END__70 !== undefined ? supplied_END__70 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_168 = 1; TMP_168 < arguments.length; TMP_168 += 2) {
if(arguments[TMP_168]!==G_64 && arguments[TMP_168]!==G_62) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_168].name); }
}
{
L_G47__72=lisp.values1(L_END__70);
if(lisp.values1(L_G47__72) !== lisp.S_nil){
TMP_169=lisp.values1(L_G47__72);
}else{
{
TMP_170=lisp.callFunctionWithCallStack(G_69,L_STRING__68);
L_G48__73=lisp.values1(TMP_170);
if(lisp.values1(L_G48__73) !== lisp.S_nil){
TMP_171=lisp.values1(L_G48__73);
}else{
TMP_171=lisp.values1(lisp.S_nil);
}
}
TMP_169=lisp.values1(lisp.values1(TMP_171));
}
}
L_END__70=lisp.values1(lisp.values1(TMP_169));
{
L_FIRST__74=lisp.values1(G_118);
BLOCK_NIL__75: for(;;){{
L_I__76=lisp.values1(L_START__69);
for(;;){
TMP_172=lisp.callFunctionWithCallStack(G_125,L_I__76,L_END__70);
if(lisp.values1(TMP_172) !== lisp.S_nil){
BLOCK_RESULT_NIL__75=lisp.values1(lisp.S_nil);
break BLOCK_NIL__75;
}else{
{
TMP_173=lisp.callFunctionWithCallStack(G_127,L_STRING__68,L_I__76);
L_C__77=lisp.values1(TMP_173);
{
L_G55__78=lisp.values1(L_STRING__68);
L_G56__79=lisp.values1(L_I__76);
if(lisp.values1(L_FIRST__74) !== lisp.S_nil){
TMP_175=lisp.callFunctionWithCallStack(G_130,L_C__77);
TMP_174=lisp.values1(TMP_175);
}else{
TMP_176=lisp.callFunctionWithCallStack(G_132,L_C__77);
TMP_174=lisp.values1(TMP_176);
}
L_G_STORE57__80=lisp.values1(TMP_174);
lisp.callFunctionWithCallStack(G_133,L_G_STORE57__80,L_G55__78,L_G56__79);
}
{
TMP_177=lisp.callFunctionWithCallStack(G_135,L_C__77);
TMP_178=lisp.callFunctionWithCallStack(G_137,TMP_177);
L_G58__81=lisp.values1(TMP_178);
if(lisp.values1(L_G58__81) !== lisp.S_nil){
L_FIRST__74=lisp.values1(G_118);
}else{
{
L_G59__82=lisp.values1(L_FIRST__74);
if(lisp.values1(L_G59__82) !== lisp.S_nil){
L_FIRST__74=lisp.values1(lisp.S_nil);
}else{
}
}
}
}
}
{
TMP_179=lisp.callFunctionWithCallStack(G_139,L_I__76);
L_G60__83=lisp.values1(TMP_179);
L_I__76=lisp.values1(L_G60__83);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__75=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_STRING__68);
});
CL_COMMON_LISP_NSTRING_CAPITALIZE=lisp.values1(F_NSTRING_CAPITALIZE_164);
let F_START_POSITION_WITH_BAG_180;
F_START_POSITION_WITH_BAG_180=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_181, arguments.length);
}
let L_G68__91;
let TMP_187;
let TMP_185;
let TMP_184;
let TMP_183;
let L_I__90;
let BLOCK_RESULT_NIL__89;
let L_G61__88;
let L_LENGTH__87;
let TMP_182;
let L_STRING__85;
let L_CHARACTER_BAG__84;
L_CHARACTER_BAG__84=arguments[0];
L_STRING__85=arguments[1];
{
TMP_182=lisp.callFunctionWithCallStack(G_69,L_STRING__85);
L_LENGTH__87=lisp.values1(TMP_182);
{
L_G61__88=lisp.values1(L_LENGTH__87);
BLOCK_NIL__89: for(;;){{
L_I__90=lisp.values1(0);
for(;;){
TMP_183=lisp.callFunctionWithCallStack(G_125,L_I__90,L_G61__88);
if(lisp.values1(TMP_183) !== lisp.S_nil){
BLOCK_RESULT_NIL__89=lisp.values1(L_LENGTH__87);
break BLOCK_NIL__89;
}else{
TMP_184=lisp.callFunctionWithCallStack(G_127,L_STRING__85,L_I__90);
TMP_185=lisp.callFunctionWithCallStack(G_186,TMP_184,L_CHARACTER_BAG__84);
if(lisp.values1(TMP_185) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__89=lisp.values1(L_I__90);
break BLOCK_NIL__89;
}
{
TMP_187=lisp.callFunctionWithCallStack(G_188,L_I__90,1);
L_G68__91=lisp.values1(TMP_187);
L_I__90=lisp.values1(L_G68__91);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__89=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
}
return BLOCK_RESULT_NIL__89;
});
CL_COMMON_LISP_START_POSITION_WITH_BAG=lisp.values1(F_START_POSITION_WITH_BAG_180);
let F_END_POSITION_WITH_BAG_189;
F_END_POSITION_WITH_BAG_189=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_190, arguments.length);
}
let L_G75__98;
let TMP_199;
let TMP_198;
let TMP_197;
let TMP_196;
let TMP_194;
let L_I__97;
let TMP_192;
let TMP_191;
let BLOCK_RESULT_NIL__96;
let L_START__94;
let L_STRING__93;
let L_CHARACTER_BAG__92;
L_CHARACTER_BAG__92=arguments[0];
L_STRING__93=arguments[1];
L_START__94=arguments[2];
BLOCK_NIL__96: for(;;){{
TMP_191=lisp.callFunctionWithCallStack(G_69,L_STRING__93);
TMP_192=lisp.callFunctionWithCallStack(G_193,TMP_191);
L_I__97=lisp.values1(TMP_192);
for(;;){
TMP_194=lisp.callFunctionWithCallStack(G_195,L_I__97,L_START__94);
if(lisp.values1(TMP_194) !== lisp.S_nil){
BLOCK_RESULT_NIL__96=lisp.values1(L_START__94);
break BLOCK_NIL__96;
}else{
TMP_196=lisp.callFunctionWithCallStack(G_127,L_STRING__93,L_I__97);
TMP_197=lisp.callFunctionWithCallStack(G_186,TMP_196,L_CHARACTER_BAG__92);
if(lisp.values1(TMP_197) !== lisp.S_nil){
}else{
TMP_198=lisp.callFunctionWithCallStack(G_139,L_I__97);
BLOCK_RESULT_NIL__96=TMP_198;
break BLOCK_NIL__96;
}
{
TMP_199=lisp.callFunctionWithCallStack(G_193,L_I__97);
L_G75__98=lisp.values1(TMP_199);
L_I__97=lisp.values1(L_G75__98);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__96=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__96;
});
CL_COMMON_LISP_END_POSITION_WITH_BAG=lisp.values1(F_END_POSITION_WITH_BAG_189);
let F_STRING_TRIM_200;
F_STRING_TRIM_200=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_201, arguments.length);
}
let TMP_205;
let L_END__103;
let TMP_204;
let L_START__102;
let TMP_203;
let TMP_202;
let L_STRING__100;
let L_CHARACTER_BAG__99;
L_CHARACTER_BAG__99=arguments[0];
L_STRING__100=arguments[1];
TMP_202=G_23.func(L_STRING__100);
L_STRING__100=lisp.values1(TMP_202);
{
TMP_203=G_181.func(L_CHARACTER_BAG__99,L_STRING__100);
L_START__102=lisp.values1(TMP_203);
TMP_204=G_190.func(L_CHARACTER_BAG__99,L_STRING__100,L_START__102);
L_END__103=lisp.values1(TMP_204);
TMP_205=lisp.callFunctionWithCallStack(G_81,L_STRING__100,L_START__102,L_END__103);
}
return TMP_205;
});
CL_COMMON_LISP_STRING_TRIM=lisp.values1(F_STRING_TRIM_200);
let F_STRING_LEFT_TRIM_206;
F_STRING_LEFT_TRIM_206=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_207, arguments.length);
}
let TMP_210;
let TMP_209;
let TMP_208;
let L_STRING__105;
let L_CHARACTER_BAG__104;
L_CHARACTER_BAG__104=arguments[0];
L_STRING__105=arguments[1];
TMP_208=G_23.func(L_STRING__105);
L_STRING__105=lisp.values1(TMP_208);
TMP_209=G_181.func(L_CHARACTER_BAG__104,L_STRING__105);
TMP_210=lisp.callFunctionWithCallStack(G_81,L_STRING__105,TMP_209);
return TMP_210;
});
CL_COMMON_LISP_STRING_LEFT_TRIM=lisp.values1(F_STRING_LEFT_TRIM_206);
let F_STRING_RIGHT_TRIM_211;
F_STRING_RIGHT_TRIM_211=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_212, arguments.length);
}
let TMP_215;
let TMP_214;
let TMP_213;
let L_STRING__108;
let L_CHARACTER_BAG__107;
L_CHARACTER_BAG__107=arguments[0];
L_STRING__108=arguments[1];
TMP_213=G_23.func(L_STRING__108);
L_STRING__108=lisp.values1(TMP_213);
TMP_214=G_190.func(L_CHARACTER_BAG__107,L_STRING__108,0);
TMP_215=lisp.callFunctionWithCallStack(G_81,L_STRING__108,0,TMP_214);
return TMP_215;
});
CL_COMMON_LISP_STRING_RIGHT_TRIM=lisp.values1(F_STRING_RIGHT_TRIM_211);
let F_STRING_CMP_216;
F_STRING_CMP_216=(function(){
if(arguments.length !== 7) {
lisp.argumentsError(G_217, arguments.length);
}
let L_G85__126;
let TMP_239;
let L_G84__125;
let TMP_238;
let TMP_237;
let TMP_236;
let TMP_234;
let TMP_232;
let TMP_231;
let TMP_230;
let L_B__124;
let TMP_229;
let L_A__123;
let TMP_228;
let TMP_227;
let L_G83__122;
let TMP_226;
let TMP_225;
let TMP_224;
let TMP_223;
let L_G82__121;
let TMP_222;
let L_J__120;
let L_I__119;
let BLOCK_RESULT_NIL__118;
let TMP_221;
let TMP_220;
let TMP_219;
let TMP_218;
let L_IGNORE_CASE__116;
let L_END2__115;
let L_START2__114;
let L_END1__113;
let L_START1__112;
let L_STRING2__111;
let L_STRING1__110;
L_STRING1__110=arguments[0];
L_STRING2__111=arguments[1];
L_START1__112=arguments[2];
L_END1__113=arguments[3];
L_START2__114=arguments[4];
L_END2__115=arguments[5];
L_IGNORE_CASE__116=arguments[6];
TMP_218=G_23.func(L_STRING1__110);
L_STRING1__110=lisp.values1(TMP_218);
TMP_219=G_23.func(L_STRING2__111);
L_STRING2__111=lisp.values1(TMP_219);
if(lisp.values1(L_END1__113) !== lisp.S_nil){
}else{
TMP_220=lisp.callFunctionWithCallStack(G_69,L_STRING1__110);
L_END1__113=lisp.values1(TMP_220);
}
if(lisp.values1(L_END2__115) !== lisp.S_nil){
}else{
TMP_221=lisp.callFunctionWithCallStack(G_69,L_STRING2__111);
L_END2__115=lisp.values1(TMP_221);
}
BLOCK_NIL__118: for(;;){{
L_I__119=lisp.values1(L_START1__112);
L_J__120=lisp.values1(L_START2__114);
for(;;){
{
TMP_222=lisp.callFunctionWithCallStack(G_71,L_I__119,L_END1__113);
L_G82__121=lisp.values1(TMP_222);
if(lisp.values1(L_G82__121) !== lisp.S_nil){
TMP_223=lisp.callFunctionWithCallStack(G_71,L_J__120,L_END2__115);
if(lisp.values1(TMP_223) !== lisp.S_nil){
TMP_224=lisp.values1(0);
}else{
TMP_224=lisp.values1(-1);
}
TMP_225=lisp.CL_values(TMP_224,L_END1__113);
BLOCK_RESULT_NIL__118=TMP_225;
break BLOCK_NIL__118;
}else{
{
TMP_226=lisp.callFunctionWithCallStack(G_71,L_J__120,L_END2__115);
L_G83__122=lisp.values1(TMP_226);
if(lisp.values1(L_G83__122) !== lisp.S_nil){
TMP_227=lisp.CL_values(1,L_I__119);
BLOCK_RESULT_NIL__118=TMP_227;
break BLOCK_NIL__118;
}else{
}
}
}
}
{
TMP_228=lisp.callFunctionWithCallStack(G_127,L_STRING1__110,L_I__119);
L_A__123=lisp.values1(TMP_228);
TMP_229=lisp.callFunctionWithCallStack(G_127,L_STRING2__111,L_J__120);
L_B__124=lisp.values1(TMP_229);
if(lisp.values1(L_IGNORE_CASE__116) !== lisp.S_nil){
TMP_230=lisp.callFunctionWithCallStack(G_130,L_A__123);
L_A__123=lisp.values1(TMP_230);
TMP_231=lisp.callFunctionWithCallStack(G_130,L_B__124);
L_B__124=lisp.values1(TMP_231);
}else{
}
TMP_232=lisp.callFunctionWithCallStack(G_233,L_A__123,L_B__124);
if(lisp.values1(TMP_232) !== lisp.S_nil){
TMP_234=lisp.callFunctionWithCallStack(G_235,L_A__123,L_B__124);
if(lisp.values1(TMP_234) !== lisp.S_nil){
TMP_236=lisp.values1(-1);
}else{
TMP_236=lisp.values1(1);
}
TMP_237=lisp.CL_values(TMP_236,L_I__119);
BLOCK_RESULT_NIL__118=TMP_237;
break BLOCK_NIL__118;
}else{
}
}
{
TMP_238=lisp.callFunctionWithCallStack(G_139,L_I__119);
L_G84__125=lisp.values1(TMP_238);
TMP_239=lisp.callFunctionWithCallStack(G_139,L_J__120);
L_G85__126=lisp.values1(TMP_239);
L_I__119=lisp.values1(L_G84__125);
L_J__120=lisp.values1(L_G85__126);
}
continue;
break;
}
}
BLOCK_RESULT_NIL__118=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__118;
});
CL_COMMON_LISP_STRING_CMP=lisp.values1(F_STRING_CMP_216);
let F_STRINGEQUAL_240;
F_STRINGEQUAL_240=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_241, arguments.length);
}
let TMP_252;
let TMP_251;
let L_END2__132;
let L_START2__131;
let L_END1__130;
let L_START1__129;
let L_STRING2__128;
let L_STRING1__127;
L_STRING1__127=arguments[0];
L_STRING2__128=arguments[1];
let supplied_START1__129;
for (let TMP_243 = 2; TMP_243 < arguments.length; TMP_243 += 2) {
if(arguments[TMP_243] === G_242){
supplied_START1__129=arguments[TMP_243+1];
break;
}
}
L_START1__129=supplied_START1__129 !== undefined ? supplied_START1__129 : (lisp.values1(0));
let supplied_END1__130;
for (let TMP_245 = 2; TMP_245 < arguments.length; TMP_245 += 2) {
if(arguments[TMP_245] === G_244){
supplied_END1__130=arguments[TMP_245+1];
break;
}
}
L_END1__130=supplied_END1__130 !== undefined ? supplied_END1__130 : (lisp.values1(lisp.S_nil));
let supplied_START2__131;
for (let TMP_247 = 2; TMP_247 < arguments.length; TMP_247 += 2) {
if(arguments[TMP_247] === G_246){
supplied_START2__131=arguments[TMP_247+1];
break;
}
}
L_START2__131=supplied_START2__131 !== undefined ? supplied_START2__131 : (lisp.values1(0));
let supplied_END2__132;
for (let TMP_249 = 2; TMP_249 < arguments.length; TMP_249 += 2) {
if(arguments[TMP_249] === G_248){
supplied_END2__132=arguments[TMP_249+1];
break;
}
}
L_END2__132=supplied_END2__132 !== undefined ? supplied_END2__132 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_250 = 2; TMP_250 < arguments.length; TMP_250 += 2) {
if(arguments[TMP_250]!==G_248 && arguments[TMP_250]!==G_246 && arguments[TMP_250]!==G_244 && arguments[TMP_250]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_250].name); }
}
TMP_251=G_217.func(L_STRING1__127,L_STRING2__128,L_START1__129,L_END1__130,L_START2__131,L_END2__132,lisp.S_nil);
TMP_252=lisp.callFunctionWithCallStack(G_71,0,TMP_251);
return TMP_252;
});
CL_COMMON_LISP_STRINGEQUAL=lisp.values1(F_STRINGEQUAL_240);
let F_STRINGSLASHEQUAL_253;
F_STRINGSLASHEQUAL_253=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_254, arguments.length);
}
let TMP_266;
let TMP_265;
let TMP_263;
let TMP_260;
let L_END2__139;
let L_START2__138;
let L_END1__137;
let L_START1__136;
let L_STRING2__135;
let L_STRING1__134;
L_STRING1__134=arguments[0];
L_STRING2__135=arguments[1];
let supplied_START1__136;
for (let TMP_255 = 2; TMP_255 < arguments.length; TMP_255 += 2) {
if(arguments[TMP_255] === G_242){
supplied_START1__136=arguments[TMP_255+1];
break;
}
}
L_START1__136=supplied_START1__136 !== undefined ? supplied_START1__136 : (lisp.values1(0));
let supplied_END1__137;
for (let TMP_256 = 2; TMP_256 < arguments.length; TMP_256 += 2) {
if(arguments[TMP_256] === G_244){
supplied_END1__137=arguments[TMP_256+1];
break;
}
}
L_END1__137=supplied_END1__137 !== undefined ? supplied_END1__137 : (lisp.values1(lisp.S_nil));
let supplied_START2__138;
for (let TMP_257 = 2; TMP_257 < arguments.length; TMP_257 += 2) {
if(arguments[TMP_257] === G_246){
supplied_START2__138=arguments[TMP_257+1];
break;
}
}
L_START2__138=supplied_START2__138 !== undefined ? supplied_START2__138 : (lisp.values1(0));
let supplied_END2__139;
for (let TMP_258 = 2; TMP_258 < arguments.length; TMP_258 += 2) {
if(arguments[TMP_258] === G_248){
supplied_END2__139=arguments[TMP_258+1];
break;
}
}
L_END2__139=supplied_END2__139 !== undefined ? supplied_END2__139 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_259 = 2; TMP_259 < arguments.length; TMP_259 += 2) {
if(arguments[TMP_259]!==G_248 && arguments[TMP_259]!==G_246 && arguments[TMP_259]!==G_244 && arguments[TMP_259]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_259].name); }
}
TMP_260=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_262;
let TMP_261;
let L_G86__143;
let L_POS__142;
let L_CMP__141;
L_CMP__141=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__142=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G86__143=lisp.jsArrayToList(arguments, 2);
TMP_261=lisp.callFunctionWithCallStack(G_71,L_CMP__141,0);
if(lisp.values1(TMP_261) !== lisp.S_nil){
TMP_262=lisp.values1(lisp.S_nil);
}else{
TMP_262=lisp.values1(L_POS__142);
}
return TMP_262;
});
TMP_263=lisp.callFunctionWithCallStack(G_264,TMP_260);
TMP_265=G_217.func(L_STRING1__134,L_STRING2__135,L_START1__136,L_END1__137,L_START2__138,L_END2__139,lisp.S_nil);
TMP_266=lisp.CL_multipleValueCall(TMP_263,TMP_265);
return TMP_266;
});
CL_COMMON_LISP_STRINGSLASHEQUAL=lisp.values1(F_STRINGSLASHEQUAL_253);
let F_STRINGLESS_267;
F_STRINGLESS_267=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_268, arguments.length);
}
let TMP_279;
let TMP_278;
let TMP_277;
let TMP_274;
let L_END2__149;
let L_START2__148;
let L_END1__147;
let L_START1__146;
let L_STRING2__145;
let L_STRING1__144;
L_STRING1__144=arguments[0];
L_STRING2__145=arguments[1];
let supplied_START1__146;
for (let TMP_269 = 2; TMP_269 < arguments.length; TMP_269 += 2) {
if(arguments[TMP_269] === G_242){
supplied_START1__146=arguments[TMP_269+1];
break;
}
}
L_START1__146=supplied_START1__146 !== undefined ? supplied_START1__146 : (lisp.values1(0));
let supplied_END1__147;
for (let TMP_270 = 2; TMP_270 < arguments.length; TMP_270 += 2) {
if(arguments[TMP_270] === G_244){
supplied_END1__147=arguments[TMP_270+1];
break;
}
}
L_END1__147=supplied_END1__147 !== undefined ? supplied_END1__147 : (lisp.values1(lisp.S_nil));
let supplied_START2__148;
for (let TMP_271 = 2; TMP_271 < arguments.length; TMP_271 += 2) {
if(arguments[TMP_271] === G_246){
supplied_START2__148=arguments[TMP_271+1];
break;
}
}
L_START2__148=supplied_START2__148 !== undefined ? supplied_START2__148 : (lisp.values1(0));
let supplied_END2__149;
for (let TMP_272 = 2; TMP_272 < arguments.length; TMP_272 += 2) {
if(arguments[TMP_272] === G_248){
supplied_END2__149=arguments[TMP_272+1];
break;
}
}
L_END2__149=supplied_END2__149 !== undefined ? supplied_END2__149 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_273 = 2; TMP_273 < arguments.length; TMP_273 += 2) {
if(arguments[TMP_273]!==G_248 && arguments[TMP_273]!==G_246 && arguments[TMP_273]!==G_244 && arguments[TMP_273]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_273].name); }
}
TMP_274=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_276;
let TMP_275;
let L_G87__153;
let L_POS__152;
let L_CMP__151;
L_CMP__151=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__152=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G87__153=lisp.jsArrayToList(arguments, 2);
TMP_275=lisp.callFunctionWithCallStack(G_71,L_CMP__151,-1);
if(lisp.values1(TMP_275) !== lisp.S_nil){
TMP_276=lisp.values1(L_POS__152);
}else{
TMP_276=lisp.values1(lisp.S_nil);
}
return TMP_276;
});
TMP_277=lisp.callFunctionWithCallStack(G_264,TMP_274);
TMP_278=G_217.func(L_STRING1__144,L_STRING2__145,L_START1__146,L_END1__147,L_START2__148,L_END2__149,lisp.S_nil);
TMP_279=lisp.CL_multipleValueCall(TMP_277,TMP_278);
return TMP_279;
});
CL_COMMON_LISP_STRINGLESS=lisp.values1(F_STRINGLESS_267);
let F_STRINGGREATER_280;
F_STRINGGREATER_280=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_281, arguments.length);
}
let TMP_292;
let TMP_291;
let TMP_290;
let TMP_287;
let L_END2__159;
let L_START2__158;
let L_END1__157;
let L_START1__156;
let L_STRING2__155;
let L_STRING1__154;
L_STRING1__154=arguments[0];
L_STRING2__155=arguments[1];
let supplied_START1__156;
for (let TMP_282 = 2; TMP_282 < arguments.length; TMP_282 += 2) {
if(arguments[TMP_282] === G_242){
supplied_START1__156=arguments[TMP_282+1];
break;
}
}
L_START1__156=supplied_START1__156 !== undefined ? supplied_START1__156 : (lisp.values1(0));
let supplied_END1__157;
for (let TMP_283 = 2; TMP_283 < arguments.length; TMP_283 += 2) {
if(arguments[TMP_283] === G_244){
supplied_END1__157=arguments[TMP_283+1];
break;
}
}
L_END1__157=supplied_END1__157 !== undefined ? supplied_END1__157 : (lisp.values1(lisp.S_nil));
let supplied_START2__158;
for (let TMP_284 = 2; TMP_284 < arguments.length; TMP_284 += 2) {
if(arguments[TMP_284] === G_246){
supplied_START2__158=arguments[TMP_284+1];
break;
}
}
L_START2__158=supplied_START2__158 !== undefined ? supplied_START2__158 : (lisp.values1(0));
let supplied_END2__159;
for (let TMP_285 = 2; TMP_285 < arguments.length; TMP_285 += 2) {
if(arguments[TMP_285] === G_248){
supplied_END2__159=arguments[TMP_285+1];
break;
}
}
L_END2__159=supplied_END2__159 !== undefined ? supplied_END2__159 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_286 = 2; TMP_286 < arguments.length; TMP_286 += 2) {
if(arguments[TMP_286]!==G_248 && arguments[TMP_286]!==G_246 && arguments[TMP_286]!==G_244 && arguments[TMP_286]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_286].name); }
}
TMP_287=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_289;
let TMP_288;
let L_G88__163;
let L_POS__162;
let L_CMP__161;
L_CMP__161=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__162=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G88__163=lisp.jsArrayToList(arguments, 2);
TMP_288=lisp.callFunctionWithCallStack(G_71,L_CMP__161,1);
if(lisp.values1(TMP_288) !== lisp.S_nil){
TMP_289=lisp.values1(L_POS__162);
}else{
TMP_289=lisp.values1(lisp.S_nil);
}
return TMP_289;
});
TMP_290=lisp.callFunctionWithCallStack(G_264,TMP_287);
TMP_291=G_217.func(L_STRING1__154,L_STRING2__155,L_START1__156,L_END1__157,L_START2__158,L_END2__159,lisp.S_nil);
TMP_292=lisp.CL_multipleValueCall(TMP_290,TMP_291);
return TMP_292;
});
CL_COMMON_LISP_STRINGGREATER=lisp.values1(F_STRINGGREATER_280);
let F_STRINGLESSEQUAL_293;
F_STRINGLESSEQUAL_293=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_294, arguments.length);
}
let TMP_305;
let TMP_304;
let TMP_303;
let TMP_300;
let L_END2__169;
let L_START2__168;
let L_END1__167;
let L_START1__166;
let L_STRING2__165;
let L_STRING1__164;
L_STRING1__164=arguments[0];
L_STRING2__165=arguments[1];
let supplied_START1__166;
for (let TMP_295 = 2; TMP_295 < arguments.length; TMP_295 += 2) {
if(arguments[TMP_295] === G_242){
supplied_START1__166=arguments[TMP_295+1];
break;
}
}
L_START1__166=supplied_START1__166 !== undefined ? supplied_START1__166 : (lisp.values1(0));
let supplied_END1__167;
for (let TMP_296 = 2; TMP_296 < arguments.length; TMP_296 += 2) {
if(arguments[TMP_296] === G_244){
supplied_END1__167=arguments[TMP_296+1];
break;
}
}
L_END1__167=supplied_END1__167 !== undefined ? supplied_END1__167 : (lisp.values1(lisp.S_nil));
let supplied_START2__168;
for (let TMP_297 = 2; TMP_297 < arguments.length; TMP_297 += 2) {
if(arguments[TMP_297] === G_246){
supplied_START2__168=arguments[TMP_297+1];
break;
}
}
L_START2__168=supplied_START2__168 !== undefined ? supplied_START2__168 : (lisp.values1(0));
let supplied_END2__169;
for (let TMP_298 = 2; TMP_298 < arguments.length; TMP_298 += 2) {
if(arguments[TMP_298] === G_248){
supplied_END2__169=arguments[TMP_298+1];
break;
}
}
L_END2__169=supplied_END2__169 !== undefined ? supplied_END2__169 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_299 = 2; TMP_299 < arguments.length; TMP_299 += 2) {
if(arguments[TMP_299]!==G_248 && arguments[TMP_299]!==G_246 && arguments[TMP_299]!==G_244 && arguments[TMP_299]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_299].name); }
}
TMP_300=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_302;
let TMP_301;
let L_G89__173;
let L_POS__172;
let L_CMP__171;
L_CMP__171=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__172=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G89__173=lisp.jsArrayToList(arguments, 2);
TMP_301=lisp.callFunctionWithCallStack(G_71,L_CMP__171,1);
if(lisp.values1(TMP_301) !== lisp.S_nil){
TMP_302=lisp.values1(lisp.S_nil);
}else{
TMP_302=lisp.values1(L_POS__172);
}
return TMP_302;
});
TMP_303=lisp.callFunctionWithCallStack(G_264,TMP_300);
TMP_304=G_217.func(L_STRING1__164,L_STRING2__165,L_START1__166,L_END1__167,L_START2__168,L_END2__169,lisp.S_nil);
TMP_305=lisp.CL_multipleValueCall(TMP_303,TMP_304);
return TMP_305;
});
CL_COMMON_LISP_STRINGLESSEQUAL=lisp.values1(F_STRINGLESSEQUAL_293);
let F_STRINGGREATEREQUAL_306;
F_STRINGGREATEREQUAL_306=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_307, arguments.length);
}
let TMP_318;
let TMP_317;
let TMP_316;
let TMP_313;
let L_END2__179;
let L_START2__178;
let L_END1__177;
let L_START1__176;
let L_STRING2__175;
let L_STRING1__174;
L_STRING1__174=arguments[0];
L_STRING2__175=arguments[1];
let supplied_START1__176;
for (let TMP_308 = 2; TMP_308 < arguments.length; TMP_308 += 2) {
if(arguments[TMP_308] === G_242){
supplied_START1__176=arguments[TMP_308+1];
break;
}
}
L_START1__176=supplied_START1__176 !== undefined ? supplied_START1__176 : (lisp.values1(0));
let supplied_END1__177;
for (let TMP_309 = 2; TMP_309 < arguments.length; TMP_309 += 2) {
if(arguments[TMP_309] === G_244){
supplied_END1__177=arguments[TMP_309+1];
break;
}
}
L_END1__177=supplied_END1__177 !== undefined ? supplied_END1__177 : (lisp.values1(lisp.S_nil));
let supplied_START2__178;
for (let TMP_310 = 2; TMP_310 < arguments.length; TMP_310 += 2) {
if(arguments[TMP_310] === G_246){
supplied_START2__178=arguments[TMP_310+1];
break;
}
}
L_START2__178=supplied_START2__178 !== undefined ? supplied_START2__178 : (lisp.values1(0));
let supplied_END2__179;
for (let TMP_311 = 2; TMP_311 < arguments.length; TMP_311 += 2) {
if(arguments[TMP_311] === G_248){
supplied_END2__179=arguments[TMP_311+1];
break;
}
}
L_END2__179=supplied_END2__179 !== undefined ? supplied_END2__179 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_312 = 2; TMP_312 < arguments.length; TMP_312 += 2) {
if(arguments[TMP_312]!==G_248 && arguments[TMP_312]!==G_246 && arguments[TMP_312]!==G_244 && arguments[TMP_312]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_312].name); }
}
TMP_313=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_315;
let TMP_314;
let L_G90__183;
let L_POS__182;
let L_CMP__181;
L_CMP__181=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__182=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G90__183=lisp.jsArrayToList(arguments, 2);
TMP_314=lisp.callFunctionWithCallStack(G_71,L_CMP__181,-1);
if(lisp.values1(TMP_314) !== lisp.S_nil){
TMP_315=lisp.values1(lisp.S_nil);
}else{
TMP_315=lisp.values1(L_POS__182);
}
return TMP_315;
});
TMP_316=lisp.callFunctionWithCallStack(G_264,TMP_313);
TMP_317=G_217.func(L_STRING1__174,L_STRING2__175,L_START1__176,L_END1__177,L_START2__178,L_END2__179,lisp.S_nil);
TMP_318=lisp.CL_multipleValueCall(TMP_316,TMP_317);
return TMP_318;
});
CL_COMMON_LISP_STRINGGREATEREQUAL=lisp.values1(F_STRINGGREATEREQUAL_306);
let F_STRING_EQUAL_319;
F_STRING_EQUAL_319=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_320, arguments.length);
}
let TMP_327;
let TMP_326;
let L_END2__189;
let L_START2__188;
let L_END1__187;
let L_START1__186;
let L_STRING2__185;
let L_STRING1__184;
L_STRING1__184=arguments[0];
L_STRING2__185=arguments[1];
let supplied_START1__186;
for (let TMP_321 = 2; TMP_321 < arguments.length; TMP_321 += 2) {
if(arguments[TMP_321] === G_242){
supplied_START1__186=arguments[TMP_321+1];
break;
}
}
L_START1__186=supplied_START1__186 !== undefined ? supplied_START1__186 : (lisp.values1(0));
let supplied_END1__187;
for (let TMP_322 = 2; TMP_322 < arguments.length; TMP_322 += 2) {
if(arguments[TMP_322] === G_244){
supplied_END1__187=arguments[TMP_322+1];
break;
}
}
L_END1__187=supplied_END1__187 !== undefined ? supplied_END1__187 : (lisp.values1(lisp.S_nil));
let supplied_START2__188;
for (let TMP_323 = 2; TMP_323 < arguments.length; TMP_323 += 2) {
if(arguments[TMP_323] === G_246){
supplied_START2__188=arguments[TMP_323+1];
break;
}
}
L_START2__188=supplied_START2__188 !== undefined ? supplied_START2__188 : (lisp.values1(0));
let supplied_END2__189;
for (let TMP_324 = 2; TMP_324 < arguments.length; TMP_324 += 2) {
if(arguments[TMP_324] === G_248){
supplied_END2__189=arguments[TMP_324+1];
break;
}
}
L_END2__189=supplied_END2__189 !== undefined ? supplied_END2__189 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_325 = 2; TMP_325 < arguments.length; TMP_325 += 2) {
if(arguments[TMP_325]!==G_248 && arguments[TMP_325]!==G_246 && arguments[TMP_325]!==G_244 && arguments[TMP_325]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_325].name); }
}
TMP_326=G_217.func(L_STRING1__184,L_STRING2__185,L_START1__186,L_END1__187,L_START2__188,L_END2__189,G_118);
TMP_327=lisp.callFunctionWithCallStack(G_71,0,TMP_326);
return TMP_327;
});
CL_COMMON_LISP_STRING_EQUAL=lisp.values1(F_STRING_EQUAL_319);
let F_STRING_NOT_EQUAL_328;
F_STRING_NOT_EQUAL_328=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_329, arguments.length);
}
let TMP_340;
let TMP_339;
let TMP_338;
let TMP_335;
let L_END2__196;
let L_START2__195;
let L_END1__194;
let L_START1__193;
let L_STRING2__192;
let L_STRING1__191;
L_STRING1__191=arguments[0];
L_STRING2__192=arguments[1];
let supplied_START1__193;
for (let TMP_330 = 2; TMP_330 < arguments.length; TMP_330 += 2) {
if(arguments[TMP_330] === G_242){
supplied_START1__193=arguments[TMP_330+1];
break;
}
}
L_START1__193=supplied_START1__193 !== undefined ? supplied_START1__193 : (lisp.values1(0));
let supplied_END1__194;
for (let TMP_331 = 2; TMP_331 < arguments.length; TMP_331 += 2) {
if(arguments[TMP_331] === G_244){
supplied_END1__194=arguments[TMP_331+1];
break;
}
}
L_END1__194=supplied_END1__194 !== undefined ? supplied_END1__194 : (lisp.values1(lisp.S_nil));
let supplied_START2__195;
for (let TMP_332 = 2; TMP_332 < arguments.length; TMP_332 += 2) {
if(arguments[TMP_332] === G_246){
supplied_START2__195=arguments[TMP_332+1];
break;
}
}
L_START2__195=supplied_START2__195 !== undefined ? supplied_START2__195 : (lisp.values1(0));
let supplied_END2__196;
for (let TMP_333 = 2; TMP_333 < arguments.length; TMP_333 += 2) {
if(arguments[TMP_333] === G_248){
supplied_END2__196=arguments[TMP_333+1];
break;
}
}
L_END2__196=supplied_END2__196 !== undefined ? supplied_END2__196 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_334 = 2; TMP_334 < arguments.length; TMP_334 += 2) {
if(arguments[TMP_334]!==G_248 && arguments[TMP_334]!==G_246 && arguments[TMP_334]!==G_244 && arguments[TMP_334]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_334].name); }
}
TMP_335=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_337;
let TMP_336;
let L_G91__200;
let L_POS__199;
let L_CMP__198;
L_CMP__198=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__199=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G91__200=lisp.jsArrayToList(arguments, 2);
TMP_336=lisp.callFunctionWithCallStack(G_71,L_CMP__198,0);
if(lisp.values1(TMP_336) !== lisp.S_nil){
TMP_337=lisp.values1(lisp.S_nil);
}else{
TMP_337=lisp.values1(L_POS__199);
}
return TMP_337;
});
TMP_338=lisp.callFunctionWithCallStack(G_264,TMP_335);
TMP_339=G_217.func(L_STRING1__191,L_STRING2__192,L_START1__193,L_END1__194,L_START2__195,L_END2__196,G_118);
TMP_340=lisp.CL_multipleValueCall(TMP_338,TMP_339);
return TMP_340;
});
CL_COMMON_LISP_STRING_NOT_EQUAL=lisp.values1(F_STRING_NOT_EQUAL_328);
let F_STRING_GREATERP_341;
F_STRING_GREATERP_341=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_342, arguments.length);
}
let TMP_353;
let TMP_352;
let TMP_351;
let TMP_348;
let L_END2__206;
let L_START2__205;
let L_END1__204;
let L_START1__203;
let L_STRING2__202;
let L_STRING1__201;
L_STRING1__201=arguments[0];
L_STRING2__202=arguments[1];
let supplied_START1__203;
for (let TMP_343 = 2; TMP_343 < arguments.length; TMP_343 += 2) {
if(arguments[TMP_343] === G_242){
supplied_START1__203=arguments[TMP_343+1];
break;
}
}
L_START1__203=supplied_START1__203 !== undefined ? supplied_START1__203 : (lisp.values1(0));
let supplied_END1__204;
for (let TMP_344 = 2; TMP_344 < arguments.length; TMP_344 += 2) {
if(arguments[TMP_344] === G_244){
supplied_END1__204=arguments[TMP_344+1];
break;
}
}
L_END1__204=supplied_END1__204 !== undefined ? supplied_END1__204 : (lisp.values1(lisp.S_nil));
let supplied_START2__205;
for (let TMP_345 = 2; TMP_345 < arguments.length; TMP_345 += 2) {
if(arguments[TMP_345] === G_246){
supplied_START2__205=arguments[TMP_345+1];
break;
}
}
L_START2__205=supplied_START2__205 !== undefined ? supplied_START2__205 : (lisp.values1(0));
let supplied_END2__206;
for (let TMP_346 = 2; TMP_346 < arguments.length; TMP_346 += 2) {
if(arguments[TMP_346] === G_248){
supplied_END2__206=arguments[TMP_346+1];
break;
}
}
L_END2__206=supplied_END2__206 !== undefined ? supplied_END2__206 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_347 = 2; TMP_347 < arguments.length; TMP_347 += 2) {
if(arguments[TMP_347]!==G_248 && arguments[TMP_347]!==G_246 && arguments[TMP_347]!==G_244 && arguments[TMP_347]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_347].name); }
}
TMP_348=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_350;
let TMP_349;
let L_G92__210;
let L_POS__209;
let L_CMP__208;
L_CMP__208=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__209=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G92__210=lisp.jsArrayToList(arguments, 2);
TMP_349=lisp.callFunctionWithCallStack(G_71,L_CMP__208,1);
if(lisp.values1(TMP_349) !== lisp.S_nil){
TMP_350=lisp.values1(L_POS__209);
}else{
TMP_350=lisp.values1(lisp.S_nil);
}
return TMP_350;
});
TMP_351=lisp.callFunctionWithCallStack(G_264,TMP_348);
TMP_352=G_217.func(L_STRING1__201,L_STRING2__202,L_START1__203,L_END1__204,L_START2__205,L_END2__206,G_118);
TMP_353=lisp.CL_multipleValueCall(TMP_351,TMP_352);
return TMP_353;
});
CL_COMMON_LISP_STRING_GREATERP=lisp.values1(F_STRING_GREATERP_341);
let F_STRING_NOT_GREATERP_354;
F_STRING_NOT_GREATERP_354=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_355, arguments.length);
}
let TMP_366;
let TMP_365;
let TMP_364;
let TMP_361;
let L_END2__216;
let L_START2__215;
let L_END1__214;
let L_START1__213;
let L_STRING2__212;
let L_STRING1__211;
L_STRING1__211=arguments[0];
L_STRING2__212=arguments[1];
let supplied_START1__213;
for (let TMP_356 = 2; TMP_356 < arguments.length; TMP_356 += 2) {
if(arguments[TMP_356] === G_242){
supplied_START1__213=arguments[TMP_356+1];
break;
}
}
L_START1__213=supplied_START1__213 !== undefined ? supplied_START1__213 : (lisp.values1(0));
let supplied_END1__214;
for (let TMP_357 = 2; TMP_357 < arguments.length; TMP_357 += 2) {
if(arguments[TMP_357] === G_244){
supplied_END1__214=arguments[TMP_357+1];
break;
}
}
L_END1__214=supplied_END1__214 !== undefined ? supplied_END1__214 : (lisp.values1(lisp.S_nil));
let supplied_START2__215;
for (let TMP_358 = 2; TMP_358 < arguments.length; TMP_358 += 2) {
if(arguments[TMP_358] === G_246){
supplied_START2__215=arguments[TMP_358+1];
break;
}
}
L_START2__215=supplied_START2__215 !== undefined ? supplied_START2__215 : (lisp.values1(0));
let supplied_END2__216;
for (let TMP_359 = 2; TMP_359 < arguments.length; TMP_359 += 2) {
if(arguments[TMP_359] === G_248){
supplied_END2__216=arguments[TMP_359+1];
break;
}
}
L_END2__216=supplied_END2__216 !== undefined ? supplied_END2__216 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_360 = 2; TMP_360 < arguments.length; TMP_360 += 2) {
if(arguments[TMP_360]!==G_248 && arguments[TMP_360]!==G_246 && arguments[TMP_360]!==G_244 && arguments[TMP_360]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_360].name); }
}
TMP_361=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_363;
let TMP_362;
let L_G93__220;
let L_POS__219;
let L_CMP__218;
L_CMP__218=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__219=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G93__220=lisp.jsArrayToList(arguments, 2);
TMP_362=lisp.callFunctionWithCallStack(G_71,L_CMP__218,1);
if(lisp.values1(TMP_362) !== lisp.S_nil){
TMP_363=lisp.values1(lisp.S_nil);
}else{
TMP_363=lisp.values1(L_POS__219);
}
return TMP_363;
});
TMP_364=lisp.callFunctionWithCallStack(G_264,TMP_361);
TMP_365=G_217.func(L_STRING1__211,L_STRING2__212,L_START1__213,L_END1__214,L_START2__215,L_END2__216,G_118);
TMP_366=lisp.CL_multipleValueCall(TMP_364,TMP_365);
return TMP_366;
});
CL_COMMON_LISP_STRING_NOT_GREATERP=lisp.values1(F_STRING_NOT_GREATERP_354);
let F_STRING_LESSP_367;
F_STRING_LESSP_367=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_368, arguments.length);
}
let TMP_379;
let TMP_378;
let TMP_377;
let TMP_374;
let L_END2__226;
let L_START2__225;
let L_END1__224;
let L_START1__223;
let L_STRING2__222;
let L_STRING1__221;
L_STRING1__221=arguments[0];
L_STRING2__222=arguments[1];
let supplied_START1__223;
for (let TMP_369 = 2; TMP_369 < arguments.length; TMP_369 += 2) {
if(arguments[TMP_369] === G_242){
supplied_START1__223=arguments[TMP_369+1];
break;
}
}
L_START1__223=supplied_START1__223 !== undefined ? supplied_START1__223 : (lisp.values1(0));
let supplied_END1__224;
for (let TMP_370 = 2; TMP_370 < arguments.length; TMP_370 += 2) {
if(arguments[TMP_370] === G_244){
supplied_END1__224=arguments[TMP_370+1];
break;
}
}
L_END1__224=supplied_END1__224 !== undefined ? supplied_END1__224 : (lisp.values1(lisp.S_nil));
let supplied_START2__225;
for (let TMP_371 = 2; TMP_371 < arguments.length; TMP_371 += 2) {
if(arguments[TMP_371] === G_246){
supplied_START2__225=arguments[TMP_371+1];
break;
}
}
L_START2__225=supplied_START2__225 !== undefined ? supplied_START2__225 : (lisp.values1(0));
let supplied_END2__226;
for (let TMP_372 = 2; TMP_372 < arguments.length; TMP_372 += 2) {
if(arguments[TMP_372] === G_248){
supplied_END2__226=arguments[TMP_372+1];
break;
}
}
L_END2__226=supplied_END2__226 !== undefined ? supplied_END2__226 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_373 = 2; TMP_373 < arguments.length; TMP_373 += 2) {
if(arguments[TMP_373]!==G_248 && arguments[TMP_373]!==G_246 && arguments[TMP_373]!==G_244 && arguments[TMP_373]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_373].name); }
}
TMP_374=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_376;
let TMP_375;
let L_G94__230;
let L_POS__229;
let L_CMP__228;
L_CMP__228=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__229=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G94__230=lisp.jsArrayToList(arguments, 2);
TMP_375=lisp.callFunctionWithCallStack(G_71,L_CMP__228,-1);
if(lisp.values1(TMP_375) !== lisp.S_nil){
TMP_376=lisp.values1(L_POS__229);
}else{
TMP_376=lisp.values1(lisp.S_nil);
}
return TMP_376;
});
TMP_377=lisp.callFunctionWithCallStack(G_264,TMP_374);
TMP_378=G_217.func(L_STRING1__221,L_STRING2__222,L_START1__223,L_END1__224,L_START2__225,L_END2__226,G_118);
TMP_379=lisp.CL_multipleValueCall(TMP_377,TMP_378);
return TMP_379;
});
CL_COMMON_LISP_STRING_LESSP=lisp.values1(F_STRING_LESSP_367);
let F_STRING_NOT_LESSP_380;
F_STRING_NOT_LESSP_380=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_381, arguments.length);
}
let TMP_392;
let TMP_391;
let TMP_390;
let TMP_387;
let L_END2__236;
let L_START2__235;
let L_END1__234;
let L_START1__233;
let L_STRING2__232;
let L_STRING1__231;
L_STRING1__231=arguments[0];
L_STRING2__232=arguments[1];
let supplied_START1__233;
for (let TMP_382 = 2; TMP_382 < arguments.length; TMP_382 += 2) {
if(arguments[TMP_382] === G_242){
supplied_START1__233=arguments[TMP_382+1];
break;
}
}
L_START1__233=supplied_START1__233 !== undefined ? supplied_START1__233 : (lisp.values1(0));
let supplied_END1__234;
for (let TMP_383 = 2; TMP_383 < arguments.length; TMP_383 += 2) {
if(arguments[TMP_383] === G_244){
supplied_END1__234=arguments[TMP_383+1];
break;
}
}
L_END1__234=supplied_END1__234 !== undefined ? supplied_END1__234 : (lisp.values1(lisp.S_nil));
let supplied_START2__235;
for (let TMP_384 = 2; TMP_384 < arguments.length; TMP_384 += 2) {
if(arguments[TMP_384] === G_246){
supplied_START2__235=arguments[TMP_384+1];
break;
}
}
L_START2__235=supplied_START2__235 !== undefined ? supplied_START2__235 : (lisp.values1(0));
let supplied_END2__236;
for (let TMP_385 = 2; TMP_385 < arguments.length; TMP_385 += 2) {
if(arguments[TMP_385] === G_248){
supplied_END2__236=arguments[TMP_385+1];
break;
}
}
L_END2__236=supplied_END2__236 !== undefined ? supplied_END2__236 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_386 = 2; TMP_386 < arguments.length; TMP_386 += 2) {
if(arguments[TMP_386]!==G_248 && arguments[TMP_386]!==G_246 && arguments[TMP_386]!==G_244 && arguments[TMP_386]!==G_242) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_386].name); }
}
TMP_387=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_389;
let TMP_388;
let L_G95__240;
let L_POS__239;
let L_CMP__238;
L_CMP__238=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_POS__239=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G95__240=lisp.jsArrayToList(arguments, 2);
TMP_388=lisp.callFunctionWithCallStack(G_71,L_CMP__238,-1);
if(lisp.values1(TMP_388) !== lisp.S_nil){
TMP_389=lisp.values1(lisp.S_nil);
}else{
TMP_389=lisp.values1(L_POS__239);
}
return TMP_389;
});
TMP_390=lisp.callFunctionWithCallStack(G_264,TMP_387);
TMP_391=G_217.func(L_STRING1__231,L_STRING2__232,L_START1__233,L_END1__234,L_START2__235,L_END2__236,G_118);
TMP_392=lisp.CL_multipleValueCall(TMP_390,TMP_391);
return TMP_392;
});
CL_COMMON_LISP_STRING_NOT_LESSP=lisp.values1(F_STRING_NOT_LESSP_380);
let F_CHAR_393;
F_CHAR_393=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_394, arguments.length);
}
let TMP_395;
let L_INDEX__242;
let L_STRING__241;
L_STRING__241=arguments[0];
L_INDEX__242=arguments[1];
TMP_395=lisp.callFunctionWithCallStack(G_127,L_STRING__241,L_INDEX__242);
return TMP_395;
});
CL_COMMON_LISP_CHAR=lisp.values1(F_CHAR_393);
let F_SCHAR_416;
F_SCHAR_416=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_417, arguments.length);
}
let TMP_418;
let L_INDEX__261;
let L_STRING__260;
L_STRING__260=arguments[0];
L_INDEX__261=arguments[1];
TMP_418=lisp.callFunctionWithCallStack(G_127,L_STRING__260,L_INDEX__261);
return TMP_418;
});
CL_COMMON_LISP_SCHAR=lisp.values1(F_SCHAR_416);
let F_MAKE_STRING_433;
F_MAKE_STRING_433=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_434, arguments.length);
}
let TMP_440;
let TMP_439;
let L_G118__283;
let L_ELEMENT_TYPE__281;
let L_INITIAL_ELEMENT__280;
let L_SIZE__279;
L_SIZE__279=arguments[0];
let supplied_INITIAL_ELEMENT__280;
for (let TMP_436 = 1; TMP_436 < arguments.length; TMP_436 += 2) {
if(arguments[TMP_436] === G_435){
supplied_INITIAL_ELEMENT__280=arguments[TMP_436+1];
break;
}
}
L_INITIAL_ELEMENT__280=supplied_INITIAL_ELEMENT__280 !== undefined ? supplied_INITIAL_ELEMENT__280 : (lisp.values1(lisp.S_nil));
let supplied_ELEMENT_TYPE__281;
for (let TMP_437 = 1; TMP_437 < arguments.length; TMP_437 += 2) {
if(arguments[TMP_437] === G_120){
supplied_ELEMENT_TYPE__281=arguments[TMP_437+1];
break;
}
}
L_ELEMENT_TYPE__281=supplied_ELEMENT_TYPE__281 !== undefined ? supplied_ELEMENT_TYPE__281 : (lisp.values1(G_7));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_438 = 1; TMP_438 < arguments.length; TMP_438 += 2) {
if(arguments[TMP_438]!==G_120 && arguments[TMP_438]!==G_435) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_438].name); }
}
{
L_G118__283=lisp.values1(L_INITIAL_ELEMENT__280);
if(lisp.values1(L_G118__283) !== lisp.S_nil){
TMP_439=lisp.values1(L_G118__283);
}else{
TMP_439=lisp.values1(lisp.makeCharacter(0));
}
}
TMP_440=lisp.callFunctionWithCallStack(G_123,L_SIZE__279,G_435,lisp.values1(TMP_439),G_120,L_ELEMENT_TYPE__281);
return TMP_440;
});
CL_COMMON_LISP_MAKE_STRING=lisp.values1(F_MAKE_STRING_433);
// initialize symbols
G_3 = lisp.intern('STRINGP', 'COMMON-LISP');
G_5 = lisp.intern('ARRAYP', 'COMMON-LISP');
G_7 = lisp.intern('CHARACTER', 'COMMON-LISP');
G_9 = lisp.intern('ARRAY-ELEMENT-TYPE', 'COMMON-LISP');
G_12 = lisp.intern('SIMPLE-STRING-P', 'COMMON-LISP');
G_19 = lisp.intern('ARRAY-FILL-POINTER', 'COMMON-LISP');
G_21 = lisp.intern('NULL', 'COMMON-LISP');
G_23 = lisp.intern('STRING', 'COMMON-LISP');
G_29 = lisp.intern('CHAR-CODE', 'COMMON-LISP');
G_31 = lisp.intern('CODE-TO-RAW-STRING', 'SYSTEM');
G_33 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_37 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_38 = lisp.intern('STRING-DESIGNATOR', 'COMMON-LISP');
G_40 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_42 = lisp.intern('STRING-APPEND', 'SYSTEM');
G_46 = lisp.intern('ARRAY-TO-RAW-STRING', 'SYSTEM');
G_49 = lisp.intern('CONCAT-RAW-STRING/2', 'SYSTEM');
G_52 = lisp.intern('STRING-APPEND*', 'SYSTEM');
G_54 = lisp.intern('ENDP', 'COMMON-LISP');
G_56 = lisp.intern('CAR', 'COMMON-LISP');
G_58 = lisp.intern('CDR', 'COMMON-LISP');
G_61 = lisp.intern('STRING-UPCASE', 'COMMON-LISP');
G_62 = lisp.intern('START', 'KEYWORD');
G_64 = lisp.intern('END', 'KEYWORD');
G_69 = lisp.intern('LENGTH', 'COMMON-LISP');
G_71 = lisp.intern('=', 'COMMON-LISP');
G_78 = lisp.intern('RAW-STRING-UPCASE', 'SYSTEM');
G_81 = lisp.intern('SUBSEQ', 'COMMON-LISP');
G_89 = lisp.intern('STRING-DOWNCASE', 'COMMON-LISP');
G_102 = lisp.intern('RAW-STRING-DOWNCASE', 'SYSTEM');
G_112 = lisp.intern('STRING-CAPITALIZE', 'COMMON-LISP');
G_118 = lisp.intern('T', 'COMMON-LISP');
G_120 = lisp.intern('ELEMENT-TYPE', 'KEYWORD');
G_121 = lisp.intern('INITIAL-CONTENTS', 'KEYWORD');
G_123 = lisp.intern('MAKE-ARRAY', 'COMMON-LISP');
G_125 = lisp.intern('>=', 'COMMON-LISP');
G_127 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_130 = lisp.intern('CHAR-UPCASE', 'COMMON-LISP');
G_132 = lisp.intern('CHAR-DOWNCASE', 'COMMON-LISP');
G_133 = lisp.intern('(SETF AREF)', 'COMMON-LISP');
G_135 = lisp.intern('ALPHANUMERICP', 'COMMON-LISP');
G_137 = lisp.intern('NOT', 'COMMON-LISP');
G_139 = lisp.intern('1+', 'COMMON-LISP');
G_141 = lisp.intern('NSTRING-UPCASE', 'COMMON-LISP');
G_153 = lisp.intern('NSTRING-DOWNCASE', 'COMMON-LISP');
G_165 = lisp.intern('NSTRING-CAPITALIZE', 'COMMON-LISP');
G_181 = lisp.intern('START-POSITION-WITH-BAG', 'COMMON-LISP');
G_186 = lisp.intern('FIND', 'COMMON-LISP');
G_188 = lisp.intern('+', 'COMMON-LISP');
G_190 = lisp.intern('END-POSITION-WITH-BAG', 'COMMON-LISP');
G_193 = lisp.intern('1-', 'COMMON-LISP');
G_195 = lisp.intern('<', 'COMMON-LISP');
G_201 = lisp.intern('STRING-TRIM', 'COMMON-LISP');
G_207 = lisp.intern('STRING-LEFT-TRIM', 'COMMON-LISP');
G_212 = lisp.intern('STRING-RIGHT-TRIM', 'COMMON-LISP');
G_217 = lisp.intern('STRING-CMP', 'COMMON-LISP');
G_233 = lisp.intern('CHAR/=', 'COMMON-LISP');
G_235 = lisp.intern('CHAR<', 'COMMON-LISP');
G_241 = lisp.intern('STRING=', 'COMMON-LISP');
G_242 = lisp.intern('START1', 'KEYWORD');
G_244 = lisp.intern('END1', 'KEYWORD');
G_246 = lisp.intern('START2', 'KEYWORD');
G_248 = lisp.intern('END2', 'KEYWORD');
G_254 = lisp.intern('STRING/=', 'COMMON-LISP');
G_264 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_268 = lisp.intern('STRING<', 'COMMON-LISP');
G_281 = lisp.intern('STRING>', 'COMMON-LISP');
G_294 = lisp.intern('STRING<=', 'COMMON-LISP');
G_307 = lisp.intern('STRING>=', 'COMMON-LISP');
G_320 = lisp.intern('STRING-EQUAL', 'COMMON-LISP');
G_329 = lisp.intern('STRING-NOT-EQUAL', 'COMMON-LISP');
G_342 = lisp.intern('STRING-GREATERP', 'COMMON-LISP');
G_355 = lisp.intern('STRING-NOT-GREATERP', 'COMMON-LISP');
G_368 = lisp.intern('STRING-LESSP', 'COMMON-LISP');
G_381 = lisp.intern('STRING-NOT-LESSP', 'COMMON-LISP');
G_394 = lisp.intern('CHAR', 'COMMON-LISP');
G_396 = lisp.intern('(SETF CHAR)', 'COMMON-LISP');
G_400 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_404 = lisp.intern('GENSYM', 'COMMON-LISP');
G_406 = lisp.intern('%MAPCAR', 'SYSTEM');
G_409 = lisp.intern('LIST', 'COMMON-LISP');
G_411 = lisp.intern('LIST*', 'COMMON-LISP');
G_414 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_417 = lisp.intern('SCHAR', 'COMMON-LISP');
G_419 = lisp.intern('(SETF SCHAR)', 'COMMON-LISP');
G_434 = lisp.intern('MAKE-STRING', 'COMMON-LISP');
G_435 = lisp.intern('INITIAL-ELEMENT', 'KEYWORD');
G_441 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_STRINGP.lisp_name = 'STRINGP'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_STRINGP);
CL_COMMON_LISP_SIMPLE_STRING_P.lisp_name = 'SIMPLE-STRING-P'
lisp.setSymbolFunction(G_12, CL_COMMON_LISP_SIMPLE_STRING_P);
CL_COMMON_LISP_STRING.lisp_name = 'STRING'
lisp.setSymbolFunction(G_23, CL_COMMON_LISP_STRING);
CL_SYSTEM_STRING_APPEND.lisp_name = 'STRING-APPEND'
lisp.setSymbolFunction(G_42, CL_SYSTEM_STRING_APPEND);
CL_SYSTEM_STRING_APPENDSTAR.lisp_name = 'STRING-APPEND*'
lisp.setSymbolFunction(G_52, CL_SYSTEM_STRING_APPENDSTAR);
CL_COMMON_LISP_STRING_UPCASE.lisp_name = 'STRING-UPCASE'
lisp.setSymbolFunction(G_61, CL_COMMON_LISP_STRING_UPCASE);
CL_COMMON_LISP_STRING_DOWNCASE.lisp_name = 'STRING-DOWNCASE'
lisp.setSymbolFunction(G_89, CL_COMMON_LISP_STRING_DOWNCASE);
CL_COMMON_LISP_STRING_CAPITALIZE.lisp_name = 'STRING-CAPITALIZE'
lisp.setSymbolFunction(G_112, CL_COMMON_LISP_STRING_CAPITALIZE);
CL_COMMON_LISP_NSTRING_UPCASE.lisp_name = 'NSTRING-UPCASE'
lisp.setSymbolFunction(G_141, CL_COMMON_LISP_NSTRING_UPCASE);
CL_COMMON_LISP_NSTRING_DOWNCASE.lisp_name = 'NSTRING-DOWNCASE'
lisp.setSymbolFunction(G_153, CL_COMMON_LISP_NSTRING_DOWNCASE);
CL_COMMON_LISP_NSTRING_CAPITALIZE.lisp_name = 'NSTRING-CAPITALIZE'
lisp.setSymbolFunction(G_165, CL_COMMON_LISP_NSTRING_CAPITALIZE);
CL_COMMON_LISP_START_POSITION_WITH_BAG.lisp_name = 'START-POSITION-WITH-BAG'
lisp.setSymbolFunction(G_181, CL_COMMON_LISP_START_POSITION_WITH_BAG);
CL_COMMON_LISP_END_POSITION_WITH_BAG.lisp_name = 'END-POSITION-WITH-BAG'
lisp.setSymbolFunction(G_190, CL_COMMON_LISP_END_POSITION_WITH_BAG);
CL_COMMON_LISP_STRING_TRIM.lisp_name = 'STRING-TRIM'
lisp.setSymbolFunction(G_201, CL_COMMON_LISP_STRING_TRIM);
CL_COMMON_LISP_STRING_LEFT_TRIM.lisp_name = 'STRING-LEFT-TRIM'
lisp.setSymbolFunction(G_207, CL_COMMON_LISP_STRING_LEFT_TRIM);
CL_COMMON_LISP_STRING_RIGHT_TRIM.lisp_name = 'STRING-RIGHT-TRIM'
lisp.setSymbolFunction(G_212, CL_COMMON_LISP_STRING_RIGHT_TRIM);
CL_COMMON_LISP_STRING_CMP.lisp_name = 'STRING-CMP'
lisp.setSymbolFunction(G_217, CL_COMMON_LISP_STRING_CMP);
CL_COMMON_LISP_STRINGEQUAL.lisp_name = 'STRING='
lisp.setSymbolFunction(G_241, CL_COMMON_LISP_STRINGEQUAL);
CL_COMMON_LISP_STRINGSLASHEQUAL.lisp_name = 'STRING/='
lisp.setSymbolFunction(G_254, CL_COMMON_LISP_STRINGSLASHEQUAL);
CL_COMMON_LISP_STRINGLESS.lisp_name = 'STRING<'
lisp.setSymbolFunction(G_268, CL_COMMON_LISP_STRINGLESS);
CL_COMMON_LISP_STRINGGREATER.lisp_name = 'STRING>'
lisp.setSymbolFunction(G_281, CL_COMMON_LISP_STRINGGREATER);
CL_COMMON_LISP_STRINGLESSEQUAL.lisp_name = 'STRING<='
lisp.setSymbolFunction(G_294, CL_COMMON_LISP_STRINGLESSEQUAL);
CL_COMMON_LISP_STRINGGREATEREQUAL.lisp_name = 'STRING>='
lisp.setSymbolFunction(G_307, CL_COMMON_LISP_STRINGGREATEREQUAL);
CL_COMMON_LISP_STRING_EQUAL.lisp_name = 'STRING-EQUAL'
lisp.setSymbolFunction(G_320, CL_COMMON_LISP_STRING_EQUAL);
CL_COMMON_LISP_STRING_NOT_EQUAL.lisp_name = 'STRING-NOT-EQUAL'
lisp.setSymbolFunction(G_329, CL_COMMON_LISP_STRING_NOT_EQUAL);
CL_COMMON_LISP_STRING_GREATERP.lisp_name = 'STRING-GREATERP'
lisp.setSymbolFunction(G_342, CL_COMMON_LISP_STRING_GREATERP);
CL_COMMON_LISP_STRING_NOT_GREATERP.lisp_name = 'STRING-NOT-GREATERP'
lisp.setSymbolFunction(G_355, CL_COMMON_LISP_STRING_NOT_GREATERP);
CL_COMMON_LISP_STRING_LESSP.lisp_name = 'STRING-LESSP'
lisp.setSymbolFunction(G_368, CL_COMMON_LISP_STRING_LESSP);
CL_COMMON_LISP_STRING_NOT_LESSP.lisp_name = 'STRING-NOT-LESSP'
lisp.setSymbolFunction(G_381, CL_COMMON_LISP_STRING_NOT_LESSP);
CL_COMMON_LISP_CHAR.lisp_name = 'CHAR'
lisp.setSymbolFunction(G_394, CL_COMMON_LISP_CHAR);
TMP_397=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_399;
let L_G_STORE103__250;
let L_G102__249;
let L_G101__248;
let TMP_398;
let L_INDEX__246;
let L_STRING__245;
let L_CHAR__244;
L_CHAR__244=arguments[0];
L_STRING__245=arguments[1];
L_INDEX__246=arguments[2];
TMP_398=lisp.CL_characterp(L_CHAR__244);
if(lisp.values1(TMP_398) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_40,L_CHAR__244,G_7);
}
{
L_G101__248=lisp.values1(L_STRING__245);
L_G102__249=lisp.values1(L_INDEX__246);
L_G_STORE103__250=lisp.values1(L_CHAR__244);
TMP_399=lisp.callFunctionWithCallStack(G_133,L_G_STORE103__250,L_G101__248,L_G102__249);
}
return TMP_399;
});
lisp.CL_setSymbolFunction(G_396,TMP_397);
TMP_401=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_413;
let TMP_412;
let TMP_410;
let TMP_408;
let L_STORE98__257;
let TMP_407;
let L_GENSYMS96__256;
let TMP_405;
let TMP_402;
let L_ARGS97__254;
let L_G105__252;
let L_G104__251;
L_G104__251=arguments[0];
{
L_G105__252=lisp.values1(L_G104__251);
{
L_ARGS97__254=lisp.values1(L_G105__252);
{
TMP_402=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_403;
let L_X__255;
L_X__255=arguments[0];
TMP_403=lisp.callFunctionWithCallStack(G_404);
return TMP_403;
});
TMP_405=lisp.callFunctionWithCallStack(G_406,TMP_402,L_ARGS97__254);
L_GENSYMS96__256=lisp.values1(TMP_405);
TMP_407=lisp.callFunctionWithCallStack(G_404,G_33.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE98__257=lisp.values1(TMP_407);
TMP_408=lisp.callFunctionWithCallStack(G_409,L_STORE98__257);
TMP_410=lisp.callFunctionWithCallStack(G_411,G_396,L_STORE98__257,L_GENSYMS96__256);
TMP_412=lisp.callFunctionWithCallStack(G_411,G_394,L_GENSYMS96__256);
TMP_413=lisp.CL_values(L_GENSYMS96__256,L_ARGS97__254,TMP_408,TMP_410,TMP_412);
}
}
}
return TMP_413;
});
lisp.CL_put(G_394,G_400,TMP_401);
TMP_415=lisp.CL_symbolFunction(G_396);
lisp.CL_put(G_394,G_414,TMP_415);
CL_COMMON_LISP_SCHAR.lisp_name = 'SCHAR'
lisp.setSymbolFunction(G_417, CL_COMMON_LISP_SCHAR);
TMP_420=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_422;
let L_G_STORE114__269;
let L_G113__268;
let L_G112__267;
let TMP_421;
let L_INDEX__265;
let L_STRING__264;
let L_CHAR__263;
L_CHAR__263=arguments[0];
L_STRING__264=arguments[1];
L_INDEX__265=arguments[2];
TMP_421=lisp.CL_characterp(L_CHAR__263);
if(lisp.values1(TMP_421) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_40,L_CHAR__263,G_7);
}
{
L_G112__267=lisp.values1(L_STRING__264);
L_G113__268=lisp.values1(L_INDEX__265);
L_G_STORE114__269=lisp.values1(L_CHAR__263);
TMP_422=lisp.callFunctionWithCallStack(G_133,L_G_STORE114__269,L_G112__267,L_G113__268);
}
return TMP_422;
});
lisp.CL_setSymbolFunction(G_419,TMP_420);
TMP_423=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_431;
let TMP_430;
let TMP_429;
let TMP_428;
let L_STORE109__276;
let TMP_427;
let L_GENSYMS107__275;
let TMP_426;
let TMP_424;
let L_ARGS108__273;
let L_G116__271;
let L_G115__270;
L_G115__270=arguments[0];
{
L_G116__271=lisp.values1(L_G115__270);
{
L_ARGS108__273=lisp.values1(L_G116__271);
{
TMP_424=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_425;
let L_X__274;
L_X__274=arguments[0];
TMP_425=lisp.callFunctionWithCallStack(G_404);
return TMP_425;
});
TMP_426=lisp.callFunctionWithCallStack(G_406,TMP_424,L_ARGS108__273);
L_GENSYMS107__275=lisp.values1(TMP_426);
TMP_427=lisp.callFunctionWithCallStack(G_404,G_33.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE109__276=lisp.values1(TMP_427);
TMP_428=lisp.callFunctionWithCallStack(G_409,L_STORE109__276);
TMP_429=lisp.callFunctionWithCallStack(G_411,G_419,L_STORE109__276,L_GENSYMS107__275);
TMP_430=lisp.callFunctionWithCallStack(G_411,G_417,L_GENSYMS107__275);
TMP_431=lisp.CL_values(L_GENSYMS107__275,L_ARGS108__273,TMP_428,TMP_429,TMP_430);
}
}
}
return TMP_431;
});
lisp.CL_put(G_417,G_400,TMP_423);
TMP_432=lisp.CL_symbolFunction(G_419);
lisp.CL_put(G_417,G_414,TMP_432);
CL_COMMON_LISP_MAKE_STRING.lisp_name = 'MAKE-STRING'
lisp.setSymbolFunction(G_434, CL_COMMON_LISP_MAKE_STRING);
}catch(TMP_1){G_441.func();
console.log(TMP_1.message);
}


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_7;
let G_10;
let G_13;
let G_16;
let G_17;
let G_18;
let G_23;
let G_26;
let G_31;
let G_39;
let G_42;
let G_47;
let G_48;
let G_50;
let G_55;
let G_57;
let G_59;
let G_70;
let G_74;
let G_78;
let G_80;
let G_84;
let G_88;
let CL_COMMON_LISP_FDEFINITION;
let CL_COMMON_LISP_APPLY;
let CL_COMMON_LISP_FUNCALL;
let TMP_87;
let TMP_75;
let TMP_60;
// toplevel defun
let F_FUNCALL_2;
F_FUNCALL_2=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_8;
let TMP_6;
let L_FUNCTION__4;
let TMP_4;
let L_ARGS__2;
let L_FUNCTION__1;
L_FUNCTION__1=arguments[0];
L_ARGS__2=lisp.jsArrayToList(arguments, 1);
{
TMP_4=lisp.callFunctionWithCallStack(G_5,L_FUNCTION__1);
L_FUNCTION__4=lisp.values1(TMP_4);
TMP_6=lisp.callFunctionWithCallStack(G_7,L_ARGS__2);
TMP_8=lisp.CL_apply(L_FUNCTION__4,TMP_6);
}
return TMP_8;
});
CL_COMMON_LISP_FUNCALL=lisp.values1(F_FUNCALL_2);
let F_APPLY_9;
F_APPLY_9=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_10, arguments.length);
}
let TMP_37;
let TMP_36;
let L_G12__21;
let TMP_35;
let TMP_34;
let L_G_STORE11__20;
let TMP_33;
let L_G10__19;
let L_A__18;
let TMP_32;
let TMP_30;
let L_G_STORE7__17;
let TMP_29;
let L_G6__16;
let TMP_28;
let TMP_27;
let TMP_25;
let TMP_24;
let TMP_22;
let L_REST__15;
let BLOCK_RESULT_NIL__14;
let L_TAIL__13;
let L_HEAD__12;
let TMP_21;
let TMP_20;
let TMP_19;
let TMP_15;
let TMP_14;
let L_G0__10;
let TMP_12;
let L_FUNCTION__9;
let TMP_11;
let L_ARGS__7;
let L_ARG__6;
let L_FUNCTION__5;
L_FUNCTION__5=arguments[0];
L_ARG__6=arguments[1];
L_ARGS__7=lisp.jsArrayToList(arguments, 2);
{
TMP_11=lisp.callFunctionWithCallStack(G_5,L_FUNCTION__5);
L_FUNCTION__9=lisp.values1(TMP_11);
{
TMP_12=lisp.callFunctionWithCallStack(G_13,L_ARGS__7);
L_G0__10=lisp.values1(TMP_12);
if(lisp.values1(L_G0__10) !== lisp.S_nil){
TMP_15=lisp.callFunctionWithCallStack(G_16,L_ARG__6);
if(lisp.values1(TMP_15) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_18,L_ARG__6,G_17);
}
TMP_19=lisp.callFunctionWithCallStack(G_7,L_ARG__6);
TMP_20=lisp.CL_apply(L_FUNCTION__9,TMP_19);
TMP_14=TMP_20;
}else{
{
TMP_21=lisp.callFunctionWithCallStack(G_17,L_ARG__6);
L_HEAD__12=lisp.values1(TMP_21);
L_TAIL__13=lisp.values1(L_HEAD__12);
BLOCK_NIL__14: for(;;){{
L_REST__15=lisp.values1(L_ARGS__7);
for(;;){
TMP_22=lisp.callFunctionWithCallStack(G_23,L_REST__15);
TMP_24=lisp.callFunctionWithCallStack(G_13,TMP_22);
if(lisp.values1(TMP_24) !== lisp.S_nil){
TMP_25=lisp.callFunctionWithCallStack(G_26,L_REST__15);
TMP_27=lisp.callFunctionWithCallStack(G_16,TMP_25);
if(lisp.values1(TMP_27) !== lisp.S_nil){
}else{
TMP_28=lisp.callFunctionWithCallStack(G_26,L_REST__15);
lisp.callFunctionWithCallStack(G_18,TMP_28,G_17);
}
{
L_G6__16=lisp.values1(L_TAIL__13);
TMP_29=lisp.callFunctionWithCallStack(G_26,L_REST__15);
L_G_STORE7__17=lisp.values1(TMP_29);
TMP_30=lisp.callFunctionWithCallStack(G_31,L_G_STORE7__17,L_G6__16);
}
BLOCK_RESULT_NIL__14=TMP_30;
break BLOCK_NIL__14;
}else{
{
TMP_32=lisp.callFunctionWithCallStack(G_26,L_REST__15);
L_A__18=lisp.values1(TMP_32);
{
L_G10__19=lisp.values1(L_TAIL__13);
TMP_33=lisp.callFunctionWithCallStack(G_17,L_A__18);
L_G_STORE11__20=lisp.values1(TMP_33);
lisp.callFunctionWithCallStack(G_31,L_G_STORE11__20,L_G10__19);
}
TMP_34=lisp.callFunctionWithCallStack(G_23,L_TAIL__13);
L_TAIL__13=lisp.values1(TMP_34);
}
{
TMP_35=lisp.callFunctionWithCallStack(G_23,L_REST__15);
L_G12__21=lisp.values1(TMP_35);
L_REST__15=lisp.values1(L_G12__21);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__14=lisp.values1(lisp.S_nil);
break;
}
TMP_36=lisp.callFunctionWithCallStack(G_7,L_HEAD__12);
TMP_37=lisp.CL_apply(L_FUNCTION__9,TMP_36);
}
TMP_14=TMP_37;
}
}
}
return TMP_14;
});
CL_COMMON_LISP_APPLY=lisp.values1(F_APPLY_9);
let F_FDEFINITION_38;
F_FDEFINITION_38=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_39, arguments.length);
}
let TMP_58;
let L_G16__27;
let TMP_56;
let TMP_54;
let L_G13__26;
let TMP_53;
let TMP_52;
let L_G15__25;
let TMP_51;
let TMP_49;
let TMP_46;
let TMP_45;
let TMP_44;
let TMP_43;
let TMP_41;
let L_G14__24;
let TMP_40;
let L_X__22;
L_X__22=arguments[0];
{
{
TMP_40=lisp.CL_consp(L_X__22);
L_G14__24=lisp.values1(TMP_40);
if(lisp.values1(L_G14__24) !== lisp.S_nil){
TMP_43=lisp.callFunctionWithCallStack(G_26,L_X__22);
TMP_44=lisp.CL_eq(G_42,TMP_43);
if(lisp.values1(TMP_44) !== lisp.S_nil){
TMP_46=lisp.callFunctionWithCallStack(G_47,L_X__22);
TMP_49=lisp.callFunctionWithCallStack(G_50,TMP_46,G_48);
TMP_45=lisp.values1(TMP_49);
}else{
TMP_45=lisp.values1(lisp.S_nil);
}
TMP_41=lisp.values1(TMP_45);
}else{
{
TMP_51=lisp.CL_symbolp(L_X__22);
L_G15__25=lisp.values1(TMP_51);
if(lisp.values1(L_G15__25) !== lisp.S_nil){
TMP_53=lisp.CL_symbolFunction(L_X__22);
TMP_52=lisp.values1(TMP_53);
}else{
TMP_52=lisp.values1(lisp.S_nil);
}
}
TMP_41=lisp.values1(lisp.values1(TMP_52));
}
}
L_G13__26=lisp.values1(lisp.values1(TMP_41));
if(lisp.values1(L_G13__26) !== lisp.S_nil){
TMP_54=lisp.values1(L_G13__26);
}else{
{
TMP_56=lisp.callFunctionWithCallStack(G_57,G_55.func(lisp.codeArrayToString([84, 104, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 126, 83, 32, 105, 115, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 46])),L_X__22);
L_G16__27=lisp.values1(TMP_56);
if(lisp.values1(L_G16__27) !== lisp.S_nil){
TMP_58=lisp.values1(L_G16__27);
}else{
TMP_58=lisp.values1(lisp.S_nil);
}
}
TMP_54=TMP_58;
}
}
return TMP_54;
});
CL_COMMON_LISP_FDEFINITION=lisp.values1(F_FDEFINITION_38);
// initialize symbols
G_3 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_5 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_7 = lisp.intern('LIST-TO-RAW-ARRAY', 'SYSTEM');
G_10 = lisp.intern('APPLY', 'COMMON-LISP');
G_13 = lisp.intern('NULL', 'COMMON-LISP');
G_16 = lisp.intern('LISTP', 'COMMON-LISP');
G_17 = lisp.intern('LIST', 'COMMON-LISP');
G_18 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_23 = lisp.intern('CDR', 'COMMON-LISP');
G_26 = lisp.intern('CAR', 'COMMON-LISP');
G_31 = lisp.intern('(SETF CDR)', 'COMMON-LISP');
G_39 = lisp.intern('FDEFINITION', 'COMMON-LISP');
G_42 = lisp.intern('SETF', 'COMMON-LISP');
G_47 = lisp.intern('CADR', 'COMMON-LISP');
G_48 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_50 = lisp.intern('GET', 'COMMON-LISP');
G_55 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_57 = lisp.intern('ERROR', 'COMMON-LISP');
G_59 = lisp.intern('(SETF FDEFINITION)', 'COMMON-LISP');
G_70 = lisp.intern('(SETF SYMBOL-FUNCTION)', 'COMMON-LISP');
G_74 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_78 = lisp.intern('GENSYM', 'COMMON-LISP');
G_80 = lisp.intern('%MAPCAR', 'SYSTEM');
G_84 = lisp.intern('LIST*', 'COMMON-LISP');
G_88 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_FUNCALL.lisp_name = 'FUNCALL'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_FUNCALL);
CL_COMMON_LISP_APPLY.lisp_name = 'APPLY'
lisp.setSymbolFunction(G_10, CL_COMMON_LISP_APPLY);
CL_COMMON_LISP_FDEFINITION.lisp_name = 'FDEFINITION'
lisp.setSymbolFunction(G_39, CL_COMMON_LISP_FDEFINITION);
TMP_60=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_73;
let L_G31__40;
let TMP_72;
let TMP_71;
let L_G22__39;
let TMP_69;
let L_G_STORE30__38;
let L_G29__37;
let TMP_68;
let L_G28__36;
let TMP_67;
let L_G27__35;
let L_G26__34;
let L_G24__32;
let TMP_66;
let TMP_65;
let TMP_64;
let TMP_63;
let TMP_62;
let L_G23__31;
let TMP_61;
let L_X__29;
let L_FUNCTION__28;
L_FUNCTION__28=arguments[0];
L_X__29=arguments[1];
{
{
TMP_61=lisp.CL_consp(L_X__29);
L_G23__31=lisp.values1(TMP_61);
if(lisp.values1(L_G23__31) !== lisp.S_nil){
TMP_63=lisp.callFunctionWithCallStack(G_26,L_X__29);
TMP_64=lisp.CL_eq(G_42,TMP_63);
if(lisp.values1(TMP_64) !== lisp.S_nil){
{
TMP_66=lisp.callFunctionWithCallStack(G_47,L_X__29);
L_G24__32=lisp.values1(TMP_66);
L_G26__34=lisp.values1(L_FUNCTION__28);
{
L_G27__35=lisp.values1(L_G26__34);
lisp.CL_put(L_G24__32,G_48,L_G27__35);
}
}
TMP_65=lisp.values1(lisp.values1(lisp.values1(lisp.values1(L_G27__35))));
}else{
TMP_65=lisp.values1(lisp.S_nil);
}
TMP_62=lisp.values1(TMP_65);
}else{
{
TMP_67=lisp.CL_symbolp(L_X__29);
L_G28__36=lisp.values1(TMP_67);
if(lisp.values1(L_G28__36) !== lisp.S_nil){
{
L_G29__37=lisp.values1(L_X__29);
L_G_STORE30__38=lisp.values1(L_FUNCTION__28);
TMP_69=lisp.callFunctionWithCallStack(G_70,L_G_STORE30__38,L_G29__37);
}
TMP_68=lisp.values1(lisp.values1(TMP_69));
}else{
TMP_68=lisp.values1(lisp.S_nil);
}
}
TMP_62=lisp.values1(lisp.values1(TMP_68));
}
}
L_G22__39=lisp.values1(lisp.values1(TMP_62));
if(lisp.values1(L_G22__39) !== lisp.S_nil){
TMP_71=lisp.values1(L_G22__39);
}else{
{
TMP_72=lisp.callFunctionWithCallStack(G_57,G_55.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 110, 97, 109, 101, 58, 32, 126, 83])),L_X__29);
L_G31__40=lisp.values1(TMP_72);
if(lisp.values1(L_G31__40) !== lisp.S_nil){
TMP_73=lisp.values1(L_G31__40);
}else{
TMP_73=lisp.values1(lisp.S_nil);
}
}
TMP_71=TMP_73;
}
}
return TMP_71;
});
lisp.CL_setSymbolFunction(G_59,TMP_60);
TMP_75=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_86;
let TMP_85;
let TMP_83;
let TMP_82;
let L_STORE19__47;
let TMP_81;
let L_GENSYMS17__46;
let TMP_79;
let TMP_76;
let L_ARGS18__44;
let L_G33__42;
let L_G32__41;
L_G32__41=arguments[0];
{
L_G33__42=lisp.values1(L_G32__41);
{
L_ARGS18__44=lisp.values1(L_G33__42);
{
TMP_76=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_77;
let L_X__45;
L_X__45=arguments[0];
TMP_77=lisp.callFunctionWithCallStack(G_78);
return TMP_77;
});
TMP_79=lisp.callFunctionWithCallStack(G_80,TMP_76,L_ARGS18__44);
L_GENSYMS17__46=lisp.values1(TMP_79);
TMP_81=lisp.callFunctionWithCallStack(G_78,G_55.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE19__47=lisp.values1(TMP_81);
TMP_82=lisp.callFunctionWithCallStack(G_17,L_STORE19__47);
TMP_83=lisp.callFunctionWithCallStack(G_84,G_59,L_STORE19__47,L_GENSYMS17__46);
TMP_85=lisp.callFunctionWithCallStack(G_84,G_39,L_GENSYMS17__46);
TMP_86=lisp.CL_values(L_GENSYMS17__46,L_ARGS18__44,TMP_82,TMP_83,TMP_85);
}
}
}
return TMP_86;
});
lisp.CL_put(G_39,G_74,TMP_75);
TMP_87=lisp.CL_symbolFunction(G_59);
lisp.CL_put(G_39,G_48,TMP_87);
}catch(TMP_1){G_88.func();
console.log(TMP_1.message);
}


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_11;
let G_13;
let G_15;
let G_17;
let G_20;
let G_25;
let G_27;
let G_29;
let G_31;
let G_33;
let G_36;
let G_38;
let G_45;
let G_47;
let G_57;
let G_72;
let G_74;
let G_76;
let G_78;
let G_81;
let G_82;
let G_86;
let G_88;
let G_90;
let G_93;
let G_97;
let G_104;
let G_106;
let G_107;
let G_109;
let G_122;
let G_128;
let G_132;
let G_134;
let G_138;
let G_142;
let G_144;
let G_147;
let G_150;
let G_151;
let G_153;
let G_171;
let G_172;
let G_176;
let G_184;
let G_187;
let G_188;
let G_190;
let G_197;
let G_199;
let G_205;
let G_212;
let G_228;
let G_230;
let G_242;
let G_245;
let G_248;
let G_256;
let G_258;
let G_259;
let G_260;
let G_272;
let G_285;
let G_291;
let G_309;
let G_315;
let G_325;
let G_328;
let G_331;
let G_343;
let G_346;
let G_351;
let G_363;
let G_377;
let G_378;
let G_380;
let G_384;
let G_422;
let G_426;
let G_434;
let G_444;
let G_453;
let G_456;
let G_457;
let G_462;
let G_465;
let G_481;
let G_485;
let G_487;
let G_497;
let G_513;
let G_523;
let G_576;
let G_581;
let G_583;
let G_605;
let G_618;
let G_625;
let G_628;
let G_668;
let G_688;
let G_697;
let G_713;
let G_726;
let G_735;
let G_741;
let G_744;
let G_754;
let G_834;
let G_840;
let G_852;
let G_880;
let G_890;
let G_907;
let G_934;
let G_944;
let G_958;
let G_963;
let G_968;
let G_989;
let G_1006;
let G_1007;
let G_1019;
let G_1030;
let G_1032;
let G_1041;
let G_1043;
let G_1052;
let G_1071;
let G_1111;
let G_1114;
let G_1133;
let G_1152;
let G_1170;
let G_1180;
let G_1182;
let G_1211;
let G_1270;
let G_1283;
let G_1296;
let G_1300;
let CL_COMMON_LISP_NOTANY;
let CL_COMMON_LISP_SOME;
let CL_COMMON_LISP_EVERY;
let CL_COMMON_LISP_DELETE_DUPLICATES;
let CL_COMMON_LISP_DELETE_DUPLICATES_VECTOR;
let CL_COMMON_LISP_DELETE_DUPLICATES_LIST;
let CL_COMMON_LISP_REMOVE_DUPLICATES;
let CL_COMMON_LISP_DELETE_IF_NOT;
let CL_COMMON_LISP_DELETE_IF;
let CL_COMMON_LISP_DELETE_IF_VECTOR;
let CL_COMMON_LISP_DELETE_IF_VECTOR_1;
let CL_COMMON_LISP_TRIM_VECTOR;
let CL_COMMON_LISP_DELETE_IF_LIST;
let CL_COMMON_LISP_DELETE;
let CL_COMMON_LISP_REMOVE_IF_NOT;
let CL_COMMON_LISP_REMOVE_IF;
let CL_COMMON_LISP_REMOVE;
let CL_COMMON_LISP_MERGE;
let CL_COMMON_LISP_MERGE_LISTS;
let CL_COMMON_LISP_SEQUENCE_TO_LIST;
let CL_COMMON_LISP_CONCATENATE;
let CL_COMMON_LISP_NSUBSTITUTE_IF_NOT;
let CL_COMMON_LISP_NSUBSTITUTE_IF;
let CL_COMMON_LISP_NSUBSTITUTE;
let CL_COMMON_LISP_SUBSTITUTE_IF_NOT;
let CL_COMMON_LISP_SUBSTITUTE_IF;
let CL_COMMON_LISP_SUBSTITUTE;
let CL_COMMON_LISP_REPLACE;
let CL_COMMON_LISP_MISMATCH;
let CL_COMMON_LISP_SEARCH;
let CL_COMMON_LISP_COUNT_IF_NOT;
let CL_COMMON_LISP_COUNT_IF;
let CL_COMMON_LISP_COUNT;
let CL_COMMON_LISP_POSITION_IF_NOT;
let CL_COMMON_LISP_POSITION_IF;
let CL_COMMON_LISP_POSITION;
let CL_COMMON_LISP_FIND_IF_NOT;
let CL_COMMON_LISP_FIND_IF;
let CL_COMMON_LISP_FIND;
let CL_COMMON_LISP_STABLE_SORT;
let CL_COMMON_LISP_STABLE_SORT_VECTOR;
let CL_COMMON_LISP_STABLE_SORT_LIST;
let CL_COMMON_LISP_SORT;
let CL_COMMON_LISP_NREVERSE;
let CL_COMMON_LISP_NREVERSE_VECTOR;
let CL_COMMON_LISP_NREVERSE_LIST;
let CL_COMMON_LISP_REVERSE;
let CL_COMMON_LISP_REVERSE_VECTOR;
let CL_COMMON_LISP_REVERSE_LIST;
let CL_COMMON_LISP_LENGTH;
let CL_COMMON_LISP_REDUCE;
let CL_COMMON_LISP_REDUCE_LIST_FROM_END;
let CL_COMMON_LISP_REDUCE_LIST;
let CL_COMMON_LISP_MAP_INTO;
let CL_COMMON_LISP_MAP;
let CL_COMMON_LISP_SUBSEQ;
let CL_COMMON_LISP_SUBSEQ_VECTOR;
let CL_COMMON_LISP_SUBSEQ_LIST;
let CL_COMMON_LISP_MAKE_SEQUENCE;
let CL_COMMON_LISP_FILL;
let CL_COMMON_LISP_ELT;
let CL_COMMON_LISP_COPY_SEQ;
let CL_COMMON_LISP_MAP_SEQUENCES;
let CL_COMMON_LISP_MAP_SEQUENCE;
let CL_COMMON_LISP_CHECK_BOTH_BOUNDS;
let TMP_270;
let TMP_261;
let TMP_257;
let TMP_148;
let TMP_135;
let TMP_123;
// toplevel defun
let F_CHECK_BOTH_BOUNDS_2;
F_CHECK_BOTH_BOUNDS_2=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_12;
let TMP_10;
let TMP_9;
let L_G1__6;
let TMP_8;
let TMP_7;
let TMP_6;
let L_G0__5;
let TMP_4;
let L_LENGTH__3;
let L_END__2;
let L_START__1;
L_START__1=arguments[0];
L_END__2=arguments[1];
L_LENGTH__3=arguments[2];
{
TMP_4=lisp.callFunctionWithCallStack(G_5,L_LENGTH__3,L_START__1);
L_G0__5=lisp.values1(TMP_4);
if(lisp.values1(L_G0__5) !== lisp.S_nil){
TMP_6=lisp.values1(L_G0__5);
}else{
{
if(lisp.values1(L_END__2) !== lisp.S_nil){
TMP_8=lisp.callFunctionWithCallStack(G_5,L_LENGTH__3,L_END__2);
TMP_7=lisp.values1(TMP_8);
}else{
TMP_7=lisp.values1(lisp.S_nil);
}
L_G1__6=lisp.values1(TMP_7);
if(lisp.values1(L_G1__6) !== lisp.S_nil){
TMP_9=lisp.values1(L_G1__6);
}else{
TMP_9=lisp.values1(lisp.S_nil);
}
}
TMP_6=lisp.values1(lisp.values1(TMP_9));
}
}
if(lisp.values1(lisp.values1(TMP_6)) !== lisp.S_nil){
TMP_12=lisp.callFunctionWithCallStack(G_13,G_11.func(lisp.codeArrayToString([111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115])));
TMP_10=TMP_12;
}else{
TMP_10=lisp.values1(lisp.S_nil);
}
return TMP_10;
});
CL_COMMON_LISP_CHECK_BOTH_BOUNDS=lisp.values1(F_CHECK_BOTH_BOUNDS_2);
let F_MAP_SEQUENCE_14;
F_MAP_SEQUENCE_14=(function(){
if(arguments.length !== 6) {
lisp.argumentsError(G_15, arguments.length);
}
let TMP_73;
let L_G51__47;
let TMP_71;
let TMP_70;
let TMP_69;
let L_I__46;
let BLOCK_RESULT_NIL__45;
let L_G44__44;
let TMP_68;
let TMP_67;
let TMP_66;
let TMP_65;
let L_I__43;
let BLOCK_RESULT_NIL__42;
let TMP_64;
let L_G37__41;
let TMP_63;
let TMP_62;
let TMP_61;
let L_I__40;
let TMP_60;
let BLOCK_RESULT_NIL__39;
let L_G30__38;
let TMP_59;
let TMP_58;
let TMP_56;
let TMP_55;
let L_I__37;
let TMP_54;
let BLOCK_RESULT_NIL__36;
let TMP_53;
let TMP_52;
let L_END__35;
let TMP_51;
let L_G23__34;
let TMP_50;
let TMP_49;
let L_G22__33;
let TMP_48;
let L_G21__32;
let TMP_46;
let L_G20__31;
let TMP_44;
let L_G19__30;
let TMP_43;
let TMP_42;
let L_X__29;
let TMP_41;
let TMP_40;
let L_I__28;
let L_REST__27;
let TMP_39;
let BLOCK_RESULT_NIL__26;
let L_G12__25;
let TMP_37;
let L_G11__24;
let TMP_35;
let TMP_34;
let L_X__23;
let TMP_32;
let TMP_30;
let L_I__22;
let L_REST__21;
let TMP_28;
let TMP_26;
let BLOCK_RESULT_NIL__20;
let L_SEQUENCE__19;
let TMP_24;
let TMP_23;
let L_END__18;
let TMP_22;
let L_G4__17;
let TMP_21;
let L_G3__16;
let L_LENGTH__15;
let TMP_19;
let TMP_18;
let L_G2__14;
let TMP_16;
let L_KEY__12;
let L_END__11;
let L_START__10;
let L_FROM_END__9;
let L_SEQUENCE__8;
let L_FUNCTION__7;
L_FUNCTION__7=arguments[0];
L_SEQUENCE__8=arguments[1];
L_FROM_END__9=arguments[2];
L_START__10=arguments[3];
L_END__11=arguments[4];
L_KEY__12=arguments[5];
if(lisp.values1(L_START__10) !== lisp.S_nil){
}else{
L_START__10=lisp.values1(0);
}
{
TMP_16=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__8);
L_G2__14=lisp.values1(TMP_16);
if(lisp.values1(L_G2__14) !== lisp.S_nil){
{
TMP_19=G_20.func(L_SEQUENCE__8);
L_LENGTH__15=lisp.values1(TMP_19);
{
L_G3__16=lisp.values1(L_END__11);
if(lisp.values1(L_G3__16) !== lisp.S_nil){
TMP_21=lisp.values1(L_G3__16);
}else{
{
L_G4__17=lisp.values1(L_LENGTH__15);
if(lisp.values1(L_G4__17) !== lisp.S_nil){
TMP_22=lisp.values1(L_G4__17);
}else{
TMP_22=lisp.values1(lisp.S_nil);
}
}
TMP_21=lisp.values1(lisp.values1(TMP_22));
}
}
L_END__18=lisp.values1(lisp.values1(TMP_21));
if(lisp.values1(L_FROM_END__9) !== lisp.S_nil){
{
TMP_24=G_25.func(L_SEQUENCE__8);
L_SEQUENCE__19=lisp.values1(TMP_24);
BLOCK_NIL__20: for(;;){{
TMP_26=lisp.callFunctionWithCallStack(G_27,L_LENGTH__15,L_END__18);
TMP_28=lisp.callFunctionWithCallStack(G_29,TMP_26,L_SEQUENCE__19);
L_REST__21=lisp.values1(TMP_28);
L_I__22=lisp.values1(L_END__18);
for(;;){
TMP_30=lisp.callFunctionWithCallStack(G_31,L_I__22,L_START__10);
if(lisp.values1(TMP_30) !== lisp.S_nil){
BLOCK_RESULT_NIL__20=lisp.values1(lisp.S_nil);
break BLOCK_NIL__20;
}else{
{
TMP_32=lisp.callFunctionWithCallStack(G_33,L_REST__21);
L_X__23=lisp.values1(TMP_32);
if(lisp.values1(L_KEY__12) !== lisp.S_nil){
TMP_34=lisp.CL_funcall(lisp.values1(L_KEY__12),L_X__23);
lisp.CL_funcall(lisp.values1(L_FUNCTION__7),TMP_34);
}else{
lisp.CL_funcall(lisp.values1(L_FUNCTION__7),L_X__23);
}
}
{
TMP_35=lisp.callFunctionWithCallStack(G_36,L_REST__21);
L_G11__24=lisp.values1(TMP_35);
TMP_37=lisp.callFunctionWithCallStack(G_38,L_I__22);
L_G12__25=lisp.values1(TMP_37);
L_REST__21=lisp.values1(L_G11__24);
L_I__22=lisp.values1(L_G12__25);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__20=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_23=BLOCK_RESULT_NIL__20;
}else{
BLOCK_NIL__26: for(;;){{
TMP_39=lisp.callFunctionWithCallStack(G_29,L_START__10,L_SEQUENCE__8);
L_REST__27=lisp.values1(TMP_39);
L_I__28=lisp.values1(L_START__10);
for(;;){
TMP_40=lisp.callFunctionWithCallStack(G_31,L_I__28,L_END__18);
if(lisp.values1(TMP_40) !== lisp.S_nil){
BLOCK_RESULT_NIL__26=lisp.values1(lisp.S_nil);
break BLOCK_NIL__26;
}else{
{
TMP_41=lisp.callFunctionWithCallStack(G_33,L_REST__27);
L_X__29=lisp.values1(TMP_41);
if(lisp.values1(L_KEY__12) !== lisp.S_nil){
TMP_42=lisp.CL_funcall(lisp.values1(L_KEY__12),L_X__29);
lisp.CL_funcall(lisp.values1(L_FUNCTION__7),TMP_42);
}else{
lisp.CL_funcall(lisp.values1(L_FUNCTION__7),L_X__29);
}
}
{
TMP_43=lisp.callFunctionWithCallStack(G_36,L_REST__27);
L_G19__30=lisp.values1(TMP_43);
TMP_44=lisp.callFunctionWithCallStack(G_45,L_I__28);
L_G20__31=lisp.values1(TMP_44);
L_REST__27=lisp.values1(L_G19__30);
L_I__28=lisp.values1(L_G20__31);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__26=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_23=BLOCK_RESULT_NIL__26;
}
}
TMP_18=TMP_23;
}else{
{
TMP_46=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__8);
L_G21__32=lisp.values1(TMP_46);
if(lisp.values1(L_G21__32) !== lisp.S_nil){
{
{
L_G22__33=lisp.values1(L_END__11);
if(lisp.values1(L_G22__33) !== lisp.S_nil){
TMP_49=lisp.values1(L_G22__33);
}else{
{
TMP_50=G_20.func(L_SEQUENCE__8);
L_G23__34=lisp.values1(TMP_50);
if(lisp.values1(L_G23__34) !== lisp.S_nil){
TMP_51=lisp.values1(L_G23__34);
}else{
TMP_51=lisp.values1(lisp.S_nil);
}
}
TMP_49=lisp.values1(lisp.values1(TMP_51));
}
}
L_END__35=lisp.values1(lisp.values1(TMP_49));
if(lisp.values1(L_FROM_END__9) !== lisp.S_nil){
if(lisp.values1(L_KEY__12) !== lisp.S_nil){
BLOCK_NIL__36: for(;;){{
TMP_54=lisp.callFunctionWithCallStack(G_38,L_END__35);
L_I__37=lisp.values1(TMP_54);
for(;;){
TMP_55=lisp.callFunctionWithCallStack(G_5,L_I__37,L_START__10);
if(lisp.values1(TMP_55) !== lisp.S_nil){
BLOCK_RESULT_NIL__36=lisp.values1(lisp.S_nil);
break BLOCK_NIL__36;
}else{
TMP_56=lisp.callFunctionWithCallStack(G_57,L_SEQUENCE__8,L_I__37);
TMP_58=lisp.CL_funcall(lisp.values1(L_KEY__12),TMP_56);
lisp.CL_funcall(lisp.values1(L_FUNCTION__7),TMP_58);
{
TMP_59=lisp.callFunctionWithCallStack(G_38,L_I__37);
L_G30__38=lisp.values1(TMP_59);
L_I__37=lisp.values1(L_G30__38);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__36=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_53=BLOCK_RESULT_NIL__36;
}else{
BLOCK_NIL__39: for(;;){{
TMP_60=lisp.callFunctionWithCallStack(G_38,L_END__35);
L_I__40=lisp.values1(TMP_60);
for(;;){
TMP_61=lisp.callFunctionWithCallStack(G_5,L_I__40,L_START__10);
if(lisp.values1(TMP_61) !== lisp.S_nil){
BLOCK_RESULT_NIL__39=lisp.values1(lisp.S_nil);
break BLOCK_NIL__39;
}else{
TMP_62=lisp.callFunctionWithCallStack(G_57,L_SEQUENCE__8,L_I__40);
lisp.CL_funcall(lisp.values1(L_FUNCTION__7),TMP_62);
{
TMP_63=lisp.callFunctionWithCallStack(G_38,L_I__40);
L_G37__41=lisp.values1(TMP_63);
L_I__40=lisp.values1(L_G37__41);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__39=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_53=BLOCK_RESULT_NIL__39;
}
TMP_52=TMP_53;
}else{
if(lisp.values1(L_KEY__12) !== lisp.S_nil){
BLOCK_NIL__42: for(;;){{
L_I__43=lisp.values1(L_START__10);
for(;;){
TMP_65=lisp.callFunctionWithCallStack(G_31,L_I__43,L_END__35);
if(lisp.values1(TMP_65) !== lisp.S_nil){
BLOCK_RESULT_NIL__42=lisp.values1(lisp.S_nil);
break BLOCK_NIL__42;
}else{
TMP_66=lisp.callFunctionWithCallStack(G_57,L_SEQUENCE__8,L_I__43);
TMP_67=lisp.CL_funcall(lisp.values1(L_KEY__12),TMP_66);
lisp.CL_funcall(lisp.values1(L_FUNCTION__7),TMP_67);
{
TMP_68=lisp.callFunctionWithCallStack(G_45,L_I__43);
L_G44__44=lisp.values1(TMP_68);
L_I__43=lisp.values1(L_G44__44);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__42=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_64=BLOCK_RESULT_NIL__42;
}else{
BLOCK_NIL__45: for(;;){{
L_I__46=lisp.values1(L_START__10);
for(;;){
TMP_69=lisp.callFunctionWithCallStack(G_31,L_I__46,L_END__35);
if(lisp.values1(TMP_69) !== lisp.S_nil){
BLOCK_RESULT_NIL__45=lisp.values1(lisp.S_nil);
break BLOCK_NIL__45;
}else{
TMP_70=lisp.callFunctionWithCallStack(G_57,L_SEQUENCE__8,L_I__46);
lisp.CL_funcall(lisp.values1(L_FUNCTION__7),TMP_70);
{
TMP_71=lisp.callFunctionWithCallStack(G_45,L_I__46);
L_G51__47=lisp.values1(TMP_71);
L_I__46=lisp.values1(L_G51__47);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__45=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_64=BLOCK_RESULT_NIL__45;
}
TMP_52=TMP_64;
}
}
TMP_48=TMP_52;
}else{
TMP_73=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__8,G_72);
TMP_48=TMP_73;
}
}
TMP_18=TMP_48;
}
}
return TMP_18;
});
CL_COMMON_LISP_MAP_SEQUENCE=lisp.values1(F_MAP_SEQUENCE_14);
let F_MAP_SEQUENCES_75;
F_MAP_SEQUENCES_75=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_76, arguments.length);
}
let L_G59__57;
let TMP_95;
let TMP_94;
let TMP_91;
let TMP_89;
let L_LENGTH__55;
let TMP_87;
let TMP_85;
let TMP_84;
let TMP_83;
let L_I__54;
let BLOCK_RESULT_NIL__53;
let L_SEQUENCES__52;
let TMP_80;
let TMP_79;
let TMP_77;
let L_SEQUENCES__50;
let L_FUNCTION__49;
L_FUNCTION__49=arguments[0];
L_SEQUENCES__50=arguments[1];
TMP_77=lisp.callFunctionWithCallStack(G_78,L_SEQUENCES__50);
if(lisp.values1(TMP_77) !== lisp.S_nil){
TMP_79=lisp.values1(lisp.S_nil);
}else{
{
TMP_80=lisp.callFunctionWithCallStack(G_81,L_SEQUENCES__50);
L_SEQUENCES__52=lisp.values1(TMP_80);
BLOCK_NIL__53: for(;;){{
L_I__54=lisp.values1(0);
TMP_83=lisp.CL_symbolFunction(G_82);
TMP_84=lisp.CL_symbolFunction(G_20);
TMP_85=lisp.callFunctionWithCallStack(G_86,TMP_84,L_SEQUENCES__52);
TMP_87=lisp.callFunctionWithCallStack(G_88,TMP_83,TMP_85);
L_LENGTH__55=lisp.values1(TMP_87);
for(;;){
TMP_89=lisp.callFunctionWithCallStack(G_90,L_I__54,L_LENGTH__55);
if(lisp.values1(TMP_89) !== lisp.S_nil){
BLOCK_RESULT_NIL__53=lisp.values1(lisp.S_nil);
break BLOCK_NIL__53;
}else{
TMP_91=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_92;
let L_S__56;
L_S__56=arguments[0];
TMP_92=G_93.func(L_S__56,L_I__54);
return TMP_92;
});
TMP_94=lisp.callFunctionWithCallStack(G_86,TMP_91,L_SEQUENCES__52);
lisp.CL_funcall(lisp.values1(L_FUNCTION__49),TMP_94);
{
TMP_95=lisp.callFunctionWithCallStack(G_45,L_I__54);
L_G59__57=lisp.values1(TMP_95);
L_I__54=lisp.values1(L_G59__57);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__53=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_79=BLOCK_RESULT_NIL__53;
}
return TMP_79;
});
CL_COMMON_LISP_MAP_SEQUENCES=lisp.values1(F_MAP_SEQUENCES_75);
let F_COPY_SEQ_96;
F_COPY_SEQ_96=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_97, arguments.length);
}
let TMP_110;
let TMP_108;
let TMP_105;
let TMP_103;
let TMP_102;
let L_G61__61;
let TMP_101;
let TMP_100;
let TMP_99;
let L_G60__60;
let TMP_98;
let L_SEQUENCE__58;
L_SEQUENCE__58=arguments[0];
{
TMP_98=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__58);
L_G60__60=lisp.values1(TMP_98);
if(lisp.values1(L_G60__60) !== lisp.S_nil){
TMP_100=lisp.callFunctionWithCallStack(G_81,L_SEQUENCE__58);
TMP_99=TMP_100;
}else{
{
TMP_101=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__58);
L_G61__61=lisp.values1(TMP_101);
if(lisp.values1(L_G61__61) !== lisp.S_nil){
TMP_103=G_20.func(L_SEQUENCE__58);
TMP_105=lisp.callFunctionWithCallStack(G_106,L_SEQUENCE__58);
TMP_108=lisp.callFunctionWithCallStack(G_109,TMP_103,G_104,TMP_105,G_107,L_SEQUENCE__58);
TMP_102=TMP_108;
}else{
TMP_110=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__58,G_72);
TMP_102=TMP_110;
}
}
TMP_99=TMP_102;
}
}
return TMP_99;
});
CL_COMMON_LISP_COPY_SEQ=lisp.values1(F_COPY_SEQ_96);
let F_ELT_111;
F_ELT_111=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_93, arguments.length);
}
let TMP_121;
let TMP_120;
let TMP_119;
let L_G64__68;
let TMP_118;
let TMP_117;
let TMP_116;
let TMP_115;
let L_RESULT__67;
let TMP_114;
let TMP_113;
let L_G63__66;
let TMP_112;
let L_INDEX__64;
let L_SEQUENCE__63;
L_SEQUENCE__63=arguments[0];
L_INDEX__64=arguments[1];
{
TMP_112=lisp.CL_consp(L_SEQUENCE__63);
L_G63__66=lisp.values1(TMP_112);
if(lisp.values1(L_G63__66) !== lisp.S_nil){
{
TMP_114=lisp.callFunctionWithCallStack(G_29,L_INDEX__64,L_SEQUENCE__63);
L_RESULT__67=lisp.values1(TMP_114);
if(lisp.values1(L_RESULT__67) !== lisp.S_nil){
TMP_116=lisp.callFunctionWithCallStack(G_33,L_RESULT__67);
TMP_115=TMP_116;
}else{
TMP_117=lisp.callFunctionWithCallStack(G_13,G_11.func(lisp.codeArrayToString([84, 104, 101, 32, 105, 110, 100, 101, 120, 32, 126, 65, 32, 105, 115, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 46])),L_INDEX__64);
TMP_115=TMP_117;
}
}
TMP_113=TMP_115;
}else{
{
TMP_118=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__63);
L_G64__68=lisp.values1(TMP_118);
if(lisp.values1(L_G64__68) !== lisp.S_nil){
TMP_120=lisp.callFunctionWithCallStack(G_57,L_SEQUENCE__63,L_INDEX__64);
TMP_119=TMP_120;
}else{
TMP_121=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__63,G_72);
TMP_119=TMP_121;
}
}
TMP_113=TMP_119;
}
}
return TMP_113;
});
CL_COMMON_LISP_ELT=lisp.values1(F_ELT_111);
let F_FILL_149;
F_FILL_149=(function(){
if(arguments.length < 2 || 6 < arguments.length) {
lisp.argumentsError(G_150, arguments.length);
}
let TMP_169;
let L_G99__108;
let TMP_168;
let L_G_STORE98__107;
let L_G97__106;
let L_G96__105;
let TMP_167;
let L_I__104;
let BLOCK_RESULT_NIL__103;
let TMP_166;
let TMP_165;
let L_G89__102;
let TMP_164;
let L_G88__101;
let TMP_163;
let L_G87__100;
let TMP_162;
let TMP_161;
let TMP_160;
let TMP_159;
let L_START__99;
let L_LIST__98;
let BLOCK_RESULT_NIL__97;
let L_LIST__96;
let TMP_158;
let TMP_157;
let L_G80__95;
let TMP_156;
let L_END__93;
let L_START__92;
let L_ITEM__91;
let L_SEQUENCE__90;
L_SEQUENCE__90=arguments[0];
L_ITEM__91=arguments[1];
let supplied_START__92;
for (let TMP_152 = 2; TMP_152 < arguments.length; TMP_152 += 2) {
if(arguments[TMP_152] === G_151){
supplied_START__92=arguments[TMP_152+1];
break;
}
}
L_START__92=supplied_START__92 !== undefined ? supplied_START__92 : (lisp.values1(0));
let supplied_END__93;
for (let TMP_154 = 2; TMP_154 < arguments.length; TMP_154 += 2) {
if(arguments[TMP_154] === G_153){
supplied_END__93=arguments[TMP_154+1];
break;
}
}
L_END__93=supplied_END__93 !== undefined ? supplied_END__93 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_155 = 2; TMP_155 < arguments.length; TMP_155 += 2) {
if(arguments[TMP_155]!==G_153 && arguments[TMP_155]!==G_151) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_155].name); }
}
{
TMP_156=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__90);
L_G80__95=lisp.values1(TMP_156);
if(lisp.values1(L_G80__95) !== lisp.S_nil){
{
TMP_158=lisp.callFunctionWithCallStack(G_29,L_START__92,L_SEQUENCE__90);
L_LIST__96=lisp.values1(TMP_158);
BLOCK_NIL__97: for(;;){{
L_LIST__98=lisp.values1(L_LIST__96);
L_START__99=lisp.values1(L_START__92);
for(;;){
if(lisp.values1(L_END__93) !== lisp.S_nil){
TMP_160=lisp.callFunctionWithCallStack(G_90,L_START__99,L_END__93);
TMP_159=lisp.values1(TMP_160);
}else{
TMP_161=lisp.callFunctionWithCallStack(G_78,L_LIST__98);
TMP_159=lisp.values1(TMP_161);
}
if(lisp.values1(TMP_159) !== lisp.S_nil){
BLOCK_RESULT_NIL__97=lisp.values1(L_SEQUENCE__90);
break BLOCK_NIL__97;
}else{
lisp.callFunctionWithCallStack(G_128,L_LIST__98,L_ITEM__91);
{
TMP_162=lisp.callFunctionWithCallStack(G_36,L_LIST__98);
L_G87__100=lisp.values1(TMP_162);
TMP_163=lisp.callFunctionWithCallStack(G_45,L_START__99);
L_G88__101=lisp.values1(TMP_163);
L_LIST__98=lisp.values1(L_G87__100);
L_START__99=lisp.values1(L_G88__101);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__97=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_157=BLOCK_RESULT_NIL__97;
}else{
{
TMP_164=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__90);
L_G89__102=lisp.values1(TMP_164);
if(lisp.values1(L_G89__102) !== lisp.S_nil){
if(lisp.values1(L_END__93) !== lisp.S_nil){
}else{
TMP_166=G_20.func(L_SEQUENCE__90);
L_END__93=lisp.values1(TMP_166);
}
BLOCK_NIL__103: for(;;){{
L_I__104=lisp.values1(L_START__92);
for(;;){
TMP_167=lisp.callFunctionWithCallStack(G_90,L_I__104,L_END__93);
if(lisp.values1(TMP_167) !== lisp.S_nil){
BLOCK_RESULT_NIL__103=lisp.values1(L_SEQUENCE__90);
break BLOCK_NIL__103;
}else{
{
L_G96__105=lisp.values1(L_SEQUENCE__90);
L_G97__106=lisp.values1(L_I__104);
L_G_STORE98__107=lisp.values1(L_ITEM__91);
lisp.callFunctionWithCallStack(G_132,L_G_STORE98__107,L_G96__105,L_G97__106);
}
{
TMP_168=lisp.callFunctionWithCallStack(G_45,L_I__104);
L_G99__108=lisp.values1(TMP_168);
L_I__104=lisp.values1(L_G99__108);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__103=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_165=BLOCK_RESULT_NIL__103;
}else{
TMP_169=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__90,G_72);
TMP_165=TMP_169;
}
}
TMP_157=TMP_165;
}
}
return TMP_157;
});
CL_COMMON_LISP_FILL=lisp.values1(F_FILL_149);
let F_MAKE_SEQUENCE_170;
F_MAKE_SEQUENCE_170=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_171, arguments.length);
}
let TMP_210;
let TMP_209;
let TMP_208;
let L_G107__123;
let TMP_207;
let TMP_206;
let TMP_204;
let L_G105__121;
let TMP_203;
let TMP_202;
let TMP_201;
let L_G104__120;
let TMP_200;
let TMP_198;
let TMP_196;
let TMP_195;
let TMP_194;
let TMP_193;
let TMP_192;
let TMP_191;
let L_G103__119;
let TMP_189;
let TMP_186;
let TMP_185;
let L_G102__118;
let TMP_183;
let L_G101__117;
let L_ARGS__116;
let TMP_182;
let TMP_181;
let TMP_180;
let L_NAME__115;
let TMP_179;
let TMP_178;
let TMP_177;
let TMP_175;
let L_INITIAL_ELEMENT_P__113;
let L_INITIAL_ELEMENT__112;
let L_SIZE__111;
let L_RESULT_TYPE__110;
L_RESULT_TYPE__110=arguments[0];
L_SIZE__111=arguments[1];
let supplied_INITIAL_ELEMENT__112;
for (let TMP_173 = 2; TMP_173 < arguments.length; TMP_173 += 2) {
if(arguments[TMP_173] === G_172){
supplied_INITIAL_ELEMENT__112=arguments[TMP_173+1];
break;
}
}
L_INITIAL_ELEMENT__112=supplied_INITIAL_ELEMENT__112 !== undefined ? supplied_INITIAL_ELEMENT__112 : (lisp.values1(lisp.S_nil));
L_INITIAL_ELEMENT_P__113=(supplied_INITIAL_ELEMENT__112 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_174 = 2; TMP_174 < arguments.length; TMP_174 += 2) {
if(arguments[TMP_174]!==G_172) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_174].name); }
}
TMP_175=lisp.callFunctionWithCallStack(G_176,L_RESULT_TYPE__110);
L_RESULT_TYPE__110=lisp.values1(TMP_175);
{
TMP_177=lisp.CL_consp(L_RESULT_TYPE__110);
if(lisp.values1(TMP_177) !== lisp.S_nil){
TMP_179=lisp.callFunctionWithCallStack(G_33,L_RESULT_TYPE__110);
TMP_178=lisp.values1(TMP_179);
}else{
TMP_178=lisp.values1(L_RESULT_TYPE__110);
}
L_NAME__115=lisp.values1(TMP_178);
TMP_180=lisp.CL_consp(L_RESULT_TYPE__110);
if(lisp.values1(TMP_180) !== lisp.S_nil){
TMP_182=lisp.callFunctionWithCallStack(G_36,L_RESULT_TYPE__110);
TMP_181=lisp.values1(TMP_182);
}else{
TMP_181=lisp.values1(lisp.S_nil);
}
L_ARGS__116=lisp.values1(TMP_181);
{
L_G101__117=lisp.values1(L_NAME__115);
{
TMP_183=lisp.callFunctionWithCallStack(G_184,L_G101__117,G_78);
L_G102__118=lisp.values1(TMP_183);
if(lisp.values1(L_G102__118) !== lisp.S_nil){
TMP_186=lisp.callFunctionWithCallStack(G_187,L_SIZE__111);
if(lisp.values1(TMP_186) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_13,G_11.func(lisp.codeArrayToString([84, 104, 101, 32, 108, 101, 110, 103, 116, 104, 32, 114, 101, 113, 117, 101, 115, 116, 101, 100, 32, 40, 49, 41, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 109, 97, 116, 99, 104, 32, 116, 104, 101, 32, 116, 121, 112, 101, 32, 114, 101, 115, 116, 114, 105, 99, 116, 105, 111, 110, 32, 105, 110, 32, 78, 85, 76, 76, 46])));
}
TMP_185=lisp.values1(lisp.S_nil);
}else{
{
TMP_189=lisp.callFunctionWithCallStack(G_190,L_G101__117,lisp.makeCons(G_142, lisp.makeCons(G_188, lisp.S_nil)));
L_G103__119=lisp.values1(TMP_189);
if(lisp.values1(L_G103__119) !== lisp.S_nil){
TMP_192=lisp.CL_eq(L_NAME__115,G_188);
if(lisp.values1(TMP_192) !== lisp.S_nil){
TMP_194=lisp.callFunctionWithCallStack(G_187,L_SIZE__111);
TMP_193=lisp.values1(TMP_194);
}else{
TMP_193=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_193) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_13,G_11.func(lisp.codeArrayToString([84, 104, 101, 32, 108, 101, 110, 103, 116, 104, 32, 114, 101, 113, 117, 101, 115, 116, 101, 100, 32, 40, 48, 41, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 109, 97, 116, 99, 104, 32, 116, 104, 101, 32, 116, 121, 112, 101, 32, 114, 101, 115, 116, 114, 105, 99, 116, 105, 111, 110, 32, 105, 110, 32, 67, 79, 78, 83, 46])));
}else{
}
if(lisp.values1(L_INITIAL_ELEMENT_P__113) !== lisp.S_nil){
TMP_196=lisp.callFunctionWithCallStack(G_197,L_SIZE__111,G_172,L_INITIAL_ELEMENT__112);
TMP_195=TMP_196;
}else{
TMP_198=lisp.callFunctionWithCallStack(G_197,L_SIZE__111);
TMP_195=TMP_198;
}
TMP_191=TMP_195;
}else{
{
TMP_200=lisp.callFunctionWithCallStack(G_184,L_G101__117,G_199);
L_G104__120=lisp.values1(TMP_200);
if(lisp.values1(L_G104__120) !== lisp.S_nil){
if(lisp.values1(L_INITIAL_ELEMENT_P__113) !== lisp.S_nil){
{
TMP_203=lisp.callFunctionWithCallStack(G_33,L_ARGS__116);
L_G105__121=lisp.values1(TMP_203);
if(lisp.values1(L_G105__121) !== lisp.S_nil){
TMP_204=lisp.values1(L_G105__121);
}else{
TMP_204=lisp.values1(G_205);
}
}
TMP_206=lisp.callFunctionWithCallStack(G_109,L_SIZE__111,G_172,L_INITIAL_ELEMENT__112,G_104,lisp.values1(TMP_204));
TMP_202=TMP_206;
}else{
{
TMP_207=lisp.callFunctionWithCallStack(G_33,L_ARGS__116);
L_G107__123=lisp.values1(TMP_207);
if(lisp.values1(L_G107__123) !== lisp.S_nil){
TMP_208=lisp.values1(L_G107__123);
}else{
TMP_208=lisp.values1(G_205);
}
}
TMP_209=lisp.callFunctionWithCallStack(G_109,L_SIZE__111,G_104,lisp.values1(TMP_208));
TMP_202=TMP_209;
}
TMP_201=TMP_202;
}else{
TMP_210=lisp.callFunctionWithCallStack(G_74,L_RESULT_TYPE__110,G_72);
TMP_201=TMP_210;
}
}
TMP_191=TMP_201;
}
}
TMP_185=TMP_191;
}
}
}
}
return TMP_185;
});
CL_COMMON_LISP_MAKE_SEQUENCE=lisp.values1(F_MAKE_SEQUENCE_170);
let F_SUBSEQ_LIST_211;
F_SUBSEQ_LIST_211=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_212, arguments.length);
}
let L_G113__134;
let TMP_227;
let TMP_226;
let L_NEW_LIST__133;
let TMP_225;
let TMP_224;
let TMP_223;
let L_G111__131;
let TMP_222;
let TMP_221;
let TMP_220;
let L_G110__130;
let TMP_219;
let TMP_218;
let TMP_217;
let TMP_216;
let TMP_215;
let TMP_214;
let TMP_213;
let L_END__128;
let L_START__127;
let L_LIST__126;
L_LIST__126=arguments[0];
L_START__127=arguments[1];
L_END__128=arguments[2];
if(lisp.values1(L_START__127) !== lisp.S_nil){
TMP_214=lisp.callFunctionWithCallStack(G_5,0,L_START__127);
TMP_213=lisp.values1(TMP_214);
}else{
TMP_213=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_213) !== lisp.S_nil){
TMP_215=lisp.callFunctionWithCallStack(G_38,L_START__127);
TMP_216=lisp.callFunctionWithCallStack(G_29,TMP_215,L_LIST__126);
L_LIST__126=lisp.values1(TMP_216);
TMP_217=lisp.callFunctionWithCallStack(G_78,L_LIST__126);
if(lisp.values1(TMP_217) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_13,G_11.func(lisp.codeArrayToString([105, 110, 100, 101, 120, 32, 101, 114, 114, 111, 114])));
}else{
}
TMP_218=lisp.callFunctionWithCallStack(G_36,L_LIST__126);
L_LIST__126=lisp.values1(TMP_218);
}else{
}
{
TMP_219=lisp.callFunctionWithCallStack(G_78,L_END__128);
L_G110__130=lisp.values1(TMP_219);
if(lisp.values1(L_G110__130) !== lisp.S_nil){
TMP_221=lisp.callFunctionWithCallStack(G_81,L_LIST__126);
TMP_220=TMP_221;
}else{
{
TMP_222=lisp.callFunctionWithCallStack(G_184,L_START__127,L_END__128);
L_G111__131=lisp.values1(TMP_222);
if(lisp.values1(L_G111__131) !== lisp.S_nil){
TMP_223=lisp.values1(lisp.S_nil);
}else{
TMP_224=lisp.callFunctionWithCallStack(G_27,L_END__128,L_START__127);
L_END__128=lisp.values1(TMP_224);
{
TMP_225=lisp.callFunctionWithCallStack(G_81,L_LIST__126);
L_NEW_LIST__133=lisp.values1(TMP_225);
{
TMP_226=lisp.callFunctionWithCallStack(G_38,L_END__128);
TMP_227=lisp.callFunctionWithCallStack(G_29,TMP_226,L_NEW_LIST__133);
L_G113__134=lisp.values1(TMP_227);
lisp.callFunctionWithCallStack(G_228,lisp.S_nil,L_G113__134);
}
}
TMP_223=lisp.values1(L_NEW_LIST__133);
}
}
TMP_220=TMP_223;
}
}
return TMP_220;
});
CL_COMMON_LISP_SUBSEQ_LIST=lisp.values1(F_SUBSEQ_LIST_211);
let F_SUBSEQ_VECTOR_229;
F_SUBSEQ_VECTOR_229=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_230, arguments.length);
}
let L_G125__149;
let TMP_240;
let L_G124__148;
let TMP_239;
let L_G_STORE123__147;
let TMP_238;
let L_G122__146;
let L_G121__145;
let TMP_237;
let L_J__144;
let L_I__143;
let BLOCK_RESULT_NIL__142;
let L_NEW_VECTOR__141;
let TMP_236;
let TMP_235;
let TMP_234;
let TMP_233;
let TMP_232;
let L_LENGTH__140;
let TMP_231;
let L_END__138;
let L_START__137;
let L_VECTOR__136;
L_VECTOR__136=arguments[0];
L_START__137=arguments[1];
L_END__138=arguments[2];
{
TMP_231=G_20.func(L_VECTOR__136);
L_LENGTH__140=lisp.values1(TMP_231);
if(lisp.values1(L_END__138) !== lisp.S_nil){
TMP_233=lisp.callFunctionWithCallStack(G_5,L_LENGTH__140,L_END__138);
TMP_232=lisp.values1(TMP_233);
}else{
TMP_232=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_232) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_13,G_11.func(lisp.codeArrayToString([105, 110, 100, 101, 120, 32, 101, 114, 114, 111, 114])));
}else{
}
if(lisp.values1(L_END__138) !== lisp.S_nil){
}else{
L_END__138=lisp.values1(L_LENGTH__140);
}
{
TMP_234=lisp.callFunctionWithCallStack(G_27,L_END__138,L_START__137);
TMP_235=lisp.callFunctionWithCallStack(G_106,L_VECTOR__136);
TMP_236=lisp.callFunctionWithCallStack(G_109,TMP_234,G_104,TMP_235);
L_NEW_VECTOR__141=lisp.values1(TMP_236);
BLOCK_NIL__142: for(;;){{
L_I__143=lisp.values1(L_START__137);
L_J__144=lisp.values1(0);
for(;;){
TMP_237=lisp.callFunctionWithCallStack(G_31,L_I__143,L_END__138);
if(lisp.values1(TMP_237) !== lisp.S_nil){
BLOCK_RESULT_NIL__142=lisp.values1(lisp.S_nil);
break BLOCK_NIL__142;
}else{
{
L_G121__145=lisp.values1(L_NEW_VECTOR__141);
L_G122__146=lisp.values1(L_J__144);
TMP_238=lisp.callFunctionWithCallStack(G_57,L_VECTOR__136,L_I__143);
L_G_STORE123__147=lisp.values1(TMP_238);
lisp.callFunctionWithCallStack(G_132,L_G_STORE123__147,L_G121__145,L_G122__146);
}
{
TMP_239=lisp.callFunctionWithCallStack(G_45,L_I__143);
L_G124__148=lisp.values1(TMP_239);
TMP_240=lisp.callFunctionWithCallStack(G_45,L_J__144);
L_G125__149=lisp.values1(TMP_240);
L_I__143=lisp.values1(L_G124__148);
L_J__144=lisp.values1(L_G125__149);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__142=lisp.values1(lisp.S_nil);
break;
}
}
}
return lisp.values1(L_NEW_VECTOR__141);
});
CL_COMMON_LISP_SUBSEQ_VECTOR=lisp.values1(F_SUBSEQ_VECTOR_229);
let F_SUBSEQ_241;
F_SUBSEQ_241=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_242, arguments.length);
}
let TMP_255;
let TMP_254;
let TMP_253;
let L_G127__155;
let TMP_252;
let TMP_251;
let TMP_250;
let L_G126__154;
let TMP_249;
let TMP_247;
let TMP_246;
let TMP_244;
let TMP_243;
let L_END__152;
let L_START__151;
let L_SEQUENCE__150;
L_SEQUENCE__150=arguments[0];
L_START__151=arguments[1];
L_END__152=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
TMP_243=lisp.callFunctionWithCallStack(G_78,L_END__152);
TMP_244=lisp.callFunctionWithCallStack(G_245,TMP_243);
if(lisp.values1(TMP_244) !== lisp.S_nil){
TMP_247=lisp.callFunctionWithCallStack(G_248,L_START__151,L_END__152);
TMP_246=lisp.values1(TMP_247);
}else{
TMP_246=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_246) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_13,G_11.func(lisp.codeArrayToString([115, 116, 97, 114, 116, 32, 62, 32, 101, 110, 100])));
}else{
}
{
TMP_249=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__150);
L_G126__154=lisp.values1(TMP_249);
if(lisp.values1(L_G126__154) !== lisp.S_nil){
TMP_251=G_212.func(L_SEQUENCE__150,L_START__151,L_END__152);
TMP_250=TMP_251;
}else{
{
TMP_252=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__150);
L_G127__155=lisp.values1(TMP_252);
if(lisp.values1(L_G127__155) !== lisp.S_nil){
TMP_254=G_230.func(L_SEQUENCE__150,L_START__151,L_END__152);
TMP_253=TMP_254;
}else{
TMP_255=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__150,G_72);
TMP_253=TMP_255;
}
}
TMP_250=TMP_253;
}
}
return TMP_250;
});
CL_COMMON_LISP_SUBSEQ=lisp.values1(F_SUBSEQ_241);
let F_MAP_271;
F_MAP_271=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_272, arguments.length);
}
let TMP_307;
let TMP_306;
let TMP_305;
let TMP_304;
let TMP_303;
let L_G145__190;
let TMP_302;
let TMP_301;
let L_G144__189;
let TMP_300;
let TMP_299;
let L_G143__188;
let TMP_298;
let L_G142__187;
let L_TYPE_ARGS__186;
let TMP_297;
let TMP_296;
let TMP_295;
let L_TYPE_NAME__185;
let TMP_294;
let TMP_293;
let TMP_292;
let TMP_290;
let TMP_289;
let TMP_283;
let L_LENGTH__181;
let L_ACC__180;
let TMP_282;
let TMP_280;
let TMP_279;
let L_G138__177;
let TMP_278;
let TMP_277;
let L_G137__176;
let TMP_276;
let TMP_275;
let TMP_274;
let TMP_273;
let L_MORE_SEQUENCES__174;
let L_SEQUENCE__173;
let L_FUNCTION__172;
let L_RESULT_TYPE__171;
L_RESULT_TYPE__171=arguments[0];
L_FUNCTION__172=arguments[1];
L_SEQUENCE__173=arguments[2];
L_MORE_SEQUENCES__174=lisp.jsArrayToList(arguments, 3);
TMP_273=lisp.callFunctionWithCallStack(G_176,L_RESULT_TYPE__171);
L_RESULT_TYPE__171=lisp.values1(TMP_273);
{
TMP_274=lisp.callFunctionWithCallStack(G_78,L_RESULT_TYPE__171);
if(lisp.values1(TMP_274) !== lisp.S_nil){
TMP_276=lisp.callFunctionWithCallStack(G_78,L_MORE_SEQUENCES__174);
TMP_275=lisp.values1(TMP_276);
}else{
TMP_275=lisp.values1(lisp.S_nil);
}
L_G137__176=lisp.values1(TMP_275);
if(lisp.values1(L_G137__176) !== lisp.S_nil){
G_15.func(L_FUNCTION__172,L_SEQUENCE__173,lisp.S_nil,lisp.S_nil,lisp.S_nil,lisp.S_nil);
TMP_277=lisp.values1(lisp.S_nil);
}else{
{
TMP_278=lisp.callFunctionWithCallStack(G_78,L_RESULT_TYPE__171);
L_G138__177=lisp.values1(TMP_278);
if(lisp.values1(L_G138__177) !== lisp.S_nil){
TMP_280=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_281;
let L_ARGS__178;
L_ARGS__178=arguments[0];
TMP_281=lisp.callFunctionWithCallStack(G_88,L_FUNCTION__172,L_ARGS__178);
return TMP_281;
});
TMP_282=lisp.CL_cons(L_SEQUENCE__173,L_MORE_SEQUENCES__174);
G_76.func(TMP_280,TMP_282);
TMP_279=lisp.values1(lisp.S_nil);
}else{
{
L_ACC__180=lisp.values1(lisp.S_nil);
L_LENGTH__181=lisp.values1(0);
TMP_283=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_288;
let L_G141__184;
let TMP_287;
let TMP_286;
let L_G140__183;
let TMP_284;
let L_ARGS__182;
L_ARGS__182=arguments[0];
{
TMP_284=lisp.callFunctionWithCallStack(G_285,L_LENGTH__181,1);
L_G140__183=lisp.values1(TMP_284);
L_LENGTH__181=lisp.values1(L_G140__183);
}
{
TMP_286=lisp.callFunctionWithCallStack(G_88,L_FUNCTION__172,L_ARGS__182);
TMP_287=lisp.CL_cons(TMP_286,L_ACC__180);
L_G141__184=lisp.values1(TMP_287);
L_ACC__180=(TMP_288=lisp.values1(L_G141__184));
}
return lisp.values1(TMP_288);
});
TMP_289=lisp.CL_cons(L_SEQUENCE__173,L_MORE_SEQUENCES__174);
G_76.func(TMP_283,TMP_289);
TMP_290=G_291.func(L_ACC__180);
L_ACC__180=lisp.values1(TMP_290);
{
TMP_292=lisp.CL_consp(L_RESULT_TYPE__171);
if(lisp.values1(TMP_292) !== lisp.S_nil){
TMP_294=lisp.callFunctionWithCallStack(G_33,L_RESULT_TYPE__171);
TMP_293=lisp.values1(TMP_294);
}else{
TMP_293=lisp.values1(L_RESULT_TYPE__171);
}
L_TYPE_NAME__185=lisp.values1(TMP_293);
TMP_295=lisp.CL_consp(L_RESULT_TYPE__171);
if(lisp.values1(TMP_295) !== lisp.S_nil){
TMP_297=lisp.callFunctionWithCallStack(G_36,L_RESULT_TYPE__171);
TMP_296=lisp.values1(TMP_297);
}else{
TMP_296=lisp.values1(lisp.S_nil);
}
L_TYPE_ARGS__186=lisp.values1(TMP_296);
{
L_G142__187=lisp.values1(L_TYPE_NAME__185);
{
TMP_298=lisp.callFunctionWithCallStack(G_184,L_G142__187,G_78);
L_G143__188=lisp.values1(TMP_298);
if(lisp.values1(L_G143__188) !== lisp.S_nil){
if(lisp.values1(L_ACC__180) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_74,L_ACC__180,G_78);
}else{
}
TMP_299=lisp.values1(lisp.S_nil);
}else{
{
TMP_300=lisp.callFunctionWithCallStack(G_190,L_G142__187,lisp.makeCons(G_142, lisp.makeCons(G_188, lisp.S_nil)));
L_G144__189=lisp.values1(TMP_300);
if(lisp.values1(L_G144__189) !== lisp.S_nil){
TMP_301=lisp.values1(L_ACC__180);
}else{
{
TMP_302=lisp.callFunctionWithCallStack(G_184,L_G142__187,G_199);
L_G145__190=lisp.values1(TMP_302);
if(lisp.values1(L_G145__190) !== lisp.S_nil){
if(lisp.values1(L_TYPE_ARGS__186) !== lisp.S_nil){
TMP_305=lisp.callFunctionWithCallStack(G_33,L_TYPE_ARGS__186);
TMP_304=lisp.values1(TMP_305);
}else{
TMP_304=lisp.values1(G_205);
}
TMP_306=lisp.callFunctionWithCallStack(G_109,L_LENGTH__181,G_107,L_ACC__180,G_104,TMP_304);
TMP_303=TMP_306;
}else{
TMP_307=lisp.callFunctionWithCallStack(G_74,L_RESULT_TYPE__171,G_72);
TMP_303=TMP_307;
}
}
TMP_301=TMP_303;
}
}
TMP_299=TMP_301;
}
}
}
}
}
TMP_279=TMP_299;
}
}
TMP_277=TMP_279;
}
}
return TMP_277;
});
CL_COMMON_LISP_MAP=lisp.values1(F_MAP_271);
let F_MAP_INTO_308;
F_MAP_INTO_308=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_309, arguments.length);
}
let TMP_344;
let L_G_STORE161__216;
let L_G160__215;
let TMP_338;
let TMP_337;
let TMP_335;
let L_LEN__207;
let TMP_334;
let TMP_333;
let L_SEQ__206;
let TMP_332;
let TMP_330;
let L_G149__205;
let L_SIZE__203;
let TMP_329;
let TMP_327;
let TMP_326;
let L_USE_FILL_POINTER_P__202;
let TMP_324;
let TMP_323;
let TMP_322;
let TMP_321;
let L_I__201;
let TMP_320;
let L_G148__200;
let TMP_319;
let TMP_314;
let TMP_313;
let L_CURRENT__197;
let TMP_311;
let L_G147__196;
let TMP_310;
let L_SEQUENCES__194;
let L_FUNCTION__193;
let L_RESULT_SEQUENCE__192;
L_RESULT_SEQUENCE__192=arguments[0];
L_FUNCTION__193=arguments[1];
L_SEQUENCES__194=lisp.jsArrayToList(arguments, 2);
{
TMP_310=lisp.callFunctionWithCallStack(G_17,L_RESULT_SEQUENCE__192);
L_G147__196=lisp.values1(TMP_310);
if(lisp.values1(L_G147__196) !== lisp.S_nil){
{
L_CURRENT__197=lisp.values1(L_RESULT_SEQUENCE__192);
try {
TMP_314=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_318;
let TMP_317;
let TMP_316;
let L_ARGS__199;
L_ARGS__199=arguments[0];
if(lisp.values1(L_CURRENT__197) !== lisp.S_nil){
}else{
throw new lisp.BlockValue(G_315,lisp.values1(lisp.S_nil));}
TMP_316=lisp.callFunctionWithCallStack(G_88,L_FUNCTION__193,L_ARGS__199);
lisp.callFunctionWithCallStack(G_128,L_CURRENT__197,TMP_316);
TMP_317=lisp.callFunctionWithCallStack(G_36,L_CURRENT__197);
L_CURRENT__197=(TMP_318=lisp.values1(TMP_317));
return lisp.values1(TMP_318);
});
G_76.func(TMP_314,L_SEQUENCES__194);
TMP_313=lisp.values1(lisp.S_nil)
}catch(E__312){if(E__312 instanceof lisp.BlockValue && E__312.name === G_315){TMP_313=E__312.value;}
else{throw E__312;}
}
}
TMP_311=lisp.values1(L_RESULT_SEQUENCE__192);
}else{
{
TMP_319=lisp.callFunctionWithCallStack(G_47,L_RESULT_SEQUENCE__192);
L_G148__200=lisp.values1(TMP_319);
if(lisp.values1(L_G148__200) !== lisp.S_nil){
{
L_I__201=lisp.values1(0);
TMP_321=lisp.callFunctionWithCallStack(G_17,L_RESULT_SEQUENCE__192);
TMP_322=lisp.callFunctionWithCallStack(G_245,TMP_321);
if(lisp.values1(TMP_322) !== lisp.S_nil){
TMP_324=lisp.callFunctionWithCallStack(G_325,L_RESULT_SEQUENCE__192);
TMP_323=lisp.values1(TMP_324);
}else{
TMP_323=lisp.values1(lisp.S_nil);
}
L_USE_FILL_POINTER_P__202=lisp.values1(TMP_323);
if(lisp.values1(L_USE_FILL_POINTER_P__202) !== lisp.S_nil){
TMP_327=lisp.callFunctionWithCallStack(G_328,L_RESULT_SEQUENCE__192);
TMP_326=lisp.values1(TMP_327);
}else{
TMP_329=G_20.func(L_RESULT_SEQUENCE__192);
TMP_326=lisp.values1(TMP_329);
}
L_SIZE__203=lisp.values1(TMP_326);
if(lisp.values1(L_USE_FILL_POINTER_P__202) !== lisp.S_nil){
{
L_G149__205=lisp.values1(L_SEQUENCES__194);
for(;;){
TMP_330=lisp.callFunctionWithCallStack(G_331,L_G149__205);
if(lisp.values1(TMP_330) !== lisp.S_nil){
}else{
{
TMP_332=lisp.callFunctionWithCallStack(G_33,L_G149__205);
L_SEQ__206=lisp.values1(TMP_332);
TMP_333=lisp.callFunctionWithCallStack(G_36,L_G149__205);
L_G149__205=lisp.values1(TMP_333);
{
TMP_334=G_20.func(L_SEQ__206);
L_LEN__207=lisp.values1(TMP_334);
TMP_335=lisp.callFunctionWithCallStack(G_5,L_LEN__207,L_SIZE__203);
if(lisp.values1(TMP_335) !== lisp.S_nil){
L_SIZE__203=lisp.values1(L_LEN__207);
}else{
}
}
}
continue;
}
break;
}
}
}else{
}
try {
TMP_338=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_342;
let L_G159__214;
let TMP_341;
let L_G_STORE158__213;
let TMP_340;
let L_G157__212;
let L_G156__211;
let TMP_339;
let L_ARGS__210;
L_ARGS__210=arguments[0];
TMP_339=lisp.callFunctionWithCallStack(G_90,L_I__201,L_SIZE__203);
if(lisp.values1(TMP_339) !== lisp.S_nil){
throw new lisp.BlockValue(G_315,lisp.values1(lisp.S_nil));}else{
}
{
L_G156__211=lisp.values1(L_RESULT_SEQUENCE__192);
L_G157__212=lisp.values1(L_I__201);
TMP_340=lisp.callFunctionWithCallStack(G_88,L_FUNCTION__193,L_ARGS__210);
L_G_STORE158__213=lisp.values1(TMP_340);
lisp.callFunctionWithCallStack(G_132,L_G_STORE158__213,L_G156__211,L_G157__212);
}
{
TMP_341=lisp.callFunctionWithCallStack(G_285,L_I__201,1);
L_G159__214=lisp.values1(TMP_341);
L_I__201=(TMP_342=lisp.values1(L_G159__214));
}
return lisp.values1(TMP_342);
});
G_76.func(TMP_338,L_SEQUENCES__194);
TMP_337=lisp.values1(lisp.S_nil)
}catch(E__336){if(E__336 instanceof lisp.BlockValue && E__336.name === G_315){TMP_337=E__336.value;}
else{throw E__336;}
}
if(lisp.values1(L_USE_FILL_POINTER_P__202) !== lisp.S_nil){
{
L_G160__215=lisp.values1(L_RESULT_SEQUENCE__192);
L_G_STORE161__216=lisp.values1(L_SIZE__203);
lisp.callFunctionWithCallStack(G_343,L_G_STORE161__216,L_G160__215);
}
}else{
}
}
TMP_320=lisp.values1(L_RESULT_SEQUENCE__192);
}else{
TMP_344=lisp.callFunctionWithCallStack(G_74,L_RESULT_SEQUENCE__192,G_72);
TMP_320=TMP_344;
}
}
TMP_311=TMP_320;
}
}
return TMP_311;
});
CL_COMMON_LISP_MAP_INTO=lisp.values1(F_MAP_INTO_308);
let F_REDUCE_LIST_345;
F_REDUCE_LIST_345=(function(){
if(arguments.length !== 7) {
lisp.argumentsError(G_346, arguments.length);
}
let L_G170__232;
let TMP_361;
let L_G169__231;
let TMP_360;
let TMP_359;
let TMP_358;
let TMP_357;
let TMP_356;
let L_I__230;
let L_LIST__229;
let TMP_355;
let TMP_354;
let BLOCK_RESULT_NIL__228;
let L_GOAL__227;
let TMP_353;
let TMP_352;
let L_VALUE__226;
let TMP_350;
let TMP_349;
let TMP_348;
let TMP_347;
let L_INITIAL_VALUE_P__224;
let L_INITIAL_VALUE__223;
let L_KEY__222;
let L_END__221;
let L_START__220;
let L_LIST__219;
let L_FUNCTION__218;
L_FUNCTION__218=arguments[0];
L_LIST__219=arguments[1];
L_START__220=arguments[2];
L_END__221=arguments[3];
L_KEY__222=arguments[4];
L_INITIAL_VALUE__223=arguments[5];
L_INITIAL_VALUE_P__224=arguments[6];
TMP_347=lisp.callFunctionWithCallStack(G_29,L_START__220,L_LIST__219);
L_LIST__219=lisp.values1(TMP_347);
{
if(lisp.values1(L_INITIAL_VALUE_P__224) !== lisp.S_nil){
TMP_348=lisp.values1(L_INITIAL_VALUE__223);
}else{
TMP_349=lisp.callFunctionWithCallStack(G_33,L_LIST__219);
TMP_350=lisp.callFunctionWithCallStack(G_351,L_KEY__222,TMP_349);
TMP_348=lisp.values1(TMP_350);
}
L_VALUE__226=lisp.values1(TMP_348);
if(lisp.values1(L_INITIAL_VALUE_P__224) !== lisp.S_nil){
TMP_352=lisp.values1(L_END__221);
}else{
TMP_353=lisp.callFunctionWithCallStack(G_38,L_END__221);
TMP_352=lisp.values1(TMP_353);
}
L_GOAL__227=lisp.values1(TMP_352);
BLOCK_NIL__228: for(;;){{
if(lisp.values1(L_INITIAL_VALUE_P__224) !== lisp.S_nil){
TMP_354=lisp.values1(L_LIST__219);
}else{
TMP_355=lisp.callFunctionWithCallStack(G_36,L_LIST__219);
TMP_354=lisp.values1(TMP_355);
}
L_LIST__229=lisp.values1(TMP_354);
L_I__230=lisp.values1(L_START__220);
for(;;){
TMP_356=lisp.callFunctionWithCallStack(G_90,L_I__230,L_GOAL__227);
if(lisp.values1(TMP_356) !== lisp.S_nil){
BLOCK_RESULT_NIL__228=lisp.values1(lisp.S_nil);
break BLOCK_NIL__228;
}else{
TMP_357=lisp.callFunctionWithCallStack(G_33,L_LIST__229);
TMP_358=lisp.callFunctionWithCallStack(G_351,L_KEY__222,TMP_357);
TMP_359=lisp.CL_funcall(lisp.values1(L_FUNCTION__218),L_VALUE__226,TMP_358);
L_VALUE__226=lisp.values1(TMP_359);
{
TMP_360=lisp.callFunctionWithCallStack(G_36,L_LIST__229);
L_G169__231=lisp.values1(TMP_360);
TMP_361=lisp.callFunctionWithCallStack(G_45,L_I__230);
L_G170__232=lisp.values1(TMP_361);
L_LIST__229=lisp.values1(L_G169__231);
L_I__230=lisp.values1(L_G170__232);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__228=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_VALUE__226);
});
CL_COMMON_LISP_REDUCE_LIST=lisp.values1(F_REDUCE_LIST_345);
let F_REDUCE_LIST_FROM_END_362;
F_REDUCE_LIST_FROM_END_362=(function(){
if(arguments.length !== 7) {
lisp.argumentsError(G_363, arguments.length);
}
let L_G177__244;
let TMP_375;
let TMP_374;
let TMP_373;
let TMP_372;
let TMP_371;
let L_LIST__243;
let TMP_370;
let TMP_369;
let BLOCK_RESULT_NIL__242;
let L_VALUE__241;
let TMP_368;
let TMP_367;
let TMP_366;
let TMP_365;
let TMP_364;
let L_INITIAL_VALUE_P__239;
let L_INITIAL_VALUE__238;
let L_KEY__237;
let L_END__236;
let L_START__235;
let L_LIST__234;
let L_FUNCTION__233;
L_FUNCTION__233=arguments[0];
L_LIST__234=arguments[1];
L_START__235=arguments[2];
L_END__236=arguments[3];
L_KEY__237=arguments[4];
L_INITIAL_VALUE__238=arguments[5];
L_INITIAL_VALUE_P__239=arguments[6];
TMP_364=G_242.func(L_LIST__234,L_START__235,L_END__236);
TMP_365=G_291.func(TMP_364);
L_LIST__234=lisp.values1(TMP_365);
{
if(lisp.values1(L_INITIAL_VALUE_P__239) !== lisp.S_nil){
TMP_366=lisp.values1(L_INITIAL_VALUE__238);
}else{
TMP_367=lisp.callFunctionWithCallStack(G_33,L_LIST__234);
TMP_368=lisp.callFunctionWithCallStack(G_351,L_KEY__237,TMP_367);
TMP_366=lisp.values1(TMP_368);
}
L_VALUE__241=lisp.values1(TMP_366);
BLOCK_NIL__242: for(;;){{
if(lisp.values1(L_INITIAL_VALUE_P__239) !== lisp.S_nil){
TMP_369=lisp.values1(L_LIST__234);
}else{
TMP_370=lisp.callFunctionWithCallStack(G_36,L_LIST__234);
TMP_369=lisp.values1(TMP_370);
}
L_LIST__243=lisp.values1(TMP_369);
for(;;){
TMP_371=lisp.callFunctionWithCallStack(G_78,L_LIST__243);
if(lisp.values1(TMP_371) !== lisp.S_nil){
BLOCK_RESULT_NIL__242=lisp.values1(lisp.S_nil);
break BLOCK_NIL__242;
}else{
TMP_372=lisp.callFunctionWithCallStack(G_33,L_LIST__243);
TMP_373=lisp.callFunctionWithCallStack(G_351,L_KEY__237,TMP_372);
TMP_374=lisp.CL_funcall(lisp.values1(L_FUNCTION__233),TMP_373,L_VALUE__241);
L_VALUE__241=lisp.values1(TMP_374);
{
TMP_375=lisp.callFunctionWithCallStack(G_36,L_LIST__243);
L_G177__244=lisp.values1(TMP_375);
L_LIST__243=lisp.values1(L_G177__244);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__242=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_VALUE__241);
});
CL_COMMON_LISP_REDUCE_LIST_FROM_END=lisp.values1(F_REDUCE_LIST_FROM_END_362);
let F_REDUCE_376;
F_REDUCE_376=(function(){
if(arguments.length < 2 || 12 < arguments.length) {
lisp.argumentsError(G_377, arguments.length);
}
let L_G184__261;
let TMP_417;
let TMP_416;
let TMP_415;
let TMP_414;
let L_ELT__260;
let TMP_413;
let TMP_412;
let TMP_411;
let L_I__259;
let BLOCK_RESULT_NIL__258;
let L_VALUE__257;
let TMP_410;
let TMP_409;
let TMP_408;
let TMP_407;
let TMP_406;
let L_FIRST__256;
let TMP_405;
let TMP_404;
let TMP_403;
let TMP_402;
let TMP_401;
let TMP_400;
let L_GOAL__255;
let TMP_399;
let TMP_398;
let L_STEP__254;
let TMP_397;
let TMP_396;
let TMP_395;
let TMP_394;
let TMP_393;
let TMP_392;
let TMP_391;
let TMP_390;
let TMP_389;
let TMP_388;
let TMP_387;
let L_INITIAL_VALUE_P__252;
let L_INITIAL_VALUE__251;
let L_END__250;
let L_START__249;
let L_FROM_END__248;
let L_KEY__247;
let L_SEQUENCE__246;
let L_FUNCTION__245;
L_FUNCTION__245=arguments[0];
L_SEQUENCE__246=arguments[1];
let supplied_KEY__247;
for (let TMP_379 = 2; TMP_379 < arguments.length; TMP_379 += 2) {
if(arguments[TMP_379] === G_378){
supplied_KEY__247=arguments[TMP_379+1];
break;
}
}
L_KEY__247=supplied_KEY__247 !== undefined ? supplied_KEY__247 : (lisp.values1(lisp.S_nil));
let supplied_FROM_END__248;
for (let TMP_381 = 2; TMP_381 < arguments.length; TMP_381 += 2) {
if(arguments[TMP_381] === G_380){
supplied_FROM_END__248=arguments[TMP_381+1];
break;
}
}
L_FROM_END__248=supplied_FROM_END__248 !== undefined ? supplied_FROM_END__248 : (lisp.values1(lisp.S_nil));
let supplied_START__249;
for (let TMP_382 = 2; TMP_382 < arguments.length; TMP_382 += 2) {
if(arguments[TMP_382] === G_151){
supplied_START__249=arguments[TMP_382+1];
break;
}
}
L_START__249=supplied_START__249 !== undefined ? supplied_START__249 : (lisp.values1(0));
let supplied_END__250;
for (let TMP_383 = 2; TMP_383 < arguments.length; TMP_383 += 2) {
if(arguments[TMP_383] === G_153){
supplied_END__250=arguments[TMP_383+1];
break;
}
}
L_END__250=supplied_END__250 !== undefined ? supplied_END__250 : (lisp.values1(lisp.S_nil));
let supplied_INITIAL_VALUE__251;
for (let TMP_385 = 2; TMP_385 < arguments.length; TMP_385 += 2) {
if(arguments[TMP_385] === G_384){
supplied_INITIAL_VALUE__251=arguments[TMP_385+1];
break;
}
}
L_INITIAL_VALUE__251=supplied_INITIAL_VALUE__251 !== undefined ? supplied_INITIAL_VALUE__251 : (lisp.values1(lisp.S_nil));
L_INITIAL_VALUE_P__252=(supplied_INITIAL_VALUE__251 !== undefined ? lisp.S_t : lisp.S_nil);
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_386 = 2; TMP_386 < arguments.length; TMP_386 += 2) {
if(arguments[TMP_386]!==G_384 && arguments[TMP_386]!==G_153 && arguments[TMP_386]!==G_151 && arguments[TMP_386]!==G_380 && arguments[TMP_386]!==G_378) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_386].name); }
}
if(lisp.values1(L_END__250) !== lisp.S_nil){
}else{
TMP_387=G_20.func(L_SEQUENCE__246);
L_END__250=lisp.values1(TMP_387);
}
TMP_388=lisp.callFunctionWithCallStack(G_31,L_START__249,L_END__250);
if(lisp.values1(TMP_388) !== lisp.S_nil){
if(lisp.values1(L_INITIAL_VALUE_P__252) !== lisp.S_nil){
TMP_390=lisp.values1(L_INITIAL_VALUE__251);
}else{
TMP_391=lisp.CL_funcall(lisp.values1(L_FUNCTION__245));
TMP_390=TMP_391;
}
TMP_389=TMP_390;
}else{
TMP_392=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__246);
if(lisp.values1(TMP_392) !== lisp.S_nil){
if(lisp.values1(L_FROM_END__248) !== lisp.S_nil){
TMP_395=G_363.func(L_FUNCTION__245,L_SEQUENCE__246,L_START__249,L_END__250,L_KEY__247,L_INITIAL_VALUE__251,L_INITIAL_VALUE_P__252);
TMP_394=TMP_395;
}else{
TMP_396=G_346.func(L_FUNCTION__245,L_SEQUENCE__246,L_START__249,L_END__250,L_KEY__247,L_INITIAL_VALUE__251,L_INITIAL_VALUE_P__252);
TMP_394=TMP_396;
}
TMP_393=TMP_394;
}else{
{
if(lisp.values1(L_FROM_END__248) !== lisp.S_nil){
TMP_397=lisp.values1(-1);
}else{
TMP_397=lisp.values1(1);
}
L_STEP__254=lisp.values1(TMP_397);
if(lisp.values1(L_FROM_END__248) !== lisp.S_nil){
TMP_399=lisp.callFunctionWithCallStack(G_38,L_START__249);
TMP_398=lisp.values1(TMP_399);
}else{
TMP_398=lisp.values1(L_END__250);
}
L_GOAL__255=lisp.values1(TMP_398);
if(lisp.values1(L_INITIAL_VALUE_P__252) !== lisp.S_nil){
if(lisp.values1(L_FROM_END__248) !== lisp.S_nil){
TMP_402=lisp.callFunctionWithCallStack(G_27,L_END__250,1);
TMP_401=lisp.values1(TMP_402);
}else{
TMP_401=lisp.values1(L_START__249);
}
TMP_400=lisp.values1(TMP_401);
}else{
if(lisp.values1(L_FROM_END__248) !== lisp.S_nil){
TMP_404=lisp.callFunctionWithCallStack(G_27,L_END__250,2);
TMP_403=lisp.values1(TMP_404);
}else{
TMP_405=lisp.callFunctionWithCallStack(G_285,L_START__249,1);
TMP_403=lisp.values1(TMP_405);
}
TMP_400=lisp.values1(TMP_403);
}
L_FIRST__256=lisp.values1(TMP_400);
if(lisp.values1(L_INITIAL_VALUE_P__252) !== lisp.S_nil){
TMP_406=lisp.values1(L_INITIAL_VALUE__251);
}else{
if(lisp.values1(L_FROM_END__248) !== lisp.S_nil){
TMP_408=lisp.callFunctionWithCallStack(G_38,L_END__250);
TMP_407=lisp.values1(TMP_408);
}else{
TMP_407=lisp.values1(L_START__249);
}
TMP_409=lisp.callFunctionWithCallStack(G_57,L_SEQUENCE__246,TMP_407);
TMP_410=lisp.callFunctionWithCallStack(G_351,L_KEY__247,TMP_409);
TMP_406=lisp.values1(TMP_410);
}
L_VALUE__257=lisp.values1(TMP_406);
BLOCK_NIL__258: for(;;){{
L_I__259=lisp.values1(L_FIRST__256);
for(;;){
TMP_411=lisp.callFunctionWithCallStack(G_31,L_I__259,L_GOAL__255);
if(lisp.values1(TMP_411) !== lisp.S_nil){
BLOCK_RESULT_NIL__258=lisp.values1(lisp.S_nil);
break BLOCK_NIL__258;
}else{
{
TMP_412=lisp.callFunctionWithCallStack(G_57,L_SEQUENCE__246,L_I__259);
TMP_413=lisp.callFunctionWithCallStack(G_351,L_KEY__247,TMP_412);
L_ELT__260=lisp.values1(TMP_413);
if(lisp.values1(L_FROM_END__248) !== lisp.S_nil){
TMP_415=lisp.CL_funcall(lisp.values1(L_FUNCTION__245),L_ELT__260,L_VALUE__257);
TMP_414=lisp.values1(TMP_415);
}else{
TMP_416=lisp.CL_funcall(lisp.values1(L_FUNCTION__245),L_VALUE__257,L_ELT__260);
TMP_414=lisp.values1(TMP_416);
}
L_VALUE__257=lisp.values1(TMP_414);
}
{
TMP_417=lisp.callFunctionWithCallStack(G_285,L_I__259,L_STEP__254);
L_G184__261=lisp.values1(TMP_417);
L_I__259=lisp.values1(L_G184__261);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__258=lisp.values1(lisp.S_nil);
break;
}
}
TMP_393=lisp.values1(L_VALUE__257);
}
TMP_389=TMP_393;
}
return TMP_389;
});
CL_COMMON_LISP_REDUCE=lisp.values1(F_REDUCE_376);
let F_LENGTH_418;
F_LENGTH_418=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_20, arguments.length);
}
let TMP_427;
let TMP_425;
let TMP_424;
let L_G186__265;
let TMP_423;
let TMP_421;
let TMP_420;
let L_G185__264;
let TMP_419;
let L_SEQUENCE__262;
L_SEQUENCE__262=arguments[0];
{
TMP_419=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__262);
L_G185__264=lisp.values1(TMP_419);
if(lisp.values1(L_G185__264) !== lisp.S_nil){
TMP_421=lisp.callFunctionWithCallStack(G_422,L_SEQUENCE__262);
TMP_420=TMP_421;
}else{
{
TMP_423=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__262);
L_G186__265=lisp.values1(TMP_423);
if(lisp.values1(L_G186__265) !== lisp.S_nil){
TMP_425=lisp.callFunctionWithCallStack(G_426,L_SEQUENCE__262);
TMP_424=TMP_425;
}else{
TMP_427=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__262,G_72);
TMP_424=TMP_427;
}
}
TMP_420=TMP_424;
}
}
return TMP_420;
});
CL_COMMON_LISP_LENGTH=lisp.values1(F_LENGTH_418);
let F_REVERSE_LIST_428;
F_REVERSE_LIST_428=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_25, arguments.length);
}
let L_G195__273;
let TMP_432;
let TMP_431;
let L_X__272;
let TMP_430;
let TMP_429;
let L_G188__271;
let L_REVERSED_LIST__269;
let L_LIST__267;
L_LIST__267=arguments[0];
{
L_REVERSED_LIST__269=lisp.values1(lisp.S_nil);
{
L_G188__271=lisp.values1(L_LIST__267);
for(;;){
TMP_429=lisp.callFunctionWithCallStack(G_331,L_G188__271);
if(lisp.values1(TMP_429) !== lisp.S_nil){
}else{
{
TMP_430=lisp.callFunctionWithCallStack(G_33,L_G188__271);
L_X__272=lisp.values1(TMP_430);
TMP_431=lisp.callFunctionWithCallStack(G_36,L_G188__271);
L_G188__271=lisp.values1(TMP_431);
{
TMP_432=lisp.CL_cons(L_X__272,L_REVERSED_LIST__269);
L_G195__273=lisp.values1(TMP_432);
L_REVERSED_LIST__269=lisp.values1(L_G195__273);
}
}
continue;
}
break;
}
}
}
return lisp.values1(L_REVERSED_LIST__269);
});
CL_COMMON_LISP_REVERSE_LIST=lisp.values1(F_REVERSE_LIST_428);
let F_REVERSE_VECTOR_433;
F_REVERSE_VECTOR_433=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_434, arguments.length);
}
let L_G206__286;
let TMP_442;
let L_G205__285;
let TMP_441;
let L_G_STORE204__284;
let TMP_440;
let L_G203__283;
let L_G202__282;
let TMP_439;
let L_J__281;
let TMP_438;
let L_I__280;
let BLOCK_RESULT_NIL__279;
let L_NEW_VECTOR__278;
let TMP_437;
let TMP_436;
let L_LENGTH__277;
let TMP_435;
let L_VECTOR__275;
L_VECTOR__275=arguments[0];
{
TMP_435=G_20.func(L_VECTOR__275);
L_LENGTH__277=lisp.values1(TMP_435);
TMP_436=lisp.callFunctionWithCallStack(G_106,L_VECTOR__275);
TMP_437=lisp.callFunctionWithCallStack(G_109,L_LENGTH__277,G_104,TMP_436);
L_NEW_VECTOR__278=lisp.values1(TMP_437);
BLOCK_NIL__279: for(;;){{
L_I__280=lisp.values1(0);
TMP_438=lisp.callFunctionWithCallStack(G_38,L_LENGTH__277);
L_J__281=lisp.values1(TMP_438);
for(;;){
TMP_439=lisp.callFunctionWithCallStack(G_31,L_I__280,L_LENGTH__277);
if(lisp.values1(TMP_439) !== lisp.S_nil){
BLOCK_RESULT_NIL__279=lisp.values1(lisp.S_nil);
break BLOCK_NIL__279;
}else{
{
L_G202__282=lisp.values1(L_NEW_VECTOR__278);
L_G203__283=lisp.values1(L_I__280);
TMP_440=lisp.callFunctionWithCallStack(G_57,L_VECTOR__275,L_J__281);
L_G_STORE204__284=lisp.values1(TMP_440);
lisp.callFunctionWithCallStack(G_132,L_G_STORE204__284,L_G202__282,L_G203__283);
}
{
TMP_441=lisp.callFunctionWithCallStack(G_45,L_I__280);
L_G205__285=lisp.values1(TMP_441);
TMP_442=lisp.callFunctionWithCallStack(G_38,L_J__281);
L_G206__286=lisp.values1(TMP_442);
L_I__280=lisp.values1(L_G205__285);
L_J__281=lisp.values1(L_G206__286);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__279=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_NEW_VECTOR__278);
});
CL_COMMON_LISP_REVERSE_VECTOR=lisp.values1(F_REVERSE_VECTOR_433);
let F_REVERSE_443;
F_REVERSE_443=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_444, arguments.length);
}
let TMP_451;
let TMP_450;
let TMP_449;
let L_G208__290;
let TMP_448;
let TMP_447;
let TMP_446;
let L_G207__289;
let TMP_445;
let L_SEQUENCE__287;
L_SEQUENCE__287=arguments[0];
{
TMP_445=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__287);
L_G207__289=lisp.values1(TMP_445);
if(lisp.values1(L_G207__289) !== lisp.S_nil){
TMP_447=G_25.func(L_SEQUENCE__287);
TMP_446=TMP_447;
}else{
{
TMP_448=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__287);
L_G208__290=lisp.values1(TMP_448);
if(lisp.values1(L_G208__290) !== lisp.S_nil){
TMP_450=G_434.func(L_SEQUENCE__287);
TMP_449=TMP_450;
}else{
TMP_451=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__287,G_72);
TMP_449=TMP_451;
}
}
TMP_446=TMP_449;
}
}
return TMP_446;
});
CL_COMMON_LISP_REVERSE=lisp.values1(F_REVERSE_443);
let F_NREVERSE_LIST_452;
F_NREVERSE_LIST_452=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_453, arguments.length);
}
let L_G218__300;
let L_G217__299;
let L_G216__298;
let TMP_460;
let TMP_459;
let TMP_458;
let TMP_455;
let L_3RD__297;
let L_2ND__296;
let L_1ST__295;
let TMP_454;
let BLOCK_RESULT_NIL__294;
let L_LIST__292;
L_LIST__292=arguments[0];
BLOCK_NIL__294: for(;;){{
TMP_454=lisp.callFunctionWithCallStack(G_36,L_LIST__292);
L_1ST__295=lisp.values1(TMP_454);
L_2ND__296=lisp.values1(L_LIST__292);
L_3RD__297=lisp.values1(lisp.S_nil);
for(;;){
TMP_455=lisp.callFunctionWithCallStack(G_456,L_2ND__296);
if(lisp.values1(TMP_455) !== lisp.S_nil){
BLOCK_RESULT_NIL__294=lisp.values1(L_3RD__297);
break BLOCK_NIL__294;
}else{
lisp.callFunctionWithCallStack(G_457,L_2ND__296,L_3RD__297);
{
TMP_458=lisp.callFunctionWithCallStack(G_331,L_1ST__295);
if(lisp.values1(TMP_458) !== lisp.S_nil){
TMP_459=lisp.values1(L_1ST__295);
}else{
TMP_460=lisp.callFunctionWithCallStack(G_36,L_1ST__295);
TMP_459=lisp.values1(TMP_460);
}
L_G216__298=lisp.values1(TMP_459);
L_G217__299=lisp.values1(L_1ST__295);
L_G218__300=lisp.values1(L_2ND__296);
L_1ST__295=lisp.values1(L_G216__298);
L_2ND__296=lisp.values1(L_G217__299);
L_3RD__297=lisp.values1(L_G218__300);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__294=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__294;
});
CL_COMMON_LISP_NREVERSE_LIST=lisp.values1(F_NREVERSE_LIST_452);
let F_NREVERSE_VECTOR_461;
F_NREVERSE_VECTOR_461=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_462, arguments.length);
}
let L_G232__316;
let TMP_471;
let L_G_STORE231__315;
let L_G230__314;
let L_G229__313;
let L_G_STORE228__312;
let L_G227__311;
let L_G226__310;
let L_Y__309;
let TMP_470;
let TMP_469;
let L_X__308;
let TMP_468;
let L_J__307;
let TMP_467;
let TMP_466;
let L_I__306;
let BLOCK_RESULT_NIL__305;
let L_G219__304;
let TMP_464;
let L_LENGTH__303;
let TMP_463;
let L_VECTOR__301;
L_VECTOR__301=arguments[0];
{
TMP_463=G_20.func(L_VECTOR__301);
L_LENGTH__303=lisp.values1(TMP_463);
{
TMP_464=lisp.callFunctionWithCallStack(G_465,L_LENGTH__303,2);
L_G219__304=lisp.values1(TMP_464);
BLOCK_NIL__305: for(;;){{
L_I__306=lisp.values1(0);
for(;;){
TMP_466=lisp.callFunctionWithCallStack(G_90,L_I__306,L_G219__304);
if(lisp.values1(TMP_466) !== lisp.S_nil){
BLOCK_RESULT_NIL__305=lisp.values1(lisp.S_nil);
break BLOCK_NIL__305;
}else{
{
TMP_467=lisp.callFunctionWithCallStack(G_27,L_LENGTH__303,L_I__306,1);
L_J__307=lisp.values1(TMP_467);
{
TMP_468=lisp.callFunctionWithCallStack(G_57,L_VECTOR__301,L_I__306);
L_X__308=lisp.values1(TMP_468);
TMP_469=lisp.callFunctionWithCallStack(G_27,L_LENGTH__303,L_I__306,1);
TMP_470=lisp.callFunctionWithCallStack(G_57,L_VECTOR__301,TMP_469);
L_Y__309=lisp.values1(TMP_470);
{
L_G226__310=lisp.values1(L_VECTOR__301);
L_G227__311=lisp.values1(L_I__306);
L_G_STORE228__312=lisp.values1(L_Y__309);
lisp.callFunctionWithCallStack(G_132,L_G_STORE228__312,L_G226__310,L_G227__311);
}
{
L_G229__313=lisp.values1(L_VECTOR__301);
L_G230__314=lisp.values1(L_J__307);
L_G_STORE231__315=lisp.values1(L_X__308);
lisp.callFunctionWithCallStack(G_132,L_G_STORE231__315,L_G229__313,L_G230__314);
}
}
}
{
TMP_471=lisp.callFunctionWithCallStack(G_285,L_I__306,1);
L_G232__316=lisp.values1(TMP_471);
L_I__306=lisp.values1(L_G232__316);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__305=lisp.values1(lisp.S_nil);
break;
}
}
}
return lisp.values1(L_VECTOR__301);
});
CL_COMMON_LISP_NREVERSE_VECTOR=lisp.values1(F_NREVERSE_VECTOR_461);
let F_NREVERSE_472;
F_NREVERSE_472=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_291, arguments.length);
}
let TMP_479;
let TMP_478;
let TMP_477;
let L_G234__320;
let TMP_476;
let TMP_475;
let TMP_474;
let L_G233__319;
let TMP_473;
let L_SEQUENCE__317;
L_SEQUENCE__317=arguments[0];
{
TMP_473=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__317);
L_G233__319=lisp.values1(TMP_473);
if(lisp.values1(L_G233__319) !== lisp.S_nil){
TMP_475=G_453.func(L_SEQUENCE__317);
TMP_474=TMP_475;
}else{
{
TMP_476=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__317);
L_G234__320=lisp.values1(TMP_476);
if(lisp.values1(L_G234__320) !== lisp.S_nil){
TMP_478=G_462.func(L_SEQUENCE__317);
TMP_477=TMP_478;
}else{
TMP_479=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__317,G_72);
TMP_477=TMP_479;
}
}
TMP_474=TMP_477;
}
}
return TMP_474;
});
CL_COMMON_LISP_NREVERSE=lisp.values1(F_NREVERSE_472);
let F_SORT_480;
F_SORT_480=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_481, arguments.length);
}
let TMP_484;
let L_KEY__324;
let L_PREDICATE__323;
let L_SEQUENCE__322;
L_SEQUENCE__322=arguments[0];
L_PREDICATE__323=arguments[1];
let supplied_KEY__324;
for (let TMP_482 = 2; TMP_482 < arguments.length; TMP_482 += 2) {
if(arguments[TMP_482] === G_378){
supplied_KEY__324=arguments[TMP_482+1];
break;
}
}
L_KEY__324=supplied_KEY__324 !== undefined ? supplied_KEY__324 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_483 = 2; TMP_483 < arguments.length; TMP_483 += 2) {
if(arguments[TMP_483]!==G_378) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_483].name); }
}
TMP_484=G_485.func(L_SEQUENCE__322,L_PREDICATE__323,G_378,L_KEY__324);
return TMP_484;
});
CL_COMMON_LISP_SORT=lisp.values1(F_SORT_480);
let F_STABLE_SORT_LIST_486;
F_STABLE_SORT_LIST_486=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_487, arguments.length);
}
let TMP_521;
let F_REC__331;
let TMP_510;
let F_MERGESTAR__330;
let TMP_488;
let L_KEY__328;
let L_PREDICATE__327;
let L_LIST__326;
L_LIST__326=arguments[0];
L_PREDICATE__327=arguments[1];
L_KEY__328=arguments[2];
{
TMP_488=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G247__343;
let TMP_509;
let L_G249__342;
let TMP_508;
let L_G248__341;
let TMP_507;
let L_G244__340;
let TMP_506;
let L_G246__339;
let TMP_505;
let L_G245__338;
let TMP_504;
let TMP_503;
let TMP_502;
let TMP_501;
let TMP_500;
let TMP_499;
let TMP_498;
let TMP_496;
let TMP_495;
let TMP_494;
let TMP_493;
let TMP_492;
let L_G241__337;
let TMP_491;
let TMP_490;
let L_G240__336;
let TMP_489;
let BLOCK_RESULT_NIL__335;
let L_LIST3__334;
let L_LIST2__333;
let L_LIST1__332;
L_LIST1__332=arguments[0];
L_LIST2__333=arguments[1];
{
L_LIST3__334=lisp.values1(lisp.S_nil);
BLOCK_NIL__335: for(;;){for(;;){
{
TMP_489=lisp.callFunctionWithCallStack(G_78,L_LIST1__332);
L_G240__336=lisp.values1(TMP_489);
if(lisp.values1(L_G240__336) !== lisp.S_nil){
TMP_490=lisp.values1(L_G240__336);
}else{
{
TMP_491=lisp.callFunctionWithCallStack(G_78,L_LIST2__333);
L_G241__337=lisp.values1(TMP_491);
if(lisp.values1(L_G241__337) !== lisp.S_nil){
TMP_492=lisp.values1(L_G241__337);
}else{
TMP_492=lisp.values1(lisp.S_nil);
}
}
TMP_490=lisp.values1(lisp.values1(TMP_492));
}
}
if(lisp.values1(lisp.values1(TMP_490)) !== lisp.S_nil){
TMP_493=lisp.callFunctionWithCallStack(G_78,L_LIST1__332);
if(lisp.values1(TMP_493) !== lisp.S_nil){
TMP_495=G_291.func(L_LIST3__334);
TMP_496=lisp.callFunctionWithCallStack(G_497,TMP_495,L_LIST2__333);
TMP_494=TMP_496;
}else{
TMP_498=G_291.func(L_LIST3__334);
TMP_499=lisp.callFunctionWithCallStack(G_497,TMP_498,L_LIST1__332);
TMP_494=TMP_499;
}
BLOCK_RESULT_NIL__335=TMP_494;
break BLOCK_NIL__335;
}else{
TMP_500=lisp.callFunctionWithCallStack(G_33,L_LIST1__332);
TMP_501=lisp.callFunctionWithCallStack(G_33,L_LIST2__333);
TMP_502=lisp.CL_funcall(lisp.values1(L_PREDICATE__327),TMP_500,TMP_501);
TMP_503=lisp.callFunctionWithCallStack(G_351,L_KEY__328,TMP_502);
if(lisp.values1(TMP_503) !== lisp.S_nil){
{
{
TMP_504=lisp.callFunctionWithCallStack(G_36,L_LIST1__332);
L_G245__338=lisp.values1(TMP_504);
{
TMP_505=lisp.callFunctionWithCallStack(G_33,L_LIST1__332);
L_G246__339=lisp.values1(TMP_505);
L_LIST1__332=lisp.values1(L_G245__338);
}
}
TMP_506=lisp.CL_cons(lisp.values1(lisp.values1(lisp.values1(L_G246__339))),L_LIST3__334);
L_G244__340=lisp.values1(TMP_506);
L_LIST3__334=lisp.values1(L_G244__340);
}
}else{
{
{
TMP_507=lisp.callFunctionWithCallStack(G_36,L_LIST2__333);
L_G248__341=lisp.values1(TMP_507);
{
TMP_508=lisp.callFunctionWithCallStack(G_33,L_LIST2__333);
L_G249__342=lisp.values1(TMP_508);
L_LIST2__333=lisp.values1(L_G248__341);
}
}
TMP_509=lisp.CL_cons(lisp.values1(lisp.values1(lisp.values1(L_G249__342))),L_LIST3__334);
L_G247__343=lisp.values1(TMP_509);
L_LIST3__334=lisp.values1(L_G247__343);
}
}
continue;
}
break;
}
BLOCK_RESULT_NIL__335=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__335;
});
F_MERGESTAR__330=lisp.values1(TMP_488);
TMP_510=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_520;
let L_RIGHT__350;
let TMP_519;
let TMP_518;
let L_LEFT__349;
let TMP_517;
let TMP_516;
let L_MIDDLE__348;
let TMP_515;
let TMP_514;
let L_G250__346;
let TMP_512;
let L_SIZE__345;
let TMP_511;
let L_LIST__344;
L_LIST__344=arguments[0];
{
TMP_511=G_20.func(L_LIST__344);
L_SIZE__345=lisp.values1(TMP_511);
{
TMP_512=lisp.callFunctionWithCallStack(G_513,L_SIZE__345,1);
L_G250__346=lisp.values1(TMP_512);
if(lisp.values1(L_G250__346) !== lisp.S_nil){
TMP_514=lisp.values1(L_LIST__344);
}else{
{
TMP_515=lisp.callFunctionWithCallStack(G_465,L_SIZE__345,2);
L_MIDDLE__348=lisp.values1(TMP_515);
TMP_516=G_242.func(L_LIST__344,0,L_MIDDLE__348);
TMP_517=G_487.func(TMP_516,L_PREDICATE__327,L_KEY__328);
L_LEFT__349=lisp.values1(TMP_517);
TMP_518=G_242.func(L_LIST__344,L_MIDDLE__348);
TMP_519=G_487.func(TMP_518,L_PREDICATE__327,L_KEY__328);
L_RIGHT__350=lisp.values1(TMP_519);
TMP_520=F_MERGESTAR__330(L_RIGHT__350,L_LEFT__349);
}
TMP_514=TMP_520;
}
}
}
return TMP_514;
});
F_REC__331=lisp.values1(TMP_510);
TMP_521=F_REC__331(L_LIST__326);
}
return TMP_521;
});
CL_COMMON_LISP_STABLE_SORT_LIST=lisp.values1(F_STABLE_SORT_LIST_486);
let F_STABLE_SORT_VECTOR_522;
F_STABLE_SORT_VECTOR_522=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_523, arguments.length);
}
let L_G314__409;
let TMP_564;
let L_G_STORE313__408;
let TMP_563;
let L_G312__407;
let L_G311__406;
let TMP_562;
let L_I__405;
let BLOCK_RESULT_NIL__404;
let L_G304__403;
let F_REC__358;
let TMP_555;
let F_MERGESTAR__357;
let TMP_526;
let L_TEMP__356;
let TMP_525;
let L_SIZE__355;
let TMP_524;
let L_KEY__353;
let L_PREDICATE__352;
let L_VECTOR__351;
L_VECTOR__351=arguments[0];
L_PREDICATE__352=arguments[1];
L_KEY__353=arguments[2];
{
TMP_524=G_20.func(L_VECTOR__351);
L_SIZE__355=lisp.values1(TMP_524);
TMP_525=lisp.callFunctionWithCallStack(G_109,L_SIZE__355);
L_TEMP__356=lisp.values1(TMP_525);
{
TMP_526=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G303__399;
let TMP_554;
let L_G302__398;
let TMP_553;
let L_G_STORE301__397;
let TMP_552;
let L_G300__396;
let L_G299__395;
let L_G297__393;
let TMP_551;
let L_G_STORE296__392;
let TMP_550;
let L_G295__391;
let L_G294__390;
let L_G293__389;
let TMP_549;
let TMP_548;
let TMP_547;
let TMP_546;
let TMP_545;
let TMP_544;
let L_G290__388;
let TMP_543;
let L_G_STORE289__387;
let TMP_542;
let L_G288__386;
let TMP_541;
let L_G287__385;
let TMP_540;
let L_I__384;
let BLOCK_RESULT_NIL__383;
let L_G280__382;
let L_G279__381;
let TMP_539;
let L_G278__380;
let TMP_538;
let L_G_STORE277__379;
let TMP_537;
let L_G276__378;
let L_G275__377;
let TMP_536;
let L_J__376;
let BLOCK_RESULT_NIL__375;
let L_G268__374;
let TMP_535;
let L_G267__373;
let TMP_534;
let L_G_STORE266__372;
let TMP_533;
let L_G265__371;
let L_G264__370;
let TMP_532;
let L_I__369;
let BLOCK_RESULT_NIL__368;
let TMP_531;
let TMP_530;
let L_G257__367;
let TMP_529;
let TMP_528;
let L_G256__366;
let TMP_527;
let L_K__365;
let L_J__364;
let L_I__363;
let BLOCK_RESULT_NIL__362;
let L_RIGHT__361;
let L_MIDDLE__360;
let L_LEFT__359;
L_LEFT__359=arguments[0];
L_MIDDLE__360=arguments[1];
L_RIGHT__361=arguments[2];
BLOCK_NIL__362: for(;;){{
L_I__363=lisp.values1(L_LEFT__359);
L_J__364=lisp.values1(L_MIDDLE__360);
L_K__365=lisp.values1(0);
for(;;){
{
TMP_527=lisp.callFunctionWithCallStack(G_90,L_I__363,L_MIDDLE__360);
L_G256__366=lisp.values1(TMP_527);
if(lisp.values1(L_G256__366) !== lisp.S_nil){
TMP_528=lisp.values1(L_G256__366);
}else{
{
TMP_529=lisp.callFunctionWithCallStack(G_90,L_J__364,L_RIGHT__361);
L_G257__367=lisp.values1(TMP_529);
if(lisp.values1(L_G257__367) !== lisp.S_nil){
TMP_530=lisp.values1(L_G257__367);
}else{
TMP_530=lisp.values1(lisp.S_nil);
}
}
TMP_528=lisp.values1(lisp.values1(TMP_530));
}
}
if(lisp.values1(lisp.values1(TMP_528)) !== lisp.S_nil){
TMP_531=lisp.callFunctionWithCallStack(G_5,L_I__363,L_MIDDLE__360);
if(lisp.values1(TMP_531) !== lisp.S_nil){
BLOCK_NIL__368: for(;;){{
L_I__369=lisp.values1(L_I__363);
for(;;){
TMP_532=lisp.callFunctionWithCallStack(G_90,L_I__369,L_MIDDLE__360);
if(lisp.values1(TMP_532) !== lisp.S_nil){
BLOCK_RESULT_NIL__368=lisp.values1(lisp.S_nil);
break BLOCK_NIL__368;
}else{
{
L_G264__370=lisp.values1(L_TEMP__356);
L_G265__371=lisp.values1(L_K__365);
TMP_533=lisp.callFunctionWithCallStack(G_57,L_VECTOR__351,L_I__369);
L_G_STORE266__372=lisp.values1(TMP_533);
lisp.callFunctionWithCallStack(G_132,L_G_STORE266__372,L_G264__370,L_G265__371);
}
{
TMP_534=lisp.callFunctionWithCallStack(G_285,L_K__365,1);
L_G267__373=lisp.values1(TMP_534);
L_K__365=lisp.values1(L_G267__373);
}
{
TMP_535=lisp.callFunctionWithCallStack(G_45,L_I__369);
L_G268__374=lisp.values1(TMP_535);
L_I__369=lisp.values1(L_G268__374);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__368=lisp.values1(lisp.S_nil);
break;
}
}else{
BLOCK_NIL__375: for(;;){{
L_J__376=lisp.values1(L_J__364);
for(;;){
TMP_536=lisp.callFunctionWithCallStack(G_90,L_J__376,L_RIGHT__361);
if(lisp.values1(TMP_536) !== lisp.S_nil){
BLOCK_RESULT_NIL__375=lisp.values1(lisp.S_nil);
break BLOCK_NIL__375;
}else{
{
L_G275__377=lisp.values1(L_TEMP__356);
L_G276__378=lisp.values1(L_K__365);
TMP_537=lisp.callFunctionWithCallStack(G_57,L_VECTOR__351,L_J__376);
L_G_STORE277__379=lisp.values1(TMP_537);
lisp.callFunctionWithCallStack(G_132,L_G_STORE277__379,L_G275__377,L_G276__378);
}
{
TMP_538=lisp.callFunctionWithCallStack(G_285,L_K__365,1);
L_G278__380=lisp.values1(TMP_538);
L_K__365=lisp.values1(L_G278__380);
}
{
TMP_539=lisp.callFunctionWithCallStack(G_45,L_J__376);
L_G279__381=lisp.values1(TMP_539);
L_J__376=lisp.values1(L_G279__381);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__375=lisp.values1(lisp.S_nil);
break;
}
}
{
L_G280__382=lisp.values1(L_K__365);
BLOCK_NIL__383: for(;;){{
L_I__384=lisp.values1(0);
for(;;){
TMP_540=lisp.callFunctionWithCallStack(G_90,L_I__384,L_G280__382);
if(lisp.values1(TMP_540) !== lisp.S_nil){
BLOCK_RESULT_NIL__383=lisp.values1(lisp.S_nil);
break BLOCK_NIL__383;
}else{
{
L_G287__385=lisp.values1(L_VECTOR__351);
TMP_541=lisp.callFunctionWithCallStack(G_285,L_LEFT__359,L_I__384);
L_G288__386=lisp.values1(TMP_541);
TMP_542=lisp.callFunctionWithCallStack(G_57,L_TEMP__356,L_I__384);
L_G_STORE289__387=lisp.values1(TMP_542);
lisp.callFunctionWithCallStack(G_132,L_G_STORE289__387,L_G287__385,L_G288__386);
}
{
TMP_543=lisp.callFunctionWithCallStack(G_285,L_I__384,1);
L_G290__388=lisp.values1(TMP_543);
L_I__384=lisp.values1(L_G290__388);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__383=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
BLOCK_RESULT_NIL__362=BLOCK_RESULT_NIL__383;
break BLOCK_NIL__362;
}else{
{
TMP_544=lisp.callFunctionWithCallStack(G_57,L_VECTOR__351,L_J__364);
TMP_545=lisp.callFunctionWithCallStack(G_351,L_KEY__353,TMP_544);
TMP_546=lisp.callFunctionWithCallStack(G_57,L_VECTOR__351,L_I__363);
TMP_547=lisp.callFunctionWithCallStack(G_351,L_KEY__353,TMP_546);
TMP_548=lisp.CL_funcall(lisp.values1(L_PREDICATE__352),TMP_545,TMP_547);
TMP_549=lisp.callFunctionWithCallStack(G_245,TMP_548);
L_G293__389=lisp.values1(TMP_549);
if(lisp.values1(L_G293__389) !== lisp.S_nil){
{
L_G294__390=lisp.values1(L_TEMP__356);
L_G295__391=lisp.values1(L_K__365);
TMP_550=lisp.callFunctionWithCallStack(G_57,L_VECTOR__351,L_I__363);
L_G_STORE296__392=lisp.values1(TMP_550);
lisp.callFunctionWithCallStack(G_132,L_G_STORE296__392,L_G294__390,L_G295__391);
}
{
TMP_551=lisp.callFunctionWithCallStack(G_285,L_I__363,1);
L_G297__393=lisp.values1(TMP_551);
L_I__363=lisp.values1(L_G297__393);
}
}else{
{
L_G299__395=lisp.values1(L_TEMP__356);
L_G300__396=lisp.values1(L_K__365);
TMP_552=lisp.callFunctionWithCallStack(G_57,L_VECTOR__351,L_J__364);
L_G_STORE301__397=lisp.values1(TMP_552);
lisp.callFunctionWithCallStack(G_132,L_G_STORE301__397,L_G299__395,L_G300__396);
}
{
TMP_553=lisp.callFunctionWithCallStack(G_285,L_J__364,1);
L_G302__398=lisp.values1(TMP_553);
L_J__364=lisp.values1(L_G302__398);
}
}
}
{
TMP_554=lisp.callFunctionWithCallStack(G_45,L_K__365);
L_G303__399=lisp.values1(TMP_554);
L_K__365=lisp.values1(L_G303__399);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__362=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__362;
});
F_MERGESTAR__357=lisp.values1(TMP_526);
TMP_555=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_561;
let L_MIDDLE__402;
let TMP_560;
let TMP_559;
let TMP_558;
let TMP_557;
let TMP_556;
let L_RIGHT__401;
let L_LEFT__400;
L_LEFT__400=arguments[0];
L_RIGHT__401=arguments[1];
TMP_556=lisp.callFunctionWithCallStack(G_27,L_RIGHT__401,L_LEFT__400);
TMP_557=lisp.callFunctionWithCallStack(G_90,1,TMP_556);
if(lisp.values1(TMP_557) !== lisp.S_nil){
TMP_558=lisp.values1(lisp.S_nil);
}else{
{
TMP_559=lisp.callFunctionWithCallStack(G_285,L_LEFT__400,L_RIGHT__401);
TMP_560=lisp.callFunctionWithCallStack(G_465,TMP_559,2);
L_MIDDLE__402=lisp.values1(TMP_560);
F_REC__358(L_LEFT__400,L_MIDDLE__402);
F_REC__358(L_MIDDLE__402,L_RIGHT__401);
TMP_561=F_MERGESTAR__357(L_LEFT__400,L_MIDDLE__402,L_RIGHT__401);
}
TMP_558=TMP_561;
}
return TMP_558;
});
F_REC__358=lisp.values1(TMP_555);
F_REC__358(0,L_SIZE__355);
{
L_G304__403=lisp.values1(L_SIZE__355);
BLOCK_NIL__404: for(;;){{
L_I__405=lisp.values1(0);
for(;;){
TMP_562=lisp.callFunctionWithCallStack(G_90,L_I__405,L_G304__403);
if(lisp.values1(TMP_562) !== lisp.S_nil){
BLOCK_RESULT_NIL__404=lisp.values1(lisp.S_nil);
break BLOCK_NIL__404;
}else{
{
L_G311__406=lisp.values1(L_VECTOR__351);
L_G312__407=lisp.values1(L_I__405);
TMP_563=lisp.callFunctionWithCallStack(G_57,L_TEMP__356,L_I__405);
L_G_STORE313__408=lisp.values1(TMP_563);
lisp.callFunctionWithCallStack(G_132,L_G_STORE313__408,L_G311__406,L_G312__407);
}
{
TMP_564=lisp.callFunctionWithCallStack(G_285,L_I__405,1);
L_G314__409=lisp.values1(TMP_564);
L_I__405=lisp.values1(L_G314__409);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__404=lisp.values1(lisp.S_nil);
break;
}
}
}
}
return lisp.values1(L_VECTOR__351);
});
CL_COMMON_LISP_STABLE_SORT_VECTOR=lisp.values1(F_STABLE_SORT_VECTOR_522);
let F_STABLE_SORT_565;
F_STABLE_SORT_565=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_485, arguments.length);
}
let TMP_574;
let TMP_573;
let TMP_572;
let L_G316__415;
let TMP_571;
let TMP_570;
let TMP_569;
let L_G315__414;
let TMP_568;
let L_KEY__412;
let L_PREDICATE__411;
let L_SEQUENCE__410;
L_SEQUENCE__410=arguments[0];
L_PREDICATE__411=arguments[1];
let supplied_KEY__412;
for (let TMP_566 = 2; TMP_566 < arguments.length; TMP_566 += 2) {
if(arguments[TMP_566] === G_378){
supplied_KEY__412=arguments[TMP_566+1];
break;
}
}
L_KEY__412=supplied_KEY__412 !== undefined ? supplied_KEY__412 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_567 = 2; TMP_567 < arguments.length; TMP_567 += 2) {
if(arguments[TMP_567]!==G_378) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_567].name); }
}
{
TMP_568=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__410);
L_G315__414=lisp.values1(TMP_568);
if(lisp.values1(L_G315__414) !== lisp.S_nil){
TMP_570=G_487.func(L_SEQUENCE__410,L_PREDICATE__411,L_KEY__412);
TMP_569=TMP_570;
}else{
{
TMP_571=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__410);
L_G316__415=lisp.values1(TMP_571);
if(lisp.values1(L_G316__415) !== lisp.S_nil){
TMP_573=G_523.func(L_SEQUENCE__410,L_PREDICATE__411,L_KEY__412);
TMP_572=TMP_573;
}else{
TMP_574=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__410,G_72);
TMP_572=TMP_574;
}
}
TMP_569=TMP_572;
}
}
return TMP_569;
});
CL_COMMON_LISP_STABLE_SORT=lisp.values1(F_STABLE_SORT_565);
let F_FIND_575;
F_FIND_575=(function(){
if(arguments.length < 2 || 14 < arguments.length) {
lisp.argumentsError(G_576, arguments.length);
}
let TMP_603;
let TMP_599;
let TMP_594;
let TMP_593;
let L_G319__428;
let TMP_589;
let TMP_588;
let L_G318__426;
let TMP_587;
let L_TEST_NOT__424;
let L_TEST__423;
let L_KEY__422;
let L_END__421;
let L_START__420;
let L_FROM_END__419;
let L_SEQUENCE__418;
let L_ITEM__417;
L_ITEM__417=arguments[0];
L_SEQUENCE__418=arguments[1];
let supplied_FROM_END__419;
for (let TMP_577 = 2; TMP_577 < arguments.length; TMP_577 += 2) {
if(arguments[TMP_577] === G_380){
supplied_FROM_END__419=arguments[TMP_577+1];
break;
}
}
L_FROM_END__419=supplied_FROM_END__419 !== undefined ? supplied_FROM_END__419 : (lisp.values1(lisp.S_nil));
let supplied_START__420;
for (let TMP_578 = 2; TMP_578 < arguments.length; TMP_578 += 2) {
if(arguments[TMP_578] === G_151){
supplied_START__420=arguments[TMP_578+1];
break;
}
}
L_START__420=supplied_START__420 !== undefined ? supplied_START__420 : (lisp.values1(lisp.S_nil));
let supplied_END__421;
for (let TMP_579 = 2; TMP_579 < arguments.length; TMP_579 += 2) {
if(arguments[TMP_579] === G_153){
supplied_END__421=arguments[TMP_579+1];
break;
}
}
L_END__421=supplied_END__421 !== undefined ? supplied_END__421 : (lisp.values1(lisp.S_nil));
let supplied_KEY__422;
for (let TMP_580 = 2; TMP_580 < arguments.length; TMP_580 += 2) {
if(arguments[TMP_580] === G_378){
supplied_KEY__422=arguments[TMP_580+1];
break;
}
}
L_KEY__422=supplied_KEY__422 !== undefined ? supplied_KEY__422 : (lisp.values1(lisp.S_nil));
let supplied_TEST__423;
for (let TMP_582 = 2; TMP_582 < arguments.length; TMP_582 += 2) {
if(arguments[TMP_582] === G_581){
supplied_TEST__423=arguments[TMP_582+1];
break;
}
}
L_TEST__423=supplied_TEST__423 !== undefined ? supplied_TEST__423 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__424;
for (let TMP_584 = 2; TMP_584 < arguments.length; TMP_584 += 2) {
if(arguments[TMP_584] === G_583){
supplied_TEST_NOT__424=arguments[TMP_584+1];
break;
}
}
L_TEST_NOT__424=supplied_TEST_NOT__424 !== undefined ? supplied_TEST_NOT__424 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_585 = 2; TMP_585 < arguments.length; TMP_585 += 2) {
if(arguments[TMP_585]!==G_583 && arguments[TMP_585]!==G_581 && arguments[TMP_585]!==G_378 && arguments[TMP_585]!==G_153 && arguments[TMP_585]!==G_151 && arguments[TMP_585]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_585].name); }
}
try {
{
L_G318__426=lisp.values1(L_TEST__423);
if(lisp.values1(L_G318__426) !== lisp.S_nil){
TMP_589=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_592;
let TMP_591;
let TMP_590;
let L_X__427;
L_X__427=arguments[0];
TMP_590=lisp.callFunctionWithCallStack(G_351,L_KEY__422,L_X__427);
TMP_591=lisp.CL_funcall(lisp.values1(L_TEST__423),L_ITEM__417,TMP_590);
if(lisp.values1(TMP_591) !== lisp.S_nil){
throw new lisp.BlockValue(G_576,lisp.values1(L_X__427));TMP_592=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_592=lisp.values1(lisp.S_nil);
}
return TMP_592;
});
TMP_588=lisp.values1(TMP_589);
}else{
{
L_G319__428=lisp.values1(L_TEST_NOT__424);
if(lisp.values1(L_G319__428) !== lisp.S_nil){
TMP_594=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_598;
let TMP_597;
let TMP_596;
let TMP_595;
let L_X__429;
L_X__429=arguments[0];
TMP_595=lisp.callFunctionWithCallStack(G_351,L_KEY__422,L_X__429);
TMP_596=lisp.CL_funcall(lisp.values1(L_TEST_NOT__424),L_ITEM__417,TMP_595);
TMP_597=lisp.callFunctionWithCallStack(G_245,TMP_596);
if(lisp.values1(TMP_597) !== lisp.S_nil){
throw new lisp.BlockValue(G_576,lisp.values1(L_X__429));TMP_598=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_598=lisp.values1(lisp.S_nil);
}
return TMP_598;
});
TMP_593=lisp.values1(TMP_594);
}else{
TMP_599=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_602;
let TMP_601;
let TMP_600;
let L_X__431;
L_X__431=arguments[0];
TMP_600=lisp.callFunctionWithCallStack(G_351,L_KEY__422,L_X__431);
TMP_601=lisp.callFunctionWithCallStack(G_184,L_ITEM__417,TMP_600);
if(lisp.values1(TMP_601) !== lisp.S_nil){
throw new lisp.BlockValue(G_576,lisp.values1(L_X__431));TMP_602=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_602=lisp.values1(lisp.S_nil);
}
return TMP_602;
});
TMP_593=lisp.values1(TMP_599);
}
}
TMP_588=lisp.values1(lisp.values1(TMP_593));
}
}
TMP_603=G_15.func(lisp.values1(TMP_588),L_SEQUENCE__418,L_FROM_END__419,L_START__420,L_END__421,lisp.S_nil);
TMP_587=TMP_603
}catch(E__586){if(E__586 instanceof lisp.BlockValue && E__586.name === G_576){TMP_587=E__586.value;}
else{throw E__586;}
}
return TMP_587;
});
CL_COMMON_LISP_FIND=lisp.values1(F_FIND_575);
let F_FIND_IF_604;
F_FIND_IF_604=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_605, arguments.length);
}
let TMP_613;
let TMP_612;
let L_KEY__437;
let L_END__436;
let L_START__435;
let L_FROM_END__434;
let L_SEQUENCE__433;
let L_PREDICATE__432;
L_PREDICATE__432=arguments[0];
L_SEQUENCE__433=arguments[1];
let supplied_FROM_END__434;
for (let TMP_606 = 2; TMP_606 < arguments.length; TMP_606 += 2) {
if(arguments[TMP_606] === G_380){
supplied_FROM_END__434=arguments[TMP_606+1];
break;
}
}
L_FROM_END__434=supplied_FROM_END__434 !== undefined ? supplied_FROM_END__434 : (lisp.values1(lisp.S_nil));
let supplied_START__435;
for (let TMP_607 = 2; TMP_607 < arguments.length; TMP_607 += 2) {
if(arguments[TMP_607] === G_151){
supplied_START__435=arguments[TMP_607+1];
break;
}
}
L_START__435=supplied_START__435 !== undefined ? supplied_START__435 : (lisp.values1(lisp.S_nil));
let supplied_END__436;
for (let TMP_608 = 2; TMP_608 < arguments.length; TMP_608 += 2) {
if(arguments[TMP_608] === G_153){
supplied_END__436=arguments[TMP_608+1];
break;
}
}
L_END__436=supplied_END__436 !== undefined ? supplied_END__436 : (lisp.values1(lisp.S_nil));
let supplied_KEY__437;
for (let TMP_609 = 2; TMP_609 < arguments.length; TMP_609 += 2) {
if(arguments[TMP_609] === G_378){
supplied_KEY__437=arguments[TMP_609+1];
break;
}
}
L_KEY__437=supplied_KEY__437 !== undefined ? supplied_KEY__437 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_610 = 2; TMP_610 < arguments.length; TMP_610 += 2) {
if(arguments[TMP_610]!==G_378 && arguments[TMP_610]!==G_153 && arguments[TMP_610]!==G_151 && arguments[TMP_610]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_610].name); }
}
try {
TMP_613=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_616;
let TMP_615;
let TMP_614;
let L_X__439;
L_X__439=arguments[0];
TMP_614=lisp.callFunctionWithCallStack(G_351,L_KEY__437,L_X__439);
TMP_615=lisp.CL_funcall(lisp.values1(L_PREDICATE__432),TMP_614);
if(lisp.values1(TMP_615) !== lisp.S_nil){
throw new lisp.BlockValue(G_605,lisp.values1(L_X__439));TMP_616=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_616=lisp.values1(lisp.S_nil);
}
return TMP_616;
});
G_15.func(TMP_613,L_SEQUENCE__433,L_FROM_END__434,L_START__435,L_END__436,lisp.S_nil);
TMP_612=lisp.values1(lisp.S_nil)
}catch(E__611){if(E__611 instanceof lisp.BlockValue && E__611.name === G_605){TMP_612=E__611.value;}
else{throw E__611;}
}
return TMP_612;
});
CL_COMMON_LISP_FIND_IF=lisp.values1(F_FIND_IF_604);
let F_FIND_IF_NOT_617;
F_FIND_IF_NOT_617=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_618, arguments.length);
}
let TMP_626;
let TMP_624;
let L_KEY__445;
let L_END__444;
let L_START__443;
let L_FROM_END__442;
let L_SEQUENCE__441;
let L_PREDICATE__440;
L_PREDICATE__440=arguments[0];
L_SEQUENCE__441=arguments[1];
let supplied_FROM_END__442;
for (let TMP_619 = 2; TMP_619 < arguments.length; TMP_619 += 2) {
if(arguments[TMP_619] === G_380){
supplied_FROM_END__442=arguments[TMP_619+1];
break;
}
}
L_FROM_END__442=supplied_FROM_END__442 !== undefined ? supplied_FROM_END__442 : (lisp.values1(lisp.S_nil));
let supplied_START__443;
for (let TMP_620 = 2; TMP_620 < arguments.length; TMP_620 += 2) {
if(arguments[TMP_620] === G_151){
supplied_START__443=arguments[TMP_620+1];
break;
}
}
L_START__443=supplied_START__443 !== undefined ? supplied_START__443 : (lisp.values1(0));
let supplied_END__444;
for (let TMP_621 = 2; TMP_621 < arguments.length; TMP_621 += 2) {
if(arguments[TMP_621] === G_153){
supplied_END__444=arguments[TMP_621+1];
break;
}
}
L_END__444=supplied_END__444 !== undefined ? supplied_END__444 : (lisp.values1(lisp.S_nil));
let supplied_KEY__445;
for (let TMP_622 = 2; TMP_622 < arguments.length; TMP_622 += 2) {
if(arguments[TMP_622] === G_378){
supplied_KEY__445=arguments[TMP_622+1];
break;
}
}
L_KEY__445=supplied_KEY__445 !== undefined ? supplied_KEY__445 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_623 = 2; TMP_623 < arguments.length; TMP_623 += 2) {
if(arguments[TMP_623]!==G_378 && arguments[TMP_623]!==G_153 && arguments[TMP_623]!==G_151 && arguments[TMP_623]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_623].name); }
}
TMP_624=lisp.callFunctionWithCallStack(G_625,L_PREDICATE__440);
TMP_626=G_605.func(TMP_624,L_SEQUENCE__441,G_380,L_FROM_END__442,G_151,L_START__443,G_153,L_END__444,G_378,L_KEY__445);
return TMP_626;
});
CL_COMMON_LISP_FIND_IF_NOT=lisp.values1(F_FIND_IF_NOT_617);
let F_POSITION_627;
F_POSITION_627=(function(){
if(arguments.length < 2 || 14 < arguments.length) {
lisp.argumentsError(G_628, arguments.length);
}
let TMP_660;
let TMP_652;
let TMP_651;
let L_G324__461;
let TMP_644;
let TMP_643;
let L_G321__457;
let L_POS__456;
let TMP_642;
let TMP_641;
let TMP_640;
let TMP_639;
let TMP_638;
let TMP_637;
let L_KEY__454;
let L_END__453;
let L_START__452;
let L_TEST_NOT__451;
let L_TEST__450;
let L_FROM_END__449;
let L_SEQUENCE__448;
let L_ITEM__447;
L_ITEM__447=arguments[0];
L_SEQUENCE__448=arguments[1];
let supplied_FROM_END__449;
for (let TMP_629 = 2; TMP_629 < arguments.length; TMP_629 += 2) {
if(arguments[TMP_629] === G_380){
supplied_FROM_END__449=arguments[TMP_629+1];
break;
}
}
L_FROM_END__449=supplied_FROM_END__449 !== undefined ? supplied_FROM_END__449 : (lisp.values1(lisp.S_nil));
let supplied_TEST__450;
for (let TMP_630 = 2; TMP_630 < arguments.length; TMP_630 += 2) {
if(arguments[TMP_630] === G_581){
supplied_TEST__450=arguments[TMP_630+1];
break;
}
}
L_TEST__450=supplied_TEST__450 !== undefined ? supplied_TEST__450 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__451;
for (let TMP_631 = 2; TMP_631 < arguments.length; TMP_631 += 2) {
if(arguments[TMP_631] === G_583){
supplied_TEST_NOT__451=arguments[TMP_631+1];
break;
}
}
L_TEST_NOT__451=supplied_TEST_NOT__451 !== undefined ? supplied_TEST_NOT__451 : (lisp.values1(lisp.S_nil));
let supplied_START__452;
for (let TMP_632 = 2; TMP_632 < arguments.length; TMP_632 += 2) {
if(arguments[TMP_632] === G_151){
supplied_START__452=arguments[TMP_632+1];
break;
}
}
L_START__452=supplied_START__452 !== undefined ? supplied_START__452 : (lisp.values1(0));
let supplied_END__453;
for (let TMP_633 = 2; TMP_633 < arguments.length; TMP_633 += 2) {
if(arguments[TMP_633] === G_153){
supplied_END__453=arguments[TMP_633+1];
break;
}
}
L_END__453=supplied_END__453 !== undefined ? supplied_END__453 : (lisp.values1(lisp.S_nil));
let supplied_KEY__454;
for (let TMP_634 = 2; TMP_634 < arguments.length; TMP_634 += 2) {
if(arguments[TMP_634] === G_378){
supplied_KEY__454=arguments[TMP_634+1];
break;
}
}
L_KEY__454=supplied_KEY__454 !== undefined ? supplied_KEY__454 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_635 = 2; TMP_635 < arguments.length; TMP_635 += 2) {
if(arguments[TMP_635]!==G_378 && arguments[TMP_635]!==G_153 && arguments[TMP_635]!==G_151 && arguments[TMP_635]!==G_583 && arguments[TMP_635]!==G_581 && arguments[TMP_635]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_635].name); }
}
try {
{
if(lisp.values1(L_FROM_END__449) !== lisp.S_nil){
if(lisp.values1(L_END__453) !== lisp.S_nil){
TMP_640=lisp.callFunctionWithCallStack(G_38,L_END__453);
TMP_639=lisp.values1(TMP_640);
}else{
TMP_641=G_20.func(L_SEQUENCE__448);
TMP_642=lisp.callFunctionWithCallStack(G_38,TMP_641);
TMP_639=lisp.values1(TMP_642);
}
TMP_638=lisp.values1(TMP_639);
}else{
TMP_638=lisp.values1(L_START__452);
}
L_POS__456=lisp.values1(TMP_638);
{
L_G321__457=lisp.values1(L_TEST__450);
if(lisp.values1(L_G321__457) !== lisp.S_nil){
TMP_644=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_650;
let L_G323__460;
let TMP_649;
let TMP_648;
let L_G322__459;
let TMP_647;
let TMP_646;
let TMP_645;
let L_X__458;
L_X__458=arguments[0];
TMP_645=lisp.CL_funcall(lisp.values1(L_TEST__450),L_ITEM__447,L_X__458);
if(lisp.values1(TMP_645) !== lisp.S_nil){
throw new lisp.BlockValue(G_628,lisp.values1(L_POS__456));}else{
}
if(lisp.values1(L_FROM_END__449) !== lisp.S_nil){
{
TMP_647=lisp.callFunctionWithCallStack(G_27,L_POS__456,1);
L_G322__459=lisp.values1(TMP_647);
L_POS__456=(TMP_648=lisp.values1(L_G322__459));
}
TMP_646=lisp.values1(TMP_648);
}else{
{
TMP_649=lisp.callFunctionWithCallStack(G_285,L_POS__456,1);
L_G323__460=lisp.values1(TMP_649);
L_POS__456=(TMP_650=lisp.values1(L_G323__460));
}
TMP_646=lisp.values1(TMP_650);
}
return TMP_646;
});
TMP_643=lisp.values1(TMP_644);
}else{
{
L_G324__461=lisp.values1(L_TEST_NOT__451);
if(lisp.values1(L_G324__461) !== lisp.S_nil){
TMP_652=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_659;
let L_G326__464;
let TMP_658;
let TMP_657;
let L_G325__463;
let TMP_656;
let TMP_655;
let TMP_654;
let TMP_653;
let L_X__462;
L_X__462=arguments[0];
TMP_653=lisp.CL_funcall(lisp.values1(L_TEST_NOT__451),L_ITEM__447,L_X__462);
TMP_654=lisp.callFunctionWithCallStack(G_245,TMP_653);
if(lisp.values1(TMP_654) !== lisp.S_nil){
throw new lisp.BlockValue(G_628,lisp.values1(L_POS__456));}else{
}
if(lisp.values1(L_FROM_END__449) !== lisp.S_nil){
{
TMP_656=lisp.callFunctionWithCallStack(G_27,L_POS__456,1);
L_G325__463=lisp.values1(TMP_656);
L_POS__456=(TMP_657=lisp.values1(L_G325__463));
}
TMP_655=lisp.values1(TMP_657);
}else{
{
TMP_658=lisp.callFunctionWithCallStack(G_285,L_POS__456,1);
L_G326__464=lisp.values1(TMP_658);
L_POS__456=(TMP_659=lisp.values1(L_G326__464));
}
TMP_655=lisp.values1(TMP_659);
}
return TMP_655;
});
TMP_651=lisp.values1(TMP_652);
}else{
TMP_660=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_666;
let L_G329__468;
let TMP_665;
let TMP_664;
let L_G328__467;
let TMP_663;
let TMP_662;
let TMP_661;
let L_X__466;
L_X__466=arguments[0];
TMP_661=lisp.callFunctionWithCallStack(G_184,L_ITEM__447,L_X__466);
if(lisp.values1(TMP_661) !== lisp.S_nil){
throw new lisp.BlockValue(G_628,lisp.values1(L_POS__456));}else{
}
if(lisp.values1(L_FROM_END__449) !== lisp.S_nil){
{
TMP_663=lisp.callFunctionWithCallStack(G_27,L_POS__456,1);
L_G328__467=lisp.values1(TMP_663);
L_POS__456=(TMP_664=lisp.values1(L_G328__467));
}
TMP_662=lisp.values1(TMP_664);
}else{
{
TMP_665=lisp.callFunctionWithCallStack(G_285,L_POS__456,1);
L_G329__468=lisp.values1(TMP_665);
L_POS__456=(TMP_666=lisp.values1(L_G329__468));
}
TMP_662=lisp.values1(TMP_666);
}
return TMP_662;
});
TMP_651=lisp.values1(TMP_660);
}
}
TMP_643=lisp.values1(lisp.values1(TMP_651));
}
}
G_15.func(lisp.values1(TMP_643),L_SEQUENCE__448,L_FROM_END__449,L_START__452,L_END__453,L_KEY__454);
}
TMP_637=lisp.values1(lisp.S_nil)
}catch(E__636){if(E__636 instanceof lisp.BlockValue && E__636.name === G_628){TMP_637=E__636.value;}
else{throw E__636;}
}
return TMP_637;
});
CL_COMMON_LISP_POSITION=lisp.values1(F_POSITION_627);
let F_POSITION_IF_667;
F_POSITION_IF_667=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_668, arguments.length);
}
let TMP_686;
let TMP_679;
let L_POS__476;
let TMP_678;
let TMP_677;
let TMP_676;
let TMP_675;
let L_KEY__474;
let L_END__473;
let L_START__472;
let L_FROM_END__471;
let L_SEQUENCE__470;
let L_PREDICATE__469;
L_PREDICATE__469=arguments[0];
L_SEQUENCE__470=arguments[1];
let supplied_FROM_END__471;
for (let TMP_669 = 2; TMP_669 < arguments.length; TMP_669 += 2) {
if(arguments[TMP_669] === G_380){
supplied_FROM_END__471=arguments[TMP_669+1];
break;
}
}
L_FROM_END__471=supplied_FROM_END__471 !== undefined ? supplied_FROM_END__471 : (lisp.values1(lisp.S_nil));
let supplied_START__472;
for (let TMP_670 = 2; TMP_670 < arguments.length; TMP_670 += 2) {
if(arguments[TMP_670] === G_151){
supplied_START__472=arguments[TMP_670+1];
break;
}
}
L_START__472=supplied_START__472 !== undefined ? supplied_START__472 : (lisp.values1(0));
let supplied_END__473;
for (let TMP_671 = 2; TMP_671 < arguments.length; TMP_671 += 2) {
if(arguments[TMP_671] === G_153){
supplied_END__473=arguments[TMP_671+1];
break;
}
}
L_END__473=supplied_END__473 !== undefined ? supplied_END__473 : (lisp.values1(lisp.S_nil));
let supplied_KEY__474;
for (let TMP_672 = 2; TMP_672 < arguments.length; TMP_672 += 2) {
if(arguments[TMP_672] === G_378){
supplied_KEY__474=arguments[TMP_672+1];
break;
}
}
L_KEY__474=supplied_KEY__474 !== undefined ? supplied_KEY__474 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_673 = 2; TMP_673 < arguments.length; TMP_673 += 2) {
if(arguments[TMP_673]!==G_378 && arguments[TMP_673]!==G_153 && arguments[TMP_673]!==G_151 && arguments[TMP_673]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_673].name); }
}
try {
if(lisp.values1(L_END__473) !== lisp.S_nil){
}else{
TMP_676=G_20.func(L_SEQUENCE__470);
L_END__473=lisp.values1(TMP_676);
}
{
if(lisp.values1(L_FROM_END__471) !== lisp.S_nil){
TMP_678=lisp.callFunctionWithCallStack(G_38,L_END__473);
TMP_677=lisp.values1(TMP_678);
}else{
TMP_677=lisp.values1(L_START__472);
}
L_POS__476=lisp.values1(TMP_677);
TMP_679=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_685;
let L_G331__479;
let TMP_684;
let TMP_683;
let L_G330__478;
let TMP_682;
let TMP_681;
let TMP_680;
let L_X__477;
L_X__477=arguments[0];
TMP_680=lisp.CL_funcall(lisp.values1(L_PREDICATE__469),L_X__477);
if(lisp.values1(TMP_680) !== lisp.S_nil){
throw new lisp.BlockValue(G_668,lisp.values1(L_POS__476));}else{
}
if(lisp.values1(L_FROM_END__471) !== lisp.S_nil){
{
TMP_682=lisp.callFunctionWithCallStack(G_27,L_POS__476,1);
L_G330__478=lisp.values1(TMP_682);
L_POS__476=(TMP_683=lisp.values1(L_G330__478));
}
TMP_681=lisp.values1(TMP_683);
}else{
{
TMP_684=lisp.callFunctionWithCallStack(G_285,L_POS__476,1);
L_G331__479=lisp.values1(TMP_684);
L_POS__476=(TMP_685=lisp.values1(L_G331__479));
}
TMP_681=lisp.values1(TMP_685);
}
return TMP_681;
});
TMP_686=G_15.func(TMP_679,L_SEQUENCE__470,L_FROM_END__471,L_START__472,L_END__473,L_KEY__474);
}
TMP_675=TMP_686
}catch(E__674){if(E__674 instanceof lisp.BlockValue && E__674.name === G_668){TMP_675=E__674.value;}
else{throw E__674;}
}
return TMP_675;
});
CL_COMMON_LISP_POSITION_IF=lisp.values1(F_POSITION_IF_667);
let F_POSITION_IF_NOT_687;
F_POSITION_IF_NOT_687=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_688, arguments.length);
}
let TMP_695;
let TMP_694;
let L_KEY__485;
let L_END__484;
let L_START__483;
let L_FROM_END__482;
let L_SEQUENCE__481;
let L_PREDICATE__480;
L_PREDICATE__480=arguments[0];
L_SEQUENCE__481=arguments[1];
let supplied_FROM_END__482;
for (let TMP_689 = 2; TMP_689 < arguments.length; TMP_689 += 2) {
if(arguments[TMP_689] === G_380){
supplied_FROM_END__482=arguments[TMP_689+1];
break;
}
}
L_FROM_END__482=supplied_FROM_END__482 !== undefined ? supplied_FROM_END__482 : (lisp.values1(lisp.S_nil));
let supplied_START__483;
for (let TMP_690 = 2; TMP_690 < arguments.length; TMP_690 += 2) {
if(arguments[TMP_690] === G_151){
supplied_START__483=arguments[TMP_690+1];
break;
}
}
L_START__483=supplied_START__483 !== undefined ? supplied_START__483 : (lisp.values1(0));
let supplied_END__484;
for (let TMP_691 = 2; TMP_691 < arguments.length; TMP_691 += 2) {
if(arguments[TMP_691] === G_153){
supplied_END__484=arguments[TMP_691+1];
break;
}
}
L_END__484=supplied_END__484 !== undefined ? supplied_END__484 : (lisp.values1(lisp.S_nil));
let supplied_KEY__485;
for (let TMP_692 = 2; TMP_692 < arguments.length; TMP_692 += 2) {
if(arguments[TMP_692] === G_378){
supplied_KEY__485=arguments[TMP_692+1];
break;
}
}
L_KEY__485=supplied_KEY__485 !== undefined ? supplied_KEY__485 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_693 = 2; TMP_693 < arguments.length; TMP_693 += 2) {
if(arguments[TMP_693]!==G_378 && arguments[TMP_693]!==G_153 && arguments[TMP_693]!==G_151 && arguments[TMP_693]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_693].name); }
}
TMP_694=lisp.callFunctionWithCallStack(G_625,L_PREDICATE__480);
TMP_695=G_668.func(TMP_694,L_SEQUENCE__481,G_380,L_FROM_END__482,G_151,L_START__483,G_153,L_END__484,G_378,L_KEY__485);
return TMP_695;
});
CL_COMMON_LISP_POSITION_IF_NOT=lisp.values1(F_POSITION_IF_NOT_687);
let F_COUNT_696;
F_COUNT_696=(function(){
if(arguments.length < 2 || 14 < arguments.length) {
lisp.argumentsError(G_697, arguments.length);
}
let TMP_712;
let TMP_705;
let L_TEST_NOT__494;
let L_TEST__493;
let L_KEY__492;
let L_END__491;
let L_START__490;
let L_FROM_END__489;
let L_SEQUENCE__488;
let L_ITEM__487;
L_ITEM__487=arguments[0];
L_SEQUENCE__488=arguments[1];
let supplied_FROM_END__489;
for (let TMP_698 = 2; TMP_698 < arguments.length; TMP_698 += 2) {
if(arguments[TMP_698] === G_380){
supplied_FROM_END__489=arguments[TMP_698+1];
break;
}
}
L_FROM_END__489=supplied_FROM_END__489 !== undefined ? supplied_FROM_END__489 : (lisp.values1(lisp.S_nil));
let supplied_START__490;
for (let TMP_699 = 2; TMP_699 < arguments.length; TMP_699 += 2) {
if(arguments[TMP_699] === G_151){
supplied_START__490=arguments[TMP_699+1];
break;
}
}
L_START__490=supplied_START__490 !== undefined ? supplied_START__490 : (lisp.values1(0));
let supplied_END__491;
for (let TMP_700 = 2; TMP_700 < arguments.length; TMP_700 += 2) {
if(arguments[TMP_700] === G_153){
supplied_END__491=arguments[TMP_700+1];
break;
}
}
L_END__491=supplied_END__491 !== undefined ? supplied_END__491 : (lisp.values1(lisp.S_nil));
let supplied_KEY__492;
for (let TMP_701 = 2; TMP_701 < arguments.length; TMP_701 += 2) {
if(arguments[TMP_701] === G_378){
supplied_KEY__492=arguments[TMP_701+1];
break;
}
}
L_KEY__492=supplied_KEY__492 !== undefined ? supplied_KEY__492 : (lisp.values1(lisp.S_nil));
let supplied_TEST__493;
for (let TMP_702 = 2; TMP_702 < arguments.length; TMP_702 += 2) {
if(arguments[TMP_702] === G_581){
supplied_TEST__493=arguments[TMP_702+1];
break;
}
}
L_TEST__493=supplied_TEST__493 !== undefined ? supplied_TEST__493 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__494;
for (let TMP_703 = 2; TMP_703 < arguments.length; TMP_703 += 2) {
if(arguments[TMP_703] === G_583){
supplied_TEST_NOT__494=arguments[TMP_703+1];
break;
}
}
L_TEST_NOT__494=supplied_TEST_NOT__494 !== undefined ? supplied_TEST_NOT__494 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_704 = 2; TMP_704 < arguments.length; TMP_704 += 2) {
if(arguments[TMP_704]!==G_583 && arguments[TMP_704]!==G_581 && arguments[TMP_704]!==G_378 && arguments[TMP_704]!==G_153 && arguments[TMP_704]!==G_151 && arguments[TMP_704]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_704].name); }
}
TMP_705=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_711;
let TMP_710;
let TMP_709;
let TMP_708;
let L_G333__498;
let TMP_707;
let TMP_706;
let L_G332__497;
let L_X__496;
L_X__496=arguments[0];
{
L_G332__497=lisp.values1(L_TEST__493);
if(lisp.values1(L_G332__497) !== lisp.S_nil){
TMP_707=lisp.CL_funcall(lisp.values1(L_TEST__493),L_ITEM__487,L_X__496);
TMP_706=TMP_707;
}else{
{
L_G333__498=lisp.values1(L_TEST_NOT__494);
if(lisp.values1(L_G333__498) !== lisp.S_nil){
TMP_709=lisp.CL_funcall(lisp.values1(L_TEST_NOT__494),L_ITEM__487,L_X__496);
TMP_710=lisp.callFunctionWithCallStack(G_245,TMP_709);
TMP_708=TMP_710;
}else{
TMP_711=lisp.callFunctionWithCallStack(G_184,L_ITEM__487,L_X__496);
TMP_708=TMP_711;
}
}
TMP_706=TMP_708;
}
}
return TMP_706;
});
TMP_712=G_713.func(TMP_705,L_SEQUENCE__488,G_380,L_FROM_END__489,G_151,L_START__490,G_153,L_END__491,G_378,L_KEY__492);
return TMP_712;
});
CL_COMMON_LISP_COUNT=lisp.values1(F_COUNT_696);
let F_COUNT_IF_714;
F_COUNT_IF_714=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_713, arguments.length);
}
let TMP_720;
let L_COUNT__507;
let L_KEY__505;
let L_END__504;
let L_START__503;
let L_FROM_END__502;
let L_SEQUENCE__501;
let L_PREDICATE__500;
L_PREDICATE__500=arguments[0];
L_SEQUENCE__501=arguments[1];
let supplied_FROM_END__502;
for (let TMP_715 = 2; TMP_715 < arguments.length; TMP_715 += 2) {
if(arguments[TMP_715] === G_380){
supplied_FROM_END__502=arguments[TMP_715+1];
break;
}
}
L_FROM_END__502=supplied_FROM_END__502 !== undefined ? supplied_FROM_END__502 : (lisp.values1(lisp.S_nil));
let supplied_START__503;
for (let TMP_716 = 2; TMP_716 < arguments.length; TMP_716 += 2) {
if(arguments[TMP_716] === G_151){
supplied_START__503=arguments[TMP_716+1];
break;
}
}
L_START__503=supplied_START__503 !== undefined ? supplied_START__503 : (lisp.values1(lisp.S_nil));
let supplied_END__504;
for (let TMP_717 = 2; TMP_717 < arguments.length; TMP_717 += 2) {
if(arguments[TMP_717] === G_153){
supplied_END__504=arguments[TMP_717+1];
break;
}
}
L_END__504=supplied_END__504 !== undefined ? supplied_END__504 : (lisp.values1(lisp.S_nil));
let supplied_KEY__505;
for (let TMP_718 = 2; TMP_718 < arguments.length; TMP_718 += 2) {
if(arguments[TMP_718] === G_378){
supplied_KEY__505=arguments[TMP_718+1];
break;
}
}
L_KEY__505=supplied_KEY__505 !== undefined ? supplied_KEY__505 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_719 = 2; TMP_719 < arguments.length; TMP_719 += 2) {
if(arguments[TMP_719]!==G_378 && arguments[TMP_719]!==G_153 && arguments[TMP_719]!==G_151 && arguments[TMP_719]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_719].name); }
}
{
L_COUNT__507=lisp.values1(0);
TMP_720=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_724;
let L_G335__509;
let TMP_723;
let TMP_722;
let TMP_721;
let L_X__508;
L_X__508=arguments[0];
TMP_721=lisp.CL_funcall(lisp.values1(L_PREDICATE__500),L_X__508);
if(lisp.values1(TMP_721) !== lisp.S_nil){
{
TMP_723=lisp.callFunctionWithCallStack(G_285,L_COUNT__507,1);
L_G335__509=lisp.values1(TMP_723);
L_COUNT__507=(TMP_724=lisp.values1(L_G335__509));
}
TMP_722=lisp.values1(TMP_724);
}else{
TMP_722=lisp.values1(lisp.S_nil);
}
return TMP_722;
});
G_15.func(TMP_720,L_SEQUENCE__501,L_FROM_END__502,L_START__503,L_END__504,L_KEY__505);
}
return lisp.values1(L_COUNT__507);
});
CL_COMMON_LISP_COUNT_IF=lisp.values1(F_COUNT_IF_714);
let F_COUNT_IF_NOT_725;
F_COUNT_IF_NOT_725=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_726, arguments.length);
}
let TMP_733;
let TMP_732;
let L_KEY__515;
let L_END__514;
let L_START__513;
let L_FROM_END__512;
let L_SEQUENCE__511;
let L_PREDICATE__510;
L_PREDICATE__510=arguments[0];
L_SEQUENCE__511=arguments[1];
let supplied_FROM_END__512;
for (let TMP_727 = 2; TMP_727 < arguments.length; TMP_727 += 2) {
if(arguments[TMP_727] === G_380){
supplied_FROM_END__512=arguments[TMP_727+1];
break;
}
}
L_FROM_END__512=supplied_FROM_END__512 !== undefined ? supplied_FROM_END__512 : (lisp.values1(lisp.S_nil));
let supplied_START__513;
for (let TMP_728 = 2; TMP_728 < arguments.length; TMP_728 += 2) {
if(arguments[TMP_728] === G_151){
supplied_START__513=arguments[TMP_728+1];
break;
}
}
L_START__513=supplied_START__513 !== undefined ? supplied_START__513 : (lisp.values1(0));
let supplied_END__514;
for (let TMP_729 = 2; TMP_729 < arguments.length; TMP_729 += 2) {
if(arguments[TMP_729] === G_153){
supplied_END__514=arguments[TMP_729+1];
break;
}
}
L_END__514=supplied_END__514 !== undefined ? supplied_END__514 : (lisp.values1(lisp.S_nil));
let supplied_KEY__515;
for (let TMP_730 = 2; TMP_730 < arguments.length; TMP_730 += 2) {
if(arguments[TMP_730] === G_378){
supplied_KEY__515=arguments[TMP_730+1];
break;
}
}
L_KEY__515=supplied_KEY__515 !== undefined ? supplied_KEY__515 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_731 = 2; TMP_731 < arguments.length; TMP_731 += 2) {
if(arguments[TMP_731]!==G_378 && arguments[TMP_731]!==G_153 && arguments[TMP_731]!==G_151 && arguments[TMP_731]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_731].name); }
}
TMP_732=lisp.callFunctionWithCallStack(G_625,L_PREDICATE__510);
TMP_733=G_713.func(TMP_732,L_SEQUENCE__511,G_380,L_FROM_END__512,G_151,L_START__513,G_153,L_END__514,G_378,L_KEY__515);
return TMP_733;
});
CL_COMMON_LISP_COUNT_IF_NOT=lisp.values1(F_COUNT_IF_NOT_725);
let F_SEARCH_734;
F_SEARCH_734=(function(){
if(arguments.length < 2 || 18 < arguments.length) {
lisp.argumentsError(G_735, arguments.length);
}
let L_G342__533;
let TMP_755;
let TMP_753;
let TMP_752;
let TMP_751;
let L_I__532;
let BLOCK_RESULT_NIL__531;
let L_LAST_MATCH_INDEX__530;
let L_STOP__529;
let TMP_750;
let L_SPAN__528;
let TMP_749;
let TMP_748;
let TMP_747;
let L_END2__526;
let L_END1__525;
let L_START2__524;
let L_START1__523;
let L_KEY__522;
let L_TEST_NOT__521;
let L_TEST__520;
let L_FROM_END__519;
let L_SEQUENCE_2__518;
let L_SEQUENCE_1__517;
L_SEQUENCE_1__517=arguments[0];
L_SEQUENCE_2__518=arguments[1];
let supplied_FROM_END__519;
for (let TMP_736 = 2; TMP_736 < arguments.length; TMP_736 += 2) {
if(arguments[TMP_736] === G_380){
supplied_FROM_END__519=arguments[TMP_736+1];
break;
}
}
L_FROM_END__519=supplied_FROM_END__519 !== undefined ? supplied_FROM_END__519 : (lisp.values1(lisp.S_nil));
let supplied_TEST__520;
for (let TMP_737 = 2; TMP_737 < arguments.length; TMP_737 += 2) {
if(arguments[TMP_737] === G_581){
supplied_TEST__520=arguments[TMP_737+1];
break;
}
}
L_TEST__520=supplied_TEST__520 !== undefined ? supplied_TEST__520 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__521;
for (let TMP_738 = 2; TMP_738 < arguments.length; TMP_738 += 2) {
if(arguments[TMP_738] === G_583){
supplied_TEST_NOT__521=arguments[TMP_738+1];
break;
}
}
L_TEST_NOT__521=supplied_TEST_NOT__521 !== undefined ? supplied_TEST_NOT__521 : (lisp.values1(lisp.S_nil));
let supplied_KEY__522;
for (let TMP_739 = 2; TMP_739 < arguments.length; TMP_739 += 2) {
if(arguments[TMP_739] === G_378){
supplied_KEY__522=arguments[TMP_739+1];
break;
}
}
L_KEY__522=supplied_KEY__522 !== undefined ? supplied_KEY__522 : (lisp.values1(lisp.S_nil));
let supplied_START1__523;
for (let TMP_740 = 2; TMP_740 < arguments.length; TMP_740 += 2) {
if(arguments[TMP_740] === G_258){
supplied_START1__523=arguments[TMP_740+1];
break;
}
}
L_START1__523=supplied_START1__523 !== undefined ? supplied_START1__523 : (lisp.values1(0));
let supplied_START2__524;
for (let TMP_742 = 2; TMP_742 < arguments.length; TMP_742 += 2) {
if(arguments[TMP_742] === G_741){
supplied_START2__524=arguments[TMP_742+1];
break;
}
}
L_START2__524=supplied_START2__524 !== undefined ? supplied_START2__524 : (lisp.values1(0));
let supplied_END1__525;
for (let TMP_743 = 2; TMP_743 < arguments.length; TMP_743 += 2) {
if(arguments[TMP_743] === G_259){
supplied_END1__525=arguments[TMP_743+1];
break;
}
}
L_END1__525=supplied_END1__525 !== undefined ? supplied_END1__525 : (lisp.values1(lisp.S_nil));
let supplied_END2__526;
for (let TMP_745 = 2; TMP_745 < arguments.length; TMP_745 += 2) {
if(arguments[TMP_745] === G_744){
supplied_END2__526=arguments[TMP_745+1];
break;
}
}
L_END2__526=supplied_END2__526 !== undefined ? supplied_END2__526 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_746 = 2; TMP_746 < arguments.length; TMP_746 += 2) {
if(arguments[TMP_746]!==G_744 && arguments[TMP_746]!==G_259 && arguments[TMP_746]!==G_741 && arguments[TMP_746]!==G_258 && arguments[TMP_746]!==G_378 && arguments[TMP_746]!==G_583 && arguments[TMP_746]!==G_581 && arguments[TMP_746]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_746].name); }
}
if(lisp.values1(L_END1__525) !== lisp.S_nil){
}else{
TMP_747=G_20.func(L_SEQUENCE_1__517);
L_END1__525=lisp.values1(TMP_747);
}
if(lisp.values1(L_END2__526) !== lisp.S_nil){
}else{
TMP_748=G_20.func(L_SEQUENCE_2__518);
L_END2__526=lisp.values1(TMP_748);
}
{
TMP_749=lisp.callFunctionWithCallStack(G_27,L_END1__525,L_START1__523);
L_SPAN__528=lisp.values1(TMP_749);
TMP_750=lisp.callFunctionWithCallStack(G_27,L_END2__526,L_SPAN__528);
L_STOP__529=lisp.values1(TMP_750);
L_LAST_MATCH_INDEX__530=lisp.values1(lisp.S_nil);
BLOCK_NIL__531: for(;;){{
L_I__532=lisp.values1(L_START2__524);
for(;;){
TMP_751=lisp.callFunctionWithCallStack(G_248,L_I__532,L_STOP__529);
if(lisp.values1(TMP_751) !== lisp.S_nil){
BLOCK_RESULT_NIL__531=lisp.values1(L_LAST_MATCH_INDEX__530);
break BLOCK_NIL__531;
}else{
TMP_752=lisp.callFunctionWithCallStack(G_285,L_I__532,L_SPAN__528);
TMP_753=G_754.func(L_SEQUENCE_1__517,L_SEQUENCE_2__518,G_581,L_TEST__520,G_583,L_TEST_NOT__521,G_378,L_KEY__522,G_258,L_START1__523,G_259,L_END1__525,G_741,L_I__532,G_744,TMP_752);
if(lisp.values1(TMP_753) !== lisp.S_nil){
}else{
if(lisp.values1(L_FROM_END__519) !== lisp.S_nil){
L_LAST_MATCH_INDEX__530=lisp.values1(L_I__532);
}else{
BLOCK_RESULT_NIL__531=lisp.values1(L_I__532);
break BLOCK_NIL__531;
}
}
{
TMP_755=lisp.callFunctionWithCallStack(G_45,L_I__532);
L_G342__533=lisp.values1(TMP_755);
L_I__532=lisp.values1(L_G342__533);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__531=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__531;
});
CL_COMMON_LISP_SEARCH=lisp.values1(F_SEARCH_734);
let F_MISMATCH_756;
F_MISMATCH_756=(function(){
if(arguments.length < 2 || 18 < arguments.length) {
lisp.argumentsError(G_754, arguments.length);
}
let L_G357__557;
let TMP_813;
let L_G356__556;
let TMP_812;
let TMP_811;
let TMP_810;
let TMP_809;
let TMP_808;
let TMP_807;
let TMP_806;
let TMP_805;
let TMP_804;
let TMP_803;
let TMP_802;
let TMP_801;
let TMP_800;
let TMP_799;
let TMP_798;
let L_G354__554;
let TMP_797;
let TMP_796;
let TMP_795;
let TMP_794;
let TMP_793;
let TMP_792;
let L_G353__553;
let TMP_791;
let TMP_790;
let TMP_789;
let TMP_788;
let TMP_787;
let TMP_786;
let TMP_785;
let TMP_784;
let TMP_783;
let TMP_782;
let TMP_781;
let L_G350__552;
let TMP_780;
let TMP_779;
let L_G349__551;
let TMP_778;
let TMP_777;
let L_G348__550;
let TMP_776;
let TMP_775;
let L_G347__549;
let TMP_774;
let TMP_773;
let L_J__548;
let TMP_772;
let TMP_771;
let L_I__547;
let TMP_770;
let TMP_769;
let BLOCK_RESULT_NIL__546;
let L_STEP__545;
let TMP_768;
let TMP_767;
let TMP_766;
let L_END2__543;
let L_END1__542;
let L_START2__541;
let L_START1__540;
let L_KEY__539;
let L_TEST_NOT__538;
let L_TEST__537;
let L_FROM_END__536;
let L_SEQUENCE_2__535;
let L_SEQUENCE_1__534;
L_SEQUENCE_1__534=arguments[0];
L_SEQUENCE_2__535=arguments[1];
let supplied_FROM_END__536;
for (let TMP_757 = 2; TMP_757 < arguments.length; TMP_757 += 2) {
if(arguments[TMP_757] === G_380){
supplied_FROM_END__536=arguments[TMP_757+1];
break;
}
}
L_FROM_END__536=supplied_FROM_END__536 !== undefined ? supplied_FROM_END__536 : (lisp.values1(lisp.S_nil));
let supplied_TEST__537;
for (let TMP_758 = 2; TMP_758 < arguments.length; TMP_758 += 2) {
if(arguments[TMP_758] === G_581){
supplied_TEST__537=arguments[TMP_758+1];
break;
}
}
L_TEST__537=supplied_TEST__537 !== undefined ? supplied_TEST__537 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__538;
for (let TMP_759 = 2; TMP_759 < arguments.length; TMP_759 += 2) {
if(arguments[TMP_759] === G_583){
supplied_TEST_NOT__538=arguments[TMP_759+1];
break;
}
}
L_TEST_NOT__538=supplied_TEST_NOT__538 !== undefined ? supplied_TEST_NOT__538 : (lisp.values1(lisp.S_nil));
let supplied_KEY__539;
for (let TMP_760 = 2; TMP_760 < arguments.length; TMP_760 += 2) {
if(arguments[TMP_760] === G_378){
supplied_KEY__539=arguments[TMP_760+1];
break;
}
}
L_KEY__539=supplied_KEY__539 !== undefined ? supplied_KEY__539 : (lisp.values1(lisp.S_nil));
let supplied_START1__540;
for (let TMP_761 = 2; TMP_761 < arguments.length; TMP_761 += 2) {
if(arguments[TMP_761] === G_258){
supplied_START1__540=arguments[TMP_761+1];
break;
}
}
L_START1__540=supplied_START1__540 !== undefined ? supplied_START1__540 : (lisp.values1(0));
let supplied_START2__541;
for (let TMP_762 = 2; TMP_762 < arguments.length; TMP_762 += 2) {
if(arguments[TMP_762] === G_741){
supplied_START2__541=arguments[TMP_762+1];
break;
}
}
L_START2__541=supplied_START2__541 !== undefined ? supplied_START2__541 : (lisp.values1(0));
let supplied_END1__542;
for (let TMP_763 = 2; TMP_763 < arguments.length; TMP_763 += 2) {
if(arguments[TMP_763] === G_259){
supplied_END1__542=arguments[TMP_763+1];
break;
}
}
L_END1__542=supplied_END1__542 !== undefined ? supplied_END1__542 : (lisp.values1(lisp.S_nil));
let supplied_END2__543;
for (let TMP_764 = 2; TMP_764 < arguments.length; TMP_764 += 2) {
if(arguments[TMP_764] === G_744){
supplied_END2__543=arguments[TMP_764+1];
break;
}
}
L_END2__543=supplied_END2__543 !== undefined ? supplied_END2__543 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_765 = 2; TMP_765 < arguments.length; TMP_765 += 2) {
if(arguments[TMP_765]!==G_744 && arguments[TMP_765]!==G_259 && arguments[TMP_765]!==G_741 && arguments[TMP_765]!==G_258 && arguments[TMP_765]!==G_378 && arguments[TMP_765]!==G_583 && arguments[TMP_765]!==G_581 && arguments[TMP_765]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_765].name); }
}
if(lisp.values1(L_END1__542) !== lisp.S_nil){
}else{
TMP_766=G_20.func(L_SEQUENCE_1__534);
L_END1__542=lisp.values1(TMP_766);
}
if(lisp.values1(L_END2__543) !== lisp.S_nil){
}else{
TMP_767=G_20.func(L_SEQUENCE_2__535);
L_END2__543=lisp.values1(TMP_767);
}
{
if(lisp.values1(L_FROM_END__536) !== lisp.S_nil){
TMP_768=lisp.values1(-1);
}else{
TMP_768=lisp.values1(1);
}
L_STEP__545=lisp.values1(TMP_768);
BLOCK_NIL__546: for(;;){{
if(lisp.values1(L_FROM_END__536) !== lisp.S_nil){
TMP_770=lisp.callFunctionWithCallStack(G_38,L_END1__542);
TMP_769=lisp.values1(TMP_770);
}else{
TMP_769=lisp.values1(L_START1__540);
}
L_I__547=lisp.values1(TMP_769);
if(lisp.values1(L_FROM_END__536) !== lisp.S_nil){
TMP_772=lisp.callFunctionWithCallStack(G_38,L_END2__543);
TMP_771=lisp.values1(TMP_772);
}else{
TMP_771=lisp.values1(L_START2__541);
}
L_J__548=lisp.values1(TMP_771);
for(;;){
if(lisp.values1(L_FROM_END__536) !== lisp.S_nil){
{
TMP_774=lisp.callFunctionWithCallStack(G_5,L_I__547,L_START1__540);
L_G347__549=lisp.values1(TMP_774);
if(lisp.values1(L_G347__549) !== lisp.S_nil){
TMP_775=lisp.values1(L_G347__549);
}else{
{
TMP_776=lisp.callFunctionWithCallStack(G_5,L_J__548,L_START2__541);
L_G348__550=lisp.values1(TMP_776);
if(lisp.values1(L_G348__550) !== lisp.S_nil){
TMP_777=lisp.values1(L_G348__550);
}else{
TMP_777=lisp.values1(lisp.S_nil);
}
}
TMP_775=lisp.values1(lisp.values1(TMP_777));
}
}
TMP_773=lisp.values1(lisp.values1(TMP_775));
}else{
{
TMP_778=lisp.callFunctionWithCallStack(G_90,L_I__547,L_END1__542);
L_G349__551=lisp.values1(TMP_778);
if(lisp.values1(L_G349__551) !== lisp.S_nil){
TMP_779=lisp.values1(L_G349__551);
}else{
{
TMP_780=lisp.callFunctionWithCallStack(G_90,L_J__548,L_END2__543);
L_G350__552=lisp.values1(TMP_780);
if(lisp.values1(L_G350__552) !== lisp.S_nil){
TMP_781=lisp.values1(L_G350__552);
}else{
TMP_781=lisp.values1(lisp.S_nil);
}
}
TMP_779=lisp.values1(lisp.values1(TMP_781));
}
}
TMP_773=lisp.values1(lisp.values1(TMP_779));
}
if(lisp.values1(TMP_773) !== lisp.S_nil){
if(lisp.values1(L_FROM_END__536) !== lisp.S_nil){
TMP_783=lisp.callFunctionWithCallStack(G_5,L_I__547,L_START1__540);
if(lisp.values1(TMP_783) !== lisp.S_nil){
TMP_785=lisp.callFunctionWithCallStack(G_5,L_J__548,L_START2__541);
TMP_784=lisp.values1(TMP_785);
}else{
TMP_784=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_784) !== lisp.S_nil){
TMP_786=lisp.values1(lisp.S_nil);
}else{
TMP_787=lisp.callFunctionWithCallStack(G_45,L_I__547);
TMP_786=TMP_787;
}
TMP_782=TMP_786;
}else{
TMP_788=lisp.callFunctionWithCallStack(G_90,L_I__547,L_END1__542);
if(lisp.values1(TMP_788) !== lisp.S_nil){
TMP_790=lisp.callFunctionWithCallStack(G_90,L_J__548,L_END2__543);
TMP_789=lisp.values1(TMP_790);
}else{
TMP_789=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_789) !== lisp.S_nil){
TMP_791=lisp.values1(lisp.S_nil);
}else{
TMP_791=lisp.values1(L_I__547);
}
TMP_782=TMP_791;
}
BLOCK_RESULT_NIL__546=TMP_782;
break BLOCK_NIL__546;
}else{
{
L_G353__553=lisp.values1(L_TEST__537);
if(lisp.values1(L_G353__553) !== lisp.S_nil){
TMP_793=G_93.func(L_SEQUENCE_1__534,L_I__547);
TMP_794=lisp.callFunctionWithCallStack(G_351,L_KEY__539,TMP_793);
TMP_795=G_93.func(L_SEQUENCE_2__535,L_J__548);
TMP_796=lisp.callFunctionWithCallStack(G_351,L_KEY__539,TMP_795);
TMP_797=lisp.CL_funcall(lisp.values1(L_TEST__537),TMP_794,TMP_796);
TMP_792=lisp.values1(TMP_797);
}else{
{
L_G354__554=lisp.values1(L_TEST_NOT__538);
if(lisp.values1(L_G354__554) !== lisp.S_nil){
TMP_799=G_93.func(L_SEQUENCE_1__534,L_I__547);
TMP_800=lisp.callFunctionWithCallStack(G_351,L_KEY__539,TMP_799);
TMP_801=G_93.func(L_SEQUENCE_2__535,L_J__548);
TMP_802=lisp.callFunctionWithCallStack(G_351,L_KEY__539,TMP_801);
TMP_803=lisp.CL_funcall(lisp.values1(L_TEST_NOT__538),TMP_800,TMP_802);
TMP_804=lisp.callFunctionWithCallStack(G_245,TMP_803);
TMP_798=lisp.values1(TMP_804);
}else{
TMP_805=G_93.func(L_SEQUENCE_1__534,L_I__547);
TMP_806=lisp.callFunctionWithCallStack(G_351,L_KEY__539,TMP_805);
TMP_807=G_93.func(L_SEQUENCE_2__535,L_J__548);
TMP_808=lisp.callFunctionWithCallStack(G_351,L_KEY__539,TMP_807);
TMP_809=lisp.callFunctionWithCallStack(G_184,TMP_806,TMP_808);
TMP_798=lisp.values1(TMP_809);
}
}
TMP_792=lisp.values1(lisp.values1(TMP_798));
}
}
if(lisp.values1(lisp.values1(TMP_792)) !== lisp.S_nil){
}else{
if(lisp.values1(L_FROM_END__536) !== lisp.S_nil){
TMP_811=lisp.callFunctionWithCallStack(G_45,L_I__547);
TMP_810=TMP_811;
}else{
TMP_810=lisp.values1(L_I__547);
}
BLOCK_RESULT_NIL__546=TMP_810;
break BLOCK_NIL__546;
}
{
TMP_812=lisp.callFunctionWithCallStack(G_285,L_I__547,L_STEP__545);
L_G356__556=lisp.values1(TMP_812);
TMP_813=lisp.callFunctionWithCallStack(G_285,L_J__548,L_STEP__545);
L_G357__557=lisp.values1(TMP_813);
L_I__547=lisp.values1(L_G356__556);
L_J__548=lisp.values1(L_G357__557);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__546=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__546;
});
CL_COMMON_LISP_MISMATCH=lisp.values1(F_MISMATCH_756);
let F_REPLACE_814;
F_REPLACE_814=(function(){
if(arguments.length < 2 || 10 < arguments.length) {
lisp.argumentsError(G_260, arguments.length);
}
let L_G368__575;
let TMP_832;
let L_G_STORE367__574;
let TMP_831;
let TMP_830;
let L_G366__573;
let TMP_829;
let L_G365__572;
let TMP_828;
let L_I__571;
let BLOCK_RESULT_NIL__570;
let L_G358__569;
let TMP_827;
let L_WIDTH2__568;
let TMP_826;
let L_WIDTH1__567;
let TMP_825;
let TMP_824;
let TMP_823;
let TMP_822;
let L_LENGTH2__566;
let TMP_821;
let L_LENGTH1__565;
let TMP_820;
let L_END2__563;
let L_START2__562;
let L_END1__561;
let L_START1__560;
let L_SOURCE_SEQUENCE__559;
let L_TARGET_SEQUENCE__558;
L_TARGET_SEQUENCE__558=arguments[0];
L_SOURCE_SEQUENCE__559=arguments[1];
let supplied_START1__560;
for (let TMP_815 = 2; TMP_815 < arguments.length; TMP_815 += 2) {
if(arguments[TMP_815] === G_258){
supplied_START1__560=arguments[TMP_815+1];
break;
}
}
L_START1__560=supplied_START1__560 !== undefined ? supplied_START1__560 : (lisp.values1(0));
let supplied_END1__561;
for (let TMP_816 = 2; TMP_816 < arguments.length; TMP_816 += 2) {
if(arguments[TMP_816] === G_259){
supplied_END1__561=arguments[TMP_816+1];
break;
}
}
L_END1__561=supplied_END1__561 !== undefined ? supplied_END1__561 : (lisp.values1(lisp.S_nil));
let supplied_START2__562;
for (let TMP_817 = 2; TMP_817 < arguments.length; TMP_817 += 2) {
if(arguments[TMP_817] === G_741){
supplied_START2__562=arguments[TMP_817+1];
break;
}
}
L_START2__562=supplied_START2__562 !== undefined ? supplied_START2__562 : (lisp.values1(0));
let supplied_END2__563;
for (let TMP_818 = 2; TMP_818 < arguments.length; TMP_818 += 2) {
if(arguments[TMP_818] === G_744){
supplied_END2__563=arguments[TMP_818+1];
break;
}
}
L_END2__563=supplied_END2__563 !== undefined ? supplied_END2__563 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_819 = 2; TMP_819 < arguments.length; TMP_819 += 2) {
if(arguments[TMP_819]!==G_744 && arguments[TMP_819]!==G_741 && arguments[TMP_819]!==G_259 && arguments[TMP_819]!==G_258) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_819].name); }
}
{
TMP_820=G_20.func(L_TARGET_SEQUENCE__558);
L_LENGTH1__565=lisp.values1(TMP_820);
TMP_821=G_20.func(L_SOURCE_SEQUENCE__559);
L_LENGTH2__566=lisp.values1(TMP_821);
G_3.func(L_START1__560,L_END1__561,L_LENGTH1__565);
G_3.func(L_START2__562,L_END2__563,L_LENGTH2__566);
if(lisp.values1(L_END1__561) !== lisp.S_nil){
}else{
L_END1__561=lisp.values1(L_LENGTH1__565);
}
if(lisp.values1(L_END2__563) !== lisp.S_nil){
}else{
L_END2__563=lisp.values1(L_LENGTH2__566);
}
TMP_822=lisp.CL_eq(L_TARGET_SEQUENCE__558,L_SOURCE_SEQUENCE__559);
if(lisp.values1(TMP_822) !== lisp.S_nil){
TMP_823=G_242.func(L_SOURCE_SEQUENCE__559,L_START2__562,L_END2__563);
L_SOURCE_SEQUENCE__559=lisp.values1(TMP_823);
L_START2__562=lisp.values1(0);
TMP_824=G_20.func(L_SOURCE_SEQUENCE__559);
L_LENGTH2__566=lisp.values1(TMP_824);
L_END2__563=lisp.values1(L_LENGTH2__566);
}else{
}
{
TMP_825=lisp.callFunctionWithCallStack(G_27,L_END1__561,L_START1__560);
L_WIDTH1__567=lisp.values1(TMP_825);
TMP_826=lisp.callFunctionWithCallStack(G_27,L_END2__563,L_START2__562);
L_WIDTH2__568=lisp.values1(TMP_826);
{
TMP_827=lisp.callFunctionWithCallStack(G_82,L_WIDTH1__567,L_WIDTH2__568);
L_G358__569=lisp.values1(TMP_827);
BLOCK_NIL__570: for(;;){{
L_I__571=lisp.values1(0);
for(;;){
TMP_828=lisp.callFunctionWithCallStack(G_90,L_I__571,L_G358__569);
if(lisp.values1(TMP_828) !== lisp.S_nil){
BLOCK_RESULT_NIL__570=lisp.values1(lisp.S_nil);
break BLOCK_NIL__570;
}else{
{
L_G365__572=lisp.values1(L_TARGET_SEQUENCE__558);
TMP_829=lisp.callFunctionWithCallStack(G_285,L_START1__560,L_I__571);
L_G366__573=lisp.values1(TMP_829);
TMP_830=lisp.callFunctionWithCallStack(G_285,L_START2__562,L_I__571);
TMP_831=G_93.func(L_SOURCE_SEQUENCE__559,TMP_830);
L_G_STORE367__574=lisp.values1(TMP_831);
lisp.callFunctionWithCallStack(G_122,L_G_STORE367__574,L_G365__572,L_G366__573);
}
{
TMP_832=lisp.callFunctionWithCallStack(G_285,L_I__571,1);
L_G368__575=lisp.values1(TMP_832);
L_I__571=lisp.values1(L_G368__575);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__570=lisp.values1(lisp.S_nil);
break;
}
}
}
}
return lisp.values1(L_TARGET_SEQUENCE__558);
});
CL_COMMON_LISP_REPLACE=lisp.values1(F_REPLACE_814);
let F_SUBSTITUTE_833;
F_SUBSTITUTE_833=(function(){
if(arguments.length < 3 || 17 < arguments.length) {
lisp.argumentsError(G_834, arguments.length);
}
let TMP_851;
let TMP_844;
let L_KEY__585;
let L_COUNT__584;
let L_END__583;
let L_START__582;
let L_TEST_NOT__581;
let L_TEST__580;
let L_FROM_END__579;
let L_SEQUENCE__578;
let L_OLD__577;
let L_NEW__576;
L_NEW__576=arguments[0];
L_OLD__577=arguments[1];
L_SEQUENCE__578=arguments[2];
let supplied_FROM_END__579;
for (let TMP_835 = 3; TMP_835 < arguments.length; TMP_835 += 2) {
if(arguments[TMP_835] === G_380){
supplied_FROM_END__579=arguments[TMP_835+1];
break;
}
}
L_FROM_END__579=supplied_FROM_END__579 !== undefined ? supplied_FROM_END__579 : (lisp.values1(lisp.S_nil));
let supplied_TEST__580;
for (let TMP_836 = 3; TMP_836 < arguments.length; TMP_836 += 2) {
if(arguments[TMP_836] === G_581){
supplied_TEST__580=arguments[TMP_836+1];
break;
}
}
L_TEST__580=supplied_TEST__580 !== undefined ? supplied_TEST__580 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__581;
for (let TMP_837 = 3; TMP_837 < arguments.length; TMP_837 += 2) {
if(arguments[TMP_837] === G_583){
supplied_TEST_NOT__581=arguments[TMP_837+1];
break;
}
}
L_TEST_NOT__581=supplied_TEST_NOT__581 !== undefined ? supplied_TEST_NOT__581 : (lisp.values1(lisp.S_nil));
let supplied_START__582;
for (let TMP_838 = 3; TMP_838 < arguments.length; TMP_838 += 2) {
if(arguments[TMP_838] === G_151){
supplied_START__582=arguments[TMP_838+1];
break;
}
}
L_START__582=supplied_START__582 !== undefined ? supplied_START__582 : (lisp.values1(0));
let supplied_END__583;
for (let TMP_839 = 3; TMP_839 < arguments.length; TMP_839 += 2) {
if(arguments[TMP_839] === G_153){
supplied_END__583=arguments[TMP_839+1];
break;
}
}
L_END__583=supplied_END__583 !== undefined ? supplied_END__583 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__584;
for (let TMP_841 = 3; TMP_841 < arguments.length; TMP_841 += 2) {
if(arguments[TMP_841] === G_840){
supplied_COUNT__584=arguments[TMP_841+1];
break;
}
}
L_COUNT__584=supplied_COUNT__584 !== undefined ? supplied_COUNT__584 : (lisp.values1(lisp.S_nil));
let supplied_KEY__585;
for (let TMP_842 = 3; TMP_842 < arguments.length; TMP_842 += 2) {
if(arguments[TMP_842] === G_378){
supplied_KEY__585=arguments[TMP_842+1];
break;
}
}
L_KEY__585=supplied_KEY__585 !== undefined ? supplied_KEY__585 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_843 = 3; TMP_843 < arguments.length; TMP_843 += 2) {
if(arguments[TMP_843]!==G_378 && arguments[TMP_843]!==G_840 && arguments[TMP_843]!==G_153 && arguments[TMP_843]!==G_151 && arguments[TMP_843]!==G_583 && arguments[TMP_843]!==G_581 && arguments[TMP_843]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_843].name); }
}
TMP_844=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_850;
let TMP_849;
let TMP_848;
let TMP_847;
let L_G370__589;
let TMP_846;
let TMP_845;
let L_G369__588;
let L_X__587;
L_X__587=arguments[0];
{
L_G369__588=lisp.values1(L_TEST__580);
if(lisp.values1(L_G369__588) !== lisp.S_nil){
TMP_846=lisp.CL_funcall(lisp.values1(L_TEST__580),L_OLD__577,L_X__587);
TMP_845=TMP_846;
}else{
{
L_G370__589=lisp.values1(L_TEST_NOT__581);
if(lisp.values1(L_G370__589) !== lisp.S_nil){
TMP_848=lisp.CL_funcall(lisp.values1(L_TEST_NOT__581),L_OLD__577,L_X__587);
TMP_849=lisp.callFunctionWithCallStack(G_245,TMP_848);
TMP_847=TMP_849;
}else{
TMP_850=lisp.callFunctionWithCallStack(G_184,L_OLD__577,L_X__587);
TMP_847=TMP_850;
}
}
TMP_845=TMP_847;
}
}
return TMP_845;
});
TMP_851=G_852.func(L_NEW__576,TMP_844,L_SEQUENCE__578,G_380,L_FROM_END__579,G_151,L_START__582,G_153,L_END__583,G_840,L_COUNT__584,G_378,L_KEY__585);
return TMP_851;
});
CL_COMMON_LISP_SUBSTITUTE=lisp.values1(F_SUBSTITUTE_833);
let F_SUBSTITUTE_IF_853;
F_SUBSTITUTE_IF_853=(function(){
if(arguments.length < 3 || 13 < arguments.length) {
lisp.argumentsError(G_852, arguments.length);
}
let TMP_868;
let L_I__604;
let TMP_867;
let TMP_866;
let L_G373__603;
let TMP_865;
let L_G372__602;
let TMP_864;
let L_NEW_SEQUENCE__601;
let TMP_863;
let L_LENGTH__600;
let TMP_862;
let TMP_861;
let L_KEY__598;
let L_COUNT__597;
let L_END__596;
let L_START__595;
let L_FROM_END__594;
let L_SEQUENCE__593;
let L_PREDICATE__592;
let L_NEW__591;
L_NEW__591=arguments[0];
L_PREDICATE__592=arguments[1];
L_SEQUENCE__593=arguments[2];
let supplied_FROM_END__594;
for (let TMP_854 = 3; TMP_854 < arguments.length; TMP_854 += 2) {
if(arguments[TMP_854] === G_380){
supplied_FROM_END__594=arguments[TMP_854+1];
break;
}
}
L_FROM_END__594=supplied_FROM_END__594 !== undefined ? supplied_FROM_END__594 : (lisp.values1(lisp.S_nil));
let supplied_START__595;
for (let TMP_855 = 3; TMP_855 < arguments.length; TMP_855 += 2) {
if(arguments[TMP_855] === G_151){
supplied_START__595=arguments[TMP_855+1];
break;
}
}
L_START__595=supplied_START__595 !== undefined ? supplied_START__595 : (lisp.values1(0));
let supplied_END__596;
for (let TMP_856 = 3; TMP_856 < arguments.length; TMP_856 += 2) {
if(arguments[TMP_856] === G_153){
supplied_END__596=arguments[TMP_856+1];
break;
}
}
L_END__596=supplied_END__596 !== undefined ? supplied_END__596 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__597;
for (let TMP_857 = 3; TMP_857 < arguments.length; TMP_857 += 2) {
if(arguments[TMP_857] === G_840){
supplied_COUNT__597=arguments[TMP_857+1];
break;
}
}
L_COUNT__597=supplied_COUNT__597 !== undefined ? supplied_COUNT__597 : (lisp.values1(lisp.S_nil));
let supplied_KEY__598;
for (let TMP_858 = 3; TMP_858 < arguments.length; TMP_858 += 2) {
if(arguments[TMP_858] === G_378){
supplied_KEY__598=arguments[TMP_858+1];
break;
}
}
L_KEY__598=supplied_KEY__598 !== undefined ? supplied_KEY__598 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_859 = 3; TMP_859 < arguments.length; TMP_859 += 2) {
if(arguments[TMP_859]!==G_378 && arguments[TMP_859]!==G_840 && arguments[TMP_859]!==G_153 && arguments[TMP_859]!==G_151 && arguments[TMP_859]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_859].name); }
}
try {
{
TMP_862=G_20.func(L_SEQUENCE__593);
L_LENGTH__600=lisp.values1(TMP_862);
TMP_863=G_97.func(L_SEQUENCE__593);
L_NEW_SEQUENCE__601=lisp.values1(TMP_863);
if(lisp.values1(L_FROM_END__594) !== lisp.S_nil){
{
L_G372__602=lisp.values1(L_END__596);
if(lisp.values1(L_G372__602) !== lisp.S_nil){
TMP_865=lisp.values1(L_G372__602);
}else{
{
L_G373__603=lisp.values1(L_LENGTH__600);
if(lisp.values1(L_G373__603) !== lisp.S_nil){
TMP_866=lisp.values1(L_G373__603);
}else{
TMP_866=lisp.values1(lisp.S_nil);
}
}
TMP_865=lisp.values1(lisp.values1(TMP_866));
}
}
TMP_867=lisp.callFunctionWithCallStack(G_38,lisp.values1(TMP_865));
TMP_864=lisp.values1(TMP_867);
}else{
TMP_864=lisp.values1(L_START__595);
}
L_I__604=lisp.values1(TMP_864);
TMP_868=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_878;
let L_G384__616;
let TMP_877;
let TMP_876;
let L_G383__615;
let TMP_875;
let TMP_874;
let L_G_STORE382__614;
let L_G381__613;
let L_G380__612;
let L_G378__610;
let TMP_873;
let L_G_STORE377__609;
let L_G376__608;
let L_G375__607;
let L_G374__606;
let TMP_872;
let TMP_871;
let TMP_870;
let TMP_869;
let L_X__605;
L_X__605=arguments[0];
if(lisp.values1(L_COUNT__597) !== lisp.S_nil){
TMP_870=lisp.callFunctionWithCallStack(G_513,L_COUNT__597,0);
TMP_869=lisp.values1(TMP_870);
}else{
TMP_869=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_869) !== lisp.S_nil){
throw new lisp.BlockValue(G_852,lisp.values1(L_NEW_SEQUENCE__601));}else{
}
{
TMP_871=lisp.callFunctionWithCallStack(G_351,L_KEY__598,L_X__605);
TMP_872=lisp.CL_funcall(lisp.values1(L_PREDICATE__592),TMP_871);
L_G374__606=lisp.values1(TMP_872);
if(lisp.values1(L_G374__606) !== lisp.S_nil){
{
L_G375__607=lisp.values1(L_NEW_SEQUENCE__601);
L_G376__608=lisp.values1(L_I__604);
L_G_STORE377__609=lisp.values1(L_NEW__591);
lisp.callFunctionWithCallStack(G_122,L_G_STORE377__609,L_G375__607,L_G376__608);
}
if(lisp.values1(L_COUNT__597) !== lisp.S_nil){
{
TMP_873=lisp.callFunctionWithCallStack(G_27,L_COUNT__597,1);
L_G378__610=lisp.values1(TMP_873);
L_COUNT__597=lisp.values1(L_G378__610);
}
}else{
}
}else{
{
L_G380__612=lisp.values1(L_NEW_SEQUENCE__601);
L_G381__613=lisp.values1(L_I__604);
L_G_STORE382__614=lisp.values1(L_X__605);
lisp.callFunctionWithCallStack(G_122,L_G_STORE382__614,L_G380__612,L_G381__613);
}
}
}
if(lisp.values1(L_FROM_END__594) !== lisp.S_nil){
{
TMP_875=lisp.callFunctionWithCallStack(G_27,L_I__604,1);
L_G383__615=lisp.values1(TMP_875);
L_I__604=(TMP_876=lisp.values1(L_G383__615));
}
TMP_874=lisp.values1(TMP_876);
}else{
{
TMP_877=lisp.callFunctionWithCallStack(G_285,L_I__604,1);
L_G384__616=lisp.values1(TMP_877);
L_I__604=(TMP_878=lisp.values1(L_G384__616));
}
TMP_874=lisp.values1(TMP_878);
}
return TMP_874;
});
G_15.func(TMP_868,L_SEQUENCE__593,L_FROM_END__594,L_START__595,L_END__596,lisp.S_nil);
}
TMP_861=lisp.values1(L_NEW_SEQUENCE__601)
}catch(E__860){if(E__860 instanceof lisp.BlockValue && E__860.name === G_852){TMP_861=E__860.value;}
else{throw E__860;}
}
return TMP_861;
});
CL_COMMON_LISP_SUBSTITUTE_IF=lisp.values1(F_SUBSTITUTE_IF_853);
let F_SUBSTITUTE_IF_NOT_879;
F_SUBSTITUTE_IF_NOT_879=(function(){
if(arguments.length < 3 || 13 < arguments.length) {
lisp.argumentsError(G_880, arguments.length);
}
let TMP_888;
let TMP_887;
let L_KEY__624;
let L_COUNT__623;
let L_END__622;
let L_START__621;
let L_FROM_END__620;
let L_SEQUENCE__619;
let L_PREDICATE__618;
let L_NEW__617;
L_NEW__617=arguments[0];
L_PREDICATE__618=arguments[1];
L_SEQUENCE__619=arguments[2];
let supplied_FROM_END__620;
for (let TMP_881 = 3; TMP_881 < arguments.length; TMP_881 += 2) {
if(arguments[TMP_881] === G_380){
supplied_FROM_END__620=arguments[TMP_881+1];
break;
}
}
L_FROM_END__620=supplied_FROM_END__620 !== undefined ? supplied_FROM_END__620 : (lisp.values1(lisp.S_nil));
let supplied_START__621;
for (let TMP_882 = 3; TMP_882 < arguments.length; TMP_882 += 2) {
if(arguments[TMP_882] === G_151){
supplied_START__621=arguments[TMP_882+1];
break;
}
}
L_START__621=supplied_START__621 !== undefined ? supplied_START__621 : (lisp.values1(0));
let supplied_END__622;
for (let TMP_883 = 3; TMP_883 < arguments.length; TMP_883 += 2) {
if(arguments[TMP_883] === G_153){
supplied_END__622=arguments[TMP_883+1];
break;
}
}
L_END__622=supplied_END__622 !== undefined ? supplied_END__622 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__623;
for (let TMP_884 = 3; TMP_884 < arguments.length; TMP_884 += 2) {
if(arguments[TMP_884] === G_840){
supplied_COUNT__623=arguments[TMP_884+1];
break;
}
}
L_COUNT__623=supplied_COUNT__623 !== undefined ? supplied_COUNT__623 : (lisp.values1(lisp.S_nil));
let supplied_KEY__624;
for (let TMP_885 = 3; TMP_885 < arguments.length; TMP_885 += 2) {
if(arguments[TMP_885] === G_378){
supplied_KEY__624=arguments[TMP_885+1];
break;
}
}
L_KEY__624=supplied_KEY__624 !== undefined ? supplied_KEY__624 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_886 = 3; TMP_886 < arguments.length; TMP_886 += 2) {
if(arguments[TMP_886]!==G_378 && arguments[TMP_886]!==G_840 && arguments[TMP_886]!==G_153 && arguments[TMP_886]!==G_151 && arguments[TMP_886]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_886].name); }
}
TMP_887=lisp.callFunctionWithCallStack(G_625,L_PREDICATE__618);
TMP_888=G_852.func(L_NEW__617,TMP_887,L_SEQUENCE__619,G_380,L_FROM_END__620,G_151,L_START__621,G_153,L_END__622,G_840,L_COUNT__623,G_378,L_KEY__624);
return TMP_888;
});
CL_COMMON_LISP_SUBSTITUTE_IF_NOT=lisp.values1(F_SUBSTITUTE_IF_NOT_879);
let F_NSUBSTITUTE_889;
F_NSUBSTITUTE_889=(function(){
if(arguments.length < 3 || 17 < arguments.length) {
lisp.argumentsError(G_890, arguments.length);
}
let TMP_906;
let TMP_899;
let L_KEY__635;
let L_COUNT__634;
let L_END__633;
let L_START__632;
let L_TEST_NOT__631;
let L_TEST__630;
let L_FROM_END__629;
let L_SEQUENCE__628;
let L_OLD__627;
let L_NEW__626;
L_NEW__626=arguments[0];
L_OLD__627=arguments[1];
L_SEQUENCE__628=arguments[2];
let supplied_FROM_END__629;
for (let TMP_891 = 3; TMP_891 < arguments.length; TMP_891 += 2) {
if(arguments[TMP_891] === G_380){
supplied_FROM_END__629=arguments[TMP_891+1];
break;
}
}
L_FROM_END__629=supplied_FROM_END__629 !== undefined ? supplied_FROM_END__629 : (lisp.values1(lisp.S_nil));
let supplied_TEST__630;
for (let TMP_892 = 3; TMP_892 < arguments.length; TMP_892 += 2) {
if(arguments[TMP_892] === G_581){
supplied_TEST__630=arguments[TMP_892+1];
break;
}
}
L_TEST__630=supplied_TEST__630 !== undefined ? supplied_TEST__630 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__631;
for (let TMP_893 = 3; TMP_893 < arguments.length; TMP_893 += 2) {
if(arguments[TMP_893] === G_583){
supplied_TEST_NOT__631=arguments[TMP_893+1];
break;
}
}
L_TEST_NOT__631=supplied_TEST_NOT__631 !== undefined ? supplied_TEST_NOT__631 : (lisp.values1(lisp.S_nil));
let supplied_START__632;
for (let TMP_894 = 3; TMP_894 < arguments.length; TMP_894 += 2) {
if(arguments[TMP_894] === G_151){
supplied_START__632=arguments[TMP_894+1];
break;
}
}
L_START__632=supplied_START__632 !== undefined ? supplied_START__632 : (lisp.values1(0));
let supplied_END__633;
for (let TMP_895 = 3; TMP_895 < arguments.length; TMP_895 += 2) {
if(arguments[TMP_895] === G_153){
supplied_END__633=arguments[TMP_895+1];
break;
}
}
L_END__633=supplied_END__633 !== undefined ? supplied_END__633 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__634;
for (let TMP_896 = 3; TMP_896 < arguments.length; TMP_896 += 2) {
if(arguments[TMP_896] === G_840){
supplied_COUNT__634=arguments[TMP_896+1];
break;
}
}
L_COUNT__634=supplied_COUNT__634 !== undefined ? supplied_COUNT__634 : (lisp.values1(lisp.S_nil));
let supplied_KEY__635;
for (let TMP_897 = 3; TMP_897 < arguments.length; TMP_897 += 2) {
if(arguments[TMP_897] === G_378){
supplied_KEY__635=arguments[TMP_897+1];
break;
}
}
L_KEY__635=supplied_KEY__635 !== undefined ? supplied_KEY__635 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_898 = 3; TMP_898 < arguments.length; TMP_898 += 2) {
if(arguments[TMP_898]!==G_378 && arguments[TMP_898]!==G_840 && arguments[TMP_898]!==G_153 && arguments[TMP_898]!==G_151 && arguments[TMP_898]!==G_583 && arguments[TMP_898]!==G_581 && arguments[TMP_898]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_898].name); }
}
TMP_899=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_905;
let TMP_904;
let TMP_903;
let TMP_902;
let L_G386__639;
let TMP_901;
let TMP_900;
let L_G385__638;
let L_X__637;
L_X__637=arguments[0];
{
L_G385__638=lisp.values1(L_TEST__630);
if(lisp.values1(L_G385__638) !== lisp.S_nil){
TMP_901=lisp.CL_funcall(lisp.values1(L_TEST__630),L_OLD__627,L_X__637);
TMP_900=TMP_901;
}else{
{
L_G386__639=lisp.values1(L_TEST_NOT__631);
if(lisp.values1(L_G386__639) !== lisp.S_nil){
TMP_903=lisp.CL_funcall(lisp.values1(L_TEST_NOT__631),L_OLD__627,L_X__637);
TMP_904=lisp.callFunctionWithCallStack(G_245,TMP_903);
TMP_902=TMP_904;
}else{
TMP_905=lisp.callFunctionWithCallStack(G_184,L_OLD__627,L_X__637);
TMP_902=TMP_905;
}
}
TMP_900=TMP_902;
}
}
return TMP_900;
});
TMP_906=G_907.func(L_NEW__626,TMP_899,L_SEQUENCE__628,G_380,L_FROM_END__629,G_151,L_START__632,G_153,L_END__633,G_840,L_COUNT__634,G_378,L_KEY__635);
return TMP_906;
});
CL_COMMON_LISP_NSUBSTITUTE=lisp.values1(F_NSUBSTITUTE_889);
let F_NSUBSTITUTE_IF_908;
F_NSUBSTITUTE_IF_908=(function(){
if(arguments.length < 3 || 13 < arguments.length) {
lisp.argumentsError(G_907, arguments.length);
}
let TMP_922;
let L_I__652;
let TMP_921;
let TMP_920;
let L_G389__651;
let TMP_919;
let TMP_918;
let L_G388__650;
let TMP_917;
let TMP_916;
let L_KEY__648;
let L_COUNT__647;
let L_END__646;
let L_START__645;
let L_FROM_END__644;
let L_SEQUENCE__643;
let L_PREDICATE__642;
let L_NEW__641;
L_NEW__641=arguments[0];
L_PREDICATE__642=arguments[1];
L_SEQUENCE__643=arguments[2];
let supplied_FROM_END__644;
for (let TMP_909 = 3; TMP_909 < arguments.length; TMP_909 += 2) {
if(arguments[TMP_909] === G_380){
supplied_FROM_END__644=arguments[TMP_909+1];
break;
}
}
L_FROM_END__644=supplied_FROM_END__644 !== undefined ? supplied_FROM_END__644 : (lisp.values1(lisp.S_nil));
let supplied_START__645;
for (let TMP_910 = 3; TMP_910 < arguments.length; TMP_910 += 2) {
if(arguments[TMP_910] === G_151){
supplied_START__645=arguments[TMP_910+1];
break;
}
}
L_START__645=supplied_START__645 !== undefined ? supplied_START__645 : (lisp.values1(0));
let supplied_END__646;
for (let TMP_911 = 3; TMP_911 < arguments.length; TMP_911 += 2) {
if(arguments[TMP_911] === G_153){
supplied_END__646=arguments[TMP_911+1];
break;
}
}
L_END__646=supplied_END__646 !== undefined ? supplied_END__646 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__647;
for (let TMP_912 = 3; TMP_912 < arguments.length; TMP_912 += 2) {
if(arguments[TMP_912] === G_840){
supplied_COUNT__647=arguments[TMP_912+1];
break;
}
}
L_COUNT__647=supplied_COUNT__647 !== undefined ? supplied_COUNT__647 : (lisp.values1(lisp.S_nil));
let supplied_KEY__648;
for (let TMP_913 = 3; TMP_913 < arguments.length; TMP_913 += 2) {
if(arguments[TMP_913] === G_378){
supplied_KEY__648=arguments[TMP_913+1];
break;
}
}
L_KEY__648=supplied_KEY__648 !== undefined ? supplied_KEY__648 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_914 = 3; TMP_914 < arguments.length; TMP_914 += 2) {
if(arguments[TMP_914]!==G_378 && arguments[TMP_914]!==G_840 && arguments[TMP_914]!==G_153 && arguments[TMP_914]!==G_151 && arguments[TMP_914]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_914].name); }
}
try {
{
if(lisp.values1(L_FROM_END__644) !== lisp.S_nil){
{
L_G388__650=lisp.values1(L_END__646);
if(lisp.values1(L_G388__650) !== lisp.S_nil){
TMP_918=lisp.values1(L_G388__650);
}else{
{
TMP_919=G_20.func(L_SEQUENCE__643);
L_G389__651=lisp.values1(TMP_919);
if(lisp.values1(L_G389__651) !== lisp.S_nil){
TMP_920=lisp.values1(L_G389__651);
}else{
TMP_920=lisp.values1(lisp.S_nil);
}
}
TMP_918=lisp.values1(lisp.values1(TMP_920));
}
}
TMP_921=lisp.callFunctionWithCallStack(G_38,lisp.values1(TMP_918));
TMP_917=lisp.values1(TMP_921);
}else{
TMP_917=lisp.values1(L_START__645);
}
L_I__652=lisp.values1(TMP_917);
TMP_922=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_932;
let L_G400__664;
let TMP_931;
let TMP_930;
let L_G399__663;
let TMP_929;
let TMP_928;
let L_G_STORE398__662;
let L_G397__661;
let L_G396__660;
let L_G394__658;
let TMP_927;
let L_G_STORE393__657;
let L_G392__656;
let L_G391__655;
let L_G390__654;
let TMP_926;
let TMP_925;
let TMP_924;
let TMP_923;
let L_X__653;
L_X__653=arguments[0];
if(lisp.values1(L_COUNT__647) !== lisp.S_nil){
TMP_924=lisp.callFunctionWithCallStack(G_513,L_COUNT__647,0);
TMP_923=lisp.values1(TMP_924);
}else{
TMP_923=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_923) !== lisp.S_nil){
throw new lisp.BlockValue(G_907,lisp.values1(L_SEQUENCE__643));}else{
}
{
TMP_925=lisp.callFunctionWithCallStack(G_351,L_KEY__648,L_X__653);
TMP_926=lisp.CL_funcall(lisp.values1(L_PREDICATE__642),TMP_925);
L_G390__654=lisp.values1(TMP_926);
if(lisp.values1(L_G390__654) !== lisp.S_nil){
{
L_G391__655=lisp.values1(L_SEQUENCE__643);
L_G392__656=lisp.values1(L_I__652);
L_G_STORE393__657=lisp.values1(L_NEW__641);
lisp.callFunctionWithCallStack(G_122,L_G_STORE393__657,L_G391__655,L_G392__656);
}
if(lisp.values1(L_COUNT__647) !== lisp.S_nil){
{
TMP_927=lisp.callFunctionWithCallStack(G_27,L_COUNT__647,1);
L_G394__658=lisp.values1(TMP_927);
L_COUNT__647=lisp.values1(L_G394__658);
}
}else{
}
}else{
{
L_G396__660=lisp.values1(L_SEQUENCE__643);
L_G397__661=lisp.values1(L_I__652);
L_G_STORE398__662=lisp.values1(L_X__653);
lisp.callFunctionWithCallStack(G_122,L_G_STORE398__662,L_G396__660,L_G397__661);
}
}
}
if(lisp.values1(L_FROM_END__644) !== lisp.S_nil){
{
TMP_929=lisp.callFunctionWithCallStack(G_27,L_I__652,1);
L_G399__663=lisp.values1(TMP_929);
L_I__652=(TMP_930=lisp.values1(L_G399__663));
}
TMP_928=lisp.values1(TMP_930);
}else{
{
TMP_931=lisp.callFunctionWithCallStack(G_285,L_I__652,1);
L_G400__664=lisp.values1(TMP_931);
L_I__652=(TMP_932=lisp.values1(L_G400__664));
}
TMP_928=lisp.values1(TMP_932);
}
return TMP_928;
});
G_15.func(TMP_922,L_SEQUENCE__643,L_FROM_END__644,L_START__645,L_END__646,lisp.S_nil);
}
TMP_916=lisp.values1(L_SEQUENCE__643)
}catch(E__915){if(E__915 instanceof lisp.BlockValue && E__915.name === G_907){TMP_916=E__915.value;}
else{throw E__915;}
}
return TMP_916;
});
CL_COMMON_LISP_NSUBSTITUTE_IF=lisp.values1(F_NSUBSTITUTE_IF_908);
let F_NSUBSTITUTE_IF_NOT_933;
F_NSUBSTITUTE_IF_NOT_933=(function(){
if(arguments.length < 3 || 13 < arguments.length) {
lisp.argumentsError(G_934, arguments.length);
}
let TMP_942;
let TMP_941;
let L_KEY__672;
let L_COUNT__671;
let L_END__670;
let L_START__669;
let L_FROM_END__668;
let L_SEQUENCE__667;
let L_PREDICATE__666;
let L_NEW__665;
L_NEW__665=arguments[0];
L_PREDICATE__666=arguments[1];
L_SEQUENCE__667=arguments[2];
let supplied_FROM_END__668;
for (let TMP_935 = 3; TMP_935 < arguments.length; TMP_935 += 2) {
if(arguments[TMP_935] === G_380){
supplied_FROM_END__668=arguments[TMP_935+1];
break;
}
}
L_FROM_END__668=supplied_FROM_END__668 !== undefined ? supplied_FROM_END__668 : (lisp.values1(lisp.S_nil));
let supplied_START__669;
for (let TMP_936 = 3; TMP_936 < arguments.length; TMP_936 += 2) {
if(arguments[TMP_936] === G_151){
supplied_START__669=arguments[TMP_936+1];
break;
}
}
L_START__669=supplied_START__669 !== undefined ? supplied_START__669 : (lisp.values1(0));
let supplied_END__670;
for (let TMP_937 = 3; TMP_937 < arguments.length; TMP_937 += 2) {
if(arguments[TMP_937] === G_153){
supplied_END__670=arguments[TMP_937+1];
break;
}
}
L_END__670=supplied_END__670 !== undefined ? supplied_END__670 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__671;
for (let TMP_938 = 3; TMP_938 < arguments.length; TMP_938 += 2) {
if(arguments[TMP_938] === G_840){
supplied_COUNT__671=arguments[TMP_938+1];
break;
}
}
L_COUNT__671=supplied_COUNT__671 !== undefined ? supplied_COUNT__671 : (lisp.values1(lisp.S_nil));
let supplied_KEY__672;
for (let TMP_939 = 3; TMP_939 < arguments.length; TMP_939 += 2) {
if(arguments[TMP_939] === G_378){
supplied_KEY__672=arguments[TMP_939+1];
break;
}
}
L_KEY__672=supplied_KEY__672 !== undefined ? supplied_KEY__672 : (lisp.values1(lisp.S_nil));
if((arguments.length-3)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_940 = 3; TMP_940 < arguments.length; TMP_940 += 2) {
if(arguments[TMP_940]!==G_378 && arguments[TMP_940]!==G_840 && arguments[TMP_940]!==G_153 && arguments[TMP_940]!==G_151 && arguments[TMP_940]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_940].name); }
}
TMP_941=lisp.callFunctionWithCallStack(G_625,L_PREDICATE__666);
TMP_942=G_907.func(L_NEW__665,TMP_941,L_SEQUENCE__667,G_380,L_FROM_END__668,G_151,L_START__669,G_153,L_END__670,G_840,L_COUNT__671,G_378,L_KEY__672);
return TMP_942;
});
CL_COMMON_LISP_NSUBSTITUTE_IF_NOT=lisp.values1(F_NSUBSTITUTE_IF_NOT_933);
let F_CONCATENATE_943;
F_CONCATENATE_943=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_944, arguments.length);
}
let L_G418__689;
let TMP_956;
let L_G417__688;
let TMP_955;
let L_G_STORE416__687;
let TMP_954;
let L_G415__686;
let L_G414__685;
let TMP_953;
let L_LEN__684;
let TMP_952;
let L_I__683;
let BLOCK_RESULT_NIL__682;
let TMP_951;
let L_SEQ__681;
let TMP_950;
let TMP_949;
let L_G401__680;
let L_INDEX__678;
let L_NEW_SEQUENCE__677;
let TMP_948;
let TMP_947;
let TMP_946;
let TMP_945;
let L_SEQUENCES__675;
let L_RESULT_TYPE__674;
L_RESULT_TYPE__674=arguments[0];
L_SEQUENCES__675=lisp.jsArrayToList(arguments, 1);
{
TMP_945=lisp.CL_symbolFunction(G_285);
TMP_946=lisp.CL_symbolFunction(G_20);
TMP_947=G_377.func(TMP_945,L_SEQUENCES__675,G_378,TMP_946);
TMP_948=G_171.func(L_RESULT_TYPE__674,TMP_947);
L_NEW_SEQUENCE__677=lisp.values1(TMP_948);
L_INDEX__678=lisp.values1(0);
{
L_G401__680=lisp.values1(L_SEQUENCES__675);
for(;;){
TMP_949=lisp.callFunctionWithCallStack(G_331,L_G401__680);
if(lisp.values1(TMP_949) !== lisp.S_nil){
}else{
{
TMP_950=lisp.callFunctionWithCallStack(G_33,L_G401__680);
L_SEQ__681=lisp.values1(TMP_950);
TMP_951=lisp.callFunctionWithCallStack(G_36,L_G401__680);
L_G401__680=lisp.values1(TMP_951);
BLOCK_NIL__682: for(;;){{
L_I__683=lisp.values1(0);
TMP_952=G_20.func(L_SEQ__681);
L_LEN__684=lisp.values1(TMP_952);
for(;;){
TMP_953=lisp.callFunctionWithCallStack(G_90,L_I__683,L_LEN__684);
if(lisp.values1(TMP_953) !== lisp.S_nil){
BLOCK_RESULT_NIL__682=lisp.values1(lisp.S_nil);
break BLOCK_NIL__682;
}else{
{
L_G414__685=lisp.values1(L_NEW_SEQUENCE__677);
L_G415__686=lisp.values1(L_INDEX__678);
TMP_954=G_93.func(L_SEQ__681,L_I__683);
L_G_STORE416__687=lisp.values1(TMP_954);
lisp.callFunctionWithCallStack(G_122,L_G_STORE416__687,L_G414__685,L_G415__686);
}
{
TMP_955=lisp.callFunctionWithCallStack(G_285,L_INDEX__678,1);
L_G417__688=lisp.values1(TMP_955);
L_INDEX__678=lisp.values1(L_G417__688);
}
{
TMP_956=lisp.callFunctionWithCallStack(G_45,L_I__683);
L_G418__689=lisp.values1(TMP_956);
L_I__683=lisp.values1(L_G418__689);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__682=lisp.values1(lisp.S_nil);
break;
}
}
continue;
}
break;
}
}
}
return lisp.values1(L_NEW_SEQUENCE__677);
});
CL_COMMON_LISP_CONCATENATE=lisp.values1(F_CONCATENATE_943);
let F_SEQUENCE_TO_LIST_957;
F_SEQUENCE_TO_LIST_957=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_958, arguments.length);
}
let TMP_966;
let TMP_965;
let TMP_964;
let TMP_962;
let L_G420__694;
let TMP_961;
let TMP_960;
let L_G419__693;
let TMP_959;
let L_SEQUENCE__691;
L_SEQUENCE__691=arguments[0];
{
TMP_959=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__691);
L_G419__693=lisp.values1(TMP_959);
if(lisp.values1(L_G419__693) !== lisp.S_nil){
TMP_960=lisp.values1(L_SEQUENCE__691);
}else{
{
TMP_961=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__691);
L_G420__694=lisp.values1(TMP_961);
if(lisp.values1(L_G420__694) !== lisp.S_nil){
TMP_964=lisp.CL_symbolFunction(G_963);
TMP_965=G_272.func(G_142,TMP_964,L_SEQUENCE__691);
TMP_962=TMP_965;
}else{
TMP_966=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__691,G_72);
TMP_962=TMP_966;
}
}
TMP_960=TMP_962;
}
}
return TMP_960;
});
CL_COMMON_LISP_SEQUENCE_TO_LIST=lisp.values1(F_SEQUENCE_TO_LIST_957);
let F_MERGE_LISTS_967;
F_MERGE_LISTS_967=(function(){
if(arguments.length !== 4) {
lisp.argumentsError(G_968, arguments.length);
}
let TMP_987;
let TMP_986;
let TMP_985;
let TMP_984;
let TMP_983;
let TMP_982;
let TMP_981;
let TMP_980;
let TMP_979;
let TMP_978;
let TMP_977;
let TMP_976;
let TMP_975;
let L_G429__709;
let TMP_974;
let L_G428__708;
let TMP_973;
let L_G427__707;
let TMP_972;
let TMP_971;
let L_G426__706;
let TMP_970;
let L_X2__705;
let L_X1__704;
let BLOCK_RESULT_NIL__703;
let L_SPLICE__702;
let L_LIST__701;
let TMP_969;
let L_KEY__699;
let L_PREDICATE__698;
let L_LIST_2__697;
let L_LIST_1__696;
L_LIST_1__696=arguments[0];
L_LIST_2__697=arguments[1];
L_PREDICATE__698=arguments[2];
L_KEY__699=arguments[3];
{
TMP_969=lisp.callFunctionWithCallStack(G_142,lisp.S_nil);
L_LIST__701=lisp.values1(TMP_969);
L_SPLICE__702=lisp.values1(L_LIST__701);
BLOCK_NIL__703: for(;;){{
L_X1__704=lisp.values1(L_LIST_1__696);
L_X2__705=lisp.values1(L_LIST_2__697);
for(;;){
{
TMP_970=lisp.callFunctionWithCallStack(G_331,L_X1__704);
L_G426__706=lisp.values1(TMP_970);
if(lisp.values1(L_G426__706) !== lisp.S_nil){
TMP_971=lisp.values1(L_G426__706);
}else{
{
TMP_972=lisp.callFunctionWithCallStack(G_331,L_X2__705);
L_G427__707=lisp.values1(TMP_972);
if(lisp.values1(L_G427__707) !== lisp.S_nil){
TMP_973=lisp.values1(L_G427__707);
}else{
TMP_973=lisp.values1(lisp.S_nil);
}
}
TMP_971=lisp.values1(lisp.values1(TMP_973));
}
}
if(lisp.values1(lisp.values1(TMP_971)) !== lisp.S_nil){
{
L_G428__708=lisp.values1(L_X1__704);
if(lisp.values1(L_G428__708) !== lisp.S_nil){
TMP_974=lisp.values1(L_G428__708);
}else{
{
L_G429__709=lisp.values1(L_X2__705);
if(lisp.values1(L_G429__709) !== lisp.S_nil){
TMP_975=lisp.values1(L_G429__709);
}else{
TMP_975=lisp.values1(lisp.S_nil);
}
}
TMP_974=lisp.values1(lisp.values1(TMP_975));
}
}
lisp.callFunctionWithCallStack(G_457,L_SPLICE__702,lisp.values1(TMP_974));
TMP_976=lisp.callFunctionWithCallStack(G_36,L_LIST__701);
BLOCK_RESULT_NIL__703=TMP_976;
break BLOCK_NIL__703;
}else{
TMP_977=lisp.callFunctionWithCallStack(G_33,L_X2__705);
TMP_978=lisp.callFunctionWithCallStack(G_351,L_KEY__699,TMP_977);
TMP_979=lisp.callFunctionWithCallStack(G_33,L_X1__704);
TMP_980=lisp.callFunctionWithCallStack(G_351,L_KEY__699,TMP_979);
TMP_981=lisp.CL_funcall(lisp.values1(L_PREDICATE__698),TMP_978,TMP_980);
if(lisp.values1(TMP_981) !== lisp.S_nil){
TMP_982=lisp.callFunctionWithCallStack(G_457,L_SPLICE__702,L_X2__705);
TMP_983=lisp.callFunctionWithCallStack(G_36,TMP_982);
L_SPLICE__702=lisp.values1(TMP_983);
TMP_984=lisp.callFunctionWithCallStack(G_36,L_X2__705);
L_X2__705=lisp.values1(TMP_984);
}else{
TMP_985=lisp.callFunctionWithCallStack(G_457,L_SPLICE__702,L_X1__704);
TMP_986=lisp.callFunctionWithCallStack(G_36,TMP_985);
L_SPLICE__702=lisp.values1(TMP_986);
TMP_987=lisp.callFunctionWithCallStack(G_36,L_X1__704);
L_X1__704=lisp.values1(TMP_987);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__703=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__703;
});
CL_COMMON_LISP_MERGE_LISTS=lisp.values1(F_MERGE_LISTS_967);
let F_MERGE_988;
F_MERGE_988=(function(){
if(arguments.length < 4 || 6 < arguments.length) {
lisp.argumentsError(G_989, arguments.length);
}
let TMP_1017;
let TMP_1016;
let TMP_1015;
let L_G436__723;
let TMP_1014;
let TMP_1013;
let TMP_1012;
let L_G435__722;
let TMP_1011;
let TMP_1010;
let L_G434__721;
let TMP_1009;
let TMP_1008;
let TMP_1005;
let TMP_1004;
let TMP_1003;
let L_G433__720;
let TMP_1002;
let L_G432__719;
let L_ARGS__718;
let TMP_1001;
let TMP_1000;
let TMP_999;
let L_NAME__717;
let TMP_998;
let TMP_997;
let TMP_996;
let TMP_995;
let L_LIST__716;
let TMP_994;
let TMP_993;
let TMP_992;
let L_KEY__714;
let L_PREDICATE__713;
let L_SEQUENCE_2__712;
let L_SEQUENCE_1__711;
let L_RESULT_TYPE__710;
L_RESULT_TYPE__710=arguments[0];
L_SEQUENCE_1__711=arguments[1];
L_SEQUENCE_2__712=arguments[2];
L_PREDICATE__713=arguments[3];
let supplied_KEY__714;
for (let TMP_990 = 4; TMP_990 < arguments.length; TMP_990 += 2) {
if(arguments[TMP_990] === G_378){
supplied_KEY__714=arguments[TMP_990+1];
break;
}
}
L_KEY__714=supplied_KEY__714 !== undefined ? supplied_KEY__714 : (lisp.values1(lisp.S_nil));
if((arguments.length-4)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_991 = 4; TMP_991 < arguments.length; TMP_991 += 2) {
if(arguments[TMP_991]!==G_378) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_991].name); }
}
{
TMP_992=G_958.func(L_SEQUENCE_1__711);
TMP_993=G_958.func(L_SEQUENCE_2__712);
TMP_994=G_968.func(TMP_992,TMP_993,L_PREDICATE__713,L_KEY__714);
L_LIST__716=lisp.values1(TMP_994);
TMP_995=lisp.callFunctionWithCallStack(G_176,L_RESULT_TYPE__710);
L_RESULT_TYPE__710=lisp.values1(TMP_995);
{
TMP_996=lisp.CL_consp(L_RESULT_TYPE__710);
if(lisp.values1(TMP_996) !== lisp.S_nil){
TMP_998=lisp.callFunctionWithCallStack(G_33,L_RESULT_TYPE__710);
TMP_997=lisp.values1(TMP_998);
}else{
TMP_997=lisp.values1(L_RESULT_TYPE__710);
}
L_NAME__717=lisp.values1(TMP_997);
TMP_999=lisp.CL_consp(L_RESULT_TYPE__710);
if(lisp.values1(TMP_999) !== lisp.S_nil){
TMP_1001=lisp.callFunctionWithCallStack(G_36,L_RESULT_TYPE__710);
TMP_1000=lisp.values1(TMP_1001);
}else{
TMP_1000=lisp.values1(lisp.S_nil);
}
L_ARGS__718=lisp.values1(TMP_1000);
{
L_G432__719=lisp.values1(L_NAME__717);
{
TMP_1002=lisp.callFunctionWithCallStack(G_184,L_G432__719,G_78);
L_G433__720=lisp.values1(TMP_1002);
if(lisp.values1(L_G433__720) !== lisp.S_nil){
TMP_1004=lisp.callFunctionWithCallStack(G_78,L_LIST__716);
if(lisp.values1(TMP_1004) !== lisp.S_nil){
TMP_1005=lisp.values1(L_LIST__716);
}else{
TMP_1008=lisp.callFunctionWithCallStack(G_13,G_74,G_1006,L_LIST__716,G_1007,G_78);
TMP_1005=TMP_1008;
}
TMP_1003=TMP_1005;
}else{
{
TMP_1009=lisp.callFunctionWithCallStack(G_190,L_G432__719,lisp.makeCons(G_142, lisp.makeCons(G_188, lisp.S_nil)));
L_G434__721=lisp.values1(TMP_1009);
if(lisp.values1(L_G434__721) !== lisp.S_nil){
TMP_1010=lisp.values1(L_LIST__716);
}else{
{
TMP_1011=lisp.callFunctionWithCallStack(G_184,L_G432__719,G_199);
L_G435__722=lisp.values1(TMP_1011);
if(lisp.values1(L_G435__722) !== lisp.S_nil){
TMP_1013=G_20.func(L_LIST__716);
{
TMP_1014=lisp.callFunctionWithCallStack(G_33,L_ARGS__718);
L_G436__723=lisp.values1(TMP_1014);
if(lisp.values1(L_G436__723) !== lisp.S_nil){
TMP_1015=lisp.values1(L_G436__723);
}else{
TMP_1015=lisp.values1(G_205);
}
}
TMP_1016=lisp.callFunctionWithCallStack(G_109,TMP_1013,G_107,L_LIST__716,G_104,lisp.values1(TMP_1015));
TMP_1012=TMP_1016;
}else{
TMP_1017=lisp.callFunctionWithCallStack(G_74,L_RESULT_TYPE__710,G_72);
TMP_1012=TMP_1017;
}
}
TMP_1010=TMP_1012;
}
}
TMP_1003=TMP_1010;
}
}
}
}
}
return TMP_1003;
});
CL_COMMON_LISP_MERGE=lisp.values1(F_MERGE_988);
let F_REMOVE_1018;
F_REMOVE_1018=(function(){
if(arguments.length < 2 || 16 < arguments.length) {
lisp.argumentsError(G_1019, arguments.length);
}
let TMP_1029;
let TMP_1028;
let L_KEY__734;
let L_COUNT__733;
let L_END__732;
let L_START__731;
let L_TEST_NOT__730;
let L_TEST__729;
let L_FROM_END__728;
let L_SEQUENCE__727;
let L_ITEM__726;
L_ITEM__726=arguments[0];
L_SEQUENCE__727=arguments[1];
let supplied_FROM_END__728;
for (let TMP_1020 = 2; TMP_1020 < arguments.length; TMP_1020 += 2) {
if(arguments[TMP_1020] === G_380){
supplied_FROM_END__728=arguments[TMP_1020+1];
break;
}
}
L_FROM_END__728=supplied_FROM_END__728 !== undefined ? supplied_FROM_END__728 : (lisp.values1(lisp.S_nil));
let supplied_TEST__729;
for (let TMP_1021 = 2; TMP_1021 < arguments.length; TMP_1021 += 2) {
if(arguments[TMP_1021] === G_581){
supplied_TEST__729=arguments[TMP_1021+1];
break;
}
}
L_TEST__729=supplied_TEST__729 !== undefined ? supplied_TEST__729 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__730;
for (let TMP_1022 = 2; TMP_1022 < arguments.length; TMP_1022 += 2) {
if(arguments[TMP_1022] === G_583){
supplied_TEST_NOT__730=arguments[TMP_1022+1];
break;
}
}
L_TEST_NOT__730=supplied_TEST_NOT__730 !== undefined ? supplied_TEST_NOT__730 : (lisp.values1(lisp.S_nil));
let supplied_START__731;
for (let TMP_1023 = 2; TMP_1023 < arguments.length; TMP_1023 += 2) {
if(arguments[TMP_1023] === G_151){
supplied_START__731=arguments[TMP_1023+1];
break;
}
}
L_START__731=supplied_START__731 !== undefined ? supplied_START__731 : (lisp.values1(0));
let supplied_END__732;
for (let TMP_1024 = 2; TMP_1024 < arguments.length; TMP_1024 += 2) {
if(arguments[TMP_1024] === G_153){
supplied_END__732=arguments[TMP_1024+1];
break;
}
}
L_END__732=supplied_END__732 !== undefined ? supplied_END__732 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__733;
for (let TMP_1025 = 2; TMP_1025 < arguments.length; TMP_1025 += 2) {
if(arguments[TMP_1025] === G_840){
supplied_COUNT__733=arguments[TMP_1025+1];
break;
}
}
L_COUNT__733=supplied_COUNT__733 !== undefined ? supplied_COUNT__733 : (lisp.values1(lisp.S_nil));
let supplied_KEY__734;
for (let TMP_1026 = 2; TMP_1026 < arguments.length; TMP_1026 += 2) {
if(arguments[TMP_1026] === G_378){
supplied_KEY__734=arguments[TMP_1026+1];
break;
}
}
L_KEY__734=supplied_KEY__734 !== undefined ? supplied_KEY__734 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1027 = 2; TMP_1027 < arguments.length; TMP_1027 += 2) {
if(arguments[TMP_1027]!==G_378 && arguments[TMP_1027]!==G_840 && arguments[TMP_1027]!==G_153 && arguments[TMP_1027]!==G_151 && arguments[TMP_1027]!==G_583 && arguments[TMP_1027]!==G_581 && arguments[TMP_1027]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1027].name); }
}
TMP_1028=G_97.func(L_SEQUENCE__727);
TMP_1029=G_1030.func(L_ITEM__726,TMP_1028,G_380,L_FROM_END__728,G_581,L_TEST__729,G_583,L_TEST_NOT__730,G_151,L_START__731,G_153,L_END__732,G_840,L_COUNT__733,G_378,L_KEY__734);
return TMP_1029;
});
CL_COMMON_LISP_REMOVE=lisp.values1(F_REMOVE_1018);
let F_REMOVE_IF_1031;
F_REMOVE_IF_1031=(function(){
if(arguments.length < 2 || 12 < arguments.length) {
lisp.argumentsError(G_1032, arguments.length);
}
let TMP_1040;
let TMP_1039;
let L_KEY__742;
let L_COUNT__741;
let L_END__740;
let L_START__739;
let L_FROM_END__738;
let L_SEQUENCE__737;
let L_TEST__736;
L_TEST__736=arguments[0];
L_SEQUENCE__737=arguments[1];
let supplied_FROM_END__738;
for (let TMP_1033 = 2; TMP_1033 < arguments.length; TMP_1033 += 2) {
if(arguments[TMP_1033] === G_380){
supplied_FROM_END__738=arguments[TMP_1033+1];
break;
}
}
L_FROM_END__738=supplied_FROM_END__738 !== undefined ? supplied_FROM_END__738 : (lisp.values1(lisp.S_nil));
let supplied_START__739;
for (let TMP_1034 = 2; TMP_1034 < arguments.length; TMP_1034 += 2) {
if(arguments[TMP_1034] === G_151){
supplied_START__739=arguments[TMP_1034+1];
break;
}
}
L_START__739=supplied_START__739 !== undefined ? supplied_START__739 : (lisp.values1(0));
let supplied_END__740;
for (let TMP_1035 = 2; TMP_1035 < arguments.length; TMP_1035 += 2) {
if(arguments[TMP_1035] === G_153){
supplied_END__740=arguments[TMP_1035+1];
break;
}
}
L_END__740=supplied_END__740 !== undefined ? supplied_END__740 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__741;
for (let TMP_1036 = 2; TMP_1036 < arguments.length; TMP_1036 += 2) {
if(arguments[TMP_1036] === G_840){
supplied_COUNT__741=arguments[TMP_1036+1];
break;
}
}
L_COUNT__741=supplied_COUNT__741 !== undefined ? supplied_COUNT__741 : (lisp.values1(lisp.S_nil));
let supplied_KEY__742;
for (let TMP_1037 = 2; TMP_1037 < arguments.length; TMP_1037 += 2) {
if(arguments[TMP_1037] === G_378){
supplied_KEY__742=arguments[TMP_1037+1];
break;
}
}
L_KEY__742=supplied_KEY__742 !== undefined ? supplied_KEY__742 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1038 = 2; TMP_1038 < arguments.length; TMP_1038 += 2) {
if(arguments[TMP_1038]!==G_378 && arguments[TMP_1038]!==G_840 && arguments[TMP_1038]!==G_153 && arguments[TMP_1038]!==G_151 && arguments[TMP_1038]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1038].name); }
}
TMP_1039=G_97.func(L_SEQUENCE__737);
TMP_1040=G_1041.func(L_TEST__736,TMP_1039,G_380,L_FROM_END__738,G_151,L_START__739,G_153,L_END__740,G_840,L_COUNT__741,G_378,L_KEY__742);
return TMP_1040;
});
CL_COMMON_LISP_REMOVE_IF=lisp.values1(F_REMOVE_IF_1031);
let F_REMOVE_IF_NOT_1042;
F_REMOVE_IF_NOT_1042=(function(){
if(arguments.length < 2 || 12 < arguments.length) {
lisp.argumentsError(G_1043, arguments.length);
}
let TMP_1051;
let TMP_1050;
let L_KEY__750;
let L_COUNT__749;
let L_END__748;
let L_START__747;
let L_FROM_END__746;
let L_SEQUENCE__745;
let L_TEST__744;
L_TEST__744=arguments[0];
L_SEQUENCE__745=arguments[1];
let supplied_FROM_END__746;
for (let TMP_1044 = 2; TMP_1044 < arguments.length; TMP_1044 += 2) {
if(arguments[TMP_1044] === G_380){
supplied_FROM_END__746=arguments[TMP_1044+1];
break;
}
}
L_FROM_END__746=supplied_FROM_END__746 !== undefined ? supplied_FROM_END__746 : (lisp.values1(lisp.S_nil));
let supplied_START__747;
for (let TMP_1045 = 2; TMP_1045 < arguments.length; TMP_1045 += 2) {
if(arguments[TMP_1045] === G_151){
supplied_START__747=arguments[TMP_1045+1];
break;
}
}
L_START__747=supplied_START__747 !== undefined ? supplied_START__747 : (lisp.values1(0));
let supplied_END__748;
for (let TMP_1046 = 2; TMP_1046 < arguments.length; TMP_1046 += 2) {
if(arguments[TMP_1046] === G_153){
supplied_END__748=arguments[TMP_1046+1];
break;
}
}
L_END__748=supplied_END__748 !== undefined ? supplied_END__748 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__749;
for (let TMP_1047 = 2; TMP_1047 < arguments.length; TMP_1047 += 2) {
if(arguments[TMP_1047] === G_840){
supplied_COUNT__749=arguments[TMP_1047+1];
break;
}
}
L_COUNT__749=supplied_COUNT__749 !== undefined ? supplied_COUNT__749 : (lisp.values1(lisp.S_nil));
let supplied_KEY__750;
for (let TMP_1048 = 2; TMP_1048 < arguments.length; TMP_1048 += 2) {
if(arguments[TMP_1048] === G_378){
supplied_KEY__750=arguments[TMP_1048+1];
break;
}
}
L_KEY__750=supplied_KEY__750 !== undefined ? supplied_KEY__750 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1049 = 2; TMP_1049 < arguments.length; TMP_1049 += 2) {
if(arguments[TMP_1049]!==G_378 && arguments[TMP_1049]!==G_840 && arguments[TMP_1049]!==G_153 && arguments[TMP_1049]!==G_151 && arguments[TMP_1049]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1049].name); }
}
TMP_1050=G_97.func(L_SEQUENCE__745);
TMP_1051=G_1052.func(L_TEST__744,TMP_1050,G_380,L_FROM_END__746,G_151,L_START__747,G_153,L_END__748,G_840,L_COUNT__749,G_378,L_KEY__750);
return TMP_1051;
});
CL_COMMON_LISP_REMOVE_IF_NOT=lisp.values1(F_REMOVE_IF_NOT_1042);
let F_DELETE_1053;
F_DELETE_1053=(function(){
if(arguments.length < 2 || 16 < arguments.length) {
lisp.argumentsError(G_1030, arguments.length);
}
let TMP_1069;
let TMP_1062;
let L_KEY__760;
let L_COUNT__759;
let L_END__758;
let L_START__757;
let L_TEST_NOT__756;
let L_TEST__755;
let L_FROM_END__754;
let L_SEQUENCE__753;
let L_ITEM__752;
L_ITEM__752=arguments[0];
L_SEQUENCE__753=arguments[1];
let supplied_FROM_END__754;
for (let TMP_1054 = 2; TMP_1054 < arguments.length; TMP_1054 += 2) {
if(arguments[TMP_1054] === G_380){
supplied_FROM_END__754=arguments[TMP_1054+1];
break;
}
}
L_FROM_END__754=supplied_FROM_END__754 !== undefined ? supplied_FROM_END__754 : (lisp.values1(lisp.S_nil));
let supplied_TEST__755;
for (let TMP_1055 = 2; TMP_1055 < arguments.length; TMP_1055 += 2) {
if(arguments[TMP_1055] === G_581){
supplied_TEST__755=arguments[TMP_1055+1];
break;
}
}
L_TEST__755=supplied_TEST__755 !== undefined ? supplied_TEST__755 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__756;
for (let TMP_1056 = 2; TMP_1056 < arguments.length; TMP_1056 += 2) {
if(arguments[TMP_1056] === G_583){
supplied_TEST_NOT__756=arguments[TMP_1056+1];
break;
}
}
L_TEST_NOT__756=supplied_TEST_NOT__756 !== undefined ? supplied_TEST_NOT__756 : (lisp.values1(lisp.S_nil));
let supplied_START__757;
for (let TMP_1057 = 2; TMP_1057 < arguments.length; TMP_1057 += 2) {
if(arguments[TMP_1057] === G_151){
supplied_START__757=arguments[TMP_1057+1];
break;
}
}
L_START__757=supplied_START__757 !== undefined ? supplied_START__757 : (lisp.values1(0));
let supplied_END__758;
for (let TMP_1058 = 2; TMP_1058 < arguments.length; TMP_1058 += 2) {
if(arguments[TMP_1058] === G_153){
supplied_END__758=arguments[TMP_1058+1];
break;
}
}
L_END__758=supplied_END__758 !== undefined ? supplied_END__758 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__759;
for (let TMP_1059 = 2; TMP_1059 < arguments.length; TMP_1059 += 2) {
if(arguments[TMP_1059] === G_840){
supplied_COUNT__759=arguments[TMP_1059+1];
break;
}
}
L_COUNT__759=supplied_COUNT__759 !== undefined ? supplied_COUNT__759 : (lisp.values1(lisp.S_nil));
let supplied_KEY__760;
for (let TMP_1060 = 2; TMP_1060 < arguments.length; TMP_1060 += 2) {
if(arguments[TMP_1060] === G_378){
supplied_KEY__760=arguments[TMP_1060+1];
break;
}
}
L_KEY__760=supplied_KEY__760 !== undefined ? supplied_KEY__760 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1061 = 2; TMP_1061 < arguments.length; TMP_1061 += 2) {
if(arguments[TMP_1061]!==G_378 && arguments[TMP_1061]!==G_840 && arguments[TMP_1061]!==G_153 && arguments[TMP_1061]!==G_151 && arguments[TMP_1061]!==G_583 && arguments[TMP_1061]!==G_581 && arguments[TMP_1061]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1061].name); }
}
TMP_1062=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1068;
let TMP_1067;
let TMP_1066;
let TMP_1065;
let L_G440__764;
let TMP_1064;
let TMP_1063;
let L_G439__763;
let L_X__762;
L_X__762=arguments[0];
{
L_G439__763=lisp.values1(L_TEST__755);
if(lisp.values1(L_G439__763) !== lisp.S_nil){
TMP_1064=lisp.CL_funcall(lisp.values1(L_TEST__755),L_ITEM__752,L_X__762);
TMP_1063=TMP_1064;
}else{
{
L_G440__764=lisp.values1(L_TEST_NOT__756);
if(lisp.values1(L_G440__764) !== lisp.S_nil){
TMP_1066=lisp.CL_funcall(lisp.values1(L_TEST_NOT__756),L_ITEM__752,L_X__762);
TMP_1067=lisp.callFunctionWithCallStack(G_245,TMP_1066);
TMP_1065=TMP_1067;
}else{
TMP_1068=lisp.callFunctionWithCallStack(G_184,L_ITEM__752,L_X__762);
TMP_1065=TMP_1068;
}
}
TMP_1063=TMP_1065;
}
}
return TMP_1063;
});
TMP_1069=G_1041.func(TMP_1062,L_SEQUENCE__753,G_380,L_FROM_END__754,G_151,L_START__757,G_153,L_END__758,G_840,L_COUNT__759,G_378,L_KEY__760);
return TMP_1069;
});
CL_COMMON_LISP_DELETE=lisp.values1(F_DELETE_1053);
let F_DELETE_IF_LIST_1070;
F_DELETE_IF_LIST_1070=(function(){
if(arguments.length !== 7) {
lisp.argumentsError(G_1071, arguments.length);
}
let L_G471__805;
let TMP_1109;
let L_G470__804;
let TMP_1108;
let TMP_1107;
let L_G468__802;
let TMP_1106;
let L_G_STORE467__801;
let TMP_1105;
let L_G466__800;
let L_G465__799;
let TMP_1104;
let TMP_1103;
let TMP_1102;
let TMP_1101;
let TMP_1100;
let L_G462__798;
let TMP_1099;
let TMP_1098;
let L_G461__797;
let TMP_1097;
let L_I__796;
let L_LIST__795;
let TMP_1096;
let BLOCK_RESULT_NIL__794;
let L_DELETE_COUNT__793;
let L_PREVIOUS__792;
let TMP_1095;
let L_HEAD__791;
let TMP_1094;
let L_G456__790;
let TMP_1093;
let L_G455__789;
let TMP_1092;
let TMP_1091;
let L_G453__787;
let TMP_1090;
let L_G_STORE452__786;
let TMP_1089;
let L_G451__785;
let L_G450__784;
let TMP_1088;
let TMP_1087;
let TMP_1086;
let TMP_1085;
let TMP_1084;
let TMP_1083;
let L_G447__783;
let TMP_1082;
let TMP_1081;
let L_G446__782;
let TMP_1080;
let L_I__781;
let L_LIST__780;
let TMP_1079;
let TMP_1078;
let BLOCK_RESULT_NIL__779;
let L_DELETE_COUNT__778;
let L_PREVIOUS__777;
let TMP_1077;
let TMP_1076;
let L_HEAD__776;
let TMP_1075;
let L_LENGTH__775;
let TMP_1074;
let L_SEQUENCE__774;
let TMP_1073;
let TMP_1072;
let L_KEY__772;
let L_COUNT__771;
let L_END__770;
let L_START__769;
let L_FROM_END__768;
let L_SEQUENCE__767;
let L_TEST__766;
L_TEST__766=arguments[0];
L_SEQUENCE__767=arguments[1];
L_FROM_END__768=arguments[2];
L_START__769=arguments[3];
L_END__770=arguments[4];
L_COUNT__771=arguments[5];
L_KEY__772=arguments[6];
if(lisp.values1(L_FROM_END__768) !== lisp.S_nil){
{
TMP_1073=G_291.func(L_SEQUENCE__767);
L_SEQUENCE__774=lisp.values1(TMP_1073);
TMP_1074=G_20.func(L_SEQUENCE__774);
L_LENGTH__775=lisp.values1(TMP_1074);
TMP_1075=lisp.CL_cons(lisp.S_nil,L_SEQUENCE__774);
L_HEAD__776=lisp.values1(TMP_1075);
TMP_1076=lisp.callFunctionWithCallStack(G_27,L_LENGTH__775,L_END__770);
TMP_1077=lisp.callFunctionWithCallStack(G_29,TMP_1076,L_HEAD__776);
L_PREVIOUS__777=lisp.values1(TMP_1077);
L_DELETE_COUNT__778=lisp.values1(0);
BLOCK_NIL__779: for(;;){{
TMP_1078=lisp.callFunctionWithCallStack(G_27,L_LENGTH__775,L_END__770);
TMP_1079=lisp.callFunctionWithCallStack(G_29,TMP_1078,L_SEQUENCE__774);
L_LIST__780=lisp.values1(TMP_1079);
L_I__781=lisp.values1(L_START__769);
for(;;){
{
TMP_1080=lisp.callFunctionWithCallStack(G_31,L_I__781,L_END__770);
L_G446__782=lisp.values1(TMP_1080);
if(lisp.values1(L_G446__782) !== lisp.S_nil){
TMP_1081=lisp.values1(L_G446__782);
}else{
{
TMP_1082=lisp.callFunctionWithCallStack(G_184,L_COUNT__771,L_DELETE_COUNT__778);
L_G447__783=lisp.values1(TMP_1082);
if(lisp.values1(L_G447__783) !== lisp.S_nil){
TMP_1083=lisp.values1(L_G447__783);
}else{
TMP_1083=lisp.values1(lisp.S_nil);
}
}
TMP_1081=lisp.values1(lisp.values1(TMP_1083));
}
}
if(lisp.values1(lisp.values1(TMP_1081)) !== lisp.S_nil){
TMP_1084=lisp.callFunctionWithCallStack(G_36,L_HEAD__776);
TMP_1085=G_291.func(TMP_1084);
BLOCK_RESULT_NIL__779=TMP_1085;
break BLOCK_NIL__779;
}else{
{
TMP_1086=lisp.callFunctionWithCallStack(G_33,L_LIST__780);
TMP_1087=lisp.callFunctionWithCallStack(G_351,L_KEY__772,TMP_1086);
TMP_1088=lisp.CL_funcall(lisp.values1(L_TEST__766),TMP_1087);
L_G450__784=lisp.values1(TMP_1088);
if(lisp.values1(L_G450__784) !== lisp.S_nil){
{
L_G451__785=lisp.values1(L_PREVIOUS__777);
TMP_1089=lisp.callFunctionWithCallStack(G_36,L_LIST__780);
L_G_STORE452__786=lisp.values1(TMP_1089);
lisp.callFunctionWithCallStack(G_228,L_G_STORE452__786,L_G451__785);
}
{
TMP_1090=lisp.callFunctionWithCallStack(G_285,L_DELETE_COUNT__778,1);
L_G453__787=lisp.values1(TMP_1090);
L_DELETE_COUNT__778=lisp.values1(L_G453__787);
}
}else{
TMP_1091=lisp.callFunctionWithCallStack(G_36,L_PREVIOUS__777);
L_PREVIOUS__777=lisp.values1(TMP_1091);
}
}
{
TMP_1092=lisp.callFunctionWithCallStack(G_36,L_LIST__780);
L_G455__789=lisp.values1(TMP_1092);
TMP_1093=lisp.callFunctionWithCallStack(G_45,L_I__781);
L_G456__790=lisp.values1(TMP_1093);
L_LIST__780=lisp.values1(L_G455__789);
L_I__781=lisp.values1(L_G456__790);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__779=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_1072=BLOCK_RESULT_NIL__779;
}else{
{
TMP_1094=lisp.CL_cons(lisp.S_nil,L_SEQUENCE__767);
L_HEAD__791=lisp.values1(TMP_1094);
TMP_1095=lisp.callFunctionWithCallStack(G_29,L_START__769,L_HEAD__791);
L_PREVIOUS__792=lisp.values1(TMP_1095);
L_DELETE_COUNT__793=lisp.values1(0);
BLOCK_NIL__794: for(;;){{
TMP_1096=lisp.callFunctionWithCallStack(G_29,L_START__769,L_SEQUENCE__767);
L_LIST__795=lisp.values1(TMP_1096);
L_I__796=lisp.values1(L_START__769);
for(;;){
{
TMP_1097=lisp.callFunctionWithCallStack(G_31,L_I__796,L_END__770);
L_G461__797=lisp.values1(TMP_1097);
if(lisp.values1(L_G461__797) !== lisp.S_nil){
TMP_1098=lisp.values1(L_G461__797);
}else{
{
TMP_1099=lisp.callFunctionWithCallStack(G_184,L_COUNT__771,L_DELETE_COUNT__793);
L_G462__798=lisp.values1(TMP_1099);
if(lisp.values1(L_G462__798) !== lisp.S_nil){
TMP_1100=lisp.values1(L_G462__798);
}else{
TMP_1100=lisp.values1(lisp.S_nil);
}
}
TMP_1098=lisp.values1(lisp.values1(TMP_1100));
}
}
if(lisp.values1(lisp.values1(TMP_1098)) !== lisp.S_nil){
TMP_1101=lisp.callFunctionWithCallStack(G_36,L_HEAD__791);
BLOCK_RESULT_NIL__794=TMP_1101;
break BLOCK_NIL__794;
}else{
{
TMP_1102=lisp.callFunctionWithCallStack(G_33,L_LIST__795);
TMP_1103=lisp.callFunctionWithCallStack(G_351,L_KEY__772,TMP_1102);
TMP_1104=lisp.CL_funcall(lisp.values1(L_TEST__766),TMP_1103);
L_G465__799=lisp.values1(TMP_1104);
if(lisp.values1(L_G465__799) !== lisp.S_nil){
{
L_G466__800=lisp.values1(L_PREVIOUS__792);
TMP_1105=lisp.callFunctionWithCallStack(G_36,L_LIST__795);
L_G_STORE467__801=lisp.values1(TMP_1105);
lisp.callFunctionWithCallStack(G_228,L_G_STORE467__801,L_G466__800);
}
{
TMP_1106=lisp.callFunctionWithCallStack(G_285,L_DELETE_COUNT__793,1);
L_G468__802=lisp.values1(TMP_1106);
L_DELETE_COUNT__793=lisp.values1(L_G468__802);
}
}else{
TMP_1107=lisp.callFunctionWithCallStack(G_36,L_PREVIOUS__792);
L_PREVIOUS__792=lisp.values1(TMP_1107);
}
}
{
TMP_1108=lisp.callFunctionWithCallStack(G_36,L_LIST__795);
L_G470__804=lisp.values1(TMP_1108);
TMP_1109=lisp.callFunctionWithCallStack(G_45,L_I__796);
L_G471__805=lisp.values1(TMP_1109);
L_LIST__795=lisp.values1(L_G470__804);
L_I__796=lisp.values1(L_G471__805);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__794=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_1072=BLOCK_RESULT_NIL__794;
}
return TMP_1072;
});
CL_COMMON_LISP_DELETE_IF_LIST=lisp.values1(F_DELETE_IF_LIST_1070);
let F_TRIM_VECTOR_1110;
F_TRIM_VECTOR_1110=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1111, arguments.length);
}
let TMP_1112;
let L_SIZE__807;
let L_VECTOR__806;
L_VECTOR__806=arguments[0];
L_SIZE__807=arguments[1];
TMP_1112=G_242.func(L_VECTOR__806,0,L_SIZE__807);
return TMP_1112;
});
CL_COMMON_LISP_TRIM_VECTOR=lisp.values1(F_TRIM_VECTOR_1110);
let F_DELETE_IF_VECTOR_1_1113;
F_DELETE_IF_VECTOR_1_1113=(function(){
if(arguments.length !== 6) {
lisp.argumentsError(G_1114, arguments.length);
}
let L_G496__836;
let TMP_1131;
let L_G495__835;
let TMP_1130;
let L_G494__834;
let TMP_1129;
let TMP_1128;
let TMP_1127;
let TMP_1126;
let L_G_STORE493__833;
let TMP_1125;
let L_G492__832;
let L_G491__831;
let L_G488__830;
let TMP_1124;
let L_G487__829;
let TMP_1123;
let L_G_STORE486__828;
let TMP_1122;
let L_G485__827;
let L_G484__826;
let TMP_1121;
let TMP_1120;
let L_J__825;
let L_I__824;
let BLOCK_RESULT_NIL__823;
let TMP_1119;
let L_G477__822;
let TMP_1118;
let TMP_1117;
let L_G476__821;
let TMP_1116;
let L_J__820;
let L_I__819;
let BLOCK_RESULT_NIL__818;
let L_DELETE_COUNT__817;
let L_LENGTH__816;
let TMP_1115;
let L_KEY__814;
let L_COUNT__813;
let L_END__812;
let L_START__811;
let L_VECTOR__810;
let L_TEST__809;
L_TEST__809=arguments[0];
L_VECTOR__810=arguments[1];
L_START__811=arguments[2];
L_END__812=arguments[3];
L_COUNT__813=arguments[4];
L_KEY__814=arguments[5];
{
TMP_1115=G_20.func(L_VECTOR__810);
L_LENGTH__816=lisp.values1(TMP_1115);
L_DELETE_COUNT__817=lisp.values1(0);
BLOCK_NIL__818: for(;;){{
L_I__819=lisp.values1(L_START__811);
L_J__820=lisp.values1(L_START__811);
for(;;){
{
TMP_1116=lisp.callFunctionWithCallStack(G_31,L_I__819,L_END__812);
L_G476__821=lisp.values1(TMP_1116);
if(lisp.values1(L_G476__821) !== lisp.S_nil){
TMP_1117=lisp.values1(L_G476__821);
}else{
{
TMP_1118=lisp.callFunctionWithCallStack(G_184,L_DELETE_COUNT__817,L_COUNT__813);
L_G477__822=lisp.values1(TMP_1118);
if(lisp.values1(L_G477__822) !== lisp.S_nil){
TMP_1119=lisp.values1(L_G477__822);
}else{
TMP_1119=lisp.values1(lisp.S_nil);
}
}
TMP_1117=lisp.values1(lisp.values1(TMP_1119));
}
}
if(lisp.values1(lisp.values1(TMP_1117)) !== lisp.S_nil){
BLOCK_NIL__823: for(;;){{
L_I__824=lisp.values1(L_I__819);
L_J__825=lisp.values1(L_J__820);
for(;;){
TMP_1120=lisp.callFunctionWithCallStack(G_184,L_I__824,L_LENGTH__816);
if(lisp.values1(TMP_1120) !== lisp.S_nil){
TMP_1121=G_1111.func(L_VECTOR__810,L_J__825);
BLOCK_RESULT_NIL__823=TMP_1121;
break BLOCK_NIL__823;
}else{
{
L_G484__826=lisp.values1(L_VECTOR__810);
L_G485__827=lisp.values1(L_J__825);
TMP_1122=lisp.callFunctionWithCallStack(G_57,L_VECTOR__810,L_I__824);
L_G_STORE486__828=lisp.values1(TMP_1122);
lisp.callFunctionWithCallStack(G_132,L_G_STORE486__828,L_G484__826,L_G485__827);
}
{
TMP_1123=lisp.callFunctionWithCallStack(G_45,L_I__824);
L_G487__829=lisp.values1(TMP_1123);
TMP_1124=lisp.callFunctionWithCallStack(G_45,L_J__825);
L_G488__830=lisp.values1(TMP_1124);
L_I__824=lisp.values1(L_G487__829);
L_J__825=lisp.values1(L_G488__830);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__823=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
BLOCK_RESULT_NIL__818=BLOCK_RESULT_NIL__823;
break BLOCK_NIL__818;
}else{
{
L_G491__831=lisp.values1(L_VECTOR__810);
L_G492__832=lisp.values1(L_J__820);
TMP_1125=lisp.callFunctionWithCallStack(G_57,L_VECTOR__810,L_I__819);
L_G_STORE493__833=lisp.values1(TMP_1125);
lisp.callFunctionWithCallStack(G_132,L_G_STORE493__833,L_G491__831,L_G492__832);
}
TMP_1126=lisp.callFunctionWithCallStack(G_57,L_VECTOR__810,L_I__819);
TMP_1127=lisp.callFunctionWithCallStack(G_351,L_KEY__814,TMP_1126);
TMP_1128=lisp.CL_funcall(lisp.values1(L_TEST__809),TMP_1127);
if(lisp.values1(TMP_1128) !== lisp.S_nil){
{
TMP_1129=lisp.callFunctionWithCallStack(G_285,L_DELETE_COUNT__817,1);
L_G494__834=lisp.values1(TMP_1129);
L_DELETE_COUNT__817=lisp.values1(L_G494__834);
}
}else{
{
TMP_1130=lisp.callFunctionWithCallStack(G_285,L_J__820,1);
L_G495__835=lisp.values1(TMP_1130);
L_J__820=lisp.values1(L_G495__835);
}
}
{
TMP_1131=lisp.callFunctionWithCallStack(G_45,L_I__819);
L_G496__836=lisp.values1(TMP_1131);
L_I__819=lisp.values1(L_G496__836);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__818=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__818;
});
CL_COMMON_LISP_DELETE_IF_VECTOR_1=lisp.values1(F_DELETE_IF_VECTOR_1_1113);
let F_DELETE_IF_VECTOR_1132;
F_DELETE_IF_VECTOR_1132=(function(){
if(arguments.length !== 7) {
lisp.argumentsError(G_1133, arguments.length);
}
let TMP_1141;
let TMP_1140;
let TMP_1139;
let TMP_1138;
let TMP_1137;
let TMP_1136;
let L_LENGTH__845;
let TMP_1135;
let TMP_1134;
let L_KEY__843;
let L_COUNT__842;
let L_END__841;
let L_START__840;
let L_FROM_END__839;
let L_VECTOR__838;
let L_TEST__837;
L_TEST__837=arguments[0];
L_VECTOR__838=arguments[1];
L_FROM_END__839=arguments[2];
L_START__840=arguments[3];
L_END__841=arguments[4];
L_COUNT__842=arguments[5];
L_KEY__843=arguments[6];
if(lisp.values1(L_FROM_END__839) !== lisp.S_nil){
{
TMP_1135=G_20.func(L_VECTOR__838);
L_LENGTH__845=lisp.values1(TMP_1135);
TMP_1136=G_291.func(L_VECTOR__838);
TMP_1137=lisp.callFunctionWithCallStack(G_27,L_LENGTH__845,L_END__841);
TMP_1138=lisp.callFunctionWithCallStack(G_27,L_LENGTH__845,L_START__840);
TMP_1139=G_1114.func(L_TEST__837,TMP_1136,TMP_1137,TMP_1138,L_COUNT__842,L_KEY__843);
TMP_1140=G_291.func(TMP_1139);
}
TMP_1134=TMP_1140;
}else{
TMP_1141=G_1114.func(L_TEST__837,L_VECTOR__838,L_START__840,L_END__841,L_COUNT__842,L_KEY__843);
TMP_1134=TMP_1141;
}
return TMP_1134;
});
CL_COMMON_LISP_DELETE_IF_VECTOR=lisp.values1(F_DELETE_IF_VECTOR_1132);
let F_DELETE_IF_1142;
F_DELETE_IF_1142=(function(){
if(arguments.length < 2 || 12 < arguments.length) {
lisp.argumentsError(G_1041, arguments.length);
}
let TMP_1159;
let TMP_1158;
let TMP_1157;
let L_G498__855;
let TMP_1156;
let TMP_1155;
let TMP_1154;
let L_G497__854;
let TMP_1153;
let TMP_1151;
let TMP_1150;
let TMP_1149;
let L_KEY__852;
let L_COUNT__851;
let L_END__850;
let L_START__849;
let L_FROM_END__848;
let L_SEQUENCE__847;
let L_TEST__846;
L_TEST__846=arguments[0];
L_SEQUENCE__847=arguments[1];
let supplied_FROM_END__848;
for (let TMP_1143 = 2; TMP_1143 < arguments.length; TMP_1143 += 2) {
if(arguments[TMP_1143] === G_380){
supplied_FROM_END__848=arguments[TMP_1143+1];
break;
}
}
L_FROM_END__848=supplied_FROM_END__848 !== undefined ? supplied_FROM_END__848 : (lisp.values1(lisp.S_nil));
let supplied_START__849;
for (let TMP_1144 = 2; TMP_1144 < arguments.length; TMP_1144 += 2) {
if(arguments[TMP_1144] === G_151){
supplied_START__849=arguments[TMP_1144+1];
break;
}
}
L_START__849=supplied_START__849 !== undefined ? supplied_START__849 : (lisp.values1(0));
let supplied_END__850;
for (let TMP_1145 = 2; TMP_1145 < arguments.length; TMP_1145 += 2) {
if(arguments[TMP_1145] === G_153){
supplied_END__850=arguments[TMP_1145+1];
break;
}
}
L_END__850=supplied_END__850 !== undefined ? supplied_END__850 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__851;
for (let TMP_1146 = 2; TMP_1146 < arguments.length; TMP_1146 += 2) {
if(arguments[TMP_1146] === G_840){
supplied_COUNT__851=arguments[TMP_1146+1];
break;
}
}
L_COUNT__851=supplied_COUNT__851 !== undefined ? supplied_COUNT__851 : (lisp.values1(lisp.S_nil));
let supplied_KEY__852;
for (let TMP_1147 = 2; TMP_1147 < arguments.length; TMP_1147 += 2) {
if(arguments[TMP_1147] === G_378){
supplied_KEY__852=arguments[TMP_1147+1];
break;
}
}
L_KEY__852=supplied_KEY__852 !== undefined ? supplied_KEY__852 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1148 = 2; TMP_1148 < arguments.length; TMP_1148 += 2) {
if(arguments[TMP_1148]!==G_378 && arguments[TMP_1148]!==G_840 && arguments[TMP_1148]!==G_153 && arguments[TMP_1148]!==G_151 && arguments[TMP_1148]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1148].name); }
}
if(lisp.values1(L_END__850) !== lisp.S_nil){
}else{
TMP_1149=G_20.func(L_SEQUENCE__847);
L_END__850=lisp.values1(TMP_1149);
}
if(lisp.values1(L_COUNT__851) !== lisp.S_nil){
TMP_1151=lisp.callFunctionWithCallStack(G_1152,L_COUNT__851);
TMP_1150=lisp.values1(TMP_1151);
}else{
TMP_1150=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1150) !== lisp.S_nil){
L_COUNT__851=lisp.values1(0);
}else{
}
{
TMP_1153=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__847);
L_G497__854=lisp.values1(TMP_1153);
if(lisp.values1(L_G497__854) !== lisp.S_nil){
TMP_1155=G_1071.func(L_TEST__846,L_SEQUENCE__847,L_FROM_END__848,L_START__849,L_END__850,L_COUNT__851,L_KEY__852);
TMP_1154=TMP_1155;
}else{
{
TMP_1156=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__847);
L_G498__855=lisp.values1(TMP_1156);
if(lisp.values1(L_G498__855) !== lisp.S_nil){
TMP_1158=G_1133.func(L_TEST__846,L_SEQUENCE__847,L_FROM_END__848,L_START__849,L_END__850,L_COUNT__851,L_KEY__852);
TMP_1157=TMP_1158;
}else{
TMP_1159=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__847,G_72);
TMP_1157=TMP_1159;
}
}
TMP_1154=TMP_1157;
}
}
return TMP_1154;
});
CL_COMMON_LISP_DELETE_IF=lisp.values1(F_DELETE_IF_1142);
let F_DELETE_IF_NOT_1160;
F_DELETE_IF_NOT_1160=(function(){
if(arguments.length < 2 || 12 < arguments.length) {
lisp.argumentsError(G_1052, arguments.length);
}
let TMP_1168;
let TMP_1167;
let L_KEY__863;
let L_COUNT__862;
let L_END__861;
let L_START__860;
let L_FROM_END__859;
let L_SEQUENCE__858;
let L_TEST__857;
L_TEST__857=arguments[0];
L_SEQUENCE__858=arguments[1];
let supplied_FROM_END__859;
for (let TMP_1161 = 2; TMP_1161 < arguments.length; TMP_1161 += 2) {
if(arguments[TMP_1161] === G_380){
supplied_FROM_END__859=arguments[TMP_1161+1];
break;
}
}
L_FROM_END__859=supplied_FROM_END__859 !== undefined ? supplied_FROM_END__859 : (lisp.values1(lisp.S_nil));
let supplied_START__860;
for (let TMP_1162 = 2; TMP_1162 < arguments.length; TMP_1162 += 2) {
if(arguments[TMP_1162] === G_151){
supplied_START__860=arguments[TMP_1162+1];
break;
}
}
L_START__860=supplied_START__860 !== undefined ? supplied_START__860 : (lisp.values1(0));
let supplied_END__861;
for (let TMP_1163 = 2; TMP_1163 < arguments.length; TMP_1163 += 2) {
if(arguments[TMP_1163] === G_153){
supplied_END__861=arguments[TMP_1163+1];
break;
}
}
L_END__861=supplied_END__861 !== undefined ? supplied_END__861 : (lisp.values1(lisp.S_nil));
let supplied_COUNT__862;
for (let TMP_1164 = 2; TMP_1164 < arguments.length; TMP_1164 += 2) {
if(arguments[TMP_1164] === G_840){
supplied_COUNT__862=arguments[TMP_1164+1];
break;
}
}
L_COUNT__862=supplied_COUNT__862 !== undefined ? supplied_COUNT__862 : (lisp.values1(lisp.S_nil));
let supplied_KEY__863;
for (let TMP_1165 = 2; TMP_1165 < arguments.length; TMP_1165 += 2) {
if(arguments[TMP_1165] === G_378){
supplied_KEY__863=arguments[TMP_1165+1];
break;
}
}
L_KEY__863=supplied_KEY__863 !== undefined ? supplied_KEY__863 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1166 = 2; TMP_1166 < arguments.length; TMP_1166 += 2) {
if(arguments[TMP_1166]!==G_378 && arguments[TMP_1166]!==G_840 && arguments[TMP_1166]!==G_153 && arguments[TMP_1166]!==G_151 && arguments[TMP_1166]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1166].name); }
}
TMP_1167=lisp.callFunctionWithCallStack(G_625,L_TEST__857);
TMP_1168=G_1041.func(TMP_1167,L_SEQUENCE__858,G_380,L_FROM_END__859,G_151,L_START__860,G_153,L_END__861,G_840,L_COUNT__862,G_378,L_KEY__863);
return TMP_1168;
});
CL_COMMON_LISP_DELETE_IF_NOT=lisp.values1(F_DELETE_IF_NOT_1160);
let F_REMOVE_DUPLICATES_1169;
F_REMOVE_DUPLICATES_1169=(function(){
if(arguments.length < 1 || 13 < arguments.length) {
lisp.argumentsError(G_1170, arguments.length);
}
let TMP_1179;
let TMP_1178;
let L_KEY__871;
let L_END__870;
let L_START__869;
let L_TEST_NOT__868;
let L_TEST__867;
let L_FROM_END__866;
let L_SEQUENCE__865;
L_SEQUENCE__865=arguments[0];
let supplied_FROM_END__866;
for (let TMP_1171 = 1; TMP_1171 < arguments.length; TMP_1171 += 2) {
if(arguments[TMP_1171] === G_380){
supplied_FROM_END__866=arguments[TMP_1171+1];
break;
}
}
L_FROM_END__866=supplied_FROM_END__866 !== undefined ? supplied_FROM_END__866 : (lisp.values1(lisp.S_nil));
let supplied_TEST__867;
for (let TMP_1172 = 1; TMP_1172 < arguments.length; TMP_1172 += 2) {
if(arguments[TMP_1172] === G_581){
supplied_TEST__867=arguments[TMP_1172+1];
break;
}
}
L_TEST__867=supplied_TEST__867 !== undefined ? supplied_TEST__867 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__868;
for (let TMP_1173 = 1; TMP_1173 < arguments.length; TMP_1173 += 2) {
if(arguments[TMP_1173] === G_583){
supplied_TEST_NOT__868=arguments[TMP_1173+1];
break;
}
}
L_TEST_NOT__868=supplied_TEST_NOT__868 !== undefined ? supplied_TEST_NOT__868 : (lisp.values1(lisp.S_nil));
let supplied_START__869;
for (let TMP_1174 = 1; TMP_1174 < arguments.length; TMP_1174 += 2) {
if(arguments[TMP_1174] === G_151){
supplied_START__869=arguments[TMP_1174+1];
break;
}
}
L_START__869=supplied_START__869 !== undefined ? supplied_START__869 : (lisp.values1(0));
let supplied_END__870;
for (let TMP_1175 = 1; TMP_1175 < arguments.length; TMP_1175 += 2) {
if(arguments[TMP_1175] === G_153){
supplied_END__870=arguments[TMP_1175+1];
break;
}
}
L_END__870=supplied_END__870 !== undefined ? supplied_END__870 : (lisp.values1(lisp.S_nil));
let supplied_KEY__871;
for (let TMP_1176 = 1; TMP_1176 < arguments.length; TMP_1176 += 2) {
if(arguments[TMP_1176] === G_378){
supplied_KEY__871=arguments[TMP_1176+1];
break;
}
}
L_KEY__871=supplied_KEY__871 !== undefined ? supplied_KEY__871 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1177 = 1; TMP_1177 < arguments.length; TMP_1177 += 2) {
if(arguments[TMP_1177]!==G_378 && arguments[TMP_1177]!==G_153 && arguments[TMP_1177]!==G_151 && arguments[TMP_1177]!==G_583 && arguments[TMP_1177]!==G_581 && arguments[TMP_1177]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1177].name); }
}
TMP_1178=G_97.func(L_SEQUENCE__865);
TMP_1179=G_1180.func(TMP_1178,G_380,L_FROM_END__866,G_581,L_TEST__867,G_583,L_TEST_NOT__868,G_151,L_START__869,G_153,L_END__870,G_378,L_KEY__871);
return TMP_1179;
});
CL_COMMON_LISP_REMOVE_DUPLICATES=lisp.values1(F_REMOVE_DUPLICATES_1169);
let F_DELETE_DUPLICATES_LIST_1181;
F_DELETE_DUPLICATES_LIST_1181=(function(){
if(arguments.length !== 6) {
lisp.argumentsError(G_1182, arguments.length);
}
let L_G517__896;
let TMP_1209;
let L_G516__895;
let TMP_1208;
let TMP_1207;
let TMP_1206;
let TMP_1205;
let TMP_1204;
let TMP_1203;
let TMP_1202;
let TMP_1201;
let TMP_1200;
let TMP_1199;
let L_LIST__894;
let L_I__893;
let BLOCK_RESULT_NIL__892;
let F_MEMBER_LIST__891;
let TMP_1190;
let L_TAIL__885;
let TMP_1189;
let TMP_1188;
let L_SPLICE__884;
let L_HEAD__883;
let TMP_1187;
let TMP_1186;
let TMP_1185;
let TMP_1184;
let L_G501__881;
let TMP_1183;
let L_G500__880;
let L_KEY__878;
let L_END__877;
let L_START__876;
let L_TEST_NOT__875;
let L_TEST__874;
let L_LIST__873;
L_LIST__873=arguments[0];
L_TEST__874=arguments[1];
L_TEST_NOT__875=arguments[2];
L_START__876=arguments[3];
L_END__877=arguments[4];
L_KEY__878=arguments[5];
{
L_G500__880=lisp.values1(L_TEST__874);
if(lisp.values1(L_G500__880) !== lisp.S_nil){
TMP_1183=lisp.values1(L_TEST__874);
}else{
{
L_G501__881=lisp.values1(L_TEST_NOT__875);
if(lisp.values1(L_G501__881) !== lisp.S_nil){
TMP_1185=lisp.callFunctionWithCallStack(G_625,L_TEST_NOT__875);
TMP_1184=lisp.values1(TMP_1185);
}else{
TMP_1186=lisp.CL_symbolFunction(G_184);
TMP_1184=lisp.values1(TMP_1186);
}
}
TMP_1183=lisp.values1(lisp.values1(TMP_1184));
}
}
L_TEST__874=lisp.values1(lisp.values1(TMP_1183));
{
TMP_1187=lisp.CL_cons(lisp.S_nil,L_LIST__873);
L_HEAD__883=lisp.values1(TMP_1187);
L_SPLICE__884=lisp.values1(L_HEAD__883);
if(lisp.values1(L_END__877) !== lisp.S_nil){
TMP_1189=lisp.callFunctionWithCallStack(G_29,L_END__877,L_LIST__873);
TMP_1188=lisp.values1(TMP_1189);
}else{
TMP_1188=lisp.values1(lisp.S_nil);
}
L_TAIL__885=lisp.values1(TMP_1188);
{
TMP_1190=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G509__890;
let TMP_1198;
let TMP_1197;
let TMP_1196;
let TMP_1195;
let TMP_1194;
let TMP_1193;
let L_ITEM__889;
let TMP_1192;
let L_X__888;
let TMP_1191;
let BLOCK_RESULT_NIL__887;
let L_LIST__886;
L_LIST__886=arguments[0];
BLOCK_NIL__887: for(;;){{
TMP_1191=lisp.callFunctionWithCallStack(G_36,L_LIST__886);
L_X__888=lisp.values1(TMP_1191);
TMP_1192=lisp.callFunctionWithCallStack(G_33,L_LIST__886);
L_ITEM__889=lisp.values1(TMP_1192);
for(;;){
TMP_1193=lisp.CL_eq(L_X__888,L_TAIL__885);
if(lisp.values1(TMP_1193) !== lisp.S_nil){
BLOCK_RESULT_NIL__887=lisp.values1(lisp.S_nil);
break BLOCK_NIL__887;
}else{
TMP_1194=lisp.callFunctionWithCallStack(G_351,L_KEY__878,L_ITEM__889);
TMP_1195=lisp.callFunctionWithCallStack(G_33,L_X__888);
TMP_1196=lisp.callFunctionWithCallStack(G_351,L_KEY__878,TMP_1195);
TMP_1197=lisp.CL_funcall(lisp.values1(L_TEST__874),TMP_1194,TMP_1196);
if(lisp.values1(TMP_1197) !== lisp.S_nil){
BLOCK_RESULT_NIL__887=lisp.values1(G_205);
break BLOCK_NIL__887;
}else{
}
{
TMP_1198=lisp.callFunctionWithCallStack(G_36,L_X__888);
L_G509__890=lisp.values1(TMP_1198);
L_X__888=lisp.values1(L_G509__890);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__887=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__887;
});
F_MEMBER_LIST__891=lisp.values1(TMP_1190);
BLOCK_NIL__892: for(;;){{
L_I__893=lisp.values1(0);
L_LIST__894=lisp.values1(L_LIST__873);
for(;;){
TMP_1199=lisp.callFunctionWithCallStack(G_331,L_LIST__894);
if(lisp.values1(TMP_1199) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_457,L_SPLICE__884,lisp.S_nil);
TMP_1200=lisp.callFunctionWithCallStack(G_36,L_HEAD__883);
BLOCK_RESULT_NIL__892=TMP_1200;
break BLOCK_NIL__892;
}else{
TMP_1201=lisp.callFunctionWithCallStack(G_513,L_START__876,L_I__893);
if(lisp.values1(TMP_1201) !== lisp.S_nil){
TMP_1203=lisp.callFunctionWithCallStack(G_5,L_I__893,L_END__877);
if(lisp.values1(TMP_1203) !== lisp.S_nil){
TMP_1205=F_MEMBER_LIST__891(L_LIST__894);
TMP_1204=lisp.values1(TMP_1205);
}else{
TMP_1204=lisp.values1(lisp.S_nil);
}
TMP_1202=lisp.values1(TMP_1204);
}else{
TMP_1202=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1202) !== lisp.S_nil){
}else{
TMP_1206=lisp.callFunctionWithCallStack(G_457,L_SPLICE__884,L_LIST__894);
TMP_1207=lisp.callFunctionWithCallStack(G_36,TMP_1206);
L_SPLICE__884=lisp.values1(TMP_1207);
}
{
TMP_1208=lisp.callFunctionWithCallStack(G_45,L_I__893);
L_G516__895=lisp.values1(TMP_1208);
TMP_1209=lisp.callFunctionWithCallStack(G_36,L_LIST__894);
L_G517__896=lisp.values1(TMP_1209);
L_I__893=lisp.values1(L_G516__895);
L_LIST__894=lisp.values1(L_G517__896);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__892=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
}
return BLOCK_RESULT_NIL__892;
});
CL_COMMON_LISP_DELETE_DUPLICATES_LIST=lisp.values1(F_DELETE_DUPLICATES_LIST_1181);
let F_DELETE_DUPLICATES_VECTOR_1210;
F_DELETE_DUPLICATES_VECTOR_1210=(function(){
if(arguments.length !== 6) {
lisp.argumentsError(G_1211, arguments.length);
}
let TMP_1241;
let L_G_STORE541__925;
let L_G540__924;
let TMP_1240;
let L_G539__923;
let TMP_1239;
let L_G538__922;
let TMP_1238;
let L_G537__921;
let TMP_1237;
let L_G_STORE536__920;
let L_G535__919;
let L_G534__918;
let TMP_1236;
let TMP_1235;
let TMP_1234;
let TMP_1233;
let TMP_1232;
let TMP_1231;
let TMP_1230;
let L_ITEM__917;
let TMP_1229;
let TMP_1228;
let L_I__916;
let BLOCK_RESULT_NIL__915;
let L_J__914;
let L_LENGTH__913;
let TMP_1227;
let F_MEMBER_VECTOR__912;
let TMP_1212;
let L_KEY__902;
let L_END__901;
let L_START__900;
let L_TEST_NOT__899;
let L_TEST__898;
let L_VECTOR__897;
L_VECTOR__897=arguments[0];
L_TEST__898=arguments[1];
L_TEST_NOT__899=arguments[2];
L_START__900=arguments[3];
L_END__901=arguments[4];
L_KEY__902=arguments[5];
{
TMP_1212=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G527__911;
let TMP_1226;
let TMP_1225;
let TMP_1224;
let TMP_1223;
let TMP_1222;
let TMP_1221;
let TMP_1220;
let TMP_1219;
let TMP_1218;
let L_G525__909;
let TMP_1217;
let TMP_1216;
let TMP_1215;
let TMP_1214;
let L_G524__908;
let TMP_1213;
let L_I__907;
let BLOCK_RESULT_NIL__906;
let L_START__905;
let L_ITEM__904;
L_ITEM__904=arguments[0];
L_START__905=arguments[1];
BLOCK_NIL__906: for(;;){{
L_I__907=lisp.values1(L_START__905);
for(;;){
TMP_1213=lisp.callFunctionWithCallStack(G_31,L_I__907,L_END__901);
if(lisp.values1(TMP_1213) !== lisp.S_nil){
BLOCK_RESULT_NIL__906=lisp.values1(lisp.S_nil);
break BLOCK_NIL__906;
}else{
{
L_G524__908=lisp.values1(L_TEST__898);
if(lisp.values1(L_G524__908) !== lisp.S_nil){
TMP_1215=lisp.callFunctionWithCallStack(G_57,L_VECTOR__897,L_I__907);
TMP_1216=lisp.callFunctionWithCallStack(G_351,L_KEY__902,TMP_1215);
TMP_1217=lisp.CL_funcall(lisp.values1(L_TEST__898),L_ITEM__904,TMP_1216);
TMP_1214=lisp.values1(TMP_1217);
}else{
{
L_G525__909=lisp.values1(L_TEST_NOT__899);
if(lisp.values1(L_G525__909) !== lisp.S_nil){
TMP_1219=lisp.callFunctionWithCallStack(G_57,L_VECTOR__897,L_I__907);
TMP_1220=lisp.callFunctionWithCallStack(G_351,L_KEY__902,TMP_1219);
TMP_1221=lisp.CL_funcall(lisp.values1(L_TEST_NOT__899),L_ITEM__904,TMP_1220);
TMP_1222=lisp.callFunctionWithCallStack(G_245,TMP_1221);
TMP_1218=lisp.values1(TMP_1222);
}else{
TMP_1223=lisp.callFunctionWithCallStack(G_57,L_VECTOR__897,L_I__907);
TMP_1224=lisp.callFunctionWithCallStack(G_351,L_KEY__902,TMP_1223);
TMP_1225=lisp.callFunctionWithCallStack(G_184,L_ITEM__904,TMP_1224);
TMP_1218=lisp.values1(TMP_1225);
}
}
TMP_1214=lisp.values1(lisp.values1(TMP_1218));
}
}
if(lisp.values1(lisp.values1(TMP_1214)) !== lisp.S_nil){
BLOCK_RESULT_NIL__906=lisp.values1(G_205);
break BLOCK_NIL__906;
}else{
}
{
TMP_1226=lisp.callFunctionWithCallStack(G_45,L_I__907);
L_G527__911=lisp.values1(TMP_1226);
L_I__907=lisp.values1(L_G527__911);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__906=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__906;
});
F_MEMBER_VECTOR__912=lisp.values1(TMP_1212);
{
TMP_1227=G_20.func(L_VECTOR__897);
L_LENGTH__913=lisp.values1(TMP_1227);
L_J__914=lisp.values1(0);
BLOCK_NIL__915: for(;;){{
L_I__916=lisp.values1(0);
for(;;){
TMP_1228=lisp.callFunctionWithCallStack(G_31,L_I__916,L_LENGTH__913);
if(lisp.values1(TMP_1228) !== lisp.S_nil){
BLOCK_RESULT_NIL__915=lisp.values1(lisp.S_nil);
break BLOCK_NIL__915;
}else{
{
TMP_1229=lisp.callFunctionWithCallStack(G_57,L_VECTOR__897,L_I__916);
L_ITEM__917=lisp.values1(TMP_1229);
TMP_1230=lisp.callFunctionWithCallStack(G_513,L_START__900,L_I__916);
if(lisp.values1(TMP_1230) !== lisp.S_nil){
TMP_1232=lisp.callFunctionWithCallStack(G_5,L_I__916,L_END__901);
if(lisp.values1(TMP_1232) !== lisp.S_nil){
TMP_1234=lisp.callFunctionWithCallStack(G_351,L_KEY__902,L_ITEM__917);
TMP_1235=lisp.callFunctionWithCallStack(G_45,L_I__916);
TMP_1236=F_MEMBER_VECTOR__912(TMP_1234,TMP_1235);
TMP_1233=lisp.values1(TMP_1236);
}else{
TMP_1233=lisp.values1(lisp.S_nil);
}
TMP_1231=lisp.values1(TMP_1233);
}else{
TMP_1231=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1231) !== lisp.S_nil){
}else{
{
L_G534__918=lisp.values1(L_VECTOR__897);
L_G535__919=lisp.values1(L_J__914);
L_G_STORE536__920=lisp.values1(L_ITEM__917);
lisp.callFunctionWithCallStack(G_132,L_G_STORE536__920,L_G534__918,L_G535__919);
}
{
TMP_1237=lisp.callFunctionWithCallStack(G_285,L_J__914,1);
L_G537__921=lisp.values1(TMP_1237);
L_J__914=lisp.values1(L_G537__921);
}
}
}
{
TMP_1238=lisp.callFunctionWithCallStack(G_45,L_I__916);
L_G538__922=lisp.values1(TMP_1238);
L_I__916=lisp.values1(L_G538__922);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__915=lisp.values1(lisp.S_nil);
break;
}
{
TMP_1239=lisp.callFunctionWithCallStack(G_325,L_VECTOR__897);
L_G539__923=lisp.values1(TMP_1239);
if(lisp.values1(L_G539__923) !== lisp.S_nil){
{
L_G540__924=lisp.values1(L_VECTOR__897);
L_G_STORE541__925=lisp.values1(L_J__914);
lisp.callFunctionWithCallStack(G_343,L_G_STORE541__925,L_G540__924);
}
TMP_1240=lisp.values1(L_VECTOR__897);
}else{
TMP_1241=G_242.func(L_VECTOR__897,0,L_J__914);
TMP_1240=TMP_1241;
}
}
}
}
return TMP_1240;
});
CL_COMMON_LISP_DELETE_DUPLICATES_VECTOR=lisp.values1(F_DELETE_DUPLICATES_VECTOR_1210);
let F_DELETE_DUPLICATES_1242;
F_DELETE_DUPLICATES_1242=(function(){
if(arguments.length < 1 || 13 < arguments.length) {
lisp.argumentsError(G_1180, arguments.length);
}
let TMP_1268;
let TMP_1267;
let TMP_1266;
let L_G547__940;
let TMP_1265;
let TMP_1264;
let TMP_1263;
let L_G546__939;
let TMP_1262;
let TMP_1261;
let L_G545__938;
let TMP_1260;
let TMP_1259;
let TMP_1258;
let TMP_1257;
let TMP_1256;
let TMP_1255;
let L_G544__937;
let TMP_1254;
let L_G543__936;
let TMP_1253;
let L_LENGTH__935;
let TMP_1252;
let TMP_1251;
let TMP_1250;
let L_KEY__933;
let L_END__932;
let L_START__931;
let L_TEST_NOT__930;
let L_TEST__929;
let L_FROM_END__928;
let L_SEQUENCE__927;
L_SEQUENCE__927=arguments[0];
let supplied_FROM_END__928;
for (let TMP_1243 = 1; TMP_1243 < arguments.length; TMP_1243 += 2) {
if(arguments[TMP_1243] === G_380){
supplied_FROM_END__928=arguments[TMP_1243+1];
break;
}
}
L_FROM_END__928=supplied_FROM_END__928 !== undefined ? supplied_FROM_END__928 : (lisp.values1(lisp.S_nil));
let supplied_TEST__929;
for (let TMP_1244 = 1; TMP_1244 < arguments.length; TMP_1244 += 2) {
if(arguments[TMP_1244] === G_581){
supplied_TEST__929=arguments[TMP_1244+1];
break;
}
}
L_TEST__929=supplied_TEST__929 !== undefined ? supplied_TEST__929 : (lisp.values1(lisp.S_nil));
let supplied_TEST_NOT__930;
for (let TMP_1245 = 1; TMP_1245 < arguments.length; TMP_1245 += 2) {
if(arguments[TMP_1245] === G_583){
supplied_TEST_NOT__930=arguments[TMP_1245+1];
break;
}
}
L_TEST_NOT__930=supplied_TEST_NOT__930 !== undefined ? supplied_TEST_NOT__930 : (lisp.values1(lisp.S_nil));
let supplied_START__931;
for (let TMP_1246 = 1; TMP_1246 < arguments.length; TMP_1246 += 2) {
if(arguments[TMP_1246] === G_151){
supplied_START__931=arguments[TMP_1246+1];
break;
}
}
L_START__931=supplied_START__931 !== undefined ? supplied_START__931 : (lisp.values1(0));
let supplied_END__932;
for (let TMP_1247 = 1; TMP_1247 < arguments.length; TMP_1247 += 2) {
if(arguments[TMP_1247] === G_153){
supplied_END__932=arguments[TMP_1247+1];
break;
}
}
L_END__932=supplied_END__932 !== undefined ? supplied_END__932 : (lisp.values1(lisp.S_nil));
let supplied_KEY__933;
for (let TMP_1248 = 1; TMP_1248 < arguments.length; TMP_1248 += 2) {
if(arguments[TMP_1248] === G_378){
supplied_KEY__933=arguments[TMP_1248+1];
break;
}
}
L_KEY__933=supplied_KEY__933 !== undefined ? supplied_KEY__933 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1249 = 1; TMP_1249 < arguments.length; TMP_1249 += 2) {
if(arguments[TMP_1249]!==G_378 && arguments[TMP_1249]!==G_153 && arguments[TMP_1249]!==G_151 && arguments[TMP_1249]!==G_583 && arguments[TMP_1249]!==G_581 && arguments[TMP_1249]!==G_380) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1249].name); }
}
if(lisp.values1(L_END__932) !== lisp.S_nil){
}else{
TMP_1250=G_20.func(L_SEQUENCE__927);
L_END__932=lisp.values1(TMP_1250);
}
if(lisp.values1(L_FROM_END__928) !== lisp.S_nil){
{
TMP_1252=G_20.func(L_SEQUENCE__927);
L_LENGTH__935=lisp.values1(TMP_1252);
TMP_1253=G_291.func(L_SEQUENCE__927);
{
L_G543__936=lisp.values1(L_END__932);
if(lisp.values1(L_G543__936) !== lisp.S_nil){
TMP_1254=lisp.values1(L_G543__936);
}else{
{
L_G544__937=lisp.values1(L_LENGTH__935);
if(lisp.values1(L_G544__937) !== lisp.S_nil){
TMP_1255=lisp.values1(L_G544__937);
}else{
TMP_1255=lisp.values1(lisp.S_nil);
}
}
TMP_1254=lisp.values1(lisp.values1(TMP_1255));
}
}
TMP_1256=lisp.callFunctionWithCallStack(G_27,L_LENGTH__935,lisp.values1(TMP_1254));
TMP_1257=lisp.callFunctionWithCallStack(G_27,L_LENGTH__935,L_START__931);
TMP_1258=G_1180.func(TMP_1253,G_380,lisp.S_nil,G_581,L_TEST__929,G_583,L_TEST_NOT__930,G_151,TMP_1256,G_153,TMP_1257,G_378,L_KEY__933);
TMP_1259=G_291.func(TMP_1258);
}
TMP_1251=TMP_1259;
}else{
{
TMP_1260=lisp.callFunctionWithCallStack(G_78,L_SEQUENCE__927);
L_G545__938=lisp.values1(TMP_1260);
if(lisp.values1(L_G545__938) !== lisp.S_nil){
TMP_1261=lisp.values1(lisp.S_nil);
}else{
{
TMP_1262=lisp.callFunctionWithCallStack(G_17,L_SEQUENCE__927);
L_G546__939=lisp.values1(TMP_1262);
if(lisp.values1(L_G546__939) !== lisp.S_nil){
TMP_1264=G_1182.func(L_SEQUENCE__927,L_TEST__929,L_TEST_NOT__930,L_START__931,L_END__932,L_KEY__933);
TMP_1263=TMP_1264;
}else{
{
TMP_1265=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__927);
L_G547__940=lisp.values1(TMP_1265);
if(lisp.values1(L_G547__940) !== lisp.S_nil){
TMP_1267=G_1211.func(L_SEQUENCE__927,L_TEST__929,L_TEST_NOT__930,L_START__931,L_END__932,L_KEY__933);
TMP_1266=TMP_1267;
}else{
TMP_1268=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__927,G_72);
TMP_1266=TMP_1268;
}
}
TMP_1263=TMP_1266;
}
}
TMP_1261=TMP_1263;
}
}
TMP_1251=TMP_1261;
}
return TMP_1251;
});
CL_COMMON_LISP_DELETE_DUPLICATES=lisp.values1(F_DELETE_DUPLICATES_1242);
let F_EVERY_1269;
F_EVERY_1269=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1270, arguments.length);
}
let TMP_1281;
let TMP_1278;
let TMP_1275;
let TMP_1274;
let L_G549__946;
let TMP_1273;
let TMP_1272;
let L_MORE_SEQUENCES__944;
let L_SEQUENCE__943;
let L_FUNCTION__942;
L_FUNCTION__942=arguments[0];
L_SEQUENCE__943=arguments[1];
L_MORE_SEQUENCES__944=lisp.jsArrayToList(arguments, 2);
try {
{
TMP_1273=lisp.callFunctionWithCallStack(G_78,L_MORE_SEQUENCES__944);
L_G549__946=lisp.values1(TMP_1273);
if(lisp.values1(L_G549__946) !== lisp.S_nil){
TMP_1275=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1277;
let TMP_1276;
let L_X__947;
L_X__947=arguments[0];
TMP_1276=lisp.CL_funcall(lisp.values1(L_FUNCTION__942),L_X__947);
if(lisp.values1(TMP_1276) !== lisp.S_nil){
TMP_1277=lisp.values1(lisp.S_nil);
}else{
throw new lisp.BlockValue(G_1270,lisp.values1(lisp.S_nil));TMP_1277=lisp.values1(lisp.values1(lisp.S_nil));
}
return TMP_1277;
});
G_15.func(TMP_1275,L_SEQUENCE__943,lisp.S_nil,lisp.S_nil,lisp.S_nil,lisp.S_nil);
TMP_1274=lisp.values1(G_205);
}else{
TMP_1278=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1280;
let TMP_1279;
let L_ARGS__949;
L_ARGS__949=arguments[0];
TMP_1279=lisp.callFunctionWithCallStack(G_88,L_FUNCTION__942,L_ARGS__949);
if(lisp.values1(TMP_1279) !== lisp.S_nil){
TMP_1280=lisp.values1(lisp.S_nil);
}else{
throw new lisp.BlockValue(G_1270,lisp.values1(lisp.S_nil));TMP_1280=lisp.values1(lisp.values1(lisp.S_nil));
}
return TMP_1280;
});
TMP_1281=lisp.CL_cons(L_SEQUENCE__943,L_MORE_SEQUENCES__944);
G_76.func(TMP_1278,TMP_1281);
TMP_1274=lisp.values1(G_205);
}
}
TMP_1272=TMP_1274
}catch(E__1271){if(E__1271 instanceof lisp.BlockValue && E__1271.name === G_1270){TMP_1272=E__1271.value;}
else{throw E__1271;}
}
return TMP_1272;
});
CL_COMMON_LISP_EVERY=lisp.values1(F_EVERY_1269);
let F_SOME_1282;
F_SOME_1282=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1283, arguments.length);
}
let TMP_1294;
let TMP_1291;
let TMP_1288;
let TMP_1287;
let L_G551__954;
let TMP_1286;
let TMP_1285;
let L_MORE_SEQUENCES__952;
let L_SEQUENCE__951;
let L_FUNCTION__950;
L_FUNCTION__950=arguments[0];
L_SEQUENCE__951=arguments[1];
L_MORE_SEQUENCES__952=lisp.jsArrayToList(arguments, 2);
try {
{
TMP_1286=lisp.callFunctionWithCallStack(G_78,L_MORE_SEQUENCES__952);
L_G551__954=lisp.values1(TMP_1286);
if(lisp.values1(L_G551__954) !== lisp.S_nil){
TMP_1288=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1290;
let TMP_1289;
let L_X__955;
L_X__955=arguments[0];
TMP_1289=lisp.CL_funcall(lisp.values1(L_FUNCTION__950),L_X__955);
if(lisp.values1(TMP_1289) !== lisp.S_nil){
throw new lisp.BlockValue(G_1283,lisp.values1(G_205));TMP_1290=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_1290=lisp.values1(lisp.S_nil);
}
return TMP_1290;
});
G_15.func(TMP_1288,L_SEQUENCE__951,lisp.S_nil,lisp.S_nil,lisp.S_nil,lisp.S_nil);
TMP_1287=lisp.values1(lisp.S_nil);
}else{
TMP_1291=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1293;
let TMP_1292;
let L_ARGS__957;
L_ARGS__957=arguments[0];
TMP_1292=lisp.callFunctionWithCallStack(G_88,L_FUNCTION__950,L_ARGS__957);
if(lisp.values1(TMP_1292) !== lisp.S_nil){
throw new lisp.BlockValue(G_1283,lisp.values1(G_205));TMP_1293=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_1293=lisp.values1(lisp.S_nil);
}
return TMP_1293;
});
TMP_1294=lisp.CL_cons(L_SEQUENCE__951,L_MORE_SEQUENCES__952);
G_76.func(TMP_1291,TMP_1294);
TMP_1287=lisp.values1(lisp.S_nil);
}
}
TMP_1285=TMP_1287
}catch(E__1284){if(E__1284 instanceof lisp.BlockValue && E__1284.name === G_1283){TMP_1285=E__1284.value;}
else{throw E__1284;}
}
return TMP_1285;
});
CL_COMMON_LISP_SOME=lisp.values1(F_SOME_1282);
let F_NOTANY_1295;
F_NOTANY_1295=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1296, arguments.length);
}
let TMP_1299;
let TMP_1298;
let TMP_1297;
let L_MORE_SEQUENCES__960;
let L_SEQUENCE__959;
let L_FUNCTION__958;
L_FUNCTION__958=arguments[0];
L_SEQUENCE__959=arguments[1];
L_MORE_SEQUENCES__960=lisp.jsArrayToList(arguments, 2);
TMP_1297=lisp.CL_symbolFunction(G_1283);
TMP_1298=lisp.callFunctionWithCallStack(G_88,TMP_1297,L_FUNCTION__958,L_SEQUENCE__959,L_MORE_SEQUENCES__960);
TMP_1299=lisp.callFunctionWithCallStack(G_245,TMP_1298);
return TMP_1299;
});
CL_COMMON_LISP_NOTANY=lisp.values1(F_NOTANY_1295);
// initialize symbols
G_3 = lisp.intern('CHECK-BOTH-BOUNDS', 'COMMON-LISP');
G_5 = lisp.intern('<', 'COMMON-LISP');
G_11 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_13 = lisp.intern('ERROR', 'COMMON-LISP');
G_15 = lisp.intern('MAP-SEQUENCE', 'COMMON-LISP');
G_17 = lisp.intern('LISTP', 'COMMON-LISP');
G_20 = lisp.intern('LENGTH', 'COMMON-LISP');
G_25 = lisp.intern('REVERSE-LIST', 'COMMON-LISP');
G_27 = lisp.intern('-', 'COMMON-LISP');
G_29 = lisp.intern('NTHCDR', 'COMMON-LISP');
G_31 = lisp.intern('=', 'COMMON-LISP');
G_33 = lisp.intern('CAR', 'COMMON-LISP');
G_36 = lisp.intern('CDR', 'COMMON-LISP');
G_38 = lisp.intern('1-', 'COMMON-LISP');
G_45 = lisp.intern('1+', 'COMMON-LISP');
G_47 = lisp.intern('VECTORP', 'COMMON-LISP');
G_57 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_72 = lisp.intern('SEQUENCE', 'COMMON-LISP');
G_74 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_76 = lisp.intern('MAP-SEQUENCES', 'COMMON-LISP');
G_78 = lisp.intern('NULL', 'COMMON-LISP');
G_81 = lisp.intern('COPY-LIST', 'COMMON-LISP');
G_82 = lisp.intern('MIN', 'COMMON-LISP');
G_86 = lisp.intern('%MAPCAR', 'SYSTEM');
G_88 = lisp.intern('APPLY', 'COMMON-LISP');
G_90 = lisp.intern('>=', 'COMMON-LISP');
G_93 = lisp.intern('ELT', 'COMMON-LISP');
G_97 = lisp.intern('COPY-SEQ', 'COMMON-LISP');
G_104 = lisp.intern('ELEMENT-TYPE', 'KEYWORD');
G_106 = lisp.intern('ARRAY-ELEMENT-TYPE', 'COMMON-LISP');
G_107 = lisp.intern('INITIAL-CONTENTS', 'KEYWORD');
G_109 = lisp.intern('MAKE-ARRAY', 'COMMON-LISP');
G_122 = lisp.intern('(SETF ELT)', 'COMMON-LISP');
G_128 = lisp.intern('RPLACA', 'COMMON-LISP');
G_132 = lisp.intern('(SETF AREF)', 'COMMON-LISP');
G_134 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_138 = lisp.intern('GENSYM', 'COMMON-LISP');
G_142 = lisp.intern('LIST', 'COMMON-LISP');
G_144 = lisp.intern('LIST*', 'COMMON-LISP');
G_147 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_150 = lisp.intern('FILL', 'COMMON-LISP');
G_151 = lisp.intern('START', 'KEYWORD');
G_153 = lisp.intern('END', 'KEYWORD');
G_171 = lisp.intern('MAKE-SEQUENCE', 'COMMON-LISP');
G_172 = lisp.intern('INITIAL-ELEMENT', 'KEYWORD');
G_176 = lisp.intern('CANONICALIZE-TYPE', 'COMMON-LISP');
G_184 = lisp.intern('EQL', 'COMMON-LISP');
G_187 = lisp.intern('ZEROP', 'COMMON-LISP');
G_188 = lisp.intern('CONS', 'COMMON-LISP');
G_190 = lisp.intern('MEMBER', 'COMMON-LISP');
G_197 = lisp.intern('MAKE-LIST', 'COMMON-LISP');
G_199 = lisp.intern('ARRAY', 'COMMON-LISP');
G_205 = lisp.intern('T', 'COMMON-LISP');
G_212 = lisp.intern('SUBSEQ-LIST', 'COMMON-LISP');
G_228 = lisp.intern('(SETF CDR)', 'COMMON-LISP');
G_230 = lisp.intern('SUBSEQ-VECTOR', 'COMMON-LISP');
G_242 = lisp.intern('SUBSEQ', 'COMMON-LISP');
G_245 = lisp.intern('NOT', 'COMMON-LISP');
G_248 = lisp.intern('>', 'COMMON-LISP');
G_256 = lisp.intern('(SETF SUBSEQ)', 'COMMON-LISP');
G_258 = lisp.intern('START1', 'KEYWORD');
G_259 = lisp.intern('END1', 'KEYWORD');
G_260 = lisp.intern('REPLACE', 'COMMON-LISP');
G_272 = lisp.intern('MAP', 'COMMON-LISP');
G_285 = lisp.intern('+', 'COMMON-LISP');
G_291 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_309 = lisp.intern('MAP-INTO', 'COMMON-LISP');
G_315 = lisp.intern('END', 'COMMON-LISP');
G_325 = lisp.intern('ARRAY-HAS-FILL-POINTER-P', 'COMMON-LISP');
G_328 = lisp.intern('ARRAY-TOTAL-SIZE', 'COMMON-LISP');
G_331 = lisp.intern('ENDP', 'COMMON-LISP');
G_343 = lisp.intern('(SETF FILL-POINTER)', 'COMMON-LISP');
G_346 = lisp.intern('REDUCE-LIST', 'COMMON-LISP');
G_351 = lisp.intern('APPLY-KEY', 'COMMON-LISP');
G_363 = lisp.intern('REDUCE-LIST-FROM-END', 'COMMON-LISP');
G_377 = lisp.intern('REDUCE', 'COMMON-LISP');
G_378 = lisp.intern('KEY', 'KEYWORD');
G_380 = lisp.intern('FROM-END', 'KEYWORD');
G_384 = lisp.intern('INITIAL-VALUE', 'KEYWORD');
G_422 = lisp.intern('LIST-LENGTH', 'COMMON-LISP');
G_426 = lisp.intern('VECTOR-LENGTH', 'COMMON-LISP');
G_434 = lisp.intern('REVERSE-VECTOR', 'COMMON-LISP');
G_444 = lisp.intern('REVERSE', 'COMMON-LISP');
G_453 = lisp.intern('NREVERSE-LIST', 'COMMON-LISP');
G_456 = lisp.intern('ATOM', 'COMMON-LISP');
G_457 = lisp.intern('RPLACD', 'COMMON-LISP');
G_462 = lisp.intern('NREVERSE-VECTOR', 'COMMON-LISP');
G_465 = lisp.intern('FLOOR', 'COMMON-LISP');
G_481 = lisp.intern('SORT', 'COMMON-LISP');
G_485 = lisp.intern('STABLE-SORT', 'COMMON-LISP');
G_487 = lisp.intern('STABLE-SORT-LIST', 'COMMON-LISP');
G_497 = lisp.intern('NCONC', 'COMMON-LISP');
G_513 = lisp.intern('<=', 'COMMON-LISP');
G_523 = lisp.intern('STABLE-SORT-VECTOR', 'COMMON-LISP');
G_576 = lisp.intern('FIND', 'COMMON-LISP');
G_581 = lisp.intern('TEST', 'KEYWORD');
G_583 = lisp.intern('TEST-NOT', 'KEYWORD');
G_605 = lisp.intern('FIND-IF', 'COMMON-LISP');
G_618 = lisp.intern('FIND-IF-NOT', 'COMMON-LISP');
G_625 = lisp.intern('COMPLEMENT', 'COMMON-LISP');
G_628 = lisp.intern('POSITION', 'COMMON-LISP');
G_668 = lisp.intern('POSITION-IF', 'COMMON-LISP');
G_688 = lisp.intern('POSITION-IF-NOT', 'COMMON-LISP');
G_697 = lisp.intern('COUNT', 'COMMON-LISP');
G_713 = lisp.intern('COUNT-IF', 'COMMON-LISP');
G_726 = lisp.intern('COUNT-IF-NOT', 'COMMON-LISP');
G_735 = lisp.intern('SEARCH', 'COMMON-LISP');
G_741 = lisp.intern('START2', 'KEYWORD');
G_744 = lisp.intern('END2', 'KEYWORD');
G_754 = lisp.intern('MISMATCH', 'COMMON-LISP');
G_834 = lisp.intern('SUBSTITUTE', 'COMMON-LISP');
G_840 = lisp.intern('COUNT', 'KEYWORD');
G_852 = lisp.intern('SUBSTITUTE-IF', 'COMMON-LISP');
G_880 = lisp.intern('SUBSTITUTE-IF-NOT', 'COMMON-LISP');
G_890 = lisp.intern('NSUBSTITUTE', 'COMMON-LISP');
G_907 = lisp.intern('NSUBSTITUTE-IF', 'COMMON-LISP');
G_934 = lisp.intern('NSUBSTITUTE-IF-NOT', 'COMMON-LISP');
G_944 = lisp.intern('CONCATENATE', 'COMMON-LISP');
G_958 = lisp.intern('SEQUENCE-TO-LIST', 'COMMON-LISP');
G_963 = lisp.intern('IDENTITY', 'COMMON-LISP');
G_968 = lisp.intern('MERGE-LISTS', 'COMMON-LISP');
G_989 = lisp.intern('MERGE', 'COMMON-LISP');
G_1006 = lisp.intern('DATUM', 'KEYWORD');
G_1007 = lisp.intern('EXPECTED-TYPE', 'KEYWORD');
G_1019 = lisp.intern('REMOVE', 'COMMON-LISP');
G_1030 = lisp.intern('DELETE', 'COMMON-LISP');
G_1032 = lisp.intern('REMOVE-IF', 'COMMON-LISP');
G_1041 = lisp.intern('DELETE-IF', 'COMMON-LISP');
G_1043 = lisp.intern('REMOVE-IF-NOT', 'COMMON-LISP');
G_1052 = lisp.intern('DELETE-IF-NOT', 'COMMON-LISP');
G_1071 = lisp.intern('DELETE-IF-LIST', 'COMMON-LISP');
G_1111 = lisp.intern('TRIM-VECTOR', 'COMMON-LISP');
G_1114 = lisp.intern('DELETE-IF-VECTOR-1', 'COMMON-LISP');
G_1133 = lisp.intern('DELETE-IF-VECTOR', 'COMMON-LISP');
G_1152 = lisp.intern('MINUSP', 'COMMON-LISP');
G_1170 = lisp.intern('REMOVE-DUPLICATES', 'COMMON-LISP');
G_1180 = lisp.intern('DELETE-DUPLICATES', 'COMMON-LISP');
G_1182 = lisp.intern('DELETE-DUPLICATES-LIST', 'COMMON-LISP');
G_1211 = lisp.intern('DELETE-DUPLICATES-VECTOR', 'COMMON-LISP');
G_1270 = lisp.intern('EVERY', 'COMMON-LISP');
G_1283 = lisp.intern('SOME', 'COMMON-LISP');
G_1296 = lisp.intern('NOTANY', 'COMMON-LISP');
G_1300 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_CHECK_BOTH_BOUNDS.lisp_name = 'CHECK-BOTH-BOUNDS'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_CHECK_BOTH_BOUNDS);
CL_COMMON_LISP_MAP_SEQUENCE.lisp_name = 'MAP-SEQUENCE'
lisp.setSymbolFunction(G_15, CL_COMMON_LISP_MAP_SEQUENCE);
CL_COMMON_LISP_MAP_SEQUENCES.lisp_name = 'MAP-SEQUENCES'
lisp.setSymbolFunction(G_76, CL_COMMON_LISP_MAP_SEQUENCES);
CL_COMMON_LISP_COPY_SEQ.lisp_name = 'COPY-SEQ'
lisp.setSymbolFunction(G_97, CL_COMMON_LISP_COPY_SEQ);
CL_COMMON_LISP_ELT.lisp_name = 'ELT'
lisp.setSymbolFunction(G_93, CL_COMMON_LISP_ELT);
TMP_123=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_133;
let TMP_131;
let L_G_STORE75__79;
let L_G74__78;
let L_G73__77;
let TMP_130;
let L_G72__76;
let TMP_129;
let TMP_127;
let L_RESULT__75;
let TMP_126;
let TMP_125;
let L_G71__74;
let TMP_124;
let L_INDEX__72;
let L_SEQUENCE__71;
let L_VALUE__70;
L_VALUE__70=arguments[0];
L_SEQUENCE__71=arguments[1];
L_INDEX__72=arguments[2];
{
TMP_124=lisp.CL_consp(L_SEQUENCE__71);
L_G71__74=lisp.values1(TMP_124);
if(lisp.values1(L_G71__74) !== lisp.S_nil){
{
TMP_126=lisp.callFunctionWithCallStack(G_29,L_INDEX__72,L_SEQUENCE__71);
L_RESULT__75=lisp.values1(TMP_126);
TMP_127=lisp.callFunctionWithCallStack(G_128,L_RESULT__75,L_VALUE__70);
}
TMP_125=TMP_127;
}else{
{
TMP_129=lisp.callFunctionWithCallStack(G_47,L_SEQUENCE__71);
L_G72__76=lisp.values1(TMP_129);
if(lisp.values1(L_G72__76) !== lisp.S_nil){
{
L_G73__77=lisp.values1(L_SEQUENCE__71);
L_G74__78=lisp.values1(L_INDEX__72);
L_G_STORE75__79=lisp.values1(L_VALUE__70);
TMP_131=lisp.callFunctionWithCallStack(G_132,L_G_STORE75__79,L_G73__77,L_G74__78);
}
TMP_130=TMP_131;
}else{
TMP_133=lisp.callFunctionWithCallStack(G_74,L_SEQUENCE__71,G_72);
TMP_130=TMP_133;
}
}
TMP_125=TMP_130;
}
}
return TMP_125;
});
lisp.CL_setSymbolFunction(G_122,TMP_123);
TMP_135=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_146;
let TMP_145;
let TMP_143;
let TMP_141;
let L_STORE68__87;
let TMP_140;
let L_GENSYMS66__86;
let TMP_139;
let TMP_136;
let L_ARGS67__84;
let L_G78__82;
let L_G77__81;
L_G77__81=arguments[0];
{
L_G78__82=lisp.values1(L_G77__81);
{
L_ARGS67__84=lisp.values1(L_G78__82);
{
TMP_136=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_137;
let L_X__85;
L_X__85=arguments[0];
TMP_137=lisp.callFunctionWithCallStack(G_138);
return TMP_137;
});
TMP_139=lisp.callFunctionWithCallStack(G_86,TMP_136,L_ARGS67__84);
L_GENSYMS66__86=lisp.values1(TMP_139);
TMP_140=lisp.callFunctionWithCallStack(G_138,G_11.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE68__87=lisp.values1(TMP_140);
TMP_141=lisp.callFunctionWithCallStack(G_142,L_STORE68__87);
TMP_143=lisp.callFunctionWithCallStack(G_144,G_122,L_STORE68__87,L_GENSYMS66__86);
TMP_145=lisp.callFunctionWithCallStack(G_144,G_93,L_GENSYMS66__86);
TMP_146=lisp.CL_values(L_GENSYMS66__86,L_ARGS67__84,TMP_141,TMP_143,TMP_145);
}
}
}
return TMP_146;
});
lisp.CL_put(G_93,G_134,TMP_135);
TMP_148=lisp.CL_symbolFunction(G_122);
lisp.CL_put(G_93,G_147,TMP_148);
CL_COMMON_LISP_FILL.lisp_name = 'FILL'
lisp.setSymbolFunction(G_150, CL_COMMON_LISP_FILL);
CL_COMMON_LISP_MAKE_SEQUENCE.lisp_name = 'MAKE-SEQUENCE'
lisp.setSymbolFunction(G_171, CL_COMMON_LISP_MAKE_SEQUENCE);
CL_COMMON_LISP_SUBSEQ_LIST.lisp_name = 'SUBSEQ-LIST'
lisp.setSymbolFunction(G_212, CL_COMMON_LISP_SUBSEQ_LIST);
CL_COMMON_LISP_SUBSEQ_VECTOR.lisp_name = 'SUBSEQ-VECTOR'
lisp.setSymbolFunction(G_230, CL_COMMON_LISP_SUBSEQ_VECTOR);
CL_COMMON_LISP_SUBSEQ.lisp_name = 'SUBSEQ'
lisp.setSymbolFunction(G_242, CL_COMMON_LISP_SUBSEQ);
TMP_257=(function(){
if(arguments.length < 3 || 4 < arguments.length) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_END__160;
let L_START__159;
let L_SEQUENCE__158;
let L_NEW_SUBSEQUENCE__157;
L_NEW_SUBSEQUENCE__157=arguments[0];
L_SEQUENCE__158=arguments[1];
L_START__159=arguments[2];
L_END__160=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
G_260.func(L_SEQUENCE__158,L_NEW_SUBSEQUENCE__157,G_258,L_START__159,G_259,L_END__160);
return lisp.values1(L_NEW_SUBSEQUENCE__157);
});
lisp.CL_setSymbolFunction(G_256,TMP_257);
TMP_261=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_269;
let TMP_268;
let TMP_267;
let TMP_266;
let L_STORE131__168;
let TMP_265;
let L_GENSYMS129__167;
let TMP_264;
let TMP_262;
let L_ARGS130__165;
let L_G135__163;
let L_G134__162;
L_G134__162=arguments[0];
{
L_G135__163=lisp.values1(L_G134__162);
{
L_ARGS130__165=lisp.values1(L_G135__163);
{
TMP_262=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_263;
let L_X__166;
L_X__166=arguments[0];
TMP_263=lisp.callFunctionWithCallStack(G_138);
return TMP_263;
});
TMP_264=lisp.callFunctionWithCallStack(G_86,TMP_262,L_ARGS130__165);
L_GENSYMS129__167=lisp.values1(TMP_264);
TMP_265=lisp.callFunctionWithCallStack(G_138,G_11.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE131__168=lisp.values1(TMP_265);
TMP_266=lisp.callFunctionWithCallStack(G_142,L_STORE131__168);
TMP_267=lisp.callFunctionWithCallStack(G_144,G_256,L_STORE131__168,L_GENSYMS129__167);
TMP_268=lisp.callFunctionWithCallStack(G_144,G_242,L_GENSYMS129__167);
TMP_269=lisp.CL_values(L_GENSYMS129__167,L_ARGS130__165,TMP_266,TMP_267,TMP_268);
}
}
}
return TMP_269;
});
lisp.CL_put(G_242,G_134,TMP_261);
TMP_270=lisp.CL_symbolFunction(G_256);
lisp.CL_put(G_242,G_147,TMP_270);
CL_COMMON_LISP_MAP.lisp_name = 'MAP'
lisp.setSymbolFunction(G_272, CL_COMMON_LISP_MAP);
CL_COMMON_LISP_MAP_INTO.lisp_name = 'MAP-INTO'
lisp.setSymbolFunction(G_309, CL_COMMON_LISP_MAP_INTO);
CL_COMMON_LISP_REDUCE_LIST.lisp_name = 'REDUCE-LIST'
lisp.setSymbolFunction(G_346, CL_COMMON_LISP_REDUCE_LIST);
CL_COMMON_LISP_REDUCE_LIST_FROM_END.lisp_name = 'REDUCE-LIST-FROM-END'
lisp.setSymbolFunction(G_363, CL_COMMON_LISP_REDUCE_LIST_FROM_END);
CL_COMMON_LISP_REDUCE.lisp_name = 'REDUCE'
lisp.setSymbolFunction(G_377, CL_COMMON_LISP_REDUCE);
CL_COMMON_LISP_LENGTH.lisp_name = 'LENGTH'
lisp.setSymbolFunction(G_20, CL_COMMON_LISP_LENGTH);
CL_COMMON_LISP_REVERSE_LIST.lisp_name = 'REVERSE-LIST'
lisp.setSymbolFunction(G_25, CL_COMMON_LISP_REVERSE_LIST);
CL_COMMON_LISP_REVERSE_VECTOR.lisp_name = 'REVERSE-VECTOR'
lisp.setSymbolFunction(G_434, CL_COMMON_LISP_REVERSE_VECTOR);
CL_COMMON_LISP_REVERSE.lisp_name = 'REVERSE'
lisp.setSymbolFunction(G_444, CL_COMMON_LISP_REVERSE);
CL_COMMON_LISP_NREVERSE_LIST.lisp_name = 'NREVERSE-LIST'
lisp.setSymbolFunction(G_453, CL_COMMON_LISP_NREVERSE_LIST);
CL_COMMON_LISP_NREVERSE_VECTOR.lisp_name = 'NREVERSE-VECTOR'
lisp.setSymbolFunction(G_462, CL_COMMON_LISP_NREVERSE_VECTOR);
CL_COMMON_LISP_NREVERSE.lisp_name = 'NREVERSE'
lisp.setSymbolFunction(G_291, CL_COMMON_LISP_NREVERSE);
CL_COMMON_LISP_SORT.lisp_name = 'SORT'
lisp.setSymbolFunction(G_481, CL_COMMON_LISP_SORT);
CL_COMMON_LISP_STABLE_SORT_LIST.lisp_name = 'STABLE-SORT-LIST'
lisp.setSymbolFunction(G_487, CL_COMMON_LISP_STABLE_SORT_LIST);
CL_COMMON_LISP_STABLE_SORT_VECTOR.lisp_name = 'STABLE-SORT-VECTOR'
lisp.setSymbolFunction(G_523, CL_COMMON_LISP_STABLE_SORT_VECTOR);
CL_COMMON_LISP_STABLE_SORT.lisp_name = 'STABLE-SORT'
lisp.setSymbolFunction(G_485, CL_COMMON_LISP_STABLE_SORT);
CL_COMMON_LISP_FIND.lisp_name = 'FIND'
lisp.setSymbolFunction(G_576, CL_COMMON_LISP_FIND);
CL_COMMON_LISP_FIND_IF.lisp_name = 'FIND-IF'
lisp.setSymbolFunction(G_605, CL_COMMON_LISP_FIND_IF);
CL_COMMON_LISP_FIND_IF_NOT.lisp_name = 'FIND-IF-NOT'
lisp.setSymbolFunction(G_618, CL_COMMON_LISP_FIND_IF_NOT);
CL_COMMON_LISP_POSITION.lisp_name = 'POSITION'
lisp.setSymbolFunction(G_628, CL_COMMON_LISP_POSITION);
CL_COMMON_LISP_POSITION_IF.lisp_name = 'POSITION-IF'
lisp.setSymbolFunction(G_668, CL_COMMON_LISP_POSITION_IF);
CL_COMMON_LISP_POSITION_IF_NOT.lisp_name = 'POSITION-IF-NOT'
lisp.setSymbolFunction(G_688, CL_COMMON_LISP_POSITION_IF_NOT);
CL_COMMON_LISP_COUNT.lisp_name = 'COUNT'
lisp.setSymbolFunction(G_697, CL_COMMON_LISP_COUNT);
CL_COMMON_LISP_COUNT_IF.lisp_name = 'COUNT-IF'
lisp.setSymbolFunction(G_713, CL_COMMON_LISP_COUNT_IF);
CL_COMMON_LISP_COUNT_IF_NOT.lisp_name = 'COUNT-IF-NOT'
lisp.setSymbolFunction(G_726, CL_COMMON_LISP_COUNT_IF_NOT);
CL_COMMON_LISP_SEARCH.lisp_name = 'SEARCH'
lisp.setSymbolFunction(G_735, CL_COMMON_LISP_SEARCH);
CL_COMMON_LISP_MISMATCH.lisp_name = 'MISMATCH'
lisp.setSymbolFunction(G_754, CL_COMMON_LISP_MISMATCH);
CL_COMMON_LISP_REPLACE.lisp_name = 'REPLACE'
lisp.setSymbolFunction(G_260, CL_COMMON_LISP_REPLACE);
CL_COMMON_LISP_SUBSTITUTE.lisp_name = 'SUBSTITUTE'
lisp.setSymbolFunction(G_834, CL_COMMON_LISP_SUBSTITUTE);
CL_COMMON_LISP_SUBSTITUTE_IF.lisp_name = 'SUBSTITUTE-IF'
lisp.setSymbolFunction(G_852, CL_COMMON_LISP_SUBSTITUTE_IF);
CL_COMMON_LISP_SUBSTITUTE_IF_NOT.lisp_name = 'SUBSTITUTE-IF-NOT'
lisp.setSymbolFunction(G_880, CL_COMMON_LISP_SUBSTITUTE_IF_NOT);
CL_COMMON_LISP_NSUBSTITUTE.lisp_name = 'NSUBSTITUTE'
lisp.setSymbolFunction(G_890, CL_COMMON_LISP_NSUBSTITUTE);
CL_COMMON_LISP_NSUBSTITUTE_IF.lisp_name = 'NSUBSTITUTE-IF'
lisp.setSymbolFunction(G_907, CL_COMMON_LISP_NSUBSTITUTE_IF);
CL_COMMON_LISP_NSUBSTITUTE_IF_NOT.lisp_name = 'NSUBSTITUTE-IF-NOT'
lisp.setSymbolFunction(G_934, CL_COMMON_LISP_NSUBSTITUTE_IF_NOT);
CL_COMMON_LISP_CONCATENATE.lisp_name = 'CONCATENATE'
lisp.setSymbolFunction(G_944, CL_COMMON_LISP_CONCATENATE);
CL_COMMON_LISP_SEQUENCE_TO_LIST.lisp_name = 'SEQUENCE-TO-LIST'
lisp.setSymbolFunction(G_958, CL_COMMON_LISP_SEQUENCE_TO_LIST);
CL_COMMON_LISP_MERGE_LISTS.lisp_name = 'MERGE-LISTS'
lisp.setSymbolFunction(G_968, CL_COMMON_LISP_MERGE_LISTS);
CL_COMMON_LISP_MERGE.lisp_name = 'MERGE'
lisp.setSymbolFunction(G_989, CL_COMMON_LISP_MERGE);
CL_COMMON_LISP_REMOVE.lisp_name = 'REMOVE'
lisp.setSymbolFunction(G_1019, CL_COMMON_LISP_REMOVE);
CL_COMMON_LISP_REMOVE_IF.lisp_name = 'REMOVE-IF'
lisp.setSymbolFunction(G_1032, CL_COMMON_LISP_REMOVE_IF);
CL_COMMON_LISP_REMOVE_IF_NOT.lisp_name = 'REMOVE-IF-NOT'
lisp.setSymbolFunction(G_1043, CL_COMMON_LISP_REMOVE_IF_NOT);
CL_COMMON_LISP_DELETE.lisp_name = 'DELETE'
lisp.setSymbolFunction(G_1030, CL_COMMON_LISP_DELETE);
CL_COMMON_LISP_DELETE_IF_LIST.lisp_name = 'DELETE-IF-LIST'
lisp.setSymbolFunction(G_1071, CL_COMMON_LISP_DELETE_IF_LIST);
CL_COMMON_LISP_TRIM_VECTOR.lisp_name = 'TRIM-VECTOR'
lisp.setSymbolFunction(G_1111, CL_COMMON_LISP_TRIM_VECTOR);
CL_COMMON_LISP_DELETE_IF_VECTOR_1.lisp_name = 'DELETE-IF-VECTOR-1'
lisp.setSymbolFunction(G_1114, CL_COMMON_LISP_DELETE_IF_VECTOR_1);
CL_COMMON_LISP_DELETE_IF_VECTOR.lisp_name = 'DELETE-IF-VECTOR'
lisp.setSymbolFunction(G_1133, CL_COMMON_LISP_DELETE_IF_VECTOR);
CL_COMMON_LISP_DELETE_IF.lisp_name = 'DELETE-IF'
lisp.setSymbolFunction(G_1041, CL_COMMON_LISP_DELETE_IF);
CL_COMMON_LISP_DELETE_IF_NOT.lisp_name = 'DELETE-IF-NOT'
lisp.setSymbolFunction(G_1052, CL_COMMON_LISP_DELETE_IF_NOT);
CL_COMMON_LISP_REMOVE_DUPLICATES.lisp_name = 'REMOVE-DUPLICATES'
lisp.setSymbolFunction(G_1170, CL_COMMON_LISP_REMOVE_DUPLICATES);
CL_COMMON_LISP_DELETE_DUPLICATES_LIST.lisp_name = 'DELETE-DUPLICATES-LIST'
lisp.setSymbolFunction(G_1182, CL_COMMON_LISP_DELETE_DUPLICATES_LIST);
CL_COMMON_LISP_DELETE_DUPLICATES_VECTOR.lisp_name = 'DELETE-DUPLICATES-VECTOR'
lisp.setSymbolFunction(G_1211, CL_COMMON_LISP_DELETE_DUPLICATES_VECTOR);
CL_COMMON_LISP_DELETE_DUPLICATES.lisp_name = 'DELETE-DUPLICATES'
lisp.setSymbolFunction(G_1180, CL_COMMON_LISP_DELETE_DUPLICATES);
CL_COMMON_LISP_EVERY.lisp_name = 'EVERY'
lisp.setSymbolFunction(G_1270, CL_COMMON_LISP_EVERY);
CL_COMMON_LISP_SOME.lisp_name = 'SOME'
lisp.setSymbolFunction(G_1283, CL_COMMON_LISP_SOME);
CL_COMMON_LISP_NOTANY.lisp_name = 'NOTANY'
lisp.setSymbolFunction(G_1296, CL_COMMON_LISP_NOTANY);
}catch(TMP_1){G_1300.func();
console.log(TMP_1.message);
}


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_4;
let G_6;
let G_8;
let G_9;
let G_11;
let G_13;
let G_15;
let G_17;
let G_22;
let G_24;
let G_25;
let G_27;
let G_31;
let G_35;
let G_37;
let G_38;
let G_41;
let G_43;
let G_46;
let G_49;
let G_52;
let G_67;
let G_71;
let G_75;
let G_79;
let G_80;
let G_87;
let G_89;
let G_91;
let G_97;
let G_100;
let G_102;
let G_106;
let G_108;
let G_113;
let G_116;
let G_118;
let G_121;
let G_135;
let G_138;
let G_143;
let G_147;
let G_149;
let G_151;
let G_157;
let G_159;
let G_161;
let G_162;
let G_165;
let G_167;
let G_169;
let G_170;
let G_171;
let G_173;
let G_175;
let G_182;
let G_189;
let G_196;
let G_197;
let G_198;
let G_199;
let G_202;
let G_206;
let G_207;
let G_214;
let CL_COMMON_LISP_CLRHASH;
let CL_COMMON_LISP_MAPHASH;
let CL_COMMON_LISP_REMHASH;
let CL_COMMON_LISP_GETHASH;
let CL_COMMON_LISP_HASH_TABLE_COUNT;
let CL_COMMON_LISP_HASH_TABLE_SIZE;
let CL_COMMON_LISP_MAKE_HASH_TABLE;
let CL_COMMON_LISP_HASH_TABLE_REHASH_THRESHOLD;
let CL_COMMON_LISP_HASH_TABLE_REHASH_SIZE;
let CL_COMMON_LISP_HASH_TABLE_TEST;
let CL_COMMON_LISP_HASH_TABLE_KEYS;
let CL_COMMON_LISP_HASH_TABLE_MAP;
let CL_COMMON_LISP_PERCENTMAKE_HASH_TABLE;
let CL_COMMON_LISP_HASH_TABLE_P;
let TMP_163;
let TMP_133;
let TMP_124;
let TMP_119;
let L_G19__48;
let L_G18__47;
let TMP_78;
let TMP_65;
let TMP_56;
let TMP_53;
let TMP_47;
let TMP_32;
let TMP_28;
// toplevel defun
let F_HASH_TABLE_P_2;
F_HASH_TABLE_P_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_5;
let L_X__1;
L_X__1=arguments[0];
TMP_5=lisp.callFunctionWithCallStack(G_6,L_X__1,G_4);
return TMP_5;
});
CL_COMMON_LISP_HASH_TABLE_P=lisp.values1(F_HASH_TABLE_P_2);
let F_PERCENTMAKE_HASH_TABLE_7;
F_PERCENTMAKE_HASH_TABLE_7=(function(){
if(arguments.length < 0 || 10 < arguments.length) {
lisp.argumentsError(G_8, arguments.length);
}
let TMP_20;
let L_REHASH_THRESHOLD__7;
let L_REHASH_SIZE__6;
let L_TEST__5;
let L_KEYS__4;
let L_MAP__3;
let supplied_MAP__3;
for (let TMP_10 = 0; TMP_10 < arguments.length; TMP_10 += 2) {
if(arguments[TMP_10] === G_9){
supplied_MAP__3=arguments[TMP_10+1];
break;
}
}
L_MAP__3=supplied_MAP__3 !== undefined ? supplied_MAP__3 : (lisp.values1(lisp.S_nil));
let supplied_KEYS__4;
for (let TMP_12 = 0; TMP_12 < arguments.length; TMP_12 += 2) {
if(arguments[TMP_12] === G_11){
supplied_KEYS__4=arguments[TMP_12+1];
break;
}
}
L_KEYS__4=supplied_KEYS__4 !== undefined ? supplied_KEYS__4 : (lisp.values1(lisp.S_nil));
let supplied_TEST__5;
for (let TMP_14 = 0; TMP_14 < arguments.length; TMP_14 += 2) {
if(arguments[TMP_14] === G_13){
supplied_TEST__5=arguments[TMP_14+1];
break;
}
}
L_TEST__5=supplied_TEST__5 !== undefined ? supplied_TEST__5 : (lisp.values1(lisp.S_nil));
let supplied_REHASH_SIZE__6;
for (let TMP_16 = 0; TMP_16 < arguments.length; TMP_16 += 2) {
if(arguments[TMP_16] === G_15){
supplied_REHASH_SIZE__6=arguments[TMP_16+1];
break;
}
}
L_REHASH_SIZE__6=supplied_REHASH_SIZE__6 !== undefined ? supplied_REHASH_SIZE__6 : (lisp.values1(lisp.S_nil));
let supplied_REHASH_THRESHOLD__7;
for (let TMP_18 = 0; TMP_18 < arguments.length; TMP_18 += 2) {
if(arguments[TMP_18] === G_17){
supplied_REHASH_THRESHOLD__7=arguments[TMP_18+1];
break;
}
}
L_REHASH_THRESHOLD__7=supplied_REHASH_THRESHOLD__7 !== undefined ? supplied_REHASH_THRESHOLD__7 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_19 = 0; TMP_19 < arguments.length; TMP_19 += 2) {
if(arguments[TMP_19]!==G_17 && arguments[TMP_19]!==G_15 && arguments[TMP_19]!==G_13 && arguments[TMP_19]!==G_11 && arguments[TMP_19]!==G_9) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_19].name); }
}
TMP_20=lisp.CL_makeStructure(G_4,L_MAP__3,L_KEYS__4,L_TEST__5,L_REHASH_SIZE__6,L_REHASH_THRESHOLD__7);
return TMP_20;
});
CL_COMMON_LISP_PERCENTMAKE_HASH_TABLE=lisp.values1(F_PERCENTMAKE_HASH_TABLE_7);
let F_HASH_TABLE_MAP_21;
F_HASH_TABLE_MAP_21=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_22, arguments.length);
}
let TMP_26;
let TMP_23;
let L_STRUCTURE__9;
L_STRUCTURE__9=arguments[0];
TMP_23=lisp.CL_structurep(L_STRUCTURE__9);
if(lisp.values1(TMP_23) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_25,L_STRUCTURE__9,G_24);
}
TMP_26=lisp.CL_structureRef(L_STRUCTURE__9,0);
return TMP_26;
});
CL_COMMON_LISP_HASH_TABLE_MAP=lisp.values1(F_HASH_TABLE_MAP_21);
let F_HASH_TABLE_KEYS_48;
F_HASH_TABLE_KEYS_48=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_49, arguments.length);
}
let TMP_51;
let TMP_50;
let L_STRUCTURE__23;
L_STRUCTURE__23=arguments[0];
TMP_50=lisp.CL_structurep(L_STRUCTURE__23);
if(lisp.values1(TMP_50) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_25,L_STRUCTURE__23,G_24);
}
TMP_51=lisp.CL_structureRef(L_STRUCTURE__23,1);
return TMP_51;
});
CL_COMMON_LISP_HASH_TABLE_KEYS=lisp.values1(F_HASH_TABLE_KEYS_48);
let F_HASH_TABLE_TEST_66;
F_HASH_TABLE_TEST_66=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_67, arguments.length);
}
let TMP_69;
let TMP_68;
let L_STRUCTURE__37;
L_STRUCTURE__37=arguments[0];
TMP_68=lisp.CL_structurep(L_STRUCTURE__37);
if(lisp.values1(TMP_68) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_25,L_STRUCTURE__37,G_24);
}
TMP_69=lisp.CL_structureRef(L_STRUCTURE__37,2);
return TMP_69;
});
CL_COMMON_LISP_HASH_TABLE_TEST=lisp.values1(F_HASH_TABLE_TEST_66);
let F_HASH_TABLE_REHASH_SIZE_70;
F_HASH_TABLE_REHASH_SIZE_70=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_71, arguments.length);
}
let TMP_73;
let TMP_72;
let L_STRUCTURE__39;
L_STRUCTURE__39=arguments[0];
TMP_72=lisp.CL_structurep(L_STRUCTURE__39);
if(lisp.values1(TMP_72) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_25,L_STRUCTURE__39,G_24);
}
TMP_73=lisp.CL_structureRef(L_STRUCTURE__39,3);
return TMP_73;
});
CL_COMMON_LISP_HASH_TABLE_REHASH_SIZE=lisp.values1(F_HASH_TABLE_REHASH_SIZE_70);
let F_HASH_TABLE_REHASH_THRESHOLD_74;
F_HASH_TABLE_REHASH_THRESHOLD_74=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_75, arguments.length);
}
let TMP_77;
let TMP_76;
let L_STRUCTURE__41;
L_STRUCTURE__41=arguments[0];
TMP_76=lisp.CL_structurep(L_STRUCTURE__41);
if(lisp.values1(TMP_76) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_25,L_STRUCTURE__41,G_24);
}
TMP_77=lisp.CL_structureRef(L_STRUCTURE__41,4);
return TMP_77;
});
CL_COMMON_LISP_HASH_TABLE_REHASH_THRESHOLD=lisp.values1(F_HASH_TABLE_REHASH_THRESHOLD_74);
let F_MAKE_HASH_TABLE_88;
F_MAKE_HASH_TABLE_88=(function(){
if(arguments.length < 0 || 8 < arguments.length) {
lisp.argumentsError(G_89, arguments.length);
}
let TMP_98;
let TMP_96;
let L_REHASH_THRESHOLD__52;
let L_REHASH_SIZE__51;
let L_SIZE__50;
let L_TEST__49;
let supplied_TEST__49;
for (let TMP_90 = 0; TMP_90 < arguments.length; TMP_90 += 2) {
if(arguments[TMP_90] === G_13){
supplied_TEST__49=arguments[TMP_90+1];
break;
}
}
L_TEST__49=supplied_TEST__49 !== undefined ? supplied_TEST__49 : (lisp.values1(lisp.S_nil));
let supplied_SIZE__50;
for (let TMP_92 = 0; TMP_92 < arguments.length; TMP_92 += 2) {
if(arguments[TMP_92] === G_91){
supplied_SIZE__50=arguments[TMP_92+1];
break;
}
}
L_SIZE__50=supplied_SIZE__50 !== undefined ? supplied_SIZE__50 : (lisp.values1(lisp.S_nil));
let supplied_REHASH_SIZE__51;
for (let TMP_93 = 0; TMP_93 < arguments.length; TMP_93 += 2) {
if(arguments[TMP_93] === G_15){
supplied_REHASH_SIZE__51=arguments[TMP_93+1];
break;
}
}
L_REHASH_SIZE__51=supplied_REHASH_SIZE__51 !== undefined ? supplied_REHASH_SIZE__51 : (lisp.values1(lisp.S_nil));
let supplied_REHASH_THRESHOLD__52;
for (let TMP_94 = 0; TMP_94 < arguments.length; TMP_94 += 2) {
if(arguments[TMP_94] === G_17){
supplied_REHASH_THRESHOLD__52=arguments[TMP_94+1];
break;
}
}
L_REHASH_THRESHOLD__52=supplied_REHASH_THRESHOLD__52 !== undefined ? supplied_REHASH_THRESHOLD__52 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_95 = 0; TMP_95 < arguments.length; TMP_95 += 2) {
if(arguments[TMP_95]!==G_17 && arguments[TMP_95]!==G_15 && arguments[TMP_95]!==G_91 && arguments[TMP_95]!==G_13) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_95].name); }
}
TMP_96=lisp.callFunctionWithCallStack(G_97);
TMP_98=G_8.func(G_9,TMP_96,G_13,L_TEST__49,G_15,L_REHASH_SIZE__51,G_17,L_REHASH_THRESHOLD__52);
return TMP_98;
});
CL_COMMON_LISP_MAKE_HASH_TABLE=lisp.values1(F_MAKE_HASH_TABLE_88);
let F_HASH_TABLE_SIZE_99;
F_HASH_TABLE_SIZE_99=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_100, arguments.length);
}
let TMP_101;
let L_HASH_TABLE__54;
L_HASH_TABLE__54=arguments[0];
TMP_101=G_102.func(L_HASH_TABLE__54);
return TMP_101;
});
CL_COMMON_LISP_HASH_TABLE_SIZE=lisp.values1(F_HASH_TABLE_SIZE_99);
let F_HASH_TABLE_COUNT_103;
F_HASH_TABLE_COUNT_103=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_102, arguments.length);
}
let TMP_105;
let TMP_104;
let L_HASH_TABLE__56;
L_HASH_TABLE__56=arguments[0];
TMP_104=G_22.func(L_HASH_TABLE__56);
TMP_105=lisp.callFunctionWithCallStack(G_106,TMP_104);
return TMP_105;
});
CL_COMMON_LISP_HASH_TABLE_COUNT=lisp.values1(F_HASH_TABLE_COUNT_103);
let F_GETHASH_107;
F_GETHASH_107=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_108, arguments.length);
}
let TMP_117;
let TMP_115;
let TMP_114;
let TMP_112;
let TMP_109;
let L_DEFAULT__60;
let L_HASH_TABLE__59;
let L_KEY__58;
L_KEY__58=arguments[0];
L_HASH_TABLE__59=arguments[1];
L_DEFAULT__60=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
TMP_109=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_111;
let TMP_110;
let L_G20__64;
let L_FOUND__63;
let L_VALUE__62;
L_VALUE__62=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_FOUND__63=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G20__64=lisp.jsArrayToList(arguments, 2);
if(lisp.values1(L_FOUND__63) !== lisp.S_nil){
TMP_110=lisp.values1(L_VALUE__62);
}else{
TMP_110=lisp.values1(L_DEFAULT__60);
}
TMP_111=lisp.CL_values(TMP_110,L_FOUND__63);
return TMP_111;
});
TMP_112=lisp.callFunctionWithCallStack(G_113,TMP_109);
TMP_114=G_22.func(L_HASH_TABLE__59);
TMP_115=lisp.callFunctionWithCallStack(G_116,TMP_114,L_KEY__58);
TMP_117=lisp.CL_multipleValueCall(TMP_112,TMP_115);
return TMP_117;
});
CL_COMMON_LISP_GETHASH=lisp.values1(F_GETHASH_107);
let F_REMHASH_134;
F_REMHASH_134=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_135, arguments.length);
}
let TMP_141;
let TMP_140;
let TMP_139;
let TMP_136;
let L_HASH_TABLE__82;
let L_KEY__81;
L_KEY__81=arguments[0];
L_HASH_TABLE__82=arguments[1];
TMP_136=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_137;
let L_G31__86;
let L_FOUND__85;
let L_VALUE__84;
L_VALUE__84=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_FOUND__85=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G31__86=lisp.jsArrayToList(arguments, 2);
TMP_137=G_22.func(L_HASH_TABLE__82);
lisp.callFunctionWithCallStack(G_138,TMP_137,L_KEY__81);
return lisp.values1(L_FOUND__85);
});
TMP_139=lisp.callFunctionWithCallStack(G_113,TMP_136);
TMP_140=G_108.func(L_KEY__81,L_HASH_TABLE__82);
TMP_141=lisp.CL_multipleValueCall(TMP_139,TMP_140);
return TMP_141;
});
CL_COMMON_LISP_REMHASH=lisp.values1(F_REMHASH_134);
let F_MAPHASH_142;
F_MAPHASH_142=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_143, arguments.length);
}
let TMP_156;
let TMP_155;
let TMP_152;
let TMP_150;
let L_KEY__94;
let TMP_148;
let TMP_146;
let L_G32__93;
let L_KEYS__91;
let TMP_145;
let L_MAP__90;
let TMP_144;
let L_HASH_TABLE__88;
let L_FUNCTION__87;
L_FUNCTION__87=arguments[0];
L_HASH_TABLE__88=arguments[1];
{
TMP_144=G_22.func(L_HASH_TABLE__88);
L_MAP__90=lisp.values1(TMP_144);
TMP_145=G_49.func(L_HASH_TABLE__88);
L_KEYS__91=lisp.values1(TMP_145);
{
L_G32__93=lisp.values1(L_KEYS__91);
for(;;){
TMP_146=lisp.callFunctionWithCallStack(G_147,L_G32__93);
if(lisp.values1(TMP_146) !== lisp.S_nil){
}else{
{
TMP_148=lisp.callFunctionWithCallStack(G_149,L_G32__93);
L_KEY__94=lisp.values1(TMP_148);
TMP_150=lisp.callFunctionWithCallStack(G_151,L_G32__93);
L_G32__93=lisp.values1(TMP_150);
TMP_152=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_154;
let TMP_153;
let L_G39__97;
let L_FOUND__96;
let L_VALUE__95;
L_VALUE__95=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_FOUND__96=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G39__97=lisp.jsArrayToList(arguments, 2);
if(lisp.values1(L_FOUND__96) !== lisp.S_nil){
TMP_154=lisp.CL_funcall(lisp.values1(L_FUNCTION__87),L_KEY__94,L_VALUE__95);
TMP_153=TMP_154;
}else{
TMP_153=lisp.values1(lisp.S_nil);
}
return TMP_153;
});
TMP_155=lisp.callFunctionWithCallStack(G_113,TMP_152);
TMP_156=lisp.callFunctionWithCallStack(G_116,L_MAP__90,L_KEY__94);
lisp.CL_multipleValueCall(TMP_155,TMP_156);
}
continue;
}
break;
}
}
}
return lisp.values1(lisp.S_nil);
});
CL_COMMON_LISP_MAPHASH=lisp.values1(F_MAPHASH_142);
let F_CLRHASH_158;
F_CLRHASH_158=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_159, arguments.length);
}
let TMP_160;
let L_HASH_TABLE__99;
L_HASH_TABLE__99=arguments[0];
TMP_160=G_22.func(L_HASH_TABLE__99);
lisp.callFunctionWithCallStack(G_161,TMP_160);
return lisp.values1(L_HASH_TABLE__99);
});
CL_COMMON_LISP_CLRHASH=lisp.values1(F_CLRHASH_158);
// initialize symbols
G_3 = lisp.intern('HASH-TABLE-P', 'COMMON-LISP');
G_4 = lisp.intern('HASH-TABLE', 'COMMON-LISP');
G_6 = lisp.intern('TYPEP', 'COMMON-LISP');
G_8 = lisp.intern('%MAKE-HASH-TABLE', 'COMMON-LISP');
G_9 = lisp.intern('MAP', 'KEYWORD');
G_11 = lisp.intern('KEYS', 'KEYWORD');
G_13 = lisp.intern('TEST', 'KEYWORD');
G_15 = lisp.intern('REHASH-SIZE', 'KEYWORD');
G_17 = lisp.intern('REHASH-THRESHOLD', 'KEYWORD');
G_22 = lisp.intern('HASH-TABLE-MAP', 'COMMON-LISP');
G_24 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_25 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_27 = lisp.intern('(SETF HASH-TABLE-MAP)', 'COMMON-LISP');
G_31 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_35 = lisp.intern('GENSYM', 'COMMON-LISP');
G_37 = lisp.intern('%MAPCAR', 'SYSTEM');
G_38 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_41 = lisp.intern('LIST', 'COMMON-LISP');
G_43 = lisp.intern('LIST*', 'COMMON-LISP');
G_46 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_49 = lisp.intern('HASH-TABLE-KEYS', 'COMMON-LISP');
G_52 = lisp.intern('(SETF HASH-TABLE-KEYS)', 'COMMON-LISP');
G_67 = lisp.intern('HASH-TABLE-TEST', 'COMMON-LISP');
G_71 = lisp.intern('HASH-TABLE-REHASH-SIZE', 'COMMON-LISP');
G_75 = lisp.intern('HASH-TABLE-REHASH-THRESHOLD', 'COMMON-LISP');
G_79 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_80 = lisp.intern('PRIN1', 'COMMON-LISP');
G_87 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_89 = lisp.intern('MAKE-HASH-TABLE', 'COMMON-LISP');
G_91 = lisp.intern('SIZE', 'KEYWORD');
G_97 = lisp.intern('MAKE-MAP', 'SYSTEM');
G_100 = lisp.intern('HASH-TABLE-SIZE', 'COMMON-LISP');
G_102 = lisp.intern('HASH-TABLE-COUNT', 'COMMON-LISP');
G_106 = lisp.intern('MAP-LENGTH', 'SYSTEM');
G_108 = lisp.intern('GETHASH', 'COMMON-LISP');
G_113 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_116 = lisp.intern('MAP-GET', 'SYSTEM');
G_118 = lisp.intern('(SETF GETHASH)', 'COMMON-LISP');
G_121 = lisp.intern('MAP-SET', 'SYSTEM');
G_135 = lisp.intern('REMHASH', 'COMMON-LISP');
G_138 = lisp.intern('MAP-REMOVE', 'SYSTEM');
G_143 = lisp.intern('MAPHASH', 'COMMON-LISP');
G_147 = lisp.intern('ENDP', 'COMMON-LISP');
G_149 = lisp.intern('CAR', 'COMMON-LISP');
G_151 = lisp.intern('CDR', 'COMMON-LISP');
G_157 = lisp.intern('WITH-HASH-TABLE-ITERATOR', 'COMMON-LISP');
G_159 = lisp.intern('CLRHASH', 'COMMON-LISP');
G_161 = lisp.intern('MAP-CLEAR', 'SYSTEM');
G_162 = lisp.intern('MACRO', 'COMPILER');
G_165 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_167 = lisp.intern('<=', 'COMMON-LISP');
G_169 = lisp.intern('NAME', 'COMMON-LISP');
G_170 = lisp.intern('&BODY', 'COMMON-LISP');
G_171 = lisp.intern('BODY', 'COMMON-LISP');
G_173 = lisp.intern('ERROR', 'COMMON-LISP');
G_175 = lisp.intern('FIRST', 'COMMON-LISP');
G_182 = lisp.intern('REST', 'COMMON-LISP');
G_189 = lisp.intern('LET*', 'COMMON-LISP');
G_196 = lisp.intern('FLET', 'COMMON-LISP');
G_197 = lisp.intern('WHEN', 'COMMON-LISP');
G_198 = lisp.intern('%KEY', 'COMMON-LISP');
G_199 = lisp.intern('POP', 'COMMON-LISP');
G_202 = lisp.intern('%VALUE', 'COMMON-LISP');
G_206 = lisp.intern('VALUES', 'COMMON-LISP');
G_207 = lisp.intern('T', 'COMMON-LISP');
G_214 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_HASH_TABLE_P.lisp_name = 'HASH-TABLE-P'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_HASH_TABLE_P);
CL_COMMON_LISP_PERCENTMAKE_HASH_TABLE.lisp_name = '%MAKE-HASH-TABLE'
lisp.setSymbolFunction(G_8, CL_COMMON_LISP_PERCENTMAKE_HASH_TABLE);
CL_COMMON_LISP_HASH_TABLE_MAP.lisp_name = 'HASH-TABLE-MAP'
lisp.setSymbolFunction(G_22, CL_COMMON_LISP_HASH_TABLE_MAP);
TMP_28=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_30;
let TMP_29;
let L_STRUCTURE__12;
let L_VALUE__11;
L_VALUE__11=arguments[0];
L_STRUCTURE__12=arguments[1];
TMP_29=lisp.CL_structurep(L_STRUCTURE__12);
if(lisp.values1(TMP_29) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_25,L_STRUCTURE__12,G_24);
}
TMP_30=lisp.CL_structureSet(L_STRUCTURE__12,0,L_VALUE__11);
return TMP_30;
});
lisp.CL_setSymbolFunction(G_27,TMP_28);
TMP_32=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_45;
let TMP_44;
let TMP_42;
let TMP_40;
let L_STORE2__20;
let TMP_39;
let L_GENSYMS0__19;
let TMP_36;
let TMP_33;
let L_ARGS1__17;
let L_G6__15;
let L_G5__14;
L_G5__14=arguments[0];
{
L_G6__15=lisp.values1(L_G5__14);
{
L_ARGS1__17=lisp.values1(L_G6__15);
{
TMP_33=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_34;
let L_X__18;
L_X__18=arguments[0];
TMP_34=lisp.callFunctionWithCallStack(G_35);
return TMP_34;
});
TMP_36=lisp.callFunctionWithCallStack(G_37,TMP_33,L_ARGS1__17);
L_GENSYMS0__19=lisp.values1(TMP_36);
TMP_39=lisp.callFunctionWithCallStack(G_35,G_38.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE2__20=lisp.values1(TMP_39);
TMP_40=lisp.callFunctionWithCallStack(G_41,L_STORE2__20);
TMP_42=lisp.callFunctionWithCallStack(G_43,G_27,L_STORE2__20,L_GENSYMS0__19);
TMP_44=lisp.callFunctionWithCallStack(G_43,G_22,L_GENSYMS0__19);
TMP_45=lisp.CL_values(L_GENSYMS0__19,L_ARGS1__17,TMP_40,TMP_42,TMP_44);
}
}
}
return TMP_45;
});
lisp.CL_put(G_22,G_31,TMP_32);
TMP_47=lisp.CL_symbolFunction(G_27);
lisp.CL_put(G_22,G_46,TMP_47);
CL_COMMON_LISP_HASH_TABLE_KEYS.lisp_name = 'HASH-TABLE-KEYS'
lisp.setSymbolFunction(G_49, CL_COMMON_LISP_HASH_TABLE_KEYS);
TMP_53=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_55;
let TMP_54;
let L_STRUCTURE__26;
let L_VALUE__25;
L_VALUE__25=arguments[0];
L_STRUCTURE__26=arguments[1];
TMP_54=lisp.CL_structurep(L_STRUCTURE__26);
if(lisp.values1(TMP_54) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_25,L_STRUCTURE__26,G_24);
}
TMP_55=lisp.CL_structureSet(L_STRUCTURE__26,1,L_VALUE__25);
return TMP_55;
});
lisp.CL_setSymbolFunction(G_52,TMP_53);
TMP_56=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_64;
let TMP_63;
let TMP_62;
let TMP_61;
let L_STORE10__34;
let TMP_60;
let L_GENSYMS8__33;
let TMP_59;
let TMP_57;
let L_ARGS9__31;
let L_G14__29;
let L_G13__28;
L_G13__28=arguments[0];
{
L_G14__29=lisp.values1(L_G13__28);
{
L_ARGS9__31=lisp.values1(L_G14__29);
{
TMP_57=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_58;
let L_X__32;
L_X__32=arguments[0];
TMP_58=lisp.callFunctionWithCallStack(G_35);
return TMP_58;
});
TMP_59=lisp.callFunctionWithCallStack(G_37,TMP_57,L_ARGS9__31);
L_GENSYMS8__33=lisp.values1(TMP_59);
TMP_60=lisp.callFunctionWithCallStack(G_35,G_38.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE10__34=lisp.values1(TMP_60);
TMP_61=lisp.callFunctionWithCallStack(G_41,L_STORE10__34);
TMP_62=lisp.callFunctionWithCallStack(G_43,G_52,L_STORE10__34,L_GENSYMS8__33);
TMP_63=lisp.callFunctionWithCallStack(G_43,G_49,L_GENSYMS8__33);
TMP_64=lisp.CL_values(L_GENSYMS8__33,L_ARGS9__31,TMP_61,TMP_62,TMP_63);
}
}
}
return TMP_64;
});
lisp.CL_put(G_49,G_31,TMP_56);
TMP_65=lisp.CL_symbolFunction(G_52);
lisp.CL_put(G_49,G_46,TMP_65);
CL_COMMON_LISP_HASH_TABLE_TEST.lisp_name = 'HASH-TABLE-TEST'
lisp.setSymbolFunction(G_67, CL_COMMON_LISP_HASH_TABLE_TEST);
CL_COMMON_LISP_HASH_TABLE_REHASH_SIZE.lisp_name = 'HASH-TABLE-REHASH-SIZE'
lisp.setSymbolFunction(G_71, CL_COMMON_LISP_HASH_TABLE_REHASH_SIZE);
CL_COMMON_LISP_HASH_TABLE_REHASH_THRESHOLD.lisp_name = 'HASH-TABLE-REHASH-THRESHOLD'
lisp.setSymbolFunction(G_75, CL_COMMON_LISP_HASH_TABLE_REHASH_THRESHOLD);
{
TMP_78=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_86;
let TMP_85;
let TMP_84;
let TMP_83;
let TMP_82;
let TMP_81;
let L_STREAM__46;
let L_STRUCTURE__45;
L_STRUCTURE__45=arguments[0];
L_STREAM__46=arguments[1];
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 84, 65, 66, 76, 69])),L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
lisp.callFunctionWithCallStack(G_80,G_9,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
TMP_81=lisp.CL_structureRef(L_STRUCTURE__45,0);
lisp.callFunctionWithCallStack(G_80,TMP_81,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
lisp.callFunctionWithCallStack(G_80,G_11,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
TMP_82=lisp.CL_structureRef(L_STRUCTURE__45,1);
lisp.callFunctionWithCallStack(G_80,TMP_82,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
lisp.callFunctionWithCallStack(G_80,G_13,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
TMP_83=lisp.CL_structureRef(L_STRUCTURE__45,2);
lisp.callFunctionWithCallStack(G_80,TMP_83,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
lisp.callFunctionWithCallStack(G_80,G_15,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
TMP_84=lisp.CL_structureRef(L_STRUCTURE__45,3);
lisp.callFunctionWithCallStack(G_80,TMP_84,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
lisp.callFunctionWithCallStack(G_80,G_17,L_STREAM__46);
lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([32])),L_STREAM__46);
TMP_85=lisp.CL_structureRef(L_STRUCTURE__45,4);
lisp.callFunctionWithCallStack(G_80,TMP_85,L_STREAM__46);
TMP_86=lisp.callFunctionWithCallStack(G_79,G_38.func(lisp.codeArrayToString([41])),L_STREAM__46);
return TMP_86;
});
L_G18__47=lisp.values1(TMP_78);
{
L_G19__48=lisp.values1(L_G18__47);
lisp.CL_put(G_4,G_87,L_G19__48);
}
}
CL_COMMON_LISP_MAKE_HASH_TABLE.lisp_name = 'MAKE-HASH-TABLE'
lisp.setSymbolFunction(G_89, CL_COMMON_LISP_MAKE_HASH_TABLE);
CL_COMMON_LISP_HASH_TABLE_SIZE.lisp_name = 'HASH-TABLE-SIZE'
lisp.setSymbolFunction(G_100, CL_COMMON_LISP_HASH_TABLE_SIZE);
CL_COMMON_LISP_HASH_TABLE_COUNT.lisp_name = 'HASH-TABLE-COUNT'
lisp.setSymbolFunction(G_102, CL_COMMON_LISP_HASH_TABLE_COUNT);
CL_COMMON_LISP_GETHASH.lisp_name = 'GETHASH'
lisp.setSymbolFunction(G_108, CL_COMMON_LISP_GETHASH);
TMP_119=(function(){
if(arguments.length < 3 || 4 < arguments.length) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G_STORE27__71;
let TMP_123;
let TMP_122;
let L_G26__70;
let TMP_120;
let L_DEFAULT__68;
let L_HASH_TABLE__67;
let L_KEY__66;
let L_VALUE__65;
L_VALUE__65=arguments[0];
L_KEY__66=arguments[1];
L_HASH_TABLE__67=arguments[2];
L_DEFAULT__68=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
TMP_120=G_22.func(L_HASH_TABLE__67);
lisp.callFunctionWithCallStack(G_121,TMP_120,L_KEY__66,L_VALUE__65);
{
L_G26__70=lisp.values1(L_HASH_TABLE__67);
TMP_122=G_49.func(L_G26__70);
TMP_123=lisp.CL_cons(L_KEY__66,TMP_122);
L_G_STORE27__71=lisp.values1(TMP_123);
lisp.callFunctionWithCallStack(G_52,L_G_STORE27__71,L_G26__70);
}
return lisp.values1(L_VALUE__65);
});
lisp.CL_setSymbolFunction(G_118,TMP_119);
TMP_124=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_132;
let TMP_131;
let TMP_130;
let TMP_129;
let L_STORE23__78;
let TMP_128;
let L_GENSYMS21__77;
let TMP_127;
let TMP_125;
let L_ARGS22__75;
let L_G29__73;
let L_G28__72;
L_G28__72=arguments[0];
{
L_G29__73=lisp.values1(L_G28__72);
{
L_ARGS22__75=lisp.values1(L_G29__73);
{
TMP_125=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_126;
let L_X__76;
L_X__76=arguments[0];
TMP_126=lisp.callFunctionWithCallStack(G_35);
return TMP_126;
});
TMP_127=lisp.callFunctionWithCallStack(G_37,TMP_125,L_ARGS22__75);
L_GENSYMS21__77=lisp.values1(TMP_127);
TMP_128=lisp.callFunctionWithCallStack(G_35,G_38.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE23__78=lisp.values1(TMP_128);
TMP_129=lisp.callFunctionWithCallStack(G_41,L_STORE23__78);
TMP_130=lisp.callFunctionWithCallStack(G_43,G_118,L_STORE23__78,L_GENSYMS21__77);
TMP_131=lisp.callFunctionWithCallStack(G_43,G_108,L_GENSYMS21__77);
TMP_132=lisp.CL_values(L_GENSYMS21__77,L_ARGS22__75,TMP_129,TMP_130,TMP_131);
}
}
}
return TMP_132;
});
lisp.CL_put(G_108,G_31,TMP_124);
TMP_133=lisp.CL_symbolFunction(G_118);
lisp.CL_put(G_108,G_46,TMP_133);
CL_COMMON_LISP_REMHASH.lisp_name = 'REMHASH'
lisp.setSymbolFunction(G_135, CL_COMMON_LISP_REMHASH);
CL_COMMON_LISP_MAPHASH.lisp_name = 'MAPHASH'
lisp.setSymbolFunction(G_143, CL_COMMON_LISP_MAPHASH);
CL_COMMON_LISP_CLRHASH.lisp_name = 'CLRHASH'
lisp.setSymbolFunction(G_159, CL_COMMON_LISP_CLRHASH);
TMP_163=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_213;
let TMP_212;
let TMP_211;
let TMP_210;
let TMP_209;
let TMP_208;
let TMP_205;
let TMP_204;
let TMP_203;
let TMP_201;
let TMP_200;
let TMP_195;
let TMP_194;
let TMP_193;
let TMP_192;
let TMP_191;
let TMP_190;
let L_G_MAP__114;
let TMP_188;
let L_G_HASH_TABLE__113;
let TMP_187;
let L_G_KEYS__112;
let TMP_186;
let L_BODY__111;
let L_G47__110;
let TMP_185;
let L_G46__109;
let TMP_184;
let L_HASH_TABLE__108;
let TMP_183;
let L_G45__107;
let TMP_181;
let L_NAME__106;
let TMP_180;
let L_G44__105;
let TMP_179;
let TMP_178;
let TMP_177;
let TMP_176;
let L_G43__104;
let TMP_174;
let L_G42__103;
let TMP_172;
let TMP_168;
let TMP_166;
let TMP_164;
let L_G41__102;
let L_G40__101;
L_G40__101=lisp.jsArrayToList(arguments, 0);
{
L_G41__102=lisp.values1(L_G40__101);
{
TMP_164=lisp.callFunctionWithCallStack(G_165,L_G41__102);
TMP_166=lisp.callFunctionWithCallStack(G_167,1,TMP_164);
if(lisp.values1(TMP_166) !== lisp.S_nil){
TMP_168=lisp.values1(lisp.S_nil);
}else{
TMP_172=lisp.callFunctionWithCallStack(G_173,G_38.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_169, lisp.makeCons(G_4, lisp.S_nil)), lisp.makeCons(G_170, lisp.makeCons(G_171, lisp.S_nil))),L_G41__102);
TMP_168=lisp.values1(lisp.values1(TMP_172));
}
L_G42__103=lisp.values1(TMP_168);
TMP_174=lisp.callFunctionWithCallStack(G_175,L_G41__102);
L_G43__104=lisp.values1(TMP_174);
TMP_176=lisp.callFunctionWithCallStack(G_165,L_G43__104);
TMP_177=lisp.callFunctionWithCallStack(G_167,2,TMP_176,2);
if(lisp.values1(TMP_177) !== lisp.S_nil){
TMP_178=lisp.values1(lisp.S_nil);
}else{
TMP_179=lisp.callFunctionWithCallStack(G_173,G_38.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_169, lisp.makeCons(G_4, lisp.S_nil)),L_G43__104);
TMP_178=lisp.values1(lisp.values1(TMP_179));
}
L_G44__105=lisp.values1(TMP_178);
TMP_180=lisp.callFunctionWithCallStack(G_175,L_G43__104);
L_NAME__106=lisp.values1(TMP_180);
TMP_181=lisp.callFunctionWithCallStack(G_182,L_G43__104);
L_G45__107=lisp.values1(TMP_181);
TMP_183=lisp.callFunctionWithCallStack(G_175,L_G45__107);
L_HASH_TABLE__108=lisp.values1(TMP_183);
TMP_184=lisp.callFunctionWithCallStack(G_182,L_G45__107);
L_G46__109=lisp.values1(TMP_184);
TMP_185=lisp.callFunctionWithCallStack(G_182,L_G41__102);
L_G47__110=lisp.values1(TMP_185);
L_BODY__111=lisp.values1(L_G47__110);
{
TMP_186=lisp.callFunctionWithCallStack(G_35,G_38.func(lisp.codeArrayToString([75, 69, 89, 83])));
L_G_KEYS__112=lisp.values1(TMP_186);
TMP_187=lisp.callFunctionWithCallStack(G_35,G_38.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 84, 65, 66, 76, 69])));
L_G_HASH_TABLE__113=lisp.values1(TMP_187);
TMP_188=lisp.callFunctionWithCallStack(G_35,G_38.func(lisp.codeArrayToString([77, 65, 80])));
L_G_MAP__114=lisp.values1(TMP_188);
TMP_190=lisp.callFunctionWithCallStack(G_41,L_G_HASH_TABLE__113,L_HASH_TABLE__108);
TMP_191=lisp.callFunctionWithCallStack(G_41,G_49,L_G_HASH_TABLE__113);
TMP_192=lisp.callFunctionWithCallStack(G_41,L_G_KEYS__112,TMP_191);
TMP_193=lisp.callFunctionWithCallStack(G_41,G_22,L_G_HASH_TABLE__113);
TMP_194=lisp.callFunctionWithCallStack(G_41,L_G_MAP__114,TMP_193);
TMP_195=lisp.callFunctionWithCallStack(G_41,TMP_190,TMP_192,TMP_194);
TMP_200=lisp.callFunctionWithCallStack(G_41,G_199,L_G_KEYS__112);
TMP_201=lisp.callFunctionWithCallStack(G_41,G_198,TMP_200);
TMP_203=lisp.callFunctionWithCallStack(G_43,G_116,L_G_MAP__114,lisp.makeCons(G_198, lisp.S_nil));
TMP_204=lisp.callFunctionWithCallStack(G_41,G_202,TMP_203);
TMP_205=lisp.callFunctionWithCallStack(G_41,TMP_201,TMP_204);
TMP_208=lisp.callFunctionWithCallStack(G_43,G_189,TMP_205,lisp.makeCons(lisp.makeCons(G_206, lisp.makeCons(G_207, lisp.makeCons(G_198, lisp.makeCons(G_202, lisp.S_nil)))), lisp.S_nil));
TMP_209=lisp.callFunctionWithCallStack(G_41,G_197,L_G_KEYS__112,TMP_208);
TMP_210=lisp.callFunctionWithCallStack(G_41,L_NAME__106,lisp.S_nil,TMP_209);
TMP_211=lisp.callFunctionWithCallStack(G_41,TMP_210);
TMP_212=lisp.callFunctionWithCallStack(G_43,G_196,TMP_211,L_BODY__111);
TMP_213=lisp.callFunctionWithCallStack(G_41,G_189,TMP_195,TMP_212);
}
}
}
return TMP_213;
});
lisp.CL_put(G_157,G_162,TMP_163);
}catch(TMP_1){G_214.func();
console.log(TMP_1.message);
}


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_6;
let G_8;
let G_10;
let G_13;
let G_18;
let G_26;
let G_30;
let G_31;
let G_34;
let G_37;
let G_43;
let G_46;
let G_49;
let G_51;
let G_52;
let G_53;
let G_63;
let G_65;
let G_67;
let G_68;
let G_70;
let G_74;
let G_79;
let G_80;
let G_82;
let G_86;
let G_93;
let G_100;
let G_102;
let G_104;
let G_108;
let G_109;
let G_110;
let G_112;
let G_117;
let G_122;
let G_123;
let G_124;
let G_127;
let G_129;
let G_131;
let G_132;
let G_135;
let G_137;
let G_138;
let G_140;
let G_141;
let G_142;
let G_144;
let G_150;
let G_152;
let CL_COMMON_LISP_EXPORT;
let CL_COMMON_LISP_MAKE_PACKAGE;
let CL_COMMON_LISP_FIND_SYMBOL;
let CL_COMMON_LISP_INTERN;
let CL_COMMON_LISP_PACKAGE_NICKNAMES;
let CL_COMMON_LISP_PACKAGE_NAME;
let CL_COMMON_LISP_ENSURE_PACKAGE;
let CL_COMMON_LISP_FIND_PACKAGE;
let CL_COMMON_LISP_FIND_ALL_SYMBOLS;
let TMP_125;
// toplevel defun
let F_FIND_ALL_SYMBOLS_2;
F_FIND_ALL_SYMBOLS_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_11;
let TMP_9;
let L_PACKAGE__6;
let TMP_7;
let TMP_5;
let L_G0__5;
let TMP_4;
let L_SYMBOLS__3;
let L_NAME__1;
L_NAME__1=arguments[0];
{
L_SYMBOLS__3=lisp.values1(lisp.S_nil);
{
TMP_4=lisp.CL_listAllPackages();
L_G0__5=lisp.values1(TMP_4);
for(;;){
TMP_5=lisp.callFunctionWithCallStack(G_6,L_G0__5);
if(lisp.values1(TMP_5) !== lisp.S_nil){
}else{
{
TMP_7=lisp.callFunctionWithCallStack(G_8,L_G0__5);
L_PACKAGE__6=lisp.values1(TMP_7);
TMP_9=lisp.callFunctionWithCallStack(G_10,L_G0__5);
L_G0__5=lisp.values1(TMP_9);
TMP_11=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_16;
let L_G7__8;
let TMP_15;
let TMP_14;
let TMP_12;
let L_SYMBOL__7;
L_SYMBOL__7=arguments[0];
TMP_12=lisp.callFunctionWithCallStack(G_13,L_NAME__1,L_SYMBOL__7);
if(lisp.values1(TMP_12) !== lisp.S_nil){
{
TMP_15=lisp.CL_cons(L_SYMBOL__7,L_SYMBOLS__3);
L_G7__8=lisp.values1(TMP_15);
L_SYMBOLS__3=(TMP_16=lisp.values1(L_G7__8));
}
TMP_14=lisp.values1(TMP_16);
}else{
TMP_14=lisp.values1(lisp.S_nil);
}
return TMP_14;
});
lisp.CL_mapPackageSymbols(L_PACKAGE__6,TMP_11);
}
continue;
}
break;
}
}
}
return lisp.values1(L_SYMBOLS__3);
});
CL_COMMON_LISP_FIND_ALL_SYMBOLS=lisp.values1(F_FIND_ALL_SYMBOLS_2);
let F_FIND_PACKAGE_17;
F_FIND_PACKAGE_17=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_18, arguments.length);
}
let TMP_35;
let L_G18__18;
let TMP_33;
let TMP_32;
let TMP_29;
let TMP_28;
let L_G17__17;
let TMP_27;
let TMP_25;
let TMP_24;
let L_PACKAGE__16;
let TMP_23;
let TMP_22;
let L_G10__15;
let TMP_21;
let BLOCK_RESULT_NIL__14;
let TMP_20;
let L_G8__12;
let TMP_19;
let L_NAME__10;
L_NAME__10=arguments[0];
{
TMP_19=lisp.CL_packagep(L_NAME__10);
L_G8__12=lisp.values1(TMP_19);
if(lisp.values1(L_G8__12) !== lisp.S_nil){
TMP_20=lisp.values1(L_NAME__10);
}else{
BLOCK_NIL__14: for(;;){{
TMP_21=lisp.CL_listAllPackages();
L_G10__15=lisp.values1(TMP_21);
for(;;){
TMP_22=lisp.callFunctionWithCallStack(G_6,L_G10__15);
if(lisp.values1(TMP_22) !== lisp.S_nil){
}else{
{
TMP_23=lisp.callFunctionWithCallStack(G_8,L_G10__15);
L_PACKAGE__16=lisp.values1(TMP_23);
TMP_24=lisp.callFunctionWithCallStack(G_10,L_G10__15);
L_G10__15=lisp.values1(TMP_24);
{
TMP_25=G_26.func(L_PACKAGE__16);
TMP_27=lisp.callFunctionWithCallStack(G_13,L_NAME__10,TMP_25);
L_G17__17=lisp.values1(TMP_27);
if(lisp.values1(L_G17__17) !== lisp.S_nil){
TMP_28=lisp.values1(L_G17__17);
}else{
{
TMP_29=G_30.func(L_PACKAGE__16);
TMP_32=lisp.CL_symbolFunction(G_13);
TMP_33=lisp.callFunctionWithCallStack(G_34,L_NAME__10,TMP_29,G_31,TMP_32);
L_G18__18=lisp.values1(TMP_33);
if(lisp.values1(L_G18__18) !== lisp.S_nil){
TMP_35=lisp.values1(L_G18__18);
}else{
TMP_35=lisp.values1(lisp.S_nil);
}
}
TMP_28=lisp.values1(lisp.values1(TMP_35));
}
}
if(lisp.values1(lisp.values1(TMP_28)) !== lisp.S_nil){
BLOCK_RESULT_NIL__14=lisp.values1(L_PACKAGE__16);
break BLOCK_NIL__14;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__14=lisp.values1(lisp.S_nil);
break;
}
TMP_20=BLOCK_RESULT_NIL__14;
}
}
return TMP_20;
});
CL_COMMON_LISP_FIND_PACKAGE=lisp.values1(F_FIND_PACKAGE_17);
let F_ENSURE_PACKAGE_36;
F_ENSURE_PACKAGE_36=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_37, arguments.length);
}
let L_PACKAGE__25;
let TMP_50;
let TMP_48;
let TMP_47;
let L_G20__23;
let TMP_45;
let TMP_44;
let TMP_42;
let TMP_41;
let L_G19__22;
let TMP_40;
let TMP_39;
let TMP_38;
let L_PACKAGE_DESIGNATOR__20;
L_PACKAGE_DESIGNATOR__20=arguments[0];
TMP_38=lisp.CL_packagep(L_PACKAGE_DESIGNATOR__20);
if(lisp.values1(TMP_38) !== lisp.S_nil){
TMP_39=lisp.values1(L_PACKAGE_DESIGNATOR__20);
}else{
{
{
TMP_40=lisp.CL_symbolp(L_PACKAGE_DESIGNATOR__20);
L_G19__22=lisp.values1(TMP_40);
if(lisp.values1(L_G19__22) !== lisp.S_nil){
TMP_42=lisp.callFunctionWithCallStack(G_43,L_PACKAGE_DESIGNATOR__20);
TMP_44=G_18.func(TMP_42);
TMP_41=lisp.values1(TMP_44);
}else{
{
TMP_45=lisp.callFunctionWithCallStack(G_46,L_PACKAGE_DESIGNATOR__20);
L_G20__23=lisp.values1(TMP_45);
if(lisp.values1(L_G20__23) !== lisp.S_nil){
TMP_48=G_18.func(L_PACKAGE_DESIGNATOR__20);
TMP_47=lisp.values1(TMP_48);
}else{
TMP_50=lisp.callFunctionWithCallStack(G_51,L_PACKAGE_DESIGNATOR__20,G_49);
TMP_47=lisp.values1(TMP_50);
}
}
TMP_41=lisp.values1(lisp.values1(TMP_47));
}
}
L_PACKAGE__25=lisp.values1(lisp.values1(TMP_41));
if(lisp.values1(L_PACKAGE__25) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_53,G_52.func(lisp.codeArrayToString([84, 104, 101, 32, 80, 97, 99, 107, 97, 103, 101, 32, 126, 65, 32, 105, 115, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100])),L_PACKAGE_DESIGNATOR__20);
}
}
TMP_39=lisp.values1(L_PACKAGE__25);
}
return TMP_39;
});
CL_COMMON_LISP_ENSURE_PACKAGE=lisp.values1(F_ENSURE_PACKAGE_36);
let F_PACKAGE_NAME_54;
F_PACKAGE_NAME_54=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_26, arguments.length);
}
let TMP_57;
let TMP_56;
let TMP_55;
let L_PACKAGE__26;
L_PACKAGE__26=arguments[0];
TMP_55=G_37.func(L_PACKAGE__26);
TMP_56=lisp.CL_packageName(TMP_55);
TMP_57=lisp.callFunctionWithCallStack(G_52,TMP_56);
return TMP_57;
});
CL_COMMON_LISP_PACKAGE_NAME=lisp.values1(F_PACKAGE_NAME_54);
let F_PACKAGE_NICKNAMES_58;
F_PACKAGE_NICKNAMES_58=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_30, arguments.length);
}
let TMP_64;
let TMP_62;
let TMP_61;
let TMP_60;
let TMP_59;
let L_PACKAGE__28;
L_PACKAGE__28=arguments[0];
TMP_59=lisp.CL_symbolFunction(G_52);
TMP_60=G_37.func(L_PACKAGE__28);
TMP_61=lisp.CL_packageNicknames(TMP_60);
TMP_62=lisp.callFunctionWithCallStack(G_63,TMP_61);
TMP_64=lisp.callFunctionWithCallStack(G_65,TMP_59,TMP_62);
return TMP_64;
});
CL_COMMON_LISP_PACKAGE_NICKNAMES=lisp.values1(F_PACKAGE_NICKNAMES_58);
let F_INTERN_66;
F_INTERN_66=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_67, arguments.length);
}
let TMP_72;
let TMP_71;
let TMP_69;
let L_PACKAGE__31;
let L_NAME__30;
L_NAME__30=arguments[0];
L_PACKAGE__31=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_68)));
TMP_69=lisp.callFunctionWithCallStack(G_70,L_NAME__30);
TMP_71=G_18.func(L_PACKAGE__31);
TMP_72=lisp.CL_intern(TMP_69,TMP_71);
return TMP_72;
});
CL_COMMON_LISP_INTERN=lisp.values1(F_INTERN_66);
let F_FIND_SYMBOL_73;
F_FIND_SYMBOL_73=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_74, arguments.length);
}
let TMP_77;
let TMP_76;
let TMP_75;
let L_PACKAGE__34;
let L_NAME__33;
L_NAME__33=arguments[0];
L_PACKAGE__34=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_68)));
TMP_75=lisp.callFunctionWithCallStack(G_70,L_NAME__33);
TMP_76=G_18.func(L_PACKAGE__34);
TMP_77=lisp.CL_findSymbol(TMP_75,TMP_76);
return TMP_77;
});
CL_COMMON_LISP_FIND_SYMBOL=lisp.values1(F_FIND_SYMBOL_73);
let F_MAKE_PACKAGE_78;
F_MAKE_PACKAGE_78=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_79, arguments.length);
}
let TMP_99;
let TMP_98;
let TMP_97;
let TMP_94;
let TMP_92;
let TMP_91;
let TMP_88;
let TMP_87;
let TMP_85;
let L_USE__38;
let L_NICKNAMES__37;
let L_PACKAGE_NAME__36;
L_PACKAGE_NAME__36=arguments[0];
let supplied_NICKNAMES__37;
for (let TMP_81 = 1; TMP_81 < arguments.length; TMP_81 += 2) {
if(arguments[TMP_81] === G_80){
supplied_NICKNAMES__37=arguments[TMP_81+1];
break;
}
}
L_NICKNAMES__37=supplied_NICKNAMES__37 !== undefined ? supplied_NICKNAMES__37 : (lisp.values1(lisp.S_nil));
let supplied_USE__38;
for (let TMP_83 = 1; TMP_83 < arguments.length; TMP_83 += 2) {
if(arguments[TMP_83] === G_82){
supplied_USE__38=arguments[TMP_83+1];
break;
}
}
L_USE__38=supplied_USE__38 !== undefined ? supplied_USE__38 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_84 = 1; TMP_84 < arguments.length; TMP_84 += 2) {
if(arguments[TMP_84]!==G_82 && arguments[TMP_84]!==G_80) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_84].name); }
}
TMP_85=lisp.callFunctionWithCallStack(G_86,L_PACKAGE_NAME__36);
TMP_87=lisp.callFunctionWithCallStack(G_70,TMP_85);
TMP_88=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_90;
let TMP_89;
let L_NICKNAME__40;
L_NICKNAME__40=arguments[0];
TMP_89=lisp.callFunctionWithCallStack(G_86,L_NICKNAME__40);
TMP_90=lisp.callFunctionWithCallStack(G_70,TMP_89);
return TMP_90;
});
TMP_91=lisp.callFunctionWithCallStack(G_65,TMP_88,L_NICKNAMES__37);
TMP_92=lisp.callFunctionWithCallStack(G_93,TMP_91);
TMP_94=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_96;
let TMP_95;
let L_NICKNAME__41;
L_NICKNAME__41=arguments[0];
TMP_95=lisp.callFunctionWithCallStack(G_86,L_NICKNAME__41);
TMP_96=lisp.callFunctionWithCallStack(G_70,TMP_95);
return TMP_96;
});
TMP_97=lisp.callFunctionWithCallStack(G_65,TMP_94,L_USE__38);
TMP_98=lisp.callFunctionWithCallStack(G_93,TMP_97);
TMP_99=lisp.CL_makePackage(TMP_87,TMP_92,TMP_98);
return TMP_99;
});
CL_COMMON_LISP_MAKE_PACKAGE=lisp.values1(F_MAKE_PACKAGE_78);
let F_EXPORT_101;
F_EXPORT_101=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_102, arguments.length);
}
let TMP_121;
let TMP_120;
let L_SYMBOL__53;
let TMP_119;
let TMP_118;
let L_G28__52;
let L_SYMBOLS__50;
let TMP_116;
let TMP_115;
let L_G26__48;
let TMP_114;
let TMP_113;
let L_G25__47;
let TMP_111;
let TMP_107;
let L_G24__46;
let TMP_106;
let TMP_105;
let L_G23__45;
let TMP_103;
let L_PACKAGE__43;
let L_SYMBOLS__42;
L_SYMBOLS__42=arguments[0];
L_PACKAGE__43=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_68)));
{
TMP_103=lisp.callFunctionWithCallStack(G_104,L_SYMBOLS__42);
L_G23__45=lisp.values1(TMP_103);
if(lisp.values1(L_G23__45) !== lisp.S_nil){
TMP_105=lisp.values1(L_G23__45);
}else{
{
TMP_106=lisp.CL_symbolp(L_SYMBOLS__42);
L_G24__46=lisp.values1(TMP_106);
if(lisp.values1(L_G24__46) !== lisp.S_nil){
TMP_107=lisp.values1(L_G24__46);
}else{
TMP_107=lisp.values1(lisp.S_nil);
}
}
TMP_105=lisp.values1(lisp.values1(TMP_107));
}
}
if(lisp.values1(lisp.values1(TMP_105)) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_51,L_SYMBOLS__42,lisp.makeCons(G_108, lisp.makeCons(G_109, lisp.makeCons(G_110, lisp.S_nil))));
}
{
{
TMP_111=lisp.callFunctionWithCallStack(G_112,L_SYMBOLS__42);
L_G25__47=lisp.values1(TMP_111);
if(lisp.values1(L_G25__47) !== lisp.S_nil){
TMP_113=lisp.values1(L_G25__47);
}else{
{
TMP_114=lisp.CL_symbolp(L_SYMBOLS__42);
L_G26__48=lisp.values1(TMP_114);
if(lisp.values1(L_G26__48) !== lisp.S_nil){
TMP_116=lisp.callFunctionWithCallStack(G_117,L_SYMBOLS__42);
TMP_115=lisp.values1(TMP_116);
}else{
TMP_115=lisp.values1(L_SYMBOLS__42);
}
}
TMP_113=lisp.values1(lisp.values1(TMP_115));
}
}
L_SYMBOLS__50=lisp.values1(lisp.values1(TMP_113));
{
L_G28__52=lisp.values1(L_SYMBOLS__50);
for(;;){
TMP_118=lisp.callFunctionWithCallStack(G_6,L_G28__52);
if(lisp.values1(TMP_118) !== lisp.S_nil){
}else{
{
TMP_119=lisp.callFunctionWithCallStack(G_8,L_G28__52);
L_SYMBOL__53=lisp.values1(TMP_119);
TMP_120=lisp.callFunctionWithCallStack(G_10,L_G28__52);
L_G28__52=lisp.values1(TMP_120);
TMP_121=lisp.CL_symbolp(L_SYMBOL__53);
if(lisp.values1(TMP_121) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_51,L_SYMBOL__53,G_110);
}
}
continue;
}
break;
}
}
lisp.callFunctionWithCallStack(G_122,L_SYMBOLS__50,L_PACKAGE__43);
}
return lisp.values1(G_123);
});
CL_COMMON_LISP_EXPORT=lisp.values1(F_EXPORT_101);
// initialize symbols
G_3 = lisp.intern('FIND-ALL-SYMBOLS', 'COMMON-LISP');
G_6 = lisp.intern('ENDP', 'COMMON-LISP');
G_8 = lisp.intern('CAR', 'COMMON-LISP');
G_10 = lisp.intern('CDR', 'COMMON-LISP');
G_13 = lisp.intern('STRING=', 'COMMON-LISP');
G_18 = lisp.intern('FIND-PACKAGE', 'COMMON-LISP');
G_26 = lisp.intern('PACKAGE-NAME', 'COMMON-LISP');
G_30 = lisp.intern('PACKAGE-NICKNAMES', 'COMMON-LISP');
G_31 = lisp.intern('TEST', 'KEYWORD');
G_34 = lisp.intern('FIND', 'COMMON-LISP');
G_37 = lisp.intern('ENSURE-PACKAGE', 'COMMON-LISP');
G_43 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_46 = lisp.intern('STRINGP', 'COMMON-LISP');
G_49 = lisp.intern('PACKAGE', 'COMMON-LISP');
G_51 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_52 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_53 = lisp.intern('ERROR', 'COMMON-LISP');
G_63 = lisp.intern('RAW-ARRAY-TO-LIST', 'SYSTEM');
G_65 = lisp.intern('%MAPCAR', 'SYSTEM');
G_67 = lisp.intern('INTERN', 'COMMON-LISP');
G_68 = lisp.intern('*PACKAGE*', 'COMMON-LISP');
G_70 = lisp.intern('ARRAY-TO-RAW-STRING', 'SYSTEM');
G_74 = lisp.intern('FIND-SYMBOL', 'COMMON-LISP');
G_79 = lisp.intern('MAKE-PACKAGE', 'COMMON-LISP');
G_80 = lisp.intern('NICKNAMES', 'KEYWORD');
G_82 = lisp.intern('USE', 'KEYWORD');
G_86 = lisp.intern('STRING', 'COMMON-LISP');
G_93 = lisp.intern('LIST-TO-RAW-ARRAY', 'SYSTEM');
G_100 = lisp.intern('DEFPACKAGE', 'COMMON-LISP');
G_102 = lisp.intern('EXPORT', 'COMMON-LISP');
G_104 = lisp.intern('LISTP', 'COMMON-LISP');
G_108 = lisp.intern('OR', 'COMMON-LISP');
G_109 = lisp.intern('CONS', 'COMMON-LISP');
G_110 = lisp.intern('SYMBOL', 'COMMON-LISP');
G_112 = lisp.intern('NULL', 'COMMON-LISP');
G_117 = lisp.intern('LIST', 'COMMON-LISP');
G_122 = lisp.intern('EXPORT', 'SYSTEM');
G_123 = lisp.intern('T', 'COMMON-LISP');
G_124 = lisp.intern('MACRO', 'COMPILER');
G_127 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_129 = lisp.intern('<=', 'COMMON-LISP');
G_131 = lisp.intern('&BODY', 'COMMON-LISP');
G_132 = lisp.intern('OPTIONS', 'COMMON-LISP');
G_135 = lisp.intern('FIRST', 'COMMON-LISP');
G_137 = lisp.intern('REST', 'COMMON-LISP');
G_138 = lisp.intern('*IN-HOST-RUNTIME*', 'COMPILER');
G_140 = lisp.intern('LIST*', 'COMMON-LISP');
G_141 = lisp.intern('EVAL', 'COMMON-LISP');
G_142 = lisp.intern('EXPORT', 'KEYWORD');
G_144 = lisp.intern('ASSOC', 'COMMON-LISP');
G_150 = lisp.intern('%DEFPACKAGE', 'SYSTEM');
G_152 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_FIND_ALL_SYMBOLS.lisp_name = 'FIND-ALL-SYMBOLS'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_FIND_ALL_SYMBOLS);
CL_COMMON_LISP_FIND_PACKAGE.lisp_name = 'FIND-PACKAGE'
lisp.setSymbolFunction(G_18, CL_COMMON_LISP_FIND_PACKAGE);
CL_COMMON_LISP_ENSURE_PACKAGE.lisp_name = 'ENSURE-PACKAGE'
lisp.setSymbolFunction(G_37, CL_COMMON_LISP_ENSURE_PACKAGE);
CL_COMMON_LISP_PACKAGE_NAME.lisp_name = 'PACKAGE-NAME'
lisp.setSymbolFunction(G_26, CL_COMMON_LISP_PACKAGE_NAME);
CL_COMMON_LISP_PACKAGE_NICKNAMES.lisp_name = 'PACKAGE-NICKNAMES'
lisp.setSymbolFunction(G_30, CL_COMMON_LISP_PACKAGE_NICKNAMES);
CL_COMMON_LISP_INTERN.lisp_name = 'INTERN'
lisp.setSymbolFunction(G_67, CL_COMMON_LISP_INTERN);
CL_COMMON_LISP_FIND_SYMBOL.lisp_name = 'FIND-SYMBOL'
lisp.setSymbolFunction(G_74, CL_COMMON_LISP_FIND_SYMBOL);
CL_COMMON_LISP_MAKE_PACKAGE.lisp_name = 'MAKE-PACKAGE'
lisp.setSymbolFunction(G_79, CL_COMMON_LISP_MAKE_PACKAGE);
CL_COMMON_LISP_EXPORT.lisp_name = 'EXPORT'
lisp.setSymbolFunction(G_102, CL_COMMON_LISP_EXPORT);
TMP_125=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_151;
let L_NICKNAMES__63;
let TMP_149;
let TMP_148;
let L_USE__62;
let TMP_147;
let TMP_146;
let L_EXPORT__61;
let TMP_145;
let TMP_143;
let TMP_139;
let L_OPTIONS__60;
let L_G37__59;
let TMP_136;
let L_PACKAGE__58;
let TMP_134;
let L_G36__57;
let TMP_133;
let TMP_130;
let TMP_128;
let TMP_126;
let L_G35__56;
let L_G22__55;
L_G22__55=lisp.jsArrayToList(arguments, 0);
{
L_G35__56=lisp.values1(L_G22__55);
{
TMP_126=lisp.callFunctionWithCallStack(G_127,L_G35__56);
TMP_128=lisp.callFunctionWithCallStack(G_129,1,TMP_126);
if(lisp.values1(TMP_128) !== lisp.S_nil){
TMP_130=lisp.values1(lisp.S_nil);
}else{
TMP_133=lisp.callFunctionWithCallStack(G_53,G_52.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_49, lisp.makeCons(G_131, lisp.makeCons(G_132, lisp.S_nil))),L_G35__56);
TMP_130=lisp.values1(lisp.values1(TMP_133));
}
L_G36__57=lisp.values1(TMP_130);
TMP_134=lisp.callFunctionWithCallStack(G_135,L_G35__56);
L_PACKAGE__58=lisp.values1(TMP_134);
TMP_136=lisp.callFunctionWithCallStack(G_137,L_G35__56);
L_G37__59=lisp.values1(TMP_136);
L_OPTIONS__60=lisp.values1(L_G37__59);
if(lisp.values1(lisp.symbolValue(G_138)) !== lisp.S_nil){
TMP_139=lisp.callFunctionWithCallStack(G_140,G_100,L_PACKAGE__58,L_OPTIONS__60);
lisp.callFunctionWithCallStack(G_141,TMP_139);
}else{
}
{
TMP_143=lisp.callFunctionWithCallStack(G_144,G_142,L_OPTIONS__60);
TMP_145=lisp.callFunctionWithCallStack(G_10,TMP_143);
L_EXPORT__61=lisp.values1(TMP_145);
TMP_146=lisp.callFunctionWithCallStack(G_144,G_82,L_OPTIONS__60);
TMP_147=lisp.callFunctionWithCallStack(G_10,TMP_146);
L_USE__62=lisp.values1(TMP_147);
TMP_148=lisp.callFunctionWithCallStack(G_144,G_80,L_OPTIONS__60);
TMP_149=lisp.callFunctionWithCallStack(G_10,TMP_148);
L_NICKNAMES__63=lisp.values1(TMP_149);
TMP_151=lisp.callFunctionWithCallStack(G_117,G_150,L_PACKAGE__58,G_142,L_EXPORT__61,G_82,L_USE__62,G_80,L_NICKNAMES__63);
}
}
}
return TMP_151;
});
lisp.CL_put(G_100,G_124,TMP_125);
}catch(TMP_1){G_152.func();
console.log(TMP_1.message);
}


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_6;
let G_7;
let G_9;
let G_11;
let G_12;
let G_14;
let G_18;
let G_20;
let G_21;
let G_23;
let G_27;
let G_31;
let G_33;
let G_36;
let G_38;
let G_41;
let G_44;
let G_45;
let G_48;
let G_50;
let G_51;
let G_56;
let G_59;
let G_60;
let G_63;
let G_68;
let G_71;
let G_88;
let G_91;
let G_95;
let G_96;
let G_98;
let G_101;
let G_103;
let G_106;
let G_115;
let G_118;
let G_124;
let G_127;
let G_128;
let G_131;
let G_133;
let G_137;
let G_139;
let G_145;
let G_147;
let G_149;
let G_156;
let G_158;
let G_161;
let G_163;
let G_168;
let G_173;
let G_175;
let G_177;
let G_180;
let G_186;
let G_187;
let G_190;
let G_191;
let G_193;
let G_199;
let G_202;
let G_217;
let G_220;
let G_235;
let G_238;
let G_258;
let G_264;
let G_268;
let G_270;
let G_272;
let G_274;
let G_275;
let G_278;
let G_279;
let G_281;
let G_283;
let G_288;
let G_291;
let G_306;
let G_309;
let G_324;
let G_327;
let G_347;
let G_348;
let G_351;
let G_357;
let G_360;
let G_375;
let G_378;
let G_397;
let G_402;
let G_404;
let G_410;
let G_413;
let G_414;
let G_418;
let G_430;
let G_434;
let G_437;
let G_446;
let G_452;
let G_468;
let G_472;
let G_476;
let G_479;
let G_484;
let G_509;
let G_524;
let G_542;
let G_543;
let G_545;
let G_547;
let G_559;
let G_574;
let G_576;
let G_579;
let G_582;
let G_583;
let G_584;
let G_585;
let G_587;
let G_589;
let G_596;
let G_600;
let G_606;
let G_644;
let G_645;
let CL_COMMON_LISP_FILE_POSITION;
let CL_COMMON_LISP_STREAMP;
let CL_COMMON_LISP_CLOSE;
let CL_COMMON_LISP_STREAM_PEEK_CHAR;
let CL_COMMON_LISP_STREAM_UNREAD_CHAR;
let CL_COMMON_LISP_STREAM_READ_CHAR;
let CL_COMMON_LISP_STREAM_READ_LINE;
let CL_COMMON_LISP_FETCH_STDIN_LINE_IF_REQUIRED;
let CL_COMMON_LISP_FETCH_STDIN_LINE;
let CL_COMMON_LISP_EMPTY_BUFFER_P;
let CL_COMMON_LISP_STANDARD_INPUT_STREAM_POSITION;
let CL_COMMON_LISP_STANDARD_INPUT_STREAM_STRING;
let CL_COMMON_LISP_MAKE_STANDARD_INPUT_STREAM;
let CL_COMMON_LISP_STANDARD_INPUT_STREAM_P;
let CL_COMMON_LISP_FILE_INPUT_STREAM_COLUMN;
let CL_COMMON_LISP_FILE_INPUT_STREAM_LINE;
let CL_COMMON_LISP_FILE_INPUT_STREAM_STRING_STREAM;
let CL_COMMON_LISP_MAKE_FILE_INPUT_STREAM;
let CL_COMMON_LISP_FILE_INPUT_STREAM_P;
let CL_COMMON_LISP_COPY_FILE_INPUT_STREAM;
let CL_COMMON_LISP_STRING_INPUT_STREAM_EOF_P;
let CL_COMMON_LISP_MAKE_STRING_INPUT_STREAM;
let CL_COMMON_LISP_STRING_INPUT_STREAM_END;
let CL_COMMON_LISP_STRING_INPUT_STREAM_POSITION;
let CL_COMMON_LISP_STRING_INPUT_STREAM_STRING;
let CL_COMMON_LISP_PERCENTMAKE_STRING_INPUT_STREAM;
let CL_COMMON_LISP_STRING_INPUT_STREAM_P;
let CL_COMMON_LISP_FRESH_LINE;
let CL_COMMON_LISP_TERPRI;
let CL_COMMON_LISP_FORCE_OUTPUT;
let CL_COMMON_LISP_FINISH_OUTPUT;
let CL_COMMON_LISP_WRITE_LINE;
let CL_COMMON_LISP_WRITE_STRING;
let CL_COMMON_LISP_WRITE_CHAR;
let CL_COMMON_LISP_STREAM_WRITE_STRING;
let CL_COMMON_LISP_STREAM_WRITE_CHAR;
let CL_COMMON_LISP_FLUSH;
let CL_COMMON_LISP_STREAM_COLUMN;
let CL_COMMON_LISP_COMPUTE_TEXT_COLUMN;
let CL_COMMON_LISP_STANDARD_OUTPUT_STREAM_BUFFER;
let CL_COMMON_LISP_MAKE_STANDARD_OUTPUT_STREAM;
let CL_COMMON_LISP_STANDARD_OUTPUT_STREAM_P;
let CL_COMMON_LISP_GET_OUTPUT_STREAM_STRING;
let CL_COMMON_LISP_MAKE_STRING_OUTPUT_STREAM;
let CL_COMMON_LISP_STRING_OUTPUT_STREAM_BUFFER;
let CL_COMMON_LISP_PERCENTMAKE_STRING_OUTPUT_STREAM;
let CL_COMMON_LISP_STRING_OUTPUT_STREAM_P;
let TMP_627;
let TMP_608;
let TMP_577;
let TMP_416;
let TMP_415;
let L_G123__266;
let L_G122__265;
let TMP_392;
let TMP_391;
let TMP_382;
let TMP_379;
let TMP_373;
let TMP_364;
let TMP_361;
let L_G103__227;
let L_G102__226;
let TMP_341;
let TMP_340;
let TMP_331;
let TMP_328;
let TMP_322;
let TMP_313;
let TMP_310;
let TMP_304;
let TMP_295;
let TMP_292;
let L_G73__163;
let L_G72__162;
let TMP_252;
let TMP_251;
let TMP_242;
let TMP_239;
let TMP_233;
let TMP_224;
let TMP_221;
let TMP_215;
let TMP_206;
let TMP_203;
let TMP_93;
let TMP_92;
let TMP_90;
let TMP_89;
let L_G25__55;
let L_G24__54;
let TMP_85;
let TMP_84;
let TMP_75;
let TMP_72;
let L_G11__24;
let L_G10__23;
let TMP_43;
let TMP_42;
let TMP_28;
let TMP_24;
// toplevel defun
let F_STRING_OUTPUT_STREAM_P_5;
F_STRING_OUTPUT_STREAM_P_5=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_6, arguments.length);
}
let TMP_8;
let L_X__1;
L_X__1=arguments[0];
TMP_8=lisp.callFunctionWithCallStack(G_9,L_X__1,G_7);
return TMP_8;
});
CL_COMMON_LISP_STRING_OUTPUT_STREAM_P=lisp.values1(F_STRING_OUTPUT_STREAM_P_5);
let F_PERCENTMAKE_STRING_OUTPUT_STREAM_10;
F_PERCENTMAKE_STRING_OUTPUT_STREAM_10=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_11, arguments.length);
}
let TMP_16;
let L_BUFFER__3;
let supplied_BUFFER__3;
for (let TMP_13 = 0; TMP_13 < arguments.length; TMP_13 += 2) {
if(arguments[TMP_13] === G_12){
supplied_BUFFER__3=arguments[TMP_13+1];
break;
}
}
L_BUFFER__3=supplied_BUFFER__3 !== undefined ? supplied_BUFFER__3 : (lisp.values1(G_14.func(lisp.codeArrayToString([]))));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_15 = 0; TMP_15 < arguments.length; TMP_15 += 2) {
if(arguments[TMP_15]!==G_12) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_15].name); }
}
TMP_16=lisp.CL_makeStructure(G_7,L_BUFFER__3);
return TMP_16;
});
CL_COMMON_LISP_PERCENTMAKE_STRING_OUTPUT_STREAM=lisp.values1(F_PERCENTMAKE_STRING_OUTPUT_STREAM_10);
let F_STRING_OUTPUT_STREAM_BUFFER_17;
F_STRING_OUTPUT_STREAM_BUFFER_17=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_18, arguments.length);
}
let TMP_22;
let TMP_19;
let L_STRUCTURE__5;
L_STRUCTURE__5=arguments[0];
TMP_19=lisp.CL_structurep(L_STRUCTURE__5);
if(lisp.values1(TMP_19) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__5,G_20);
}
TMP_22=lisp.CL_structureRef(L_STRUCTURE__5,0);
return TMP_22;
});
CL_COMMON_LISP_STRING_OUTPUT_STREAM_BUFFER=lisp.values1(F_STRING_OUTPUT_STREAM_BUFFER_17);
let F_MAKE_STRING_OUTPUT_STREAM_49;
F_MAKE_STRING_OUTPUT_STREAM_49=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_50, arguments.length);
}
let TMP_54;
let L_ELEMENT_TYPE__25;
let supplied_ELEMENT_TYPE__25;
for (let TMP_52 = 0; TMP_52 < arguments.length; TMP_52 += 2) {
if(arguments[TMP_52] === G_51){
supplied_ELEMENT_TYPE__25=arguments[TMP_52+1];
break;
}
}
L_ELEMENT_TYPE__25=supplied_ELEMENT_TYPE__25 !== undefined ? supplied_ELEMENT_TYPE__25 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_53 = 0; TMP_53 < arguments.length; TMP_53 += 2) {
if(arguments[TMP_53]!==G_51) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_53].name); }
}
TMP_54=G_11.func(G_12,G_14.func(lisp.codeArrayToString([])));
return TMP_54;
});
CL_COMMON_LISP_MAKE_STRING_OUTPUT_STREAM=lisp.values1(F_MAKE_STRING_OUTPUT_STREAM_49);
let F_GET_OUTPUT_STREAM_STRING_55;
F_GET_OUTPUT_STREAM_STRING_55=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_56, arguments.length);
}
let L_G12__30;
let L_STRING__29;
let TMP_57;
let L_STREAM__27;
L_STREAM__27=arguments[0];
{
TMP_57=G_18.func(L_STREAM__27);
L_STRING__29=lisp.values1(TMP_57);
{
L_G12__30=lisp.values1(L_STREAM__27);
lisp.callFunctionWithCallStack(G_23,G_14.func(lisp.codeArrayToString([])),L_G12__30);
}
}
return lisp.values1(L_STRING__29);
});
CL_COMMON_LISP_GET_OUTPUT_STREAM_STRING=lisp.values1(F_GET_OUTPUT_STREAM_STRING_55);
let F_STANDARD_OUTPUT_STREAM_P_58;
F_STANDARD_OUTPUT_STREAM_P_58=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_59, arguments.length);
}
let TMP_61;
let L_X__32;
L_X__32=arguments[0];
TMP_61=lisp.callFunctionWithCallStack(G_9,L_X__32,G_60);
return TMP_61;
});
CL_COMMON_LISP_STANDARD_OUTPUT_STREAM_P=lisp.values1(F_STANDARD_OUTPUT_STREAM_P_58);
let F_MAKE_STANDARD_OUTPUT_STREAM_62;
F_MAKE_STANDARD_OUTPUT_STREAM_62=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_63, arguments.length);
}
let TMP_66;
let L_BUFFER__34;
let supplied_BUFFER__34;
for (let TMP_64 = 0; TMP_64 < arguments.length; TMP_64 += 2) {
if(arguments[TMP_64] === G_12){
supplied_BUFFER__34=arguments[TMP_64+1];
break;
}
}
L_BUFFER__34=supplied_BUFFER__34 !== undefined ? supplied_BUFFER__34 : (lisp.values1(G_14.func(lisp.codeArrayToString([]))));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_65 = 0; TMP_65 < arguments.length; TMP_65 += 2) {
if(arguments[TMP_65]!==G_12) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_65].name); }
}
TMP_66=lisp.CL_makeStructure(G_60,L_BUFFER__34);
return TMP_66;
});
CL_COMMON_LISP_MAKE_STANDARD_OUTPUT_STREAM=lisp.values1(F_MAKE_STANDARD_OUTPUT_STREAM_62);
let F_STANDARD_OUTPUT_STREAM_BUFFER_67;
F_STANDARD_OUTPUT_STREAM_BUFFER_67=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_68, arguments.length);
}
let TMP_70;
let TMP_69;
let L_STRUCTURE__36;
L_STRUCTURE__36=arguments[0];
TMP_69=lisp.CL_structurep(L_STRUCTURE__36);
if(lisp.values1(TMP_69) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__36,G_20);
}
TMP_70=lisp.CL_structureRef(L_STRUCTURE__36,0);
return TMP_70;
});
CL_COMMON_LISP_STANDARD_OUTPUT_STREAM_BUFFER=lisp.values1(F_STANDARD_OUTPUT_STREAM_BUFFER_67);
let F_COMPUTE_TEXT_COLUMN_94;
F_COMPUTE_TEXT_COLUMN_94=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_95, arguments.length);
}
let TMP_104;
let TMP_102;
let TMP_100;
let TMP_99;
let L_POS__58;
let TMP_97;
let L_TEXT__56;
L_TEXT__56=arguments[0];
{
TMP_97=lisp.callFunctionWithCallStack(G_98,lisp.makeCharacter(10),L_TEXT__56,G_96,G_4);
L_POS__58=lisp.values1(TMP_97);
if(lisp.values1(L_POS__58) !== lisp.S_nil){
TMP_100=lisp.callFunctionWithCallStack(G_101,L_TEXT__56);
TMP_102=lisp.callFunctionWithCallStack(G_103,TMP_100,L_POS__58,1);
TMP_99=TMP_102;
}else{
TMP_104=lisp.callFunctionWithCallStack(G_101,L_TEXT__56);
TMP_99=TMP_104;
}
}
return TMP_99;
});
CL_COMMON_LISP_COMPUTE_TEXT_COLUMN=lisp.values1(F_COMPUTE_TEXT_COLUMN_94);
let F_STREAM_COLUMN_105;
F_STREAM_COLUMN_105=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_106, arguments.length);
}
let TMP_116;
let TMP_114;
let TMP_113;
let TMP_112;
let L_G27__62;
let TMP_111;
let TMP_110;
let TMP_109;
let TMP_108;
let L_G26__61;
let TMP_107;
let L_STREAM__59;
L_STREAM__59=arguments[0];
{
TMP_107=G_6.func(L_STREAM__59);
L_G26__61=lisp.values1(TMP_107);
if(lisp.values1(L_G26__61) !== lisp.S_nil){
TMP_109=G_18.func(L_STREAM__59);
TMP_110=G_95.func(TMP_109);
TMP_108=TMP_110;
}else{
{
TMP_111=G_59.func(L_STREAM__59);
L_G27__62=lisp.values1(TMP_111);
if(lisp.values1(L_G27__62) !== lisp.S_nil){
TMP_113=G_68.func(L_STREAM__59);
TMP_114=G_95.func(TMP_113);
TMP_112=TMP_114;
}else{
TMP_116=lisp.callFunctionWithCallStack(G_21,L_STREAM__59,G_115);
TMP_112=TMP_116;
}
}
TMP_108=TMP_112;
}
}
return TMP_108;
});
CL_COMMON_LISP_STREAM_COLUMN=lisp.values1(F_STREAM_COLUMN_105);
let F_FLUSH_117;
F_FLUSH_117=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_118, arguments.length);
}
let TMP_129;
let L_G29__67;
let TMP_126;
let TMP_125;
let TMP_123;
let TMP_122;
let L_X__66;
let TMP_121;
let TMP_120;
let TMP_119;
let L_STREAM__64;
L_STREAM__64=arguments[0];
TMP_119=G_59.func(L_STREAM__64);
if(lisp.values1(TMP_119) !== lisp.S_nil){
{
TMP_121=G_68.func(L_STREAM__64);
L_X__66=lisp.values1(TMP_121);
TMP_122=lisp.callFunctionWithCallStack(G_101,L_X__66);
TMP_123=lisp.callFunctionWithCallStack(G_124,0,TMP_122);
if(lisp.values1(TMP_123) !== lisp.S_nil){
TMP_126=lisp.callFunctionWithCallStack(G_127,L_X__66);
lisp.callFunctionWithCallStack(G_128,TMP_126);
{
L_G29__67=lisp.values1(L_STREAM__64);
TMP_129=lisp.callFunctionWithCallStack(G_71,G_14.func(lisp.codeArrayToString([])),L_G29__67);
}
TMP_125=TMP_129;
}else{
TMP_125=lisp.values1(lisp.S_nil);
}
}
TMP_120=TMP_125;
}else{
TMP_120=lisp.values1(lisp.S_nil);
}
return TMP_120;
});
CL_COMMON_LISP_FLUSH=lisp.values1(F_FLUSH_117);
let F_STREAM_WRITE_CHAR_130;
F_STREAM_WRITE_CHAR_130=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_131, arguments.length);
}
let TMP_144;
let L_G_STORE36__77;
let TMP_143;
let TMP_142;
let TMP_141;
let L_G35__76;
let L_G34__75;
let TMP_140;
let L_G_STORE33__74;
let TMP_138;
let TMP_136;
let TMP_135;
let L_G32__73;
let L_G31__72;
let TMP_134;
let TMP_132;
let L_CHAR__70;
let L_STREAM__69;
L_STREAM__69=arguments[0];
L_CHAR__70=arguments[1];
TMP_132=lisp.CL_characterp(L_CHAR__70);
if(lisp.values1(TMP_132) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_CHAR__70,G_133);
}
{
TMP_134=G_6.func(L_STREAM__69);
L_G31__72=lisp.values1(TMP_134);
if(lisp.values1(L_G31__72) !== lisp.S_nil){
{
L_G32__73=lisp.values1(L_STREAM__69);
TMP_135=G_18.func(L_STREAM__69);
TMP_136=lisp.callFunctionWithCallStack(G_137,L_CHAR__70);
TMP_138=lisp.callFunctionWithCallStack(G_139,TMP_135,TMP_136);
L_G_STORE33__74=lisp.values1(TMP_138);
lisp.callFunctionWithCallStack(G_23,L_G_STORE33__74,L_G32__73);
}
}else{
{
TMP_140=G_59.func(L_STREAM__69);
L_G34__75=lisp.values1(TMP_140);
if(lisp.values1(L_G34__75) !== lisp.S_nil){
{
L_G35__76=lisp.values1(L_STREAM__69);
TMP_141=G_68.func(L_STREAM__69);
TMP_142=lisp.callFunctionWithCallStack(G_137,L_CHAR__70);
TMP_143=lisp.callFunctionWithCallStack(G_139,TMP_141,TMP_142);
L_G_STORE36__77=lisp.values1(TMP_143);
lisp.callFunctionWithCallStack(G_71,L_G_STORE36__77,L_G35__76);
}
TMP_144=lisp.callFunctionWithCallStack(G_145,L_CHAR__70,lisp.makeCharacter(10));
if(lisp.values1(TMP_144) !== lisp.S_nil){
G_118.func(L_STREAM__69);
}else{
}
}else{
lisp.callFunctionWithCallStack(G_21,L_STREAM__69,G_115);
}
}
}
}
return lisp.values1(L_CHAR__70);
});
CL_COMMON_LISP_STREAM_WRITE_CHAR=lisp.values1(F_STREAM_WRITE_CHAR_130);
let F_STREAM_WRITE_STRING_146;
F_STREAM_WRITE_STRING_146=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_147, arguments.length);
}
let L_G_STORE43__87;
let TMP_155;
let TMP_154;
let L_G42__86;
let L_G41__85;
let TMP_153;
let L_G_STORE40__84;
let TMP_152;
let TMP_151;
let L_G39__83;
let L_G38__82;
let TMP_150;
let TMP_148;
let L_STRING__80;
let L_STREAM__79;
L_STREAM__79=arguments[0];
L_STRING__80=arguments[1];
TMP_148=lisp.callFunctionWithCallStack(G_149,L_STRING__80);
if(lisp.values1(TMP_148) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRING__80,G_137);
}
{
TMP_150=G_6.func(L_STREAM__79);
L_G38__82=lisp.values1(TMP_150);
if(lisp.values1(L_G38__82) !== lisp.S_nil){
{
L_G39__83=lisp.values1(L_STREAM__79);
TMP_151=G_18.func(L_STREAM__79);
TMP_152=lisp.callFunctionWithCallStack(G_139,TMP_151,L_STRING__80);
L_G_STORE40__84=lisp.values1(TMP_152);
lisp.callFunctionWithCallStack(G_23,L_G_STORE40__84,L_G39__83);
}
}else{
{
TMP_153=G_59.func(L_STREAM__79);
L_G41__85=lisp.values1(TMP_153);
if(lisp.values1(L_G41__85) !== lisp.S_nil){
{
L_G42__86=lisp.values1(L_STREAM__79);
TMP_154=G_68.func(L_STREAM__79);
TMP_155=lisp.callFunctionWithCallStack(G_139,TMP_154,L_STRING__80);
L_G_STORE43__87=lisp.values1(TMP_155);
lisp.callFunctionWithCallStack(G_71,L_G_STORE43__87,L_G42__86);
}
}else{
lisp.callFunctionWithCallStack(G_21,L_STREAM__79,G_115);
}
}
}
}
return lisp.values1(L_STRING__80);
});
CL_COMMON_LISP_STREAM_WRITE_STRING=lisp.values1(F_STREAM_WRITE_STRING_146);
let F_WRITE_CHAR_157;
F_WRITE_CHAR_157=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_158, arguments.length);
}
let TMP_159;
let L_STREAM__90;
let L_CHAR__89;
L_CHAR__89=arguments[0];
L_STREAM__90=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_88)));
TMP_159=G_131.func(L_STREAM__90,L_CHAR__89);
return TMP_159;
});
CL_COMMON_LISP_WRITE_CHAR=lisp.values1(F_WRITE_CHAR_157);
let F_WRITE_STRING_160;
F_WRITE_STRING_160=(function(){
if(arguments.length < 1 || 6 < arguments.length) {
lisp.argumentsError(G_44, arguments.length);
}
let TMP_166;
let L_END__95;
let L_START__94;
let L_STREAM__93;
let L_STRING__92;
L_STRING__92=arguments[0];
L_STREAM__93=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_88)));
let supplied_START__94;
for (let TMP_162 = 2; TMP_162 < arguments.length; TMP_162 += 2) {
if(arguments[TMP_162] === G_161){
supplied_START__94=arguments[TMP_162+1];
break;
}
}
L_START__94=supplied_START__94 !== undefined ? supplied_START__94 : (lisp.values1(lisp.S_nil));
let supplied_END__95;
for (let TMP_164 = 2; TMP_164 < arguments.length; TMP_164 += 2) {
if(arguments[TMP_164] === G_163){
supplied_END__95=arguments[TMP_164+1];
break;
}
}
L_END__95=supplied_END__95 !== undefined ? supplied_END__95 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_165 = 2; TMP_165 < arguments.length; TMP_165 += 2) {
if(arguments[TMP_165]!==G_163 && arguments[TMP_165]!==G_161) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_165].name); }
}
TMP_166=G_147.func(L_STREAM__93,L_STRING__92);
return TMP_166;
});
CL_COMMON_LISP_WRITE_STRING=lisp.values1(F_WRITE_STRING_160);
let F_WRITE_LINE_167;
F_WRITE_LINE_167=(function(){
if(arguments.length < 1 || 6 < arguments.length) {
lisp.argumentsError(G_168, arguments.length);
}
let L_END__100;
let L_START__99;
let L_STREAM__98;
let L_STRING__97;
L_STRING__97=arguments[0];
L_STREAM__98=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_88)));
let supplied_START__99;
for (let TMP_169 = 2; TMP_169 < arguments.length; TMP_169 += 2) {
if(arguments[TMP_169] === G_161){
supplied_START__99=arguments[TMP_169+1];
break;
}
}
L_START__99=supplied_START__99 !== undefined ? supplied_START__99 : (lisp.values1(lisp.S_nil));
let supplied_END__100;
for (let TMP_170 = 2; TMP_170 < arguments.length; TMP_170 += 2) {
if(arguments[TMP_170] === G_163){
supplied_END__100=arguments[TMP_170+1];
break;
}
}
L_END__100=supplied_END__100 !== undefined ? supplied_END__100 : (lisp.values1(lisp.S_nil));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_171 = 2; TMP_171 < arguments.length; TMP_171 += 2) {
if(arguments[TMP_171]!==G_163 && arguments[TMP_171]!==G_161) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_171].name); }
}
G_147.func(L_STREAM__98,L_STRING__97);
G_131.func(L_STREAM__98,lisp.makeCharacter(10));
return lisp.values1(L_STRING__97);
});
CL_COMMON_LISP_WRITE_LINE=lisp.values1(F_WRITE_LINE_167);
let F_FINISH_OUTPUT_172;
F_FINISH_OUTPUT_172=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_173, arguments.length);
}
let L_STREAM__102;
L_STREAM__102=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_88)));
G_118.func(L_STREAM__102);
return lisp.values1(lisp.S_nil);
});
CL_COMMON_LISP_FINISH_OUTPUT=lisp.values1(F_FINISH_OUTPUT_172);
let F_FORCE_OUTPUT_174;
F_FORCE_OUTPUT_174=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_175, arguments.length);
}
let L_STREAM__104;
L_STREAM__104=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_88)));
G_118.func(L_STREAM__104);
return lisp.values1(lisp.S_nil);
});
CL_COMMON_LISP_FORCE_OUTPUT=lisp.values1(F_FORCE_OUTPUT_174);
let F_TERPRI_176;
F_TERPRI_176=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_177, arguments.length);
}
let TMP_178;
let L_STREAM__106;
L_STREAM__106=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_88)));
TMP_178=G_158.func(lisp.makeCharacter(10),L_STREAM__106);
return TMP_178;
});
CL_COMMON_LISP_TERPRI=lisp.values1(F_TERPRI_176);
let F_FRESH_LINE_179;
F_FRESH_LINE_179=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_180, arguments.length);
}
let TMP_184;
let TMP_183;
let TMP_182;
let TMP_181;
let L_STREAM__108;
L_STREAM__108=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_88)));
TMP_181=G_106.func(L_STREAM__108);
TMP_182=lisp.callFunctionWithCallStack(G_124,0,TMP_181);
if(lisp.values1(TMP_182) !== lisp.S_nil){
TMP_184=G_177.func(L_STREAM__108);
TMP_183=TMP_184;
}else{
TMP_183=lisp.values1(lisp.S_nil);
}
return TMP_183;
});
CL_COMMON_LISP_FRESH_LINE=lisp.values1(F_FRESH_LINE_179);
let F_STRING_INPUT_STREAM_P_185;
F_STRING_INPUT_STREAM_P_185=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_186, arguments.length);
}
let TMP_188;
let L_X__110;
L_X__110=arguments[0];
TMP_188=lisp.callFunctionWithCallStack(G_9,L_X__110,G_187);
return TMP_188;
});
CL_COMMON_LISP_STRING_INPUT_STREAM_P=lisp.values1(F_STRING_INPUT_STREAM_P_185);
let F_PERCENTMAKE_STRING_INPUT_STREAM_189;
F_PERCENTMAKE_STRING_INPUT_STREAM_189=(function(){
if(arguments.length < 0 || 6 < arguments.length) {
lisp.argumentsError(G_190, arguments.length);
}
let TMP_197;
let L_END__114;
let L_POSITION__113;
let L_STRING__112;
let supplied_STRING__112;
for (let TMP_192 = 0; TMP_192 < arguments.length; TMP_192 += 2) {
if(arguments[TMP_192] === G_191){
supplied_STRING__112=arguments[TMP_192+1];
break;
}
}
L_STRING__112=supplied_STRING__112 !== undefined ? supplied_STRING__112 : (lisp.values1(lisp.S_nil));
let supplied_POSITION__113;
for (let TMP_194 = 0; TMP_194 < arguments.length; TMP_194 += 2) {
if(arguments[TMP_194] === G_193){
supplied_POSITION__113=arguments[TMP_194+1];
break;
}
}
L_POSITION__113=supplied_POSITION__113 !== undefined ? supplied_POSITION__113 : (lisp.values1(lisp.S_nil));
let supplied_END__114;
for (let TMP_195 = 0; TMP_195 < arguments.length; TMP_195 += 2) {
if(arguments[TMP_195] === G_163){
supplied_END__114=arguments[TMP_195+1];
break;
}
}
L_END__114=supplied_END__114 !== undefined ? supplied_END__114 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_196 = 0; TMP_196 < arguments.length; TMP_196 += 2) {
if(arguments[TMP_196]!==G_163 && arguments[TMP_196]!==G_193 && arguments[TMP_196]!==G_191) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_196].name); }
}
TMP_197=lisp.CL_makeStructure(G_187,L_STRING__112,L_POSITION__113,L_END__114);
return TMP_197;
});
CL_COMMON_LISP_PERCENTMAKE_STRING_INPUT_STREAM=lisp.values1(F_PERCENTMAKE_STRING_INPUT_STREAM_189);
let F_STRING_INPUT_STREAM_STRING_198;
F_STRING_INPUT_STREAM_STRING_198=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_199, arguments.length);
}
let TMP_201;
let TMP_200;
let L_STRUCTURE__116;
L_STRUCTURE__116=arguments[0];
TMP_200=lisp.CL_structurep(L_STRUCTURE__116);
if(lisp.values1(TMP_200) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__116,G_20);
}
TMP_201=lisp.CL_structureRef(L_STRUCTURE__116,0);
return TMP_201;
});
CL_COMMON_LISP_STRING_INPUT_STREAM_STRING=lisp.values1(F_STRING_INPUT_STREAM_STRING_198);
let F_STRING_INPUT_STREAM_POSITION_216;
F_STRING_INPUT_STREAM_POSITION_216=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_217, arguments.length);
}
let TMP_219;
let TMP_218;
let L_STRUCTURE__130;
L_STRUCTURE__130=arguments[0];
TMP_218=lisp.CL_structurep(L_STRUCTURE__130);
if(lisp.values1(TMP_218) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__130,G_20);
}
TMP_219=lisp.CL_structureRef(L_STRUCTURE__130,1);
return TMP_219;
});
CL_COMMON_LISP_STRING_INPUT_STREAM_POSITION=lisp.values1(F_STRING_INPUT_STREAM_POSITION_216);
let F_STRING_INPUT_STREAM_END_234;
F_STRING_INPUT_STREAM_END_234=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_235, arguments.length);
}
let TMP_237;
let TMP_236;
let L_STRUCTURE__144;
L_STRUCTURE__144=arguments[0];
TMP_236=lisp.CL_structurep(L_STRUCTURE__144);
if(lisp.values1(TMP_236) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__144,G_20);
}
TMP_237=lisp.CL_structureRef(L_STRUCTURE__144,2);
return TMP_237;
});
CL_COMMON_LISP_STRING_INPUT_STREAM_END=lisp.values1(F_STRING_INPUT_STREAM_END_234);
let F_MAKE_STRING_INPUT_STREAM_257;
F_MAKE_STRING_INPUT_STREAM_257=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(G_258, arguments.length);
}
let TMP_262;
let TMP_261;
let L_G75__169;
let TMP_260;
let TMP_259;
let L_G74__168;
let L_END__166;
let L_START__165;
let L_STRING__164;
L_STRING__164=arguments[0];
L_START__165=arguments.length > 1 ? arguments[1] : (lisp.values1(0));
L_END__166=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
{
L_G74__168=lisp.values1(L_END__166);
if(lisp.values1(L_G74__168) !== lisp.S_nil){
TMP_259=lisp.values1(L_G74__168);
}else{
{
TMP_260=lisp.callFunctionWithCallStack(G_101,L_STRING__164);
L_G75__169=lisp.values1(TMP_260);
if(lisp.values1(L_G75__169) !== lisp.S_nil){
TMP_261=lisp.values1(L_G75__169);
}else{
TMP_261=lisp.values1(lisp.S_nil);
}
}
TMP_259=lisp.values1(lisp.values1(TMP_261));
}
}
TMP_262=G_190.func(G_191,L_STRING__164,G_193,L_START__165,G_163,lisp.values1(TMP_259));
return TMP_262;
});
CL_COMMON_LISP_MAKE_STRING_INPUT_STREAM=lisp.values1(F_MAKE_STRING_INPUT_STREAM_257);
let F_STRING_INPUT_STREAM_EOF_P_263;
F_STRING_INPUT_STREAM_EOF_P_263=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_264, arguments.length);
}
let TMP_267;
let TMP_266;
let TMP_265;
let L_STREAM__170;
L_STREAM__170=arguments[0];
TMP_265=G_217.func(L_STREAM__170);
TMP_266=G_235.func(L_STREAM__170);
TMP_267=lisp.callFunctionWithCallStack(G_268,TMP_265,TMP_266);
return TMP_267;
});
CL_COMMON_LISP_STRING_INPUT_STREAM_EOF_P=lisp.values1(F_STRING_INPUT_STREAM_EOF_P_263);
let F_COPY_FILE_INPUT_STREAM_269;
F_COPY_FILE_INPUT_STREAM_269=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_270, arguments.length);
}
let TMP_271;
let L_X__172;
L_X__172=arguments[0];
TMP_271=lisp.callFunctionWithCallStack(G_272,L_X__172);
return TMP_271;
});
CL_COMMON_LISP_COPY_FILE_INPUT_STREAM=lisp.values1(F_COPY_FILE_INPUT_STREAM_269);
let F_FILE_INPUT_STREAM_P_273;
F_FILE_INPUT_STREAM_P_273=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_274, arguments.length);
}
let TMP_276;
let L_X__174;
L_X__174=arguments[0];
TMP_276=lisp.callFunctionWithCallStack(G_9,L_X__174,G_275);
return TMP_276;
});
CL_COMMON_LISP_FILE_INPUT_STREAM_P=lisp.values1(F_FILE_INPUT_STREAM_P_273);
let F_MAKE_FILE_INPUT_STREAM_277;
F_MAKE_FILE_INPUT_STREAM_277=(function(){
if(arguments.length < 0 || 6 < arguments.length) {
lisp.argumentsError(G_278, arguments.length);
}
let TMP_286;
let L_COLUMN__178;
let L_LINE__177;
let L_STRING_STREAM__176;
let supplied_STRING_STREAM__176;
for (let TMP_280 = 0; TMP_280 < arguments.length; TMP_280 += 2) {
if(arguments[TMP_280] === G_279){
supplied_STRING_STREAM__176=arguments[TMP_280+1];
break;
}
}
L_STRING_STREAM__176=supplied_STRING_STREAM__176 !== undefined ? supplied_STRING_STREAM__176 : (lisp.values1(lisp.S_nil));
let supplied_LINE__177;
for (let TMP_282 = 0; TMP_282 < arguments.length; TMP_282 += 2) {
if(arguments[TMP_282] === G_281){
supplied_LINE__177=arguments[TMP_282+1];
break;
}
}
L_LINE__177=supplied_LINE__177 !== undefined ? supplied_LINE__177 : (lisp.values1(1));
let supplied_COLUMN__178;
for (let TMP_284 = 0; TMP_284 < arguments.length; TMP_284 += 2) {
if(arguments[TMP_284] === G_283){
supplied_COLUMN__178=arguments[TMP_284+1];
break;
}
}
L_COLUMN__178=supplied_COLUMN__178 !== undefined ? supplied_COLUMN__178 : (lisp.values1(0));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_285 = 0; TMP_285 < arguments.length; TMP_285 += 2) {
if(arguments[TMP_285]!==G_283 && arguments[TMP_285]!==G_281 && arguments[TMP_285]!==G_279) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_285].name); }
}
TMP_286=lisp.CL_makeStructure(G_275,L_STRING_STREAM__176,L_LINE__177,L_COLUMN__178);
return TMP_286;
});
CL_COMMON_LISP_MAKE_FILE_INPUT_STREAM=lisp.values1(F_MAKE_FILE_INPUT_STREAM_277);
let F_FILE_INPUT_STREAM_STRING_STREAM_287;
F_FILE_INPUT_STREAM_STRING_STREAM_287=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_288, arguments.length);
}
let TMP_290;
let TMP_289;
let L_STRUCTURE__180;
L_STRUCTURE__180=arguments[0];
TMP_289=lisp.CL_structurep(L_STRUCTURE__180);
if(lisp.values1(TMP_289) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__180,G_20);
}
TMP_290=lisp.CL_structureRef(L_STRUCTURE__180,0);
return TMP_290;
});
CL_COMMON_LISP_FILE_INPUT_STREAM_STRING_STREAM=lisp.values1(F_FILE_INPUT_STREAM_STRING_STREAM_287);
let F_FILE_INPUT_STREAM_LINE_305;
F_FILE_INPUT_STREAM_LINE_305=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_306, arguments.length);
}
let TMP_308;
let TMP_307;
let L_STRUCTURE__194;
L_STRUCTURE__194=arguments[0];
TMP_307=lisp.CL_structurep(L_STRUCTURE__194);
if(lisp.values1(TMP_307) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__194,G_20);
}
TMP_308=lisp.CL_structureRef(L_STRUCTURE__194,1);
return TMP_308;
});
CL_COMMON_LISP_FILE_INPUT_STREAM_LINE=lisp.values1(F_FILE_INPUT_STREAM_LINE_305);
let F_FILE_INPUT_STREAM_COLUMN_323;
F_FILE_INPUT_STREAM_COLUMN_323=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_324, arguments.length);
}
let TMP_326;
let TMP_325;
let L_STRUCTURE__208;
L_STRUCTURE__208=arguments[0];
TMP_325=lisp.CL_structurep(L_STRUCTURE__208);
if(lisp.values1(TMP_325) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__208,G_20);
}
TMP_326=lisp.CL_structureRef(L_STRUCTURE__208,2);
return TMP_326;
});
CL_COMMON_LISP_FILE_INPUT_STREAM_COLUMN=lisp.values1(F_FILE_INPUT_STREAM_COLUMN_323);
let F_STANDARD_INPUT_STREAM_P_346;
F_STANDARD_INPUT_STREAM_P_346=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_347, arguments.length);
}
let TMP_349;
let L_X__228;
L_X__228=arguments[0];
TMP_349=lisp.callFunctionWithCallStack(G_9,L_X__228,G_348);
return TMP_349;
});
CL_COMMON_LISP_STANDARD_INPUT_STREAM_P=lisp.values1(F_STANDARD_INPUT_STREAM_P_346);
let F_MAKE_STANDARD_INPUT_STREAM_350;
F_MAKE_STANDARD_INPUT_STREAM_350=(function(){
if(arguments.length < 0 || 4 < arguments.length) {
lisp.argumentsError(G_351, arguments.length);
}
let TMP_355;
let L_POSITION__231;
let L_STRING__230;
let supplied_STRING__230;
for (let TMP_352 = 0; TMP_352 < arguments.length; TMP_352 += 2) {
if(arguments[TMP_352] === G_191){
supplied_STRING__230=arguments[TMP_352+1];
break;
}
}
L_STRING__230=supplied_STRING__230 !== undefined ? supplied_STRING__230 : (lisp.values1(G_14.func(lisp.codeArrayToString([]))));
let supplied_POSITION__231;
for (let TMP_353 = 0; TMP_353 < arguments.length; TMP_353 += 2) {
if(arguments[TMP_353] === G_193){
supplied_POSITION__231=arguments[TMP_353+1];
break;
}
}
L_POSITION__231=supplied_POSITION__231 !== undefined ? supplied_POSITION__231 : (lisp.values1(0));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_354 = 0; TMP_354 < arguments.length; TMP_354 += 2) {
if(arguments[TMP_354]!==G_193 && arguments[TMP_354]!==G_191) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_354].name); }
}
TMP_355=lisp.CL_makeStructure(G_348,L_STRING__230,L_POSITION__231);
return TMP_355;
});
CL_COMMON_LISP_MAKE_STANDARD_INPUT_STREAM=lisp.values1(F_MAKE_STANDARD_INPUT_STREAM_350);
let F_STANDARD_INPUT_STREAM_STRING_356;
F_STANDARD_INPUT_STREAM_STRING_356=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_357, arguments.length);
}
let TMP_359;
let TMP_358;
let L_STRUCTURE__233;
L_STRUCTURE__233=arguments[0];
TMP_358=lisp.CL_structurep(L_STRUCTURE__233);
if(lisp.values1(TMP_358) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__233,G_20);
}
TMP_359=lisp.CL_structureRef(L_STRUCTURE__233,0);
return TMP_359;
});
CL_COMMON_LISP_STANDARD_INPUT_STREAM_STRING=lisp.values1(F_STANDARD_INPUT_STREAM_STRING_356);
let F_STANDARD_INPUT_STREAM_POSITION_374;
F_STANDARD_INPUT_STREAM_POSITION_374=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_375, arguments.length);
}
let TMP_377;
let TMP_376;
let L_STRUCTURE__247;
L_STRUCTURE__247=arguments[0];
TMP_376=lisp.CL_structurep(L_STRUCTURE__247);
if(lisp.values1(TMP_376) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__247,G_20);
}
TMP_377=lisp.CL_structureRef(L_STRUCTURE__247,1);
return TMP_377;
});
CL_COMMON_LISP_STANDARD_INPUT_STREAM_POSITION=lisp.values1(F_STANDARD_INPUT_STREAM_POSITION_374);
let F_EMPTY_BUFFER_P_396;
F_EMPTY_BUFFER_P_396=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_397, arguments.length);
}
let TMP_401;
let TMP_400;
let TMP_399;
let TMP_398;
let L_STREAM__267;
L_STREAM__267=arguments[0];
TMP_398=G_357.func(L_STREAM__267);
TMP_399=lisp.callFunctionWithCallStack(G_101,TMP_398);
TMP_400=G_375.func(L_STREAM__267);
TMP_401=lisp.callFunctionWithCallStack(G_402,TMP_399,TMP_400);
return TMP_401;
});
CL_COMMON_LISP_EMPTY_BUFFER_P=lisp.values1(F_EMPTY_BUFFER_P_396);
let F_FETCH_STDIN_LINE_403;
F_FETCH_STDIN_LINE_403=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_404, arguments.length);
}
let TMP_408;
let L_G126__273;
let L_G_STORE125__272;
let TMP_407;
let TMP_406;
let TMP_405;
let L_G124__271;
let L_STREAM__269;
L_STREAM__269=arguments[0];
{
L_G124__271=lisp.values1(L_STREAM__269);
TMP_405=lisp.CL_funcall(lisp.values1(lisp.symbolValue(G_2)));
TMP_406=lisp.callFunctionWithCallStack(G_137,lisp.makeCharacter(10));
TMP_407=lisp.callFunctionWithCallStack(G_139,TMP_405,TMP_406);
L_G_STORE125__272=lisp.values1(TMP_407);
lisp.callFunctionWithCallStack(G_360,L_G_STORE125__272,L_G124__271);
}
{
L_G126__273=lisp.values1(L_STREAM__269);
TMP_408=lisp.callFunctionWithCallStack(G_378,0,L_G126__273);
}
return TMP_408;
});
CL_COMMON_LISP_FETCH_STDIN_LINE=lisp.values1(F_FETCH_STDIN_LINE_403);
let F_FETCH_STDIN_LINE_IF_REQUIRED_409;
F_FETCH_STDIN_LINE_IF_REQUIRED_409=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_410, arguments.length);
}
let TMP_412;
let TMP_411;
let BLOCK_RESULT_NIL__277;
let L_STREAM__275;
L_STREAM__275=arguments[0];
BLOCK_NIL__277: for(;;){for(;;){
TMP_411=G_397.func(L_STREAM__275);
TMP_412=lisp.callFunctionWithCallStack(G_413,TMP_411);
if(lisp.values1(TMP_412) !== lisp.S_nil){
BLOCK_RESULT_NIL__277=lisp.values1(lisp.S_nil);
break BLOCK_NIL__277;
}else{
G_404.func(L_STREAM__275);
continue;
}
break;
}
BLOCK_RESULT_NIL__277=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__277;
});
CL_COMMON_LISP_FETCH_STDIN_LINE_IF_REQUIRED=lisp.values1(F_FETCH_STDIN_LINE_IF_REQUIRED_409);
let F_STREAM_READ_LINE_417;
F_STREAM_READ_LINE_417=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_418, arguments.length);
}
let TMP_477;
let TMP_475;
let TMP_474;
let TMP_473;
let TMP_471;
let TMP_465;
let TMP_464;
let L_G150__293;
let TMP_463;
let L_G_STORE149__292;
let TMP_462;
let TMP_461;
let L_G148__291;
let L_G147__290;
let TMP_460;
let TMP_459;
let TMP_458;
let TMP_457;
let TMP_456;
let TMP_455;
let TMP_454;
let TMP_453;
let TMP_451;
let TMP_450;
let TMP_449;
let TMP_448;
let TMP_447;
let TMP_445;
let TMP_444;
let TMP_443;
let L_G146__289;
let TMP_442;
let L_G145__288;
let TMP_441;
let TMP_440;
let TMP_439;
let TMP_438;
let L_G_STORE144__287;
let TMP_436;
let L_G143__286;
let TMP_435;
let TMP_433;
let TMP_432;
let TMP_431;
let TMP_429;
let TMP_428;
let L_G_STORE140__285;
let L_G139__284;
let TMP_427;
let TMP_426;
let L_I__283;
let TMP_425;
let BLOCK_RESULT_NIL__282;
let L_START__281;
let TMP_424;
let TMP_423;
let TMP_422;
let TMP_421;
let TMP_420;
let L_G134__280;
let TMP_419;
let L_STREAM__278;
L_STREAM__278=arguments[0];
{
TMP_419=G_186.func(L_STREAM__278);
L_G134__280=lisp.values1(TMP_419);
if(lisp.values1(L_G134__280) !== lisp.S_nil){
TMP_421=G_264.func(L_STREAM__278);
if(lisp.values1(TMP_421) !== lisp.S_nil){
TMP_423=lisp.CL_values(G_14.func(lisp.codeArrayToString([])),lisp.S_nil);
TMP_422=TMP_423;
}else{
{
TMP_424=G_217.func(L_STREAM__278);
L_START__281=lisp.values1(TMP_424);
BLOCK_NIL__282: for(;;){{
TMP_425=G_217.func(L_STREAM__278);
L_I__283=lisp.values1(TMP_425);
for(;;){
TMP_426=G_235.func(L_STREAM__278);
TMP_427=lisp.callFunctionWithCallStack(G_268,L_I__283,TMP_426);
if(lisp.values1(TMP_427) !== lisp.S_nil){
{
L_G139__284=lisp.values1(L_STREAM__278);
L_G_STORE140__285=lisp.values1(L_I__283);
lisp.callFunctionWithCallStack(G_220,L_G_STORE140__285,L_G139__284);
}
TMP_428=G_199.func(L_STREAM__278);
TMP_429=lisp.callFunctionWithCallStack(G_430,TMP_428,L_START__281);
TMP_431=lisp.CL_values(TMP_429,lisp.S_nil);
BLOCK_RESULT_NIL__282=TMP_431;
break BLOCK_NIL__282;
}else{
TMP_432=G_199.func(L_STREAM__278);
TMP_433=lisp.callFunctionWithCallStack(G_434,TMP_432,L_I__283);
TMP_435=lisp.callFunctionWithCallStack(G_145,lisp.makeCharacter(10),TMP_433);
if(lisp.values1(TMP_435) !== lisp.S_nil){
{
L_G143__286=lisp.values1(L_STREAM__278);
TMP_436=lisp.callFunctionWithCallStack(G_437,L_I__283);
L_G_STORE144__287=lisp.values1(TMP_436);
lisp.callFunctionWithCallStack(G_220,L_G_STORE144__287,L_G143__286);
}
TMP_438=G_199.func(L_STREAM__278);
TMP_439=lisp.callFunctionWithCallStack(G_430,TMP_438,L_START__281,L_I__283);
TMP_440=lisp.CL_values(TMP_439,G_4);
BLOCK_RESULT_NIL__282=TMP_440;
break BLOCK_NIL__282;
}else{
}
{
TMP_441=lisp.callFunctionWithCallStack(G_437,L_I__283);
L_G145__288=lisp.values1(TMP_441);
L_I__283=lisp.values1(L_G145__288);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__282=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_422=BLOCK_RESULT_NIL__282;
}
TMP_420=TMP_422;
}else{
{
TMP_442=G_347.func(L_STREAM__278);
L_G146__289=lisp.values1(TMP_442);
if(lisp.values1(L_G146__289) !== lisp.S_nil){
G_410.func(L_STREAM__278);
{
TMP_444=G_375.func(L_STREAM__278);
TMP_445=lisp.callFunctionWithCallStack(G_446,0,TMP_444);
if(lisp.values1(TMP_445) !== lisp.S_nil){
TMP_448=G_357.func(L_STREAM__278);
TMP_449=G_357.func(L_STREAM__278);
TMP_450=lisp.callFunctionWithCallStack(G_101,TMP_449);
TMP_451=lisp.callFunctionWithCallStack(G_452,TMP_450);
TMP_453=lisp.callFunctionWithCallStack(G_430,TMP_448,0,TMP_451);
TMP_447=lisp.values1(TMP_453);
}else{
TMP_454=G_357.func(L_STREAM__278);
TMP_455=G_375.func(L_STREAM__278);
TMP_456=G_357.func(L_STREAM__278);
TMP_457=lisp.callFunctionWithCallStack(G_101,TMP_456);
TMP_458=lisp.callFunctionWithCallStack(G_452,TMP_457);
TMP_459=lisp.callFunctionWithCallStack(G_430,TMP_454,TMP_455,TMP_458);
TMP_447=lisp.values1(TMP_459);
}
TMP_460=lisp.CL_values(TMP_447,G_4);
L_G147__290=lisp.values1(TMP_460);
{
L_G148__291=lisp.values1(L_STREAM__278);
TMP_461=G_357.func(L_STREAM__278);
TMP_462=lisp.callFunctionWithCallStack(G_101,TMP_461);
L_G_STORE149__292=lisp.values1(TMP_462);
lisp.callFunctionWithCallStack(G_378,L_G_STORE149__292,L_G148__291);
}
}
TMP_443=lisp.values1(L_G147__290);
}else{
{
TMP_463=G_274.func(L_STREAM__278);
L_G150__293=lisp.values1(TMP_463);
if(lisp.values1(L_G150__293) !== lisp.S_nil){
TMP_465=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_470;
let L_G_STORE159__304;
let TMP_469;
let L_G158__303;
let L_G155__300;
let L_G_STORE154__299;
let TMP_467;
let TMP_466;
let L_G153__298;
let L_G152__297;
let L_G151__296;
let L_MISSING_NEWLINE_P__295;
let L_STRING__294;
L_STRING__294=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_MISSING_NEWLINE_P__295=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G151__296=lisp.jsArrayToList(arguments, 2);
{
L_G152__297=lisp.values1(L_MISSING_NEWLINE_P__295);
if(lisp.values1(L_G152__297) !== lisp.S_nil){
{
L_G153__298=lisp.values1(L_STREAM__278);
TMP_466=G_306.func(L_G153__298);
TMP_467=lisp.callFunctionWithCallStack(G_468,TMP_466,1);
L_G_STORE154__299=lisp.values1(TMP_467);
lisp.callFunctionWithCallStack(G_309,L_G_STORE154__299,L_G153__298);
}
{
L_G155__300=lisp.values1(L_STREAM__278);
lisp.callFunctionWithCallStack(G_327,0,L_G155__300);
}
}else{
{
L_G158__303=lisp.values1(L_STREAM__278);
TMP_469=lisp.callFunctionWithCallStack(G_101,L_STRING__294);
L_G_STORE159__304=lisp.values1(TMP_469);
lisp.callFunctionWithCallStack(G_327,L_G_STORE159__304,L_G158__303);
}
}
}
TMP_470=lisp.CL_values(L_STRING__294,L_MISSING_NEWLINE_P__295);
return TMP_470;
});
TMP_471=lisp.callFunctionWithCallStack(G_472,TMP_465);
TMP_473=G_288.func(L_STREAM__278);
TMP_474=G_418.func(TMP_473);
TMP_475=lisp.CL_multipleValueCall(TMP_471,TMP_474);
TMP_464=TMP_475;
}else{
TMP_477=lisp.callFunctionWithCallStack(G_21,L_STREAM__278,G_476);
TMP_464=TMP_477;
}
}
TMP_443=TMP_464;
}
}
TMP_420=TMP_443;
}
}
return TMP_420;
});
CL_COMMON_LISP_STREAM_READ_LINE=lisp.values1(F_STREAM_READ_LINE_417);
let F_STREAM_READ_CHAR_478;
F_STREAM_READ_CHAR_478=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_479, arguments.length);
}
let TMP_507;
let L_G_STORE178__326;
let TMP_506;
let TMP_505;
let L_G177__325;
let L_G174__322;
let L_G_STORE173__321;
let TMP_504;
let TMP_503;
let L_G172__320;
let L_G171__319;
let TMP_502;
let L_G170__318;
let TMP_501;
let L_CHAR__317;
let TMP_500;
let TMP_499;
let TMP_498;
let L_G169__316;
let TMP_497;
let L_G_STORE168__315;
let TMP_496;
let TMP_495;
let L_G167__314;
let L_G166__313;
let TMP_494;
let TMP_493;
let TMP_492;
let TMP_491;
let L_G165__312;
let TMP_490;
let L_G_STORE164__311;
let TMP_489;
let TMP_488;
let L_G163__310;
let L_G162__309;
let TMP_487;
let TMP_486;
let TMP_485;
let TMP_483;
let TMP_482;
let TMP_481;
let L_G161__308;
let TMP_480;
let L_STREAM__306;
L_STREAM__306=arguments[0];
{
TMP_480=G_186.func(L_STREAM__306);
L_G161__308=lisp.values1(TMP_480);
if(lisp.values1(L_G161__308) !== lisp.S_nil){
TMP_482=G_264.func(L_STREAM__306);
if(lisp.values1(TMP_482) !== lisp.S_nil){
TMP_483=lisp.values1(G_484);
}else{
{
TMP_485=G_199.func(L_STREAM__306);
TMP_486=G_217.func(L_STREAM__306);
TMP_487=lisp.callFunctionWithCallStack(G_434,TMP_485,TMP_486);
L_G162__309=lisp.values1(TMP_487);
{
L_G163__310=lisp.values1(L_STREAM__306);
TMP_488=G_217.func(L_G163__310);
TMP_489=lisp.callFunctionWithCallStack(G_468,TMP_488,1);
L_G_STORE164__311=lisp.values1(TMP_489);
lisp.callFunctionWithCallStack(G_220,L_G_STORE164__311,L_G163__310);
}
}
TMP_483=lisp.values1(L_G162__309);
}
TMP_481=TMP_483;
}else{
{
TMP_490=G_347.func(L_STREAM__306);
L_G165__312=lisp.values1(TMP_490);
if(lisp.values1(L_G165__312) !== lisp.S_nil){
G_410.func(L_STREAM__306);
{
TMP_492=G_357.func(L_STREAM__306);
TMP_493=G_375.func(L_STREAM__306);
TMP_494=lisp.callFunctionWithCallStack(G_434,TMP_492,TMP_493);
L_G166__313=lisp.values1(TMP_494);
{
L_G167__314=lisp.values1(L_STREAM__306);
TMP_495=G_375.func(L_G167__314);
TMP_496=lisp.callFunctionWithCallStack(G_468,TMP_495,1);
L_G_STORE168__315=lisp.values1(TMP_496);
lisp.callFunctionWithCallStack(G_378,L_G_STORE168__315,L_G167__314);
}
}
TMP_491=lisp.values1(L_G166__313);
}else{
{
TMP_497=G_274.func(L_STREAM__306);
L_G169__316=lisp.values1(TMP_497);
if(lisp.values1(L_G169__316) !== lisp.S_nil){
{
TMP_499=G_288.func(L_STREAM__306);
TMP_500=G_479.func(TMP_499);
L_CHAR__317=lisp.values1(TMP_500);
{
TMP_501=lisp.CL_eq(L_CHAR__317,G_484);
L_G170__318=lisp.values1(TMP_501);
if(lisp.values1(L_G170__318) !== lisp.S_nil){
}else{
{
TMP_502=lisp.callFunctionWithCallStack(G_145,L_CHAR__317,lisp.makeCharacter(10));
L_G171__319=lisp.values1(TMP_502);
if(lisp.values1(L_G171__319) !== lisp.S_nil){
{
L_G172__320=lisp.values1(L_STREAM__306);
TMP_503=G_306.func(L_G172__320);
TMP_504=lisp.callFunctionWithCallStack(G_468,TMP_503,1);
L_G_STORE173__321=lisp.values1(TMP_504);
lisp.callFunctionWithCallStack(G_309,L_G_STORE173__321,L_G172__320);
}
{
L_G174__322=lisp.values1(L_STREAM__306);
lisp.callFunctionWithCallStack(G_327,0,L_G174__322);
}
}else{
{
L_G177__325=lisp.values1(L_STREAM__306);
TMP_505=G_324.func(L_G177__325);
TMP_506=lisp.callFunctionWithCallStack(G_468,TMP_505,1);
L_G_STORE178__326=lisp.values1(TMP_506);
lisp.callFunctionWithCallStack(G_327,L_G_STORE178__326,L_G177__325);
}
}
}
}
}
}
TMP_498=lisp.values1(L_CHAR__317);
}else{
TMP_507=lisp.callFunctionWithCallStack(G_21,L_STREAM__306,G_476);
TMP_498=TMP_507;
}
}
TMP_491=TMP_498;
}
}
TMP_481=TMP_491;
}
}
return TMP_481;
});
CL_COMMON_LISP_STREAM_READ_CHAR=lisp.values1(F_STREAM_READ_CHAR_478);
let F_STREAM_UNREAD_CHAR_508;
F_STREAM_UNREAD_CHAR_508=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_509, arguments.length);
}
let TMP_522;
let TMP_521;
let TMP_520;
let TMP_519;
let L_G186__336;
let TMP_518;
let L_G_STORE185__335;
let TMP_517;
let TMP_516;
let L_G184__334;
let TMP_515;
let L_G183__333;
let TMP_514;
let L_G_STORE182__332;
let TMP_513;
let TMP_512;
let L_G181__331;
let TMP_511;
let L_G180__330;
let TMP_510;
let L_STREAM__328;
L_STREAM__328=arguments[0];
{
TMP_510=G_186.func(L_STREAM__328);
L_G180__330=lisp.values1(TMP_510);
if(lisp.values1(L_G180__330) !== lisp.S_nil){
{
L_G181__331=lisp.values1(L_STREAM__328);
TMP_512=G_217.func(L_G181__331);
TMP_513=lisp.callFunctionWithCallStack(G_103,TMP_512,1);
L_G_STORE182__332=lisp.values1(TMP_513);
lisp.callFunctionWithCallStack(G_220,L_G_STORE182__332,L_G181__331);
}
TMP_511=lisp.values1(lisp.S_nil);
}else{
{
TMP_514=G_347.func(L_STREAM__328);
L_G183__333=lisp.values1(TMP_514);
if(lisp.values1(L_G183__333) !== lisp.S_nil){
{
L_G184__334=lisp.values1(L_STREAM__328);
TMP_516=G_375.func(L_G184__334);
TMP_517=lisp.callFunctionWithCallStack(G_103,TMP_516,1);
L_G_STORE185__335=lisp.values1(TMP_517);
lisp.callFunctionWithCallStack(G_378,L_G_STORE185__335,L_G184__334);
}
TMP_515=lisp.values1(lisp.S_nil);
}else{
{
TMP_518=G_274.func(L_STREAM__328);
L_G186__336=lisp.values1(TMP_518);
if(lisp.values1(L_G186__336) !== lisp.S_nil){
TMP_520=G_288.func(L_STREAM__328);
TMP_521=G_509.func(TMP_520);
TMP_519=TMP_521;
}else{
TMP_522=lisp.callFunctionWithCallStack(G_21,L_STREAM__328,G_476);
TMP_519=TMP_522;
}
}
TMP_515=TMP_519;
}
}
TMP_511=TMP_515;
}
}
return TMP_511;
});
CL_COMMON_LISP_STREAM_UNREAD_CHAR=lisp.values1(F_STREAM_UNREAD_CHAR_508);
let F_STREAM_PEEK_CHAR_523;
F_STREAM_PEEK_CHAR_523=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_524, arguments.length);
}
let TMP_541;
let TMP_540;
let TMP_539;
let TMP_538;
let L_G190__342;
let TMP_537;
let TMP_536;
let TMP_535;
let TMP_534;
let TMP_533;
let L_G189__341;
let TMP_532;
let TMP_531;
let TMP_530;
let TMP_529;
let TMP_528;
let TMP_527;
let TMP_526;
let L_G188__340;
let TMP_525;
let L_STREAM__338;
L_STREAM__338=arguments[0];
{
TMP_525=G_186.func(L_STREAM__338);
L_G188__340=lisp.values1(TMP_525);
if(lisp.values1(L_G188__340) !== lisp.S_nil){
TMP_527=G_264.func(L_STREAM__338);
if(lisp.values1(TMP_527) !== lisp.S_nil){
TMP_528=lisp.values1(G_484);
}else{
TMP_529=G_199.func(L_STREAM__338);
TMP_530=G_217.func(L_STREAM__338);
TMP_531=lisp.callFunctionWithCallStack(G_434,TMP_529,TMP_530);
TMP_528=TMP_531;
}
TMP_526=TMP_528;
}else{
{
TMP_532=G_347.func(L_STREAM__338);
L_G189__341=lisp.values1(TMP_532);
if(lisp.values1(L_G189__341) !== lisp.S_nil){
G_410.func(L_STREAM__338);
TMP_534=G_357.func(L_STREAM__338);
TMP_535=G_375.func(L_STREAM__338);
TMP_536=lisp.callFunctionWithCallStack(G_434,TMP_534,TMP_535);
TMP_533=TMP_536;
}else{
{
TMP_537=G_274.func(L_STREAM__338);
L_G190__342=lisp.values1(TMP_537);
if(lisp.values1(L_G190__342) !== lisp.S_nil){
TMP_539=G_288.func(L_STREAM__338);
TMP_540=G_524.func(TMP_539);
TMP_538=TMP_540;
}else{
TMP_541=lisp.callFunctionWithCallStack(G_21,L_STREAM__338,G_476);
TMP_538=TMP_541;
}
}
TMP_533=TMP_538;
}
}
TMP_526=TMP_533;
}
}
return TMP_526;
});
CL_COMMON_LISP_STREAM_PEEK_CHAR=lisp.values1(F_STREAM_PEEK_CHAR_523);
let F_CLOSE_544;
F_CLOSE_544=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_545, arguments.length);
}
let L_STREAM__344;
L_STREAM__344=arguments[0];
return lisp.values1(G_4);
});
CL_COMMON_LISP_CLOSE=lisp.values1(F_CLOSE_544);
let F_STREAMP_546;
F_STREAMP_546=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_547, arguments.length);
}
let TMP_557;
let L_G198__352;
let TMP_556;
let TMP_555;
let L_G197__351;
let TMP_554;
let TMP_553;
let L_G196__350;
let TMP_552;
let TMP_551;
let L_G195__349;
let TMP_550;
let TMP_549;
let L_G194__348;
let TMP_548;
let L_X__346;
L_X__346=arguments[0];
{
TMP_548=G_6.func(L_X__346);
L_G194__348=lisp.values1(TMP_548);
if(lisp.values1(L_G194__348) !== lisp.S_nil){
TMP_549=lisp.values1(L_G194__348);
}else{
{
TMP_550=G_59.func(L_X__346);
L_G195__349=lisp.values1(TMP_550);
if(lisp.values1(L_G195__349) !== lisp.S_nil){
TMP_551=lisp.values1(L_G195__349);
}else{
{
TMP_552=G_186.func(L_X__346);
L_G196__350=lisp.values1(TMP_552);
if(lisp.values1(L_G196__350) !== lisp.S_nil){
TMP_553=lisp.values1(L_G196__350);
}else{
{
TMP_554=G_274.func(L_X__346);
L_G197__351=lisp.values1(TMP_554);
if(lisp.values1(L_G197__351) !== lisp.S_nil){
TMP_555=lisp.values1(L_G197__351);
}else{
{
TMP_556=G_347.func(L_X__346);
L_G198__352=lisp.values1(TMP_556);
if(lisp.values1(L_G198__352) !== lisp.S_nil){
TMP_557=lisp.values1(L_G198__352);
}else{
TMP_557=lisp.values1(lisp.S_nil);
}
}
TMP_555=TMP_557;
}
}
TMP_553=TMP_555;
}
}
TMP_551=TMP_553;
}
}
TMP_549=TMP_551;
}
}
return TMP_549;
});
CL_COMMON_LISP_STREAMP=lisp.values1(F_STREAMP_546);
let F_FILE_POSITION_558;
F_FILE_POSITION_558=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_559, arguments.length);
}
let TMP_575;
let TMP_573;
let L_G203__359;
let TMP_572;
let TMP_571;
let L_G202__358;
let TMP_570;
let TMP_569;
let TMP_568;
let L_G201__357;
let TMP_567;
let TMP_566;
let TMP_565;
let TMP_564;
let L_G200__356;
let TMP_563;
let TMP_562;
let TMP_561;
let L_G199__355;
let TMP_560;
let L_STREAM__353;
L_STREAM__353=arguments[0];
{
TMP_560=G_186.func(L_STREAM__353);
L_G199__355=lisp.values1(TMP_560);
if(lisp.values1(L_G199__355) !== lisp.S_nil){
TMP_562=G_217.func(L_STREAM__353);
TMP_561=TMP_562;
}else{
{
TMP_563=G_274.func(L_STREAM__353);
L_G200__356=lisp.values1(TMP_563);
if(lisp.values1(L_G200__356) !== lisp.S_nil){
TMP_565=G_288.func(L_STREAM__353);
TMP_566=G_217.func(TMP_565);
TMP_564=TMP_566;
}else{
{
TMP_567=G_347.func(L_STREAM__353);
L_G201__357=lisp.values1(TMP_567);
if(lisp.values1(L_G201__357) !== lisp.S_nil){
TMP_569=G_375.func(L_STREAM__353);
TMP_568=TMP_569;
}else{
{
TMP_570=G_6.func(L_STREAM__353);
L_G202__358=lisp.values1(TMP_570);
if(lisp.values1(L_G202__358) !== lisp.S_nil){
TMP_571=lisp.values1(lisp.S_nil);
}else{
{
TMP_572=G_59.func(L_STREAM__353);
L_G203__359=lisp.values1(TMP_572);
if(lisp.values1(L_G203__359) !== lisp.S_nil){
TMP_573=lisp.values1(lisp.S_nil);
}else{
TMP_575=lisp.callFunctionWithCallStack(G_21,L_STREAM__353,G_574);
TMP_573=TMP_575;
}
}
TMP_571=TMP_573;
}
}
TMP_568=TMP_571;
}
}
TMP_564=TMP_568;
}
}
TMP_561=TMP_564;
}
}
return TMP_561;
});
CL_COMMON_LISP_FILE_POSITION=lisp.values1(F_FILE_POSITION_558);
// initialize symbols
G_2 = lisp.intern('*GET-STDIN-LINE-FUNCTION*', 'SYSTEM');
G_3 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_4 = lisp.intern('T', 'COMMON-LISP');
G_6 = lisp.intern('STRING-OUTPUT-STREAM-P', 'COMMON-LISP');
G_7 = lisp.intern('STRING-OUTPUT-STREAM', 'COMMON-LISP');
G_9 = lisp.intern('TYPEP', 'COMMON-LISP');
G_11 = lisp.intern('%MAKE-STRING-OUTPUT-STREAM', 'COMMON-LISP');
G_12 = lisp.intern('BUFFER', 'KEYWORD');
G_14 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_18 = lisp.intern('STRING-OUTPUT-STREAM-BUFFER', 'COMMON-LISP');
G_20 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_21 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_23 = lisp.intern('(SETF STRING-OUTPUT-STREAM-BUFFER)', 'COMMON-LISP');
G_27 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_31 = lisp.intern('GENSYM', 'COMMON-LISP');
G_33 = lisp.intern('%MAPCAR', 'SYSTEM');
G_36 = lisp.intern('LIST', 'COMMON-LISP');
G_38 = lisp.intern('LIST*', 'COMMON-LISP');
G_41 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_44 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_45 = lisp.intern('PRIN1', 'COMMON-LISP');
G_48 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_50 = lisp.intern('MAKE-STRING-OUTPUT-STREAM', 'COMMON-LISP');
G_51 = lisp.intern('ELEMENT-TYPE', 'KEYWORD');
G_56 = lisp.intern('GET-OUTPUT-STREAM-STRING', 'COMMON-LISP');
G_59 = lisp.intern('STANDARD-OUTPUT-STREAM-P', 'COMMON-LISP');
G_60 = lisp.intern('STANDARD-OUTPUT-STREAM', 'COMMON-LISP');
G_63 = lisp.intern('MAKE-STANDARD-OUTPUT-STREAM', 'COMMON-LISP');
G_68 = lisp.intern('STANDARD-OUTPUT-STREAM-BUFFER', 'COMMON-LISP');
G_71 = lisp.intern('(SETF STANDARD-OUTPUT-STREAM-BUFFER)', 'COMMON-LISP');
G_88 = lisp.intern('*STANDARD-OUTPUT*', 'COMMON-LISP');
G_91 = lisp.intern('*ERROR-OUTPUT*', 'COMMON-LISP');
G_95 = lisp.intern('COMPUTE-TEXT-COLUMN', 'COMMON-LISP');
G_96 = lisp.intern('FROM-END', 'KEYWORD');
G_98 = lisp.intern('POSITION', 'COMMON-LISP');
G_101 = lisp.intern('LENGTH', 'COMMON-LISP');
G_103 = lisp.intern('-', 'COMMON-LISP');
G_106 = lisp.intern('STREAM-COLUMN', 'COMMON-LISP');
G_115 = lisp.intern('OUTPUT-STREAM', 'COMMON-LISP');
G_118 = lisp.intern('FLUSH', 'COMMON-LISP');
G_124 = lisp.intern('<', 'COMMON-LISP');
G_127 = lisp.intern('ARRAY-TO-RAW-STRING', 'SYSTEM');
G_128 = lisp.intern('WRITE-RAW-STRING-TO-STDOUT', 'SYSTEM');
G_131 = lisp.intern('STREAM-WRITE-CHAR', 'COMMON-LISP');
G_133 = lisp.intern('CHARACTER', 'COMMON-LISP');
G_137 = lisp.intern('STRING', 'COMMON-LISP');
G_139 = lisp.intern('STRING-APPEND', 'SYSTEM');
G_145 = lisp.intern('CHAR=', 'COMMON-LISP');
G_147 = lisp.intern('STREAM-WRITE-STRING', 'COMMON-LISP');
G_149 = lisp.intern('STRINGP', 'COMMON-LISP');
G_156 = lisp.intern('WITH-OUTPUT-TO-STRING', 'COMMON-LISP');
G_158 = lisp.intern('WRITE-CHAR', 'COMMON-LISP');
G_161 = lisp.intern('START', 'KEYWORD');
G_163 = lisp.intern('END', 'KEYWORD');
G_168 = lisp.intern('WRITE-LINE', 'COMMON-LISP');
G_173 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
G_175 = lisp.intern('FORCE-OUTPUT', 'COMMON-LISP');
G_177 = lisp.intern('TERPRI', 'COMMON-LISP');
G_180 = lisp.intern('FRESH-LINE', 'COMMON-LISP');
G_186 = lisp.intern('STRING-INPUT-STREAM-P', 'COMMON-LISP');
G_187 = lisp.intern('STRING-INPUT-STREAM', 'COMMON-LISP');
G_190 = lisp.intern('%MAKE-STRING-INPUT-STREAM', 'COMMON-LISP');
G_191 = lisp.intern('STRING', 'KEYWORD');
G_193 = lisp.intern('POSITION', 'KEYWORD');
G_199 = lisp.intern('STRING-INPUT-STREAM-STRING', 'COMMON-LISP');
G_202 = lisp.intern('(SETF STRING-INPUT-STREAM-STRING)', 'COMMON-LISP');
G_217 = lisp.intern('STRING-INPUT-STREAM-POSITION', 'COMMON-LISP');
G_220 = lisp.intern('(SETF STRING-INPUT-STREAM-POSITION)', 'COMMON-LISP');
G_235 = lisp.intern('STRING-INPUT-STREAM-END', 'COMMON-LISP');
G_238 = lisp.intern('(SETF STRING-INPUT-STREAM-END)', 'COMMON-LISP');
G_258 = lisp.intern('MAKE-STRING-INPUT-STREAM', 'COMMON-LISP');
G_264 = lisp.intern('STRING-INPUT-STREAM-EOF-P', 'COMMON-LISP');
G_268 = lisp.intern('>=', 'COMMON-LISP');
G_270 = lisp.intern('COPY-FILE-INPUT-STREAM', 'COMMON-LISP');
G_272 = lisp.intern('COPY-STRUCTURE', 'COMMON-LISP');
G_274 = lisp.intern('FILE-INPUT-STREAM-P', 'COMMON-LISP');
G_275 = lisp.intern('FILE-INPUT-STREAM', 'COMMON-LISP');
G_278 = lisp.intern('MAKE-FILE-INPUT-STREAM', 'COMMON-LISP');
G_279 = lisp.intern('STRING-STREAM', 'KEYWORD');
G_281 = lisp.intern('LINE', 'KEYWORD');
G_283 = lisp.intern('COLUMN', 'KEYWORD');
G_288 = lisp.intern('FILE-INPUT-STREAM-STRING-STREAM', 'COMMON-LISP');
G_291 = lisp.intern('(SETF FILE-INPUT-STREAM-STRING-STREAM)', 'COMMON-LISP');
G_306 = lisp.intern('FILE-INPUT-STREAM-LINE', 'COMMON-LISP');
G_309 = lisp.intern('(SETF FILE-INPUT-STREAM-LINE)', 'COMMON-LISP');
G_324 = lisp.intern('FILE-INPUT-STREAM-COLUMN', 'COMMON-LISP');
G_327 = lisp.intern('(SETF FILE-INPUT-STREAM-COLUMN)', 'COMMON-LISP');
G_347 = lisp.intern('STANDARD-INPUT-STREAM-P', 'COMMON-LISP');
G_348 = lisp.intern('STANDARD-INPUT-STREAM', 'COMMON-LISP');
G_351 = lisp.intern('MAKE-STANDARD-INPUT-STREAM', 'COMMON-LISP');
G_357 = lisp.intern('STANDARD-INPUT-STREAM-STRING', 'COMMON-LISP');
G_360 = lisp.intern('(SETF STANDARD-INPUT-STREAM-STRING)', 'COMMON-LISP');
G_375 = lisp.intern('STANDARD-INPUT-STREAM-POSITION', 'COMMON-LISP');
G_378 = lisp.intern('(SETF STANDARD-INPUT-STREAM-POSITION)', 'COMMON-LISP');
G_397 = lisp.intern('EMPTY-BUFFER-P', 'COMMON-LISP');
G_402 = lisp.intern('<=', 'COMMON-LISP');
G_404 = lisp.intern('FETCH-STDIN-LINE', 'COMMON-LISP');
G_410 = lisp.intern('FETCH-STDIN-LINE-IF-REQUIRED', 'COMMON-LISP');
G_413 = lisp.intern('NOT', 'COMMON-LISP');
G_414 = lisp.intern('*STANDARD-INPUT*', 'COMMON-LISP');
G_418 = lisp.intern('STREAM-READ-LINE', 'COMMON-LISP');
G_430 = lisp.intern('SUBSEQ', 'COMMON-LISP');
G_434 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_437 = lisp.intern('1+', 'COMMON-LISP');
G_446 = lisp.intern('=', 'COMMON-LISP');
G_452 = lisp.intern('1-', 'COMMON-LISP');
G_468 = lisp.intern('+', 'COMMON-LISP');
G_472 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_476 = lisp.intern('INPUT-STREAM', 'COMMON-LISP');
G_479 = lisp.intern('STREAM-READ-CHAR', 'COMMON-LISP');
G_484 = lisp.intern('EOF', 'KEYWORD');
G_509 = lisp.intern('STREAM-UNREAD-CHAR', 'COMMON-LISP');
G_524 = lisp.intern('STREAM-PEEK-CHAR', 'COMMON-LISP');
G_542 = lisp.intern('WITH-INPUT-FROM-STRING', 'COMMON-LISP');
G_543 = lisp.intern('WITH-OPEN-STREAM', 'COMMON-LISP');
G_545 = lisp.intern('CLOSE', 'COMMON-LISP');
G_547 = lisp.intern('STREAMP', 'COMMON-LISP');
G_559 = lisp.intern('FILE-POSITION', 'COMMON-LISP');
G_574 = lisp.intern('STREAM', 'COMMON-LISP');
G_576 = lisp.intern('MACRO', 'COMPILER');
G_579 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_582 = lisp.intern('VAR', 'COMMON-LISP');
G_583 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_584 = lisp.intern('&BODY', 'COMMON-LISP');
G_585 = lisp.intern('BODY', 'COMMON-LISP');
G_587 = lisp.intern('ERROR', 'COMMON-LISP');
G_589 = lisp.intern('FIRST', 'COMMON-LISP');
G_596 = lisp.intern('REST', 'COMMON-LISP');
G_600 = lisp.intern('LET', 'COMMON-LISP');
G_606 = lisp.intern('APPEND', 'COMMON-LISP');
G_644 = lisp.intern('UNWIND-PROTECT', 'COMMON-LISP');
G_645 = lisp.intern('PROGN', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');lisp.CL_put(G_2,G_3,G_4);
CL_COMMON_LISP_STRING_OUTPUT_STREAM_P.lisp_name = 'STRING-OUTPUT-STREAM-P'
lisp.setSymbolFunction(G_6, CL_COMMON_LISP_STRING_OUTPUT_STREAM_P);
CL_COMMON_LISP_PERCENTMAKE_STRING_OUTPUT_STREAM.lisp_name = '%MAKE-STRING-OUTPUT-STREAM'
lisp.setSymbolFunction(G_11, CL_COMMON_LISP_PERCENTMAKE_STRING_OUTPUT_STREAM);
CL_COMMON_LISP_STRING_OUTPUT_STREAM_BUFFER.lisp_name = 'STRING-OUTPUT-STREAM-BUFFER'
lisp.setSymbolFunction(G_18, CL_COMMON_LISP_STRING_OUTPUT_STREAM_BUFFER);
TMP_24=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_26;
let TMP_25;
let L_STRUCTURE__8;
let L_VALUE__7;
L_VALUE__7=arguments[0];
L_STRUCTURE__8=arguments[1];
TMP_25=lisp.CL_structurep(L_STRUCTURE__8);
if(lisp.values1(TMP_25) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__8,G_20);
}
TMP_26=lisp.CL_structureSet(L_STRUCTURE__8,0,L_VALUE__7);
return TMP_26;
});
lisp.CL_setSymbolFunction(G_23,TMP_24);
TMP_28=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_40;
let TMP_39;
let TMP_37;
let TMP_35;
let L_STORE2__16;
let TMP_34;
let L_GENSYMS0__15;
let TMP_32;
let TMP_29;
let L_ARGS1__13;
let L_G6__11;
let L_G5__10;
L_G5__10=arguments[0];
{
L_G6__11=lisp.values1(L_G5__10);
{
L_ARGS1__13=lisp.values1(L_G6__11);
{
TMP_29=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_30;
let L_X__14;
L_X__14=arguments[0];
TMP_30=lisp.callFunctionWithCallStack(G_31);
return TMP_30;
});
TMP_32=lisp.callFunctionWithCallStack(G_33,TMP_29,L_ARGS1__13);
L_GENSYMS0__15=lisp.values1(TMP_32);
TMP_34=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE2__16=lisp.values1(TMP_34);
TMP_35=lisp.callFunctionWithCallStack(G_36,L_STORE2__16);
TMP_37=lisp.callFunctionWithCallStack(G_38,G_23,L_STORE2__16,L_GENSYMS0__15);
TMP_39=lisp.callFunctionWithCallStack(G_38,G_18,L_GENSYMS0__15);
TMP_40=lisp.CL_values(L_GENSYMS0__15,L_ARGS1__13,TMP_35,TMP_37,TMP_39);
}
}
}
return TMP_40;
});
lisp.CL_put(G_18,G_27,TMP_28);
TMP_42=lisp.CL_symbolFunction(G_23);
lisp.CL_put(G_18,G_41,TMP_42);
{
TMP_43=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_47;
let TMP_46;
let L_STREAM__22;
let L_STRUCTURE__21;
L_STRUCTURE__21=arguments[0];
L_STREAM__22=arguments[1];
G_44.func(G_14.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__22);
G_44.func(G_14.func(lisp.codeArrayToString([83, 84, 82, 73, 78, 71, 45, 79, 85, 84, 80, 85, 84, 45, 83, 84, 82, 69, 65, 77])),L_STREAM__22);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__22);
lisp.callFunctionWithCallStack(G_45,G_12,L_STREAM__22);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__22);
TMP_46=lisp.CL_structureRef(L_STRUCTURE__21,0);
lisp.callFunctionWithCallStack(G_45,TMP_46,L_STREAM__22);
TMP_47=G_44.func(G_14.func(lisp.codeArrayToString([41])),L_STREAM__22);
return TMP_47;
});
L_G10__23=lisp.values1(TMP_43);
{
L_G11__24=lisp.values1(L_G10__23);
lisp.CL_put(G_7,G_48,L_G11__24);
}
}
CL_COMMON_LISP_MAKE_STRING_OUTPUT_STREAM.lisp_name = 'MAKE-STRING-OUTPUT-STREAM'
lisp.setSymbolFunction(G_50, CL_COMMON_LISP_MAKE_STRING_OUTPUT_STREAM);
CL_COMMON_LISP_GET_OUTPUT_STREAM_STRING.lisp_name = 'GET-OUTPUT-STREAM-STRING'
lisp.setSymbolFunction(G_56, CL_COMMON_LISP_GET_OUTPUT_STREAM_STRING);
CL_COMMON_LISP_STANDARD_OUTPUT_STREAM_P.lisp_name = 'STANDARD-OUTPUT-STREAM-P'
lisp.setSymbolFunction(G_59, CL_COMMON_LISP_STANDARD_OUTPUT_STREAM_P);
CL_COMMON_LISP_MAKE_STANDARD_OUTPUT_STREAM.lisp_name = 'MAKE-STANDARD-OUTPUT-STREAM'
lisp.setSymbolFunction(G_63, CL_COMMON_LISP_MAKE_STANDARD_OUTPUT_STREAM);
CL_COMMON_LISP_STANDARD_OUTPUT_STREAM_BUFFER.lisp_name = 'STANDARD-OUTPUT-STREAM-BUFFER'
lisp.setSymbolFunction(G_68, CL_COMMON_LISP_STANDARD_OUTPUT_STREAM_BUFFER);
TMP_72=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_74;
let TMP_73;
let L_STRUCTURE__39;
let L_VALUE__38;
L_VALUE__38=arguments[0];
L_STRUCTURE__39=arguments[1];
TMP_73=lisp.CL_structurep(L_STRUCTURE__39);
if(lisp.values1(TMP_73) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__39,G_20);
}
TMP_74=lisp.CL_structureSet(L_STRUCTURE__39,0,L_VALUE__38);
return TMP_74;
});
lisp.CL_setSymbolFunction(G_71,TMP_72);
TMP_75=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_83;
let TMP_82;
let TMP_81;
let TMP_80;
let L_STORE16__47;
let TMP_79;
let L_GENSYMS14__46;
let TMP_78;
let TMP_76;
let L_ARGS15__44;
let L_G20__42;
let L_G19__41;
L_G19__41=arguments[0];
{
L_G20__42=lisp.values1(L_G19__41);
{
L_ARGS15__44=lisp.values1(L_G20__42);
{
TMP_76=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_77;
let L_X__45;
L_X__45=arguments[0];
TMP_77=lisp.callFunctionWithCallStack(G_31);
return TMP_77;
});
TMP_78=lisp.callFunctionWithCallStack(G_33,TMP_76,L_ARGS15__44);
L_GENSYMS14__46=lisp.values1(TMP_78);
TMP_79=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE16__47=lisp.values1(TMP_79);
TMP_80=lisp.callFunctionWithCallStack(G_36,L_STORE16__47);
TMP_81=lisp.callFunctionWithCallStack(G_38,G_71,L_STORE16__47,L_GENSYMS14__46);
TMP_82=lisp.callFunctionWithCallStack(G_38,G_68,L_GENSYMS14__46);
TMP_83=lisp.CL_values(L_GENSYMS14__46,L_ARGS15__44,TMP_80,TMP_81,TMP_82);
}
}
}
return TMP_83;
});
lisp.CL_put(G_68,G_27,TMP_75);
TMP_84=lisp.CL_symbolFunction(G_71);
lisp.CL_put(G_68,G_41,TMP_84);
{
TMP_85=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_87;
let TMP_86;
let L_STREAM__53;
let L_STRUCTURE__52;
L_STRUCTURE__52=arguments[0];
L_STREAM__53=arguments[1];
G_44.func(G_14.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__53);
G_44.func(G_14.func(lisp.codeArrayToString([83, 84, 65, 78, 68, 65, 82, 68, 45, 79, 85, 84, 80, 85, 84, 45, 83, 84, 82, 69, 65, 77])),L_STREAM__53);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__53);
lisp.callFunctionWithCallStack(G_45,G_12,L_STREAM__53);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__53);
TMP_86=lisp.CL_structureRef(L_STRUCTURE__52,0);
lisp.callFunctionWithCallStack(G_45,TMP_86,L_STREAM__53);
TMP_87=G_44.func(G_14.func(lisp.codeArrayToString([41])),L_STREAM__53);
return TMP_87;
});
L_G24__54=lisp.values1(TMP_85);
{
L_G25__55=lisp.values1(L_G24__54);
lisp.CL_put(G_60,G_48,L_G25__55);
}
}
TMP_89=lisp.CL_boundp(G_88);
if(lisp.values1(TMP_89) !== lisp.S_nil){
}else{
TMP_90=G_63.func();
lisp.CL_set(G_88,TMP_90);
}
lisp.CL_put(G_88,G_3,G_4);
TMP_92=lisp.CL_boundp(G_91);
if(lisp.values1(TMP_92) !== lisp.S_nil){
}else{
TMP_93=G_63.func();
lisp.CL_set(G_91,TMP_93);
}
lisp.CL_put(G_91,G_3,G_4);
CL_COMMON_LISP_COMPUTE_TEXT_COLUMN.lisp_name = 'COMPUTE-TEXT-COLUMN'
lisp.setSymbolFunction(G_95, CL_COMMON_LISP_COMPUTE_TEXT_COLUMN);
CL_COMMON_LISP_STREAM_COLUMN.lisp_name = 'STREAM-COLUMN'
lisp.setSymbolFunction(G_106, CL_COMMON_LISP_STREAM_COLUMN);
CL_COMMON_LISP_FLUSH.lisp_name = 'FLUSH'
lisp.setSymbolFunction(G_118, CL_COMMON_LISP_FLUSH);
CL_COMMON_LISP_STREAM_WRITE_CHAR.lisp_name = 'STREAM-WRITE-CHAR'
lisp.setSymbolFunction(G_131, CL_COMMON_LISP_STREAM_WRITE_CHAR);
CL_COMMON_LISP_STREAM_WRITE_STRING.lisp_name = 'STREAM-WRITE-STRING'
lisp.setSymbolFunction(G_147, CL_COMMON_LISP_STREAM_WRITE_STRING);
CL_COMMON_LISP_WRITE_CHAR.lisp_name = 'WRITE-CHAR'
lisp.setSymbolFunction(G_158, CL_COMMON_LISP_WRITE_CHAR);
CL_COMMON_LISP_WRITE_STRING.lisp_name = 'WRITE-STRING'
lisp.setSymbolFunction(G_44, CL_COMMON_LISP_WRITE_STRING);
CL_COMMON_LISP_WRITE_LINE.lisp_name = 'WRITE-LINE'
lisp.setSymbolFunction(G_168, CL_COMMON_LISP_WRITE_LINE);
CL_COMMON_LISP_FINISH_OUTPUT.lisp_name = 'FINISH-OUTPUT'
lisp.setSymbolFunction(G_173, CL_COMMON_LISP_FINISH_OUTPUT);
CL_COMMON_LISP_FORCE_OUTPUT.lisp_name = 'FORCE-OUTPUT'
lisp.setSymbolFunction(G_175, CL_COMMON_LISP_FORCE_OUTPUT);
CL_COMMON_LISP_TERPRI.lisp_name = 'TERPRI'
lisp.setSymbolFunction(G_177, CL_COMMON_LISP_TERPRI);
CL_COMMON_LISP_FRESH_LINE.lisp_name = 'FRESH-LINE'
lisp.setSymbolFunction(G_180, CL_COMMON_LISP_FRESH_LINE);
CL_COMMON_LISP_STRING_INPUT_STREAM_P.lisp_name = 'STRING-INPUT-STREAM-P'
lisp.setSymbolFunction(G_186, CL_COMMON_LISP_STRING_INPUT_STREAM_P);
CL_COMMON_LISP_PERCENTMAKE_STRING_INPUT_STREAM.lisp_name = '%MAKE-STRING-INPUT-STREAM'
lisp.setSymbolFunction(G_190, CL_COMMON_LISP_PERCENTMAKE_STRING_INPUT_STREAM);
CL_COMMON_LISP_STRING_INPUT_STREAM_STRING.lisp_name = 'STRING-INPUT-STREAM-STRING'
lisp.setSymbolFunction(G_199, CL_COMMON_LISP_STRING_INPUT_STREAM_STRING);
TMP_203=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_205;
let TMP_204;
let L_STRUCTURE__119;
let L_VALUE__118;
L_VALUE__118=arguments[0];
L_STRUCTURE__119=arguments[1];
TMP_204=lisp.CL_structurep(L_STRUCTURE__119);
if(lisp.values1(TMP_204) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__119,G_20);
}
TMP_205=lisp.CL_structureSet(L_STRUCTURE__119,0,L_VALUE__118);
return TMP_205;
});
lisp.CL_setSymbolFunction(G_202,TMP_203);
TMP_206=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_214;
let TMP_213;
let TMP_212;
let TMP_211;
let L_STORE48__127;
let TMP_210;
let L_GENSYMS46__126;
let TMP_209;
let TMP_207;
let L_ARGS47__124;
let L_G52__122;
let L_G51__121;
L_G51__121=arguments[0];
{
L_G52__122=lisp.values1(L_G51__121);
{
L_ARGS47__124=lisp.values1(L_G52__122);
{
TMP_207=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_208;
let L_X__125;
L_X__125=arguments[0];
TMP_208=lisp.callFunctionWithCallStack(G_31);
return TMP_208;
});
TMP_209=lisp.callFunctionWithCallStack(G_33,TMP_207,L_ARGS47__124);
L_GENSYMS46__126=lisp.values1(TMP_209);
TMP_210=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE48__127=lisp.values1(TMP_210);
TMP_211=lisp.callFunctionWithCallStack(G_36,L_STORE48__127);
TMP_212=lisp.callFunctionWithCallStack(G_38,G_202,L_STORE48__127,L_GENSYMS46__126);
TMP_213=lisp.callFunctionWithCallStack(G_38,G_199,L_GENSYMS46__126);
TMP_214=lisp.CL_values(L_GENSYMS46__126,L_ARGS47__124,TMP_211,TMP_212,TMP_213);
}
}
}
return TMP_214;
});
lisp.CL_put(G_199,G_27,TMP_206);
TMP_215=lisp.CL_symbolFunction(G_202);
lisp.CL_put(G_199,G_41,TMP_215);
CL_COMMON_LISP_STRING_INPUT_STREAM_POSITION.lisp_name = 'STRING-INPUT-STREAM-POSITION'
lisp.setSymbolFunction(G_217, CL_COMMON_LISP_STRING_INPUT_STREAM_POSITION);
TMP_221=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_223;
let TMP_222;
let L_STRUCTURE__133;
let L_VALUE__132;
L_VALUE__132=arguments[0];
L_STRUCTURE__133=arguments[1];
TMP_222=lisp.CL_structurep(L_STRUCTURE__133);
if(lisp.values1(TMP_222) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__133,G_20);
}
TMP_223=lisp.CL_structureSet(L_STRUCTURE__133,1,L_VALUE__132);
return TMP_223;
});
lisp.CL_setSymbolFunction(G_220,TMP_221);
TMP_224=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_232;
let TMP_231;
let TMP_230;
let TMP_229;
let L_STORE56__141;
let TMP_228;
let L_GENSYMS54__140;
let TMP_227;
let TMP_225;
let L_ARGS55__138;
let L_G60__136;
let L_G59__135;
L_G59__135=arguments[0];
{
L_G60__136=lisp.values1(L_G59__135);
{
L_ARGS55__138=lisp.values1(L_G60__136);
{
TMP_225=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_226;
let L_X__139;
L_X__139=arguments[0];
TMP_226=lisp.callFunctionWithCallStack(G_31);
return TMP_226;
});
TMP_227=lisp.callFunctionWithCallStack(G_33,TMP_225,L_ARGS55__138);
L_GENSYMS54__140=lisp.values1(TMP_227);
TMP_228=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE56__141=lisp.values1(TMP_228);
TMP_229=lisp.callFunctionWithCallStack(G_36,L_STORE56__141);
TMP_230=lisp.callFunctionWithCallStack(G_38,G_220,L_STORE56__141,L_GENSYMS54__140);
TMP_231=lisp.callFunctionWithCallStack(G_38,G_217,L_GENSYMS54__140);
TMP_232=lisp.CL_values(L_GENSYMS54__140,L_ARGS55__138,TMP_229,TMP_230,TMP_231);
}
}
}
return TMP_232;
});
lisp.CL_put(G_217,G_27,TMP_224);
TMP_233=lisp.CL_symbolFunction(G_220);
lisp.CL_put(G_217,G_41,TMP_233);
CL_COMMON_LISP_STRING_INPUT_STREAM_END.lisp_name = 'STRING-INPUT-STREAM-END'
lisp.setSymbolFunction(G_235, CL_COMMON_LISP_STRING_INPUT_STREAM_END);
TMP_239=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_241;
let TMP_240;
let L_STRUCTURE__147;
let L_VALUE__146;
L_VALUE__146=arguments[0];
L_STRUCTURE__147=arguments[1];
TMP_240=lisp.CL_structurep(L_STRUCTURE__147);
if(lisp.values1(TMP_240) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__147,G_20);
}
TMP_241=lisp.CL_structureSet(L_STRUCTURE__147,2,L_VALUE__146);
return TMP_241;
});
lisp.CL_setSymbolFunction(G_238,TMP_239);
TMP_242=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_250;
let TMP_249;
let TMP_248;
let TMP_247;
let L_STORE64__155;
let TMP_246;
let L_GENSYMS62__154;
let TMP_245;
let TMP_243;
let L_ARGS63__152;
let L_G68__150;
let L_G67__149;
L_G67__149=arguments[0];
{
L_G68__150=lisp.values1(L_G67__149);
{
L_ARGS63__152=lisp.values1(L_G68__150);
{
TMP_243=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_244;
let L_X__153;
L_X__153=arguments[0];
TMP_244=lisp.callFunctionWithCallStack(G_31);
return TMP_244;
});
TMP_245=lisp.callFunctionWithCallStack(G_33,TMP_243,L_ARGS63__152);
L_GENSYMS62__154=lisp.values1(TMP_245);
TMP_246=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE64__155=lisp.values1(TMP_246);
TMP_247=lisp.callFunctionWithCallStack(G_36,L_STORE64__155);
TMP_248=lisp.callFunctionWithCallStack(G_38,G_238,L_STORE64__155,L_GENSYMS62__154);
TMP_249=lisp.callFunctionWithCallStack(G_38,G_235,L_GENSYMS62__154);
TMP_250=lisp.CL_values(L_GENSYMS62__154,L_ARGS63__152,TMP_247,TMP_248,TMP_249);
}
}
}
return TMP_250;
});
lisp.CL_put(G_235,G_27,TMP_242);
TMP_251=lisp.CL_symbolFunction(G_238);
lisp.CL_put(G_235,G_41,TMP_251);
{
TMP_252=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_256;
let TMP_255;
let TMP_254;
let TMP_253;
let L_STREAM__161;
let L_STRUCTURE__160;
L_STRUCTURE__160=arguments[0];
L_STREAM__161=arguments[1];
G_44.func(G_14.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__161);
G_44.func(G_14.func(lisp.codeArrayToString([83, 84, 82, 73, 78, 71, 45, 73, 78, 80, 85, 84, 45, 83, 84, 82, 69, 65, 77])),L_STREAM__161);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__161);
lisp.callFunctionWithCallStack(G_45,G_191,L_STREAM__161);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__161);
TMP_253=lisp.CL_structureRef(L_STRUCTURE__160,0);
lisp.callFunctionWithCallStack(G_45,TMP_253,L_STREAM__161);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__161);
lisp.callFunctionWithCallStack(G_45,G_193,L_STREAM__161);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__161);
TMP_254=lisp.CL_structureRef(L_STRUCTURE__160,1);
lisp.callFunctionWithCallStack(G_45,TMP_254,L_STREAM__161);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__161);
lisp.callFunctionWithCallStack(G_45,G_163,L_STREAM__161);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__161);
TMP_255=lisp.CL_structureRef(L_STRUCTURE__160,2);
lisp.callFunctionWithCallStack(G_45,TMP_255,L_STREAM__161);
TMP_256=G_44.func(G_14.func(lisp.codeArrayToString([41])),L_STREAM__161);
return TMP_256;
});
L_G72__162=lisp.values1(TMP_252);
{
L_G73__163=lisp.values1(L_G72__162);
lisp.CL_put(G_187,G_48,L_G73__163);
}
}
CL_COMMON_LISP_MAKE_STRING_INPUT_STREAM.lisp_name = 'MAKE-STRING-INPUT-STREAM'
lisp.setSymbolFunction(G_258, CL_COMMON_LISP_MAKE_STRING_INPUT_STREAM);
CL_COMMON_LISP_STRING_INPUT_STREAM_EOF_P.lisp_name = 'STRING-INPUT-STREAM-EOF-P'
lisp.setSymbolFunction(G_264, CL_COMMON_LISP_STRING_INPUT_STREAM_EOF_P);
CL_COMMON_LISP_COPY_FILE_INPUT_STREAM.lisp_name = 'COPY-FILE-INPUT-STREAM'
lisp.setSymbolFunction(G_270, CL_COMMON_LISP_COPY_FILE_INPUT_STREAM);
CL_COMMON_LISP_FILE_INPUT_STREAM_P.lisp_name = 'FILE-INPUT-STREAM-P'
lisp.setSymbolFunction(G_274, CL_COMMON_LISP_FILE_INPUT_STREAM_P);
CL_COMMON_LISP_MAKE_FILE_INPUT_STREAM.lisp_name = 'MAKE-FILE-INPUT-STREAM'
lisp.setSymbolFunction(G_278, CL_COMMON_LISP_MAKE_FILE_INPUT_STREAM);
CL_COMMON_LISP_FILE_INPUT_STREAM_STRING_STREAM.lisp_name = 'FILE-INPUT-STREAM-STRING-STREAM'
lisp.setSymbolFunction(G_288, CL_COMMON_LISP_FILE_INPUT_STREAM_STRING_STREAM);
TMP_292=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_294;
let TMP_293;
let L_STRUCTURE__183;
let L_VALUE__182;
L_VALUE__182=arguments[0];
L_STRUCTURE__183=arguments[1];
TMP_293=lisp.CL_structurep(L_STRUCTURE__183);
if(lisp.values1(TMP_293) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__183,G_20);
}
TMP_294=lisp.CL_structureSet(L_STRUCTURE__183,0,L_VALUE__182);
return TMP_294;
});
lisp.CL_setSymbolFunction(G_291,TMP_292);
TMP_295=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_303;
let TMP_302;
let TMP_301;
let TMP_300;
let L_STORE78__191;
let TMP_299;
let L_GENSYMS76__190;
let TMP_298;
let TMP_296;
let L_ARGS77__188;
let L_G82__186;
let L_G81__185;
L_G81__185=arguments[0];
{
L_G82__186=lisp.values1(L_G81__185);
{
L_ARGS77__188=lisp.values1(L_G82__186);
{
TMP_296=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_297;
let L_X__189;
L_X__189=arguments[0];
TMP_297=lisp.callFunctionWithCallStack(G_31);
return TMP_297;
});
TMP_298=lisp.callFunctionWithCallStack(G_33,TMP_296,L_ARGS77__188);
L_GENSYMS76__190=lisp.values1(TMP_298);
TMP_299=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE78__191=lisp.values1(TMP_299);
TMP_300=lisp.callFunctionWithCallStack(G_36,L_STORE78__191);
TMP_301=lisp.callFunctionWithCallStack(G_38,G_291,L_STORE78__191,L_GENSYMS76__190);
TMP_302=lisp.callFunctionWithCallStack(G_38,G_288,L_GENSYMS76__190);
TMP_303=lisp.CL_values(L_GENSYMS76__190,L_ARGS77__188,TMP_300,TMP_301,TMP_302);
}
}
}
return TMP_303;
});
lisp.CL_put(G_288,G_27,TMP_295);
TMP_304=lisp.CL_symbolFunction(G_291);
lisp.CL_put(G_288,G_41,TMP_304);
CL_COMMON_LISP_FILE_INPUT_STREAM_LINE.lisp_name = 'FILE-INPUT-STREAM-LINE'
lisp.setSymbolFunction(G_306, CL_COMMON_LISP_FILE_INPUT_STREAM_LINE);
TMP_310=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_312;
let TMP_311;
let L_STRUCTURE__197;
let L_VALUE__196;
L_VALUE__196=arguments[0];
L_STRUCTURE__197=arguments[1];
TMP_311=lisp.CL_structurep(L_STRUCTURE__197);
if(lisp.values1(TMP_311) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__197,G_20);
}
TMP_312=lisp.CL_structureSet(L_STRUCTURE__197,1,L_VALUE__196);
return TMP_312;
});
lisp.CL_setSymbolFunction(G_309,TMP_310);
TMP_313=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_321;
let TMP_320;
let TMP_319;
let TMP_318;
let L_STORE86__205;
let TMP_317;
let L_GENSYMS84__204;
let TMP_316;
let TMP_314;
let L_ARGS85__202;
let L_G90__200;
let L_G89__199;
L_G89__199=arguments[0];
{
L_G90__200=lisp.values1(L_G89__199);
{
L_ARGS85__202=lisp.values1(L_G90__200);
{
TMP_314=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_315;
let L_X__203;
L_X__203=arguments[0];
TMP_315=lisp.callFunctionWithCallStack(G_31);
return TMP_315;
});
TMP_316=lisp.callFunctionWithCallStack(G_33,TMP_314,L_ARGS85__202);
L_GENSYMS84__204=lisp.values1(TMP_316);
TMP_317=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE86__205=lisp.values1(TMP_317);
TMP_318=lisp.callFunctionWithCallStack(G_36,L_STORE86__205);
TMP_319=lisp.callFunctionWithCallStack(G_38,G_309,L_STORE86__205,L_GENSYMS84__204);
TMP_320=lisp.callFunctionWithCallStack(G_38,G_306,L_GENSYMS84__204);
TMP_321=lisp.CL_values(L_GENSYMS84__204,L_ARGS85__202,TMP_318,TMP_319,TMP_320);
}
}
}
return TMP_321;
});
lisp.CL_put(G_306,G_27,TMP_313);
TMP_322=lisp.CL_symbolFunction(G_309);
lisp.CL_put(G_306,G_41,TMP_322);
CL_COMMON_LISP_FILE_INPUT_STREAM_COLUMN.lisp_name = 'FILE-INPUT-STREAM-COLUMN'
lisp.setSymbolFunction(G_324, CL_COMMON_LISP_FILE_INPUT_STREAM_COLUMN);
TMP_328=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_330;
let TMP_329;
let L_STRUCTURE__211;
let L_VALUE__210;
L_VALUE__210=arguments[0];
L_STRUCTURE__211=arguments[1];
TMP_329=lisp.CL_structurep(L_STRUCTURE__211);
if(lisp.values1(TMP_329) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__211,G_20);
}
TMP_330=lisp.CL_structureSet(L_STRUCTURE__211,2,L_VALUE__210);
return TMP_330;
});
lisp.CL_setSymbolFunction(G_327,TMP_328);
TMP_331=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_339;
let TMP_338;
let TMP_337;
let TMP_336;
let L_STORE94__219;
let TMP_335;
let L_GENSYMS92__218;
let TMP_334;
let TMP_332;
let L_ARGS93__216;
let L_G98__214;
let L_G97__213;
L_G97__213=arguments[0];
{
L_G98__214=lisp.values1(L_G97__213);
{
L_ARGS93__216=lisp.values1(L_G98__214);
{
TMP_332=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_333;
let L_X__217;
L_X__217=arguments[0];
TMP_333=lisp.callFunctionWithCallStack(G_31);
return TMP_333;
});
TMP_334=lisp.callFunctionWithCallStack(G_33,TMP_332,L_ARGS93__216);
L_GENSYMS92__218=lisp.values1(TMP_334);
TMP_335=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE94__219=lisp.values1(TMP_335);
TMP_336=lisp.callFunctionWithCallStack(G_36,L_STORE94__219);
TMP_337=lisp.callFunctionWithCallStack(G_38,G_327,L_STORE94__219,L_GENSYMS92__218);
TMP_338=lisp.callFunctionWithCallStack(G_38,G_324,L_GENSYMS92__218);
TMP_339=lisp.CL_values(L_GENSYMS92__218,L_ARGS93__216,TMP_336,TMP_337,TMP_338);
}
}
}
return TMP_339;
});
lisp.CL_put(G_324,G_27,TMP_331);
TMP_340=lisp.CL_symbolFunction(G_327);
lisp.CL_put(G_324,G_41,TMP_340);
{
TMP_341=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_345;
let TMP_344;
let TMP_343;
let TMP_342;
let L_STREAM__225;
let L_STRUCTURE__224;
L_STRUCTURE__224=arguments[0];
L_STREAM__225=arguments[1];
G_44.func(G_14.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__225);
G_44.func(G_14.func(lisp.codeArrayToString([70, 73, 76, 69, 45, 73, 78, 80, 85, 84, 45, 83, 84, 82, 69, 65, 77])),L_STREAM__225);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__225);
lisp.callFunctionWithCallStack(G_45,G_279,L_STREAM__225);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__225);
TMP_342=lisp.CL_structureRef(L_STRUCTURE__224,0);
lisp.callFunctionWithCallStack(G_45,TMP_342,L_STREAM__225);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__225);
lisp.callFunctionWithCallStack(G_45,G_281,L_STREAM__225);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__225);
TMP_343=lisp.CL_structureRef(L_STRUCTURE__224,1);
lisp.callFunctionWithCallStack(G_45,TMP_343,L_STREAM__225);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__225);
lisp.callFunctionWithCallStack(G_45,G_283,L_STREAM__225);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__225);
TMP_344=lisp.CL_structureRef(L_STRUCTURE__224,2);
lisp.callFunctionWithCallStack(G_45,TMP_344,L_STREAM__225);
TMP_345=G_44.func(G_14.func(lisp.codeArrayToString([41])),L_STREAM__225);
return TMP_345;
});
L_G102__226=lisp.values1(TMP_341);
{
L_G103__227=lisp.values1(L_G102__226);
lisp.CL_put(G_275,G_48,L_G103__227);
}
}
CL_COMMON_LISP_STANDARD_INPUT_STREAM_P.lisp_name = 'STANDARD-INPUT-STREAM-P'
lisp.setSymbolFunction(G_347, CL_COMMON_LISP_STANDARD_INPUT_STREAM_P);
CL_COMMON_LISP_MAKE_STANDARD_INPUT_STREAM.lisp_name = 'MAKE-STANDARD-INPUT-STREAM'
lisp.setSymbolFunction(G_351, CL_COMMON_LISP_MAKE_STANDARD_INPUT_STREAM);
CL_COMMON_LISP_STANDARD_INPUT_STREAM_STRING.lisp_name = 'STANDARD-INPUT-STREAM-STRING'
lisp.setSymbolFunction(G_357, CL_COMMON_LISP_STANDARD_INPUT_STREAM_STRING);
TMP_361=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_363;
let TMP_362;
let L_STRUCTURE__236;
let L_VALUE__235;
L_VALUE__235=arguments[0];
L_STRUCTURE__236=arguments[1];
TMP_362=lisp.CL_structurep(L_STRUCTURE__236);
if(lisp.values1(TMP_362) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__236,G_20);
}
TMP_363=lisp.CL_structureSet(L_STRUCTURE__236,0,L_VALUE__235);
return TMP_363;
});
lisp.CL_setSymbolFunction(G_360,TMP_361);
TMP_364=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_372;
let TMP_371;
let TMP_370;
let TMP_369;
let L_STORE106__244;
let TMP_368;
let L_GENSYMS104__243;
let TMP_367;
let TMP_365;
let L_ARGS105__241;
let L_G110__239;
let L_G109__238;
L_G109__238=arguments[0];
{
L_G110__239=lisp.values1(L_G109__238);
{
L_ARGS105__241=lisp.values1(L_G110__239);
{
TMP_365=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_366;
let L_X__242;
L_X__242=arguments[0];
TMP_366=lisp.callFunctionWithCallStack(G_31);
return TMP_366;
});
TMP_367=lisp.callFunctionWithCallStack(G_33,TMP_365,L_ARGS105__241);
L_GENSYMS104__243=lisp.values1(TMP_367);
TMP_368=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE106__244=lisp.values1(TMP_368);
TMP_369=lisp.callFunctionWithCallStack(G_36,L_STORE106__244);
TMP_370=lisp.callFunctionWithCallStack(G_38,G_360,L_STORE106__244,L_GENSYMS104__243);
TMP_371=lisp.callFunctionWithCallStack(G_38,G_357,L_GENSYMS104__243);
TMP_372=lisp.CL_values(L_GENSYMS104__243,L_ARGS105__241,TMP_369,TMP_370,TMP_371);
}
}
}
return TMP_372;
});
lisp.CL_put(G_357,G_27,TMP_364);
TMP_373=lisp.CL_symbolFunction(G_360);
lisp.CL_put(G_357,G_41,TMP_373);
CL_COMMON_LISP_STANDARD_INPUT_STREAM_POSITION.lisp_name = 'STANDARD-INPUT-STREAM-POSITION'
lisp.setSymbolFunction(G_375, CL_COMMON_LISP_STANDARD_INPUT_STREAM_POSITION);
TMP_379=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_381;
let TMP_380;
let L_STRUCTURE__250;
let L_VALUE__249;
L_VALUE__249=arguments[0];
L_STRUCTURE__250=arguments[1];
TMP_380=lisp.CL_structurep(L_STRUCTURE__250);
if(lisp.values1(TMP_380) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_21,L_STRUCTURE__250,G_20);
}
TMP_381=lisp.CL_structureSet(L_STRUCTURE__250,1,L_VALUE__249);
return TMP_381;
});
lisp.CL_setSymbolFunction(G_378,TMP_379);
TMP_382=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_390;
let TMP_389;
let TMP_388;
let TMP_387;
let L_STORE114__258;
let TMP_386;
let L_GENSYMS112__257;
let TMP_385;
let TMP_383;
let L_ARGS113__255;
let L_G118__253;
let L_G117__252;
L_G117__252=arguments[0];
{
L_G118__253=lisp.values1(L_G117__252);
{
L_ARGS113__255=lisp.values1(L_G118__253);
{
TMP_383=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_384;
let L_X__256;
L_X__256=arguments[0];
TMP_384=lisp.callFunctionWithCallStack(G_31);
return TMP_384;
});
TMP_385=lisp.callFunctionWithCallStack(G_33,TMP_383,L_ARGS113__255);
L_GENSYMS112__257=lisp.values1(TMP_385);
TMP_386=lisp.callFunctionWithCallStack(G_31,G_14.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE114__258=lisp.values1(TMP_386);
TMP_387=lisp.callFunctionWithCallStack(G_36,L_STORE114__258);
TMP_388=lisp.callFunctionWithCallStack(G_38,G_378,L_STORE114__258,L_GENSYMS112__257);
TMP_389=lisp.callFunctionWithCallStack(G_38,G_375,L_GENSYMS112__257);
TMP_390=lisp.CL_values(L_GENSYMS112__257,L_ARGS113__255,TMP_387,TMP_388,TMP_389);
}
}
}
return TMP_390;
});
lisp.CL_put(G_375,G_27,TMP_382);
TMP_391=lisp.CL_symbolFunction(G_378);
lisp.CL_put(G_375,G_41,TMP_391);
{
TMP_392=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_395;
let TMP_394;
let TMP_393;
let L_STREAM__264;
let L_STRUCTURE__263;
L_STRUCTURE__263=arguments[0];
L_STREAM__264=arguments[1];
G_44.func(G_14.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__264);
G_44.func(G_14.func(lisp.codeArrayToString([83, 84, 65, 78, 68, 65, 82, 68, 45, 73, 78, 80, 85, 84, 45, 83, 84, 82, 69, 65, 77])),L_STREAM__264);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__264);
lisp.callFunctionWithCallStack(G_45,G_191,L_STREAM__264);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__264);
TMP_393=lisp.CL_structureRef(L_STRUCTURE__263,0);
lisp.callFunctionWithCallStack(G_45,TMP_393,L_STREAM__264);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__264);
lisp.callFunctionWithCallStack(G_45,G_193,L_STREAM__264);
G_44.func(G_14.func(lisp.codeArrayToString([32])),L_STREAM__264);
TMP_394=lisp.CL_structureRef(L_STRUCTURE__263,1);
lisp.callFunctionWithCallStack(G_45,TMP_394,L_STREAM__264);
TMP_395=G_44.func(G_14.func(lisp.codeArrayToString([41])),L_STREAM__264);
return TMP_395;
});
L_G122__265=lisp.values1(TMP_392);
{
L_G123__266=lisp.values1(L_G122__265);
lisp.CL_put(G_348,G_48,L_G123__266);
}
}
CL_COMMON_LISP_EMPTY_BUFFER_P.lisp_name = 'EMPTY-BUFFER-P'
lisp.setSymbolFunction(G_397, CL_COMMON_LISP_EMPTY_BUFFER_P);
CL_COMMON_LISP_FETCH_STDIN_LINE.lisp_name = 'FETCH-STDIN-LINE'
lisp.setSymbolFunction(G_404, CL_COMMON_LISP_FETCH_STDIN_LINE);
CL_COMMON_LISP_FETCH_STDIN_LINE_IF_REQUIRED.lisp_name = 'FETCH-STDIN-LINE-IF-REQUIRED'
lisp.setSymbolFunction(G_410, CL_COMMON_LISP_FETCH_STDIN_LINE_IF_REQUIRED);
TMP_415=lisp.CL_boundp(G_414);
if(lisp.values1(TMP_415) !== lisp.S_nil){
}else{
TMP_416=G_351.func();
lisp.CL_set(G_414,TMP_416);
}
lisp.CL_put(G_414,G_3,G_4);
CL_COMMON_LISP_STREAM_READ_LINE.lisp_name = 'STREAM-READ-LINE'
lisp.setSymbolFunction(G_418, CL_COMMON_LISP_STREAM_READ_LINE);
CL_COMMON_LISP_STREAM_READ_CHAR.lisp_name = 'STREAM-READ-CHAR'
lisp.setSymbolFunction(G_479, CL_COMMON_LISP_STREAM_READ_CHAR);
CL_COMMON_LISP_STREAM_UNREAD_CHAR.lisp_name = 'STREAM-UNREAD-CHAR'
lisp.setSymbolFunction(G_509, CL_COMMON_LISP_STREAM_UNREAD_CHAR);
CL_COMMON_LISP_STREAM_PEEK_CHAR.lisp_name = 'STREAM-PEEK-CHAR'
lisp.setSymbolFunction(G_524, CL_COMMON_LISP_STREAM_PEEK_CHAR);
CL_COMMON_LISP_CLOSE.lisp_name = 'CLOSE'
lisp.setSymbolFunction(G_545, CL_COMMON_LISP_CLOSE);
CL_COMMON_LISP_STREAMP.lisp_name = 'STREAMP'
lisp.setSymbolFunction(G_547, CL_COMMON_LISP_STREAMP);
CL_COMMON_LISP_FILE_POSITION.lisp_name = 'FILE-POSITION'
lisp.setSymbolFunction(G_559, CL_COMMON_LISP_FILE_POSITION);
TMP_577=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_607;
let TMP_605;
let TMP_604;
let TMP_603;
let TMP_602;
let TMP_601;
let L_BODY__371;
let L_G211__370;
let TMP_599;
let L_G210__369;
let TMP_598;
let L_STRING__368;
let TMP_597;
let L_G209__367;
let TMP_595;
let L_VAR__366;
let TMP_594;
let L_G208__365;
let TMP_593;
let TMP_592;
let TMP_591;
let TMP_590;
let L_G207__364;
let TMP_588;
let L_G206__363;
let TMP_586;
let TMP_581;
let TMP_580;
let TMP_578;
let L_G205__362;
let L_G45__361;
L_G45__361=lisp.jsArrayToList(arguments, 0);
{
L_G205__362=lisp.values1(L_G45__361);
{
TMP_578=lisp.callFunctionWithCallStack(G_579,L_G205__362);
TMP_580=lisp.callFunctionWithCallStack(G_402,1,TMP_578);
if(lisp.values1(TMP_580) !== lisp.S_nil){
TMP_581=lisp.values1(lisp.S_nil);
}else{
TMP_586=lisp.callFunctionWithCallStack(G_587,G_14.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_582, lisp.makeCons(G_583, lisp.makeCons(G_137, lisp.S_nil))), lisp.makeCons(G_584, lisp.makeCons(G_585, lisp.S_nil))),L_G205__362);
TMP_581=lisp.values1(lisp.values1(TMP_586));
}
L_G206__363=lisp.values1(TMP_581);
TMP_588=lisp.callFunctionWithCallStack(G_589,L_G205__362);
L_G207__364=lisp.values1(TMP_588);
TMP_590=lisp.callFunctionWithCallStack(G_579,L_G207__364);
TMP_591=lisp.callFunctionWithCallStack(G_402,1,TMP_590,2);
if(lisp.values1(TMP_591) !== lisp.S_nil){
TMP_592=lisp.values1(lisp.S_nil);
}else{
TMP_593=lisp.callFunctionWithCallStack(G_587,G_14.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_582, lisp.makeCons(G_583, lisp.makeCons(G_137, lisp.S_nil))),L_G207__364);
TMP_592=lisp.values1(lisp.values1(TMP_593));
}
L_G208__365=lisp.values1(TMP_592);
TMP_594=lisp.callFunctionWithCallStack(G_589,L_G207__364);
L_VAR__366=lisp.values1(TMP_594);
TMP_595=lisp.callFunctionWithCallStack(G_596,L_G207__364);
L_G209__367=lisp.values1(TMP_595);
TMP_597=lisp.callFunctionWithCallStack(G_589,L_G209__367);
L_STRING__368=lisp.values1(TMP_597);
TMP_598=lisp.callFunctionWithCallStack(G_596,L_G209__367);
L_G210__369=lisp.values1(TMP_598);
TMP_599=lisp.callFunctionWithCallStack(G_596,L_G205__362);
L_G211__370=lisp.values1(TMP_599);
L_BODY__371=lisp.values1(L_G211__370);
TMP_601=lisp.CL_cons(L_VAR__366,lisp.makeCons(lisp.makeCons(G_50, lisp.S_nil), lisp.S_nil));
TMP_602=lisp.callFunctionWithCallStack(G_36,TMP_601);
TMP_603=lisp.callFunctionWithCallStack(G_36,G_56,L_VAR__366);
TMP_604=lisp.callFunctionWithCallStack(G_36,TMP_603);
TMP_605=lisp.callFunctionWithCallStack(G_606,L_BODY__371,TMP_604);
TMP_607=lisp.callFunctionWithCallStack(G_38,G_600,TMP_602,TMP_605);
}
}
return TMP_607;
});
lisp.CL_put(G_156,G_576,TMP_577);
TMP_608=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_626;
let TMP_625;
let TMP_624;
let TMP_623;
let L_BODY__382;
let L_G218__381;
let TMP_622;
let L_G217__380;
let TMP_621;
let L_STRING__379;
let TMP_620;
let L_G216__378;
let TMP_619;
let L_STREAM__377;
let TMP_618;
let L_G215__376;
let TMP_617;
let TMP_616;
let TMP_615;
let TMP_614;
let L_G214__375;
let TMP_613;
let L_G213__374;
let TMP_612;
let TMP_611;
let TMP_610;
let TMP_609;
let L_G212__373;
let L_G192__372;
L_G192__372=lisp.jsArrayToList(arguments, 0);
{
L_G212__373=lisp.values1(L_G192__372);
{
TMP_609=lisp.callFunctionWithCallStack(G_579,L_G212__373);
TMP_610=lisp.callFunctionWithCallStack(G_402,1,TMP_609);
if(lisp.values1(TMP_610) !== lisp.S_nil){
TMP_611=lisp.values1(lisp.S_nil);
}else{
TMP_612=lisp.callFunctionWithCallStack(G_587,G_14.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_574, lisp.makeCons(G_137, lisp.S_nil)), lisp.makeCons(G_584, lisp.makeCons(G_585, lisp.S_nil))),L_G212__373);
TMP_611=lisp.values1(lisp.values1(TMP_612));
}
L_G213__374=lisp.values1(TMP_611);
TMP_613=lisp.callFunctionWithCallStack(G_589,L_G212__373);
L_G214__375=lisp.values1(TMP_613);
TMP_614=lisp.callFunctionWithCallStack(G_579,L_G214__375);
TMP_615=lisp.callFunctionWithCallStack(G_402,2,TMP_614,2);
if(lisp.values1(TMP_615) !== lisp.S_nil){
TMP_616=lisp.values1(lisp.S_nil);
}else{
TMP_617=lisp.callFunctionWithCallStack(G_587,G_14.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_574, lisp.makeCons(G_137, lisp.S_nil)),L_G214__375);
TMP_616=lisp.values1(lisp.values1(TMP_617));
}
L_G215__376=lisp.values1(TMP_616);
TMP_618=lisp.callFunctionWithCallStack(G_589,L_G214__375);
L_STREAM__377=lisp.values1(TMP_618);
TMP_619=lisp.callFunctionWithCallStack(G_596,L_G214__375);
L_G216__378=lisp.values1(TMP_619);
TMP_620=lisp.callFunctionWithCallStack(G_589,L_G216__378);
L_STRING__379=lisp.values1(TMP_620);
TMP_621=lisp.callFunctionWithCallStack(G_596,L_G216__378);
L_G217__380=lisp.values1(TMP_621);
TMP_622=lisp.callFunctionWithCallStack(G_596,L_G212__373);
L_G218__381=lisp.values1(TMP_622);
L_BODY__382=lisp.values1(L_G218__381);
TMP_623=lisp.callFunctionWithCallStack(G_36,G_258,L_STRING__379);
TMP_624=lisp.callFunctionWithCallStack(G_36,L_STREAM__377,TMP_623);
TMP_625=lisp.callFunctionWithCallStack(G_36,TMP_624);
TMP_626=lisp.callFunctionWithCallStack(G_38,G_600,TMP_625,L_BODY__382);
}
}
return TMP_626;
});
lisp.CL_put(G_542,G_576,TMP_608);
TMP_627=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_649;
let TMP_648;
let TMP_647;
let TMP_646;
let TMP_643;
let TMP_642;
let L_BODY__393;
let L_G225__392;
let TMP_641;
let L_G224__391;
let TMP_640;
let L_STREAM__390;
let TMP_639;
let L_G223__389;
let TMP_638;
let L_VAR__388;
let TMP_637;
let L_G222__387;
let TMP_636;
let TMP_635;
let TMP_634;
let TMP_633;
let L_G221__386;
let TMP_632;
let L_G220__385;
let TMP_631;
let TMP_630;
let TMP_629;
let TMP_628;
let L_G219__384;
let L_G193__383;
L_G193__383=lisp.jsArrayToList(arguments, 0);
{
L_G219__384=lisp.values1(L_G193__383);
{
TMP_628=lisp.callFunctionWithCallStack(G_579,L_G219__384);
TMP_629=lisp.callFunctionWithCallStack(G_402,1,TMP_628);
if(lisp.values1(TMP_629) !== lisp.S_nil){
TMP_630=lisp.values1(lisp.S_nil);
}else{
TMP_631=lisp.callFunctionWithCallStack(G_587,G_14.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_582, lisp.makeCons(G_574, lisp.S_nil)), lisp.makeCons(G_584, lisp.makeCons(G_585, lisp.S_nil))),L_G219__384);
TMP_630=lisp.values1(lisp.values1(TMP_631));
}
L_G220__385=lisp.values1(TMP_630);
TMP_632=lisp.callFunctionWithCallStack(G_589,L_G219__384);
L_G221__386=lisp.values1(TMP_632);
TMP_633=lisp.callFunctionWithCallStack(G_579,L_G221__386);
TMP_634=lisp.callFunctionWithCallStack(G_402,2,TMP_633,2);
if(lisp.values1(TMP_634) !== lisp.S_nil){
TMP_635=lisp.values1(lisp.S_nil);
}else{
TMP_636=lisp.callFunctionWithCallStack(G_587,G_14.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_582, lisp.makeCons(G_574, lisp.S_nil)),L_G221__386);
TMP_635=lisp.values1(lisp.values1(TMP_636));
}
L_G222__387=lisp.values1(TMP_635);
TMP_637=lisp.callFunctionWithCallStack(G_589,L_G221__386);
L_VAR__388=lisp.values1(TMP_637);
TMP_638=lisp.callFunctionWithCallStack(G_596,L_G221__386);
L_G223__389=lisp.values1(TMP_638);
TMP_639=lisp.callFunctionWithCallStack(G_589,L_G223__389);
L_STREAM__390=lisp.values1(TMP_639);
TMP_640=lisp.callFunctionWithCallStack(G_596,L_G223__389);
L_G224__391=lisp.values1(TMP_640);
TMP_641=lisp.callFunctionWithCallStack(G_596,L_G219__384);
L_G225__392=lisp.values1(TMP_641);
L_BODY__393=lisp.values1(L_G225__392);
TMP_642=lisp.callFunctionWithCallStack(G_36,L_VAR__388,L_STREAM__390);
TMP_643=lisp.callFunctionWithCallStack(G_36,TMP_642);
TMP_646=lisp.CL_cons(G_645,L_BODY__393);
TMP_647=lisp.callFunctionWithCallStack(G_36,G_545,L_VAR__388);
TMP_648=lisp.callFunctionWithCallStack(G_36,G_644,TMP_646,TMP_647);
TMP_649=lisp.callFunctionWithCallStack(G_36,G_600,TMP_643,TMP_648);
}
}
return TMP_649;
});
lisp.CL_put(G_543,G_576,TMP_627);
}catch(TMP_1){G_173.func();
console.log(TMP_1.message);
}


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let G_8;
let G_10;
let G_13;
let G_16;
let G_19;
let G_29;
let G_31;
let G_33;
let G_35;
let G_38;
let G_40;
let G_42;
let G_43;
let G_45;
let G_48;
let G_53;
let G_58;
let G_66;
let G_68;
let G_74;
let G_83;
let G_85;
let G_89;
let G_91;
let G_95;
let G_100;
let G_106;
let G_111;
let G_112;
let G_118;
let G_125;
let G_131;
let G_145;
let G_148;
let G_150;
let G_152;
let G_154;
let G_156;
let G_158;
let G_160;
let G_163;
let G_165;
let G_167;
let G_170;
let G_172;
let G_175;
let G_177;
let G_179;
let G_181;
let G_183;
let G_185;
let G_187;
let G_189;
let G_191;
let G_193;
let G_195;
let G_197;
let G_199;
let G_201;
let G_203;
let G_206;
let G_212;
let G_225;
let G_238;
let G_240;
let G_245;
let G_247;
let G_265;
let G_268;
let G_270;
let G_272;
let G_276;
let G_278;
let G_282;
let G_283;
let G_285;
let G_287;
let G_293;
let G_296;
let G_311;
let G_317;
let G_322;
let G_325;
let G_328;
let G_330;
let G_333;
let G_335;
let G_337;
let G_338;
let G_339;
let G_340;
let G_341;
let G_342;
let G_343;
let G_346;
let G_353;
let G_360;
let G_362;
let G_366;
let G_372;
let G_374;
let G_378;
let G_379;
let G_381;
let G_387;
let G_389;
let CL_COMMON_LISP_PERCENTFORMAT;
let CL_COMMON_LISP_FORMAT;
let CL_COMMON_LISP_PRINT;
let CL_COMMON_LISP_PRIN1_TO_STRING;
let CL_COMMON_LISP_PRIN1;
let CL_COMMON_LISP_PRINC_TO_STRING;
let CL_COMMON_LISP_PRINC;
let CL_COMMON_LISP_WRITE_TO_STRING;
let CL_COMMON_LISP_WRITE;
let CL_COMMON_LISP_WRITE_1;
let CL_COMMON_LISP_PRINT_STRUCTURE;
let CL_COMMON_LISP_PRINT_PACKAGE;
let CL_COMMON_LISP_PRINT_FUNCTION;
let CL_COMMON_LISP_PRINT_VECTOR;
let CL_COMMON_LISP_PRINT_CONS;
let CL_COMMON_LISP_PRINT_CONS_1;
let CL_COMMON_LISP_PRINT_LABEL;
let CL_COMMON_LISP_PRINT_CHARACTER;
let CL_COMMON_LISP_PRINT_NUMBER;
let CL_COMMON_LISP_PRINT_STRING;
let CL_COMMON_LISP_PRINT_SYMBOL;
let CL_COMMON_LISP_MAKE_CIRCLE_TABLE;
let TMP_331;
let TMP_329;
let TMP_11;
let TMP_9;
let TMP_7;
let TMP_3;
// toplevel defun
let F_MAKE_CIRCLE_TABLE_12;
F_MAKE_CIRCLE_TABLE_12=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_13, arguments.length);
}
let F_F__6;
let TMP_14;
let L_LABEL__5;
let L_CIRCLE__4;
let L_VISITED__3;
let L_OBJECT__1;
L_OBJECT__1=arguments[0];
{
L_VISITED__3=lisp.values1(lisp.S_nil);
L_CIRCLE__4=lisp.values1(lisp.S_nil);
L_LABEL__5=lisp.values1(0);
{
TMP_14=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_32;
let TMP_30;
let TMP_28;
let L_G4__12;
let TMP_27;
let TMP_26;
let TMP_25;
let L_G3__11;
let TMP_24;
let TMP_23;
let L_G1__10;
let TMP_22;
let TMP_21;
let TMP_20;
let L_G2__9;
let TMP_18;
let TMP_17;
let L_G0__8;
let TMP_15;
let L_OBJECT__7;
L_OBJECT__7=arguments[0];
{
TMP_15=lisp.callFunctionWithCallStack(G_16,L_OBJECT__7,L_VISITED__3);
L_G0__8=lisp.values1(TMP_15);
if(lisp.values1(L_G0__8) !== lisp.S_nil){
{
{
TMP_18=lisp.callFunctionWithCallStack(G_19,L_LABEL__5,1);
L_G2__9=lisp.values1(TMP_18);
L_LABEL__5=(TMP_20=lisp.values1(L_G2__9));
}
TMP_21=lisp.CL_cons(L_OBJECT__7,lisp.values1(TMP_20));
TMP_22=lisp.CL_cons(TMP_21,L_CIRCLE__4);
L_G1__10=lisp.values1(TMP_22);
L_CIRCLE__4=(TMP_23=lisp.values1(L_G1__10));
}
TMP_17=lisp.values1(TMP_23);
}else{
{
TMP_24=lisp.CL_consp(L_OBJECT__7);
L_G3__11=lisp.values1(TMP_24);
if(lisp.values1(L_G3__11) !== lisp.S_nil){
{
TMP_26=lisp.CL_cons(L_OBJECT__7,G_4);
TMP_27=lisp.CL_cons(TMP_26,L_VISITED__3);
L_G4__12=lisp.values1(TMP_27);
L_VISITED__3=lisp.values1(L_G4__12);
}
TMP_28=lisp.callFunctionWithCallStack(G_29,L_OBJECT__7);
F_F__6(TMP_28);
TMP_30=lisp.callFunctionWithCallStack(G_31,L_OBJECT__7);
TMP_32=F_F__6(TMP_30);
TMP_25=TMP_32;
}else{
TMP_25=lisp.values1(L_OBJECT__7);
}
}
TMP_17=TMP_25;
}
}
return TMP_17;
});
F_F__6=lisp.values1(TMP_14);
F_F__6(L_OBJECT__1);
}
}
return lisp.values1(L_CIRCLE__4);
});
CL_COMMON_LISP_MAKE_CIRCLE_TABLE=lisp.values1(F_MAKE_CIRCLE_TABLE_12);
let F_PRINT_SYMBOL_34;
F_PRINT_SYMBOL_34=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_35, arguments.length);
}
let TMP_81;
let TMP_80;
let TMP_79;
let TMP_78;
let TMP_77;
let TMP_76;
let TMP_75;
let TMP_73;
let TMP_67;
let TMP_65;
let TMP_64;
let TMP_63;
let TMP_62;
let TMP_61;
let L_G9__21;
let TMP_60;
let L_G11__20;
let TMP_59;
let TMP_57;
let TMP_56;
let TMP_55;
let L_G10__19;
let TMP_54;
let TMP_52;
let TMP_51;
let TMP_50;
let TMP_49;
let L_G8__18;
let TMP_47;
let TMP_46;
let TMP_44;
let TMP_41;
let L_G7__17;
let TMP_39;
let TMP_37;
let TMP_36;
let L_STREAM__15;
let L_SYMBOL__14;
L_SYMBOL__14=arguments[0];
L_STREAM__15=arguments[1];
if(lisp.values1(lisp.symbolValue(G_2)) !== lisp.S_nil){
{
TMP_37=lisp.callFunctionWithCallStack(G_38,L_SYMBOL__14);
TMP_39=lisp.callFunctionWithCallStack(G_40,TMP_37);
L_G7__17=lisp.values1(TMP_39);
if(lisp.values1(L_G7__17) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([35, 58])),L_STREAM__15);
TMP_44=lisp.callFunctionWithCallStack(G_45,L_SYMBOL__14);
TMP_46=lisp.callFunctionWithCallStack(G_43,TMP_44,L_STREAM__15);
TMP_41=TMP_46;
}else{
{
TMP_47=lisp.callFunctionWithCallStack(G_48,L_SYMBOL__14);
L_G8__18=lisp.values1(TMP_47);
if(lisp.values1(L_G8__18) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([58])),L_STREAM__15);
TMP_50=lisp.callFunctionWithCallStack(G_45,L_SYMBOL__14);
TMP_51=lisp.callFunctionWithCallStack(G_43,TMP_50,L_STREAM__15);
TMP_49=TMP_51;
}else{
{
{
TMP_52=lisp.callFunctionWithCallStack(G_38,L_SYMBOL__14);
TMP_54=lisp.CL_eq(TMP_52,lisp.symbolValue(G_53));
L_G10__19=lisp.values1(TMP_54);
if(lisp.values1(L_G10__19) !== lisp.S_nil){
TMP_55=lisp.values1(L_G10__19);
}else{
{
TMP_56=lisp.callFunctionWithCallStack(G_45,L_SYMBOL__14);
TMP_57=lisp.callFunctionWithCallStack(G_58,TMP_56);
TMP_59=lisp.CL_eq(L_SYMBOL__14,TMP_57);
L_G11__20=lisp.values1(TMP_59);
if(lisp.values1(L_G11__20) !== lisp.S_nil){
TMP_60=lisp.values1(L_G11__20);
}else{
TMP_60=lisp.values1(lisp.S_nil);
}
}
TMP_55=lisp.values1(lisp.values1(TMP_60));
}
}
L_G9__21=lisp.values1(lisp.values1(TMP_55));
if(lisp.values1(L_G9__21) !== lisp.S_nil){
TMP_62=lisp.callFunctionWithCallStack(G_45,L_SYMBOL__14);
TMP_63=lisp.callFunctionWithCallStack(G_43,TMP_62,L_STREAM__15);
TMP_61=TMP_63;
}else{
TMP_64=lisp.callFunctionWithCallStack(G_38,L_SYMBOL__14);
TMP_65=lisp.callFunctionWithCallStack(G_66,TMP_64);
lisp.callFunctionWithCallStack(G_43,TMP_65,L_STREAM__15);
TMP_67=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_72;
let TMP_71;
let TMP_70;
let TMP_69;
let L_G13__25;
let L_STATUS__24;
let L___SYMBOL__23;
L___SYMBOL__23=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_STATUS__24=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G13__25=lisp.jsArrayToList(arguments, 2);
TMP_69=lisp.CL_eq(G_68,L_STATUS__24);
if(lisp.values1(TMP_69) !== lisp.S_nil){
TMP_71=lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([58])),L_STREAM__15);
TMP_70=TMP_71;
}else{
TMP_72=lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([58, 58])),L_STREAM__15);
TMP_70=TMP_72;
}
return TMP_70;
});
TMP_73=lisp.callFunctionWithCallStack(G_74,TMP_67);
TMP_75=lisp.callFunctionWithCallStack(G_45,L_SYMBOL__14);
TMP_76=lisp.callFunctionWithCallStack(G_38,L_SYMBOL__14);
TMP_77=lisp.callFunctionWithCallStack(G_58,TMP_75,TMP_76);
lisp.CL_multipleValueCall(TMP_73,TMP_77);
TMP_78=lisp.callFunctionWithCallStack(G_45,L_SYMBOL__14);
TMP_79=lisp.callFunctionWithCallStack(G_43,TMP_78,L_STREAM__15);
TMP_61=TMP_79;
}
}
TMP_49=TMP_61;
}
}
TMP_41=TMP_49;
}
}
TMP_36=TMP_41;
}else{
TMP_80=lisp.callFunctionWithCallStack(G_45,L_SYMBOL__14);
TMP_81=lisp.callFunctionWithCallStack(G_43,TMP_80,L_STREAM__15);
TMP_36=TMP_81;
}
return TMP_36;
});
CL_COMMON_LISP_PRINT_SYMBOL=lisp.values1(F_PRINT_SYMBOL_34);
let F_PRINT_STRING_82;
F_PRINT_STRING_82=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_83, arguments.length);
}
let TMP_87;
let TMP_86;
let TMP_84;
let L_G14__29;
let L_STREAM__27;
let L_STRING__26;
L_STRING__26=arguments[0];
L_STREAM__27=arguments[1];
{
L_G14__29=lisp.values1(lisp.symbolValue(G_2));
if(lisp.values1(L_G14__29) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(34),L_STREAM__27);
lisp.callFunctionWithCallStack(G_43,L_STRING__26,L_STREAM__27);
TMP_86=lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(34),L_STREAM__27);
TMP_84=TMP_86;
}else{
TMP_87=lisp.callFunctionWithCallStack(G_43,L_STRING__26,L_STREAM__27);
TMP_84=TMP_87;
}
}
return TMP_84;
});
CL_COMMON_LISP_PRINT_STRING=lisp.values1(F_PRINT_STRING_82);
let F_PRINT_NUMBER_88;
F_PRINT_NUMBER_88=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_89, arguments.length);
}
let TMP_93;
let TMP_92;
let TMP_90;
let L_STREAM__32;
let L_NUMBER__31;
L_NUMBER__31=arguments[0];
L_STREAM__32=arguments[1];
TMP_90=lisp.callFunctionWithCallStack(G_91,L_NUMBER__31);
TMP_92=lisp.callFunctionWithCallStack(G_42,TMP_90);
TMP_93=lisp.callFunctionWithCallStack(G_43,TMP_92,L_STREAM__32);
return TMP_93;
});
CL_COMMON_LISP_PRINT_NUMBER=lisp.values1(F_PRINT_NUMBER_88);
let F_PRINT_CHARACTER_94;
F_PRINT_CHARACTER_94=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_95, arguments.length);
}
let TMP_98;
let TMP_97;
let TMP_96;
let L_G16__37;
let L_STREAM__35;
let L_CHAR__34;
L_CHAR__34=arguments[0];
L_STREAM__35=arguments[1];
{
L_G16__37=lisp.values1(lisp.symbolValue(G_2));
if(lisp.values1(L_G16__37) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([35, 92])),L_STREAM__35);
TMP_97=lisp.callFunctionWithCallStack(G_85,L_CHAR__34,L_STREAM__35);
TMP_96=TMP_97;
}else{
TMP_98=lisp.callFunctionWithCallStack(G_85,L_CHAR__34,L_STREAM__35);
TMP_96=TMP_98;
}
}
return TMP_96;
});
CL_COMMON_LISP_PRINT_CHARACTER=lisp.values1(F_PRINT_CHARACTER_94);
let F_PRINT_LABEL_99;
F_PRINT_LABEL_99=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_100, arguments.length);
}
let TMP_104;
let TMP_103;
let L_LABEL__42;
let TMP_102;
let TMP_101;
let L_STREAM__40;
let L_OBJECT__39;
L_OBJECT__39=arguments[0];
L_STREAM__40=arguments[1];
{
TMP_101=lisp.callFunctionWithCallStack(G_16,L_OBJECT__39,lisp.symbolValue(G_8));
TMP_102=lisp.callFunctionWithCallStack(G_31,TMP_101);
L_LABEL__42=lisp.values1(TMP_102);
if(lisp.values1(L_LABEL__42) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(35),L_STREAM__40);
G_89.func(L_LABEL__42,L_STREAM__40);
TMP_104=lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(35),L_STREAM__40);
TMP_103=TMP_104;
}else{
TMP_103=lisp.values1(lisp.S_nil);
}
}
return TMP_103;
});
CL_COMMON_LISP_PRINT_LABEL=lisp.values1(F_PRINT_LABEL_99);
let F_PRINT_CONS_1_105;
F_PRINT_CONS_1_105=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_106, arguments.length);
}
let TMP_129;
let F_F__46;
let TMP_107;
let L_STREAM__44;
let L_CONS__43;
L_CONS__43=arguments[0];
L_STREAM__44=arguments[1];
{
TMP_107=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_128;
let TMP_127;
let TMP_126;
let L_G19__50;
let TMP_124;
let TMP_123;
let TMP_122;
let TMP_121;
let TMP_120;
let TMP_119;
let TMP_117;
let L_OBJECT__49;
let TMP_116;
let TMP_115;
let L_G18__48;
let TMP_114;
let TMP_113;
let TMP_110;
let TMP_109;
let TMP_108;
let L_X__47;
L_X__47=arguments[0];
TMP_108=lisp.CL_consp(L_X__47);
if(lisp.values1(TMP_108) !== lisp.S_nil){
TMP_110=lisp.callFunctionWithCallStack(G_29,L_X__47);
G_112.func(TMP_110,G_111,L_STREAM__44);
{
TMP_113=lisp.callFunctionWithCallStack(G_31,L_X__47);
TMP_114=lisp.CL_consp(TMP_113);
L_G18__48=lisp.values1(TMP_114);
if(lisp.values1(L_G18__48) !== lisp.S_nil){
{
TMP_116=lisp.callFunctionWithCallStack(G_31,L_X__47);
L_OBJECT__49=lisp.values1(TMP_116);
TMP_117=lisp.callFunctionWithCallStack(G_118,L_OBJECT__49,lisp.symbolValue(G_10));
if(lisp.values1(TMP_117) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([32, 46, 32])),L_STREAM__44);
TMP_120=G_100.func(L_OBJECT__49,L_STREAM__44);
TMP_119=TMP_120;
}else{
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(32),L_STREAM__44);
TMP_121=F_F__46(L_OBJECT__49);
TMP_119=TMP_121;
}
}
TMP_115=TMP_119;
}else{
{
TMP_122=lisp.callFunctionWithCallStack(G_31,L_X__47);
TMP_123=lisp.callFunctionWithCallStack(G_40,TMP_122);
TMP_124=lisp.callFunctionWithCallStack(G_125,TMP_123);
L_G19__50=lisp.values1(TMP_124);
if(lisp.values1(L_G19__50) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([32, 46, 32])),L_STREAM__44);
TMP_127=lisp.callFunctionWithCallStack(G_31,L_X__47);
TMP_128=G_112.func(TMP_127,G_111,L_STREAM__44);
TMP_126=TMP_128;
}else{
TMP_126=lisp.values1(lisp.S_nil);
}
}
TMP_115=TMP_126;
}
}
TMP_109=TMP_115;
}else{
TMP_109=lisp.values1(lisp.S_nil);
}
return TMP_109;
});
F_F__46=lisp.values1(TMP_107);
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(40),L_STREAM__44);
F_F__46(L_CONS__43);
TMP_129=lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(41),L_STREAM__44);
}
return TMP_129;
});
CL_COMMON_LISP_PRINT_CONS_1=lisp.values1(F_PRINT_CONS_1_105);
let F_PRINT_CONS_130;
F_PRINT_CONS_130=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_131, arguments.length);
}
let TMP_146;
let L_G25__60;
let TMP_144;
let TMP_143;
let TMP_142;
let L_G23__58;
let TMP_141;
let TMP_140;
let TMP_139;
let L_G20__57;
let TMP_138;
let L_G22__56;
let TMP_137;
let TMP_136;
let TMP_135;
let TMP_134;
let TMP_133;
let L_G21__55;
let TMP_132;
let L_LABEL__54;
let L_STREAM__52;
let L_CONS__51;
L_CONS__51=arguments[0];
L_STREAM__52=arguments[1];
{
L_LABEL__54=lisp.values1(lisp.S_nil);
{
{
TMP_132=lisp.callFunctionWithCallStack(G_40,lisp.symbolValue(G_6));
L_G21__55=lisp.values1(TMP_132);
if(lisp.values1(L_G21__55) !== lisp.S_nil){
TMP_133=lisp.values1(L_G21__55);
}else{
{
TMP_134=lisp.callFunctionWithCallStack(G_16,L_CONS__51,lisp.symbolValue(G_8));
TMP_135=lisp.callFunctionWithCallStack(G_31,TMP_134);
L_LABEL__54=(TMP_136=lisp.values1(TMP_135));
TMP_137=lisp.callFunctionWithCallStack(G_40,TMP_136);
L_G22__56=lisp.values1(TMP_137);
if(lisp.values1(L_G22__56) !== lisp.S_nil){
TMP_138=lisp.values1(L_G22__56);
}else{
TMP_138=lisp.values1(lisp.S_nil);
}
}
TMP_133=lisp.values1(lisp.values1(TMP_138));
}
}
L_G20__57=lisp.values1(lisp.values1(TMP_133));
if(lisp.values1(L_G20__57) !== lisp.S_nil){
TMP_140=G_106.func(L_CONS__51,L_STREAM__52);
TMP_139=TMP_140;
}else{
{
TMP_141=lisp.callFunctionWithCallStack(G_118,L_CONS__51,lisp.symbolValue(G_10));
L_G23__58=lisp.values1(TMP_141);
if(lisp.values1(L_G23__58) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(35),L_STREAM__52);
G_89.func(L_LABEL__54,L_STREAM__52);
TMP_143=lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(35),L_STREAM__52);
TMP_142=TMP_143;
}else{
{
TMP_144=lisp.CL_cons(L_CONS__51,lisp.symbolValue(G_10));
L_G25__60=lisp.values1(TMP_144);
lisp.setSymbolValue(G_10, lisp.values1(L_G25__60));
}
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(35),L_STREAM__52);
G_89.func(L_LABEL__54,L_STREAM__52);
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(61),L_STREAM__52);
lisp.callFunctionWithCallStack(G_145,L_STREAM__52);
TMP_146=G_106.func(L_CONS__51,L_STREAM__52);
TMP_142=TMP_146;
}
}
TMP_139=TMP_142;
}
}
}
return TMP_139;
});
CL_COMMON_LISP_PRINT_CONS=lisp.values1(F_PRINT_CONS_130);
let F_PRINT_VECTOR_147;
F_PRINT_VECTOR_147=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_148, arguments.length);
}
let TMP_161;
let L_G32__67;
let TMP_159;
let TMP_157;
let TMP_155;
let TMP_153;
let TMP_151;
let L_I__66;
let BLOCK_RESULT_NIL__65;
let L_LEN__64;
let TMP_149;
let L_STREAM__62;
let L_VECTOR__61;
L_VECTOR__61=arguments[0];
L_STREAM__62=arguments[1];
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([35, 40])),L_STREAM__62);
{
TMP_149=lisp.callFunctionWithCallStack(G_150,L_VECTOR__61);
L_LEN__64=lisp.values1(TMP_149);
BLOCK_NIL__65: for(;;){{
L_I__66=lisp.values1(0);
for(;;){
TMP_151=lisp.callFunctionWithCallStack(G_152,L_I__66,L_LEN__64);
if(lisp.values1(TMP_151) !== lisp.S_nil){
BLOCK_RESULT_NIL__65=lisp.values1(lisp.S_nil);
break BLOCK_NIL__65;
}else{
TMP_153=lisp.callFunctionWithCallStack(G_154,L_VECTOR__61,L_I__66);
G_112.func(TMP_153,G_111,L_STREAM__62);
TMP_155=lisp.callFunctionWithCallStack(G_156,L_LEN__64);
TMP_157=lisp.callFunctionWithCallStack(G_158,L_I__66,TMP_155);
if(lisp.values1(TMP_157) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(32),L_STREAM__62);
}else{
}
{
TMP_159=lisp.callFunctionWithCallStack(G_160,L_I__66);
L_G32__67=lisp.values1(TMP_159);
L_I__66=lisp.values1(L_G32__67);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__65=lisp.values1(lisp.S_nil);
break;
}
}
TMP_161=lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([41])),L_STREAM__62);
return TMP_161;
});
CL_COMMON_LISP_PRINT_VECTOR=lisp.values1(F_PRINT_VECTOR_147);
let F_PRINT_FUNCTION_162;
F_PRINT_FUNCTION_162=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_163, arguments.length);
}
let L_NAME__72;
let TMP_164;
let L_G33__71;
let L_STREAM__69;
let L_FUNCTION__68;
L_FUNCTION__68=arguments[0];
L_STREAM__69=arguments[1];
{
L_G33__71=lisp.values1(L_STREAM__69);
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([35, 60])),L_G33__71);
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([70, 117, 110, 99, 116, 105, 111, 110])),L_STREAM__69);
{
TMP_164=lisp.callFunctionWithCallStack(G_165,L_FUNCTION__68);
L_NAME__72=lisp.values1(TMP_164);
if(lisp.values1(L_NAME__72) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(32),L_STREAM__69);
lisp.callFunctionWithCallStack(G_43,L_NAME__72,L_STREAM__69);
}else{
}
}
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([62])),L_G33__71);
}
return lisp.values1(lisp.S_nil);
});
CL_COMMON_LISP_PRINT_FUNCTION=lisp.values1(F_PRINT_FUNCTION_162);
let F_PRINT_PACKAGE_166;
F_PRINT_PACKAGE_166=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_167, arguments.length);
}
let TMP_168;
let L_G34__76;
let L_STREAM__74;
let L_PACKAGE__73;
L_PACKAGE__73=arguments[0];
L_STREAM__74=arguments[1];
{
L_G34__76=lisp.values1(L_STREAM__74);
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([35, 60])),L_G34__76);
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([80, 65, 67, 75, 65, 71, 69, 32])),L_STREAM__74);
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(34),L_STREAM__74);
TMP_168=lisp.callFunctionWithCallStack(G_66,L_PACKAGE__73);
lisp.callFunctionWithCallStack(G_43,TMP_168,L_STREAM__74);
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(34),L_STREAM__74);
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([62])),L_G34__76);
}
return lisp.values1(lisp.S_nil);
});
CL_COMMON_LISP_PRINT_PACKAGE=lisp.values1(F_PRINT_PACKAGE_166);
let F_PRINT_STRUCTURE_169;
F_PRINT_STRUCTURE_169=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_170, arguments.length);
}
let TMP_173;
let TMP_171;
let L_STREAM__78;
let L_STRUCTURE__77;
L_STRUCTURE__77=arguments[0];
L_STREAM__78=arguments[1];
TMP_171=lisp.callFunctionWithCallStack(G_172,L_STRUCTURE__77);
TMP_173=lisp.CL_funcall(lisp.values1(TMP_171),L_STRUCTURE__77,L_STREAM__78);
return TMP_173;
});
CL_COMMON_LISP_PRINT_STRUCTURE=lisp.values1(F_PRINT_STRUCTURE_169);
let F_WRITE_1_174;
F_WRITE_1_174=(function(){
if(arguments.length < 1 || 33 < arguments.length) {
lisp.argumentsError(G_112, arguments.length);
}
let TMP_237;
let L_G45__108;
let TMP_236;
let TMP_235;
let L_G43__106;
let TMP_234;
let TMP_233;
let TMP_232;
let L_G42__105;
let TMP_231;
let TMP_230;
let TMP_229;
let L_G41__104;
let TMP_228;
let TMP_227;
let TMP_226;
let L_G40__103;
let TMP_224;
let TMP_223;
let TMP_222;
let L_G39__102;
let TMP_221;
let TMP_220;
let TMP_219;
let L_G38__101;
let TMP_218;
let TMP_217;
let TMP_216;
let L_G37__100;
let TMP_215;
let TMP_214;
let TMP_213;
let L_G36__99;
let TMP_211;
let TMP_210;
let TMP_209;
let L_G35__98;
let TMP_208;
let L_STREAM__96;
let L_RIGHT_MARGIN__95;
let L_READABLY__94;
let L_RADIX__93;
let L_PRETTY__92;
let L_PPRINT_DISPATCH__91;
let L_MISER_WIDTH__90;
let L_LINES__89;
let L_LEVEL__88;
let L_LENGTH__87;
let L_GENSYM__86;
let save_STARPRINT_ESCAPESTAR__85;
let save_STARPRINT_CIRCLESTAR__84;
let L_CASE__83;
let L_BASE__82;
let L_ARRAY__81;
let L_OBJECT__80;
L_OBJECT__80=arguments[0];
let supplied_ARRAY__81;
for (let TMP_176 = 1; TMP_176 < arguments.length; TMP_176 += 2) {
if(arguments[TMP_176] === G_175){
supplied_ARRAY__81=arguments[TMP_176+1];
break;
}
}
L_ARRAY__81=supplied_ARRAY__81 !== undefined ? supplied_ARRAY__81 : (lisp.values1(lisp.S_nil));
let supplied_BASE__82;
for (let TMP_178 = 1; TMP_178 < arguments.length; TMP_178 += 2) {
if(arguments[TMP_178] === G_177){
supplied_BASE__82=arguments[TMP_178+1];
break;
}
}
L_BASE__82=supplied_BASE__82 !== undefined ? supplied_BASE__82 : (lisp.values1(lisp.S_nil));
let supplied_CASE__83;
for (let TMP_180 = 1; TMP_180 < arguments.length; TMP_180 += 2) {
if(arguments[TMP_180] === G_179){
supplied_CASE__83=arguments[TMP_180+1];
break;
}
}
L_CASE__83=supplied_CASE__83 !== undefined ? supplied_CASE__83 : (lisp.values1(lisp.S_nil));
let supplied_STARPRINT_CIRCLESTAR__84;
for (let TMP_182 = 1; TMP_182 < arguments.length; TMP_182 += 2) {
if(arguments[TMP_182] === G_181){
supplied_STARPRINT_CIRCLESTAR__84=arguments[TMP_182+1];
break;
}
}
save_STARPRINT_CIRCLESTAR__84=G_6.value;
G_6.value=supplied_STARPRINT_CIRCLESTAR__84 !== undefined ? supplied_STARPRINT_CIRCLESTAR__84 : (lisp.values1(lisp.symbolValue(G_6)));
let supplied_STARPRINT_ESCAPESTAR__85;
for (let TMP_184 = 1; TMP_184 < arguments.length; TMP_184 += 2) {
if(arguments[TMP_184] === G_183){
supplied_STARPRINT_ESCAPESTAR__85=arguments[TMP_184+1];
break;
}
}
save_STARPRINT_ESCAPESTAR__85=G_2.value;
G_2.value=supplied_STARPRINT_ESCAPESTAR__85 !== undefined ? supplied_STARPRINT_ESCAPESTAR__85 : (lisp.values1(lisp.symbolValue(G_2)));
let supplied_GENSYM__86;
for (let TMP_186 = 1; TMP_186 < arguments.length; TMP_186 += 2) {
if(arguments[TMP_186] === G_185){
supplied_GENSYM__86=arguments[TMP_186+1];
break;
}
}
L_GENSYM__86=supplied_GENSYM__86 !== undefined ? supplied_GENSYM__86 : (lisp.values1(lisp.S_nil));
let supplied_LENGTH__87;
for (let TMP_188 = 1; TMP_188 < arguments.length; TMP_188 += 2) {
if(arguments[TMP_188] === G_187){
supplied_LENGTH__87=arguments[TMP_188+1];
break;
}
}
L_LENGTH__87=supplied_LENGTH__87 !== undefined ? supplied_LENGTH__87 : (lisp.values1(lisp.S_nil));
let supplied_LEVEL__88;
for (let TMP_190 = 1; TMP_190 < arguments.length; TMP_190 += 2) {
if(arguments[TMP_190] === G_189){
supplied_LEVEL__88=arguments[TMP_190+1];
break;
}
}
L_LEVEL__88=supplied_LEVEL__88 !== undefined ? supplied_LEVEL__88 : (lisp.values1(lisp.S_nil));
let supplied_LINES__89;
for (let TMP_192 = 1; TMP_192 < arguments.length; TMP_192 += 2) {
if(arguments[TMP_192] === G_191){
supplied_LINES__89=arguments[TMP_192+1];
break;
}
}
L_LINES__89=supplied_LINES__89 !== undefined ? supplied_LINES__89 : (lisp.values1(lisp.S_nil));
let supplied_MISER_WIDTH__90;
for (let TMP_194 = 1; TMP_194 < arguments.length; TMP_194 += 2) {
if(arguments[TMP_194] === G_193){
supplied_MISER_WIDTH__90=arguments[TMP_194+1];
break;
}
}
L_MISER_WIDTH__90=supplied_MISER_WIDTH__90 !== undefined ? supplied_MISER_WIDTH__90 : (lisp.values1(lisp.S_nil));
let supplied_PPRINT_DISPATCH__91;
for (let TMP_196 = 1; TMP_196 < arguments.length; TMP_196 += 2) {
if(arguments[TMP_196] === G_195){
supplied_PPRINT_DISPATCH__91=arguments[TMP_196+1];
break;
}
}
L_PPRINT_DISPATCH__91=supplied_PPRINT_DISPATCH__91 !== undefined ? supplied_PPRINT_DISPATCH__91 : (lisp.values1(lisp.S_nil));
let supplied_PRETTY__92;
for (let TMP_198 = 1; TMP_198 < arguments.length; TMP_198 += 2) {
if(arguments[TMP_198] === G_197){
supplied_PRETTY__92=arguments[TMP_198+1];
break;
}
}
L_PRETTY__92=supplied_PRETTY__92 !== undefined ? supplied_PRETTY__92 : (lisp.values1(lisp.S_nil));
let supplied_RADIX__93;
for (let TMP_200 = 1; TMP_200 < arguments.length; TMP_200 += 2) {
if(arguments[TMP_200] === G_199){
supplied_RADIX__93=arguments[TMP_200+1];
break;
}
}
L_RADIX__93=supplied_RADIX__93 !== undefined ? supplied_RADIX__93 : (lisp.values1(lisp.S_nil));
let supplied_READABLY__94;
for (let TMP_202 = 1; TMP_202 < arguments.length; TMP_202 += 2) {
if(arguments[TMP_202] === G_201){
supplied_READABLY__94=arguments[TMP_202+1];
break;
}
}
L_READABLY__94=supplied_READABLY__94 !== undefined ? supplied_READABLY__94 : (lisp.values1(lisp.S_nil));
let supplied_RIGHT_MARGIN__95;
for (let TMP_204 = 1; TMP_204 < arguments.length; TMP_204 += 2) {
if(arguments[TMP_204] === G_203){
supplied_RIGHT_MARGIN__95=arguments[TMP_204+1];
break;
}
}
L_RIGHT_MARGIN__95=supplied_RIGHT_MARGIN__95 !== undefined ? supplied_RIGHT_MARGIN__95 : (lisp.values1(lisp.S_nil));
let supplied_STREAM__96;
for (let TMP_205 = 1; TMP_205 < arguments.length; TMP_205 += 2) {
if(arguments[TMP_205] === G_111){
supplied_STREAM__96=arguments[TMP_205+1];
break;
}
}
L_STREAM__96=supplied_STREAM__96 !== undefined ? supplied_STREAM__96 : (lisp.values1(lisp.symbolValue(G_206)));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_207 = 1; TMP_207 < arguments.length; TMP_207 += 2) {
if(arguments[TMP_207]!==G_111 && arguments[TMP_207]!==G_203 && arguments[TMP_207]!==G_201 && arguments[TMP_207]!==G_199 && arguments[TMP_207]!==G_197 && arguments[TMP_207]!==G_195 && arguments[TMP_207]!==G_193 && arguments[TMP_207]!==G_191 && arguments[TMP_207]!==G_189 && arguments[TMP_207]!==G_187 && arguments[TMP_207]!==G_185 && arguments[TMP_207]!==G_183 && arguments[TMP_207]!==G_181 && arguments[TMP_207]!==G_179 && arguments[TMP_207]!==G_177 && arguments[TMP_207]!==G_175) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_207].name); }
}
try{
{
TMP_208=lisp.CL_symbolp(L_OBJECT__80);
L_G35__98=lisp.values1(TMP_208);
if(lisp.values1(L_G35__98) !== lisp.S_nil){
TMP_210=G_35.func(L_OBJECT__80,L_STREAM__96);
TMP_209=TMP_210;
}else{
{
TMP_211=lisp.callFunctionWithCallStack(G_212,L_OBJECT__80);
L_G36__99=lisp.values1(TMP_211);
if(lisp.values1(L_G36__99) !== lisp.S_nil){
TMP_214=G_83.func(L_OBJECT__80,L_STREAM__96);
TMP_213=TMP_214;
}else{
{
TMP_215=lisp.CL_numberp(L_OBJECT__80);
L_G37__100=lisp.values1(TMP_215);
if(lisp.values1(L_G37__100) !== lisp.S_nil){
TMP_217=G_89.func(L_OBJECT__80,L_STREAM__96);
TMP_216=TMP_217;
}else{
{
TMP_218=lisp.CL_characterp(L_OBJECT__80);
L_G38__101=lisp.values1(TMP_218);
if(lisp.values1(L_G38__101) !== lisp.S_nil){
TMP_220=G_95.func(L_OBJECT__80,L_STREAM__96);
TMP_219=TMP_220;
}else{
{
TMP_221=lisp.CL_consp(L_OBJECT__80);
L_G39__102=lisp.values1(TMP_221);
if(lisp.values1(L_G39__102) !== lisp.S_nil){
TMP_223=G_131.func(L_OBJECT__80,L_STREAM__96);
TMP_222=TMP_223;
}else{
{
TMP_224=lisp.callFunctionWithCallStack(G_225,L_OBJECT__80);
L_G40__103=lisp.values1(TMP_224);
if(lisp.values1(L_G40__103) !== lisp.S_nil){
TMP_227=G_148.func(L_OBJECT__80,L_STREAM__96);
TMP_226=TMP_227;
}else{
{
TMP_228=lisp.CL_functionp(L_OBJECT__80);
L_G41__104=lisp.values1(TMP_228);
if(lisp.values1(L_G41__104) !== lisp.S_nil){
TMP_230=G_163.func(L_OBJECT__80,L_STREAM__96);
TMP_229=TMP_230;
}else{
{
TMP_231=lisp.CL_packagep(L_OBJECT__80);
L_G42__105=lisp.values1(TMP_231);
if(lisp.values1(L_G42__105) !== lisp.S_nil){
TMP_233=G_167.func(L_OBJECT__80,L_STREAM__96);
TMP_232=TMP_233;
}else{
{
TMP_234=lisp.CL_structurep(L_OBJECT__80);
L_G43__106=lisp.values1(TMP_234);
if(lisp.values1(L_G43__106) !== lisp.S_nil){
TMP_236=G_170.func(L_OBJECT__80,L_STREAM__96);
TMP_235=TMP_236;
}else{
{
L_G45__108=lisp.values1(L_STREAM__96);
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([35, 60])),L_G45__108);
TMP_237=lisp.callFunctionWithCallStack(G_238,L_OBJECT__80);
lisp.callFunctionWithCallStack(G_43,TMP_237,L_STREAM__96);
lisp.callFunctionWithCallStack(G_43,G_42.func(lisp.codeArrayToString([62])),L_G45__108);
}
TMP_235=lisp.values1(lisp.S_nil);
}
}
TMP_232=TMP_235;
}
}
TMP_229=TMP_232;
}
}
TMP_226=TMP_229;
}
}
TMP_222=TMP_226;
}
}
TMP_219=TMP_222;
}
}
TMP_216=TMP_219;
}
}
TMP_213=TMP_216;
}
}
TMP_209=TMP_213;
}
}
return TMP_209;
}finally{
G_6.value=save_STARPRINT_CIRCLESTAR__84;
G_2.value=save_STARPRINT_ESCAPESTAR__85;
}
});
CL_COMMON_LISP_WRITE_1=lisp.values1(F_WRITE_1_174);
let F_WRITE_239;
F_WRITE_239=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_240, arguments.length);
}
let TMP_244;
let TMP_243;
let save_STARPRINT_CIRCLE_SEENSTAR__113;
let save_STARPRINT_CIRCLE_TABLESTAR__112;
let TMP_242;
let TMP_241;
let L_ARGS__110;
let L_OBJECT__109;
L_OBJECT__109=arguments[0];
L_ARGS__110=lisp.jsArrayToList(arguments, 1);
{
if(lisp.values1(lisp.symbolValue(G_6)) !== lisp.S_nil){
TMP_242=G_13.func(L_OBJECT__109);
TMP_241=lisp.values1(TMP_242);
}else{
TMP_241=lisp.values1(lisp.S_nil);
}
save_STARPRINT_CIRCLE_TABLESTAR__112=G_8.value;
G_8.value=lisp.values1(TMP_241);
save_STARPRINT_CIRCLE_SEENSTAR__113=G_10.value;
G_10.value=lisp.values1(lisp.S_nil);
try{
TMP_243=lisp.CL_symbolFunction(G_112);
TMP_244=lisp.callFunctionWithCallStack(G_245,TMP_243,L_OBJECT__109,L_ARGS__110);
}finally{
G_10.value=save_STARPRINT_CIRCLE_SEENSTAR__113;
G_8.value=save_STARPRINT_CIRCLE_TABLESTAR__112;
}
}
return TMP_244;
});
CL_COMMON_LISP_WRITE=lisp.values1(F_WRITE_239);
let F_WRITE_TO_STRING_246;
F_WRITE_TO_STRING_246=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_247, arguments.length);
}
let TMP_267;
let TMP_266;
let L_STREAM__132;
let TMP_264;
let L_ARGS__130;
let L_RIGHT_MARGIN__129;
let L_READABLY__128;
let L_RADIX__127;
let L_PRETTY__126;
let L_PPRINT_DISPATCH__125;
let L_MISER_WIDTH__124;
let L_LINES__123;
let L_LEVEL__122;
let L_LENGTH__121;
let L_GENSYM__120;
let L_ESCAPE__119;
let L_CIRCLE__118;
let L_CASE__117;
let L_BASE__116;
let L_ARRAY__115;
let L_OBJECT__114;
L_OBJECT__114=arguments[0];
let supplied_ARRAY__115;
for (let TMP_248 = 1; TMP_248 < arguments.length; TMP_248 += 2) {
if(arguments[TMP_248] === G_175){
supplied_ARRAY__115=arguments[TMP_248+1];
break;
}
}
L_ARRAY__115=supplied_ARRAY__115 !== undefined ? supplied_ARRAY__115 : (lisp.values1(lisp.S_nil));
let supplied_BASE__116;
for (let TMP_249 = 1; TMP_249 < arguments.length; TMP_249 += 2) {
if(arguments[TMP_249] === G_177){
supplied_BASE__116=arguments[TMP_249+1];
break;
}
}
L_BASE__116=supplied_BASE__116 !== undefined ? supplied_BASE__116 : (lisp.values1(lisp.S_nil));
let supplied_CASE__117;
for (let TMP_250 = 1; TMP_250 < arguments.length; TMP_250 += 2) {
if(arguments[TMP_250] === G_179){
supplied_CASE__117=arguments[TMP_250+1];
break;
}
}
L_CASE__117=supplied_CASE__117 !== undefined ? supplied_CASE__117 : (lisp.values1(lisp.S_nil));
let supplied_CIRCLE__118;
for (let TMP_251 = 1; TMP_251 < arguments.length; TMP_251 += 2) {
if(arguments[TMP_251] === G_181){
supplied_CIRCLE__118=arguments[TMP_251+1];
break;
}
}
L_CIRCLE__118=supplied_CIRCLE__118 !== undefined ? supplied_CIRCLE__118 : (lisp.values1(lisp.S_nil));
let supplied_ESCAPE__119;
for (let TMP_252 = 1; TMP_252 < arguments.length; TMP_252 += 2) {
if(arguments[TMP_252] === G_183){
supplied_ESCAPE__119=arguments[TMP_252+1];
break;
}
}
L_ESCAPE__119=supplied_ESCAPE__119 !== undefined ? supplied_ESCAPE__119 : (lisp.values1(lisp.S_nil));
let supplied_GENSYM__120;
for (let TMP_253 = 1; TMP_253 < arguments.length; TMP_253 += 2) {
if(arguments[TMP_253] === G_185){
supplied_GENSYM__120=arguments[TMP_253+1];
break;
}
}
L_GENSYM__120=supplied_GENSYM__120 !== undefined ? supplied_GENSYM__120 : (lisp.values1(lisp.S_nil));
let supplied_LENGTH__121;
for (let TMP_254 = 1; TMP_254 < arguments.length; TMP_254 += 2) {
if(arguments[TMP_254] === G_187){
supplied_LENGTH__121=arguments[TMP_254+1];
break;
}
}
L_LENGTH__121=supplied_LENGTH__121 !== undefined ? supplied_LENGTH__121 : (lisp.values1(lisp.S_nil));
let supplied_LEVEL__122;
for (let TMP_255 = 1; TMP_255 < arguments.length; TMP_255 += 2) {
if(arguments[TMP_255] === G_189){
supplied_LEVEL__122=arguments[TMP_255+1];
break;
}
}
L_LEVEL__122=supplied_LEVEL__122 !== undefined ? supplied_LEVEL__122 : (lisp.values1(lisp.S_nil));
let supplied_LINES__123;
for (let TMP_256 = 1; TMP_256 < arguments.length; TMP_256 += 2) {
if(arguments[TMP_256] === G_191){
supplied_LINES__123=arguments[TMP_256+1];
break;
}
}
L_LINES__123=supplied_LINES__123 !== undefined ? supplied_LINES__123 : (lisp.values1(lisp.S_nil));
let supplied_MISER_WIDTH__124;
for (let TMP_257 = 1; TMP_257 < arguments.length; TMP_257 += 2) {
if(arguments[TMP_257] === G_193){
supplied_MISER_WIDTH__124=arguments[TMP_257+1];
break;
}
}
L_MISER_WIDTH__124=supplied_MISER_WIDTH__124 !== undefined ? supplied_MISER_WIDTH__124 : (lisp.values1(lisp.S_nil));
let supplied_PPRINT_DISPATCH__125;
for (let TMP_258 = 1; TMP_258 < arguments.length; TMP_258 += 2) {
if(arguments[TMP_258] === G_195){
supplied_PPRINT_DISPATCH__125=arguments[TMP_258+1];
break;
}
}
L_PPRINT_DISPATCH__125=supplied_PPRINT_DISPATCH__125 !== undefined ? supplied_PPRINT_DISPATCH__125 : (lisp.values1(lisp.S_nil));
let supplied_PRETTY__126;
for (let TMP_259 = 1; TMP_259 < arguments.length; TMP_259 += 2) {
if(arguments[TMP_259] === G_197){
supplied_PRETTY__126=arguments[TMP_259+1];
break;
}
}
L_PRETTY__126=supplied_PRETTY__126 !== undefined ? supplied_PRETTY__126 : (lisp.values1(lisp.S_nil));
let supplied_RADIX__127;
for (let TMP_260 = 1; TMP_260 < arguments.length; TMP_260 += 2) {
if(arguments[TMP_260] === G_199){
supplied_RADIX__127=arguments[TMP_260+1];
break;
}
}
L_RADIX__127=supplied_RADIX__127 !== undefined ? supplied_RADIX__127 : (lisp.values1(lisp.S_nil));
let supplied_READABLY__128;
for (let TMP_261 = 1; TMP_261 < arguments.length; TMP_261 += 2) {
if(arguments[TMP_261] === G_201){
supplied_READABLY__128=arguments[TMP_261+1];
break;
}
}
L_READABLY__128=supplied_READABLY__128 !== undefined ? supplied_READABLY__128 : (lisp.values1(lisp.S_nil));
let supplied_RIGHT_MARGIN__129;
for (let TMP_262 = 1; TMP_262 < arguments.length; TMP_262 += 2) {
if(arguments[TMP_262] === G_203){
supplied_RIGHT_MARGIN__129=arguments[TMP_262+1];
break;
}
}
L_RIGHT_MARGIN__129=supplied_RIGHT_MARGIN__129 !== undefined ? supplied_RIGHT_MARGIN__129 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_263 = 1; TMP_263 < arguments.length; TMP_263 += 2) {
if(arguments[TMP_263]!==G_203 && arguments[TMP_263]!==G_201 && arguments[TMP_263]!==G_199 && arguments[TMP_263]!==G_197 && arguments[TMP_263]!==G_195 && arguments[TMP_263]!==G_193 && arguments[TMP_263]!==G_191 && arguments[TMP_263]!==G_189 && arguments[TMP_263]!==G_187 && arguments[TMP_263]!==G_185 && arguments[TMP_263]!==G_183 && arguments[TMP_263]!==G_181 && arguments[TMP_263]!==G_179 && arguments[TMP_263]!==G_177 && arguments[TMP_263]!==G_175) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_263].name); }
}
L_ARGS__130=lisp.jsArrayToList(arguments, 1);
{
TMP_264=lisp.callFunctionWithCallStack(G_265);
L_STREAM__132=lisp.values1(TMP_264);
TMP_266=lisp.CL_symbolFunction(G_240);
lisp.callFunctionWithCallStack(G_245,TMP_266,L_OBJECT__114,G_111,L_STREAM__132,L_ARGS__130);
TMP_267=lisp.callFunctionWithCallStack(G_268,L_STREAM__132);
}
return TMP_267;
});
CL_COMMON_LISP_WRITE_TO_STRING=lisp.values1(F_WRITE_TO_STRING_246);
let F_PRINC_269;
F_PRINC_269=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_270, arguments.length);
}
let L_STREAM__134;
let L_OBJECT__133;
L_OBJECT__133=arguments[0];
L_STREAM__134=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_206)));
G_240.func(L_OBJECT__133,G_183,lisp.S_nil,G_111,L_STREAM__134);
return lisp.values1(L_OBJECT__133);
});
CL_COMMON_LISP_PRINC=lisp.values1(F_PRINC_269);
let F_PRINC_TO_STRING_271;
F_PRINC_TO_STRING_271=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_272, arguments.length);
}
let TMP_274;
let L_STREAM__138;
let TMP_273;
let L_OBJECT__136;
L_OBJECT__136=arguments[0];
{
TMP_273=lisp.callFunctionWithCallStack(G_265);
L_STREAM__138=lisp.values1(TMP_273);
G_270.func(L_OBJECT__136,L_STREAM__138);
TMP_274=lisp.callFunctionWithCallStack(G_268,L_STREAM__138);
}
return TMP_274;
});
CL_COMMON_LISP_PRINC_TO_STRING=lisp.values1(F_PRINC_TO_STRING_271);
let F_PRIN1_275;
F_PRIN1_275=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_276, arguments.length);
}
let L_STREAM__140;
let L_OBJECT__139;
L_OBJECT__139=arguments[0];
L_STREAM__140=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_206)));
G_240.func(L_OBJECT__139,G_183,G_4,G_111,L_STREAM__140);
return lisp.values1(L_OBJECT__139);
});
CL_COMMON_LISP_PRIN1=lisp.values1(F_PRIN1_275);
let F_PRIN1_TO_STRING_277;
F_PRIN1_TO_STRING_277=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_278, arguments.length);
}
let TMP_280;
let L_STREAM__144;
let TMP_279;
let L_OBJECT__142;
L_OBJECT__142=arguments[0];
{
TMP_279=lisp.callFunctionWithCallStack(G_265);
L_STREAM__144=lisp.values1(TMP_279);
G_276.func(L_OBJECT__142,L_STREAM__144);
TMP_280=lisp.callFunctionWithCallStack(G_268,L_STREAM__144);
}
return TMP_280;
});
CL_COMMON_LISP_PRIN1_TO_STRING=lisp.values1(F_PRIN1_TO_STRING_277);
let F_PRINT_281;
F_PRINT_281=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_282, arguments.length);
}
let L_STREAM__146;
let L_OBJECT__145;
L_OBJECT__145=arguments[0];
L_STREAM__146=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_206)));
lisp.callFunctionWithCallStack(G_283,L_STREAM__146);
G_276.func(L_OBJECT__145,L_STREAM__146);
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(32),L_STREAM__146);
return lisp.values1(L_OBJECT__145);
});
CL_COMMON_LISP_PRINT=lisp.values1(F_PRINT_281);
let F_FORMAT_284;
F_FORMAT_284=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_285, arguments.length);
}
let TMP_320;
let TMP_319;
let L_G67__173;
let TMP_318;
let TMP_316;
let TMP_315;
let L_G66__172;
let TMP_314;
let L_STRING__171;
let TMP_313;
let L_G65__170;
let TMP_312;
let L_G62__167;
let TMP_310;
let L_G61__166;
let TMP_309;
let TMP_308;
let L_G60__165;
let TMP_307;
let TMP_306;
let L_G59__164;
let TMP_305;
let TMP_304;
let L_G58__163;
let TMP_303;
let TMP_302;
let L_G57__162;
let TMP_301;
let L_G56__161;
let TMP_300;
let TMP_299;
let TMP_298;
let L_G55__160;
let TMP_297;
let L_G54__159;
let TMP_295;
let L_C__158;
let TMP_294;
let TMP_292;
let TMP_291;
let L_I__157;
let BLOCK_RESULT_NIL__156;
let L_BUFFER__155;
let TMP_290;
let F_TAKE__154;
let TMP_286;
let L_FORMAT_ARGUMENTS__150;
let L_CONTROL_STRING__149;
let L_DESTINATION__148;
L_DESTINATION__148=arguments[0];
L_CONTROL_STRING__149=arguments[1];
L_FORMAT_ARGUMENTS__150=lisp.jsArrayToList(arguments, 2);
{
TMP_286=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G47__153;
let TMP_289;
let L_G46__152;
let TMP_288;
if(lisp.values1(L_FORMAT_ARGUMENTS__150) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_287,G_42.func(lisp.codeArrayToString([78, 111, 32, 109, 111, 114, 101, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115])));
}
{
TMP_288=lisp.callFunctionWithCallStack(G_31,L_FORMAT_ARGUMENTS__150);
L_G46__152=lisp.values1(TMP_288);
{
TMP_289=lisp.callFunctionWithCallStack(G_29,L_FORMAT_ARGUMENTS__150);
L_G47__153=lisp.values1(TMP_289);
L_FORMAT_ARGUMENTS__150=lisp.values1(L_G46__152);
}
}
return lisp.values1(L_G47__153);
});
F_TAKE__154=lisp.values1(TMP_286);
{
{
TMP_290=lisp.callFunctionWithCallStack(G_265);
L_BUFFER__155=lisp.values1(TMP_290);
BLOCK_NIL__156: for(;;){{
L_I__157=lisp.values1(0);
for(;;){
TMP_291=lisp.callFunctionWithCallStack(G_150,L_CONTROL_STRING__149);
TMP_292=lisp.callFunctionWithCallStack(G_293,L_I__157,TMP_291);
if(lisp.values1(TMP_292) !== lisp.S_nil){
BLOCK_RESULT_NIL__156=lisp.values1(lisp.S_nil);
break BLOCK_NIL__156;
}else{
{
TMP_294=lisp.callFunctionWithCallStack(G_154,L_CONTROL_STRING__149,L_I__157);
L_C__158=lisp.values1(TMP_294);
{
TMP_295=lisp.callFunctionWithCallStack(G_296,L_C__158,lisp.makeCharacter(126));
L_G54__159=lisp.values1(TMP_295);
if(lisp.values1(L_G54__159) !== lisp.S_nil){
{
TMP_297=lisp.callFunctionWithCallStack(G_19,L_I__157,1);
L_G55__160=lisp.values1(TMP_297);
L_I__157=lisp.values1(L_G55__160);
}
TMP_298=lisp.callFunctionWithCallStack(G_150,L_CONTROL_STRING__149);
TMP_299=lisp.callFunctionWithCallStack(G_293,L_I__157,TMP_298);
if(lisp.values1(TMP_299) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_287,G_42.func(lisp.codeArrayToString([102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114])));
}else{
}
{
TMP_300=lisp.callFunctionWithCallStack(G_154,L_CONTROL_STRING__149,L_I__157);
L_G56__161=lisp.values1(TMP_300);
{
TMP_301=lisp.callFunctionWithCallStack(G_118,L_G56__161,lisp.makeCons(lisp.makeCharacter(97), lisp.makeCons(lisp.makeCharacter(65), lisp.S_nil)));
L_G57__162=lisp.values1(TMP_301);
if(lisp.values1(L_G57__162) !== lisp.S_nil){
TMP_302=F_TAKE__154();
G_270.func(TMP_302,L_BUFFER__155);
}else{
{
TMP_303=lisp.callFunctionWithCallStack(G_118,L_G56__161,lisp.makeCons(lisp.makeCharacter(100), lisp.makeCons(lisp.makeCharacter(68), lisp.S_nil)));
L_G58__163=lisp.values1(TMP_303);
if(lisp.values1(L_G58__163) !== lisp.S_nil){
TMP_304=F_TAKE__154();
G_270.func(TMP_304,L_BUFFER__155);
}else{
{
TMP_305=lisp.callFunctionWithCallStack(G_118,L_G56__161,lisp.makeCons(lisp.makeCharacter(99), lisp.makeCons(lisp.makeCharacter(67), lisp.S_nil)));
L_G59__164=lisp.values1(TMP_305);
if(lisp.values1(L_G59__164) !== lisp.S_nil){
TMP_306=F_TAKE__154();
G_270.func(TMP_306,L_BUFFER__155);
}else{
{
TMP_307=lisp.callFunctionWithCallStack(G_118,L_G56__161,lisp.makeCons(lisp.makeCharacter(115), lisp.makeCons(lisp.makeCharacter(83), lisp.S_nil)));
L_G60__165=lisp.values1(TMP_307);
if(lisp.values1(L_G60__165) !== lisp.S_nil){
TMP_308=F_TAKE__154();
G_276.func(TMP_308,L_BUFFER__155);
}else{
{
TMP_309=lisp.callFunctionWithCallStack(G_118,L_G56__161,lisp.makeCons(lisp.makeCharacter(37), lisp.S_nil));
L_G61__166=lisp.values1(TMP_309);
if(lisp.values1(L_G61__166) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_85,lisp.makeCharacter(10),L_BUFFER__155);
}else{
{
TMP_310=lisp.callFunctionWithCallStack(G_118,L_G56__161,lisp.makeCons(lisp.makeCharacter(38), lisp.S_nil));
L_G62__167=lisp.values1(TMP_310);
if(lisp.values1(L_G62__167) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_311,L_BUFFER__155);
}else{
lisp.callFunctionWithCallStack(G_287,G_42.func(lisp.codeArrayToString([117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 102, 111, 114, 109, 97, 116, 32, 100, 105, 114, 101, 99, 116, 105, 118, 101])));
}
}
}
}
}
}
}
}
}
}
}
}
}
}else{
lisp.callFunctionWithCallStack(G_85,L_C__158,L_BUFFER__155);
}
}
}
{
TMP_312=lisp.callFunctionWithCallStack(G_160,L_I__157);
L_G65__170=lisp.values1(TMP_312);
L_I__157=lisp.values1(L_G65__170);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__156=lisp.values1(lisp.S_nil);
break;
}
TMP_313=lisp.callFunctionWithCallStack(G_268,L_BUFFER__155);
}
L_STRING__171=lisp.values1(lisp.values1(lisp.values1(TMP_313)));
{
TMP_314=lisp.CL_eq(L_DESTINATION__148,G_4);
L_G66__172=lisp.values1(TMP_314);
if(lisp.values1(L_G66__172) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_43,L_STRING__171,lisp.symbolValue(G_206));
TMP_316=lisp.callFunctionWithCallStack(G_317,lisp.symbolValue(G_206));
TMP_315=TMP_316;
}else{
{
TMP_318=lisp.CL_eq(L_DESTINATION__148,lisp.S_nil);
L_G67__173=lisp.values1(TMP_318);
if(lisp.values1(L_G67__173) !== lisp.S_nil){
TMP_319=lisp.values1(L_STRING__171);
}else{
lisp.callFunctionWithCallStack(G_43,L_STRING__171,L_DESTINATION__148);
TMP_320=lisp.callFunctionWithCallStack(G_317,L_DESTINATION__148);
TMP_319=TMP_320;
}
}
TMP_315=TMP_319;
}
}
}
}
return TMP_315;
});
CL_COMMON_LISP_FORMAT=lisp.values1(F_FORMAT_284);
let F_PERCENTFORMAT_321;
F_PERCENTFORMAT_321=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_322, arguments.length);
}
let TMP_327;
let TMP_326;
let TMP_324;
let TMP_323;
let L_ARGS__176;
let L_STRING__175;
L_STRING__175=arguments[0];
L_ARGS__176=lisp.jsArrayToList(arguments, 1);
TMP_323=lisp.CL_symbolFunction(G_285);
TMP_324=lisp.callFunctionWithCallStack(G_325,L_STRING__175);
TMP_326=lisp.callFunctionWithCallStack(G_245,TMP_323,lisp.S_nil,TMP_324,L_ARGS__176);
TMP_327=lisp.callFunctionWithCallStack(G_328,TMP_326);
return TMP_327;
});
CL_COMMON_LISP_PERCENTFORMAT=lisp.values1(F_PERCENTFORMAT_321);
// initialize symbols
G_2 = lisp.intern('*PRINT-ESCAPE*', 'COMMON-LISP');
G_4 = lisp.intern('T', 'COMMON-LISP');
G_5 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_6 = lisp.intern('*PRINT-CIRCLE*', 'COMMON-LISP');
G_8 = lisp.intern('*PRINT-CIRCLE-TABLE*', 'COMMON-LISP');
G_10 = lisp.intern('*PRINT-CIRCLE-SEEN*', 'COMMON-LISP');
G_13 = lisp.intern('MAKE-CIRCLE-TABLE', 'COMMON-LISP');
G_16 = lisp.intern('ASSOC', 'COMMON-LISP');
G_19 = lisp.intern('+', 'COMMON-LISP');
G_29 = lisp.intern('CAR', 'COMMON-LISP');
G_31 = lisp.intern('CDR', 'COMMON-LISP');
G_33 = lisp.intern('PRINT-UNREADABLE-OBJECT', 'COMMON-LISP');
G_35 = lisp.intern('PRINT-SYMBOL', 'COMMON-LISP');
G_38 = lisp.intern('SYMBOL-PACKAGE', 'COMMON-LISP');
G_40 = lisp.intern('NULL', 'COMMON-LISP');
G_42 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_43 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_45 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_48 = lisp.intern('KEYWORDP', 'COMMON-LISP');
G_53 = lisp.intern('*PACKAGE*', 'COMMON-LISP');
G_58 = lisp.intern('FIND-SYMBOL', 'COMMON-LISP');
G_66 = lisp.intern('PACKAGE-NAME', 'COMMON-LISP');
G_68 = lisp.intern('EXTERNAL', 'KEYWORD');
G_74 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_83 = lisp.intern('PRINT-STRING', 'COMMON-LISP');
G_85 = lisp.intern('WRITE-CHAR', 'COMMON-LISP');
G_89 = lisp.intern('PRINT-NUMBER', 'COMMON-LISP');
G_91 = lisp.intern('NUMBER-TO-RAW-STRING', 'SYSTEM');
G_95 = lisp.intern('PRINT-CHARACTER', 'COMMON-LISP');
G_100 = lisp.intern('PRINT-LABEL', 'COMMON-LISP');
G_106 = lisp.intern('PRINT-CONS-1', 'COMMON-LISP');
G_111 = lisp.intern('STREAM', 'KEYWORD');
G_112 = lisp.intern('WRITE-1', 'COMMON-LISP');
G_118 = lisp.intern('MEMBER', 'COMMON-LISP');
G_125 = lisp.intern('NOT', 'COMMON-LISP');
G_131 = lisp.intern('PRINT-CONS', 'COMMON-LISP');
G_145 = lisp.intern('FORCE-OUTPUT', 'COMMON-LISP');
G_148 = lisp.intern('PRINT-VECTOR', 'COMMON-LISP');
G_150 = lisp.intern('LENGTH', 'COMMON-LISP');
G_152 = lisp.intern('=', 'COMMON-LISP');
G_154 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_156 = lisp.intern('1-', 'COMMON-LISP');
G_158 = lisp.intern('<', 'COMMON-LISP');
G_160 = lisp.intern('1+', 'COMMON-LISP');
G_163 = lisp.intern('PRINT-FUNCTION', 'COMMON-LISP');
G_165 = lisp.intern('FUNCTION-NAME', 'SYSTEM');
G_167 = lisp.intern('PRINT-PACKAGE', 'COMMON-LISP');
G_170 = lisp.intern('PRINT-STRUCTURE', 'COMMON-LISP');
G_172 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_175 = lisp.intern('ARRAY', 'KEYWORD');
G_177 = lisp.intern('BASE', 'KEYWORD');
G_179 = lisp.intern('CASE', 'KEYWORD');
G_181 = lisp.intern('CIRCLE', 'KEYWORD');
G_183 = lisp.intern('ESCAPE', 'KEYWORD');
G_185 = lisp.intern('GENSYM', 'KEYWORD');
G_187 = lisp.intern('LENGTH', 'KEYWORD');
G_189 = lisp.intern('LEVEL', 'KEYWORD');
G_191 = lisp.intern('LINES', 'KEYWORD');
G_193 = lisp.intern('MISER-WIDTH', 'KEYWORD');
G_195 = lisp.intern('PPRINT-DISPATCH', 'KEYWORD');
G_197 = lisp.intern('PRETTY', 'KEYWORD');
G_199 = lisp.intern('RADIX', 'KEYWORD');
G_201 = lisp.intern('READABLY', 'KEYWORD');
G_203 = lisp.intern('RIGHT-MARGIN', 'KEYWORD');
G_206 = lisp.intern('*STANDARD-OUTPUT*', 'COMMON-LISP');
G_212 = lisp.intern('STRINGP', 'COMMON-LISP');
G_225 = lisp.intern('VECTORP', 'COMMON-LISP');
G_238 = lisp.intern('UNKNOWN-OBJECT-TO-STRING', 'SYSTEM');
G_240 = lisp.intern('WRITE', 'COMMON-LISP');
G_245 = lisp.intern('APPLY', 'COMMON-LISP');
G_247 = lisp.intern('WRITE-TO-STRING', 'COMMON-LISP');
G_265 = lisp.intern('MAKE-STRING-OUTPUT-STREAM', 'COMMON-LISP');
G_268 = lisp.intern('GET-OUTPUT-STREAM-STRING', 'COMMON-LISP');
G_270 = lisp.intern('PRINC', 'COMMON-LISP');
G_272 = lisp.intern('PRINC-TO-STRING', 'COMMON-LISP');
G_276 = lisp.intern('PRIN1', 'COMMON-LISP');
G_278 = lisp.intern('PRIN1-TO-STRING', 'COMMON-LISP');
G_282 = lisp.intern('PRINT', 'COMMON-LISP');
G_283 = lisp.intern('TERPRI', 'COMMON-LISP');
G_285 = lisp.intern('FORMAT', 'COMMON-LISP');
G_287 = lisp.intern('ERROR', 'COMMON-LISP');
G_293 = lisp.intern('>=', 'COMMON-LISP');
G_296 = lisp.intern('CHAR=', 'COMMON-LISP');
G_311 = lisp.intern('FRESH-LINE', 'COMMON-LISP');
G_317 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
G_322 = lisp.intern('%FORMAT', 'COMMON-LISP');
G_325 = lisp.intern('JS->CL', 'FFI');
G_328 = lisp.intern('CL->JS', 'FFI');
G_330 = lisp.intern('MACRO', 'COMPILER');
G_333 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_335 = lisp.intern('<=', 'COMMON-LISP');
G_337 = lisp.intern('OBJECT', 'COMMON-LISP');
G_338 = lisp.intern('STREAM', 'COMMON-LISP');
G_339 = lisp.intern('&KEY', 'COMMON-LISP');
G_340 = lisp.intern('TYPE', 'COMMON-LISP');
G_341 = lisp.intern('IDENTITY', 'COMMON-LISP');
G_342 = lisp.intern('&BODY', 'COMMON-LISP');
G_343 = lisp.intern('BODY', 'COMMON-LISP');
G_346 = lisp.intern('FIRST', 'COMMON-LISP');
G_353 = lisp.intern('REST', 'COMMON-LISP');
G_360 = lisp.intern('NIL', 'COMMON-LISP');
G_362 = lisp.intern('IDENTITY', 'KEYWORD');
G_366 = lisp.intern('TYPE', 'KEYWORD');
G_372 = lisp.intern('CDDR', 'COMMON-LISP');
G_374 = lisp.intern('GETF', 'COMMON-LISP');
G_378 = lisp.intern('GENSYM', 'COMMON-LISP');
G_379 = lisp.intern('LET', 'COMMON-LISP');
G_381 = lisp.intern('LIST', 'COMMON-LISP');
G_387 = lisp.intern('APPEND', 'COMMON-LISP');
G_389 = lisp.intern('LIST*', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');TMP_3=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_3) !== lisp.S_nil){
}else{
lisp.CL_set(G_2,G_4);
}
lisp.CL_put(G_2,G_5,G_4);
TMP_7=lisp.CL_boundp(G_6);
if(lisp.values1(TMP_7) !== lisp.S_nil){
}else{
lisp.CL_set(G_6,G_4);
}
lisp.CL_put(G_6,G_5,G_4);
TMP_9=lisp.CL_boundp(G_8);
if(lisp.values1(TMP_9) !== lisp.S_nil){
}else{
lisp.CL_set(G_8,lisp.S_nil);
}
lisp.CL_put(G_8,G_5,G_4);
TMP_11=lisp.CL_boundp(G_10);
if(lisp.values1(TMP_11) !== lisp.S_nil){
}else{
lisp.CL_set(G_10,lisp.S_nil);
}
lisp.CL_put(G_10,G_5,G_4);
CL_COMMON_LISP_MAKE_CIRCLE_TABLE.lisp_name = 'MAKE-CIRCLE-TABLE'
lisp.setSymbolFunction(G_13, CL_COMMON_LISP_MAKE_CIRCLE_TABLE);
CL_COMMON_LISP_PRINT_SYMBOL.lisp_name = 'PRINT-SYMBOL'
lisp.setSymbolFunction(G_35, CL_COMMON_LISP_PRINT_SYMBOL);
CL_COMMON_LISP_PRINT_STRING.lisp_name = 'PRINT-STRING'
lisp.setSymbolFunction(G_83, CL_COMMON_LISP_PRINT_STRING);
CL_COMMON_LISP_PRINT_NUMBER.lisp_name = 'PRINT-NUMBER'
lisp.setSymbolFunction(G_89, CL_COMMON_LISP_PRINT_NUMBER);
CL_COMMON_LISP_PRINT_CHARACTER.lisp_name = 'PRINT-CHARACTER'
lisp.setSymbolFunction(G_95, CL_COMMON_LISP_PRINT_CHARACTER);
CL_COMMON_LISP_PRINT_LABEL.lisp_name = 'PRINT-LABEL'
lisp.setSymbolFunction(G_100, CL_COMMON_LISP_PRINT_LABEL);
CL_COMMON_LISP_PRINT_CONS_1.lisp_name = 'PRINT-CONS-1'
lisp.setSymbolFunction(G_106, CL_COMMON_LISP_PRINT_CONS_1);
CL_COMMON_LISP_PRINT_CONS.lisp_name = 'PRINT-CONS'
lisp.setSymbolFunction(G_131, CL_COMMON_LISP_PRINT_CONS);
CL_COMMON_LISP_PRINT_VECTOR.lisp_name = 'PRINT-VECTOR'
lisp.setSymbolFunction(G_148, CL_COMMON_LISP_PRINT_VECTOR);
CL_COMMON_LISP_PRINT_FUNCTION.lisp_name = 'PRINT-FUNCTION'
lisp.setSymbolFunction(G_163, CL_COMMON_LISP_PRINT_FUNCTION);
CL_COMMON_LISP_PRINT_PACKAGE.lisp_name = 'PRINT-PACKAGE'
lisp.setSymbolFunction(G_167, CL_COMMON_LISP_PRINT_PACKAGE);
CL_COMMON_LISP_PRINT_STRUCTURE.lisp_name = 'PRINT-STRUCTURE'
lisp.setSymbolFunction(G_170, CL_COMMON_LISP_PRINT_STRUCTURE);
CL_COMMON_LISP_WRITE_1.lisp_name = 'WRITE-1'
lisp.setSymbolFunction(G_112, CL_COMMON_LISP_WRITE_1);
CL_COMMON_LISP_WRITE.lisp_name = 'WRITE'
lisp.setSymbolFunction(G_240, CL_COMMON_LISP_WRITE);
CL_COMMON_LISP_WRITE_TO_STRING.lisp_name = 'WRITE-TO-STRING'
lisp.setSymbolFunction(G_247, CL_COMMON_LISP_WRITE_TO_STRING);
CL_COMMON_LISP_PRINC.lisp_name = 'PRINC'
lisp.setSymbolFunction(G_270, CL_COMMON_LISP_PRINC);
CL_COMMON_LISP_PRINC_TO_STRING.lisp_name = 'PRINC-TO-STRING'
lisp.setSymbolFunction(G_272, CL_COMMON_LISP_PRINC_TO_STRING);
CL_COMMON_LISP_PRIN1.lisp_name = 'PRIN1'
lisp.setSymbolFunction(G_276, CL_COMMON_LISP_PRIN1);
CL_COMMON_LISP_PRIN1_TO_STRING.lisp_name = 'PRIN1-TO-STRING'
lisp.setSymbolFunction(G_278, CL_COMMON_LISP_PRIN1_TO_STRING);
CL_COMMON_LISP_PRINT.lisp_name = 'PRINT'
lisp.setSymbolFunction(G_282, CL_COMMON_LISP_PRINT);
CL_COMMON_LISP_FORMAT.lisp_name = 'FORMAT'
lisp.setSymbolFunction(G_285, CL_COMMON_LISP_FORMAT);
CL_COMMON_LISP_PERCENTFORMAT.lisp_name = '%FORMAT'
lisp.setSymbolFunction(G_322, CL_COMMON_LISP_PERCENTFORMAT);
TMP_329=lisp.CL_symbolFunction(G_322);
lisp.setLispFormatFunction(TMP_329);
TMP_331=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_388;
let TMP_386;
let TMP_385;
let TMP_384;
let TMP_383;
let TMP_382;
let TMP_380;
let L_G_STREAM__197;
let TMP_377;
let L_BODY__196;
let L_G77__195;
let TMP_376;
let L_IDENTITY__194;
let TMP_375;
let L_TYPE__193;
let TMP_373;
let L_G75__192;
let L_G86__191;
let TMP_371;
let TMP_370;
let TMP_369;
let L_G85__190;
let TMP_368;
let TMP_367;
let TMP_365;
let L_G84__189;
let TMP_364;
let TMP_363;
let TMP_359;
let L_G76__188;
let TMP_357;
let L_G74__186;
let TMP_355;
let L_STREAM__185;
let TMP_354;
let L_G73__184;
let TMP_352;
let L_OBJECT__183;
let TMP_351;
let L_G72__182;
let TMP_350;
let TMP_349;
let TMP_348;
let TMP_347;
let L_G71__181;
let TMP_345;
let L_G70__180;
let TMP_344;
let TMP_336;
let TMP_334;
let TMP_332;
let L_G69__179;
let L_G6__178;
L_G6__178=lisp.jsArrayToList(arguments, 0);
{
L_G69__179=lisp.values1(L_G6__178);
{
TMP_332=lisp.callFunctionWithCallStack(G_333,L_G69__179);
TMP_334=lisp.callFunctionWithCallStack(G_335,1,TMP_332);
if(lisp.values1(TMP_334) !== lisp.S_nil){
TMP_336=lisp.values1(lisp.S_nil);
}else{
TMP_344=lisp.callFunctionWithCallStack(G_287,G_42.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_337, lisp.makeCons(G_338, lisp.makeCons(G_339, lisp.makeCons(G_340, lisp.makeCons(G_341, lisp.S_nil))))), lisp.makeCons(G_342, lisp.makeCons(G_343, lisp.S_nil))),L_G69__179);
TMP_336=lisp.values1(lisp.values1(TMP_344));
}
L_G70__180=lisp.values1(TMP_336);
TMP_345=lisp.callFunctionWithCallStack(G_346,L_G69__179);
L_G71__181=lisp.values1(TMP_345);
TMP_347=lisp.callFunctionWithCallStack(G_333,L_G71__181);
TMP_348=lisp.callFunctionWithCallStack(G_335,2,TMP_347);
if(lisp.values1(TMP_348) !== lisp.S_nil){
TMP_349=lisp.values1(lisp.S_nil);
}else{
TMP_350=lisp.callFunctionWithCallStack(G_287,G_42.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_337, lisp.makeCons(G_338, lisp.makeCons(G_339, lisp.makeCons(G_340, lisp.makeCons(G_341, lisp.S_nil))))),L_G71__181);
TMP_349=lisp.values1(lisp.values1(TMP_350));
}
L_G72__182=lisp.values1(TMP_349);
TMP_351=lisp.callFunctionWithCallStack(G_346,L_G71__181);
L_OBJECT__183=lisp.values1(TMP_351);
TMP_352=lisp.callFunctionWithCallStack(G_353,L_G71__181);
L_G73__184=lisp.values1(TMP_352);
TMP_354=lisp.callFunctionWithCallStack(G_346,L_G73__184);
L_STREAM__185=lisp.values1(TMP_354);
TMP_355=lisp.callFunctionWithCallStack(G_353,L_G73__184);
L_G74__186=lisp.values1(TMP_355);
try {
{
L_G76__188=lisp.values1(L_G74__186);
let HOST_G79_STATE = 'G81';
HOST_G79: for(;;){
try{
switch(HOST_G79_STATE){
case 'G81':
case 'G80':
TMP_359=lisp.callFunctionWithCallStack(G_40,L_G76__188);
if(lisp.values1(TMP_359) !== lisp.S_nil){
throw new lisp.BlockValue(G_360,lisp.values1(lisp.S_nil));}else{
let HOST_G82_STATE = 'G83';
HOST_G82: for(;;){
try{
switch(HOST_G82_STATE){
case 'G83':
{
TMP_363=lisp.callFunctionWithCallStack(G_346,L_G76__188);
TMP_364=lisp.CL_eq(G_362,TMP_363);
L_G84__189=lisp.values1(TMP_364);
if(lisp.values1(L_G84__189) !== lisp.S_nil){
TMP_365=lisp.values1(L_G84__189);
}else{
{
TMP_367=lisp.callFunctionWithCallStack(G_346,L_G76__188);
TMP_368=lisp.CL_eq(G_366,TMP_367);
L_G85__190=lisp.values1(TMP_368);
if(lisp.values1(L_G85__190) !== lisp.S_nil){
TMP_369=lisp.values1(L_G85__190);
}else{
TMP_369=lisp.values1(lisp.S_nil);
}
}
TMP_365=lisp.values1(lisp.values1(TMP_369));
}
}
if(lisp.values1(lisp.values1(TMP_365)) !== lisp.S_nil){
}else{
TMP_370=lisp.callFunctionWithCallStack(G_346,L_G76__188);
lisp.callFunctionWithCallStack(G_287,G_42.func(lisp.codeArrayToString([85, 110, 107, 110, 111, 119, 110, 32, 38, 107, 101, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 58, 32, 126, 83])),TMP_370);
}
}
break;
}catch(ERR_361){
if(ERR_361 instanceof lisp.TagValue && ERR_361.id==='HOST_G82'){HOST_G82_STATE=ERR_361.index;}
else{throw ERR_361;}}
}
{
TMP_371=lisp.callFunctionWithCallStack(G_372,L_G76__188);
L_G86__191=lisp.values1(TMP_371);
L_G76__188=lisp.values1(L_G86__191);
}
throw new lisp.TagValue('HOST_G79', 'G80');
}
}
break;
}catch(ERR_358){
if(ERR_358 instanceof lisp.TagValue && ERR_358.id==='HOST_G79'){HOST_G79_STATE=ERR_358.index;}
else{throw ERR_358;}}
}
}
TMP_357=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)))
}catch(E__356){if(E__356 instanceof lisp.BlockValue && E__356.name === G_360){TMP_357=E__356.value;}
else{throw E__356;}
}
L_G75__192=lisp.values1(TMP_357);
TMP_373=lisp.callFunctionWithCallStack(G_374,L_G74__186,G_366);
L_TYPE__193=lisp.values1(TMP_373);
TMP_375=lisp.callFunctionWithCallStack(G_374,L_G74__186,G_362);
L_IDENTITY__194=lisp.values1(TMP_375);
TMP_376=lisp.callFunctionWithCallStack(G_353,L_G69__179);
L_G77__195=lisp.values1(TMP_376);
L_BODY__196=lisp.values1(L_G77__195);
{
TMP_377=lisp.callFunctionWithCallStack(G_378);
L_G_STREAM__197=lisp.values1(TMP_377);
TMP_380=lisp.callFunctionWithCallStack(G_381,L_G_STREAM__197,L_STREAM__185);
TMP_382=lisp.callFunctionWithCallStack(G_381,TMP_380);
TMP_383=lisp.callFunctionWithCallStack(G_381,G_43,G_42.func(lisp.codeArrayToString([35, 60])),L_G_STREAM__197);
TMP_384=lisp.callFunctionWithCallStack(G_381,G_43,G_42.func(lisp.codeArrayToString([62])),L_G_STREAM__197);
TMP_385=lisp.CL_cons(TMP_384,lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_386=lisp.callFunctionWithCallStack(G_387,L_BODY__196,TMP_385);
TMP_388=lisp.callFunctionWithCallStack(G_389,G_379,TMP_382,TMP_383,TMP_386);
}
}
}
return TMP_388;
});
lisp.CL_put(G_33,G_330,TMP_331);
}catch(TMP_1){G_317.func();
console.log(TMP_1.message);
}


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let G_8;
let G_10;
let G_11;
let G_12;
let G_15;
let G_17;
let G_18;
let G_19;
let G_20;
let G_22;
let G_24;
let G_26;
let G_28;
let G_29;
let G_31;
let G_34;
let G_35;
let G_40;
let G_47;
let G_49;
let G_50;
let G_51;
let G_54;
let G_56;
let G_58;
let G_59;
let G_61;
let G_63;
let G_64;
let G_66;
let G_71;
let G_73;
let G_74;
let G_76;
let G_80;
let G_85;
let G_88;
let G_90;
let G_93;
let G_96;
let G_99;
let G_114;
let G_115;
let G_119;
let G_121;
let G_124;
let G_125;
let G_128;
let G_129;
let G_131;
let G_132;
let G_135;
let G_136;
let G_142;
let G_145;
let G_160;
let G_163;
let G_178;
let G_181;
let G_200;
let G_204;
let G_205;
let G_206;
let G_207;
let G_208;
let G_209;
let G_210;
let G_211;
let G_212;
let G_213;
let G_214;
let G_215;
let G_216;
let G_217;
let G_218;
let G_219;
let G_220;
let G_221;
let G_222;
let G_223;
let G_224;
let G_225;
let G_226;
let G_227;
let G_229;
let G_234;
let G_247;
let G_250;
let G_253;
let G_255;
let G_261;
let G_265;
let G_267;
let G_273;
let G_275;
let G_277;
let G_283;
let G_288;
let G_292;
let G_294;
let G_296;
let G_299;
let G_302;
let G_306;
let G_309;
let G_311;
let G_313;
let G_321;
let G_333;
let G_357;
let G_361;
let G_386;
let G_401;
let G_422;
let G_482;
let G_484;
let G_497;
let G_500;
let G_513;
let G_515;
let G_522;
let G_525;
let G_531;
let G_533;
let G_548;
let G_556;
let G_558;
let G_560;
let G_563;
let G_565;
let G_567;
let G_571;
let G_583;
let G_584;
let G_594;
let G_595;
let G_599;
let G_609;
let G_614;
let G_625;
let G_630;
let G_635;
let G_640;
let G_643;
let G_652;
let G_667;
let G_678;
let G_682;
let G_689;
let G_694;
let G_697;
let G_730;
let G_748;
let G_752;
let G_755;
let G_757;
let G_764;
let G_766;
let G_770;
let G_774;
let G_782;
let G_785;
let G_786;
let G_791;
let G_793;
let G_794;
let G_795;
let G_801;
let G_805;
let G_806;
let G_814;
let G_823;
let G_824;
let G_843;
let G_846;
let G_848;
let G_878;
let G_880;
let G_881;
let G_882;
let G_884;
let G_912;
let G_923;
let G_932;
let G_953;
let G_962;
let G_966;
let G_968;
let G_978;
let G_980;
let G_993;
let G_1004;
let CL_COMMON_LISP_READ_DELIMITED_LIST;
let CL_COMMON_LISP_READ_LINE;
let CL_COMMON_LISP_UNREAD_CHAR;
let CL_COMMON_LISP_READ_CHAR;
let CL_COMMON_LISP_READ_FROM_STRING;
let CL_COMMON_LISP_CL_TO_JS_READER;
let CL_COMMON_LISP_CL_STRING_READER;
let CL_COMMON_LISP_SHARP_DOT_READER;
let CL_COMMON_LISP_BLOCK_COMMENT_READER;
let CL_COMMON_LISP_BIT_NUMBER_READER;
let CL_COMMON_LISP_BIT_VECTOR_READER;
let CL_COMMON_LISP_SHARP_SHARP_READER;
let CL_COMMON_LISP_SHARP_EQUAL_READER;
let CL_COMMON_LISP_SUBST_SHARP_EQUAL;
let CL_COMMON_LISP_SHARP_PLUS_MINUS_READER;
let CL_COMMON_LISP_FEATUREP;
let CL_COMMON_LISP_UNINTERN_SYMBOL_READER;
let CL_COMMON_LISP_ARRAY_READER;
let CL_COMMON_LISP_FUNCTION_READER;
let CL_COMMON_LISP_CHARACTER_READER;
let CL_COMMON_LISP_READ_DISPATCH_MACRO_CHARACTER;
let CL_COMMON_LISP_STRING_READER;
let CL_COMMON_LISP_LINE_COMMENT_READER;
let CL_COMMON_LISP_UNQUOTE_READER;
let CL_COMMON_LISP_BACKQUOTE_READER;
let CL_COMMON_LISP_QUOTE_READER;
let CL_COMMON_LISP_READ_RIGHT_PAREN;
let CL_COMMON_LISP_CONS_READER;
let CL_COMMON_LISP_READ;
let CL_COMMON_LISP_READ_TOKEN;
let CL_COMMON_LISP_READ_TOKEN_1;
let CL_COMMON_LISP_MAYBE_INVERT;
let CL_COMMON_LISP_DELIMITER_P;
let CL_COMMON_LISP_READ_MULTIPLE_ESCAPE;
let CL_COMMON_LISP_READ_MULTIPLE_ESCAPE_1;
let CL_COMMON_LISP_PARSE_TOKEN;
let CL_COMMON_LISP_PARSE_SYMBOL;
let CL_COMMON_LISP_CHECK_DOT;
let CL_COMMON_LISP_PARSE_NUMBER;
let CL_COMMON_LISP_NUMBER_STRING_P;
let CL_COMMON_LISP_NON_TERMINATE_MACRO_CHARACTER_P;
let CL_COMMON_LISP_GET_DISPATCH_MACRO_CHARACTER;
let CL_COMMON_LISP_SET_DISPATCH_MACRO_CHARACTER;
let CL_COMMON_LISP_GET_DISPATCH_TABLE;
let CL_COMMON_LISP_MAKE_DISPATCH_MACRO_CHARACTER;
let CL_COMMON_LISP_SET_MACRO_CHARACTER;
let CL_COMMON_LISP_GET_MACRO_CHARACTER;
let CL_COMMON_LISP_COPY_READTABLE;
let CL_COMMON_LISP_SET_READTABLE;
let CL_COMMON_LISP_INIT_READTABLE;
let CL_COMMON_LISP_READTABLE_DISPATCH_MACRO_TABLE;
let CL_COMMON_LISP_READTABLE_TABLE;
let CL_COMMON_LISP_READTABLE_CASE;
let CL_COMMON_LISP_MAKE_READTABLE;
let CL_COMMON_LISP_READTABLEP;
let CL_COMMON_LISP_PERCENTCOPY_READTABLE;
let CL_COMMON_LISP_SHARP_EQUAL_VALUE;
let CL_COMMON_LISP_SHARP_EQUAL_LABEL;
let CL_COMMON_LISP_MAKE_SHARP_EQUAL;
let CL_COMMON_LISP_SHARP_EQUAL_P;
let CL_COMMON_LISP_COPY_SHARP_EQUAL;
let CL_COMMON_LISP_PEEK_CHAR;
let CL_COMMON_LISP_WHITESPACEP;
let CL_COMMON_LISP_READ_ERROR;
let TMP_202;
let TMP_201;
let L_G58__116;
let L_G57__115;
let TMP_195;
let TMP_194;
let TMP_185;
let TMP_182;
let TMP_176;
let TMP_167;
let TMP_164;
let TMP_158;
let TMP_149;
let TMP_146;
let L_G30__60;
let L_G29__59;
let TMP_113;
let TMP_112;
let TMP_103;
let TMP_100;
let TMP_94;
let TMP_81;
let TMP_77;
let TMP_52;
let TMP_14;
let TMP_13;
let TMP_9;
let TMP_7;
let TMP_3;
// toplevel defun
let F_READ_ERROR_16;
F_READ_ERROR_16=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_17, arguments.length);
}
let TMP_21;
let L_FORMAT_ARGUMENTS__2;
let L_FORMAT_CONTROL__1;
L_FORMAT_CONTROL__1=arguments[0];
L_FORMAT_ARGUMENTS__2=lisp.jsArrayToList(arguments, 1);
TMP_21=lisp.callFunctionWithCallStack(G_22,G_18,G_19,L_FORMAT_CONTROL__1,G_20,L_FORMAT_ARGUMENTS__2);
return TMP_21;
});
CL_COMMON_LISP_READ_ERROR=lisp.values1(F_READ_ERROR_16);
let F_WHITESPACEP_23;
F_WHITESPACEP_23=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_24, arguments.length);
}
let TMP_25;
let L_C__4;
L_C__4=arguments[0];
TMP_25=lisp.callFunctionWithCallStack(G_26,L_C__4,lisp.symbolValue(G_15));
return TMP_25;
});
CL_COMMON_LISP_WHITESPACEP=lisp.values1(F_WHITESPACEP_23);
let F_PEEK_CHAR_27;
F_PEEK_CHAR_27=(function(){
if(arguments.length < 0 || 5 < arguments.length) {
lisp.argumentsError(G_28, arguments.length);
}
let L_G9__18;
let TMP_48;
let TMP_46;
let TMP_45;
let TMP_44;
let TMP_43;
let L_G8__17;
let TMP_42;
let L_C__16;
let TMP_41;
let BLOCK_RESULT_NIL__15;
let TMP_39;
let TMP_38;
let TMP_37;
let TMP_36;
let L_C__13;
let TMP_33;
let TMP_32;
let L_G0__12;
let TMP_30;
let L_RECURSIVE_P__10;
let L_EOF_VALUE__9;
let L_EOF_ERROR_P__8;
let L_STREAM__7;
let L_PEEK_TYPE__6;
L_PEEK_TYPE__6=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_STREAM__7=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_29)));
L_EOF_ERROR_P__8=arguments.length > 2 ? arguments[2] : (lisp.values1(G_5));
L_EOF_VALUE__9=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_RECURSIVE_P__10=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
{
TMP_30=lisp.callFunctionWithCallStack(G_31,L_PEEK_TYPE__6);
L_G0__12=lisp.values1(TMP_30);
if(lisp.values1(L_G0__12) !== lisp.S_nil){
{
TMP_33=lisp.callFunctionWithCallStack(G_34,L_STREAM__7);
L_C__13=lisp.values1(TMP_33);
TMP_36=lisp.CL_eq(L_C__13,G_35);
if(lisp.values1(TMP_36) !== lisp.S_nil){
if(lisp.values1(L_EOF_ERROR_P__8) !== lisp.S_nil){
TMP_39=lisp.callFunctionWithCallStack(G_40);
TMP_38=TMP_39;
}else{
TMP_38=lisp.values1(L_EOF_VALUE__9);
}
TMP_37=TMP_38;
}else{
TMP_37=lisp.values1(L_C__13);
}
}
TMP_32=TMP_37;
}else{
BLOCK_NIL__15: for(;;){for(;;){
{
TMP_41=lisp.callFunctionWithCallStack(G_34,L_STREAM__7);
L_C__16=lisp.values1(TMP_41);
{
TMP_42=lisp.CL_eq(L_C__16,G_35);
L_G8__17=lisp.values1(TMP_42);
if(lisp.values1(L_G8__17) !== lisp.S_nil){
if(lisp.values1(L_EOF_ERROR_P__8) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_40);
}else{
BLOCK_RESULT_NIL__15=lisp.values1(L_EOF_VALUE__9);
break BLOCK_NIL__15;
}
}else{
{
TMP_43=lisp.CL_eq(L_PEEK_TYPE__6,G_5);
if(lisp.values1(TMP_43) !== lisp.S_nil){
TMP_45=G_24.func(L_C__16);
TMP_46=lisp.callFunctionWithCallStack(G_47,TMP_45);
TMP_44=lisp.values1(TMP_46);
}else{
TMP_48=lisp.callFunctionWithCallStack(G_49,L_C__16,L_PEEK_TYPE__6);
TMP_44=lisp.values1(TMP_48);
}
L_G9__18=lisp.values1(TMP_44);
if(lisp.values1(L_G9__18) !== lisp.S_nil){
BLOCK_RESULT_NIL__15=lisp.values1(L_C__16);
break BLOCK_NIL__15;
}else{
lisp.callFunctionWithCallStack(G_50,L_STREAM__7);
}
}
}
}
}
continue;
break;
}
BLOCK_RESULT_NIL__15=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_32=BLOCK_RESULT_NIL__15;
}
}
return TMP_32;
});
CL_COMMON_LISP_PEEK_CHAR=lisp.values1(F_PEEK_CHAR_27);
let F_COPY_SHARP_EQUAL_53;
F_COPY_SHARP_EQUAL_53=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_54, arguments.length);
}
let TMP_55;
let L_X__20;
L_X__20=arguments[0];
TMP_55=lisp.callFunctionWithCallStack(G_56,L_X__20);
return TMP_55;
});
CL_COMMON_LISP_COPY_SHARP_EQUAL=lisp.values1(F_COPY_SHARP_EQUAL_53);
let F_SHARP_EQUAL_P_57;
F_SHARP_EQUAL_P_57=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_58, arguments.length);
}
let TMP_60;
let L_X__22;
L_X__22=arguments[0];
TMP_60=lisp.callFunctionWithCallStack(G_61,L_X__22,G_59);
return TMP_60;
});
CL_COMMON_LISP_SHARP_EQUAL_P=lisp.values1(F_SHARP_EQUAL_P_57);
let F_MAKE_SHARP_EQUAL_62;
F_MAKE_SHARP_EQUAL_62=(function(){
if(arguments.length < 0 || 4 < arguments.length) {
lisp.argumentsError(G_63, arguments.length);
}
let TMP_69;
let L_VALUE__25;
let L_LABEL__24;
let supplied_LABEL__24;
for (let TMP_65 = 0; TMP_65 < arguments.length; TMP_65 += 2) {
if(arguments[TMP_65] === G_64){
supplied_LABEL__24=arguments[TMP_65+1];
break;
}
}
L_LABEL__24=supplied_LABEL__24 !== undefined ? supplied_LABEL__24 : (lisp.values1(lisp.S_nil));
let supplied_VALUE__25;
for (let TMP_67 = 0; TMP_67 < arguments.length; TMP_67 += 2) {
if(arguments[TMP_67] === G_66){
supplied_VALUE__25=arguments[TMP_67+1];
break;
}
}
L_VALUE__25=supplied_VALUE__25 !== undefined ? supplied_VALUE__25 : (lisp.values1(lisp.symbolValue(G_51)));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_68 = 0; TMP_68 < arguments.length; TMP_68 += 2) {
if(arguments[TMP_68]!==G_66 && arguments[TMP_68]!==G_64) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_68].name); }
}
TMP_69=lisp.CL_makeStructure(G_59,L_LABEL__24,L_VALUE__25);
return TMP_69;
});
CL_COMMON_LISP_MAKE_SHARP_EQUAL=lisp.values1(F_MAKE_SHARP_EQUAL_62);
let F_SHARP_EQUAL_LABEL_70;
F_SHARP_EQUAL_LABEL_70=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_71, arguments.length);
}
let TMP_75;
let TMP_72;
let L_STRUCTURE__27;
L_STRUCTURE__27=arguments[0];
TMP_72=lisp.CL_structurep(L_STRUCTURE__27);
if(lisp.values1(TMP_72) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__27,G_73);
}
TMP_75=lisp.CL_structureRef(L_STRUCTURE__27,0);
return TMP_75;
});
CL_COMMON_LISP_SHARP_EQUAL_LABEL=lisp.values1(F_SHARP_EQUAL_LABEL_70);
let F_SHARP_EQUAL_VALUE_95;
F_SHARP_EQUAL_VALUE_95=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_96, arguments.length);
}
let TMP_98;
let TMP_97;
let L_STRUCTURE__41;
L_STRUCTURE__41=arguments[0];
TMP_97=lisp.CL_structurep(L_STRUCTURE__41);
if(lisp.values1(TMP_97) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__41,G_73);
}
TMP_98=lisp.CL_structureRef(L_STRUCTURE__41,1);
return TMP_98;
});
CL_COMMON_LISP_SHARP_EQUAL_VALUE=lisp.values1(F_SHARP_EQUAL_VALUE_95);
let F_PERCENTCOPY_READTABLE_120;
F_PERCENTCOPY_READTABLE_120=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_121, arguments.length);
}
let TMP_122;
let L_X__61;
L_X__61=arguments[0];
TMP_122=lisp.callFunctionWithCallStack(G_56,L_X__61);
return TMP_122;
});
CL_COMMON_LISP_PERCENTCOPY_READTABLE=lisp.values1(F_PERCENTCOPY_READTABLE_120);
let F_READTABLEP_123;
F_READTABLEP_123=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_124, arguments.length);
}
let TMP_126;
let L_X__63;
L_X__63=arguments[0];
TMP_126=lisp.callFunctionWithCallStack(G_61,L_X__63,G_125);
return TMP_126;
});
CL_COMMON_LISP_READTABLEP=lisp.values1(F_READTABLEP_123);
let F_MAKE_READTABLE_127;
F_MAKE_READTABLE_127=(function(){
if(arguments.length < 0 || 6 < arguments.length) {
lisp.argumentsError(G_128, arguments.length);
}
let TMP_140;
let L_DISPATCH_MACRO_TABLE__67;
let TMP_138;
let L_TABLE__66;
let TMP_134;
let L_CASE__65;
let supplied_CASE__65;
for (let TMP_130 = 0; TMP_130 < arguments.length; TMP_130 += 2) {
if(arguments[TMP_130] === G_129){
supplied_CASE__65=arguments[TMP_130+1];
break;
}
}
L_CASE__65=supplied_CASE__65 !== undefined ? supplied_CASE__65 : (lisp.values1(G_131));
let supplied_TABLE__66;
for (let TMP_133 = 0; TMP_133 < arguments.length; TMP_133 += 2) {
if(arguments[TMP_133] === G_132){
supplied_TABLE__66=arguments[TMP_133+1];
break;
}
}
TMP_134=lisp.callFunctionWithCallStack(G_135);
L_TABLE__66=supplied_TABLE__66 !== undefined ? supplied_TABLE__66 : (lisp.values1(TMP_134));
let supplied_DISPATCH_MACRO_TABLE__67;
for (let TMP_137 = 0; TMP_137 < arguments.length; TMP_137 += 2) {
if(arguments[TMP_137] === G_136){
supplied_DISPATCH_MACRO_TABLE__67=arguments[TMP_137+1];
break;
}
}
TMP_138=lisp.callFunctionWithCallStack(G_135);
L_DISPATCH_MACRO_TABLE__67=supplied_DISPATCH_MACRO_TABLE__67 !== undefined ? supplied_DISPATCH_MACRO_TABLE__67 : (lisp.values1(TMP_138));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_139 = 0; TMP_139 < arguments.length; TMP_139 += 2) {
if(arguments[TMP_139]!==G_136 && arguments[TMP_139]!==G_132 && arguments[TMP_139]!==G_129) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_139].name); }
}
TMP_140=lisp.CL_makeStructure(G_125,L_CASE__65,L_TABLE__66,L_DISPATCH_MACRO_TABLE__67);
return TMP_140;
});
CL_COMMON_LISP_MAKE_READTABLE=lisp.values1(F_MAKE_READTABLE_127);
let F_READTABLE_CASE_141;
F_READTABLE_CASE_141=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_142, arguments.length);
}
let TMP_144;
let TMP_143;
let L_STRUCTURE__69;
L_STRUCTURE__69=arguments[0];
TMP_143=lisp.CL_structurep(L_STRUCTURE__69);
if(lisp.values1(TMP_143) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__69,G_73);
}
TMP_144=lisp.CL_structureRef(L_STRUCTURE__69,0);
return TMP_144;
});
CL_COMMON_LISP_READTABLE_CASE=lisp.values1(F_READTABLE_CASE_141);
let F_READTABLE_TABLE_159;
F_READTABLE_TABLE_159=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_160, arguments.length);
}
let TMP_162;
let TMP_161;
let L_STRUCTURE__83;
L_STRUCTURE__83=arguments[0];
TMP_161=lisp.CL_structurep(L_STRUCTURE__83);
if(lisp.values1(TMP_161) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__83,G_73);
}
TMP_162=lisp.CL_structureRef(L_STRUCTURE__83,1);
return TMP_162;
});
CL_COMMON_LISP_READTABLE_TABLE=lisp.values1(F_READTABLE_TABLE_159);
let F_READTABLE_DISPATCH_MACRO_TABLE_177;
F_READTABLE_DISPATCH_MACRO_TABLE_177=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_178, arguments.length);
}
let TMP_180;
let TMP_179;
let L_STRUCTURE__97;
L_STRUCTURE__97=arguments[0];
TMP_179=lisp.CL_structurep(L_STRUCTURE__97);
if(lisp.values1(TMP_179) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__97,G_73);
}
TMP_180=lisp.CL_structureRef(L_STRUCTURE__97,2);
return TMP_180;
});
CL_COMMON_LISP_READTABLE_DISPATCH_MACRO_TABLE=lisp.values1(F_READTABLE_DISPATCH_MACRO_TABLE_177);
let F_INIT_READTABLE_203;
F_INIT_READTABLE_203=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_204, arguments.length);
}
let L_READTABLE__117;
L_READTABLE__117=arguments[0];
G_206.func(lisp.makeCharacter(40),G_205,lisp.S_nil,L_READTABLE__117);
G_206.func(lisp.makeCharacter(41),G_207,lisp.S_nil,L_READTABLE__117);
G_206.func(lisp.makeCharacter(39),G_208,lisp.S_nil,L_READTABLE__117);
G_206.func(lisp.makeCharacter(96),G_209,lisp.S_nil,L_READTABLE__117);
G_206.func(lisp.makeCharacter(44),G_210,lisp.S_nil,L_READTABLE__117);
G_206.func(lisp.makeCharacter(59),G_211,lisp.S_nil,L_READTABLE__117);
G_206.func(lisp.makeCharacter(34),G_212,lisp.S_nil,L_READTABLE__117);
G_213.func(lisp.makeCharacter(35),G_5,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(92),G_214,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(39),G_216,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(40),G_217,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(58),G_218,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(43),G_219,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(45),G_219,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(61),G_220,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(35),G_221,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(42),G_222,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(124),G_223,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(66),G_224,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(46),G_225,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(34),G_226,L_READTABLE__117);
G_215.func(lisp.makeCharacter(35),lisp.makeCharacter(106),G_227,L_READTABLE__117);
return lisp.values1(L_READTABLE__117);
});
CL_COMMON_LISP_INIT_READTABLE=lisp.values1(F_INIT_READTABLE_203);
let F_SET_READTABLE_228;
F_SET_READTABLE_228=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_229, arguments.length);
}
let L_G_STORE64__127;
let TMP_232;
let L_G63__126;
let L_G_STORE62__125;
let TMP_231;
let L_G61__124;
let L_G_STORE60__123;
let TMP_230;
let L_G59__122;
let L_FROM_READTABLE__120;
let L_TO_READTABLE__119;
L_TO_READTABLE__119=arguments[0];
L_FROM_READTABLE__120=arguments[1];
{
L_G59__122=lisp.values1(L_TO_READTABLE__119);
TMP_230=G_142.func(L_FROM_READTABLE__120);
L_G_STORE60__123=lisp.values1(TMP_230);
lisp.callFunctionWithCallStack(G_145,L_G_STORE60__123,L_G59__122);
}
{
L_G61__124=lisp.values1(L_TO_READTABLE__119);
TMP_231=G_160.func(L_FROM_READTABLE__120);
L_G_STORE62__125=lisp.values1(TMP_231);
lisp.callFunctionWithCallStack(G_163,L_G_STORE62__125,L_G61__124);
}
{
L_G63__126=lisp.values1(L_TO_READTABLE__119);
TMP_232=G_178.func(L_FROM_READTABLE__120);
L_G_STORE64__127=lisp.values1(TMP_232);
lisp.callFunctionWithCallStack(G_181,L_G_STORE64__127,L_G63__126);
}
return lisp.values1(L_FROM_READTABLE__120);
});
CL_COMMON_LISP_SET_READTABLE=lisp.values1(F_SET_READTABLE_228);
let F_COPY_READTABLE_233;
F_COPY_READTABLE_233=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_234, arguments.length);
}
let TMP_245;
let TMP_244;
let TMP_243;
let TMP_242;
let TMP_241;
let TMP_240;
let L_G67__133;
let TMP_239;
let TMP_238;
let L_G66__132;
let TMP_237;
let TMP_236;
let L_G65__131;
let TMP_235;
let L_TO_READTABLE__129;
let L_FROM_READTABLE__128;
L_FROM_READTABLE__128=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_200)));
L_TO_READTABLE__129=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
{
if(lisp.values1(L_FROM_READTABLE__128) !== lisp.S_nil){
TMP_235=lisp.values1(L_TO_READTABLE__129);
}else{
TMP_235=lisp.values1(lisp.S_nil);
}
L_G65__131=lisp.values1(TMP_235);
if(lisp.values1(L_G65__131) !== lisp.S_nil){
TMP_237=G_229.func(L_TO_READTABLE__129,L_FROM_READTABLE__128);
TMP_236=TMP_237;
}else{
{
L_G66__132=lisp.values1(L_FROM_READTABLE__128);
if(lisp.values1(L_G66__132) !== lisp.S_nil){
TMP_239=G_121.func(L_FROM_READTABLE__128);
TMP_238=TMP_239;
}else{
{
L_G67__133=lisp.values1(L_TO_READTABLE__129);
if(lisp.values1(L_G67__133) !== lisp.S_nil){
TMP_241=G_128.func();
TMP_242=G_229.func(L_TO_READTABLE__129,TMP_241);
TMP_243=G_204.func(TMP_242);
TMP_240=TMP_243;
}else{
TMP_244=G_128.func();
TMP_245=G_204.func(TMP_244);
TMP_240=TMP_245;
}
}
TMP_238=TMP_240;
}
}
TMP_236=TMP_238;
}
}
return TMP_236;
});
CL_COMMON_LISP_COPY_READTABLE=lisp.values1(F_COPY_READTABLE_233);
let F_GET_MACRO_CHARACTER_246;
F_GET_MACRO_CHARACTER_246=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_247, arguments.length);
}
let TMP_257;
let TMP_256;
let TMP_254;
let TMP_252;
let TMP_251;
let L_VALUE__138;
let TMP_249;
let TMP_248;
let L_READTABLE__136;
let L_CHAR__135;
L_CHAR__135=arguments[0];
L_READTABLE__136=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_200)));
{
TMP_248=G_160.func(L_READTABLE__136);
TMP_249=lisp.callFunctionWithCallStack(G_250,L_CHAR__135,TMP_248);
L_VALUE__138=lisp.values1(TMP_249);
if(lisp.values1(L_VALUE__138) !== lisp.S_nil){
TMP_252=lisp.callFunctionWithCallStack(G_253,L_VALUE__138);
TMP_254=lisp.callFunctionWithCallStack(G_255,L_VALUE__138);
TMP_256=lisp.CL_values(TMP_252,TMP_254);
TMP_251=TMP_256;
}else{
TMP_257=lisp.CL_values(lisp.S_nil,lisp.S_nil);
TMP_251=TMP_257;
}
}
return TMP_251;
});
CL_COMMON_LISP_GET_MACRO_CHARACTER=lisp.values1(F_GET_MACRO_CHARACTER_246);
let F_SET_MACRO_CHARACTER_258;
F_SET_MACRO_CHARACTER_258=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_206, arguments.length);
}
let L_G_STORE71__146;
let TMP_260;
let L_G70__145;
let TMP_259;
let L_G69__144;
let L_READTABLE__142;
let L_NON_TERMINATING_P__141;
let L_FUNCTION__140;
let L_CHAR__139;
L_CHAR__139=arguments[0];
L_FUNCTION__140=arguments[1];
L_NON_TERMINATING_P__141=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_READTABLE__142=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.symbolValue(G_200)));
{
L_G69__144=lisp.values1(L_CHAR__139);
TMP_259=G_160.func(L_READTABLE__142);
L_G70__145=lisp.values1(TMP_259);
TMP_260=lisp.CL_cons(L_FUNCTION__140,L_NON_TERMINATING_P__141);
L_G_STORE71__146=lisp.values1(TMP_260);
lisp.callFunctionWithCallStack(G_261,L_G_STORE71__146,L_G69__144,L_G70__145);
}
return lisp.values1(G_5);
});
CL_COMMON_LISP_SET_MACRO_CHARACTER=lisp.values1(F_SET_MACRO_CHARACTER_258);
let F_MAKE_DISPATCH_MACRO_CHARACTER_262;
F_MAKE_DISPATCH_MACRO_CHARACTER_262=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(G_213, arguments.length);
}
let L_G_STORE74__153;
let TMP_264;
let L_G73__152;
let TMP_263;
let L_G72__151;
let L_READTABLE__149;
let L_NON_TERMINATING_P__148;
let L_CHAR__147;
L_CHAR__147=arguments[0];
L_NON_TERMINATING_P__148=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_READTABLE__149=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.symbolValue(G_200)));
{
L_G72__151=lisp.values1(L_CHAR__147);
TMP_263=G_178.func(L_READTABLE__149);
L_G73__152=lisp.values1(TMP_263);
TMP_264=lisp.callFunctionWithCallStack(G_135);
L_G_STORE74__153=lisp.values1(TMP_264);
lisp.callFunctionWithCallStack(G_261,L_G_STORE74__153,L_G72__151,L_G73__152);
}
G_206.func(L_CHAR__147,G_265,L_NON_TERMINATING_P__148,L_READTABLE__149);
return lisp.values1(G_5);
});
CL_COMMON_LISP_MAKE_DISPATCH_MACRO_CHARACTER=lisp.values1(F_MAKE_DISPATCH_MACRO_CHARACTER_262);
let F_GET_DISPATCH_TABLE_266;
F_GET_DISPATCH_TABLE_266=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_267, arguments.length);
}
let L_DISPATCH_TABLE__157;
let TMP_269;
let TMP_268;
let L_DISP_CHAR__155;
let L_READTABLE__154;
L_READTABLE__154=arguments[0];
L_DISP_CHAR__155=arguments[1];
{
TMP_268=G_178.func(L_READTABLE__154);
TMP_269=lisp.callFunctionWithCallStack(G_250,L_DISP_CHAR__155,TMP_268);
L_DISPATCH_TABLE__157=lisp.values1(TMP_269);
if(lisp.values1(L_DISPATCH_TABLE__157) !== lisp.S_nil){
}else{
G_17.func(G_8.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 100, 105, 115, 112, 97, 116, 99, 104, 105, 110, 103, 32, 109, 97, 99, 114, 111, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 46])),L_DISP_CHAR__155);
}
}
return lisp.values1(L_DISPATCH_TABLE__157);
});
CL_COMMON_LISP_GET_DISPATCH_TABLE=lisp.values1(F_GET_DISPATCH_TABLE_266);
let F_SET_DISPATCH_MACRO_CHARACTER_270;
F_SET_DISPATCH_MACRO_CHARACTER_270=(function(){
if(arguments.length < 3 || 4 < arguments.length) {
lisp.argumentsError(G_215, arguments.length);
}
let L_G_STORE77__166;
let L_G76__165;
let L_G75__164;
let TMP_274;
let TMP_272;
let L_DISPATCH_TABLE__163;
let TMP_271;
let L_READTABLE__161;
let L_FUNCTION__160;
let L_SUB_CHAR__159;
let L_DISP_CHAR__158;
L_DISP_CHAR__158=arguments[0];
L_SUB_CHAR__159=arguments[1];
L_FUNCTION__160=arguments[2];
L_READTABLE__161=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.symbolValue(G_200)));
{
TMP_271=G_267.func(L_READTABLE__161,L_DISP_CHAR__158);
L_DISPATCH_TABLE__163=lisp.values1(TMP_271);
TMP_272=lisp.callFunctionWithCallStack(G_273,L_SUB_CHAR__159);
if(lisp.values1(TMP_272) !== lisp.S_nil){
G_17.func(G_8.func(lisp.codeArrayToString([83, 85, 66, 45, 67, 72, 65, 82, 32, 109, 117, 115, 116, 32, 110, 111, 116, 32, 98, 101, 32, 97, 32, 100, 101, 99, 105, 109, 97, 108, 32, 100, 105, 103, 105, 116, 58, 32, 126, 83])),L_SUB_CHAR__159);
}else{
}
{
TMP_274=lisp.callFunctionWithCallStack(G_275,L_SUB_CHAR__159);
L_G75__164=lisp.values1(TMP_274);
L_G76__165=lisp.values1(L_DISPATCH_TABLE__163);
L_G_STORE77__166=lisp.values1(L_FUNCTION__160);
lisp.callFunctionWithCallStack(G_261,L_G_STORE77__166,L_G75__164,L_G76__165);
}
}
return lisp.values1(G_5);
});
CL_COMMON_LISP_SET_DISPATCH_MACRO_CHARACTER=lisp.values1(F_SET_DISPATCH_MACRO_CHARACTER_270);
let F_GET_DISPATCH_MACRO_CHARACTER_276;
F_GET_DISPATCH_MACRO_CHARACTER_276=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_277, arguments.length);
}
let TMP_281;
let TMP_280;
let TMP_279;
let L_DISPATCH_TABLE__171;
let TMP_278;
let L_READTABLE__169;
let L_SUB_CHAR__168;
let L_DISP_CHAR__167;
L_DISP_CHAR__167=arguments[0];
L_SUB_CHAR__168=arguments[1];
L_READTABLE__169=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.symbolValue(G_200)));
{
TMP_278=G_267.func(L_READTABLE__169,L_DISP_CHAR__167);
L_DISPATCH_TABLE__171=lisp.values1(TMP_278);
TMP_279=lisp.callFunctionWithCallStack(G_275,L_SUB_CHAR__168);
TMP_280=lisp.callFunctionWithCallStack(G_250,TMP_279,L_DISPATCH_TABLE__171);
TMP_281=lisp.CL_values(TMP_280);
}
return TMP_281;
});
CL_COMMON_LISP_GET_DISPATCH_MACRO_CHARACTER=lisp.values1(F_GET_DISPATCH_MACRO_CHARACTER_276);
let F_NON_TERMINATE_MACRO_CHARACTER_P_282;
F_NON_TERMINATE_MACRO_CHARACTER_P_282=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_283, arguments.length);
}
let TMP_290;
let TMP_289;
let TMP_287;
let TMP_284;
let L_C__172;
L_C__172=arguments[0];
TMP_284=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_286;
let TMP_285;
let L_G78__176;
let L_NON_TERMINATING_P__175;
let L_FUNCTION__174;
L_FUNCTION__174=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_NON_TERMINATING_P__175=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G78__176=lisp.jsArrayToList(arguments, 2);
if(lisp.values1(L_FUNCTION__174) !== lisp.S_nil){
TMP_286=lisp.callFunctionWithCallStack(G_47,L_NON_TERMINATING_P__175);
TMP_285=TMP_286;
}else{
TMP_285=lisp.values1(lisp.S_nil);
}
return TMP_285;
});
TMP_287=lisp.callFunctionWithCallStack(G_288,TMP_284);
TMP_289=G_247.func(L_C__172);
TMP_290=lisp.CL_multipleValueCall(TMP_287,TMP_289);
return TMP_290;
});
CL_COMMON_LISP_NON_TERMINATE_MACRO_CHARACTER_P=lisp.values1(F_NON_TERMINATE_MACRO_CHARACTER_P_282);
let F_NUMBER_STRING_P_291;
F_NUMBER_STRING_P_291=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_292, arguments.length);
}
let L_G100__196;
let TMP_319;
let L_G98__194;
let TMP_318;
let L_C__193;
let TMP_317;
let TMP_316;
let TMP_315;
let L_I__192;
let BLOCK_RESULT_NIL__191;
let L_G91__190;
let TMP_314;
let TMP_312;
let L_G89__188;
let TMP_310;
let L_G88__187;
let TMP_308;
let L_C__186;
let TMP_307;
let TMP_305;
let TMP_304;
let L_I__185;
let BLOCK_RESULT_NIL__184;
let TMP_303;
let TMP_301;
let TMP_300;
let TMP_298;
let L_FOUND_NUMBER_P__183;
let L_POS__182;
let TMP_297;
let L_G80__180;
let TMP_295;
let L_G79__179;
let TMP_293;
let BLOCK_RESULT_NUMBER_STRING_P__178;
let L_TOKEN__177;
L_TOKEN__177=arguments[0];
BLOCK_NUMBER_STRING_P__178: for(;;){{
{
TMP_293=lisp.callFunctionWithCallStack(G_294,L_TOKEN__177,0);
L_G79__179=lisp.values1(TMP_293);
{
TMP_295=lisp.callFunctionWithCallStack(G_296,L_G79__179,lisp.makeCons(lisp.makeCharacter(43), lisp.makeCons(lisp.makeCharacter(45), lisp.S_nil)));
L_G80__180=lisp.values1(TMP_295);
if(lisp.values1(L_G80__180) !== lisp.S_nil){
TMP_297=lisp.values1(1);
}else{
TMP_297=lisp.values1(0);
}
}
}
L_POS__182=lisp.values1(lisp.values1(lisp.values1(TMP_297)));
L_FOUND_NUMBER_P__183=lisp.values1(lisp.S_nil);
TMP_298=lisp.callFunctionWithCallStack(G_299,L_POS__182,1);
if(lisp.values1(TMP_298) !== lisp.S_nil){
TMP_301=lisp.callFunctionWithCallStack(G_302,L_TOKEN__177);
TMP_303=lisp.callFunctionWithCallStack(G_299,1,TMP_301);
TMP_300=lisp.values1(TMP_303);
}else{
TMP_300=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_300) !== lisp.S_nil){
BLOCK_RESULT_NUMBER_STRING_P__178=lisp.values1(lisp.S_nil);
break BLOCK_NUMBER_STRING_P__178;
}else{
}
BLOCK_NIL__184: for(;;){{
L_I__185=lisp.values1(L_POS__182);
for(;;){
TMP_304=lisp.callFunctionWithCallStack(G_302,L_TOKEN__177);
TMP_305=lisp.callFunctionWithCallStack(G_306,L_I__185,TMP_304);
if(lisp.values1(TMP_305) !== lisp.S_nil){
BLOCK_RESULT_NIL__184=lisp.values1(lisp.S_nil);
break BLOCK_NIL__184;
}else{
{
TMP_307=lisp.callFunctionWithCallStack(G_294,L_TOKEN__177,L_I__185);
L_C__186=lisp.values1(TMP_307);
{
TMP_308=lisp.callFunctionWithCallStack(G_309,lisp.makeCharacter(48),L_C__186,lisp.makeCharacter(57));
L_G88__187=lisp.values1(TMP_308);
if(lisp.values1(L_G88__187) !== lisp.S_nil){
L_FOUND_NUMBER_P__183=lisp.values1(G_5);
}else{
{
TMP_310=lisp.callFunctionWithCallStack(G_311,lisp.makeCharacter(46),L_C__186);
L_G89__188=lisp.values1(TMP_310);
if(lisp.values1(L_G89__188) !== lisp.S_nil){
TMP_312=lisp.callFunctionWithCallStack(G_313,L_I__185);
L_POS__182=lisp.values1(TMP_312);
BLOCK_RESULT_NIL__184=lisp.values1(lisp.S_nil);
break BLOCK_NIL__184;
}else{
BLOCK_RESULT_NUMBER_STRING_P__178=lisp.values1(lisp.S_nil);
break BLOCK_NUMBER_STRING_P__178;
}
}
}
}
}
{
TMP_314=lisp.callFunctionWithCallStack(G_313,L_I__185);
L_G91__190=lisp.values1(TMP_314);
L_I__185=lisp.values1(L_G91__190);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__184=lisp.values1(lisp.S_nil);
break;
}
BLOCK_NIL__191: for(;;){{
L_I__192=lisp.values1(L_POS__182);
for(;;){
TMP_315=lisp.callFunctionWithCallStack(G_302,L_TOKEN__177);
TMP_316=lisp.callFunctionWithCallStack(G_306,L_I__192,TMP_315);
if(lisp.values1(TMP_316) !== lisp.S_nil){
BLOCK_RESULT_NIL__191=lisp.values1(lisp.S_nil);
break BLOCK_NIL__191;
}else{
{
TMP_317=lisp.callFunctionWithCallStack(G_294,L_TOKEN__177,L_I__192);
L_C__193=lisp.values1(TMP_317);
{
TMP_318=lisp.callFunctionWithCallStack(G_309,lisp.makeCharacter(48),L_C__193,lisp.makeCharacter(57));
L_G98__194=lisp.values1(TMP_318);
if(lisp.values1(L_G98__194) !== lisp.S_nil){
L_FOUND_NUMBER_P__183=lisp.values1(G_5);
}else{
BLOCK_RESULT_NUMBER_STRING_P__178=lisp.values1(lisp.S_nil);
break BLOCK_NUMBER_STRING_P__178;
}
}
}
{
TMP_319=lisp.callFunctionWithCallStack(G_313,L_I__192);
L_G100__196=lisp.values1(TMP_319);
L_I__192=lisp.values1(L_G100__196);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__191=lisp.values1(lisp.S_nil);
break;
}
}
BLOCK_RESULT_NUMBER_STRING_P__178=lisp.values1(L_FOUND_NUMBER_P__183);
break;
}
return BLOCK_RESULT_NUMBER_STRING_P__178;
});
CL_COMMON_LISP_NUMBER_STRING_P=lisp.values1(F_NUMBER_STRING_P_291);
let F_PARSE_NUMBER_320;
F_PARSE_NUMBER_320=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_321, arguments.length);
}
let TMP_480;
let L_G133__269;
let TMP_479;
let TMP_478;
let L_G132__268;
let TMP_477;
let TMP_476;
let L_G131__267;
let TMP_475;
let TMP_474;
let L_G130__266;
let TMP_473;
let F_FLOAT_CASE_2_P__216;
let TMP_452;
let F_FLOAT_CASE_1_P__215;
let TMP_433;
let F_DECIMAL_PART__214;
let TMP_423;
let F_EXPONENT__213;
let TMP_404;
let F_FRACTION_P__212;
let TMP_387;
let F_INTEGER_P__211;
let TMP_372;
let F_DIGITPLUS__210;
let TMP_367;
let F_DIGITSTAR__209;
let TMP_364;
let F_DIGITS_TO_INTEGER__208;
let TMP_355;
let F_DIGITS__207;
let TMP_350;
let F_SIGN__206;
let TMP_340;
let F_ACCEPT__205;
let TMP_335;
let F_NEXT__204;
let TMP_331;
let F_LOOKAHEADSTAR__203;
let TMP_327;
let F_LOOKAHEAD__202;
let TMP_325;
let F_END_OF_STRING_P__201;
let TMP_323;
let L_LEN__200;
let TMP_322;
let L_POS__199;
let L_STRING__197;
L_STRING__197=arguments[0];
{
L_POS__199=lisp.values1(0);
TMP_322=lisp.callFunctionWithCallStack(G_302,L_STRING__197);
L_LEN__200=lisp.values1(TMP_322);
{
TMP_323=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_324;
TMP_324=lisp.callFunctionWithCallStack(G_306,L_POS__199,L_LEN__200);
return TMP_324;
});
F_END_OF_STRING_P__201=lisp.values1(TMP_323);
TMP_325=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_326;
TMP_326=lisp.callFunctionWithCallStack(G_294,L_STRING__197,L_POS__199);
return TMP_326;
});
F_LOOKAHEAD__202=lisp.values1(TMP_325);
TMP_327=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_330;
let TMP_329;
let TMP_328;
TMP_328=F_END_OF_STRING_P__201();
if(lisp.values1(TMP_328) !== lisp.S_nil){
TMP_329=lisp.values1(lisp.S_nil);
}else{
TMP_330=F_LOOKAHEAD__202();
TMP_329=TMP_330;
}
return TMP_329;
});
F_LOOKAHEADSTAR__203=lisp.values1(TMP_327);
TMP_331=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_334;
let L_G101__217;
let TMP_332;
{
TMP_332=lisp.callFunctionWithCallStack(G_333,L_POS__199,1);
L_G101__217=lisp.values1(TMP_332);
L_POS__199=(TMP_334=lisp.values1(L_G101__217));
}
return lisp.values1(TMP_334);
});
F_NEXT__204=lisp.values1(TMP_331);
TMP_335=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_339;
let TMP_338;
let TMP_337;
let TMP_336;
let L_C__218;
L_C__218=arguments[0];
TMP_336=F_LOOKAHEADSTAR__203();
TMP_337=lisp.callFunctionWithCallStack(G_49,L_C__218,TMP_336);
if(lisp.values1(TMP_337) !== lisp.S_nil){
TMP_339=F_NEXT__204();
TMP_338=TMP_339;
}else{
TMP_338=lisp.values1(lisp.S_nil);
}
return TMP_338;
});
F_ACCEPT__205=lisp.values1(TMP_335);
TMP_340=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G106__223;
let TMP_349;
let TMP_348;
let L_G105__222;
let TMP_347;
let L_G104__221;
let TMP_346;
let TMP_345;
let L_G103__220;
let TMP_344;
let L_G102__219;
let TMP_343;
let TMP_342;
let TMP_341;
TMP_341=F_END_OF_STRING_P__201();
if(lisp.values1(TMP_341) !== lisp.S_nil){
TMP_342=lisp.values1(lisp.S_nil);
}else{
{
TMP_343=F_LOOKAHEAD__202();
L_G102__219=lisp.values1(TMP_343);
{
TMP_344=lisp.callFunctionWithCallStack(G_49,L_G102__219,lisp.makeCharacter(43));
L_G103__220=lisp.values1(TMP_344);
if(lisp.values1(L_G103__220) !== lisp.S_nil){
{
TMP_346=lisp.callFunctionWithCallStack(G_333,L_POS__199,1);
L_G104__221=lisp.values1(TMP_346);
L_POS__199=lisp.values1(L_G104__221);
}
TMP_345=lisp.values1(lisp.S_nil);
}else{
{
TMP_347=lisp.callFunctionWithCallStack(G_49,L_G102__219,lisp.makeCharacter(45));
L_G105__222=lisp.values1(TMP_347);
if(lisp.values1(L_G105__222) !== lisp.S_nil){
{
TMP_349=lisp.callFunctionWithCallStack(G_333,L_POS__199,1);
L_G106__223=lisp.values1(TMP_349);
L_POS__199=lisp.values1(L_G106__223);
}
TMP_348=lisp.values1(G_5);
}else{
TMP_348=lisp.values1(lisp.S_nil);
}
}
TMP_345=TMP_348;
}
}
}
TMP_342=TMP_345;
}
return TMP_342;
});
F_SIGN__206=lisp.values1(TMP_340);
TMP_350=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G113__227;
let TMP_354;
let L_DIGIT__226;
let TMP_353;
let TMP_352;
let TMP_351;
let BLOCK_RESULT_NIL__225;
let L_DIGITS__224;
{
L_DIGITS__224=lisp.values1(lisp.S_nil);
BLOCK_NIL__225: for(;;){for(;;){
TMP_351=F_END_OF_STRING_P__201();
if(lisp.values1(TMP_351) !== lisp.S_nil){
BLOCK_RESULT_NIL__225=lisp.values1(lisp.S_nil);
break BLOCK_NIL__225;
}else{
{
TMP_352=F_LOOKAHEAD__202();
TMP_353=lisp.callFunctionWithCallStack(G_273,TMP_352);
L_DIGIT__226=lisp.values1(TMP_353);
if(lisp.values1(L_DIGIT__226) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__225=lisp.values1(lisp.S_nil);
break BLOCK_NIL__225;
}
{
TMP_354=lisp.CL_cons(L_DIGIT__226,L_DIGITS__224);
L_G113__227=lisp.values1(TMP_354);
L_DIGITS__224=lisp.values1(L_G113__227);
}
F_NEXT__204();
}
continue;
}
break;
}
BLOCK_RESULT_NIL__225=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_DIGITS__224);
});
F_DIGITS__207=lisp.values1(TMP_350);
TMP_355=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_363;
let L_G121__234;
let TMP_362;
let TMP_360;
let TMP_359;
let L_DIGIT__233;
let TMP_358;
let TMP_356;
let L_G114__232;
let L_I__230;
let L_VALUE__229;
let L_DIGITS__228;
L_DIGITS__228=arguments[0];
{
L_VALUE__229=lisp.values1(0);
L_I__230=lisp.values1(1);
{
L_G114__232=lisp.values1(L_DIGITS__228);
for(;;){
TMP_356=lisp.callFunctionWithCallStack(G_357,L_G114__232);
if(lisp.values1(TMP_356) !== lisp.S_nil){
}else{
{
TMP_358=lisp.callFunctionWithCallStack(G_253,L_G114__232);
L_DIGIT__233=lisp.values1(TMP_358);
TMP_359=lisp.callFunctionWithCallStack(G_255,L_G114__232);
L_G114__232=lisp.values1(TMP_359);
{
TMP_360=lisp.callFunctionWithCallStack(G_361,L_DIGIT__233,L_I__230);
TMP_362=lisp.callFunctionWithCallStack(G_333,L_VALUE__229,TMP_360);
L_G121__234=lisp.values1(TMP_362);
L_VALUE__229=lisp.values1(L_G121__234);
}
TMP_363=lisp.callFunctionWithCallStack(G_361,L_I__230,10);
L_I__230=lisp.values1(TMP_363);
}
continue;
}
break;
}
}
}
return lisp.values1(L_VALUE__229);
});
F_DIGITS_TO_INTEGER__208=lisp.values1(TMP_355);
TMP_364=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_366;
let L_DIGITS__236;
let TMP_365;
{
TMP_365=F_DIGITS__207();
L_DIGITS__236=lisp.values1(TMP_365);
TMP_366=F_DIGITS_TO_INTEGER__208(L_DIGITS__236);
}
return TMP_366;
});
F_DIGITSTAR__209=lisp.values1(TMP_364);
TMP_367=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_371;
let TMP_370;
let TMP_369;
let L_DIGITS__237;
let TMP_368;
{
TMP_368=F_DIGITS__207();
L_DIGITS__237=lisp.values1(TMP_368);
TMP_369=lisp.callFunctionWithCallStack(G_31,L_DIGITS__237);
if(lisp.values1(TMP_369) !== lisp.S_nil){
TMP_370=lisp.values1(lisp.S_nil);
}else{
TMP_371=F_DIGITS_TO_INTEGER__208(L_DIGITS__237);
TMP_370=TMP_371;
}
}
return TMP_370;
});
F_DIGITPLUS__210=lisp.values1(TMP_367);
TMP_372=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_385;
let TMP_384;
let TMP_383;
let TMP_382;
let L_G123__241;
let TMP_381;
let TMP_380;
let TMP_379;
let TMP_378;
let L_G122__240;
let TMP_377;
let TMP_376;
let TMP_375;
let TMP_374;
let L_INTEGER__239;
let L_MINUS__238;
let TMP_373;
{
TMP_373=F_SIGN__206();
L_MINUS__238=lisp.values1(TMP_373);
L_INTEGER__239=lisp.values1(lisp.S_nil);
TMP_374=F_DIGITPLUS__210();
L_INTEGER__239=(TMP_375=lisp.values1(TMP_374));
if(lisp.values1(TMP_375) !== lisp.S_nil){
{
TMP_377=F_END_OF_STRING_P__201();
L_G122__240=lisp.values1(TMP_377);
if(lisp.values1(L_G122__240) !== lisp.S_nil){
TMP_378=lisp.values1(L_G122__240);
}else{
{
TMP_379=F_ACCEPT__205(lisp.makeCharacter(46));
if(lisp.values1(TMP_379) !== lisp.S_nil){
TMP_381=F_END_OF_STRING_P__201();
TMP_380=lisp.values1(TMP_381);
}else{
TMP_380=lisp.values1(lisp.S_nil);
}
L_G123__241=lisp.values1(TMP_380);
if(lisp.values1(L_G123__241) !== lisp.S_nil){
TMP_382=lisp.values1(L_G123__241);
}else{
TMP_382=lisp.values1(lisp.S_nil);
}
}
TMP_378=lisp.values1(lisp.values1(TMP_382));
}
}
TMP_376=lisp.values1(lisp.values1(TMP_378));
}else{
TMP_376=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_376) !== lisp.S_nil){
if(lisp.values1(L_MINUS__238) !== lisp.S_nil){
TMP_385=lisp.callFunctionWithCallStack(G_386,L_INTEGER__239);
TMP_384=TMP_385;
}else{
TMP_384=lisp.values1(L_INTEGER__239);
}
TMP_383=TMP_384;
}else{
TMP_383=lisp.values1(lisp.S_nil);
}
}
return TMP_383;
});
F_INTEGER_P__211=lisp.values1(TMP_372);
TMP_387=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_403;
let TMP_402;
let TMP_400;
let TMP_399;
let TMP_398;
let TMP_397;
let TMP_396;
let TMP_395;
let TMP_394;
let TMP_393;
let TMP_392;
let TMP_391;
let TMP_390;
let TMP_389;
let L_DENOMINATOR__244;
let L_NUMERATOR__243;
let L_MINUS__242;
let TMP_388;
{
TMP_388=F_SIGN__206();
L_MINUS__242=lisp.values1(TMP_388);
L_NUMERATOR__243=lisp.values1(lisp.S_nil);
L_DENOMINATOR__244=lisp.values1(lisp.S_nil);
TMP_389=F_DIGITPLUS__210();
L_NUMERATOR__243=(TMP_390=lisp.values1(TMP_389));
if(lisp.values1(TMP_390) !== lisp.S_nil){
TMP_392=F_ACCEPT__205(lisp.makeCharacter(47));
if(lisp.values1(TMP_392) !== lisp.S_nil){
TMP_394=F_DIGITPLUS__210();
L_DENOMINATOR__244=(TMP_395=lisp.values1(TMP_394));
if(lisp.values1(TMP_395) !== lisp.S_nil){
TMP_397=F_END_OF_STRING_P__201();
TMP_396=lisp.values1(TMP_397);
}else{
TMP_396=lisp.values1(lisp.S_nil);
}
TMP_393=lisp.values1(TMP_396);
}else{
TMP_393=lisp.values1(lisp.S_nil);
}
TMP_391=lisp.values1(TMP_393);
}else{
TMP_391=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_391) !== lisp.S_nil){
if(lisp.values1(L_MINUS__242) !== lisp.S_nil){
TMP_400=lisp.callFunctionWithCallStack(G_401,L_NUMERATOR__243,L_DENOMINATOR__244);
TMP_402=lisp.callFunctionWithCallStack(G_386,TMP_400);
TMP_399=TMP_402;
}else{
TMP_403=lisp.callFunctionWithCallStack(G_401,L_NUMERATOR__243,L_DENOMINATOR__244);
TMP_399=TMP_403;
}
TMP_398=TMP_399;
}else{
TMP_398=lisp.values1(lisp.S_nil);
}
}
return TMP_398;
});
F_FRACTION_P__212=lisp.values1(TMP_387);
TMP_404=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_421;
let TMP_420;
let TMP_419;
let TMP_418;
let TMP_417;
let TMP_416;
let TMP_415;
let TMP_414;
let L_G124__248;
let TMP_413;
let TMP_412;
let TMP_411;
let TMP_410;
let TMP_409;
let TMP_408;
let L_VALUE__247;
let L_MINUS__246;
let L_C__245;
let TMP_407;
let TMP_406;
let TMP_405;
TMP_405=F_END_OF_STRING_P__201();
if(lisp.values1(TMP_405) !== lisp.S_nil){
TMP_406=lisp.values1(lisp.S_nil);
}else{
{
TMP_407=F_LOOKAHEAD__202();
L_C__245=lisp.values1(TMP_407);
L_MINUS__246=lisp.values1(lisp.S_nil);
L_VALUE__247=lisp.values1(lisp.S_nil);
TMP_408=lisp.callFunctionWithCallStack(G_296,L_C__245,lisp.makeCons(lisp.makeCharacter(101), lisp.makeCons(lisp.makeCharacter(115), lisp.makeCons(lisp.makeCharacter(102), lisp.makeCons(lisp.makeCharacter(100), lisp.makeCons(lisp.makeCharacter(108), lisp.makeCons(lisp.makeCharacter(69), lisp.makeCons(lisp.makeCharacter(83), lisp.makeCons(lisp.makeCharacter(70), lisp.makeCons(lisp.makeCharacter(68), lisp.makeCons(lisp.makeCharacter(76), lisp.S_nil)))))))))));
if(lisp.values1(TMP_408) !== lisp.S_nil){
TMP_410=F_NEXT__204();
if(lisp.values1(TMP_410) !== lisp.S_nil){
{
TMP_412=F_SIGN__206();
L_MINUS__246=(TMP_413=lisp.values1(TMP_412));
L_G124__248=lisp.values1(TMP_413);
if(lisp.values1(L_G124__248) !== lisp.S_nil){
TMP_414=lisp.values1(L_G124__248);
}else{
TMP_414=lisp.values1(G_5);
}
}
if(lisp.values1(lisp.values1(TMP_414)) !== lisp.S_nil){
TMP_416=F_DIGITPLUS__210();
L_VALUE__247=(TMP_417=lisp.values1(TMP_416));
TMP_415=lisp.values1(TMP_417);
}else{
TMP_415=lisp.values1(lisp.S_nil);
}
TMP_411=lisp.values1(TMP_415);
}else{
TMP_411=lisp.values1(lisp.S_nil);
}
TMP_409=lisp.values1(TMP_411);
}else{
TMP_409=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_409) !== lisp.S_nil){
if(lisp.values1(L_MINUS__246) !== lisp.S_nil){
TMP_420=lisp.callFunctionWithCallStack(G_386,L_VALUE__247);
TMP_419=lisp.values1(TMP_420);
}else{
TMP_419=lisp.values1(L_VALUE__247);
}
TMP_421=lisp.callFunctionWithCallStack(G_422,10,TMP_419);
TMP_418=TMP_421;
}else{
TMP_418=lisp.values1(lisp.S_nil);
}
}
TMP_406=TMP_418;
}
return TMP_406;
});
F_EXPONENT__213=lisp.values1(TMP_404);
TMP_423=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_432;
let TMP_431;
let TMP_430;
let TMP_429;
let TMP_428;
let TMP_427;
let TMP_426;
let TMP_425;
let L_DIGITS__251;
let TMP_424;
let L_OPTIONAL__250;
L_OPTIONAL__250=arguments[0];
{
TMP_424=F_DIGITS__207();
L_DIGITS__251=lisp.values1(TMP_424);
TMP_425=lisp.callFunctionWithCallStack(G_47,L_OPTIONAL__250);
if(lisp.values1(TMP_425) !== lisp.S_nil){
TMP_427=lisp.callFunctionWithCallStack(G_31,L_DIGITS__251);
TMP_426=lisp.values1(TMP_427);
}else{
TMP_426=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_426) !== lisp.S_nil){
TMP_428=lisp.values1(lisp.S_nil);
}else{
TMP_429=F_DIGITS_TO_INTEGER__208(L_DIGITS__251);
TMP_430=lisp.callFunctionWithCallStack(G_302,L_DIGITS__251);
TMP_431=lisp.callFunctionWithCallStack(G_422,0.1,TMP_430);
TMP_432=lisp.callFunctionWithCallStack(G_361,TMP_429,TMP_431);
TMP_428=TMP_432;
}
}
return TMP_428;
});
F_DECIMAL_PART__214=lisp.values1(TMP_423);
TMP_433=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_451;
let TMP_450;
let L_VALUE__258;
let TMP_449;
let TMP_448;
let TMP_447;
let TMP_446;
let TMP_445;
let L_G126__256;
let TMP_444;
let TMP_443;
let TMP_442;
let TMP_441;
let TMP_440;
let TMP_439;
let TMP_438;
let TMP_437;
let TMP_436;
let TMP_435;
let L_EXPONENT__255;
let L_DECIMAL_PART__254;
let L_INTEGRAL_PART__253;
let L_MINUS__252;
let TMP_434;
{
TMP_434=F_SIGN__206();
L_MINUS__252=lisp.values1(TMP_434);
L_INTEGRAL_PART__253=lisp.values1(lisp.S_nil);
L_DECIMAL_PART__254=lisp.values1(lisp.S_nil);
L_EXPONENT__255=lisp.values1(lisp.S_nil);
TMP_435=F_DIGITSTAR__209();
L_INTEGRAL_PART__253=(TMP_436=lisp.values1(TMP_435));
if(lisp.values1(TMP_436) !== lisp.S_nil){
TMP_438=F_ACCEPT__205(lisp.makeCharacter(46));
if(lisp.values1(TMP_438) !== lisp.S_nil){
TMP_440=F_DECIMAL_PART__214(lisp.S_nil);
L_DECIMAL_PART__254=(TMP_441=lisp.values1(TMP_440));
if(lisp.values1(TMP_441) !== lisp.S_nil){
{
TMP_443=F_EXPONENT__213();
L_EXPONENT__255=(TMP_444=lisp.values1(TMP_443));
L_G126__256=lisp.values1(TMP_444);
if(lisp.values1(L_G126__256) !== lisp.S_nil){
TMP_445=lisp.values1(L_G126__256);
}else{
TMP_445=lisp.values1(G_5);
}
}
if(lisp.values1(lisp.values1(TMP_445)) !== lisp.S_nil){
TMP_447=F_END_OF_STRING_P__201();
TMP_446=lisp.values1(TMP_447);
}else{
TMP_446=lisp.values1(lisp.S_nil);
}
TMP_442=lisp.values1(TMP_446);
}else{
TMP_442=lisp.values1(lisp.S_nil);
}
TMP_439=lisp.values1(TMP_442);
}else{
TMP_439=lisp.values1(lisp.S_nil);
}
TMP_437=lisp.values1(TMP_439);
}else{
TMP_437=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_437) !== lisp.S_nil){
{
TMP_449=lisp.callFunctionWithCallStack(G_333,L_INTEGRAL_PART__253,L_DECIMAL_PART__254);
L_VALUE__258=lisp.values1(TMP_449);
if(lisp.values1(L_EXPONENT__255) !== lisp.S_nil){
TMP_450=lisp.callFunctionWithCallStack(G_361,L_VALUE__258,L_EXPONENT__255);
L_VALUE__258=lisp.values1(TMP_450);
}else{
}
if(lisp.values1(L_MINUS__252) !== lisp.S_nil){
TMP_451=lisp.callFunctionWithCallStack(G_386,L_VALUE__258);
L_VALUE__258=lisp.values1(TMP_451);
}else{
}
}
TMP_448=lisp.values1(L_VALUE__258);
}else{
TMP_448=lisp.values1(lisp.S_nil);
}
}
return TMP_448;
});
F_FLOAT_CASE_1_P__215=lisp.values1(TMP_433);
TMP_452=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_472;
let L_VALUE__265;
let TMP_471;
let TMP_470;
let TMP_469;
let TMP_468;
let TMP_467;
let TMP_466;
let TMP_465;
let TMP_464;
let TMP_463;
let L_G129__264;
let TMP_462;
let TMP_461;
let L_G128__263;
let TMP_460;
let TMP_459;
let TMP_458;
let TMP_457;
let TMP_456;
let TMP_455;
let TMP_454;
let L_EXPONENT__262;
let L_DECIMAL_PART__261;
let L_INTEGRAL_PART__260;
let L_MINUS__259;
let TMP_453;
{
TMP_453=F_SIGN__206();
L_MINUS__259=lisp.values1(TMP_453);
L_INTEGRAL_PART__260=lisp.values1(lisp.S_nil);
L_DECIMAL_PART__261=lisp.values1(lisp.S_nil);
L_EXPONENT__262=lisp.values1(lisp.S_nil);
TMP_454=F_DIGITPLUS__210();
L_INTEGRAL_PART__260=(TMP_455=lisp.values1(TMP_454));
if(lisp.values1(TMP_455) !== lisp.S_nil){
{
TMP_457=F_ACCEPT__205(lisp.makeCharacter(46));
if(lisp.values1(TMP_457) !== lisp.S_nil){
TMP_459=F_DECIMAL_PART__214(G_5);
L_DECIMAL_PART__261=(TMP_460=lisp.values1(TMP_459));
TMP_458=lisp.values1(TMP_460);
}else{
TMP_458=lisp.values1(lisp.S_nil);
}
L_G128__263=lisp.values1(TMP_458);
if(lisp.values1(L_G128__263) !== lisp.S_nil){
TMP_461=lisp.values1(L_G128__263);
}else{
{
L_DECIMAL_PART__261=(TMP_462=lisp.values1(0));
L_G129__264=lisp.values1(TMP_462);
if(lisp.values1(L_G129__264) !== lisp.S_nil){
TMP_463=lisp.values1(L_G129__264);
}else{
TMP_463=lisp.values1(lisp.S_nil);
}
}
TMP_461=lisp.values1(lisp.values1(TMP_463));
}
}
if(lisp.values1(lisp.values1(TMP_461)) !== lisp.S_nil){
TMP_465=F_EXPONENT__213();
L_EXPONENT__262=(TMP_466=lisp.values1(TMP_465));
if(lisp.values1(TMP_466) !== lisp.S_nil){
TMP_468=F_END_OF_STRING_P__201();
TMP_467=lisp.values1(TMP_468);
}else{
TMP_467=lisp.values1(lisp.S_nil);
}
TMP_464=lisp.values1(TMP_467);
}else{
TMP_464=lisp.values1(lisp.S_nil);
}
TMP_456=lisp.values1(TMP_464);
}else{
TMP_456=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_456) !== lisp.S_nil){
{
TMP_470=lisp.callFunctionWithCallStack(G_333,L_INTEGRAL_PART__260,L_DECIMAL_PART__261);
TMP_471=lisp.callFunctionWithCallStack(G_361,TMP_470,L_EXPONENT__262);
L_VALUE__265=lisp.values1(TMP_471);
if(lisp.values1(L_MINUS__259) !== lisp.S_nil){
TMP_472=lisp.callFunctionWithCallStack(G_386,L_VALUE__265);
L_VALUE__265=lisp.values1(TMP_472);
}else{
}
}
TMP_469=lisp.values1(L_VALUE__265);
}else{
TMP_469=lisp.values1(lisp.S_nil);
}
}
return TMP_469;
});
F_FLOAT_CASE_2_P__216=lisp.values1(TMP_452);
{
TMP_473=F_INTEGER_P__211();
L_G130__266=lisp.values1(TMP_473);
if(lisp.values1(L_G130__266) !== lisp.S_nil){
TMP_474=lisp.values1(L_G130__266);
}else{
{
L_POS__199=lisp.values1(0);
TMP_475=F_FRACTION_P__212();
L_G131__267=lisp.values1(lisp.values1(TMP_475));
if(lisp.values1(L_G131__267) !== lisp.S_nil){
TMP_476=lisp.values1(L_G131__267);
}else{
{
L_POS__199=lisp.values1(0);
TMP_477=F_FLOAT_CASE_1_P__215();
L_G132__268=lisp.values1(lisp.values1(TMP_477));
if(lisp.values1(L_G132__268) !== lisp.S_nil){
TMP_478=lisp.values1(L_G132__268);
}else{
{
L_POS__199=lisp.values1(0);
TMP_479=F_FLOAT_CASE_2_P__216();
L_G133__269=lisp.values1(lisp.values1(TMP_479));
if(lisp.values1(L_G133__269) !== lisp.S_nil){
TMP_480=lisp.values1(L_G133__269);
}else{
TMP_480=lisp.values1(lisp.S_nil);
}
}
TMP_478=TMP_480;
}
}
TMP_476=TMP_478;
}
}
TMP_474=TMP_476;
}
}
}
}
return TMP_474;
});
CL_COMMON_LISP_PARSE_NUMBER=lisp.values1(F_PARSE_NUMBER_320);
let F_CHECK_DOT_481;
F_CHECK_DOT_481=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_482, arguments.length);
}
let TMP_495;
let TMP_494;
let L_G135__277;
let TMP_493;
let L_G143__276;
let TMP_492;
let TMP_491;
let TMP_490;
let TMP_489;
let L_I__275;
let BLOCK_RESULT_NIL__274;
let L_G136__273;
let TMP_488;
let TMP_487;
let TMP_486;
let TMP_485;
let L_G134__272;
let TMP_483;
let L_TOKEN__270;
L_TOKEN__270=arguments[0];
{
TMP_483=lisp.callFunctionWithCallStack(G_484,L_TOKEN__270,G_8.func(lisp.codeArrayToString([46])));
L_G134__272=lisp.values1(TMP_483);
if(lisp.values1(L_G134__272) !== lisp.S_nil){
if(lisp.values1(lisp.symbolValue(G_2)) !== lisp.S_nil){
TMP_486=lisp.values1(lisp.S_nil);
}else{
TMP_487=G_17.func(G_8.func(lisp.codeArrayToString([100, 111, 116, 32, 101, 114, 114, 111, 114])));
TMP_486=TMP_487;
}
TMP_485=TMP_486;
}else{
{
{
TMP_488=lisp.callFunctionWithCallStack(G_302,L_TOKEN__270);
L_G136__273=lisp.values1(TMP_488);
BLOCK_NIL__274: for(;;){{
L_I__275=lisp.values1(0);
for(;;){
TMP_489=lisp.callFunctionWithCallStack(G_306,L_I__275,L_G136__273);
if(lisp.values1(TMP_489) !== lisp.S_nil){
BLOCK_RESULT_NIL__274=lisp.values1(lisp.S_nil);
break BLOCK_NIL__274;
}else{
TMP_490=lisp.callFunctionWithCallStack(G_294,L_TOKEN__270,L_I__275);
TMP_491=lisp.callFunctionWithCallStack(G_311,lisp.makeCharacter(46),TMP_490);
if(lisp.values1(TMP_491) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__274=lisp.values1(G_5);
break BLOCK_NIL__274;
}
{
TMP_492=lisp.callFunctionWithCallStack(G_333,L_I__275,1);
L_G143__276=lisp.values1(TMP_492);
L_I__275=lisp.values1(L_G143__276);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__274=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)));
break;
}
}
TMP_493=lisp.callFunctionWithCallStack(G_47,lisp.values1(BLOCK_RESULT_NIL__274));
L_G135__277=lisp.values1(TMP_493);
if(lisp.values1(L_G135__277) !== lisp.S_nil){
TMP_495=G_17.func(G_8.func(lisp.codeArrayToString([100, 111, 116, 32, 101, 114, 114, 111, 114])));
TMP_494=TMP_495;
}else{
TMP_494=lisp.values1(lisp.S_nil);
}
}
TMP_485=TMP_494;
}
}
return TMP_485;
});
CL_COMMON_LISP_CHECK_DOT=lisp.values1(F_CHECK_DOT_481);
let F_PARSE_SYMBOL_496;
F_PARSE_SYMBOL_496=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_497, arguments.length);
}
let TMP_546;
let TMP_545;
let TMP_544;
let TMP_543;
let TMP_542;
let TMP_541;
let TMP_540;
let TMP_539;
let TMP_538;
let L_G153__297;
let TMP_537;
let TMP_536;
let TMP_535;
let TMP_534;
let TMP_532;
let TMP_530;
let L_G152__296;
let TMP_529;
let TMP_528;
let TMP_527;
let L_G151__295;
let TMP_526;
let L_POS__294;
let TMP_524;
let F_F__293;
let TMP_498;
let L_TOKEN__278;
L_TOKEN__278=arguments[0];
{
TMP_498=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_523;
let TMP_521;
let TMP_520;
let TMP_514;
let TMP_512;
let TMP_511;
let L_G146__288;
let TMP_510;
let L_G148__287;
let TMP_509;
let TMP_508;
let L_G147__286;
let TMP_507;
let TMP_506;
let TMP_505;
let L_G145__285;
let TMP_504;
let TMP_503;
let TMP_502;
let L_G144__284;
let TMP_501;
let L_PACKAGE__283;
let TMP_499;
let L_EXTERNAL_P__282;
let L_SYMBOL_NAME__281;
let L_PACKAGE_NAME__280;
L_PACKAGE_NAME__280=arguments[0];
L_SYMBOL_NAME__281=arguments[1];
L_EXTERNAL_P__282=arguments[2];
{
TMP_499=lisp.callFunctionWithCallStack(G_500,L_PACKAGE_NAME__280);
L_PACKAGE__283=lisp.values1(TMP_499);
{
TMP_501=lisp.callFunctionWithCallStack(G_31,L_PACKAGE__283);
L_G144__284=lisp.values1(TMP_501);
if(lisp.values1(L_G144__284) !== lisp.S_nil){
TMP_503=G_17.func(G_8.func(lisp.codeArrayToString([80, 97, 99, 107, 97, 103, 101, 32, 126, 65, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 46])),L_PACKAGE_NAME__280);
TMP_502=TMP_503;
}else{
{
TMP_504=lisp.callFunctionWithCallStack(G_26,lisp.makeCharacter(58),L_SYMBOL_NAME__281);
L_G145__285=lisp.values1(TMP_504);
if(lisp.values1(L_G145__285) !== lisp.S_nil){
TMP_506=G_17.func(G_8.func(lisp.codeArrayToString([116, 111, 111, 32, 109, 97, 110, 121, 32, 99, 111, 108, 111, 110, 115, 32, 97, 102, 116, 101, 114, 32, 126, 83, 32, 110, 97, 109, 101])),L_PACKAGE_NAME__280);
TMP_505=TMP_506;
}else{
{
{
TMP_507=lisp.callFunctionWithCallStack(G_47,L_EXTERNAL_P__282);
L_G147__286=lisp.values1(TMP_507);
if(lisp.values1(L_G147__286) !== lisp.S_nil){
TMP_508=lisp.values1(L_G147__286);
}else{
{
TMP_509=lisp.callFunctionWithCallStack(G_484,L_PACKAGE_NAME__280,G_8.func(lisp.codeArrayToString([74, 83])));
L_G148__287=lisp.values1(TMP_509);
if(lisp.values1(L_G148__287) !== lisp.S_nil){
TMP_510=lisp.values1(L_G148__287);
}else{
TMP_510=lisp.values1(lisp.S_nil);
}
}
TMP_508=lisp.values1(lisp.values1(TMP_510));
}
}
L_G146__288=lisp.values1(lisp.values1(TMP_508));
if(lisp.values1(L_G146__288) !== lisp.S_nil){
TMP_512=lisp.callFunctionWithCallStack(G_513,L_SYMBOL_NAME__281,L_PACKAGE_NAME__280);
TMP_511=TMP_512;
}else{
TMP_514=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_519;
let TMP_518;
let TMP_517;
let TMP_516;
let L_G150__292;
let L_STATUS__291;
let L_SYMBOL__290;
L_SYMBOL__290=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_STATUS__291=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G150__292=lisp.jsArrayToList(arguments, 2);
TMP_516=lisp.CL_eq(L_STATUS__291,G_515);
if(lisp.values1(TMP_516) !== lisp.S_nil){
TMP_518=lisp.callFunctionWithCallStack(G_513,L_SYMBOL_NAME__281,L_PACKAGE_NAME__280);
TMP_517=TMP_518;
}else{
TMP_519=G_17.func(G_8.func(lisp.codeArrayToString([83, 121, 109, 98, 111, 108, 32, 126, 83, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 32, 105, 110, 32, 116, 104, 101, 32, 126, 65, 32, 112, 97, 99, 107, 97, 103, 101, 46])),L_SYMBOL_NAME__281,L_PACKAGE_NAME__280);
TMP_517=TMP_519;
}
return TMP_517;
});
TMP_520=lisp.callFunctionWithCallStack(G_288,TMP_514);
TMP_521=lisp.callFunctionWithCallStack(G_522,L_SYMBOL_NAME__281,L_PACKAGE_NAME__280);
TMP_523=lisp.CL_multipleValueCall(TMP_520,TMP_521);
TMP_511=TMP_523;
}
}
TMP_505=TMP_511;
}
}
TMP_502=TMP_505;
}
}
}
return TMP_502;
});
F_F__293=lisp.values1(TMP_498);
{
TMP_524=lisp.callFunctionWithCallStack(G_525,lisp.makeCharacter(58),L_TOKEN__278);
L_POS__294=lisp.values1(TMP_524);
{
TMP_526=lisp.callFunctionWithCallStack(G_31,L_POS__294);
L_G151__295=lisp.values1(TMP_526);
if(lisp.values1(L_G151__295) !== lisp.S_nil){
TMP_528=lisp.callFunctionWithCallStack(G_513,L_TOKEN__278);
TMP_527=TMP_528;
}else{
{
TMP_529=lisp.callFunctionWithCallStack(G_299,L_POS__294,0);
L_G152__296=lisp.values1(TMP_529);
if(lisp.values1(L_G152__296) !== lisp.S_nil){
TMP_532=lisp.callFunctionWithCallStack(G_533,L_TOKEN__278,1);
TMP_534=F_F__293(G_531,TMP_532,lisp.S_nil);
TMP_530=TMP_534;
}else{
{
TMP_535=lisp.callFunctionWithCallStack(G_313,L_POS__294);
TMP_536=lisp.callFunctionWithCallStack(G_294,L_TOKEN__278,TMP_535);
TMP_537=lisp.callFunctionWithCallStack(G_311,lisp.makeCharacter(58),TMP_536);
L_G153__297=lisp.values1(TMP_537);
if(lisp.values1(L_G153__297) !== lisp.S_nil){
TMP_539=lisp.callFunctionWithCallStack(G_533,L_TOKEN__278,0,L_POS__294);
TMP_540=lisp.callFunctionWithCallStack(G_333,L_POS__294,2);
TMP_541=lisp.callFunctionWithCallStack(G_533,L_TOKEN__278,TMP_540);
TMP_542=F_F__293(TMP_539,TMP_541,lisp.S_nil);
TMP_538=TMP_542;
}else{
TMP_543=lisp.callFunctionWithCallStack(G_533,L_TOKEN__278,0,L_POS__294);
TMP_544=lisp.callFunctionWithCallStack(G_313,L_POS__294);
TMP_545=lisp.callFunctionWithCallStack(G_533,L_TOKEN__278,TMP_544);
TMP_546=F_F__293(TMP_543,TMP_545,G_5);
TMP_538=TMP_546;
}
}
TMP_530=TMP_538;
}
}
TMP_527=TMP_530;
}
}
}
}
return TMP_527;
});
CL_COMMON_LISP_PARSE_SYMBOL=lisp.values1(F_PARSE_SYMBOL_496);
let F_PARSE_TOKEN_547;
F_PARSE_TOKEN_547=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_548, arguments.length);
}
let TMP_554;
let L_G156__302;
let TMP_553;
let TMP_552;
let TMP_551;
let TMP_550;
let L_G155__301;
let TMP_549;
let L_TOKEN__299;
L_TOKEN__299=arguments[0];
{
TMP_549=G_321.func(L_TOKEN__299);
L_G155__301=lisp.values1(TMP_549);
if(lisp.values1(L_G155__301) !== lisp.S_nil){
TMP_550=lisp.values1(L_G155__301);
}else{
{
G_482.func(L_TOKEN__299);
TMP_551=lisp.callFunctionWithCallStack(G_484,L_TOKEN__299,G_8.func(lisp.codeArrayToString([46])));
if(lisp.values1(TMP_551) !== lisp.S_nil){
TMP_552=lisp.values1(lisp.symbolValue(G_6));
}else{
TMP_553=G_497.func(L_TOKEN__299);
TMP_552=lisp.values1(TMP_553);
}
L_G156__302=lisp.values1(lisp.values1(TMP_552));
if(lisp.values1(L_G156__302) !== lisp.S_nil){
TMP_554=lisp.values1(L_G156__302);
}else{
TMP_554=lisp.values1(lisp.S_nil);
}
}
TMP_550=TMP_554;
}
}
return TMP_550;
});
CL_COMMON_LISP_PARSE_TOKEN=lisp.values1(F_PARSE_TOKEN_547);
let F_READ_MULTIPLE_ESCAPE_1_555;
F_READ_MULTIPLE_ESCAPE_1_555=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_556, arguments.length);
}
let TMP_564;
let L_G165__310;
let TMP_562;
let L_G164__309;
let TMP_561;
let L_G163__308;
let L_C__307;
let TMP_559;
let BLOCK_RESULT_NIL__306;
let L_OUT__305;
let TMP_557;
let L_STREAM__303;
L_STREAM__303=arguments[0];
{
TMP_557=lisp.callFunctionWithCallStack(G_558);
L_OUT__305=lisp.values1(TMP_557);
BLOCK_NIL__306: for(;;){for(;;){
{
TMP_559=G_560.func(L_STREAM__303);
L_C__307=lisp.values1(TMP_559);
{
L_G163__308=lisp.values1(L_C__307);
{
TMP_561=lisp.callFunctionWithCallStack(G_49,L_G163__308,lisp.makeCharacter(124));
L_G164__309=lisp.values1(TMP_561);
if(lisp.values1(L_G164__309) !== lisp.S_nil){
BLOCK_RESULT_NIL__306=lisp.values1(lisp.S_nil);
break BLOCK_NIL__306;
}else{
{
TMP_562=lisp.callFunctionWithCallStack(G_49,L_G163__308,lisp.makeCharacter(92));
L_G165__310=lisp.values1(TMP_562);
if(lisp.values1(L_G165__310) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_563,L_C__307,L_OUT__305);
}
}
}
}
}
}
continue;
break;
}
BLOCK_RESULT_NIL__306=lisp.values1(lisp.S_nil);
break;
}
TMP_564=lisp.callFunctionWithCallStack(G_565,L_OUT__305);
}
return TMP_564;
});
CL_COMMON_LISP_READ_MULTIPLE_ESCAPE_1=lisp.values1(F_READ_MULTIPLE_ESCAPE_1_555);
let F_READ_MULTIPLE_ESCAPE_566;
F_READ_MULTIPLE_ESCAPE_566=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_567, arguments.length);
}
let TMP_569;
let TMP_568;
let L_STREAM__312;
L_STREAM__312=arguments[0];
TMP_568=G_556.func(L_STREAM__312);
TMP_569=G_548.func(TMP_568);
return TMP_569;
});
CL_COMMON_LISP_READ_MULTIPLE_ESCAPE=lisp.values1(F_READ_MULTIPLE_ESCAPE_566);
let F_DELIMITER_P_570;
F_DELIMITER_P_570=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_571, arguments.length);
}
let TMP_581;
let L_G171__320;
let TMP_580;
let TMP_579;
let L_G170__319;
let TMP_578;
let TMP_577;
let L_G169__318;
let TMP_576;
let TMP_575;
let L_G168__317;
let TMP_574;
let TMP_573;
let L_G167__316;
let TMP_572;
let L_C__314;
L_C__314=arguments[0];
{
TMP_572=lisp.callFunctionWithCallStack(G_31,L_C__314);
L_G167__316=lisp.values1(TMP_572);
if(lisp.values1(L_G167__316) !== lisp.S_nil){
TMP_573=lisp.values1(L_G167__316);
}else{
{
TMP_574=G_24.func(L_C__314);
L_G168__317=lisp.values1(TMP_574);
if(lisp.values1(L_G168__317) !== lisp.S_nil){
TMP_575=lisp.values1(L_G168__317);
}else{
{
TMP_576=G_283.func(L_C__314);
L_G169__318=lisp.values1(TMP_576);
if(lisp.values1(L_G169__318) !== lisp.S_nil){
TMP_577=lisp.values1(L_G169__318);
}else{
{
TMP_578=lisp.callFunctionWithCallStack(G_311,L_C__314,lisp.makeCharacter(92));
L_G170__319=lisp.values1(TMP_578);
if(lisp.values1(L_G170__319) !== lisp.S_nil){
TMP_579=lisp.values1(L_G170__319);
}else{
{
TMP_580=lisp.callFunctionWithCallStack(G_311,L_C__314,lisp.makeCharacter(124));
L_G171__320=lisp.values1(TMP_580);
if(lisp.values1(L_G171__320) !== lisp.S_nil){
TMP_581=lisp.values1(L_G171__320);
}else{
TMP_581=lisp.values1(lisp.S_nil);
}
}
TMP_579=TMP_581;
}
}
TMP_577=TMP_579;
}
}
TMP_575=TMP_577;
}
}
TMP_573=TMP_575;
}
}
return TMP_573;
});
CL_COMMON_LISP_DELIMITER_P=lisp.values1(F_DELIMITER_P_570);
let F_MAYBE_INVERT_582;
F_MAYBE_INVERT_582=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_583, arguments.length);
}
let L_G186__335;
let TMP_607;
let TMP_606;
let L_G185__334;
let TMP_605;
let TMP_604;
let L_G184__333;
let TMP_603;
let L_C__332;
let TMP_602;
let TMP_601;
let TMP_600;
let TMP_598;
let TMP_597;
let L_G180__330;
let TMP_596;
let TMP_593;
let TMP_592;
let L_G179__329;
let TMP_591;
let TMP_590;
let L_G178__328;
let TMP_589;
let L_G177__327;
let TMP_588;
let L_I__326;
let BLOCK_RESULT_NIL__325;
let L_G172__324;
let TMP_587;
let L_STATE__323;
let TMP_586;
let TMP_585;
let L_TOKEN__321;
L_TOKEN__321=arguments[0];
TMP_585=G_142.func(lisp.symbolValue(G_200));
TMP_586=lisp.CL_eq(G_584,TMP_585);
if(lisp.values1(TMP_586) !== lisp.S_nil){
{
L_STATE__323=lisp.values1(lisp.S_nil);
{
TMP_587=lisp.callFunctionWithCallStack(G_302,L_TOKEN__321);
L_G172__324=lisp.values1(TMP_587);
BLOCK_NIL__325: for(;;){{
L_I__326=lisp.values1(0);
for(;;){
TMP_588=lisp.callFunctionWithCallStack(G_306,L_I__326,L_G172__324);
if(lisp.values1(TMP_588) !== lisp.S_nil){
{
L_G177__327=lisp.values1(L_STATE__323);
{
TMP_589=lisp.callFunctionWithCallStack(G_296,L_G177__327,lisp.makeCons(lisp.S_nil, lisp.S_nil));
L_G178__328=lisp.values1(TMP_589);
if(lisp.values1(L_G178__328) !== lisp.S_nil){
TMP_590=lisp.values1(L_TOKEN__321);
}else{
{
TMP_591=lisp.callFunctionWithCallStack(G_49,L_G177__327,G_131);
L_G179__329=lisp.values1(TMP_591);
if(lisp.values1(L_G179__329) !== lisp.S_nil){
TMP_593=lisp.callFunctionWithCallStack(G_594,L_TOKEN__321);
TMP_592=lisp.values1(TMP_593);
}else{
{
TMP_596=lisp.callFunctionWithCallStack(G_49,L_G177__327,G_595);
L_G180__330=lisp.values1(TMP_596);
if(lisp.values1(L_G180__330) !== lisp.S_nil){
TMP_598=lisp.callFunctionWithCallStack(G_599,L_TOKEN__321);
TMP_597=lisp.values1(TMP_598);
}else{
TMP_600=lisp.callFunctionWithCallStack(G_22,G_8.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G177__327,lisp.makeCons(lisp.S_nil, lisp.makeCons(G_131, lisp.makeCons(G_595, lisp.S_nil))));
TMP_597=lisp.values1(TMP_600);
}
}
TMP_592=lisp.values1(lisp.values1(TMP_597));
}
}
TMP_590=lisp.values1(lisp.values1(TMP_592));
}
}
}
L_TOKEN__321=(TMP_601=lisp.values1(lisp.values1(lisp.values1(TMP_590))));
BLOCK_RESULT_NIL__325=lisp.values1(TMP_601);
break BLOCK_NIL__325;
}else{
{
TMP_602=lisp.callFunctionWithCallStack(G_294,L_TOKEN__321,L_I__326);
L_C__332=lisp.values1(TMP_602);
{
TMP_603=lisp.callFunctionWithCallStack(G_309,lisp.makeCharacter(97),L_C__332,lisp.makeCharacter(122));
L_G184__333=lisp.values1(TMP_603);
if(lisp.values1(L_G184__333) !== lisp.S_nil){
TMP_604=lisp.CL_eq(L_STATE__323,G_131);
if(lisp.values1(TMP_604) !== lisp.S_nil){
BLOCK_RESULT_NIL__325=lisp.values1(lisp.S_nil);
break BLOCK_NIL__325;
}else{
}
L_STATE__323=lisp.values1(G_595);
}else{
{
TMP_605=lisp.callFunctionWithCallStack(G_309,lisp.makeCharacter(65),L_C__332,lisp.makeCharacter(90));
L_G185__334=lisp.values1(TMP_605);
if(lisp.values1(L_G185__334) !== lisp.S_nil){
TMP_606=lisp.CL_eq(L_STATE__323,G_595);
if(lisp.values1(TMP_606) !== lisp.S_nil){
BLOCK_RESULT_NIL__325=lisp.values1(lisp.S_nil);
break BLOCK_NIL__325;
}else{
}
L_STATE__323=lisp.values1(G_131);
}else{
}
}
}
}
}
{
TMP_607=lisp.callFunctionWithCallStack(G_333,L_I__326,1);
L_G186__335=lisp.values1(TMP_607);
L_I__326=lisp.values1(L_G186__335);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__325=lisp.values1(lisp.S_nil);
break;
}
}
}
}else{
}
return lisp.values1(L_TOKEN__321);
});
CL_COMMON_LISP_MAYBE_INVERT=lisp.values1(F_MAYBE_INVERT_582);
let F_READ_TOKEN_1_608;
F_READ_TOKEN_1_608=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_609, arguments.length);
}
let TMP_628;
let TMP_627;
let L_G203__353;
let TMP_626;
let TMP_624;
let TMP_623;
let L_G201__351;
let TMP_622;
let TMP_621;
let TMP_620;
let L_G200__350;
let TMP_619;
let L_G199__349;
let TMP_618;
let L_G197__347;
let TMP_617;
let TMP_616;
let L_G196__346;
let TMP_615;
let L_G195__345;
let TMP_613;
let L_G194__344;
let TMP_612;
let L_G193__343;
let TMP_611;
let L_C__342;
let BLOCK_RESULT_NIL__341;
let L_OUT__340;
let TMP_610;
let L_READTABLE_CASE__338;
let L_C__337;
let L_STREAM__336;
L_STREAM__336=arguments[0];
L_C__337=arguments[1];
L_READTABLE_CASE__338=arguments[2];
{
TMP_610=lisp.callFunctionWithCallStack(G_558);
L_OUT__340=lisp.values1(TMP_610);
BLOCK_NIL__341: for(;;){{
L_C__342=lisp.values1(L_C__337);
for(;;){
{
TMP_611=lisp.callFunctionWithCallStack(G_31,L_C__342);
L_G193__343=lisp.values1(TMP_611);
if(lisp.values1(L_G193__343) !== lisp.S_nil){
BLOCK_RESULT_NIL__341=lisp.values1(lisp.S_nil);
break BLOCK_NIL__341;
}else{
{
TMP_612=G_24.func(L_C__342);
L_G194__344=lisp.values1(TMP_612);
if(lisp.values1(L_G194__344) !== lisp.S_nil){
BLOCK_RESULT_NIL__341=lisp.values1(lisp.S_nil);
break BLOCK_NIL__341;
}else{
{
TMP_613=G_283.func(L_C__342);
L_G195__345=lisp.values1(TMP_613);
if(lisp.values1(L_G195__345) !== lisp.S_nil){
G_614.func(L_C__342,L_STREAM__336);
BLOCK_RESULT_NIL__341=lisp.values1(lisp.S_nil);
break BLOCK_NIL__341;
}else{
{
TMP_615=lisp.callFunctionWithCallStack(G_311,L_C__342,lisp.makeCharacter(92));
L_G196__346=lisp.values1(TMP_615);
if(lisp.values1(L_G196__346) !== lisp.S_nil){
TMP_616=G_560.func(L_STREAM__336);
lisp.callFunctionWithCallStack(G_563,TMP_616,L_OUT__340);
}else{
{
TMP_617=lisp.callFunctionWithCallStack(G_311,L_C__342,lisp.makeCharacter(124));
L_G197__347=lisp.values1(TMP_617);
if(lisp.values1(L_G197__347) !== lisp.S_nil){
TMP_618=G_556.func(L_STREAM__336);
lisp.callFunctionWithCallStack(G_114,TMP_618,L_OUT__340);
}else{
{
L_G199__349=lisp.values1(L_READTABLE_CASE__338);
{
TMP_619=lisp.callFunctionWithCallStack(G_49,L_G199__349,G_131);
L_G200__350=lisp.values1(TMP_619);
if(lisp.values1(L_G200__350) !== lisp.S_nil){
TMP_621=lisp.callFunctionWithCallStack(G_275,L_C__342);
TMP_620=lisp.values1(TMP_621);
}else{
{
TMP_622=lisp.callFunctionWithCallStack(G_49,L_G199__349,G_595);
L_G201__351=lisp.values1(TMP_622);
if(lisp.values1(L_G201__351) !== lisp.S_nil){
TMP_624=lisp.callFunctionWithCallStack(G_625,L_C__342);
TMP_623=lisp.values1(TMP_624);
}else{
TMP_623=lisp.values1(L_C__342);
}
}
TMP_620=lisp.values1(lisp.values1(TMP_623));
}
}
}
lisp.callFunctionWithCallStack(G_563,lisp.values1(lisp.values1(TMP_620)),L_OUT__340);
}
}
}
}
}
}
}
}
}
}
{
TMP_626=G_560.func(L_STREAM__336,lisp.S_nil,lisp.S_nil);
L_G203__353=lisp.values1(TMP_626);
L_C__342=lisp.values1(L_G203__353);
}
continue;
break;
}
}
BLOCK_RESULT_NIL__341=lisp.values1(lisp.S_nil);
break;
}
TMP_627=lisp.callFunctionWithCallStack(G_565,L_OUT__340);
}
TMP_628=G_583.func(lisp.values1(lisp.values1(TMP_627)));
return TMP_628;
});
CL_COMMON_LISP_READ_TOKEN_1=lisp.values1(F_READ_TOKEN_1_608);
let F_READ_TOKEN_629;
F_READ_TOKEN_629=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_630, arguments.length);
}
let TMP_633;
let L_TOKEN__357;
let TMP_632;
let TMP_631;
let L_C__355;
let L_STREAM__354;
L_STREAM__354=arguments[0];
L_C__355=arguments[1];
{
TMP_631=G_142.func(lisp.symbolValue(G_200));
TMP_632=G_609.func(L_STREAM__354,L_C__355,TMP_631);
L_TOKEN__357=lisp.values1(TMP_632);
TMP_633=G_548.func(L_TOKEN__357);
}
return TMP_633;
});
CL_COMMON_LISP_READ_TOKEN=lisp.values1(F_READ_TOKEN_629);
let F_READ_634;
F_READ_634=(function(){
if(arguments.length < 0 || 4 < arguments.length) {
lisp.argumentsError(G_635, arguments.length);
}
let TMP_659;
let TMP_658;
let TMP_644;
let L_G210__367;
let TMP_642;
let L_C__366;
let TMP_641;
let TMP_639;
let save_STARREAD_LABEL_TABLESTAR__363;
let TMP_637;
let TMP_636;
let L_RECURSIVE_P__361;
let L_EOF_VALUE__360;
let L_EOF_ERROR_P__359;
let L_STREAM__358;
L_STREAM__358=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_29)));
L_EOF_ERROR_P__359=arguments.length > 1 ? arguments[1] : (lisp.values1(G_5));
L_EOF_VALUE__360=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_RECURSIVE_P__361=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
{
if(lisp.values1(L_RECURSIVE_P__361) !== lisp.S_nil){
TMP_636=lisp.values1(lisp.symbolValue(G_11));
}else{
TMP_637=lisp.callFunctionWithCallStack(G_135);
TMP_636=lisp.values1(TMP_637);
}
save_STARREAD_LABEL_TABLESTAR__363=G_11.value;
G_11.value=lisp.values1(TMP_636);
try{
try {
for(;;){
{
TMP_641=G_28.func(G_5,L_STREAM__358,L_EOF_ERROR_P__359,G_640,L_RECURSIVE_P__361);
L_C__366=lisp.values1(TMP_641);
{
TMP_642=lisp.CL_eq(L_C__366,G_640);
L_G210__367=lisp.values1(TMP_642);
if(lisp.values1(L_G210__367) !== lisp.S_nil){
throw new lisp.BlockValue(G_643,lisp.values1(L_EOF_VALUE__360));}else{
G_560.func(L_STREAM__358);
TMP_644=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_657;
let TMP_656;
let TMP_655;
let L_G216__376;
let TMP_654;
let TMP_653;
let L_G215__375;
let TMP_651;
let TMP_650;
let L_G214__374;
let L_VALUES__373;
let TMP_649;
let TMP_648;
let TMP_647;
let TMP_646;
let TMP_645;
let L_G213__372;
let L_G212__371;
let L_NON_TERMINATING_P__370;
let L_FUNCTION__369;
L_FUNCTION__369=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_NON_TERMINATING_P__370=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G212__371=lisp.jsArrayToList(arguments, 2);
{
L_G213__372=lisp.values1(L_FUNCTION__369);
if(lisp.values1(L_G213__372) !== lisp.S_nil){
{
TMP_646=lisp.CL_symbolFunction(G_88);
TMP_647=lisp.callFunctionWithCallStack(G_288,TMP_646);
TMP_648=lisp.CL_funcall(lisp.values1(L_FUNCTION__369),L_STREAM__358,L_C__366);
TMP_649=lisp.CL_multipleValueCall(TMP_647,TMP_648);
L_VALUES__373=lisp.values1(TMP_649);
{
L_G214__374=lisp.values1(L_VALUES__373);
if(lisp.values1(L_G214__374) !== lisp.S_nil){
TMP_651=lisp.callFunctionWithCallStack(G_652,L_VALUES__373);
throw new lisp.BlockValue(G_643,TMP_651);TMP_650=lisp.values1(lisp.values1(lisp.S_nil));
}else{
{
L_G215__375=lisp.values1(lisp.symbolValue(G_2));
if(lisp.values1(L_G215__375) !== lisp.S_nil){
throw new lisp.BlockValue(G_643,lisp.values1(lisp.symbolValue(G_12)));TMP_653=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_653=lisp.values1(lisp.S_nil);
}
}
TMP_650=TMP_653;
}
}
}
TMP_645=TMP_650;
}else{
{
TMP_654=lisp.callFunctionWithCallStack(G_311,L_C__366,lisp.makeCharacter(124));
L_G216__376=lisp.values1(TMP_654);
if(lisp.values1(L_G216__376) !== lisp.S_nil){
TMP_656=G_567.func(L_STREAM__358);
throw new lisp.BlockValue(G_643,TMP_656);TMP_655=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_657=G_630.func(L_STREAM__358,L_C__366);
throw new lisp.BlockValue(G_643,TMP_657);TMP_655=lisp.values1(lisp.values1(lisp.S_nil));
}
}
TMP_645=TMP_655;
}
}
return TMP_645;
});
TMP_658=lisp.callFunctionWithCallStack(G_288,TMP_644);
TMP_659=G_247.func(L_C__366);
lisp.CL_multipleValueCall(TMP_658,TMP_659);
}
}
}
continue;
break;
}
TMP_639=lisp.values1(lisp.values1(lisp.S_nil))
}catch(E__638){if(E__638 instanceof lisp.BlockValue && E__638.name === G_643){TMP_639=E__638.value;}
else{throw E__638;}
}
}finally{
G_11.value=save_STARREAD_LABEL_TABLESTAR__363;
}
}
return TMP_639;
});
CL_COMMON_LISP_READ=lisp.values1(F_READ_634);
let F_CONS_READER_660;
F_CONS_READER_660=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_205, arguments.length);
}
let L_G236__399;
let TMP_674;
let L_G_STORE235__398;
let TMP_673;
let L_G234__397;
let L_G231__395;
let TMP_672;
let L_G232__394;
let TMP_671;
let L_G230__393;
let TMP_670;
let TMP_669;
let TMP_668;
let L_G_STORE229__392;
let TMP_666;
let L_G228__391;
let L_G227__390;
let TMP_665;
let L_G226__389;
let TMP_664;
let L_X__388;
let TMP_663;
let L_G224__386;
let TMP_662;
let L_C__385;
let TMP_661;
let BLOCK_RESULT_NIL__384;
let save_STARINNER_LIST_PSTAR__383;
let L_TAIL__382;
let L_HEAD__381;
let L_C__379;
let L_STREAM__378;
L_STREAM__378=arguments[0];
L_C__379=arguments[1];
{
L_HEAD__381=lisp.values1(lisp.S_nil);
L_TAIL__382=lisp.values1(lisp.S_nil);
save_STARINNER_LIST_PSTAR__383=G_2.value;
G_2.value=lisp.values1(G_5);
try{
BLOCK_NIL__384: for(;;){for(;;){
{
TMP_661=G_28.func(G_5,L_STREAM__378,G_5,lisp.S_nil,G_5);
L_C__385=lisp.values1(TMP_661);
{
TMP_662=lisp.callFunctionWithCallStack(G_311,L_C__385,lisp.makeCharacter(41));
L_G224__386=lisp.values1(TMP_662);
if(lisp.values1(L_G224__386) !== lisp.S_nil){
G_560.func(L_STREAM__378,G_5,lisp.S_nil,G_5);
BLOCK_RESULT_NIL__384=lisp.values1(lisp.S_nil);
break BLOCK_NIL__384;
}else{
{
TMP_663=G_635.func(L_STREAM__378,G_5,lisp.S_nil,G_5);
L_X__388=lisp.values1(TMP_663);
{
TMP_664=lisp.CL_eq(L_X__388,lisp.symbolValue(G_12));
L_G226__389=lisp.values1(TMP_664);
if(lisp.values1(L_G226__389) !== lisp.S_nil){
}else{
{
TMP_665=lisp.CL_eq(L_X__388,lisp.symbolValue(G_6));
L_G227__390=lisp.values1(TMP_665);
if(lisp.values1(L_G227__390) !== lisp.S_nil){
if(lisp.values1(L_HEAD__381) !== lisp.S_nil){
}else{
G_17.func(G_8.func(lisp.codeArrayToString([100, 111, 116, 32, 101, 114, 114, 111, 114])));
}
{
L_G228__391=lisp.values1(L_TAIL__382);
TMP_666=G_635.func(L_STREAM__378,G_5,lisp.S_nil,G_5);
L_G_STORE229__392=lisp.values1(TMP_666);
lisp.callFunctionWithCallStack(G_667,L_G_STORE229__392,L_G228__391);
}
TMP_668=G_28.func(G_5,L_STREAM__378,G_5,lisp.S_nil,G_5);
TMP_669=lisp.callFunctionWithCallStack(G_311,TMP_668,lisp.makeCharacter(41));
if(lisp.values1(TMP_669) !== lisp.S_nil){
}else{
G_17.func(G_8.func(lisp.codeArrayToString([100, 111, 116, 32, 101, 114, 114, 111, 114])));
}
G_560.func(L_STREAM__378,G_5,lisp.S_nil,G_5);
BLOCK_RESULT_NIL__384=lisp.values1(lisp.S_nil);
break BLOCK_NIL__384;
}else{
{
TMP_670=lisp.callFunctionWithCallStack(G_31,L_TAIL__382);
L_G230__393=lisp.values1(TMP_670);
if(lisp.values1(L_G230__393) !== lisp.S_nil){
{
{
TMP_671=lisp.callFunctionWithCallStack(G_88,L_X__388);
L_G232__394=lisp.values1(TMP_671);
L_TAIL__382=(TMP_672=lisp.values1(L_G232__394));
}
L_G231__395=lisp.values1(lisp.values1(TMP_672));
L_HEAD__381=lisp.values1(L_G231__395);
}
}else{
{
L_G234__397=lisp.values1(L_TAIL__382);
TMP_673=lisp.callFunctionWithCallStack(G_88,L_X__388);
L_G_STORE235__398=lisp.values1(TMP_673);
lisp.callFunctionWithCallStack(G_667,L_G_STORE235__398,L_G234__397);
}
{
TMP_674=lisp.callFunctionWithCallStack(G_255,L_TAIL__382);
L_G236__399=lisp.values1(TMP_674);
L_TAIL__382=lisp.values1(L_G236__399);
}
}
}
}
}
}
}
}
}
}
}
continue;
break;
}
BLOCK_RESULT_NIL__384=lisp.values1(lisp.S_nil);
break;
}
}finally{
G_2.value=save_STARINNER_LIST_PSTAR__383;
}
}
return lisp.values1(L_HEAD__381);
});
CL_COMMON_LISP_CONS_READER=lisp.values1(F_CONS_READER_660);
let F_READ_RIGHT_PAREN_675;
F_READ_RIGHT_PAREN_675=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_207, arguments.length);
}
let TMP_676;
let L_C__401;
let L_STREAM__400;
L_STREAM__400=arguments[0];
L_C__401=arguments[1];
TMP_676=G_17.func(G_8.func(lisp.codeArrayToString([117, 110, 109, 97, 116, 99, 104, 101, 100, 32, 99, 108, 111, 115, 101, 32, 112, 97, 114, 101, 110, 116, 104, 101, 115, 105, 115])));
return TMP_676;
});
CL_COMMON_LISP_READ_RIGHT_PAREN=lisp.values1(F_READ_RIGHT_PAREN_675);
let F_QUOTE_READER_677;
F_QUOTE_READER_677=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_208, arguments.length);
}
let TMP_680;
let TMP_679;
let L_C__404;
let L_STREAM__403;
L_STREAM__403=arguments[0];
L_C__404=arguments[1];
TMP_679=G_635.func(L_STREAM__403,G_5,lisp.S_nil,G_5);
TMP_680=lisp.callFunctionWithCallStack(G_88,G_678,TMP_679);
return TMP_680;
});
CL_COMMON_LISP_QUOTE_READER=lisp.values1(F_QUOTE_READER_677);
let F_BACKQUOTE_READER_681;
F_BACKQUOTE_READER_681=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_209, arguments.length);
}
let TMP_684;
let TMP_683;
let L_C__407;
let L_STREAM__406;
L_STREAM__406=arguments[0];
L_C__407=arguments[1];
TMP_683=G_635.func(L_STREAM__406,G_5,lisp.S_nil,G_5);
TMP_684=lisp.callFunctionWithCallStack(G_88,G_682,TMP_683);
return TMP_684;
});
CL_COMMON_LISP_BACKQUOTE_READER=lisp.values1(F_BACKQUOTE_READER_681);
let F_UNQUOTE_READER_685;
F_UNQUOTE_READER_685=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_210, arguments.length);
}
let TMP_699;
let TMP_698;
let TMP_696;
let TMP_695;
let TMP_693;
let L_G238__414;
let TMP_692;
let TMP_691;
let TMP_690;
let TMP_688;
let L_G237__413;
let TMP_687;
let L_LOOKAHEAD__412;
let TMP_686;
let L_C__410;
let L_STREAM__409;
L_STREAM__409=arguments[0];
L_C__410=arguments[1];
{
TMP_686=G_28.func(lisp.S_nil,L_STREAM__409,G_5,lisp.S_nil,G_5);
L_LOOKAHEAD__412=lisp.values1(TMP_686);
{
TMP_687=lisp.callFunctionWithCallStack(G_311,lisp.makeCharacter(64),L_LOOKAHEAD__412);
L_G237__413=lisp.values1(TMP_687);
if(lisp.values1(L_G237__413) !== lisp.S_nil){
G_560.func(L_STREAM__409,G_5,lisp.S_nil,G_5);
TMP_690=G_635.func(L_STREAM__409,G_5,lisp.S_nil,G_5);
TMP_691=lisp.callFunctionWithCallStack(G_88,G_689,TMP_690);
TMP_688=TMP_691;
}else{
{
TMP_692=lisp.callFunctionWithCallStack(G_311,lisp.makeCharacter(46),L_LOOKAHEAD__412);
L_G238__414=lisp.values1(TMP_692);
if(lisp.values1(L_G238__414) !== lisp.S_nil){
G_560.func(L_STREAM__409,G_5,lisp.S_nil,G_5);
TMP_695=G_635.func(L_STREAM__409,G_5,lisp.S_nil,G_5);
TMP_696=lisp.callFunctionWithCallStack(G_88,G_694,TMP_695);
TMP_693=TMP_696;
}else{
TMP_698=G_635.func(L_STREAM__409,G_5,lisp.S_nil,G_5);
TMP_699=lisp.callFunctionWithCallStack(G_88,G_697,TMP_698);
TMP_693=TMP_699;
}
}
TMP_688=TMP_693;
}
}
}
return TMP_688;
});
CL_COMMON_LISP_UNQUOTE_READER=lisp.values1(F_UNQUOTE_READER_685);
let F_LINE_COMMENT_READER_700;
F_LINE_COMMENT_READER_700=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_211, arguments.length);
}
let TMP_701;
let L_C__417;
let L_STREAM__416;
L_STREAM__416=arguments[0];
L_C__417=arguments[1];
G_28.func(lisp.makeCharacter(10),L_STREAM__416,G_5,lisp.S_nil,G_5);
TMP_701=lisp.CL_values();
return TMP_701;
});
CL_COMMON_LISP_LINE_COMMENT_READER=lisp.values1(F_LINE_COMMENT_READER_700);
let F_STRING_READER_702;
F_STRING_READER_702=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_212, arguments.length);
}
let TMP_708;
let TMP_707;
let L_G248__427;
let TMP_706;
let L_G247__426;
let TMP_705;
let L_G246__425;
let L_C__424;
let TMP_704;
let BLOCK_RESULT_NIL__423;
let L_OUT__422;
let TMP_703;
let L_C__420;
let L_STREAM__419;
L_STREAM__419=arguments[0];
L_C__420=arguments[1];
{
TMP_703=lisp.callFunctionWithCallStack(G_558);
L_OUT__422=lisp.values1(TMP_703);
BLOCK_NIL__423: for(;;){for(;;){
{
TMP_704=G_560.func(L_STREAM__419,G_5,lisp.S_nil,G_5);
L_C__424=lisp.values1(TMP_704);
{
L_G246__425=lisp.values1(L_C__424);
{
TMP_705=lisp.callFunctionWithCallStack(G_49,L_G246__425,lisp.makeCharacter(34));
L_G247__426=lisp.values1(TMP_705);
if(lisp.values1(L_G247__426) !== lisp.S_nil){
BLOCK_RESULT_NIL__423=lisp.values1(lisp.S_nil);
break BLOCK_NIL__423;
}else{
{
TMP_706=lisp.callFunctionWithCallStack(G_49,L_G246__425,lisp.makeCharacter(92));
L_G248__427=lisp.values1(TMP_706);
if(lisp.values1(L_G248__427) !== lisp.S_nil){
TMP_707=G_560.func(L_STREAM__419,G_5,lisp.S_nil,G_5);
lisp.callFunctionWithCallStack(G_563,TMP_707,L_OUT__422);
}else{
lisp.callFunctionWithCallStack(G_563,L_C__424,L_OUT__422);
}
}
}
}
}
}
continue;
break;
}
BLOCK_RESULT_NIL__423=lisp.values1(lisp.S_nil);
break;
}
TMP_708=lisp.callFunctionWithCallStack(G_565,L_OUT__422);
}
return TMP_708;
});
CL_COMMON_LISP_STRING_READER=lisp.values1(F_STRING_READER_702);
let F_READ_DISPATCH_MACRO_CHARACTER_709;
F_READ_DISPATCH_MACRO_CHARACTER_709=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_265, arguments.length);
}
let TMP_722;
let L_FN__438;
let TMP_721;
let TMP_720;
let L_ARG__437;
let TMP_719;
let TMP_718;
let L_G256__436;
let TMP_717;
let TMP_716;
let L_C__435;
let TMP_715;
let BLOCK_RESULT_NIL__434;
let L_OUT__433;
let TMP_714;
let TMP_713;
let TMP_712;
let L_SUB_CHAR__432;
let TMP_711;
let TMP_710;
let L_DISP_CHAR__430;
let L_STREAM__429;
L_STREAM__429=arguments[0];
L_DISP_CHAR__430=arguments[1];
{
TMP_710=G_560.func(L_STREAM__429,G_5,lisp.S_nil,G_5);
TMP_711=lisp.callFunctionWithCallStack(G_275,TMP_710);
L_SUB_CHAR__432=lisp.values1(TMP_711);
TMP_712=lisp.callFunctionWithCallStack(G_273,L_SUB_CHAR__432);
if(lisp.values1(TMP_712) !== lisp.S_nil){
{
TMP_714=lisp.callFunctionWithCallStack(G_558);
L_OUT__433=lisp.values1(TMP_714);
lisp.callFunctionWithCallStack(G_563,L_SUB_CHAR__432,L_OUT__433);
BLOCK_NIL__434: for(;;){{
TMP_715=G_28.func(lisp.S_nil,L_STREAM__429,G_5,lisp.S_nil,G_5);
L_C__435=lisp.values1(TMP_715);
for(;;){
TMP_716=lisp.callFunctionWithCallStack(G_273,L_C__435);
if(lisp.values1(TMP_716) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_563,L_C__435,L_OUT__433);
}else{
BLOCK_RESULT_NIL__434=lisp.values1(lisp.S_nil);
break BLOCK_NIL__434;
}
{
TMP_717=G_560.func(L_STREAM__429,G_5,lisp.S_nil,G_5);
L_G256__436=lisp.values1(TMP_717);
L_C__435=lisp.values1(L_G256__436);
}
continue;
break;
}
}
BLOCK_RESULT_NIL__434=lisp.values1(lisp.S_nil);
break;
}
TMP_718=lisp.callFunctionWithCallStack(G_565,L_OUT__433);
}
TMP_719=G_321.func(lisp.values1(lisp.values1(TMP_718)));
TMP_713=lisp.values1(TMP_719);
}else{
TMP_713=lisp.values1(lisp.S_nil);
}
L_ARG__437=lisp.values1(TMP_713);
if(lisp.values1(L_ARG__437) !== lisp.S_nil){
TMP_720=G_560.func(L_STREAM__429,G_5,lisp.S_nil,G_5);
L_SUB_CHAR__432=lisp.values1(TMP_720);
}else{
}
{
TMP_721=G_277.func(L_DISP_CHAR__430,L_SUB_CHAR__432);
L_FN__438=lisp.values1(TMP_721);
if(lisp.values1(L_FN__438) !== lisp.S_nil){
}else{
G_17.func(G_8.func(lisp.codeArrayToString([110, 111, 32, 100, 105, 115, 112, 97, 116, 99, 104, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 100, 101, 102, 105, 110, 101, 100, 32, 102, 111, 114, 32, 126, 83])),L_SUB_CHAR__432);
}
TMP_722=lisp.CL_funcall(lisp.values1(L_FN__438),L_STREAM__429,L_SUB_CHAR__432,L_ARG__437);
}
}
return TMP_722;
});
CL_COMMON_LISP_READ_DISPATCH_MACRO_CHARACTER=lisp.values1(F_READ_DISPATCH_MACRO_CHARACTER_709);
let F_CHARACTER_READER_723;
F_CHARACTER_READER_723=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_214, arguments.length);
}
let TMP_746;
let TMP_745;
let L_G264__453;
let TMP_744;
let TMP_743;
let L_G263__452;
let TMP_742;
let TMP_741;
let L_G262__451;
let TMP_740;
let TMP_739;
let L_G261__450;
let TMP_738;
let TMP_737;
let L_G260__449;
let TMP_736;
let TMP_735;
let L_G259__448;
let TMP_734;
let TMP_733;
let L_G258__447;
let TMP_732;
let TMP_731;
let L_G257__446;
let TMP_729;
let L_NAME__445;
let TMP_728;
let TMP_727;
let TMP_726;
let L_NEXT_CHAR__444;
let TMP_725;
let L_CHAR__443;
let TMP_724;
let L_ARG__441;
let L_SUB_CHAR__440;
let L_STREAM__439;
L_STREAM__439=arguments[0];
L_SUB_CHAR__440=arguments[1];
L_ARG__441=arguments[2];
{
TMP_724=G_560.func(L_STREAM__439,G_5,lisp.S_nil,G_5);
L_CHAR__443=lisp.values1(TMP_724);
TMP_725=G_28.func(lisp.S_nil,L_STREAM__439,lisp.S_nil,lisp.S_nil,G_5);
L_NEXT_CHAR__444=lisp.values1(TMP_725);
TMP_726=G_571.func(L_NEXT_CHAR__444);
if(lisp.values1(TMP_726) !== lisp.S_nil){
TMP_727=lisp.values1(L_CHAR__443);
}else{
{
TMP_728=G_609.func(L_STREAM__439,L_CHAR__443,lisp.S_nil);
L_NAME__445=lisp.values1(TMP_728);
{
TMP_729=lisp.callFunctionWithCallStack(G_730,L_NAME__445,G_8.func(lisp.codeArrayToString([110, 101, 119, 108, 105, 110, 101])));
L_G257__446=lisp.values1(TMP_729);
if(lisp.values1(L_G257__446) !== lisp.S_nil){
TMP_731=lisp.values1(lisp.makeCharacter(10));
}else{
{
TMP_732=lisp.callFunctionWithCallStack(G_730,L_NAME__445,G_8.func(lisp.codeArrayToString([115, 112, 97, 99, 101])));
L_G258__447=lisp.values1(TMP_732);
if(lisp.values1(L_G258__447) !== lisp.S_nil){
TMP_733=lisp.values1(lisp.makeCharacter(32));
}else{
{
TMP_734=lisp.callFunctionWithCallStack(G_730,L_NAME__445,G_8.func(lisp.codeArrayToString([114, 117, 98, 111, 117, 116])));
L_G259__448=lisp.values1(TMP_734);
if(lisp.values1(L_G259__448) !== lisp.S_nil){
TMP_735=lisp.values1(lisp.makeCharacter(127));
}else{
{
TMP_736=lisp.callFunctionWithCallStack(G_730,L_NAME__445,G_8.func(lisp.codeArrayToString([112, 97, 103, 101])));
L_G260__449=lisp.values1(TMP_736);
if(lisp.values1(L_G260__449) !== lisp.S_nil){
TMP_737=lisp.values1(lisp.makeCharacter(12));
}else{
{
TMP_738=lisp.callFunctionWithCallStack(G_730,L_NAME__445,G_8.func(lisp.codeArrayToString([116, 97, 98])));
L_G261__450=lisp.values1(TMP_738);
if(lisp.values1(L_G261__450) !== lisp.S_nil){
TMP_739=lisp.values1(lisp.makeCharacter(9));
}else{
{
TMP_740=lisp.callFunctionWithCallStack(G_730,L_NAME__445,G_8.func(lisp.codeArrayToString([98, 97, 99, 107, 115, 112, 97, 99, 101])));
L_G262__451=lisp.values1(TMP_740);
if(lisp.values1(L_G262__451) !== lisp.S_nil){
TMP_741=lisp.values1(lisp.makeCharacter(8));
}else{
{
TMP_742=lisp.callFunctionWithCallStack(G_730,L_NAME__445,G_8.func(lisp.codeArrayToString([114, 101, 116, 117, 114, 110])));
L_G263__452=lisp.values1(TMP_742);
if(lisp.values1(L_G263__452) !== lisp.S_nil){
TMP_743=lisp.values1(lisp.makeCharacter(13));
}else{
{
TMP_744=lisp.callFunctionWithCallStack(G_730,L_NAME__445,G_8.func(lisp.codeArrayToString([108, 105, 110, 101, 102, 101, 101, 100])));
L_G264__453=lisp.values1(TMP_744);
if(lisp.values1(L_G264__453) !== lisp.S_nil){
TMP_745=lisp.values1(lisp.makeCharacter(10));
}else{
TMP_746=G_17.func(G_8.func(lisp.codeArrayToString([117, 110, 114, 101, 99, 111, 103, 110, 105, 122, 101, 100, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 32, 110, 97, 109, 101, 58, 32, 126, 83])),L_NAME__445);
TMP_745=TMP_746;
}
}
TMP_743=TMP_745;
}
}
TMP_741=TMP_743;
}
}
TMP_739=TMP_741;
}
}
TMP_737=TMP_739;
}
}
TMP_735=TMP_737;
}
}
TMP_733=TMP_735;
}
}
TMP_731=TMP_733;
}
}
}
TMP_727=TMP_731;
}
}
return TMP_727;
});
CL_COMMON_LISP_CHARACTER_READER=lisp.values1(F_CHARACTER_READER_723);
let F_FUNCTION_READER_747;
F_FUNCTION_READER_747=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_216, arguments.length);
}
let TMP_750;
let TMP_749;
let L_ARG__457;
let L_SUB_CHAR__456;
let L_STREAM__455;
L_STREAM__455=arguments[0];
L_SUB_CHAR__456=arguments[1];
L_ARG__457=arguments[2];
TMP_749=G_635.func(L_STREAM__455,G_5,lisp.S_nil,G_5);
TMP_750=lisp.callFunctionWithCallStack(G_88,G_748,TMP_749);
return TMP_750;
});
CL_COMMON_LISP_FUNCTION_READER=lisp.values1(F_FUNCTION_READER_747);
let F_ARRAY_READER_751;
F_ARRAY_READER_751=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_217, arguments.length);
}
let TMP_756;
let TMP_754;
let TMP_753;
let L_ARG__461;
let L_SUB_CHAR__460;
let L_STREAM__459;
L_STREAM__459=arguments[0];
L_SUB_CHAR__460=arguments[1];
L_ARG__461=arguments[2];
TMP_753=lisp.CL_symbolFunction(G_752);
TMP_754=G_755.func(lisp.makeCharacter(41),L_STREAM__459,G_5);
TMP_756=lisp.callFunctionWithCallStack(G_757,TMP_753,TMP_754);
return TMP_756;
});
CL_COMMON_LISP_ARRAY_READER=lisp.values1(F_ARRAY_READER_751);
let F_UNINTERN_SYMBOL_READER_758;
F_UNINTERN_SYMBOL_READER_758=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_218, arguments.length);
}
let TMP_763;
let TMP_762;
let L_TOKEN__467;
let TMP_761;
let TMP_760;
let TMP_759;
let L_ARG__465;
let L_SUB_CHAR__464;
let L_STREAM__463;
L_STREAM__463=arguments[0];
L_SUB_CHAR__464=arguments[1];
L_ARG__465=arguments[2];
{
TMP_759=G_560.func(L_STREAM__463,G_5,lisp.S_nil,G_5);
TMP_760=G_142.func(lisp.symbolValue(G_200));
TMP_761=G_609.func(L_STREAM__463,TMP_759,TMP_760);
L_TOKEN__467=lisp.values1(TMP_761);
TMP_762=G_292.func(L_TOKEN__467);
if(lisp.values1(TMP_762) !== lisp.S_nil){
G_17.func(G_8.func(lisp.codeArrayToString([84, 104, 101, 32, 115, 121, 109, 98, 111, 108, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 35, 58, 32, 104, 97, 115, 32, 110, 117, 109, 101, 114, 105, 99, 32, 115, 121, 110, 116, 97, 120, 58, 32, 126, 83])),L_TOKEN__467);
}else{
}
TMP_763=lisp.callFunctionWithCallStack(G_764,L_TOKEN__467);
}
return TMP_763;
});
CL_COMMON_LISP_UNINTERN_SYMBOL_READER=lisp.values1(F_UNINTERN_SYMBOL_READER_758);
let F_FEATUREP_765;
F_FEATUREP_765=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_766, arguments.length);
}
let TMP_811;
let TMP_810;
let TMP_809;
let TMP_808;
let TMP_807;
let TMP_804;
let L_G275__479;
let TMP_803;
let TMP_802;
let TMP_800;
let TMP_799;
let TMP_798;
let TMP_797;
let L_G273__477;
let TMP_796;
let TMP_792;
let TMP_790;
let TMP_789;
let TMP_788;
let L_G272__476;
let TMP_787;
let TMP_784;
let TMP_783;
let TMP_781;
let TMP_780;
let TMP_779;
let L_G270__474;
let TMP_778;
let TMP_777;
let TMP_776;
let TMP_775;
let L_G269__473;
let TMP_773;
let TMP_772;
let L_G268__472;
let TMP_771;
let L_G267__471;
let TMP_769;
let TMP_768;
let L_G266__470;
let TMP_767;
let L_TEST__468;
L_TEST__468=arguments[0];
{
TMP_767=lisp.CL_consp(L_TEST__468);
L_G266__470=lisp.values1(TMP_767);
if(lisp.values1(L_G266__470) !== lisp.S_nil){
{
TMP_769=lisp.callFunctionWithCallStack(G_652,L_TEST__468);
L_G267__471=lisp.values1(TMP_769);
{
TMP_771=lisp.callFunctionWithCallStack(G_296,L_G267__471,lisp.makeCons(G_770, lisp.makeCons(G_47, lisp.S_nil)));
L_G268__472=lisp.values1(TMP_771);
if(lisp.values1(L_G268__472) !== lisp.S_nil){
{
TMP_773=lisp.callFunctionWithCallStack(G_774,L_TEST__468);
L_G269__473=lisp.values1(TMP_773);
if(lisp.values1(L_G269__473) !== lisp.S_nil){
TMP_776=G_17.func(G_8.func(lisp.codeArrayToString([116, 111, 111, 32, 109, 97, 110, 121, 32, 115, 117, 98, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 115, 32, 105, 110, 32, 102, 101, 97, 116, 117, 114, 101, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 58, 32, 126, 83])),L_TEST__468);
TMP_775=TMP_776;
}else{
{
TMP_777=lisp.callFunctionWithCallStack(G_255,L_TEST__468);
TMP_778=lisp.callFunctionWithCallStack(G_31,TMP_777);
L_G270__474=lisp.values1(TMP_778);
if(lisp.values1(L_G270__474) !== lisp.S_nil){
TMP_780=G_17.func(G_8.func(lisp.codeArrayToString([116, 111, 111, 32, 102, 101, 119, 32, 115, 117, 98, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 115, 32, 105, 110, 32, 102, 101, 97, 116, 117, 114, 101, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 58, 32, 126, 83])),L_TEST__468);
TMP_779=TMP_780;
}else{
TMP_781=lisp.callFunctionWithCallStack(G_782,L_TEST__468);
TMP_783=G_766.func(TMP_781);
TMP_784=lisp.callFunctionWithCallStack(G_47,TMP_783);
TMP_779=TMP_784;
}
}
TMP_775=TMP_779;
}
}
TMP_772=TMP_775;
}else{
{
TMP_787=lisp.callFunctionWithCallStack(G_296,L_G267__471,lisp.makeCons(G_785, lisp.makeCons(G_786, lisp.S_nil)));
L_G272__476=lisp.values1(TMP_787);
if(lisp.values1(L_G272__476) !== lisp.S_nil){
TMP_789=lisp.CL_symbolFunction(G_766);
TMP_790=lisp.callFunctionWithCallStack(G_791,L_TEST__468);
TMP_792=lisp.callFunctionWithCallStack(G_793,TMP_789,TMP_790);
TMP_788=TMP_792;
}else{
{
TMP_796=lisp.callFunctionWithCallStack(G_296,L_G267__471,lisp.makeCons(G_794, lisp.makeCons(G_795, lisp.S_nil)));
L_G273__477=lisp.values1(TMP_796);
if(lisp.values1(L_G273__477) !== lisp.S_nil){
TMP_798=lisp.CL_symbolFunction(G_766);
TMP_799=lisp.callFunctionWithCallStack(G_791,L_TEST__468);
TMP_800=lisp.callFunctionWithCallStack(G_801,TMP_798,TMP_799);
TMP_797=TMP_800;
}else{
TMP_802=G_17.func(G_8.func(lisp.codeArrayToString([117, 110, 107, 110, 111, 119, 110, 32, 111, 112, 101, 114, 97, 116, 111, 114, 32, 105, 110, 32, 102, 101, 97, 116, 117, 114, 101, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 58, 32, 126, 83, 46])),L_TEST__468);
TMP_797=TMP_802;
}
}
TMP_788=TMP_797;
}
}
TMP_772=TMP_788;
}
}
}
TMP_768=TMP_772;
}else{
{
TMP_803=lisp.CL_symbolp(L_TEST__468);
L_G275__479=lisp.values1(TMP_803);
if(lisp.values1(L_G275__479) !== lisp.S_nil){
TMP_807=lisp.CL_symbolFunction(G_484);
TMP_808=lisp.callFunctionWithCallStack(G_296,L_TEST__468,lisp.symbolValue(G_805),G_806,TMP_807);
TMP_809=lisp.callFunctionWithCallStack(G_31,TMP_808);
TMP_810=lisp.callFunctionWithCallStack(G_47,TMP_809);
TMP_804=TMP_810;
}else{
TMP_811=G_17.func(G_8.func(lisp.codeArrayToString([105, 110, 118, 97, 108, 105, 100, 32, 102, 101, 97, 116, 117, 114, 101, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 58, 32, 126, 83])),L_TEST__468);
TMP_804=TMP_811;
}
}
TMP_768=TMP_804;
}
}
return TMP_768;
});
CL_COMMON_LISP_FEATUREP=lisp.values1(F_FEATUREP_765);
let F_SHARP_PLUS_MINUS_READER_812;
F_SHARP_PLUS_MINUS_READER_812=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_219, arguments.length);
}
let TMP_821;
let TMP_820;
let TMP_819;
let TMP_818;
let TMP_817;
let L_FORM__487;
let TMP_816;
let L_TEST__486;
let TMP_815;
let save_STARPACKAGESTAR__485;
let TMP_813;
let L_ARG__483;
let L_SUB_CHAR__482;
let L_STREAM__481;
L_STREAM__481=arguments[0];
L_SUB_CHAR__482=arguments[1];
L_ARG__483=arguments[2];
{
{
TMP_813=lisp.callFunctionWithCallStack(G_500,G_531);
save_STARPACKAGESTAR__485=G_814.value;
G_814.value=lisp.values1(TMP_813);
try{
TMP_815=G_635.func(L_STREAM__481,G_5,lisp.S_nil,G_5);
}finally{
G_814.value=save_STARPACKAGESTAR__485;
}
}
L_TEST__486=lisp.values1(lisp.values1(TMP_815));
TMP_816=G_635.func(L_STREAM__481,G_5,lisp.S_nil,G_5);
L_FORM__487=lisp.values1(TMP_816);
TMP_817=G_766.func(L_TEST__486);
if(lisp.values1(TMP_817) !== lisp.S_nil){
TMP_818=lisp.values1(lisp.makeCharacter(43));
}else{
TMP_818=lisp.values1(lisp.makeCharacter(45));
}
TMP_819=lisp.callFunctionWithCallStack(G_311,L_SUB_CHAR__482,TMP_818);
if(lisp.values1(TMP_819) !== lisp.S_nil){
TMP_820=lisp.values1(L_FORM__487);
}else{
TMP_821=lisp.CL_values();
TMP_820=TMP_821;
}
}
return TMP_820;
});
CL_COMMON_LISP_SHARP_PLUS_MINUS_READER=lisp.values1(F_SHARP_PLUS_MINUS_READER_812);
let F_SUBST_SHARP_EQUAL_822;
F_SUBST_SHARP_EQUAL_822=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_823, arguments.length);
}
let TMP_849;
let F_F__491;
let TMP_826;
let L_VISIT__490;
let TMP_825;
let L_TREE__488;
L_TREE__488=arguments[0];
{
TMP_825=lisp.callFunctionWithCallStack(G_135,G_806,G_824);
L_VISIT__490=lisp.values1(TMP_825);
{
TMP_826=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G284__502;
let TMP_847;
let TMP_845;
let TMP_844;
let TMP_842;
let TMP_841;
let L_CDR__501;
let TMP_840;
let TMP_839;
let L_CAR__500;
let TMP_838;
let TMP_837;
let L_G283__499;
let TMP_836;
let L_G281__497;
let L_G280__496;
let TMP_835;
let L_G278__494;
let TMP_834;
let TMP_833;
let TMP_832;
let L_G277__493;
let TMP_831;
let TMP_830;
let TMP_829;
let TMP_828;
let TMP_827;
let L_TREE__492;
L_TREE__492=arguments[0];
{
TMP_827=G_58.func(L_TREE__492);
if(lisp.values1(TMP_827) !== lisp.S_nil){
TMP_829=G_96.func(L_TREE__492);
TMP_830=lisp.CL_eq(TMP_829,lisp.symbolValue(G_51));
TMP_831=lisp.callFunctionWithCallStack(G_47,TMP_830);
TMP_828=lisp.values1(TMP_831);
}else{
TMP_828=lisp.values1(lisp.S_nil);
}
L_G277__493=lisp.values1(TMP_828);
if(lisp.values1(L_G277__493) !== lisp.S_nil){
TMP_833=G_96.func(L_TREE__492);
TMP_832=TMP_833;
}else{
{
TMP_834=lisp.callFunctionWithCallStack(G_250,L_TREE__492,L_VISIT__490);
L_G278__494=lisp.values1(TMP_834);
if(lisp.values1(L_G278__494) !== lisp.S_nil){
TMP_835=lisp.values1(L_TREE__492);
}else{
{
L_G280__496=lisp.values1(L_TREE__492);
L_G281__497=lisp.values1(L_VISIT__490);
lisp.callFunctionWithCallStack(G_261,G_5,L_G280__496,L_G281__497);
}
{
TMP_836=lisp.CL_consp(L_TREE__492);
L_G283__499=lisp.values1(TMP_836);
if(lisp.values1(L_G283__499) !== lisp.S_nil){
{
TMP_837=lisp.callFunctionWithCallStack(G_253,L_TREE__492);
TMP_838=F_F__491(TMP_837);
L_CAR__500=lisp.values1(TMP_838);
TMP_839=lisp.callFunctionWithCallStack(G_255,L_TREE__492);
TMP_840=F_F__491(TMP_839);
L_CDR__501=lisp.values1(TMP_840);
TMP_841=lisp.callFunctionWithCallStack(G_253,L_TREE__492);
TMP_842=lisp.CL_eq(L_CAR__500,TMP_841);
if(lisp.values1(TMP_842) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_843,L_TREE__492,L_CAR__500);
}
TMP_844=lisp.callFunctionWithCallStack(G_255,L_TREE__492);
TMP_845=lisp.CL_eq(L_CDR__501,TMP_844);
if(lisp.values1(TMP_845) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_846,L_TREE__492,L_CDR__501);
}
}
}else{
{
TMP_847=lisp.callFunctionWithCallStack(G_848,L_TREE__492);
L_G284__502=lisp.values1(TMP_847);
if(lisp.values1(L_G284__502) !== lisp.S_nil){
G_17.func(G_8.func(lisp.codeArrayToString([115, 117, 98, 115, 116, 45, 115, 104, 97, 114, 112, 45, 101, 113, 117, 97, 108, 32, 116, 114, 97, 112])));
}else{
}
}
}
}
TMP_835=lisp.values1(L_TREE__492);
}
}
TMP_832=TMP_835;
}
}
return TMP_832;
});
F_F__491=lisp.values1(TMP_826);
TMP_849=F_F__491(L_TREE__488);
}
}
return TMP_849;
});
CL_COMMON_LISP_SUBST_SHARP_EQUAL=lisp.values1(F_SUBST_SHARP_EQUAL_822);
let F_SHARP_EQUAL_READER_850;
F_SHARP_EQUAL_READER_850=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_220, arguments.length);
}
let TMP_855;
let L_G_STORE289__513;
let L_G288__512;
let TMP_854;
let L_FORM__511;
let TMP_853;
let L_G_STORE287__510;
let L_G286__509;
let L_G285__508;
let L_SHARP_EQUAL__507;
let TMP_852;
let TMP_851;
let L_LABEL__505;
let L_SUB_CHAR__504;
let L_STREAM__503;
L_STREAM__503=arguments[0];
L_SUB_CHAR__504=arguments[1];
L_LABEL__505=arguments[2];
if(lisp.values1(L_LABEL__505) !== lisp.S_nil){
}else{
G_17.func(G_8.func(lisp.codeArrayToString([82, 101, 97, 100, 101, 114, 32, 100, 105, 115, 112, 97, 116, 99, 104, 32, 109, 97, 99, 114, 111, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 32, 35, 61, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 97, 110, 32, 97, 114, 103, 117, 109, 101, 110, 116, 46])));
}
TMP_851=lisp.callFunctionWithCallStack(G_250,L_LABEL__505,lisp.symbolValue(G_11));
if(lisp.values1(TMP_851) !== lisp.S_nil){
G_17.func(G_8.func(lisp.codeArrayToString([77, 117, 108, 116, 105, 112, 108, 121, 32, 100, 101, 102, 105, 110, 101, 100, 32, 108, 97, 98, 101, 108, 58, 32, 35, 126, 68, 61])),L_LABEL__505);
}else{
}
{
TMP_852=G_63.func(G_64,L_LABEL__505);
L_SHARP_EQUAL__507=lisp.values1(TMP_852);
{
L_G285__508=lisp.values1(L_LABEL__505);
L_G286__509=lisp.values1(lisp.symbolValue(G_11));
L_G_STORE287__510=lisp.values1(L_SHARP_EQUAL__507);
lisp.callFunctionWithCallStack(G_261,L_G_STORE287__510,L_G285__508,L_G286__509);
}
TMP_853=G_635.func(L_STREAM__503,G_5,lisp.S_nil,G_5);
L_FORM__511=lisp.values1(lisp.values1(TMP_853));
TMP_854=lisp.CL_eq(L_SHARP_EQUAL__507,L_FORM__511);
if(lisp.values1(TMP_854) !== lisp.S_nil){
G_17.func(G_8.func(lisp.codeArrayToString([77, 117, 115, 116, 32, 108, 97, 98, 101, 108, 32, 115, 111, 109, 101, 116, 104, 105, 110, 103, 32, 109, 111, 114, 101, 32, 116, 104, 97, 110, 32, 106, 117, 115, 116, 32, 35, 126, 68, 35])),L_LABEL__505);
}else{
}
{
L_G288__512=lisp.values1(L_SHARP_EQUAL__507);
L_G_STORE289__513=lisp.values1(L_FORM__511);
lisp.callFunctionWithCallStack(G_99,L_G_STORE289__513,L_G288__512);
}
TMP_855=G_823.func(L_FORM__511);
}
return TMP_855;
});
CL_COMMON_LISP_SHARP_EQUAL_READER=lisp.values1(F_SHARP_EQUAL_READER_850);
let F_SHARP_SHARP_READER_856;
F_SHARP_SHARP_READER_856=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_221, arguments.length);
}
let TMP_864;
let TMP_863;
let L_G291__520;
let TMP_862;
let TMP_861;
let TMP_860;
let TMP_859;
let L_G290__519;
let TMP_858;
let L_SHARP_EQUAL__518;
let TMP_857;
let L_LABEL__516;
let L_SUB_CHAR__515;
let L_STREAM__514;
L_STREAM__514=arguments[0];
L_SUB_CHAR__515=arguments[1];
L_LABEL__516=arguments[2];
if(lisp.values1(L_LABEL__516) !== lisp.S_nil){
}else{
G_17.func(G_8.func(lisp.codeArrayToString([82, 101, 97, 100, 101, 114, 32, 100, 105, 115, 112, 97, 116, 99, 104, 32, 109, 97, 99, 114, 111, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 32, 35, 35, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 97, 110, 32, 97, 114, 103, 117, 109, 101, 110, 116, 46])));
}
{
TMP_857=lisp.callFunctionWithCallStack(G_250,L_LABEL__516,lisp.symbolValue(G_11));
L_SHARP_EQUAL__518=lisp.values1(TMP_857);
{
TMP_858=lisp.callFunctionWithCallStack(G_31,L_SHARP_EQUAL__518);
L_G290__519=lisp.values1(TMP_858);
if(lisp.values1(L_G290__519) !== lisp.S_nil){
TMP_860=G_17.func(G_8.func(lisp.codeArrayToString([82, 101, 102, 101, 114, 101, 110, 99, 101, 32, 116, 111, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 32, 108, 97, 98, 101, 108, 32, 35, 126, 68, 35])),L_LABEL__516);
TMP_859=TMP_860;
}else{
{
TMP_861=G_96.func(L_SHARP_EQUAL__518);
TMP_862=lisp.CL_eq(TMP_861,lisp.symbolValue(G_51));
L_G291__520=lisp.values1(TMP_862);
if(lisp.values1(L_G291__520) !== lisp.S_nil){
TMP_863=lisp.values1(L_SHARP_EQUAL__518);
}else{
TMP_864=G_96.func(L_SHARP_EQUAL__518);
TMP_863=TMP_864;
}
}
TMP_859=TMP_863;
}
}
}
return TMP_859;
});
CL_COMMON_LISP_SHARP_SHARP_READER=lisp.values1(F_SHARP_SHARP_READER_856);
let F_BIT_VECTOR_READER_865;
F_BIT_VECTOR_READER_865=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_222, arguments.length);
}
let TMP_883;
let TMP_879;
let TMP_877;
let TMP_876;
let L_G307__537;
let TMP_875;
let TMP_874;
let L_G306__536;
let TMP_873;
let TMP_872;
let L_G305__535;
let TMP_871;
let L_G303__533;
let TMP_870;
let L_G302__532;
let TMP_869;
let L_G301__531;
let TMP_868;
let L_G300__530;
let TMP_867;
let L_G299__529;
let L_C__528;
let TMP_866;
let BLOCK_RESULT_NIL__527;
let L_BITS__526;
let L_ARG__524;
let L_SUB_CHAR__523;
let L_STREAM__522;
L_STREAM__522=arguments[0];
L_SUB_CHAR__523=arguments[1];
L_ARG__524=arguments[2];
{
L_BITS__526=lisp.values1(lisp.S_nil);
BLOCK_NIL__527: for(;;){for(;;){
{
TMP_866=G_28.func(lisp.S_nil,L_STREAM__522,lisp.S_nil,lisp.S_nil,G_5);
L_C__528=lisp.values1(TMP_866);
{
L_G299__529=lisp.values1(L_C__528);
{
TMP_867=lisp.callFunctionWithCallStack(G_49,L_G299__529,lisp.makeCharacter(48));
L_G300__530=lisp.values1(TMP_867);
if(lisp.values1(L_G300__530) !== lisp.S_nil){
{
TMP_868=lisp.CL_cons(0,L_BITS__526);
L_G301__531=lisp.values1(TMP_868);
L_BITS__526=lisp.values1(L_G301__531);
}
}else{
{
TMP_869=lisp.callFunctionWithCallStack(G_49,L_G299__529,lisp.makeCharacter(49));
L_G302__532=lisp.values1(TMP_869);
if(lisp.values1(L_G302__532) !== lisp.S_nil){
{
TMP_870=lisp.CL_cons(1,L_BITS__526);
L_G303__533=lisp.values1(TMP_870);
L_BITS__526=lisp.values1(L_G303__533);
}
}else{
{
TMP_871=lisp.callFunctionWithCallStack(G_31,L_C__528);
L_G305__535=lisp.values1(TMP_871);
if(lisp.values1(L_G305__535) !== lisp.S_nil){
TMP_872=lisp.values1(L_G305__535);
}else{
{
TMP_873=G_283.func(L_C__528);
L_G306__536=lisp.values1(TMP_873);
if(lisp.values1(L_G306__536) !== lisp.S_nil){
TMP_874=lisp.values1(L_G306__536);
}else{
{
TMP_875=G_24.func(L_C__528);
L_G307__537=lisp.values1(TMP_875);
if(lisp.values1(L_G307__537) !== lisp.S_nil){
TMP_876=lisp.values1(L_G307__537);
}else{
TMP_876=lisp.values1(lisp.S_nil);
}
}
TMP_874=lisp.values1(lisp.values1(TMP_876));
}
}
TMP_872=lisp.values1(lisp.values1(TMP_874));
}
}
if(lisp.values1(lisp.values1(TMP_872)) !== lisp.S_nil){
BLOCK_RESULT_NIL__527=lisp.values1(lisp.S_nil);
break BLOCK_NIL__527;
}else{
}
}
}
}
}
}
G_560.func(L_STREAM__522,G_5,lisp.S_nil,G_5);
}
continue;
break;
}
BLOCK_RESULT_NIL__527=lisp.values1(lisp.S_nil);
break;
}
TMP_877=lisp.callFunctionWithCallStack(G_878,L_BITS__526);
L_BITS__526=lisp.values1(TMP_877);
TMP_879=lisp.callFunctionWithCallStack(G_302,L_BITS__526);
TMP_883=lisp.callFunctionWithCallStack(G_884,TMP_879,G_880,G_881,G_882,L_BITS__526);
}
return TMP_883;
});
CL_COMMON_LISP_BIT_VECTOR_READER=lisp.values1(F_BIT_VECTOR_READER_865);
let F_BIT_NUMBER_READER_885;
F_BIT_NUMBER_READER_885=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_224, arguments.length);
}
let TMP_902;
let L_G330__559;
let TMP_901;
let TMP_900;
let TMP_899;
let L_B__558;
let TMP_898;
let TMP_897;
let L_G323__557;
let L_DIGIT__555;
let L_N__554;
let TMP_896;
let L_G322__553;
let TMP_895;
let TMP_894;
let L_G321__552;
let TMP_893;
let TMP_892;
let L_G320__551;
let TMP_891;
let L_G318__549;
let TMP_890;
let L_G317__548;
let TMP_889;
let L_G316__547;
let TMP_888;
let L_G315__546;
let TMP_887;
let L_G314__545;
let L_C__544;
let TMP_886;
let BLOCK_RESULT_NIL__543;
let L_BITS__542;
let L_ARG__540;
let L_SUB_CHAR__539;
let L_STREAM__538;
L_STREAM__538=arguments[0];
L_SUB_CHAR__539=arguments[1];
L_ARG__540=arguments[2];
{
L_BITS__542=lisp.values1(lisp.S_nil);
BLOCK_NIL__543: for(;;){for(;;){
{
TMP_886=G_28.func(lisp.S_nil,L_STREAM__538,lisp.S_nil,lisp.S_nil,G_5);
L_C__544=lisp.values1(TMP_886);
{
L_G314__545=lisp.values1(L_C__544);
{
TMP_887=lisp.callFunctionWithCallStack(G_49,L_G314__545,lisp.makeCharacter(48));
L_G315__546=lisp.values1(TMP_887);
if(lisp.values1(L_G315__546) !== lisp.S_nil){
{
TMP_888=lisp.CL_cons(0,L_BITS__542);
L_G316__547=lisp.values1(TMP_888);
L_BITS__542=lisp.values1(L_G316__547);
}
}else{
{
TMP_889=lisp.callFunctionWithCallStack(G_49,L_G314__545,lisp.makeCharacter(49));
L_G317__548=lisp.values1(TMP_889);
if(lisp.values1(L_G317__548) !== lisp.S_nil){
{
TMP_890=lisp.CL_cons(1,L_BITS__542);
L_G318__549=lisp.values1(TMP_890);
L_BITS__542=lisp.values1(L_G318__549);
}
}else{
{
TMP_891=lisp.callFunctionWithCallStack(G_31,L_C__544);
L_G320__551=lisp.values1(TMP_891);
if(lisp.values1(L_G320__551) !== lisp.S_nil){
TMP_892=lisp.values1(L_G320__551);
}else{
{
TMP_893=G_283.func(L_C__544);
L_G321__552=lisp.values1(TMP_893);
if(lisp.values1(L_G321__552) !== lisp.S_nil){
TMP_894=lisp.values1(L_G321__552);
}else{
{
TMP_895=G_24.func(L_C__544);
L_G322__553=lisp.values1(TMP_895);
if(lisp.values1(L_G322__553) !== lisp.S_nil){
TMP_896=lisp.values1(L_G322__553);
}else{
TMP_896=lisp.values1(lisp.S_nil);
}
}
TMP_894=lisp.values1(lisp.values1(TMP_896));
}
}
TMP_892=lisp.values1(lisp.values1(TMP_894));
}
}
if(lisp.values1(lisp.values1(TMP_892)) !== lisp.S_nil){
BLOCK_RESULT_NIL__543=lisp.values1(lisp.S_nil);
break BLOCK_NIL__543;
}else{
}
}
}
}
}
}
G_560.func(L_STREAM__538,G_5,lisp.S_nil,G_5);
}
continue;
break;
}
BLOCK_RESULT_NIL__543=lisp.values1(lisp.S_nil);
break;
}
{
L_N__554=lisp.values1(0);
L_DIGIT__555=lisp.values1(1);
{
L_G323__557=lisp.values1(L_BITS__542);
for(;;){
TMP_897=lisp.callFunctionWithCallStack(G_357,L_G323__557);
if(lisp.values1(TMP_897) !== lisp.S_nil){
}else{
{
TMP_898=lisp.callFunctionWithCallStack(G_253,L_G323__557);
L_B__558=lisp.values1(TMP_898);
TMP_899=lisp.callFunctionWithCallStack(G_255,L_G323__557);
L_G323__557=lisp.values1(TMP_899);
TMP_900=lisp.callFunctionWithCallStack(G_299,L_B__558,1);
if(lisp.values1(TMP_900) !== lisp.S_nil){
{
TMP_901=lisp.callFunctionWithCallStack(G_333,L_N__554,L_DIGIT__555);
L_G330__559=lisp.values1(TMP_901);
L_N__554=lisp.values1(L_G330__559);
}
}else{
}
TMP_902=lisp.callFunctionWithCallStack(G_361,L_DIGIT__555,2);
L_DIGIT__555=lisp.values1(TMP_902);
}
continue;
}
break;
}
}
}
}
return lisp.values1(L_N__554);
});
CL_COMMON_LISP_BIT_NUMBER_READER=lisp.values1(F_BIT_NUMBER_READER_885);
let F_BLOCK_COMMENT_READER_903;
F_BLOCK_COMMENT_READER_903=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_223, arguments.length);
}
let TMP_919;
let L_G341__572;
let TMP_918;
let L_G340__571;
let TMP_917;
let L_G339__570;
let TMP_916;
let TMP_915;
let TMP_914;
let TMP_913;
let TMP_911;
let TMP_910;
let L_G338__569;
let TMP_909;
let L_G337__568;
let TMP_908;
let TMP_907;
let TMP_906;
let TMP_905;
let L_DEPTH__567;
let L_C__566;
let TMP_904;
let BLOCK_RESULT_NIL__565;
let L_ARG__563;
let L_SUB_CHAR__562;
let L_STREAM__561;
L_STREAM__561=arguments[0];
L_SUB_CHAR__562=arguments[1];
L_ARG__563=arguments[2];
G_560.func(L_STREAM__561,G_5,lisp.S_nil,G_5);
BLOCK_NIL__565: for(;;){{
TMP_904=G_560.func(L_STREAM__561,G_5,lisp.S_nil,G_5);
L_C__566=lisp.values1(TMP_904);
L_DEPTH__567=lisp.values1(1);
for(;;){
{
TMP_905=lisp.callFunctionWithCallStack(G_311,L_C__566,lisp.makeCharacter(124));
if(lisp.values1(TMP_905) !== lisp.S_nil){
TMP_907=G_28.func(lisp.S_nil,L_STREAM__561,G_5,lisp.S_nil,G_5);
TMP_908=lisp.callFunctionWithCallStack(G_311,lisp.makeCharacter(35),TMP_907);
TMP_906=lisp.values1(TMP_908);
}else{
TMP_906=lisp.values1(lisp.S_nil);
}
L_G337__568=lisp.values1(TMP_906);
if(lisp.values1(L_G337__568) !== lisp.S_nil){
{
TMP_909=lisp.callFunctionWithCallStack(G_386,L_DEPTH__567,1);
L_G338__569=lisp.values1(TMP_909);
L_DEPTH__567=(TMP_910=lisp.values1(L_G338__569));
}
TMP_911=lisp.callFunctionWithCallStack(G_912,lisp.values1(TMP_910));
if(lisp.values1(TMP_911) !== lisp.S_nil){
G_560.func(L_STREAM__561,G_5,lisp.S_nil,G_5);
BLOCK_RESULT_NIL__565=lisp.values1(lisp.S_nil);
break BLOCK_NIL__565;
}else{
}
}else{
{
TMP_913=lisp.callFunctionWithCallStack(G_311,L_C__566,lisp.makeCharacter(35));
if(lisp.values1(TMP_913) !== lisp.S_nil){
TMP_915=G_28.func(lisp.S_nil,L_STREAM__561,G_5,lisp.S_nil,G_5);
TMP_916=lisp.callFunctionWithCallStack(G_311,lisp.makeCharacter(124),TMP_915);
TMP_914=lisp.values1(TMP_916);
}else{
TMP_914=lisp.values1(lisp.S_nil);
}
L_G339__570=lisp.values1(TMP_914);
if(lisp.values1(L_G339__570) !== lisp.S_nil){
{
TMP_917=lisp.callFunctionWithCallStack(G_333,L_DEPTH__567,1);
L_G340__571=lisp.values1(TMP_917);
L_DEPTH__567=lisp.values1(L_G340__571);
}
}else{
}
}
}
}
{
TMP_918=G_560.func(L_STREAM__561,G_5,lisp.S_nil,G_5);
L_G341__572=lisp.values1(TMP_918);
L_C__566=lisp.values1(L_G341__572);
}
continue;
break;
}
}
BLOCK_RESULT_NIL__565=lisp.values1(lisp.S_nil);
break;
}
TMP_919=lisp.CL_values();
return TMP_919;
});
CL_COMMON_LISP_BLOCK_COMMENT_READER=lisp.values1(F_BLOCK_COMMENT_READER_903);
let F_SHARP_DOT_READER_920;
F_SHARP_DOT_READER_920=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_225, arguments.length);
}
let TMP_922;
let TMP_921;
let L_ARG__575;
let L_SUB_CHAR__574;
let L_STREAM__573;
L_STREAM__573=arguments[0];
L_SUB_CHAR__574=arguments[1];
L_ARG__575=arguments[2];
TMP_921=G_635.func(L_STREAM__573,G_5,lisp.S_nil,G_5);
TMP_922=lisp.callFunctionWithCallStack(G_923,TMP_921);
return TMP_922;
});
CL_COMMON_LISP_SHARP_DOT_READER=lisp.values1(F_SHARP_DOT_READER_920);
let F_CL_STRING_READER_924;
F_CL_STRING_READER_924=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_226, arguments.length);
}
let TMP_925;
let L_ARG__579;
let L_SUB_CHAR__578;
let L_STREAM__577;
L_STREAM__577=arguments[0];
L_SUB_CHAR__578=arguments[1];
L_ARG__579=arguments[2];
TMP_925=G_212.func(L_STREAM__577,lisp.makeCharacter(34));
return TMP_925;
});
CL_COMMON_LISP_CL_STRING_READER=lisp.values1(F_CL_STRING_READER_924);
let F_CL_TO_JS_READER_926;
F_CL_TO_JS_READER_926=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_227, arguments.length);
}
let TMP_964;
let TMP_963;
let TMP_961;
let TMP_960;
let L_G370__609;
let TMP_959;
let TMP_958;
let TMP_957;
let L_G369__608;
let TMP_956;
let TMP_955;
let TMP_954;
let TMP_952;
let L_G368__607;
let TMP_951;
let L_G367__606;
let TMP_950;
let F_READ_JS_IDENT__586;
let TMP_942;
let F_READ_JS_IDENT_1__585;
let TMP_927;
let L_ARG__583;
let L_SUB_CHAR__582;
let L_STREAM__581;
L_STREAM__581=arguments[0];
L_SUB_CHAR__582=arguments[1];
L_ARG__583=arguments[2];
{
TMP_927=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_941;
let L_G355__597;
let TMP_940;
let L_G351__595;
let TMP_939;
let L_G353__594;
let TMP_938;
let TMP_937;
let L_G352__593;
let TMP_936;
let L_G348__592;
let TMP_935;
let L_G350__591;
let TMP_934;
let TMP_933;
let L_G349__590;
let TMP_931;
let TMP_930;
let L_C__589;
let TMP_929;
let BLOCK_RESULT_NIL__588;
let L_OUT__587;
let TMP_928;
{
TMP_928=lisp.callFunctionWithCallStack(G_558);
L_OUT__587=lisp.values1(TMP_928);
BLOCK_NIL__588: for(;;){{
TMP_929=G_28.func(lisp.S_nil,L_STREAM__581,lisp.S_nil,lisp.S_nil);
L_C__589=lisp.values1(TMP_929);
for(;;){
TMP_930=lisp.callFunctionWithCallStack(G_31,L_C__589);
if(lisp.values1(TMP_930) !== lisp.S_nil){
BLOCK_RESULT_NIL__588=lisp.values1(lisp.S_nil);
break BLOCK_NIL__588;
}else{
{
{
TMP_931=lisp.callFunctionWithCallStack(G_932,L_C__589);
L_G349__590=lisp.values1(TMP_931);
if(lisp.values1(L_G349__590) !== lisp.S_nil){
TMP_933=lisp.values1(L_G349__590);
}else{
{
TMP_934=lisp.callFunctionWithCallStack(G_311,L_C__589,lisp.makeCharacter(95));
L_G350__591=lisp.values1(TMP_934);
if(lisp.values1(L_G350__591) !== lisp.S_nil){
TMP_935=lisp.values1(L_G350__591);
}else{
TMP_935=lisp.values1(lisp.S_nil);
}
}
TMP_933=lisp.values1(lisp.values1(TMP_935));
}
}
L_G348__592=lisp.values1(lisp.values1(TMP_933));
if(lisp.values1(L_G348__592) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_563,L_C__589,L_OUT__587);
G_560.func(L_STREAM__581);
}else{
{
{
TMP_936=G_571.func(L_C__589);
L_G352__593=lisp.values1(TMP_936);
if(lisp.values1(L_G352__593) !== lisp.S_nil){
TMP_937=lisp.values1(L_G352__593);
}else{
{
TMP_938=lisp.callFunctionWithCallStack(G_311,L_C__589,lisp.makeCharacter(58));
L_G353__594=lisp.values1(TMP_938);
if(lisp.values1(L_G353__594) !== lisp.S_nil){
TMP_939=lisp.values1(L_G353__594);
}else{
TMP_939=lisp.values1(lisp.S_nil);
}
}
TMP_937=lisp.values1(lisp.values1(TMP_939));
}
}
L_G351__595=lisp.values1(lisp.values1(TMP_937));
if(lisp.values1(L_G351__595) !== lisp.S_nil){
BLOCK_RESULT_NIL__588=lisp.values1(lisp.S_nil);
break BLOCK_NIL__588;
}else{
G_17.func(G_8.func(lisp.codeArrayToString([105, 110, 118, 97, 108, 105, 100, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 58, 32, 126, 83])),L_C__589);
}
}
}
}
{
TMP_940=G_28.func(lisp.S_nil,L_STREAM__581,lisp.S_nil,lisp.S_nil);
L_G355__597=lisp.values1(TMP_940);
L_C__589=lisp.values1(L_G355__597);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__588=lisp.values1(lisp.S_nil);
break;
}
TMP_941=lisp.callFunctionWithCallStack(G_565,L_OUT__587);
}
return TMP_941;
});
F_READ_JS_IDENT_1__585=lisp.values1(TMP_927);
TMP_942=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G366__605;
let TMP_949;
let TMP_948;
let L_G364__603;
let TMP_947;
let L_G363__602;
let TMP_946;
let L_G362__601;
let TMP_945;
let TMP_944;
let L_TOKEN__600;
let TMP_943;
let BLOCK_RESULT_NIL__599;
let L_TOKENS__598;
{
L_TOKENS__598=lisp.values1(lisp.S_nil);
BLOCK_NIL__599: for(;;){{
TMP_943=F_READ_JS_IDENT_1__585();
L_TOKEN__600=lisp.values1(TMP_943);
for(;;){
TMP_944=lisp.callFunctionWithCallStack(G_484,L_TOKEN__600,G_8.func(lisp.codeArrayToString([])));
if(lisp.values1(TMP_944) !== lisp.S_nil){
}else{
{
TMP_945=lisp.CL_cons(L_TOKEN__600,L_TOKENS__598);
L_G362__601=lisp.values1(TMP_945);
L_TOKENS__598=lisp.values1(L_G362__601);
}
}
{
TMP_946=G_28.func(lisp.S_nil,L_STREAM__581,lisp.S_nil,lisp.S_nil);
L_G363__602=lisp.values1(TMP_946);
{
TMP_947=lisp.callFunctionWithCallStack(G_49,L_G363__602,lisp.makeCharacter(58));
L_G364__603=lisp.values1(TMP_947);
if(lisp.values1(L_G364__603) !== lisp.S_nil){
G_560.func(L_STREAM__581);
}else{
TMP_948=lisp.callFunctionWithCallStack(G_878,L_TOKENS__598);
BLOCK_RESULT_NIL__599=TMP_948;
break BLOCK_NIL__599;
}
}
}
{
TMP_949=F_READ_JS_IDENT_1__585();
L_G366__605=lisp.values1(TMP_949);
L_TOKEN__600=lisp.values1(L_G366__605);
}
continue;
break;
}
}
BLOCK_RESULT_NIL__599=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__599;
});
F_READ_JS_IDENT__586=lisp.values1(TMP_942);
{
TMP_950=G_28.func(lisp.S_nil,L_STREAM__581);
L_G367__606=lisp.values1(TMP_950);
{
TMP_951=lisp.callFunctionWithCallStack(G_49,L_G367__606,lisp.makeCharacter(58));
L_G368__607=lisp.values1(TMP_951);
if(lisp.values1(L_G368__607) !== lisp.S_nil){
G_560.func(L_STREAM__581);
TMP_954=F_READ_JS_IDENT__586();
TMP_955=lisp.CL_cons(G_953,TMP_954);
TMP_952=TMP_955;
}else{
{
TMP_956=lisp.callFunctionWithCallStack(G_49,L_G367__606,lisp.makeCharacter(91));
L_G369__608=lisp.values1(TMP_956);
if(lisp.values1(L_G369__608) !== lisp.S_nil){
TMP_958=G_17.func(G_8.func(lisp.codeArrayToString([117, 110, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 35, 106, 91, 46, 46, 46, 93])));
TMP_957=TMP_958;
}else{
{
TMP_959=lisp.callFunctionWithCallStack(G_49,L_G367__606,lisp.makeCharacter(123));
L_G370__609=lisp.values1(TMP_959);
if(lisp.values1(L_G370__609) !== lisp.S_nil){
TMP_961=G_17.func(G_8.func(lisp.codeArrayToString([117, 110, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 35, 106, 123, 46, 46, 46, 125])));
TMP_960=TMP_961;
}else{
TMP_963=G_635.func(L_STREAM__581,G_5,lisp.S_nil,G_5);
TMP_964=lisp.callFunctionWithCallStack(G_88,G_962,TMP_963);
TMP_960=TMP_964;
}
}
TMP_957=TMP_960;
}
}
TMP_952=TMP_957;
}
}
}
}
return TMP_952;
});
CL_COMMON_LISP_CL_TO_JS_READER=lisp.values1(F_CL_TO_JS_READER_926);
let F_READ_FROM_STRING_965;
F_READ_FROM_STRING_965=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(G_966, arguments.length);
}
let TMP_969;
let L_IN__615;
let TMP_967;
let L_EOF_VALUE__613;
let L_EOF_ERROR_P__612;
let L_STRING__611;
L_STRING__611=arguments[0];
L_EOF_ERROR_P__612=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_EOF_VALUE__613=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
{
TMP_967=lisp.callFunctionWithCallStack(G_968,L_STRING__611);
L_IN__615=lisp.values1(TMP_967);
TMP_969=G_635.func(L_IN__615,L_EOF_ERROR_P__612,L_EOF_VALUE__613);
}
return TMP_969;
});
CL_COMMON_LISP_READ_FROM_STRING=lisp.values1(F_READ_FROM_STRING_965);
let F_READ_CHAR_970;
F_READ_CHAR_970=(function(){
if(arguments.length < 0 || 4 < arguments.length) {
lisp.argumentsError(G_560, arguments.length);
}
let TMP_975;
let TMP_974;
let TMP_973;
let TMP_972;
let L_C__621;
let TMP_971;
let L_RECURSIVE_P__619;
let L_EOF_VALUE__618;
let L_EOF_ERROR_P__617;
let L_STREAM__616;
L_STREAM__616=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_29)));
L_EOF_ERROR_P__617=arguments.length > 1 ? arguments[1] : (lisp.values1(G_5));
L_EOF_VALUE__618=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_RECURSIVE_P__619=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
{
TMP_971=lisp.callFunctionWithCallStack(G_50,L_STREAM__616);
L_C__621=lisp.values1(TMP_971);
TMP_972=lisp.CL_eq(L_C__621,G_35);
if(lisp.values1(TMP_972) !== lisp.S_nil){
if(lisp.values1(L_EOF_ERROR_P__617) !== lisp.S_nil){
TMP_975=lisp.callFunctionWithCallStack(G_40);
TMP_974=TMP_975;
}else{
TMP_974=lisp.values1(L_EOF_VALUE__618);
}
TMP_973=TMP_974;
}else{
TMP_973=lisp.values1(L_C__621);
}
}
return TMP_973;
});
CL_COMMON_LISP_READ_CHAR=lisp.values1(F_READ_CHAR_970);
let F_UNREAD_CHAR_976;
F_UNREAD_CHAR_976=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_614, arguments.length);
}
let TMP_977;
let L_STREAM__623;
let L_CHARACTER__622;
L_CHARACTER__622=arguments[0];
L_STREAM__623=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_29)));
TMP_977=lisp.callFunctionWithCallStack(G_978,L_STREAM__623);
return TMP_977;
});
CL_COMMON_LISP_UNREAD_CHAR=lisp.values1(F_UNREAD_CHAR_976);
let F_READ_LINE_979;
F_READ_LINE_979=(function(){
if(arguments.length < 0 || 4 < arguments.length) {
lisp.argumentsError(G_980, arguments.length);
}
let TMP_994;
let TMP_992;
let TMP_991;
let TMP_981;
let L_RECURSIVE_P__628;
let L_EOF_VALUE__627;
let L_EOF_ERROR_P__626;
let L_STREAM__625;
L_STREAM__625=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_29)));
L_EOF_ERROR_P__626=arguments.length > 1 ? arguments[1] : (lisp.values1(G_5));
L_EOF_VALUE__627=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_RECURSIVE_P__628=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
TMP_981=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_990;
let TMP_989;
let TMP_988;
let TMP_987;
let TMP_986;
let TMP_985;
let TMP_984;
let TMP_983;
let TMP_982;
let L_G372__632;
let L_NEXT_LINE_P__631;
let L_STRING__630;
L_STRING__630=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_NEXT_LINE_P__631=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G372__632=lisp.jsArrayToList(arguments, 2);
TMP_982=lisp.callFunctionWithCallStack(G_484,L_STRING__630,G_8.func(lisp.codeArrayToString([])));
if(lisp.values1(TMP_982) !== lisp.S_nil){
TMP_984=lisp.callFunctionWithCallStack(G_47,L_NEXT_LINE_P__631);
TMP_983=lisp.values1(TMP_984);
}else{
TMP_983=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_983) !== lisp.S_nil){
if(lisp.values1(L_EOF_ERROR_P__626) !== lisp.S_nil){
TMP_987=lisp.callFunctionWithCallStack(G_40);
TMP_986=TMP_987;
}else{
TMP_988=lisp.CL_values(L_EOF_VALUE__627,G_5);
TMP_986=TMP_988;
}
TMP_985=TMP_986;
}else{
TMP_989=lisp.callFunctionWithCallStack(G_47,L_NEXT_LINE_P__631);
TMP_990=lisp.CL_values(L_STRING__630,TMP_989);
TMP_985=TMP_990;
}
return TMP_985;
});
TMP_991=lisp.callFunctionWithCallStack(G_288,TMP_981);
TMP_992=lisp.callFunctionWithCallStack(G_993,L_STREAM__625);
TMP_994=lisp.CL_multipleValueCall(TMP_991,TMP_992);
return TMP_994;
});
CL_COMMON_LISP_READ_LINE=lisp.values1(F_READ_LINE_979);
let F_READ_DELIMITED_LIST_995;
F_READ_DELIMITED_LIST_995=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(G_755, arguments.length);
}
let L_G387__650;
let TMP_1003;
let L_G_STORE386__649;
let TMP_1002;
let L_G385__648;
let L_G382__646;
let TMP_1001;
let L_G383__645;
let TMP_1000;
let L_G381__644;
let TMP_999;
let L_X__643;
let TMP_998;
let L_G379__641;
let TMP_997;
let L_C__640;
let TMP_996;
let BLOCK_RESULT_NIL__639;
let L_TAIL__638;
let L_HEAD__637;
let L_RECURSIVE_P__635;
let L_STREAM__634;
let L_CHAR__633;
L_CHAR__633=arguments[0];
L_STREAM__634=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_29)));
L_RECURSIVE_P__635=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
{
L_HEAD__637=lisp.values1(lisp.S_nil);
L_TAIL__638=lisp.values1(lisp.S_nil);
BLOCK_NIL__639: for(;;){for(;;){
{
TMP_996=G_28.func(G_5,L_STREAM__634,G_5,lisp.S_nil,L_RECURSIVE_P__635);
L_C__640=lisp.values1(TMP_996);
{
TMP_997=lisp.callFunctionWithCallStack(G_311,L_C__640,lisp.makeCharacter(41));
L_G379__641=lisp.values1(TMP_997);
if(lisp.values1(L_G379__641) !== lisp.S_nil){
G_560.func(L_STREAM__634,G_5,lisp.S_nil,L_RECURSIVE_P__635);
BLOCK_RESULT_NIL__639=lisp.values1(lisp.S_nil);
break BLOCK_NIL__639;
}else{
{
TMP_998=G_635.func(L_STREAM__634,G_5,lisp.S_nil,L_RECURSIVE_P__635);
L_X__643=lisp.values1(TMP_998);
{
TMP_999=lisp.callFunctionWithCallStack(G_31,L_TAIL__638);
L_G381__644=lisp.values1(TMP_999);
if(lisp.values1(L_G381__644) !== lisp.S_nil){
{
{
TMP_1000=lisp.callFunctionWithCallStack(G_88,L_X__643);
L_G383__645=lisp.values1(TMP_1000);
L_TAIL__638=(TMP_1001=lisp.values1(L_G383__645));
}
L_G382__646=lisp.values1(lisp.values1(TMP_1001));
L_HEAD__637=lisp.values1(L_G382__646);
}
}else{
{
L_G385__648=lisp.values1(L_TAIL__638);
TMP_1002=lisp.callFunctionWithCallStack(G_88,L_X__643);
L_G_STORE386__649=lisp.values1(TMP_1002);
lisp.callFunctionWithCallStack(G_667,L_G_STORE386__649,L_G385__648);
}
{
TMP_1003=lisp.callFunctionWithCallStack(G_255,L_TAIL__638);
L_G387__650=lisp.values1(TMP_1003);
L_TAIL__638=lisp.values1(L_G387__650);
}
}
}
}
}
}
}
continue;
break;
}
BLOCK_RESULT_NIL__639=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_HEAD__637);
});
CL_COMMON_LISP_READ_DELIMITED_LIST=lisp.values1(F_READ_DELIMITED_LIST_995);
lisp.defpackage('VALTAN-CORE.READER', {exportNames: ['CONS-READER', 'QUOTE-READER', 'BACKQUOTE-READER', 'UNQUOTE-READER', 'LINE-COMMENT-READER', 'STRING-READER', 'CHARACTER-READER', 'FUNCTION-READER', 'ARRAY-READER', 'UNINTERN-SYMBOL-READER', 'BIT-VECTOR-READER', 'CL-TO-JS-READER'], usePackageNames: [], nicknames: []});
// initialize symbols
G_2 = lisp.intern('*INNER-LIST-P*', 'COMMON-LISP');
G_4 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_5 = lisp.intern('T', 'COMMON-LISP');
G_6 = lisp.intern('*DOT-MARKER*', 'COMMON-LISP');
G_8 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_10 = lisp.intern('GENSYM', 'COMMON-LISP');
G_11 = lisp.intern('*READ-LABEL-TABLE*', 'COMMON-LISP');
G_12 = lisp.intern('*READ-SKIP-MARKER*', 'COMMON-LISP');
G_15 = lisp.intern('*WHITESPACES*', 'COMMON-LISP');
G_17 = lisp.intern('READ-ERROR', 'COMMON-LISP');
G_18 = lisp.intern('SIMPLE-READER-ERROR', 'COMMON-LISP');
G_19 = lisp.intern('FORMAT-CONTROL', 'KEYWORD');
G_20 = lisp.intern('FORMAT-ARGUMENTS', 'KEYWORD');
G_22 = lisp.intern('ERROR', 'COMMON-LISP');
G_24 = lisp.intern('WHITESPACEP', 'COMMON-LISP');
G_26 = lisp.intern('FIND', 'COMMON-LISP');
G_28 = lisp.intern('PEEK-CHAR', 'COMMON-LISP');
G_29 = lisp.intern('*STANDARD-INPUT*', 'COMMON-LISP');
G_31 = lisp.intern('NULL', 'COMMON-LISP');
G_34 = lisp.intern('STREAM-PEEK-CHAR', 'COMMON-LISP');
G_35 = lisp.intern('EOF', 'KEYWORD');
G_40 = lisp.intern('EOF-ERROR', 'COMMON-LISP');
G_47 = lisp.intern('NOT', 'COMMON-LISP');
G_49 = lisp.intern('EQL', 'COMMON-LISP');
G_50 = lisp.intern('STREAM-READ-CHAR', 'COMMON-LISP');
G_51 = lisp.intern('+SHARP-EQUAL-MARKER+', 'COMMON-LISP');
G_54 = lisp.intern('COPY-SHARP-EQUAL', 'COMMON-LISP');
G_56 = lisp.intern('COPY-STRUCTURE', 'COMMON-LISP');
G_58 = lisp.intern('SHARP-EQUAL-P', 'COMMON-LISP');
G_59 = lisp.intern('SHARP-EQUAL', 'COMMON-LISP');
G_61 = lisp.intern('TYPEP', 'COMMON-LISP');
G_63 = lisp.intern('MAKE-SHARP-EQUAL', 'COMMON-LISP');
G_64 = lisp.intern('LABEL', 'KEYWORD');
G_66 = lisp.intern('VALUE', 'KEYWORD');
G_71 = lisp.intern('SHARP-EQUAL-LABEL', 'COMMON-LISP');
G_73 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_74 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_76 = lisp.intern('(SETF SHARP-EQUAL-LABEL)', 'COMMON-LISP');
G_80 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_85 = lisp.intern('%MAPCAR', 'SYSTEM');
G_88 = lisp.intern('LIST', 'COMMON-LISP');
G_90 = lisp.intern('LIST*', 'COMMON-LISP');
G_93 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_96 = lisp.intern('SHARP-EQUAL-VALUE', 'COMMON-LISP');
G_99 = lisp.intern('(SETF SHARP-EQUAL-VALUE)', 'COMMON-LISP');
G_114 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_115 = lisp.intern('PRIN1', 'COMMON-LISP');
G_119 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_121 = lisp.intern('%COPY-READTABLE', 'COMMON-LISP');
G_124 = lisp.intern('READTABLEP', 'COMMON-LISP');
G_125 = lisp.intern('READTABLE', 'COMMON-LISP');
G_128 = lisp.intern('MAKE-READTABLE', 'COMMON-LISP');
G_129 = lisp.intern('CASE', 'KEYWORD');
G_131 = lisp.intern('UPCASE', 'KEYWORD');
G_132 = lisp.intern('TABLE', 'KEYWORD');
G_135 = lisp.intern('MAKE-HASH-TABLE', 'COMMON-LISP');
G_136 = lisp.intern('DISPATCH-MACRO-TABLE', 'KEYWORD');
G_142 = lisp.intern('READTABLE-CASE', 'COMMON-LISP');
G_145 = lisp.intern('(SETF READTABLE-CASE)', 'COMMON-LISP');
G_160 = lisp.intern('READTABLE-TABLE', 'COMMON-LISP');
G_163 = lisp.intern('(SETF READTABLE-TABLE)', 'COMMON-LISP');
G_178 = lisp.intern('READTABLE-DISPATCH-MACRO-TABLE', 'COMMON-LISP');
G_181 = lisp.intern('(SETF READTABLE-DISPATCH-MACRO-TABLE)', 'COMMON-LISP');
G_200 = lisp.intern('*READTABLE*', 'COMMON-LISP');
G_204 = lisp.intern('INIT-READTABLE', 'COMMON-LISP');
G_205 = lisp.intern('CONS-READER', 'COMMON-LISP');
G_206 = lisp.intern('SET-MACRO-CHARACTER', 'COMMON-LISP');
G_207 = lisp.intern('READ-RIGHT-PAREN', 'COMMON-LISP');
G_208 = lisp.intern('QUOTE-READER', 'COMMON-LISP');
G_209 = lisp.intern('BACKQUOTE-READER', 'COMMON-LISP');
G_210 = lisp.intern('UNQUOTE-READER', 'COMMON-LISP');
G_211 = lisp.intern('LINE-COMMENT-READER', 'COMMON-LISP');
G_212 = lisp.intern('STRING-READER', 'COMMON-LISP');
G_213 = lisp.intern('MAKE-DISPATCH-MACRO-CHARACTER', 'COMMON-LISP');
G_214 = lisp.intern('CHARACTER-READER', 'COMMON-LISP');
G_215 = lisp.intern('SET-DISPATCH-MACRO-CHARACTER', 'COMMON-LISP');
G_216 = lisp.intern('FUNCTION-READER', 'COMMON-LISP');
G_217 = lisp.intern('ARRAY-READER', 'COMMON-LISP');
G_218 = lisp.intern('UNINTERN-SYMBOL-READER', 'COMMON-LISP');
G_219 = lisp.intern('SHARP-PLUS-MINUS-READER', 'COMMON-LISP');
G_220 = lisp.intern('SHARP-EQUAL-READER', 'COMMON-LISP');
G_221 = lisp.intern('SHARP-SHARP-READER', 'COMMON-LISP');
G_222 = lisp.intern('BIT-VECTOR-READER', 'COMMON-LISP');
G_223 = lisp.intern('BLOCK-COMMENT-READER', 'COMMON-LISP');
G_224 = lisp.intern('BIT-NUMBER-READER', 'COMMON-LISP');
G_225 = lisp.intern('SHARP-DOT-READER', 'COMMON-LISP');
G_226 = lisp.intern('CL-STRING-READER', 'COMMON-LISP');
G_227 = lisp.intern('CL-TO-JS-READER', 'COMMON-LISP');
G_229 = lisp.intern('SET-READTABLE', 'COMMON-LISP');
G_234 = lisp.intern('COPY-READTABLE', 'COMMON-LISP');
G_247 = lisp.intern('GET-MACRO-CHARACTER', 'COMMON-LISP');
G_250 = lisp.intern('GETHASH', 'COMMON-LISP');
G_253 = lisp.intern('CAR', 'COMMON-LISP');
G_255 = lisp.intern('CDR', 'COMMON-LISP');
G_261 = lisp.intern('(SETF GETHASH)', 'COMMON-LISP');
G_265 = lisp.intern('READ-DISPATCH-MACRO-CHARACTER', 'COMMON-LISP');
G_267 = lisp.intern('GET-DISPATCH-TABLE', 'COMMON-LISP');
G_273 = lisp.intern('DIGIT-CHAR-P', 'COMMON-LISP');
G_275 = lisp.intern('CHAR-UPCASE', 'COMMON-LISP');
G_277 = lisp.intern('GET-DISPATCH-MACRO-CHARACTER', 'COMMON-LISP');
G_283 = lisp.intern('NON-TERMINATE-MACRO-CHARACTER-P', 'COMMON-LISP');
G_288 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_292 = lisp.intern('NUMBER-STRING-P', 'COMMON-LISP');
G_294 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_296 = lisp.intern('MEMBER', 'COMMON-LISP');
G_299 = lisp.intern('=', 'COMMON-LISP');
G_302 = lisp.intern('LENGTH', 'COMMON-LISP');
G_306 = lisp.intern('>=', 'COMMON-LISP');
G_309 = lisp.intern('CHAR<=', 'COMMON-LISP');
G_311 = lisp.intern('CHAR=', 'COMMON-LISP');
G_313 = lisp.intern('1+', 'COMMON-LISP');
G_321 = lisp.intern('PARSE-NUMBER', 'COMMON-LISP');
G_333 = lisp.intern('+', 'COMMON-LISP');
G_357 = lisp.intern('ENDP', 'COMMON-LISP');
G_361 = lisp.intern('*', 'COMMON-LISP');
G_386 = lisp.intern('-', 'COMMON-LISP');
G_401 = lisp.intern('/', 'COMMON-LISP');
G_422 = lisp.intern('EXPT', 'COMMON-LISP');
G_482 = lisp.intern('CHECK-DOT', 'COMMON-LISP');
G_484 = lisp.intern('STRING=', 'COMMON-LISP');
G_497 = lisp.intern('PARSE-SYMBOL', 'COMMON-LISP');
G_500 = lisp.intern('FIND-PACKAGE', 'COMMON-LISP');
G_513 = lisp.intern('INTERN', 'COMMON-LISP');
G_515 = lisp.intern('EXTERNAL', 'KEYWORD');
G_522 = lisp.intern('FIND-SYMBOL', 'COMMON-LISP');
G_525 = lisp.intern('POSITION', 'COMMON-LISP');
G_531 = lisp.intern('KEYWORD', 'KEYWORD');
G_533 = lisp.intern('SUBSEQ', 'COMMON-LISP');
G_548 = lisp.intern('PARSE-TOKEN', 'COMMON-LISP');
G_556 = lisp.intern('READ-MULTIPLE-ESCAPE-1', 'COMMON-LISP');
G_558 = lisp.intern('MAKE-STRING-OUTPUT-STREAM', 'COMMON-LISP');
G_560 = lisp.intern('READ-CHAR', 'COMMON-LISP');
G_563 = lisp.intern('WRITE-CHAR', 'COMMON-LISP');
G_565 = lisp.intern('GET-OUTPUT-STREAM-STRING', 'COMMON-LISP');
G_567 = lisp.intern('READ-MULTIPLE-ESCAPE', 'COMMON-LISP');
G_571 = lisp.intern('DELIMITER-P', 'COMMON-LISP');
G_583 = lisp.intern('MAYBE-INVERT', 'COMMON-LISP');
G_584 = lisp.intern('INVERT', 'KEYWORD');
G_594 = lisp.intern('STRING-DOWNCASE', 'COMMON-LISP');
G_595 = lisp.intern('DOWNCASE', 'KEYWORD');
G_599 = lisp.intern('STRING-UPCASE', 'COMMON-LISP');
G_609 = lisp.intern('READ-TOKEN-1', 'COMMON-LISP');
G_614 = lisp.intern('UNREAD-CHAR', 'COMMON-LISP');
G_625 = lisp.intern('CHAR-DOWNCASE', 'COMMON-LISP');
G_630 = lisp.intern('READ-TOKEN', 'COMMON-LISP');
G_635 = lisp.intern('READ', 'COMMON-LISP');
G_640 = lisp.makeSymbol("EOF");G_643 = lisp.intern('NIL', 'COMMON-LISP');
G_652 = lisp.intern('FIRST', 'COMMON-LISP');
G_667 = lisp.intern('(SETF CDR)', 'COMMON-LISP');
G_678 = lisp.intern('QUOTE', 'COMMON-LISP');
G_682 = lisp.intern('BACKQUOTE', 'SYSTEM');
G_689 = lisp.intern('UNQUOTE-SPLICING', 'SYSTEM');
G_694 = lisp.intern('UNQUOTE-NSPLICING', 'SYSTEM');
G_697 = lisp.intern('UNQUOTE', 'SYSTEM');
G_730 = lisp.intern('STRING-EQUAL', 'COMMON-LISP');
G_748 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_752 = lisp.intern('VECTOR', 'COMMON-LISP');
G_755 = lisp.intern('READ-DELIMITED-LIST', 'COMMON-LISP');
G_757 = lisp.intern('APPLY', 'COMMON-LISP');
G_764 = lisp.intern('MAKE-SYMBOL', 'COMMON-LISP');
G_766 = lisp.intern('FEATUREP', 'COMMON-LISP');
G_770 = lisp.intern('NOT', 'KEYWORD');
G_774 = lisp.intern('CDDR', 'COMMON-LISP');
G_782 = lisp.intern('CADR', 'COMMON-LISP');
G_785 = lisp.intern('AND', 'KEYWORD');
G_786 = lisp.intern('AND', 'COMMON-LISP');
G_791 = lisp.intern('REST', 'COMMON-LISP');
G_793 = lisp.intern('EVERY', 'COMMON-LISP');
G_794 = lisp.intern('OR', 'KEYWORD');
G_795 = lisp.intern('OR', 'COMMON-LISP');
G_801 = lisp.intern('SOME', 'COMMON-LISP');
G_805 = lisp.intern('*FEATURES*', 'COMMON-LISP');
G_806 = lisp.intern('TEST', 'KEYWORD');
G_814 = lisp.intern('*PACKAGE*', 'COMMON-LISP');
G_823 = lisp.intern('SUBST-SHARP-EQUAL', 'COMMON-LISP');
G_824 = lisp.intern('EQ', 'COMMON-LISP');
G_843 = lisp.intern('RPLACA', 'COMMON-LISP');
G_846 = lisp.intern('RPLACD', 'COMMON-LISP');
G_848 = lisp.intern('ARRAYP', 'COMMON-LISP');
G_878 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_880 = lisp.intern('ELEMENT-TYPE', 'KEYWORD');
G_881 = lisp.intern('BIT', 'COMMON-LISP');
G_882 = lisp.intern('INITIAL-CONTENTS', 'KEYWORD');
G_884 = lisp.intern('MAKE-ARRAY', 'COMMON-LISP');
G_912 = lisp.intern('ZEROP', 'COMMON-LISP');
G_923 = lisp.intern('EVAL', 'COMMON-LISP');
G_932 = lisp.intern('ALPHANUMERICP', 'COMMON-LISP');
G_953 = lisp.intern('REF', 'FFI');
G_962 = lisp.intern('CL->JS', 'FFI');
G_966 = lisp.intern('READ-FROM-STRING', 'COMMON-LISP');
G_968 = lisp.intern('MAKE-STRING-INPUT-STREAM', 'COMMON-LISP');
G_978 = lisp.intern('STREAM-UNREAD-CHAR', 'COMMON-LISP');
G_980 = lisp.intern('READ-LINE', 'COMMON-LISP');
G_993 = lisp.intern('STREAM-READ-LINE', 'COMMON-LISP');
G_1004 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');TMP_3=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_3) !== lisp.S_nil){
}else{
lisp.CL_set(G_2,lisp.S_nil);
}
lisp.CL_put(G_2,G_4,G_5);
TMP_7=lisp.CL_boundp(G_6);
if(lisp.values1(TMP_7) !== lisp.S_nil){
}else{
TMP_9=lisp.callFunctionWithCallStack(G_10,G_8.func(lisp.codeArrayToString([68, 79, 84])));
lisp.CL_set(G_6,TMP_9);
}
lisp.CL_put(G_6,G_4,G_5);
lisp.CL_put(G_11,G_4,G_5);
TMP_13=lisp.CL_boundp(G_12);
if(lisp.values1(TMP_13) !== lisp.S_nil){
}else{
TMP_14=lisp.callFunctionWithCallStack(G_10,G_8.func(lisp.codeArrayToString([83, 75, 73, 80])));
lisp.CL_set(G_12,TMP_14);
}
lisp.CL_put(G_12,G_4,G_5);
lisp.CL_set(G_15,lisp.makeCons(lisp.makeCharacter(32), lisp.makeCons(lisp.makeCharacter(9), lisp.makeCons(lisp.makeCharacter(10), lisp.makeCons(lisp.makeCharacter(10), lisp.makeCons(lisp.makeCharacter(12), lisp.makeCons(lisp.makeCharacter(13), lisp.S_nil)))))));
lisp.CL_put(G_15,G_4,G_5);
CL_COMMON_LISP_READ_ERROR.lisp_name = 'READ-ERROR'
lisp.setSymbolFunction(G_17, CL_COMMON_LISP_READ_ERROR);
CL_COMMON_LISP_WHITESPACEP.lisp_name = 'WHITESPACEP'
lisp.setSymbolFunction(G_24, CL_COMMON_LISP_WHITESPACEP);
CL_COMMON_LISP_PEEK_CHAR.lisp_name = 'PEEK-CHAR'
lisp.setSymbolFunction(G_28, CL_COMMON_LISP_PEEK_CHAR);
TMP_52=lisp.callFunctionWithCallStack(G_10);
lisp.CL_set(G_51,TMP_52);
lisp.CL_put(G_51,G_4,G_5);
CL_COMMON_LISP_COPY_SHARP_EQUAL.lisp_name = 'COPY-SHARP-EQUAL'
lisp.setSymbolFunction(G_54, CL_COMMON_LISP_COPY_SHARP_EQUAL);
CL_COMMON_LISP_SHARP_EQUAL_P.lisp_name = 'SHARP-EQUAL-P'
lisp.setSymbolFunction(G_58, CL_COMMON_LISP_SHARP_EQUAL_P);
CL_COMMON_LISP_MAKE_SHARP_EQUAL.lisp_name = 'MAKE-SHARP-EQUAL'
lisp.setSymbolFunction(G_63, CL_COMMON_LISP_MAKE_SHARP_EQUAL);
CL_COMMON_LISP_SHARP_EQUAL_LABEL.lisp_name = 'SHARP-EQUAL-LABEL'
lisp.setSymbolFunction(G_71, CL_COMMON_LISP_SHARP_EQUAL_LABEL);
TMP_77=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_79;
let TMP_78;
let L_STRUCTURE__30;
let L_VALUE__29;
L_VALUE__29=arguments[0];
L_STRUCTURE__30=arguments[1];
TMP_78=lisp.CL_structurep(L_STRUCTURE__30);
if(lisp.values1(TMP_78) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__30,G_73);
}
TMP_79=lisp.CL_structureSet(L_STRUCTURE__30,0,L_VALUE__29);
return TMP_79;
});
lisp.CL_setSymbolFunction(G_76,TMP_77);
TMP_81=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_92;
let TMP_91;
let TMP_89;
let TMP_87;
let L_STORE13__38;
let TMP_86;
let L_GENSYMS11__37;
let TMP_84;
let TMP_82;
let L_ARGS12__35;
let L_G17__33;
let L_G16__32;
L_G16__32=arguments[0];
{
L_G17__33=lisp.values1(L_G16__32);
{
L_ARGS12__35=lisp.values1(L_G17__33);
{
TMP_82=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_83;
let L_X__36;
L_X__36=arguments[0];
TMP_83=lisp.callFunctionWithCallStack(G_10);
return TMP_83;
});
TMP_84=lisp.callFunctionWithCallStack(G_85,TMP_82,L_ARGS12__35);
L_GENSYMS11__37=lisp.values1(TMP_84);
TMP_86=lisp.callFunctionWithCallStack(G_10,G_8.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE13__38=lisp.values1(TMP_86);
TMP_87=lisp.callFunctionWithCallStack(G_88,L_STORE13__38);
TMP_89=lisp.callFunctionWithCallStack(G_90,G_76,L_STORE13__38,L_GENSYMS11__37);
TMP_91=lisp.callFunctionWithCallStack(G_90,G_71,L_GENSYMS11__37);
TMP_92=lisp.CL_values(L_GENSYMS11__37,L_ARGS12__35,TMP_87,TMP_89,TMP_91);
}
}
}
return TMP_92;
});
lisp.CL_put(G_71,G_80,TMP_81);
TMP_94=lisp.CL_symbolFunction(G_76);
lisp.CL_put(G_71,G_93,TMP_94);
CL_COMMON_LISP_SHARP_EQUAL_VALUE.lisp_name = 'SHARP-EQUAL-VALUE'
lisp.setSymbolFunction(G_96, CL_COMMON_LISP_SHARP_EQUAL_VALUE);
TMP_100=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_102;
let TMP_101;
let L_STRUCTURE__44;
let L_VALUE__43;
L_VALUE__43=arguments[0];
L_STRUCTURE__44=arguments[1];
TMP_101=lisp.CL_structurep(L_STRUCTURE__44);
if(lisp.values1(TMP_101) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__44,G_73);
}
TMP_102=lisp.CL_structureSet(L_STRUCTURE__44,1,L_VALUE__43);
return TMP_102;
});
lisp.CL_setSymbolFunction(G_99,TMP_100);
TMP_103=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_111;
let TMP_110;
let TMP_109;
let TMP_108;
let L_STORE21__52;
let TMP_107;
let L_GENSYMS19__51;
let TMP_106;
let TMP_104;
let L_ARGS20__49;
let L_G25__47;
let L_G24__46;
L_G24__46=arguments[0];
{
L_G25__47=lisp.values1(L_G24__46);
{
L_ARGS20__49=lisp.values1(L_G25__47);
{
TMP_104=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_105;
let L_X__50;
L_X__50=arguments[0];
TMP_105=lisp.callFunctionWithCallStack(G_10);
return TMP_105;
});
TMP_106=lisp.callFunctionWithCallStack(G_85,TMP_104,L_ARGS20__49);
L_GENSYMS19__51=lisp.values1(TMP_106);
TMP_107=lisp.callFunctionWithCallStack(G_10,G_8.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE21__52=lisp.values1(TMP_107);
TMP_108=lisp.callFunctionWithCallStack(G_88,L_STORE21__52);
TMP_109=lisp.callFunctionWithCallStack(G_90,G_99,L_STORE21__52,L_GENSYMS19__51);
TMP_110=lisp.callFunctionWithCallStack(G_90,G_96,L_GENSYMS19__51);
TMP_111=lisp.CL_values(L_GENSYMS19__51,L_ARGS20__49,TMP_108,TMP_109,TMP_110);
}
}
}
return TMP_111;
});
lisp.CL_put(G_96,G_80,TMP_103);
TMP_112=lisp.CL_symbolFunction(G_99);
lisp.CL_put(G_96,G_93,TMP_112);
{
TMP_113=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_118;
let TMP_117;
let TMP_116;
let L_STREAM__58;
let L_STRUCTURE__57;
L_STRUCTURE__57=arguments[0];
L_STREAM__58=arguments[1];
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__58);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([83, 72, 65, 82, 80, 45, 69, 81, 85, 65, 76])),L_STREAM__58);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__58);
lisp.callFunctionWithCallStack(G_115,G_64,L_STREAM__58);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__58);
TMP_116=lisp.CL_structureRef(L_STRUCTURE__57,0);
lisp.callFunctionWithCallStack(G_115,TMP_116,L_STREAM__58);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__58);
lisp.callFunctionWithCallStack(G_115,G_66,L_STREAM__58);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__58);
TMP_117=lisp.CL_structureRef(L_STRUCTURE__57,1);
lisp.callFunctionWithCallStack(G_115,TMP_117,L_STREAM__58);
TMP_118=lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([41])),L_STREAM__58);
return TMP_118;
});
L_G29__59=lisp.values1(TMP_113);
{
L_G30__60=lisp.values1(L_G29__59);
lisp.CL_put(G_59,G_119,L_G30__60);
}
}
CL_COMMON_LISP_PERCENTCOPY_READTABLE.lisp_name = '%COPY-READTABLE'
lisp.setSymbolFunction(G_121, CL_COMMON_LISP_PERCENTCOPY_READTABLE);
CL_COMMON_LISP_READTABLEP.lisp_name = 'READTABLEP'
lisp.setSymbolFunction(G_124, CL_COMMON_LISP_READTABLEP);
CL_COMMON_LISP_MAKE_READTABLE.lisp_name = 'MAKE-READTABLE'
lisp.setSymbolFunction(G_128, CL_COMMON_LISP_MAKE_READTABLE);
CL_COMMON_LISP_READTABLE_CASE.lisp_name = 'READTABLE-CASE'
lisp.setSymbolFunction(G_142, CL_COMMON_LISP_READTABLE_CASE);
TMP_146=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_148;
let TMP_147;
let L_STRUCTURE__72;
let L_VALUE__71;
L_VALUE__71=arguments[0];
L_STRUCTURE__72=arguments[1];
TMP_147=lisp.CL_structurep(L_STRUCTURE__72);
if(lisp.values1(TMP_147) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__72,G_73);
}
TMP_148=lisp.CL_structureSet(L_STRUCTURE__72,0,L_VALUE__71);
return TMP_148;
});
lisp.CL_setSymbolFunction(G_145,TMP_146);
TMP_149=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_157;
let TMP_156;
let TMP_155;
let TMP_154;
let L_STORE33__80;
let TMP_153;
let L_GENSYMS31__79;
let TMP_152;
let TMP_150;
let L_ARGS32__77;
let L_G37__75;
let L_G36__74;
L_G36__74=arguments[0];
{
L_G37__75=lisp.values1(L_G36__74);
{
L_ARGS32__77=lisp.values1(L_G37__75);
{
TMP_150=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_151;
let L_X__78;
L_X__78=arguments[0];
TMP_151=lisp.callFunctionWithCallStack(G_10);
return TMP_151;
});
TMP_152=lisp.callFunctionWithCallStack(G_85,TMP_150,L_ARGS32__77);
L_GENSYMS31__79=lisp.values1(TMP_152);
TMP_153=lisp.callFunctionWithCallStack(G_10,G_8.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE33__80=lisp.values1(TMP_153);
TMP_154=lisp.callFunctionWithCallStack(G_88,L_STORE33__80);
TMP_155=lisp.callFunctionWithCallStack(G_90,G_145,L_STORE33__80,L_GENSYMS31__79);
TMP_156=lisp.callFunctionWithCallStack(G_90,G_142,L_GENSYMS31__79);
TMP_157=lisp.CL_values(L_GENSYMS31__79,L_ARGS32__77,TMP_154,TMP_155,TMP_156);
}
}
}
return TMP_157;
});
lisp.CL_put(G_142,G_80,TMP_149);
TMP_158=lisp.CL_symbolFunction(G_145);
lisp.CL_put(G_142,G_93,TMP_158);
CL_COMMON_LISP_READTABLE_TABLE.lisp_name = 'READTABLE-TABLE'
lisp.setSymbolFunction(G_160, CL_COMMON_LISP_READTABLE_TABLE);
TMP_164=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_166;
let TMP_165;
let L_STRUCTURE__86;
let L_VALUE__85;
L_VALUE__85=arguments[0];
L_STRUCTURE__86=arguments[1];
TMP_165=lisp.CL_structurep(L_STRUCTURE__86);
if(lisp.values1(TMP_165) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__86,G_73);
}
TMP_166=lisp.CL_structureSet(L_STRUCTURE__86,1,L_VALUE__85);
return TMP_166;
});
lisp.CL_setSymbolFunction(G_163,TMP_164);
TMP_167=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_175;
let TMP_174;
let TMP_173;
let TMP_172;
let L_STORE41__94;
let TMP_171;
let L_GENSYMS39__93;
let TMP_170;
let TMP_168;
let L_ARGS40__91;
let L_G45__89;
let L_G44__88;
L_G44__88=arguments[0];
{
L_G45__89=lisp.values1(L_G44__88);
{
L_ARGS40__91=lisp.values1(L_G45__89);
{
TMP_168=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_169;
let L_X__92;
L_X__92=arguments[0];
TMP_169=lisp.callFunctionWithCallStack(G_10);
return TMP_169;
});
TMP_170=lisp.callFunctionWithCallStack(G_85,TMP_168,L_ARGS40__91);
L_GENSYMS39__93=lisp.values1(TMP_170);
TMP_171=lisp.callFunctionWithCallStack(G_10,G_8.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE41__94=lisp.values1(TMP_171);
TMP_172=lisp.callFunctionWithCallStack(G_88,L_STORE41__94);
TMP_173=lisp.callFunctionWithCallStack(G_90,G_163,L_STORE41__94,L_GENSYMS39__93);
TMP_174=lisp.callFunctionWithCallStack(G_90,G_160,L_GENSYMS39__93);
TMP_175=lisp.CL_values(L_GENSYMS39__93,L_ARGS40__91,TMP_172,TMP_173,TMP_174);
}
}
}
return TMP_175;
});
lisp.CL_put(G_160,G_80,TMP_167);
TMP_176=lisp.CL_symbolFunction(G_163);
lisp.CL_put(G_160,G_93,TMP_176);
CL_COMMON_LISP_READTABLE_DISPATCH_MACRO_TABLE.lisp_name = 'READTABLE-DISPATCH-MACRO-TABLE'
lisp.setSymbolFunction(G_178, CL_COMMON_LISP_READTABLE_DISPATCH_MACRO_TABLE);
TMP_182=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_184;
let TMP_183;
let L_STRUCTURE__100;
let L_VALUE__99;
L_VALUE__99=arguments[0];
L_STRUCTURE__100=arguments[1];
TMP_183=lisp.CL_structurep(L_STRUCTURE__100);
if(lisp.values1(TMP_183) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,L_STRUCTURE__100,G_73);
}
TMP_184=lisp.CL_structureSet(L_STRUCTURE__100,2,L_VALUE__99);
return TMP_184;
});
lisp.CL_setSymbolFunction(G_181,TMP_182);
TMP_185=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_193;
let TMP_192;
let TMP_191;
let TMP_190;
let L_STORE49__108;
let TMP_189;
let L_GENSYMS47__107;
let TMP_188;
let TMP_186;
let L_ARGS48__105;
let L_G53__103;
let L_G52__102;
L_G52__102=arguments[0];
{
L_G53__103=lisp.values1(L_G52__102);
{
L_ARGS48__105=lisp.values1(L_G53__103);
{
TMP_186=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_187;
let L_X__106;
L_X__106=arguments[0];
TMP_187=lisp.callFunctionWithCallStack(G_10);
return TMP_187;
});
TMP_188=lisp.callFunctionWithCallStack(G_85,TMP_186,L_ARGS48__105);
L_GENSYMS47__107=lisp.values1(TMP_188);
TMP_189=lisp.callFunctionWithCallStack(G_10,G_8.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE49__108=lisp.values1(TMP_189);
TMP_190=lisp.callFunctionWithCallStack(G_88,L_STORE49__108);
TMP_191=lisp.callFunctionWithCallStack(G_90,G_181,L_STORE49__108,L_GENSYMS47__107);
TMP_192=lisp.callFunctionWithCallStack(G_90,G_178,L_GENSYMS47__107);
TMP_193=lisp.CL_values(L_GENSYMS47__107,L_ARGS48__105,TMP_190,TMP_191,TMP_192);
}
}
}
return TMP_193;
});
lisp.CL_put(G_178,G_80,TMP_185);
TMP_194=lisp.CL_symbolFunction(G_181);
lisp.CL_put(G_178,G_93,TMP_194);
{
TMP_195=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_199;
let TMP_198;
let TMP_197;
let TMP_196;
let L_STREAM__114;
let L_STRUCTURE__113;
L_STRUCTURE__113=arguments[0];
L_STREAM__114=arguments[1];
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__114);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([82, 69, 65, 68, 84, 65, 66, 76, 69])),L_STREAM__114);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__114);
lisp.callFunctionWithCallStack(G_115,G_129,L_STREAM__114);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__114);
TMP_196=lisp.CL_structureRef(L_STRUCTURE__113,0);
lisp.callFunctionWithCallStack(G_115,TMP_196,L_STREAM__114);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__114);
lisp.callFunctionWithCallStack(G_115,G_132,L_STREAM__114);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__114);
TMP_197=lisp.CL_structureRef(L_STRUCTURE__113,1);
lisp.callFunctionWithCallStack(G_115,TMP_197,L_STREAM__114);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__114);
lisp.callFunctionWithCallStack(G_115,G_136,L_STREAM__114);
lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([32])),L_STREAM__114);
TMP_198=lisp.CL_structureRef(L_STRUCTURE__113,2);
lisp.callFunctionWithCallStack(G_115,TMP_198,L_STREAM__114);
TMP_199=lisp.callFunctionWithCallStack(G_114,G_8.func(lisp.codeArrayToString([41])),L_STREAM__114);
return TMP_199;
});
L_G57__115=lisp.values1(TMP_195);
{
L_G58__116=lisp.values1(L_G57__115);
lisp.CL_put(G_125,G_119,L_G58__116);
}
}
TMP_201=lisp.CL_boundp(G_200);
if(lisp.values1(TMP_201) !== lisp.S_nil){
}else{
TMP_202=G_128.func();
lisp.CL_set(G_200,TMP_202);
}
lisp.CL_put(G_200,G_4,G_5);
CL_COMMON_LISP_INIT_READTABLE.lisp_name = 'INIT-READTABLE'
lisp.setSymbolFunction(G_204, CL_COMMON_LISP_INIT_READTABLE);
CL_COMMON_LISP_SET_READTABLE.lisp_name = 'SET-READTABLE'
lisp.setSymbolFunction(G_229, CL_COMMON_LISP_SET_READTABLE);
CL_COMMON_LISP_COPY_READTABLE.lisp_name = 'COPY-READTABLE'
lisp.setSymbolFunction(G_234, CL_COMMON_LISP_COPY_READTABLE);
CL_COMMON_LISP_GET_MACRO_CHARACTER.lisp_name = 'GET-MACRO-CHARACTER'
lisp.setSymbolFunction(G_247, CL_COMMON_LISP_GET_MACRO_CHARACTER);
CL_COMMON_LISP_SET_MACRO_CHARACTER.lisp_name = 'SET-MACRO-CHARACTER'
lisp.setSymbolFunction(G_206, CL_COMMON_LISP_SET_MACRO_CHARACTER);
CL_COMMON_LISP_MAKE_DISPATCH_MACRO_CHARACTER.lisp_name = 'MAKE-DISPATCH-MACRO-CHARACTER'
lisp.setSymbolFunction(G_213, CL_COMMON_LISP_MAKE_DISPATCH_MACRO_CHARACTER);
CL_COMMON_LISP_GET_DISPATCH_TABLE.lisp_name = 'GET-DISPATCH-TABLE'
lisp.setSymbolFunction(G_267, CL_COMMON_LISP_GET_DISPATCH_TABLE);
CL_COMMON_LISP_SET_DISPATCH_MACRO_CHARACTER.lisp_name = 'SET-DISPATCH-MACRO-CHARACTER'
lisp.setSymbolFunction(G_215, CL_COMMON_LISP_SET_DISPATCH_MACRO_CHARACTER);
CL_COMMON_LISP_GET_DISPATCH_MACRO_CHARACTER.lisp_name = 'GET-DISPATCH-MACRO-CHARACTER'
lisp.setSymbolFunction(G_277, CL_COMMON_LISP_GET_DISPATCH_MACRO_CHARACTER);
CL_COMMON_LISP_NON_TERMINATE_MACRO_CHARACTER_P.lisp_name = 'NON-TERMINATE-MACRO-CHARACTER-P'
lisp.setSymbolFunction(G_283, CL_COMMON_LISP_NON_TERMINATE_MACRO_CHARACTER_P);
CL_COMMON_LISP_NUMBER_STRING_P.lisp_name = 'NUMBER-STRING-P'
lisp.setSymbolFunction(G_292, CL_COMMON_LISP_NUMBER_STRING_P);
CL_COMMON_LISP_PARSE_NUMBER.lisp_name = 'PARSE-NUMBER'
lisp.setSymbolFunction(G_321, CL_COMMON_LISP_PARSE_NUMBER);
CL_COMMON_LISP_CHECK_DOT.lisp_name = 'CHECK-DOT'
lisp.setSymbolFunction(G_482, CL_COMMON_LISP_CHECK_DOT);
CL_COMMON_LISP_PARSE_SYMBOL.lisp_name = 'PARSE-SYMBOL'
lisp.setSymbolFunction(G_497, CL_COMMON_LISP_PARSE_SYMBOL);
CL_COMMON_LISP_PARSE_TOKEN.lisp_name = 'PARSE-TOKEN'
lisp.setSymbolFunction(G_548, CL_COMMON_LISP_PARSE_TOKEN);
CL_COMMON_LISP_READ_MULTIPLE_ESCAPE_1.lisp_name = 'READ-MULTIPLE-ESCAPE-1'
lisp.setSymbolFunction(G_556, CL_COMMON_LISP_READ_MULTIPLE_ESCAPE_1);
CL_COMMON_LISP_READ_MULTIPLE_ESCAPE.lisp_name = 'READ-MULTIPLE-ESCAPE'
lisp.setSymbolFunction(G_567, CL_COMMON_LISP_READ_MULTIPLE_ESCAPE);
CL_COMMON_LISP_DELIMITER_P.lisp_name = 'DELIMITER-P'
lisp.setSymbolFunction(G_571, CL_COMMON_LISP_DELIMITER_P);
CL_COMMON_LISP_MAYBE_INVERT.lisp_name = 'MAYBE-INVERT'
lisp.setSymbolFunction(G_583, CL_COMMON_LISP_MAYBE_INVERT);
CL_COMMON_LISP_READ_TOKEN_1.lisp_name = 'READ-TOKEN-1'
lisp.setSymbolFunction(G_609, CL_COMMON_LISP_READ_TOKEN_1);
CL_COMMON_LISP_READ_TOKEN.lisp_name = 'READ-TOKEN'
lisp.setSymbolFunction(G_630, CL_COMMON_LISP_READ_TOKEN);
CL_COMMON_LISP_READ.lisp_name = 'READ'
lisp.setSymbolFunction(G_635, CL_COMMON_LISP_READ);
CL_COMMON_LISP_CONS_READER.lisp_name = 'CONS-READER'
lisp.setSymbolFunction(G_205, CL_COMMON_LISP_CONS_READER);
CL_COMMON_LISP_READ_RIGHT_PAREN.lisp_name = 'READ-RIGHT-PAREN'
lisp.setSymbolFunction(G_207, CL_COMMON_LISP_READ_RIGHT_PAREN);
CL_COMMON_LISP_QUOTE_READER.lisp_name = 'QUOTE-READER'
lisp.setSymbolFunction(G_208, CL_COMMON_LISP_QUOTE_READER);
CL_COMMON_LISP_BACKQUOTE_READER.lisp_name = 'BACKQUOTE-READER'
lisp.setSymbolFunction(G_209, CL_COMMON_LISP_BACKQUOTE_READER);
CL_COMMON_LISP_UNQUOTE_READER.lisp_name = 'UNQUOTE-READER'
lisp.setSymbolFunction(G_210, CL_COMMON_LISP_UNQUOTE_READER);
CL_COMMON_LISP_LINE_COMMENT_READER.lisp_name = 'LINE-COMMENT-READER'
lisp.setSymbolFunction(G_211, CL_COMMON_LISP_LINE_COMMENT_READER);
CL_COMMON_LISP_STRING_READER.lisp_name = 'STRING-READER'
lisp.setSymbolFunction(G_212, CL_COMMON_LISP_STRING_READER);
CL_COMMON_LISP_READ_DISPATCH_MACRO_CHARACTER.lisp_name = 'READ-DISPATCH-MACRO-CHARACTER'
lisp.setSymbolFunction(G_265, CL_COMMON_LISP_READ_DISPATCH_MACRO_CHARACTER);
CL_COMMON_LISP_CHARACTER_READER.lisp_name = 'CHARACTER-READER'
lisp.setSymbolFunction(G_214, CL_COMMON_LISP_CHARACTER_READER);
CL_COMMON_LISP_FUNCTION_READER.lisp_name = 'FUNCTION-READER'
lisp.setSymbolFunction(G_216, CL_COMMON_LISP_FUNCTION_READER);
CL_COMMON_LISP_ARRAY_READER.lisp_name = 'ARRAY-READER'
lisp.setSymbolFunction(G_217, CL_COMMON_LISP_ARRAY_READER);
CL_COMMON_LISP_UNINTERN_SYMBOL_READER.lisp_name = 'UNINTERN-SYMBOL-READER'
lisp.setSymbolFunction(G_218, CL_COMMON_LISP_UNINTERN_SYMBOL_READER);
CL_COMMON_LISP_FEATUREP.lisp_name = 'FEATUREP'
lisp.setSymbolFunction(G_766, CL_COMMON_LISP_FEATUREP);
CL_COMMON_LISP_SHARP_PLUS_MINUS_READER.lisp_name = 'SHARP-PLUS-MINUS-READER'
lisp.setSymbolFunction(G_219, CL_COMMON_LISP_SHARP_PLUS_MINUS_READER);
CL_COMMON_LISP_SUBST_SHARP_EQUAL.lisp_name = 'SUBST-SHARP-EQUAL'
lisp.setSymbolFunction(G_823, CL_COMMON_LISP_SUBST_SHARP_EQUAL);
CL_COMMON_LISP_SHARP_EQUAL_READER.lisp_name = 'SHARP-EQUAL-READER'
lisp.setSymbolFunction(G_220, CL_COMMON_LISP_SHARP_EQUAL_READER);
CL_COMMON_LISP_SHARP_SHARP_READER.lisp_name = 'SHARP-SHARP-READER'
lisp.setSymbolFunction(G_221, CL_COMMON_LISP_SHARP_SHARP_READER);
CL_COMMON_LISP_BIT_VECTOR_READER.lisp_name = 'BIT-VECTOR-READER'
lisp.setSymbolFunction(G_222, CL_COMMON_LISP_BIT_VECTOR_READER);
CL_COMMON_LISP_BIT_NUMBER_READER.lisp_name = 'BIT-NUMBER-READER'
lisp.setSymbolFunction(G_224, CL_COMMON_LISP_BIT_NUMBER_READER);
CL_COMMON_LISP_BLOCK_COMMENT_READER.lisp_name = 'BLOCK-COMMENT-READER'
lisp.setSymbolFunction(G_223, CL_COMMON_LISP_BLOCK_COMMENT_READER);
CL_COMMON_LISP_SHARP_DOT_READER.lisp_name = 'SHARP-DOT-READER'
lisp.setSymbolFunction(G_225, CL_COMMON_LISP_SHARP_DOT_READER);
CL_COMMON_LISP_CL_STRING_READER.lisp_name = 'CL-STRING-READER'
lisp.setSymbolFunction(G_226, CL_COMMON_LISP_CL_STRING_READER);
CL_COMMON_LISP_CL_TO_JS_READER.lisp_name = 'CL-TO-JS-READER'
lisp.setSymbolFunction(G_227, CL_COMMON_LISP_CL_TO_JS_READER);
CL_COMMON_LISP_READ_FROM_STRING.lisp_name = 'READ-FROM-STRING'
lisp.setSymbolFunction(G_966, CL_COMMON_LISP_READ_FROM_STRING);
CL_COMMON_LISP_READ_CHAR.lisp_name = 'READ-CHAR'
lisp.setSymbolFunction(G_560, CL_COMMON_LISP_READ_CHAR);
CL_COMMON_LISP_UNREAD_CHAR.lisp_name = 'UNREAD-CHAR'
lisp.setSymbolFunction(G_614, CL_COMMON_LISP_UNREAD_CHAR);
CL_COMMON_LISP_READ_LINE.lisp_name = 'READ-LINE'
lisp.setSymbolFunction(G_980, CL_COMMON_LISP_READ_LINE);
CL_COMMON_LISP_READ_DELIMITED_LIST.lisp_name = 'READ-DELIMITED-LIST'
lisp.setSymbolFunction(G_755, CL_COMMON_LISP_READ_DELIMITED_LIST);
G_234.func(lisp.S_nil,lisp.symbolValue(G_200));
lisp.ensurePackage('VALTAN-CORE.READER');}catch(TMP_1){G_1004.func();
console.log(TMP_1.message);
}


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_4;
let G_6;
let G_7;
let G_9;
let G_11;
let G_15;
let G_17;
let G_19;
let G_21;
let G_23;
let G_25;
let G_27;
let G_28;
let G_29;
let G_32;
let G_34;
let G_36;
let G_37;
let G_38;
let G_39;
let G_40;
let G_41;
let G_42;
let G_43;
let G_44;
let G_45;
let G_46;
let G_49;
let G_56;
let G_63;
let G_64;
let G_80;
let G_81;
let G_83;
let G_90;
let G_92;
let G_94;
let G_96;
let CL_COMMON_LISP_OPEN;
let TMP_30;
// toplevel defun
let F_OPEN_2;
F_OPEN_2=(function(){
if(arguments.length < 1 || 9 < arguments.length) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_26;
let TMP_24;
let TMP_22;
let TMP_20;
let TMP_18;
let TMP_16;
let L_G1__8;
let TMP_14;
let L_G0__7;
let L_IF_DOES_NOT_EXIST__5;
let L_IF_EXISTS__4;
let L_ELEMENT_TYPE__3;
let L_DIRECTION__2;
let L_FILENAME__1;
L_FILENAME__1=arguments[0];
let supplied_DIRECTION__2;
for (let TMP_5 = 1; TMP_5 < arguments.length; TMP_5 += 2) {
if(arguments[TMP_5] === G_4){
supplied_DIRECTION__2=arguments[TMP_5+1];
break;
}
}
L_DIRECTION__2=supplied_DIRECTION__2 !== undefined ? supplied_DIRECTION__2 : (lisp.values1(G_6));
let supplied_ELEMENT_TYPE__3;
for (let TMP_8 = 1; TMP_8 < arguments.length; TMP_8 += 2) {
if(arguments[TMP_8] === G_7){
supplied_ELEMENT_TYPE__3=arguments[TMP_8+1];
break;
}
}
L_ELEMENT_TYPE__3=supplied_ELEMENT_TYPE__3 !== undefined ? supplied_ELEMENT_TYPE__3 : (lisp.values1(lisp.S_nil));
let supplied_IF_EXISTS__4;
for (let TMP_10 = 1; TMP_10 < arguments.length; TMP_10 += 2) {
if(arguments[TMP_10] === G_9){
supplied_IF_EXISTS__4=arguments[TMP_10+1];
break;
}
}
L_IF_EXISTS__4=supplied_IF_EXISTS__4 !== undefined ? supplied_IF_EXISTS__4 : (lisp.values1(lisp.S_nil));
let supplied_IF_DOES_NOT_EXIST__5;
for (let TMP_12 = 1; TMP_12 < arguments.length; TMP_12 += 2) {
if(arguments[TMP_12] === G_11){
supplied_IF_DOES_NOT_EXIST__5=arguments[TMP_12+1];
break;
}
}
L_IF_DOES_NOT_EXIST__5=supplied_IF_DOES_NOT_EXIST__5 !== undefined ? supplied_IF_DOES_NOT_EXIST__5 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_13 = 1; TMP_13 < arguments.length; TMP_13 += 2) {
if(arguments[TMP_13]!==G_11 && arguments[TMP_13]!==G_9 && arguments[TMP_13]!==G_7 && arguments[TMP_13]!==G_4) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_13].name); }
}
{
L_G0__7=lisp.values1(L_DIRECTION__2);
{
TMP_14=lisp.callFunctionWithCallStack(G_15,L_G0__7,G_6);
L_G1__8=lisp.values1(TMP_14);
if(lisp.values1(L_G1__8) !== lisp.S_nil){
TMP_18=lisp.callFunctionWithCallStack(G_19,L_FILENAME__1);
TMP_20=lisp.callFunctionWithCallStack(G_21,TMP_18);
TMP_22=lisp.callFunctionWithCallStack(G_23,TMP_20);
TMP_24=lisp.callFunctionWithCallStack(G_25,G_17,TMP_22);
TMP_16=TMP_24;
}else{
TMP_26=lisp.callFunctionWithCallStack(G_27,G_21.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G0__7,lisp.makeCons(G_6, lisp.S_nil));
TMP_16=TMP_26;
}
}
}
return TMP_16;
});
CL_COMMON_LISP_OPEN=lisp.values1(F_OPEN_2);
// initialize symbols
G_3 = lisp.intern('OPEN', 'COMMON-LISP');
G_4 = lisp.intern('DIRECTION', 'KEYWORD');
G_6 = lisp.intern('INPUT', 'KEYWORD');
G_7 = lisp.intern('ELEMENT-TYPE', 'KEYWORD');
G_9 = lisp.intern('IF-EXISTS', 'KEYWORD');
G_11 = lisp.intern('IF-DOES-NOT-EXIST', 'KEYWORD');
G_15 = lisp.intern('EQL', 'COMMON-LISP');
G_17 = lisp.intern('STRING-STREAM', 'KEYWORD');
G_19 = lisp.intern('READ-WHOLE-FILE', 'SYSTEM');
G_21 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_23 = lisp.intern('MAKE-STRING-INPUT-STREAM', 'COMMON-LISP');
G_25 = lisp.intern('MAKE-FILE-INPUT-STREAM', 'COMMON-LISP');
G_27 = lisp.intern('ERROR', 'COMMON-LISP');
G_28 = lisp.intern('WITH-OPEN-FILE', 'COMMON-LISP');
G_29 = lisp.intern('MACRO', 'COMPILER');
G_32 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_34 = lisp.intern('<=', 'COMMON-LISP');
G_36 = lisp.intern('VAR', 'COMMON-LISP');
G_37 = lisp.intern('FILENAME', 'COMMON-LISP');
G_38 = lisp.intern('&REST', 'COMMON-LISP');
G_39 = lisp.intern('OPTIONS', 'COMMON-LISP');
G_40 = lisp.intern('&KEY', 'COMMON-LISP');
G_41 = lisp.intern('DIRECTION', 'COMMON-LISP');
G_42 = lisp.intern('ELEMENT-TYPE', 'COMMON-LISP');
G_43 = lisp.intern('IF-EXISTS', 'COMMON-LISP');
G_44 = lisp.intern('IF-DOES-NOT-EXIST', 'COMMON-LISP');
G_45 = lisp.intern('&BODY', 'COMMON-LISP');
G_46 = lisp.intern('BODY', 'COMMON-LISP');
G_49 = lisp.intern('FIRST', 'COMMON-LISP');
G_56 = lisp.intern('REST', 'COMMON-LISP');
G_63 = lisp.intern('NULL', 'COMMON-LISP');
G_64 = lisp.intern('NIL', 'COMMON-LISP');
G_80 = lisp.intern('CDDR', 'COMMON-LISP');
G_81 = lisp.makeSymbol("DEFAULT");G_83 = lisp.intern('GETF', 'COMMON-LISP');
G_90 = lisp.intern('WITH-OPEN-STREAM', 'COMMON-LISP');
G_92 = lisp.intern('LIST*', 'COMMON-LISP');
G_94 = lisp.intern('LIST', 'COMMON-LISP');
G_96 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_OPEN.lisp_name = 'OPEN'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_OPEN);
TMP_30=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_95;
let TMP_93;
let TMP_91;
let L_BODY__34;
let L_G13__33;
let TMP_89;
let L_IF_DOES_NOT_EXIST__32;
let TMP_88;
let L_IF_EXISTS__31;
let TMP_87;
let L_ELEMENT_TYPE__30;
let TMP_86;
let L_DIRECTION__29;
let TMP_85;
let TMP_84;
let L_G11__28;
let TMP_82;
let L_G10__27;
let L_G24__26;
let TMP_79;
let TMP_78;
let TMP_77;
let L_G23__25;
let TMP_76;
let TMP_75;
let TMP_74;
let L_G22__24;
let TMP_73;
let TMP_72;
let TMP_71;
let L_G21__23;
let TMP_70;
let TMP_69;
let TMP_68;
let L_G20__22;
let TMP_67;
let TMP_66;
let TMP_62;
let L_G12__21;
let TMP_60;
let L_OPTIONS__19;
let L_G9__18;
let TMP_58;
let L_FILENAME__17;
let TMP_57;
let L_G8__16;
let TMP_55;
let L_VAR__15;
let TMP_54;
let L_G7__14;
let TMP_53;
let TMP_52;
let TMP_51;
let TMP_50;
let L_G6__13;
let TMP_48;
let L_G5__12;
let TMP_47;
let TMP_35;
let TMP_33;
let TMP_31;
let L_G4__11;
let L_G3__10;
L_G3__10=lisp.jsArrayToList(arguments, 0);
{
L_G4__11=lisp.values1(L_G3__10);
{
TMP_31=lisp.callFunctionWithCallStack(G_32,L_G4__11);
TMP_33=lisp.callFunctionWithCallStack(G_34,1,TMP_31);
if(lisp.values1(TMP_33) !== lisp.S_nil){
TMP_35=lisp.values1(lisp.S_nil);
}else{
TMP_47=lisp.callFunctionWithCallStack(G_27,G_21.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_36, lisp.makeCons(G_37, lisp.makeCons(G_38, lisp.makeCons(G_39, lisp.makeCons(G_40, lisp.makeCons(lisp.makeCons(G_41, lisp.makeCons(G_6, lisp.S_nil)), lisp.makeCons(G_42, lisp.makeCons(G_43, lisp.makeCons(G_44, lisp.S_nil))))))))), lisp.makeCons(G_45, lisp.makeCons(G_46, lisp.S_nil))),L_G4__11);
TMP_35=lisp.values1(lisp.values1(TMP_47));
}
L_G5__12=lisp.values1(TMP_35);
TMP_48=lisp.callFunctionWithCallStack(G_49,L_G4__11);
L_G6__13=lisp.values1(TMP_48);
TMP_50=lisp.callFunctionWithCallStack(G_32,L_G6__13);
TMP_51=lisp.callFunctionWithCallStack(G_34,2,TMP_50);
if(lisp.values1(TMP_51) !== lisp.S_nil){
TMP_52=lisp.values1(lisp.S_nil);
}else{
TMP_53=lisp.callFunctionWithCallStack(G_27,G_21.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_36, lisp.makeCons(G_37, lisp.makeCons(G_38, lisp.makeCons(G_39, lisp.makeCons(G_40, lisp.makeCons(lisp.makeCons(G_41, lisp.makeCons(G_6, lisp.S_nil)), lisp.makeCons(G_42, lisp.makeCons(G_43, lisp.makeCons(G_44, lisp.S_nil))))))))),L_G6__13);
TMP_52=lisp.values1(lisp.values1(TMP_53));
}
L_G7__14=lisp.values1(TMP_52);
TMP_54=lisp.callFunctionWithCallStack(G_49,L_G6__13);
L_VAR__15=lisp.values1(TMP_54);
TMP_55=lisp.callFunctionWithCallStack(G_56,L_G6__13);
L_G8__16=lisp.values1(TMP_55);
TMP_57=lisp.callFunctionWithCallStack(G_49,L_G8__16);
L_FILENAME__17=lisp.values1(TMP_57);
TMP_58=lisp.callFunctionWithCallStack(G_56,L_G8__16);
L_G9__18=lisp.values1(TMP_58);
L_OPTIONS__19=lisp.values1(L_G9__18);
try {
{
L_G12__21=lisp.values1(L_G9__18);
let HOST_G15_STATE = 'G17';
HOST_G15: for(;;){
try{
switch(HOST_G15_STATE){
case 'G17':
case 'G16':
TMP_62=lisp.callFunctionWithCallStack(G_63,L_G12__21);
if(lisp.values1(TMP_62) !== lisp.S_nil){
throw new lisp.BlockValue(G_64,lisp.values1(lisp.S_nil));}else{
let HOST_G18_STATE = 'G19';
HOST_G18: for(;;){
try{
switch(HOST_G18_STATE){
case 'G19':
{
TMP_66=lisp.callFunctionWithCallStack(G_49,L_G12__21);
TMP_67=lisp.CL_eq(G_11,TMP_66);
L_G20__22=lisp.values1(TMP_67);
if(lisp.values1(L_G20__22) !== lisp.S_nil){
TMP_68=lisp.values1(L_G20__22);
}else{
{
TMP_69=lisp.callFunctionWithCallStack(G_49,L_G12__21);
TMP_70=lisp.CL_eq(G_9,TMP_69);
L_G21__23=lisp.values1(TMP_70);
if(lisp.values1(L_G21__23) !== lisp.S_nil){
TMP_71=lisp.values1(L_G21__23);
}else{
{
TMP_72=lisp.callFunctionWithCallStack(G_49,L_G12__21);
TMP_73=lisp.CL_eq(G_7,TMP_72);
L_G22__24=lisp.values1(TMP_73);
if(lisp.values1(L_G22__24) !== lisp.S_nil){
TMP_74=lisp.values1(L_G22__24);
}else{
{
TMP_75=lisp.callFunctionWithCallStack(G_49,L_G12__21);
TMP_76=lisp.CL_eq(G_4,TMP_75);
L_G23__25=lisp.values1(TMP_76);
if(lisp.values1(L_G23__25) !== lisp.S_nil){
TMP_77=lisp.values1(L_G23__25);
}else{
TMP_77=lisp.values1(lisp.S_nil);
}
}
TMP_74=lisp.values1(lisp.values1(TMP_77));
}
}
TMP_71=lisp.values1(lisp.values1(TMP_74));
}
}
TMP_68=lisp.values1(lisp.values1(TMP_71));
}
}
if(lisp.values1(lisp.values1(TMP_68)) !== lisp.S_nil){
}else{
TMP_78=lisp.callFunctionWithCallStack(G_49,L_G12__21);
lisp.callFunctionWithCallStack(G_27,G_21.func(lisp.codeArrayToString([85, 110, 107, 110, 111, 119, 110, 32, 38, 107, 101, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 58, 32, 126, 83])),TMP_78);
}
}
break;
}catch(ERR_65){
if(ERR_65 instanceof lisp.TagValue && ERR_65.id==='HOST_G18'){HOST_G18_STATE=ERR_65.index;}
else{throw ERR_65;}}
}
{
TMP_79=lisp.callFunctionWithCallStack(G_80,L_G12__21);
L_G24__26=lisp.values1(TMP_79);
L_G12__21=lisp.values1(L_G24__26);
}
throw new lisp.TagValue('HOST_G15', 'G16');
}
}
break;
}catch(ERR_61){
if(ERR_61 instanceof lisp.TagValue && ERR_61.id==='HOST_G15'){HOST_G15_STATE=ERR_61.index;}
else{throw ERR_61;}}
}
}
TMP_60=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)))
}catch(E__59){if(E__59 instanceof lisp.BlockValue && E__59.name === G_64){TMP_60=E__59.value;}
else{throw E__59;}
}
L_G10__27=lisp.values1(TMP_60);
TMP_82=lisp.callFunctionWithCallStack(G_83,L_G9__18,G_4,G_81);
L_G11__28=lisp.values1(TMP_82);
TMP_84=lisp.CL_eq(L_G11__28,G_81);
if(lisp.values1(TMP_84) !== lisp.S_nil){
TMP_85=lisp.values1(G_6);
}else{
TMP_85=lisp.values1(L_G11__28);
}
L_DIRECTION__29=lisp.values1(TMP_85);
TMP_86=lisp.callFunctionWithCallStack(G_83,L_G9__18,G_7);
L_ELEMENT_TYPE__30=lisp.values1(TMP_86);
TMP_87=lisp.callFunctionWithCallStack(G_83,L_G9__18,G_9);
L_IF_EXISTS__31=lisp.values1(TMP_87);
TMP_88=lisp.callFunctionWithCallStack(G_83,L_G9__18,G_11);
L_IF_DOES_NOT_EXIST__32=lisp.values1(TMP_88);
TMP_89=lisp.callFunctionWithCallStack(G_56,L_G4__11);
L_G13__33=lisp.values1(TMP_89);
L_BODY__34=lisp.values1(L_G13__33);
TMP_91=lisp.callFunctionWithCallStack(G_92,G_3,L_FILENAME__17,L_OPTIONS__19);
TMP_93=lisp.callFunctionWithCallStack(G_94,L_VAR__15,TMP_91);
TMP_95=lisp.callFunctionWithCallStack(G_92,G_90,TMP_93,L_BODY__34);
}
}
return TMP_95;
});
lisp.CL_put(G_28,G_29,TMP_30);
}catch(TMP_1){G_96.func();
console.log(TMP_1.message);
}


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
// toplevel defun
lisp.defpackage('COMMON-LISP', {exportNames: ['&ALLOW-OTHER-KEYS', '&AUX', '&BODY', '&ENVIRONMENT', '&KEY', '&OPTIONAL', '&REST', '&WHOLE', '*', '**', '***', '*BREAK-ON-SIGNALS*', '*COMPILE-FILE-PATHNAME*', '*COMPILE-FILE-TRUENAME*', '*COMPILE-PRINT*', '*COMPILE-VERBOSE*', '*DEBUG-IO*', '*DEBUGGER-HOOK*', '*DEFAULT-PATHNAME-DEFAULTS*', '*ERROR-OUTPUT*', '*FEATURES*', '*GENSYM-COUNTER*', '*LOAD-PATHNAME*', '*LOAD-PRINT*', '*LOAD-TRUENAME*', '*LOAD-VERBOSE*', '*MACROEXPAND-HOOK*', '*MODULES*', '*PACKAGE*', '*PRINT-ARRAY*', '*PRINT-BASE*', '*PRINT-CASE*', '*PRINT-CIRCLE*', '*PRINT-ESCAPE*', '*PRINT-GENSYM*', '*PRINT-LENGTH*', '*PRINT-LEVEL*', '*PRINT-LINES*', '*PRINT-MISER-WIDTH*', '*PRINT-PPRINT-DISPATCH*', '*PRINT-PRETTY*', '*PRINT-RADIX*', '*PRINT-READABLY*', '*PRINT-RIGHT-MARGIN*', '*QUERY-IO*', '*RANDOM-STATE*', '*READ-BASE*', '*READ-DEFAULT-FLOAT-FORMAT*', '*READ-EVAL*', '*READ-SUPPRESS*', '*READTABLE*', '*STANDARD-INPUT*', '*STANDARD-OUTPUT*', '*TERMINAL-IO*', '*TRACE-OUTPUT*', '+', '++', '+++', '-', '/', '//', '///', '/=', '1+', '1-', '<', '<=', '=', '>', '>=', 'ABORT', 'ABS', 'ACONS', 'ACOS', 'ACOSH', 'ADD-METHOD', 'ADJOIN', 'ADJUST-ARRAY', 'ADJUSTABLE-ARRAY-P', 'ALLOCATE-INSTANCE', 'ALPHA-CHAR-P', 'ALPHANUMERICP', 'AND', 'APPEND', 'APPLY', 'APROPOS', 'APROPOS-LIST', 'AREF', 'ARITHMETIC-ERROR', 'ARITHMETIC-ERROR-OPERANDS', 'ARITHMETIC-ERROR-OPERATION', 'ARRAY', 'ARRAY-DIMENSION', 'ARRAY-DIMENSION-LIMIT', 'ARRAY-DIMENSIONS', 'ARRAY-DISPLACEMENT', 'ARRAY-ELEMENT-TYPE', 'ARRAY-HAS-FILL-POINTER-P', 'ARRAY-IN-BOUNDS-P', 'ARRAY-RANK', 'ARRAY-RANK-LIMIT', 'ARRAY-ROW-MAJOR-INDEX', 'ARRAY-TOTAL-SIZE', 'ARRAY-TOTAL-SIZE-LIMIT', 'ARRAYP', 'ASH', 'ASIN', 'ASINH', 'ASSERT', 'ASSOC', 'ASSOC-IF', 'ASSOC-IF-NOT', 'ATAN', 'ATANH', 'ATOM', 'BASE-CHAR', 'BASE-STRING', 'BIGNUM', 'BIT', 'BIT-AND', 'BIT-ANDC1', 'BIT-ANDC2', 'BIT-EQV', 'BIT-IOR', 'BIT-NAND', 'BIT-NOR', 'BIT-NOT', 'BIT-ORC1', 'BIT-ORC2', 'BIT-VECTOR', 'BIT-VECTOR-P', 'BIT-XOR', 'BLOCK', 'BOOLE', 'BOOLE-1', 'BOOLE-2', 'BOOLE-AND', 'BOOLE-ANDC1', 'BOOLE-ANDC2', 'BOOLE-C1', 'BOOLE-C2', 'BOOLE-CLR', 'BOOLE-EQV', 'BOOLE-IOR', 'BOOLE-NAND', 'BOOLE-NOR', 'BOOLE-ORC1', 'BOOLE-ORC2', 'BOOLE-SET', 'BOOLE-XOR', 'BOOLEAN', 'BOTH-CASE-P', 'BOUNDP', 'BREAK', 'BROADCAST-STREAM', 'BROADCAST-STREAM-STREAMS', 'BUILT-IN-CLASS', 'BUTLAST', 'BYTE', 'BYTE-POSITION', 'BYTE-SIZE', 'CAAAAR', 'CAAADR', 'CAAAR', 'CAADAR', 'CAADDR', 'CAADR', 'CAAR', 'CADAAR', 'CADADR', 'CADAR', 'CADDAR', 'CADDDR', 'CADDR', 'CADR', 'CALL-ARGUMENTS-LIMIT', 'CALL-METHOD', 'CALL-NEXT-METHOD', 'CAR', 'CASE', 'CATCH', 'CCASE', 'CDAAAR', 'CDAADR', 'CDAAR', 'CDADAR', 'CDADDR', 'CDADR', 'CDAR', 'CDDAAR', 'CDDADR', 'CDDAR', 'CDDDAR', 'CDDDDR', 'CDDDR', 'CDDR', 'CDR', 'CEILING', 'CELL-ERROR', 'CELL-ERROR-NAME', 'CERROR', 'CHANGE-CLASS', 'CHAR', 'CHAR-CODE', 'CHAR-CODE-LIMIT', 'CHAR-DOWNCASE', 'CHAR-EQUAL', 'CHAR-GREATERP', 'CHAR-INT', 'CHAR-LESSP', 'CHAR-NAME', 'CHAR-NOT-EQUAL', 'CHAR-NOT-GREATERP', 'CHAR-NOT-LESSP', 'CHAR-UPCASE', 'CHAR/=', 'CHAR<', 'CHAR<=', 'CHAR=', 'CHAR>', 'CHAR>=', 'CHARACTER', 'CHARACTERP', 'CHECK-TYPE', 'CIS', 'CLASS', 'CLASS-NAME', 'CLASS-OF', 'CLEAR-INPUT', 'CLEAR-OUTPUT', 'CLOSE', 'CLRHASH', 'CODE-CHAR', 'COERCE', 'COMPILATION-SPEED', 'COMPILE', 'COMPILE-FILE', 'COMPILE-FILE-PATHNAME', 'COMPILED-FUNCTION', 'COMPILED-FUNCTION-P', 'COMPILER-MACRO', 'COMPILER-MACRO-FUNCTION', 'COMPLEMENT', 'COMPLEX', 'COMPLEXP', 'COMPUTE-APPLICABLE-METHODS', 'COMPUTE-RESTARTS', 'CONCATENATE', 'CONCATENATED-STREAM', 'CONCATENATED-STREAM-STREAMS', 'COND', 'CONDITION', 'CONJUGATE', 'CONS', 'CONSP', 'CONSTANTLY', 'CONSTANTP', 'CONTINUE', 'CONTROL-ERROR', 'COPY-ALIST', 'COPY-LIST', 'COPY-PPRINT-DISPATCH', 'COPY-READTABLE', 'COPY-SEQ', 'COPY-STRUCTURE', 'COPY-SYMBOL', 'COPY-TREE', 'COS', 'COSH', 'COUNT', 'COUNT-IF', 'COUNT-IF-NOT', 'CTYPECASE', 'DEBUG', 'DECF', 'DECLAIM', 'DECLARATION', 'DECLARE', 'DECODE-FLOAT', 'DECODE-UNIVERSAL-TIME', 'DEFCLASS', 'DEFCONSTANT', 'DEFGENERIC', 'DEFINE-COMPILER-MACRO', 'DEFINE-CONDITION', 'DEFINE-METHOD-COMBINATION', 'DEFINE-MODIFY-MACRO', 'DEFINE-SETF-EXPANDER', 'DEFINE-SYMBOL-MACRO', 'DEFMACRO', 'DEFMETHOD', 'DEFPACKAGE', 'DEFPARAMETER', 'DEFSETF', 'DEFSTRUCT', 'DEFTYPE', 'DEFUN', 'DEFVAR', 'DELETE', 'DELETE-DUPLICATES', 'DELETE-FILE', 'DELETE-IF', 'DELETE-IF-NOT', 'DELETE-PACKAGE', 'DENOMINATOR', 'DEPOSIT-FIELD', 'DESCRIBE', 'DESCRIBE-OBJECT', 'DESTRUCTURING-BIND', 'DIGIT-CHAR', 'DIGIT-CHAR-P', 'DIRECTORY', 'DIRECTORY-NAMESTRING', 'DISASSEMBLE', 'DIVISION-BY-ZERO', 'DO', 'DO*', 'DO-ALL-SYMBOLS', 'DO-EXTERNAL-SYMBOLS', 'DO-SYMBOLS', 'DOCUMENTATION', 'DOLIST', 'DOTIMES', 'DOUBLE-FLOAT', 'DOUBLE-FLOAT-EPSILON', 'DOUBLE-FLOAT-NEGATIVE-EPSILON', 'DPB', 'DRIBBLE', 'DYNAMIC-EXTENT', 'ECASE', 'ECHO-STREAM', 'ECHO-STREAM-INPUT-STREAM', 'ECHO-STREAM-OUTPUT-STREAM', 'ED', 'EIGHTH', 'ELT', 'ENCODE-UNIVERSAL-TIME', 'END-OF-FILE', 'ENDP', 'ENOUGH-NAMESTRING', 'ENSURE-DIRECTORIES-EXIST', 'ENSURE-GENERIC-FUNCTION', 'EQ', 'EQL', 'EQUAL', 'EQUALP', 'ERROR', 'ETYPECASE', 'EVAL', 'EVAL-WHEN', 'EVENP', 'EVERY', 'EXP', 'EXPORT', 'EXPT', 'EXTENDED-CHAR', 'FBOUNDP', 'FCEILING', 'FDEFINITION', 'FFLOOR', 'FIFTH', 'FILE-AUTHOR', 'FILE-ERROR', 'FILE-ERROR-PATHNAME', 'FILE-LENGTH', 'FILE-NAMESTRING', 'FILE-POSITION', 'FILE-STREAM', 'FILE-STRING-LENGTH', 'FILE-WRITE-DATE', 'FILL', 'FILL-POINTER', 'FIND', 'FIND-ALL-SYMBOLS', 'FIND-CLASS', 'FIND-IF', 'FIND-IF-NOT', 'FIND-METHOD', 'FIND-PACKAGE', 'FIND-RESTART', 'FIND-SYMBOL', 'FINISH-OUTPUT', 'FIRST', 'FIXNUM', 'FLET', 'FLOAT', 'FLOAT-DIGITS', 'FLOAT-PRECISION', 'FLOAT-RADIX', 'FLOAT-SIGN', 'FLOATING-POINT-INEXACT', 'FLOATING-POINT-INVALID-OPERATION', 'FLOATING-POINT-OVERFLOW', 'FLOATING-POINT-UNDERFLOW', 'FLOATP', 'FLOOR', 'FMAKUNBOUND', 'FORCE-OUTPUT', 'FORMAT', 'FORMATTER', 'FOURTH', 'FRESH-LINE', 'FROUND', 'FTRUNCATE', 'FTYPE', 'FUNCALL', 'FUNCTION', 'FUNCTION-KEYWORDS', 'FUNCTION-LAMBDA-EXPRESSION', 'FUNCTIONP', 'GCD', 'GENERIC-FUNCTION', 'GENSYM', 'GENTEMP', 'GET', 'GET-DECODED-TIME', 'GET-DISPATCH-MACRO-CHARACTER', 'GET-INTERNAL-REAL-TIME', 'GET-INTERNAL-RUN-TIME', 'GET-MACRO-CHARACTER', 'GET-OUTPUT-STREAM-STRING', 'GET-PROPERTIES', 'GET-SETF-EXPANSION', 'GET-UNIVERSAL-TIME', 'GETF', 'GETHASH', 'GO', 'GRAPHIC-CHAR-P', 'HANDLER-BIND', 'HANDLER-CASE', 'HASH-TABLE', 'HASH-TABLE-COUNT', 'HASH-TABLE-P', 'HASH-TABLE-REHASH-SIZE', 'HASH-TABLE-REHASH-THRESHOLD', 'HASH-TABLE-SIZE', 'HASH-TABLE-TEST', 'HOST-NAMESTRING', 'IDENTITY', 'IF', 'IGNORABLE', 'IGNORE', 'IGNORE-ERRORS', 'IMAGPART', 'IMPORT', 'IN-PACKAGE', 'INCF', 'INITIALIZE-INSTANCE', 'INLINE', 'INPUT-STREAM-P', 'INSPECT', 'INTEGER', 'INTEGER-DECODE-FLOAT', 'INTEGER-LENGTH', 'INTEGERP', 'INTERACTIVE-STREAM-P', 'INTERN', 'INTERNAL-TIME-UNITS-PER-SECOND', 'INTERSECTION', 'INVALID-METHOD-ERROR', 'INVOKE-DEBUGGER', 'INVOKE-RESTART', 'INVOKE-RESTART-INTERACTIVELY', 'ISQRT', 'KEYWORD', 'KEYWORDP', 'LABELS', 'LAMBDA', 'LAMBDA-LIST-KEYWORDS', 'LAMBDA-PARAMETERS-LIMIT', 'LAST', 'LCM', 'LDB', 'LDB-TEST', 'LDIFF', 'LEAST-NEGATIVE-DOUBLE-FLOAT', 'LEAST-NEGATIVE-LONG-FLOAT', 'LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT', 'LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT', 'LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT', 'LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT', 'LEAST-NEGATIVE-SHORT-FLOAT', 'LEAST-NEGATIVE-SINGLE-FLOAT', 'LEAST-POSITIVE-DOUBLE-FLOAT', 'LEAST-POSITIVE-LONG-FLOAT', 'LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT', 'LEAST-POSITIVE-NORMALIZED-LONG-FLOAT', 'LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT', 'LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT', 'LEAST-POSITIVE-SHORT-FLOAT', 'LEAST-POSITIVE-SINGLE-FLOAT', 'LENGTH', 'LET', 'LET*', 'LISP-IMPLEMENTATION-TYPE', 'LISP-IMPLEMENTATION-VERSION', 'LIST', 'LIST*', 'LIST-ALL-PACKAGES', 'LIST-LENGTH', 'LISTEN', 'LISTP', 'LOAD', 'LOAD-LOGICAL-PATHNAME-TRANSLATIONS', 'LOAD-TIME-VALUE', 'LOCALLY', 'LOG', 'LOGAND', 'LOGANDC1', 'LOGANDC2', 'LOGBITP', 'LOGCOUNT', 'LOGEQV', 'LOGICAL-PATHNAME', 'LOGICAL-PATHNAME-TRANSLATIONS', 'LOGIOR', 'LOGNAND', 'LOGNOR', 'LOGNOT', 'LOGORC1', 'LOGORC2', 'LOGTEST', 'LOGXOR', 'LONG-FLOAT', 'LONG-FLOAT-EPSILON', 'LONG-FLOAT-NEGATIVE-EPSILON', 'LONG-SITE-NAME', 'LOOP', 'LOOP-FINISH', 'LOWER-CASE-P', 'MACHINE-INSTANCE', 'MACHINE-TYPE', 'MACHINE-VERSION', 'MACRO-FUNCTION', 'MACROEXPAND', 'MACROEXPAND-1', 'MACROLET', 'MAKE-ARRAY', 'MAKE-BROADCAST-STREAM', 'MAKE-CONCATENATED-STREAM', 'MAKE-CONDITION', 'MAKE-DISPATCH-MACRO-CHARACTER', 'MAKE-ECHO-STREAM', 'MAKE-HASH-TABLE', 'MAKE-INSTANCE', 'MAKE-INSTANCES-OBSOLETE', 'MAKE-LIST', 'MAKE-LOAD-FORM', 'MAKE-LOAD-FORM-SAVING-SLOTS', 'MAKE-METHOD', 'MAKE-PACKAGE', 'MAKE-PATHNAME', 'MAKE-RANDOM-STATE', 'MAKE-SEQUENCE', 'MAKE-STRING', 'MAKE-STRING-INPUT-STREAM', 'MAKE-STRING-OUTPUT-STREAM', 'MAKE-SYMBOL', 'MAKE-SYNONYM-STREAM', 'MAKE-TWO-WAY-STREAM', 'MAKUNBOUND', 'MAP', 'MAP-INTO', 'MAPC', 'MAPCAN', 'MAPCAR', 'MAPCON', 'MAPHASH', 'MAPL', 'MAPLIST', 'MASK-FIELD', 'MAX', 'MEMBER', 'MEMBER-IF', 'MEMBER-IF-NOT', 'MERGE', 'MERGE-PATHNAMES', 'METHOD', 'METHOD-COMBINATION', 'METHOD-COMBINATION-ERROR', 'METHOD-QUALIFIERS', 'MIN', 'MINUSP', 'MISMATCH', 'MOD', 'MOST-NEGATIVE-DOUBLE-FLOAT', 'MOST-NEGATIVE-FIXNUM', 'MOST-NEGATIVE-LONG-FLOAT', 'MOST-NEGATIVE-SHORT-FLOAT', 'MOST-NEGATIVE-SINGLE-FLOAT', 'MOST-POSITIVE-DOUBLE-FLOAT', 'MOST-POSITIVE-FIXNUM', 'MOST-POSITIVE-LONG-FLOAT', 'MOST-POSITIVE-SHORT-FLOAT', 'MOST-POSITIVE-SINGLE-FLOAT', 'MUFFLE-WARNING', 'MULTIPLE-VALUE-BIND', 'MULTIPLE-VALUE-CALL', 'MULTIPLE-VALUE-LIST', 'MULTIPLE-VALUE-PROG1', 'MULTIPLE-VALUE-SETQ', 'MULTIPLE-VALUES-LIMIT', 'NAME-CHAR', 'NAMESTRING', 'NBUTLAST', 'NCONC', 'NEXT-METHOD-P', 'NIL', 'NINTERSECTION', 'NINTH', 'NO-APPLICABLE-METHOD', 'NO-NEXT-METHOD', 'NOT', 'NOTANY', 'NOTEVERY', 'NOTINLINE', 'NRECONC', 'NREVERSE', 'NSET-DIFFERENCE', 'NSET-EXCLUSIVE-OR', 'NSTRING-CAPITALIZE', 'NSTRING-DOWNCASE', 'NSTRING-UPCASE', 'NSUBLIS', 'NSUBST', 'NSUBST-IF', 'NSUBST-IF-NOT', 'NSUBSTITUTE', 'NSUBSTITUTE-IF', 'NSUBSTITUTE-IF-NOT', 'NTH', 'NTH-VALUE', 'NTHCDR', 'NULL', 'NUMBER', 'NUMBERP', 'NUMERATOR', 'NUNION', 'ODDP', 'OPEN', 'OPEN-STREAM-P', 'OPTIMIZE', 'OR', 'OTHERWISE', 'OUTPUT-STREAM-P', 'PACKAGE', 'PACKAGE-ERROR', 'PACKAGE-ERROR-PACKAGE', 'PACKAGE-NAME', 'PACKAGE-NICKNAMES', 'PACKAGE-SHADOWING-SYMBOLS', 'PACKAGE-USE-LIST', 'PACKAGE-USED-BY-LIST', 'PACKAGEP', 'PAIRLIS', 'PARSE-ERROR', 'PARSE-INTEGER', 'PARSE-NAMESTRING', 'PATHNAME', 'PATHNAME-DEVICE', 'PATHNAME-DIRECTORY', 'PATHNAME-HOST', 'PATHNAME-MATCH-P', 'PATHNAME-NAME', 'PATHNAME-TYPE', 'PATHNAME-VERSION', 'PATHNAMEP', 'PEEK-CHAR', 'PHASE', 'PI', 'PLUSP', 'POP', 'POSITION', 'POSITION-IF', 'POSITION-IF-NOT', 'PPRINT', 'PPRINT-DISPATCH', 'PPRINT-EXIT-IF-LIST-EXHAUSTED', 'PPRINT-FILL', 'PPRINT-INDENT', 'PPRINT-LINEAR', 'PPRINT-LOGICAL-BLOCK', 'PPRINT-NEWLINE', 'PPRINT-POP', 'PPRINT-TAB', 'PPRINT-TABULAR', 'PRIN1', 'PRIN1-TO-STRING', 'PRINC', 'PRINC-TO-STRING', 'PRINT', 'PRINT-NOT-READABLE', 'PRINT-NOT-READABLE-OBJECT', 'PRINT-OBJECT', 'PRINT-UNREADABLE-OBJECT', 'PROBE-FILE', 'PROCLAIM', 'PROG', 'PROG*', 'PROG1', 'PROG2', 'PROGN', 'PROGRAM-ERROR', 'PROGV', 'PROVIDE', 'PSETF', 'PSETQ', 'PUSH', 'PUSHNEW', 'QUOTE', 'RANDOM', 'RANDOM-STATE', 'RANDOM-STATE-P', 'RASSOC', 'RASSOC-IF', 'RASSOC-IF-NOT', 'RATIO', 'RATIONAL', 'RATIONALIZE', 'RATIONALP', 'READ', 'READ-BYTE', 'READ-CHAR', 'READ-CHAR-NO-HANG', 'READ-DELIMITED-LIST', 'READ-FROM-STRING', 'READ-LINE', 'READ-PRESERVING-WHITESPACE', 'READ-SEQUENCE', 'READER-ERROR', 'READTABLE', 'READTABLE-CASE', 'READTABLEP', 'REAL', 'REALP', 'REALPART', 'REDUCE', 'REINITIALIZE-INSTANCE', 'REM', 'REMF', 'REMHASH', 'REMOVE', 'REMOVE-DUPLICATES', 'REMOVE-IF', 'REMOVE-IF-NOT', 'REMOVE-METHOD', 'REMPROP', 'RENAME-FILE', 'RENAME-PACKAGE', 'REPLACE', 'REQUIRE', 'REST', 'RESTART', 'RESTART-BIND', 'RESTART-CASE', 'RESTART-NAME', 'RETURN', 'RETURN-FROM', 'REVAPPEND', 'REVERSE', 'ROOM', 'ROTATEF', 'ROUND', 'ROW-MAJOR-AREF', 'RPLACA', 'RPLACD', 'SAFETY', 'SATISFIES', 'SBIT', 'SCALE-FLOAT', 'SCHAR', 'SEARCH', 'SECOND', 'SEQUENCE', 'SERIOUS-CONDITION', 'SET', 'SET-DIFFERENCE', 'SET-DISPATCH-MACRO-CHARACTER', 'SET-EXCLUSIVE-OR', 'SET-MACRO-CHARACTER', 'SET-PPRINT-DISPATCH', 'SET-SYNTAX-FROM-CHAR', 'SETF', 'SETQ', 'SEVENTH', 'SHADOW', 'SHADOWING-IMPORT', 'SHARED-INITIALIZE', 'SHIFTF', 'SHORT-FLOAT', 'SHORT-FLOAT-EPSILON', 'SHORT-FLOAT-NEGATIVE-EPSILON', 'SHORT-SITE-NAME', 'SIGNAL', 'SIGNED-BYTE', 'SIGNUM', 'SIMPLE-ARRAY', 'SIMPLE-BASE-STRING', 'SIMPLE-BIT-VECTOR', 'SIMPLE-BIT-VECTOR-P', 'SIMPLE-CONDITION', 'SIMPLE-CONDITION-FORMAT-ARGUMENTS', 'SIMPLE-CONDITION-FORMAT-CONTROL', 'SIMPLE-ERROR', 'SIMPLE-STRING', 'SIMPLE-STRING-P', 'SIMPLE-TYPE-ERROR', 'SIMPLE-VECTOR', 'SIMPLE-VECTOR-P', 'SIMPLE-WARNING', 'SIN', 'SINGLE-FLOAT', 'SINGLE-FLOAT-EPSILON', 'SINGLE-FLOAT-NEGATIVE-EPSILON', 'SINH', 'SIXTH', 'SLEEP', 'SLOT-BOUNDP', 'SLOT-EXISTS-P', 'SLOT-MAKUNBOUND', 'SLOT-MISSING', 'SLOT-UNBOUND', 'SLOT-VALUE', 'SOFTWARE-TYPE', 'SOFTWARE-VERSION', 'SOME', 'SORT', 'SPACE', 'SPECIAL', 'SPECIAL-OPERATOR-P', 'SPEED', 'SQRT', 'STABLE-SORT', 'STANDARD', 'STANDARD-CHAR', 'STANDARD-CHAR-P', 'STANDARD-CLASS', 'STANDARD-GENERIC-FUNCTION', 'STANDARD-METHOD', 'STANDARD-OBJECT', 'STEP', 'STORAGE-CONDITION', 'STORE-VALUE', 'STREAM', 'STREAM-ELEMENT-TYPE', 'STREAM-ERROR', 'STREAM-ERROR-STREAM', 'STREAM-EXTERNAL-FORMAT', 'STREAMP', 'STRING', 'STRING-CAPITALIZE', 'STRING-DOWNCASE', 'STRING-EQUAL', 'STRING-GREATERP', 'STRING-LEFT-TRIM', 'STRING-LESSP', 'STRING-NOT-EQUAL', 'STRING-NOT-GREATERP', 'STRING-NOT-LESSP', 'STRING-RIGHT-TRIM', 'STRING-STREAM', 'STRING-TRIM', 'STRING-UPCASE', 'STRING/=', 'STRING<', 'STRING<=', 'STRING=', 'STRING>', 'STRING>=', 'STRINGP', 'STRUCTURE', 'STRUCTURE-CLASS', 'STRUCTURE-OBJECT', 'STYLE-WARNING', 'SUBLIS', 'SUBSEQ', 'SUBSETP', 'SUBST', 'SUBST-IF', 'SUBST-IF-NOT', 'SUBSTITUTE', 'SUBSTITUTE-IF', 'SUBSTITUTE-IF-NOT', 'SUBTYPEP', 'SVREF', 'SXHASH', 'SYMBOL', 'SYMBOL-FUNCTION', 'SYMBOL-MACROLET', 'SYMBOL-NAME', 'SYMBOL-PACKAGE', 'SYMBOL-PLIST', 'SYMBOL-VALUE', 'SYMBOLP', 'SYNONYM-STREAM', 'SYNONYM-STREAM-SYMBOL', 'T', 'TAGBODY', 'TAILP', 'TAN', 'TANH', 'TENTH', 'TERPRI', 'THE', 'THIRD', 'THROW', 'TIME', 'TRACE', 'TRANSLATE-LOGICAL-PATHNAME', 'TRANSLATE-PATHNAME', 'TREE-EQUAL', 'TRUENAME', 'TRUNCATE', 'TWO-WAY-STREAM', 'TWO-WAY-STREAM-INPUT-STREAM', 'TWO-WAY-STREAM-OUTPUT-STREAM', 'TYPE', 'TYPE-ERROR', 'TYPE-ERROR-DATUM', 'TYPE-ERROR-EXPECTED-TYPE', 'TYPE-OF', 'TYPECASE', 'TYPEP', 'UNBOUND-SLOT', 'UNBOUND-SLOT-INSTANCE', 'UNBOUND-VARIABLE', 'UNDEFINED-FUNCTION', 'UNEXPORT', 'UNINTERN', 'UNION', 'UNLESS', 'UNREAD-CHAR', 'UNSIGNED-BYTE', 'UNTRACE', 'UNUSE-PACKAGE', 'UNWIND-PROTECT', 'UPDATE-INSTANCE-FOR-DIFFERENT-CLASS', 'UPDATE-INSTANCE-FOR-REDEFINED-CLASS', 'UPGRADED-ARRAY-ELEMENT-TYPE', 'UPGRADED-COMPLEX-PART-TYPE', 'UPPER-CASE-P', 'USE-PACKAGE', 'USE-VALUE', 'USER-HOMEDIR-PATHNAME', 'VALUES', 'VALUES-LIST', 'VARIABLE', 'VECTOR', 'VECTOR-POP', 'VECTOR-PUSH', 'VECTOR-PUSH-EXTEND', 'VECTORP', 'WARN', 'WARNING', 'WHEN', 'WILD-PATHNAME-P', 'WITH-ACCESSORS', 'WITH-COMPILATION-UNIT', 'WITH-CONDITION-RESTARTS', 'WITH-HASH-TABLE-ITERATOR', 'WITH-INPUT-FROM-STRING', 'WITH-OPEN-FILE', 'WITH-OPEN-STREAM', 'WITH-OUTPUT-TO-STRING', 'WITH-PACKAGE-ITERATOR', 'WITH-SIMPLE-RESTART', 'WITH-SLOTS', 'WITH-STANDARD-IO-SYNTAX', 'WRITE', 'WRITE-BYTE', 'WRITE-CHAR', 'WRITE-LINE', 'WRITE-SEQUENCE', 'WRITE-STRING', 'WRITE-TO-STRING', 'Y-OR-N-P', 'YES-OR-NO-P', 'ZEROP'], usePackageNames: [], nicknames: []});
// initialize symbols
G_2 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.ensurePackage('COMMON-LISP');}catch(TMP_1){G_2.func();
console.log(TMP_1.message);
}


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_7;
let G_9;
let G_11;
let G_16;
let G_17;
let G_19;
let G_22;
let G_24;
let G_25;
let G_26;
let G_28;
let G_30;
let G_32;
let G_33;
let G_35;
let G_37;
let G_38;
let G_40;
let G_45;
let G_47;
let G_48;
let G_50;
let G_54;
let G_58;
let G_60;
let G_61;
let G_64;
let G_66;
let G_69;
let G_72;
let G_75;
let G_91;
let G_92;
let G_94;
let G_97;
let G_98;
let G_101;
let G_102;
let G_104;
let G_106;
let G_108;
let G_110;
let G_112;
let G_114;
let G_119;
let G_122;
let G_137;
let G_140;
let G_155;
let G_158;
let G_173;
let G_176;
let G_191;
let G_194;
let G_209;
let G_212;
let G_227;
let G_230;
let G_245;
let G_246;
let G_257;
let G_259;
let G_262;
let G_265;
let G_267;
let G_273;
let G_275;
let G_279;
let G_283;
let G_298;
let G_300;
let G_314;
let G_315;
let G_317;
let G_331;
let G_332;
let G_334;
let G_348;
let G_349;
let G_351;
let G_365;
let G_366;
let G_368;
let G_382;
let G_383;
let G_385;
let G_399;
let G_400;
let G_402;
let G_416;
let G_417;
let G_419;
let G_433;
let G_434;
let G_436;
let G_456;
let G_459;
let G_463;
let G_466;
let G_468;
let G_472;
let G_476;
let G_480;
let G_483;
let G_485;
let G_489;
let G_492;
let G_494;
let G_497;
let G_499;
let G_502;
let G_504;
let G_507;
let G_509;
let G_512;
let G_514;
let G_518;
let G_522;
let G_525;
let G_528;
let G_531;
let G_543;
let G_554;
let G_556;
let G_557;
let G_561;
let G_564;
let G_567;
let G_569;
let G_570;
let G_571;
let G_572;
let G_586;
let G_591;
let G_599;
let G_612;
let G_615;
let G_618;
let G_622;
let G_627;
let G_631;
let G_633;
let G_645;
let G_647;
let G_655;
let G_657;
let G_662;
let G_669;
let G_674;
let G_677;
let G_683;
let G_685;
let G_686;
let G_692;
let G_694;
let G_697;
let G_701;
let G_705;
let G_720;
let G_725;
let G_731;
let G_743;
let G_749;
let G_754;
let G_764;
let G_768;
let G_781;
let G_787;
let G_793;
let G_798;
let G_799;
let G_803;
let G_806;
let G_809;
let G_828;
let G_839;
let G_840;
let G_854;
let G_876;
let G_878;
let G_885;
let G_910;
let G_912;
let G_914;
let G_928;
let G_929;
let G_931;
let G_945;
let G_946;
let G_948;
let G_962;
let G_963;
let G_965;
let G_979;
let G_981;
let G_995;
let G_996;
let G_998;
let G_1012;
let G_1013;
let G_1015;
let G_1017;
let G_1019;
let G_1033;
let G_1034;
let G_1036;
let G_1050;
let G_1052;
let G_1066;
let G_1067;
let G_1069;
let G_1083;
let G_1084;
let G_1086;
let G_1099;
let G_1101;
let G_1103;
let G_1106;
let G_1111;
let G_1124;
let G_1129;
let G_1136;
let G_1154;
let G_1155;
let G_1159;
let G_1170;
let G_1180;
let G_1183;
let G_1184;
let G_1187;
let G_1188;
let G_1194;
let G_1197;
let G_1200;
let G_1202;
let G_1206;
let G_1208;
let G_1214;
let G_1224;
let G_1227;
let G_1232;
let G_1237;
let G_1247;
let G_1251;
let G_1254;
let G_1265;
let G_1268;
let G_1276;
let G_1279;
let G_1285;
let G_1294;
let G_1298;
let G_1299;
let G_1303;
let G_1304;
let G_1308;
let G_1309;
let G_1323;
let G_1331;
let G_1344;
let G_1353;
let G_1368;
let G_1369;
let G_1371;
let G_1373;
let G_1376;
let G_1385;
let G_1389;
let G_1390;
let G_1391;
let G_1392;
let G_1393;
let G_1394;
let G_1395;
let G_1396;
let G_1399;
let G_1401;
let G_1403;
let G_1406;
let G_1425;
let G_1428;
let G_1430;
let G_1431;
let G_1433;
let G_1435;
let G_1437;
let G_1439;
let G_1442;
let G_1462;
let G_1465;
let G_1471;
let G_1485;
let G_1488;
let G_1498;
let G_1501;
let G_1515;
let G_1516;
let G_1518;
let G_1520;
let G_1523;
let G_1525;
let G_1532;
let G_1536;
let G_1538;
let G_1539;
let G_1561;
let G_1576;
let G_1577;
let G_1598;
let G_1604;
let G_1606;
let G_1610;
let G_1637;
let G_1641;
let G_1645;
let G_1651;
let G_1656;
let G_1667;
let G_1672;
let G_1679;
let G_1682;
let G_1685;
let G_1706;
let G_1709;
let G_1712;
let G_1721;
let G_1722;
let G_1723;
let G_1724;
let G_1729;
let G_1730;
let G_1731;
let G_1732;
let G_1733;
let G_1734;
let G_1735;
let G_1736;
let G_1737;
let G_1738;
let G_1739;
let G_1740;
let G_1741;
let G_1742;
let G_1743;
let G_1744;
let G_1745;
let G_1746;
let G_1775;
let G_1781;
let G_1788;
let G_1790;
let G_1791;
let G_1800;
let G_1830;
let G_1831;
let G_1834;
let G_1837;
let G_1840;
let G_1843;
let G_1848;
let G_1850;
let G_1853;
let G_1856;
let G_1859;
let G_1861;
let G_1862;
let G_1863;
let G_1865;
let G_1866;
let G_1867;
let G_1870;
let G_1871;
let G_1872;
let G_1873;
let G_1874;
let G_1875;
let G_1894;
let G_1897;
let G_1901;
let G_1902;
let G_1903;
let G_1905;
let G_1906;
let G_1907;
let G_1910;
let G_1911;
let G_1929;
let G_1932;
let G_1935;
let G_1938;
let G_1939;
let G_1956;
let G_1959;
let G_1960;
let G_1977;
let G_1980;
let G_1983;
let G_1987;
let G_1998;
let G_2008;
let G_2011;
let G_2013;
let G_2015;
let G_2016;
let G_2035;
let G_2049;
let G_2059;
let G_2066;
let G_2079;
let G_2097;
let G_2098;
let G_2108;
let G_2111;
let G_2131;
let CL_COMMON_LISP_MAKE_CONDITION;
let CL_COMMON_LISP_ADD_WRITER_METHOD;
let CL_COMMON_LISP_ADD_READER_METHOD;
let CL_COMMON_LISP_FIND_METHOD;
let CL_COMMON_LISP_REMOVE_METHOD;
let CL_COMMON_LISP_ADD_METHOD;
let CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_METHOD;
let CL_COMMON_LISP_CANONICALIZE_METHOD_SPECIALIZER;
let CL_COMMON_LISP_CANONICALIZE_METHOD_SPECIALIZERS;
let CL_COMMON_LISP_ENSURE_METHOD;
let CL_COMMON_LISP_KLUDGE_ARGLIST;
let CL_COMMON_LISP_PARSE_DEFMETHOD;
let CL_COMMON_LISP_EXTRACT_SPECIALIZERS;
let CL_COMMON_LISP_EXTRACT_LAMBDA_LIST;
let CL_COMMON_LISP_ANALYZE_LAMBDA_LIST;
let CL_COMMON_LISP_COMPUTE_PRIMARY_EMFUN;
let CL_COMMON_LISP_STD_COMPUTE_EFFECTIVE_METHOD_FUNCTION;
let CL_COMMON_LISP_AROUND_METHOD_P;
let CL_COMMON_LISP_AFTER_METHOD_P;
let CL_COMMON_LISP_BEFORE_METHOD_P;
let CL_COMMON_LISP_PRIMARY_METHOD_P;
let CL_COMMON_LISP_SUB_SPECIALIZER_P;
let CL_COMMON_LISP_SUBCLASSP;
let CL_COMMON_LISP_STD_METHOD_MORE_SPECIFIC_P;
let CL_COMMON_LISP_PERCENTCOMPUTE_APPLICABLE_METHODS;
let CL_COMMON_LISP_COMPUTE_APPLICABLE_METHODS;
let CL_COMMON_LISP_SLOW_METHOD_LOOKUP;
let CL_COMMON_LISP_STD_COMPUTE_DISCRIMINATING_FUNCTION;
let CL_COMMON_LISP_REQUIRED_CLASSES;
let CL_COMMON_LISP_FINALIZE_GENERIC_FUNCTION;
let CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_GENERIC_FUNCTION;
let CL_COMMON_LISP_ENSURE_GENERIC_FUNCTION_USING_CLASS;
let CL_COMMON_LISP_ENSURE_GENERIC_FUNCTION;
let CL_COMMON_LISP_CANONICALIZE_DEFGENERIC_OPTIONS;
let CL_COMMON_LISP_CANONICALIZE_DEFGENERIC_OPTION;
let CL_COMMON_LISP_METHOD_QUALIFIERS;
let CL_COMMON_LISP_METHOD_SPECIALIZERS;
let CL_COMMON_LISP_METHOD_LAMBDA_LIST;
let CL_COMMON_LISP_METHOD_GENERIC_FUNCTION;
let CL_COMMON_LISP_METHOD_FUNCTION;
let CL_COMMON_LISP_SET_FUNCALLABLE_INSTANCE_FUNCTION;
let CL_COMMON_LISP_GENERIC_FUNCTION_MIN_ARGC;
let CL_COMMON_LISP_CLASSES_TO_EMF_TABLE;
let CL_COMMON_LISP_GENERIC_FUNCTION_METHOD_CLASS;
let CL_COMMON_LISP_GENERIC_FUNCTION_LAMBDA_LIST;
let CL_COMMON_LISP_GENERIC_FUNCTION_METHODS;
let CL_COMMON_LISP_GENERIC_FUNCTION_NAME;
let CL_COMMON_LISP_STD_COMPUTE_DEFAULT_INITARGS;
let CL_COMMON_LISP_STD_COMPUTE_EFFECTIVE_SLOT_DEFINITION;
let CL_COMMON_LISP_STD_COMPUTE_SLOTS;
let CL_COMMON_LISP_COLLECT_SUPERCLASSESSTAR;
let CL_COMMON_LISP_TOPOLOGICAL_SORT;
let CL_COMMON_LISP_LOCAL_PRECEDENCE_ORDERING;
let CL_COMMON_LISP_STD_TIE_BREAKER_RULE;
let CL_COMMON_LISP_STD_COMPUTE_CLASS_PRECEDENCE_LIST;
let CL_COMMON_LISP_STD_FINALIZE_INHERITANCE;
let CL_COMMON_LISP_MAKE_EFFECTIVE_SLOT_DEFINITION;
let CL_COMMON_LISP_MAKE_DIRECT_SLOT_DEFINITION;
let CL_COMMON_LISP_STD_AFTER_INITIALIZATION_FOR_CLASSES;
let CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_CLASS;
let CL_COMMON_LISP_ENSURE_CLASS_USING_CLASS;
let CL_COMMON_LISP_ENSURE_CLASS;
let CL_COMMON_LISP_CHECK_DUPLICATE_DIRECT_DEFAULT_INITARGS;
let CL_COMMON_LISP_CHECK_DUPLICATE_DIRECT_SLOTS;
let CL_COMMON_LISP_CANONICALIZE_CLASS;
let CL_COMMON_LISP_CANONICALIZE_DEFCLASS_OPTIONS;
let CL_COMMON_LISP_CANONICALIZE_DIRECT_SLOT_SPECS;
let CL_COMMON_LISP_CANONICALIZE_DIRECT_SLOT;
let CL_COMMON_LISP_CLASS_OF;
let CL_COMMON_LISP_CLASS_DEFAULT_INITARGS;
let CL_COMMON_LISP_CLASS_SLOTS;
let CL_COMMON_LISP_CLASS_DIRECT_DEFAULT_INITARGS;
let CL_COMMON_LISP_CLASS_DIRECT_SUBCLASSES;
let CL_COMMON_LISP_CLASS_DIRECT_SLOTS;
let CL_COMMON_LISP_CLASS_DIRECT_SUPERCLASSES;
let CL_COMMON_LISP_CLASS_PRECEDENCE_LIST;
let CL_COMMON_LISP_CLASS_NAME;
let CL_COMMON_LISP_SLOT_VALUE;
let CL_COMMON_LISP_PERCENTSLOT_VALUE;
let CL_COMMON_LISP_SLOT_BOUNDP;
let CL_COMMON_LISP_STD_SLOT_BOUNDP;
let CL_COMMON_LISP_PRINT_STANDARD_INSTANCE;
let CL_COMMON_LISP_SLOT_DEFINITION_ALLOCATION;
let CL_COMMON_LISP_SLOT_DEFINITION_WRITERS;
let CL_COMMON_LISP_SLOT_DEFINITION_READERS;
let CL_COMMON_LISP_SLOT_DEFINITION_INITFUNCTION;
let CL_COMMON_LISP_SLOT_DEFINITION_INITFORM;
let CL_COMMON_LISP_SLOT_DEFINITION_INITARGS;
let CL_COMMON_LISP_SLOT_DEFINITION_NAME;
let CL_COMMON_LISP_MAKE_SLOT_DEFINITION;
let CL_COMMON_LISP_SLOT_DEFINITION_P;
let CL_COMMON_LISP_COPY_SLOT_DEFINITION;
let CL_COMMON_LISP_STANDARD_INSTANCE_SLOTS;
let CL_COMMON_LISP_STANDARD_INSTANCE_CLASS;
let CL_COMMON_LISP_MAKE_STANDARD_INSTANCE;
let CL_COMMON_LISP_STANDARD_INSTANCE_P;
let CL_COMMON_LISP_COPY_STANDARD_INSTANCE;
let CL_COMMON_LISP_MAPPEND;
let CL_COMMON_LISP_LIST_REMOVE_DUPLICATES;
let TMP_2093;
let TMP_2075;
let TMP_2045;
let TMP_2031;
let TMP_2009;
let TMP_2002;
let L_EQL_SPECIALIZER_TABLE__1369;
let TMP_2001;
let TMP_2000;
let TMP_1999;
let TMP_1997;
let TMP_1985;
let TMP_1984;
let TMP_1982;
let TMP_1981;
let TMP_1979;
let TMP_1978;
let TMP_1961;
let TMP_1958;
let TMP_1957;
let TMP_1940;
let TMP_1937;
let TMP_1936;
let TMP_1934;
let TMP_1933;
let TMP_1931;
let TMP_1930;
let TMP_1912;
let TMP_1909;
let TMP_1908;
let TMP_1904;
let TMP_1900;
let TMP_1899;
let TMP_1898;
let TMP_1896;
let TMP_1895;
let TMP_1876;
let TMP_1869;
let TMP_1868;
let TMP_1864;
let TMP_1860;
let TMP_1858;
let TMP_1857;
let TMP_1855;
let TMP_1854;
let TMP_1852;
let TMP_1851;
let TMP_1849;
let TMP_1847;
let TMP_1846;
let TMP_1845;
let TMP_1844;
let TMP_1842;
let TMP_1841;
let TMP_1839;
let TMP_1838;
let TMP_1836;
let TMP_1835;
let TMP_1833;
let TMP_1832;
let TMP_1820;
let TMP_1813;
let TMP_1807;
let TMP_1801;
let TMP_1792;
let TMP_1789;
let TMP_1782;
let TMP_1776;
let TMP_1747;
let TMP_1725;
let TMP_1720;
let TMP_1719;
let TMP_1718;
let TMP_1717;
let TMP_1716;
let TMP_1715;
let TMP_1714;
let TMP_1713;
let TMP_1711;
let TMP_1710;
let TMP_1708;
let TMP_1707;
let TMP_1705;
let TMP_1704;
let TMP_1703;
let TMP_1702;
let TMP_1701;
let TMP_1700;
let TMP_1699;
let TMP_1698;
let TMP_1697;
let TMP_1696;
let TMP_1695;
let TMP_1694;
let TMP_1693;
let TMP_1692;
let TMP_1691;
let TMP_1690;
let TMP_1689;
let TMP_1688;
let TMP_1687;
let TMP_1686;
let TMP_1684;
let TMP_1683;
let TMP_1681;
let TMP_1680;
let TMP_1678;
let TMP_1677;
let TMP_1676;
let TMP_1675;
let TMP_1674;
let TMP_1673;
let TMP_1671;
let TMP_1670;
let TMP_1669;
let TMP_1668;
let TMP_1666;
let TMP_1665;
let TMP_1664;
let TMP_1663;
let TMP_1662;
let TMP_1661;
let TMP_1660;
let TMP_1659;
let TMP_1658;
let TMP_1657;
let TMP_1655;
let TMP_1654;
let TMP_1653;
let TMP_1652;
let TMP_1650;
let TMP_1649;
let TMP_1648;
let TMP_1647;
let TMP_1646;
let TMP_1644;
let TMP_1643;
let TMP_1642;
let TMP_1640;
let TMP_1639;
let TMP_1638;
let TMP_1636;
let TMP_1635;
let TMP_1634;
let TMP_1633;
let TMP_1632;
let TMP_1631;
let TMP_1630;
let TMP_1629;
let TMP_1628;
let TMP_1627;
let L_G_STORE718__1198;
let L_G731__1196;
let L_G729__1194;
let L_G_STORE728__1193;
let TMP_1626;
let L_G727__1192;
let L_G725__1190;
let L_G723__1188;
let L_G721__1186;
let L_G719__1184;
let L_CLASS__1183;
let TMP_1625;
let L_G_STORE716__1181;
let L_G713__1178;
let L_G711__1176;
let L_G_STORE710__1175;
let TMP_1624;
let L_G709__1174;
let L_G707__1172;
let L_G705__1170;
let L_G703__1168;
let L_G701__1166;
let L_G_STORE700__1165;
let L_G699__1164;
let L_STANDARD_CLASS__1163;
let TMP_1623;
let TMP_1152;
let TMP_1143;
let TMP_1137;
let TMP_1130;
let L_SETF_GENERIC_FUNCTION_TABLE__832;
let TMP_1128;
let L_GENERIC_FUNCTION_TABLE__831;
let TMP_1127;
let TMP_1098;
let TMP_1089;
let TMP_1087;
let TMP_1081;
let TMP_1072;
let TMP_1070;
let TMP_1064;
let TMP_1055;
let TMP_1053;
let TMP_1048;
let TMP_1039;
let TMP_1037;
let TMP_1031;
let TMP_1022;
let TMP_1020;
let TMP_1010;
let TMP_1001;
let TMP_999;
let TMP_993;
let TMP_984;
let TMP_982;
let TMP_977;
let TMP_968;
let TMP_966;
let TMP_960;
let TMP_951;
let TMP_949;
let TMP_943;
let TMP_934;
let TMP_932;
let TMP_926;
let TMP_917;
let TMP_915;
let TMP_541;
let TMP_532;
let TMP_529;
let TMP_523;
let L_CLASS_TABLE__374;
let TMP_521;
let TMP_448;
let TMP_439;
let TMP_437;
let TMP_431;
let TMP_422;
let TMP_420;
let TMP_414;
let TMP_405;
let TMP_403;
let TMP_397;
let TMP_388;
let TMP_386;
let TMP_380;
let TMP_371;
let TMP_369;
let TMP_363;
let TMP_354;
let TMP_352;
let TMP_346;
let TMP_337;
let TMP_335;
let TMP_329;
let TMP_320;
let TMP_318;
let TMP_312;
let TMP_303;
let TMP_301;
let TMP_296;
let TMP_287;
let TMP_280;
let L_G89__167;
let L_G88__166;
let TMP_244;
let TMP_243;
let TMP_234;
let TMP_231;
let TMP_225;
let TMP_216;
let TMP_213;
let TMP_207;
let TMP_198;
let TMP_195;
let TMP_189;
let TMP_180;
let TMP_177;
let TMP_171;
let TMP_162;
let TMP_159;
let TMP_153;
let TMP_144;
let TMP_141;
let TMP_135;
let TMP_126;
let TMP_123;
let L_G29__51;
let L_G28__50;
let TMP_89;
let TMP_88;
let TMP_79;
let TMP_76;
let TMP_70;
let TMP_55;
let TMP_51;
// toplevel defun
let F_LIST_REMOVE_DUPLICATES_2;
F_LIST_REMOVE_DUPLICATES_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let L_G7__7;
let TMP_14;
let L_G6__6;
let TMP_13;
let TMP_12;
let TMP_10;
let TMP_8;
let TMP_6;
let TMP_4;
let L_LIST__5;
let BLOCK_RESULT_NIL__4;
let L_NEW_LIST__3;
let L_LIST__1;
L_LIST__1=arguments[0];
{
L_NEW_LIST__3=lisp.values1(lisp.S_nil);
BLOCK_NIL__4: for(;;){{
L_LIST__5=lisp.values1(L_LIST__1);
for(;;){
TMP_4=lisp.callFunctionWithCallStack(G_5,L_LIST__5);
if(lisp.values1(TMP_4) !== lisp.S_nil){
BLOCK_RESULT_NIL__4=lisp.values1(lisp.S_nil);
break BLOCK_NIL__4;
}else{
TMP_6=lisp.callFunctionWithCallStack(G_7,L_LIST__5);
TMP_8=lisp.callFunctionWithCallStack(G_9,L_LIST__5);
TMP_10=lisp.callFunctionWithCallStack(G_11,TMP_6,TMP_8);
if(lisp.values1(TMP_10) !== lisp.S_nil){
}else{
{
TMP_12=lisp.callFunctionWithCallStack(G_7,L_LIST__5);
TMP_13=lisp.CL_cons(TMP_12,L_NEW_LIST__3);
L_G6__6=lisp.values1(TMP_13);
L_NEW_LIST__3=lisp.values1(L_G6__6);
}
}
{
TMP_14=lisp.callFunctionWithCallStack(G_9,L_LIST__5);
L_G7__7=lisp.values1(TMP_14);
L_LIST__5=lisp.values1(L_G7__7);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__4=lisp.values1(lisp.S_nil);
break;
}
}
return lisp.values1(L_NEW_LIST__3);
});
CL_COMMON_LISP_LIST_REMOVE_DUPLICATES=lisp.values1(F_LIST_REMOVE_DUPLICATES_2);
let F_MAPPEND_15;
F_MAPPEND_15=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_16, arguments.length);
}
let TMP_23;
let TMP_21;
let TMP_20;
let TMP_18;
let L_LISTS__9;
let L_FUNCTION__8;
L_FUNCTION__8=arguments[0];
L_LISTS__9=lisp.jsArrayToList(arguments, 1);
TMP_18=lisp.CL_symbolFunction(G_17);
TMP_20=lisp.CL_symbolFunction(G_19);
TMP_21=lisp.callFunctionWithCallStack(G_22,TMP_20,L_FUNCTION__8,L_LISTS__9);
TMP_23=lisp.callFunctionWithCallStack(G_22,TMP_18,TMP_21);
return TMP_23;
});
CL_COMMON_LISP_MAPPEND=lisp.values1(F_MAPPEND_15);
let F_COPY_STANDARD_INSTANCE_27;
F_COPY_STANDARD_INSTANCE_27=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_28, arguments.length);
}
let TMP_29;
let L_X__11;
L_X__11=arguments[0];
TMP_29=lisp.callFunctionWithCallStack(G_30,L_X__11);
return TMP_29;
});
CL_COMMON_LISP_COPY_STANDARD_INSTANCE=lisp.values1(F_COPY_STANDARD_INSTANCE_27);
let F_STANDARD_INSTANCE_P_31;
F_STANDARD_INSTANCE_P_31=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_32, arguments.length);
}
let TMP_34;
let L_X__13;
L_X__13=arguments[0];
TMP_34=lisp.callFunctionWithCallStack(G_35,L_X__13,G_33);
return TMP_34;
});
CL_COMMON_LISP_STANDARD_INSTANCE_P=lisp.values1(F_STANDARD_INSTANCE_P_31);
let F_MAKE_STANDARD_INSTANCE_36;
F_MAKE_STANDARD_INSTANCE_36=(function(){
if(arguments.length < 0 || 4 < arguments.length) {
lisp.argumentsError(G_37, arguments.length);
}
let TMP_43;
let L_SLOTS__16;
let L_CLASS__15;
let supplied_CLASS__15;
for (let TMP_39 = 0; TMP_39 < arguments.length; TMP_39 += 2) {
if(arguments[TMP_39] === G_38){
supplied_CLASS__15=arguments[TMP_39+1];
break;
}
}
L_CLASS__15=supplied_CLASS__15 !== undefined ? supplied_CLASS__15 : (lisp.values1(lisp.S_nil));
let supplied_SLOTS__16;
for (let TMP_41 = 0; TMP_41 < arguments.length; TMP_41 += 2) {
if(arguments[TMP_41] === G_40){
supplied_SLOTS__16=arguments[TMP_41+1];
break;
}
}
L_SLOTS__16=supplied_SLOTS__16 !== undefined ? supplied_SLOTS__16 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_42 = 0; TMP_42 < arguments.length; TMP_42 += 2) {
if(arguments[TMP_42]!==G_40 && arguments[TMP_42]!==G_38) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_42].name); }
}
TMP_43=lisp.CL_makeStructure(G_33,L_CLASS__15,L_SLOTS__16);
return TMP_43;
});
CL_COMMON_LISP_MAKE_STANDARD_INSTANCE=lisp.values1(F_MAKE_STANDARD_INSTANCE_36);
let F_STANDARD_INSTANCE_CLASS_44;
F_STANDARD_INSTANCE_CLASS_44=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_45, arguments.length);
}
let TMP_49;
let TMP_46;
let L_STRUCTURE__18;
L_STRUCTURE__18=arguments[0];
TMP_46=lisp.CL_structurep(L_STRUCTURE__18);
if(lisp.values1(TMP_46) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__18,G_47);
}
TMP_49=lisp.CL_structureRef(L_STRUCTURE__18,0);
return TMP_49;
});
CL_COMMON_LISP_STANDARD_INSTANCE_CLASS=lisp.values1(F_STANDARD_INSTANCE_CLASS_44);
let F_STANDARD_INSTANCE_SLOTS_71;
F_STANDARD_INSTANCE_SLOTS_71=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_72, arguments.length);
}
let TMP_74;
let TMP_73;
let L_STRUCTURE__32;
L_STRUCTURE__32=arguments[0];
TMP_73=lisp.CL_structurep(L_STRUCTURE__32);
if(lisp.values1(TMP_73) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__32,G_47);
}
TMP_74=lisp.CL_structureRef(L_STRUCTURE__32,1);
return TMP_74;
});
CL_COMMON_LISP_STANDARD_INSTANCE_SLOTS=lisp.values1(F_STANDARD_INSTANCE_SLOTS_71);
let F_COPY_SLOT_DEFINITION_93;
F_COPY_SLOT_DEFINITION_93=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_94, arguments.length);
}
let TMP_95;
let L_X__52;
L_X__52=arguments[0];
TMP_95=lisp.callFunctionWithCallStack(G_30,L_X__52);
return TMP_95;
});
CL_COMMON_LISP_COPY_SLOT_DEFINITION=lisp.values1(F_COPY_SLOT_DEFINITION_93);
let F_SLOT_DEFINITION_P_96;
F_SLOT_DEFINITION_P_96=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_97, arguments.length);
}
let TMP_99;
let L_X__54;
L_X__54=arguments[0];
TMP_99=lisp.callFunctionWithCallStack(G_35,L_X__54,G_98);
return TMP_99;
});
CL_COMMON_LISP_SLOT_DEFINITION_P=lisp.values1(F_SLOT_DEFINITION_P_96);
let F_MAKE_SLOT_DEFINITION_100;
F_MAKE_SLOT_DEFINITION_100=(function(){
if(arguments.length < 0 || 14 < arguments.length) {
lisp.argumentsError(G_101, arguments.length);
}
let TMP_117;
let L_ALLOCATION__62;
let L_WRITERS__61;
let L_READERS__60;
let L_INITFUNCTION__59;
let L_INITFORM__58;
let L_INITARGS__57;
let L_NAME__56;
let supplied_NAME__56;
for (let TMP_103 = 0; TMP_103 < arguments.length; TMP_103 += 2) {
if(arguments[TMP_103] === G_102){
supplied_NAME__56=arguments[TMP_103+1];
break;
}
}
L_NAME__56=supplied_NAME__56 !== undefined ? supplied_NAME__56 : (lisp.values1(lisp.S_nil));
let supplied_INITARGS__57;
for (let TMP_105 = 0; TMP_105 < arguments.length; TMP_105 += 2) {
if(arguments[TMP_105] === G_104){
supplied_INITARGS__57=arguments[TMP_105+1];
break;
}
}
L_INITARGS__57=supplied_INITARGS__57 !== undefined ? supplied_INITARGS__57 : (lisp.values1(lisp.S_nil));
let supplied_INITFORM__58;
for (let TMP_107 = 0; TMP_107 < arguments.length; TMP_107 += 2) {
if(arguments[TMP_107] === G_106){
supplied_INITFORM__58=arguments[TMP_107+1];
break;
}
}
L_INITFORM__58=supplied_INITFORM__58 !== undefined ? supplied_INITFORM__58 : (lisp.values1(lisp.S_nil));
let supplied_INITFUNCTION__59;
for (let TMP_109 = 0; TMP_109 < arguments.length; TMP_109 += 2) {
if(arguments[TMP_109] === G_108){
supplied_INITFUNCTION__59=arguments[TMP_109+1];
break;
}
}
L_INITFUNCTION__59=supplied_INITFUNCTION__59 !== undefined ? supplied_INITFUNCTION__59 : (lisp.values1(lisp.S_nil));
let supplied_READERS__60;
for (let TMP_111 = 0; TMP_111 < arguments.length; TMP_111 += 2) {
if(arguments[TMP_111] === G_110){
supplied_READERS__60=arguments[TMP_111+1];
break;
}
}
L_READERS__60=supplied_READERS__60 !== undefined ? supplied_READERS__60 : (lisp.values1(lisp.S_nil));
let supplied_WRITERS__61;
for (let TMP_113 = 0; TMP_113 < arguments.length; TMP_113 += 2) {
if(arguments[TMP_113] === G_112){
supplied_WRITERS__61=arguments[TMP_113+1];
break;
}
}
L_WRITERS__61=supplied_WRITERS__61 !== undefined ? supplied_WRITERS__61 : (lisp.values1(lisp.S_nil));
let supplied_ALLOCATION__62;
for (let TMP_115 = 0; TMP_115 < arguments.length; TMP_115 += 2) {
if(arguments[TMP_115] === G_114){
supplied_ALLOCATION__62=arguments[TMP_115+1];
break;
}
}
L_ALLOCATION__62=supplied_ALLOCATION__62 !== undefined ? supplied_ALLOCATION__62 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_116 = 0; TMP_116 < arguments.length; TMP_116 += 2) {
if(arguments[TMP_116]!==G_114 && arguments[TMP_116]!==G_112 && arguments[TMP_116]!==G_110 && arguments[TMP_116]!==G_108 && arguments[TMP_116]!==G_106 && arguments[TMP_116]!==G_104 && arguments[TMP_116]!==G_102) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_116].name); }
}
TMP_117=lisp.CL_makeStructure(G_98,L_NAME__56,L_INITARGS__57,L_INITFORM__58,L_INITFUNCTION__59,L_READERS__60,L_WRITERS__61,L_ALLOCATION__62);
return TMP_117;
});
CL_COMMON_LISP_MAKE_SLOT_DEFINITION=lisp.values1(F_MAKE_SLOT_DEFINITION_100);
let F_SLOT_DEFINITION_NAME_118;
F_SLOT_DEFINITION_NAME_118=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_119, arguments.length);
}
let TMP_121;
let TMP_120;
let L_STRUCTURE__64;
L_STRUCTURE__64=arguments[0];
TMP_120=lisp.CL_structurep(L_STRUCTURE__64);
if(lisp.values1(TMP_120) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__64,G_47);
}
TMP_121=lisp.CL_structureRef(L_STRUCTURE__64,0);
return TMP_121;
});
CL_COMMON_LISP_SLOT_DEFINITION_NAME=lisp.values1(F_SLOT_DEFINITION_NAME_118);
let F_SLOT_DEFINITION_INITARGS_136;
F_SLOT_DEFINITION_INITARGS_136=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_137, arguments.length);
}
let TMP_139;
let TMP_138;
let L_STRUCTURE__78;
L_STRUCTURE__78=arguments[0];
TMP_138=lisp.CL_structurep(L_STRUCTURE__78);
if(lisp.values1(TMP_138) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__78,G_47);
}
TMP_139=lisp.CL_structureRef(L_STRUCTURE__78,1);
return TMP_139;
});
CL_COMMON_LISP_SLOT_DEFINITION_INITARGS=lisp.values1(F_SLOT_DEFINITION_INITARGS_136);
let F_SLOT_DEFINITION_INITFORM_154;
F_SLOT_DEFINITION_INITFORM_154=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_155, arguments.length);
}
let TMP_157;
let TMP_156;
let L_STRUCTURE__92;
L_STRUCTURE__92=arguments[0];
TMP_156=lisp.CL_structurep(L_STRUCTURE__92);
if(lisp.values1(TMP_156) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__92,G_47);
}
TMP_157=lisp.CL_structureRef(L_STRUCTURE__92,2);
return TMP_157;
});
CL_COMMON_LISP_SLOT_DEFINITION_INITFORM=lisp.values1(F_SLOT_DEFINITION_INITFORM_154);
let F_SLOT_DEFINITION_INITFUNCTION_172;
F_SLOT_DEFINITION_INITFUNCTION_172=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_173, arguments.length);
}
let TMP_175;
let TMP_174;
let L_STRUCTURE__106;
L_STRUCTURE__106=arguments[0];
TMP_174=lisp.CL_structurep(L_STRUCTURE__106);
if(lisp.values1(TMP_174) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__106,G_47);
}
TMP_175=lisp.CL_structureRef(L_STRUCTURE__106,3);
return TMP_175;
});
CL_COMMON_LISP_SLOT_DEFINITION_INITFUNCTION=lisp.values1(F_SLOT_DEFINITION_INITFUNCTION_172);
let F_SLOT_DEFINITION_READERS_190;
F_SLOT_DEFINITION_READERS_190=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_191, arguments.length);
}
let TMP_193;
let TMP_192;
let L_STRUCTURE__120;
L_STRUCTURE__120=arguments[0];
TMP_192=lisp.CL_structurep(L_STRUCTURE__120);
if(lisp.values1(TMP_192) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__120,G_47);
}
TMP_193=lisp.CL_structureRef(L_STRUCTURE__120,4);
return TMP_193;
});
CL_COMMON_LISP_SLOT_DEFINITION_READERS=lisp.values1(F_SLOT_DEFINITION_READERS_190);
let F_SLOT_DEFINITION_WRITERS_208;
F_SLOT_DEFINITION_WRITERS_208=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_209, arguments.length);
}
let TMP_211;
let TMP_210;
let L_STRUCTURE__134;
L_STRUCTURE__134=arguments[0];
TMP_210=lisp.CL_structurep(L_STRUCTURE__134);
if(lisp.values1(TMP_210) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__134,G_47);
}
TMP_211=lisp.CL_structureRef(L_STRUCTURE__134,5);
return TMP_211;
});
CL_COMMON_LISP_SLOT_DEFINITION_WRITERS=lisp.values1(F_SLOT_DEFINITION_WRITERS_208);
let F_SLOT_DEFINITION_ALLOCATION_226;
F_SLOT_DEFINITION_ALLOCATION_226=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_227, arguments.length);
}
let TMP_229;
let TMP_228;
let L_STRUCTURE__148;
L_STRUCTURE__148=arguments[0];
TMP_228=lisp.CL_structurep(L_STRUCTURE__148);
if(lisp.values1(TMP_228) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__148,G_47);
}
TMP_229=lisp.CL_structureRef(L_STRUCTURE__148,6);
return TMP_229;
});
CL_COMMON_LISP_SLOT_DEFINITION_ALLOCATION=lisp.values1(F_SLOT_DEFINITION_ALLOCATION_226);
let F_PRINT_STANDARD_INSTANCE_255;
F_PRINT_STANDARD_INSTANCE_255=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_91, arguments.length);
}
let TMP_256;
let L_DEPTH__170;
let L_STREAM__169;
let L_STANDARD_INSTANCE__168;
L_STANDARD_INSTANCE__168=arguments[0];
L_STREAM__169=arguments[1];
L_DEPTH__170=arguments[2];
TMP_256=lisp.callFunctionWithCallStack(G_257,L_STANDARD_INSTANCE__168,L_STREAM__169);
return TMP_256;
});
CL_COMMON_LISP_PRINT_STANDARD_INSTANCE=lisp.values1(F_PRINT_STANDARD_INSTANCE_255);
let F_STD_SLOT_BOUNDP_258;
F_STD_SLOT_BOUNDP_258=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_259, arguments.length);
}
let TMP_263;
let TMP_261;
let TMP_260;
let L_SLOT_NAME__173;
let L_INSTANCE__172;
L_INSTANCE__172=arguments[0];
L_SLOT_NAME__173=arguments[1];
TMP_260=G_72.func(L_INSTANCE__172);
TMP_261=lisp.callFunctionWithCallStack(G_262,L_SLOT_NAME__173,TMP_260);
if(lisp.values1(TMP_261) !== lisp.S_nil){
TMP_263=lisp.values1(G_26);
}else{
TMP_263=lisp.values1(lisp.S_nil);
}
return TMP_263;
});
CL_COMMON_LISP_STD_SLOT_BOUNDP=lisp.values1(F_STD_SLOT_BOUNDP_258);
let F_SLOT_BOUNDP_264;
F_SLOT_BOUNDP_264=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_265, arguments.length);
}
let TMP_272;
let TMP_271;
let TMP_270;
let TMP_269;
let TMP_268;
let TMP_266;
let L_SLOT_NAME__176;
let L_OBJECT__175;
L_OBJECT__175=arguments[0];
L_SLOT_NAME__176=arguments[1];
TMP_266=G_267.func(L_OBJECT__175);
TMP_268=G_267.func(TMP_266);
TMP_269=lisp.CL_eq(TMP_268,lisp.symbolValue(G_24));
if(lisp.values1(TMP_269) !== lisp.S_nil){
TMP_271=G_259.func(L_OBJECT__175,L_SLOT_NAME__176);
TMP_270=TMP_271;
}else{
TMP_272=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([115, 108, 111, 116, 45, 98, 111, 117, 110, 100, 45, 117, 115, 105, 110, 103, 45, 99, 108, 97, 115, 115, 32, 116, 114, 97, 112])));
TMP_270=TMP_272;
}
return TMP_270;
});
CL_COMMON_LISP_SLOT_BOUNDP=lisp.values1(F_SLOT_BOUNDP_264);
let F_PERCENTSLOT_VALUE_274;
F_PERCENTSLOT_VALUE_274=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_275, arguments.length);
}
let TMP_278;
let L_ELT__181;
let TMP_277;
let TMP_276;
let L_SLOT_NAME__179;
let L_CLASS__178;
L_CLASS__178=arguments[0];
L_SLOT_NAME__179=arguments[1];
{
TMP_276=G_72.func(L_CLASS__178);
TMP_277=lisp.callFunctionWithCallStack(G_262,L_SLOT_NAME__179,TMP_276);
L_ELT__181=lisp.values1(TMP_277);
if(lisp.values1(L_ELT__181) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 115, 108, 111, 116, 32, 126, 83, 32, 105, 115, 32, 117, 110, 98, 111, 117, 110, 100, 32, 105, 110, 32, 116, 104, 101, 32, 111, 98, 106, 101, 99, 116, 32, 126, 83, 46])),L_SLOT_NAME__179,L_CLASS__178);
}
TMP_278=lisp.callFunctionWithCallStack(G_9,L_ELT__181);
}
return TMP_278;
});
CL_COMMON_LISP_PERCENTSLOT_VALUE=lisp.values1(F_PERCENTSLOT_VALUE_274);
let F_SLOT_VALUE_297;
F_SLOT_VALUE_297=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_298, arguments.length);
}
let TMP_299;
let L_SLOT_NAME__201;
let L_OBJECT__200;
L_OBJECT__200=arguments[0];
L_SLOT_NAME__201=arguments[1];
TMP_299=G_275.func(L_OBJECT__200,L_SLOT_NAME__201);
return TMP_299;
});
CL_COMMON_LISP_SLOT_VALUE=lisp.values1(F_SLOT_VALUE_297);
let F_CLASS_NAME_313;
F_CLASS_NAME_313=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_314, arguments.length);
}
let TMP_316;
let L_CLASS__219;
L_CLASS__219=arguments[0];
TMP_316=G_275.func(L_CLASS__219,G_315);
return TMP_316;
});
CL_COMMON_LISP_CLASS_NAME=lisp.values1(F_CLASS_NAME_313);
let F_CLASS_PRECEDENCE_LIST_330;
F_CLASS_PRECEDENCE_LIST_330=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_331, arguments.length);
}
let TMP_333;
let L_CLASS__236;
L_CLASS__236=arguments[0];
TMP_333=G_275.func(L_CLASS__236,G_332);
return TMP_333;
});
CL_COMMON_LISP_CLASS_PRECEDENCE_LIST=lisp.values1(F_CLASS_PRECEDENCE_LIST_330);
let F_CLASS_DIRECT_SUPERCLASSES_347;
F_CLASS_DIRECT_SUPERCLASSES_347=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_348, arguments.length);
}
let TMP_350;
let L_CLASS__253;
L_CLASS__253=arguments[0];
TMP_350=G_275.func(L_CLASS__253,G_349);
return TMP_350;
});
CL_COMMON_LISP_CLASS_DIRECT_SUPERCLASSES=lisp.values1(F_CLASS_DIRECT_SUPERCLASSES_347);
let F_CLASS_DIRECT_SLOTS_364;
F_CLASS_DIRECT_SLOTS_364=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_365, arguments.length);
}
let TMP_367;
let L_CLASS__270;
L_CLASS__270=arguments[0];
TMP_367=G_275.func(L_CLASS__270,G_366);
return TMP_367;
});
CL_COMMON_LISP_CLASS_DIRECT_SLOTS=lisp.values1(F_CLASS_DIRECT_SLOTS_364);
let F_CLASS_DIRECT_SUBCLASSES_381;
F_CLASS_DIRECT_SUBCLASSES_381=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_382, arguments.length);
}
let TMP_384;
let L_CLASS__287;
L_CLASS__287=arguments[0];
TMP_384=G_275.func(L_CLASS__287,G_383);
return TMP_384;
});
CL_COMMON_LISP_CLASS_DIRECT_SUBCLASSES=lisp.values1(F_CLASS_DIRECT_SUBCLASSES_381);
let F_CLASS_DIRECT_DEFAULT_INITARGS_398;
F_CLASS_DIRECT_DEFAULT_INITARGS_398=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_399, arguments.length);
}
let TMP_401;
let L_CLASS__304;
L_CLASS__304=arguments[0];
TMP_401=G_275.func(L_CLASS__304,G_400);
return TMP_401;
});
CL_COMMON_LISP_CLASS_DIRECT_DEFAULT_INITARGS=lisp.values1(F_CLASS_DIRECT_DEFAULT_INITARGS_398);
let F_CLASS_SLOTS_415;
F_CLASS_SLOTS_415=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_416, arguments.length);
}
let TMP_418;
let L_CLASS__321;
L_CLASS__321=arguments[0];
TMP_418=G_275.func(L_CLASS__321,G_417);
return TMP_418;
});
CL_COMMON_LISP_CLASS_SLOTS=lisp.values1(F_CLASS_SLOTS_415);
let F_CLASS_DEFAULT_INITARGS_432;
F_CLASS_DEFAULT_INITARGS_432=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_433, arguments.length);
}
let TMP_435;
let L_CLASS__338;
L_CLASS__338=arguments[0];
TMP_435=G_275.func(L_CLASS__338,G_434);
return TMP_435;
});
CL_COMMON_LISP_CLASS_DEFAULT_INITARGS=lisp.values1(F_CLASS_DEFAULT_INITARGS_432);
let F_CLASS_OF_449;
F_CLASS_OF_449=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_267, arguments.length);
}
let TMP_520;
let TMP_519;
let TMP_517;
let L_G216__372;
let TMP_516;
let TMP_515;
let TMP_513;
let L_G215__371;
let TMP_511;
let TMP_510;
let TMP_508;
let L_G214__370;
let TMP_506;
let TMP_505;
let TMP_503;
let L_G213__369;
let TMP_501;
let TMP_500;
let TMP_498;
let L_G212__368;
let TMP_496;
let TMP_495;
let TMP_493;
let L_G211__367;
let TMP_491;
let TMP_490;
let TMP_488;
let L_G210__366;
let TMP_487;
let TMP_486;
let TMP_484;
let L_G209__365;
let TMP_482;
let TMP_481;
let TMP_479;
let L_G208__364;
let TMP_478;
let TMP_477;
let TMP_475;
let L_G207__363;
let TMP_474;
let TMP_473;
let TMP_471;
let L_G206__362;
let TMP_470;
let TMP_469;
let TMP_467;
let L_G205__361;
let TMP_465;
let TMP_464;
let TMP_462;
let L_G204__360;
let TMP_461;
let TMP_460;
let TMP_458;
let L_G203__359;
let TMP_457;
let TMP_455;
let TMP_454;
let L_G202__358;
let TMP_453;
let TMP_452;
let TMP_451;
let L_G201__357;
let TMP_450;
let L_X__355;
L_X__355=arguments[0];
{
TMP_450=G_32.func(L_X__355);
L_G201__357=lisp.values1(TMP_450);
if(lisp.values1(L_G201__357) !== lisp.S_nil){
TMP_452=G_45.func(L_X__355);
TMP_451=TMP_452;
}else{
{
TMP_453=lisp.callFunctionWithCallStack(G_5,L_X__355);
L_G202__358=lisp.values1(TMP_453);
if(lisp.values1(L_G202__358) !== lisp.S_nil){
TMP_455=lisp.callFunctionWithCallStack(G_456,G_5);
TMP_454=TMP_455;
}else{
{
TMP_457=lisp.CL_symbolp(L_X__355);
L_G203__359=lisp.values1(TMP_457);
if(lisp.values1(L_G203__359) !== lisp.S_nil){
TMP_460=lisp.callFunctionWithCallStack(G_456,G_459);
TMP_458=TMP_460;
}else{
{
TMP_461=lisp.CL_integerp(L_X__355);
L_G204__360=lisp.values1(TMP_461);
if(lisp.values1(L_G204__360) !== lisp.S_nil){
TMP_464=lisp.callFunctionWithCallStack(G_456,G_463);
TMP_462=TMP_464;
}else{
{
TMP_465=lisp.callFunctionWithCallStack(G_466,L_X__355);
L_G205__361=lisp.values1(TMP_465);
if(lisp.values1(L_G205__361) !== lisp.S_nil){
TMP_469=lisp.callFunctionWithCallStack(G_456,G_468);
TMP_467=TMP_469;
}else{
{
TMP_470=lisp.CL_numberp(L_X__355);
L_G206__362=lisp.values1(TMP_470);
if(lisp.values1(L_G206__362) !== lisp.S_nil){
TMP_473=lisp.callFunctionWithCallStack(G_456,G_472);
TMP_471=TMP_473;
}else{
{
TMP_474=lisp.CL_consp(L_X__355);
L_G207__363=lisp.values1(TMP_474);
if(lisp.values1(L_G207__363) !== lisp.S_nil){
TMP_477=lisp.callFunctionWithCallStack(G_456,G_476);
TMP_475=TMP_477;
}else{
{
TMP_478=lisp.CL_characterp(L_X__355);
L_G208__364=lisp.values1(TMP_478);
if(lisp.values1(L_G208__364) !== lisp.S_nil){
TMP_481=lisp.callFunctionWithCallStack(G_456,G_480);
TMP_479=TMP_481;
}else{
{
TMP_482=lisp.callFunctionWithCallStack(G_483,L_X__355);
L_G209__365=lisp.values1(TMP_482);
if(lisp.values1(L_G209__365) !== lisp.S_nil){
TMP_486=lisp.callFunctionWithCallStack(G_456,G_485);
TMP_484=TMP_486;
}else{
{
TMP_487=lisp.CL_packagep(L_X__355);
L_G210__366=lisp.values1(TMP_487);
if(lisp.values1(L_G210__366) !== lisp.S_nil){
TMP_490=lisp.callFunctionWithCallStack(G_456,G_489);
TMP_488=TMP_490;
}else{
{
TMP_491=lisp.callFunctionWithCallStack(G_492,L_X__355);
L_G211__367=lisp.values1(TMP_491);
if(lisp.values1(L_G211__367) !== lisp.S_nil){
TMP_495=lisp.callFunctionWithCallStack(G_456,G_494);
TMP_493=TMP_495;
}else{
{
TMP_496=lisp.callFunctionWithCallStack(G_497,L_X__355);
L_G212__368=lisp.values1(TMP_496);
if(lisp.values1(L_G212__368) !== lisp.S_nil){
TMP_500=lisp.callFunctionWithCallStack(G_456,G_499);
TMP_498=TMP_500;
}else{
{
TMP_501=lisp.callFunctionWithCallStack(G_502,L_X__355);
L_G213__369=lisp.values1(TMP_501);
if(lisp.values1(L_G213__369) !== lisp.S_nil){
TMP_505=lisp.callFunctionWithCallStack(G_456,G_504);
TMP_503=TMP_505;
}else{
{
TMP_506=lisp.callFunctionWithCallStack(G_507,L_X__355);
L_G214__370=lisp.values1(TMP_506);
if(lisp.values1(L_G214__370) !== lisp.S_nil){
TMP_510=lisp.callFunctionWithCallStack(G_456,G_509);
TMP_508=TMP_510;
}else{
{
TMP_511=lisp.callFunctionWithCallStack(G_512,L_X__355);
L_G215__371=lisp.values1(TMP_511);
if(lisp.values1(L_G215__371) !== lisp.S_nil){
TMP_515=lisp.callFunctionWithCallStack(G_456,G_514);
TMP_513=TMP_515;
}else{
{
TMP_516=lisp.CL_functionp(L_X__355);
L_G216__372=lisp.values1(TMP_516);
if(lisp.values1(L_G216__372) !== lisp.S_nil){
TMP_519=lisp.callFunctionWithCallStack(G_456,G_518);
TMP_517=TMP_519;
}else{
TMP_520=lisp.callFunctionWithCallStack(G_456,G_26);
TMP_517=TMP_520;
}
}
TMP_513=TMP_517;
}
}
TMP_508=TMP_513;
}
}
TMP_503=TMP_508;
}
}
TMP_498=TMP_503;
}
}
TMP_493=TMP_498;
}
}
TMP_488=TMP_493;
}
}
TMP_484=TMP_488;
}
}
TMP_479=TMP_484;
}
}
TMP_475=TMP_479;
}
}
TMP_471=TMP_475;
}
}
TMP_467=TMP_471;
}
}
TMP_462=TMP_467;
}
}
TMP_458=TMP_462;
}
}
TMP_454=TMP_458;
}
}
TMP_451=TMP_454;
}
}
return TMP_451;
});
CL_COMMON_LISP_CLASS_OF=lisp.values1(F_CLASS_OF_449);
let F_CANONICALIZE_DIRECT_SLOT_542;
F_CANONICALIZE_DIRECT_SLOT_542=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_543, arguments.length);
}
let TMP_620;
let L_G285__449;
let TMP_619;
let L_G_STORE284__448;
let TMP_617;
let TMP_616;
let L_G283__447;
let L_G_STORE282__446;
let TMP_614;
let TMP_613;
let L_G281__445;
let TMP_611;
let TMP_610;
let TMP_609;
let L_PLIST__444;
let BLOCK_RESULT_NIL__443;
let L_G274__442;
let TMP_608;
let L_G271__441;
let TMP_607;
let L_G273__440;
let TMP_606;
let TMP_605;
let TMP_604;
let TMP_603;
let L_G272__439;
let L_V__438;
let TMP_602;
let L_K__437;
let TMP_601;
let TMP_600;
let L_PLIST__436;
let BLOCK_RESULT_NIL__435;
let L_G264__434;
let TMP_598;
let L_G261__433;
let TMP_597;
let L_G263__432;
let TMP_596;
let TMP_595;
let TMP_594;
let L_G262__431;
let L_G257__429;
let TMP_593;
let L_G259__428;
let L_G256__426;
let TMP_592;
let L_G253__425;
let TMP_590;
let L_G255__424;
let TMP_589;
let TMP_588;
let TMP_587;
let TMP_585;
let L_G252__422;
let TMP_584;
let L_G249__421;
let TMP_583;
let L_G251__420;
let TMP_582;
let TMP_581;
let TMP_580;
let L_G248__418;
let TMP_579;
let L_G247__417;
let L_G244__416;
let TMP_578;
let L_G246__415;
let TMP_577;
let TMP_576;
let TMP_575;
let L_G243__413;
let TMP_574;
let L_G242__412;
let L_G241__411;
let TMP_573;
let L_G238__410;
let TMP_568;
let L_G240__409;
let TMP_566;
let TMP_565;
let TMP_563;
let L_G237__407;
let TMP_562;
let TMP_560;
let TMP_559;
let TMP_558;
let L_G236__406;
let TMP_555;
let L_G235__405;
let L_VALUE__404;
let TMP_553;
let L_KEY__403;
let TMP_552;
let TMP_551;
let L_PLIST__402;
let TMP_550;
let TMP_549;
let TMP_548;
let BLOCK_RESULT_NIL__401;
let L_OTHERS__400;
let L_RESULT__399;
let TMP_547;
let TMP_546;
let TMP_545;
let TMP_544;
let L_DIRECT_SLOT_SPEC__397;
L_DIRECT_SLOT_SPEC__397=arguments[0];
{
TMP_544=lisp.CL_consp(L_DIRECT_SLOT_SPEC__397);
if(lisp.values1(TMP_544) !== lisp.S_nil){
TMP_546=lisp.callFunctionWithCallStack(G_7,L_DIRECT_SLOT_SPEC__397);
TMP_545=lisp.values1(TMP_546);
}else{
TMP_545=lisp.values1(L_DIRECT_SLOT_SPEC__397);
}
TMP_547=lisp.callFunctionWithCallStack(G_64,G_102,TMP_545);
L_RESULT__399=lisp.values1(TMP_547);
L_OTHERS__400=lisp.values1(lisp.S_nil);
BLOCK_NIL__401: for(;;){{
TMP_548=lisp.CL_consp(L_DIRECT_SLOT_SPEC__397);
if(lisp.values1(TMP_548) !== lisp.S_nil){
TMP_550=lisp.callFunctionWithCallStack(G_9,L_DIRECT_SLOT_SPEC__397);
TMP_549=lisp.values1(TMP_550);
}else{
TMP_549=lisp.values1(lisp.S_nil);
}
L_PLIST__402=lisp.values1(TMP_549);
for(;;){
TMP_551=lisp.callFunctionWithCallStack(G_5,L_PLIST__402);
if(lisp.values1(TMP_551) !== lisp.S_nil){
BLOCK_RESULT_NIL__401=lisp.values1(lisp.S_nil);
break BLOCK_NIL__401;
}else{
{
TMP_552=lisp.callFunctionWithCallStack(G_7,L_PLIST__402);
L_KEY__403=lisp.values1(TMP_552);
TMP_553=lisp.callFunctionWithCallStack(G_554,L_PLIST__402);
L_VALUE__404=lisp.values1(TMP_553);
{
L_G235__405=lisp.values1(L_KEY__403);
{
TMP_555=lisp.callFunctionWithCallStack(G_556,L_G235__405,G_106);
L_G236__406=lisp.values1(TMP_555);
if(lisp.values1(L_G236__406) !== lisp.S_nil){
TMP_558=lisp.callFunctionWithCallStack(G_64,G_557,lisp.S_nil,L_VALUE__404);
TMP_559=lisp.callFunctionWithCallStack(G_64,G_106,L_VALUE__404,G_108,TMP_558);
TMP_560=lisp.callFunctionWithCallStack(G_17,L_RESULT__399,TMP_559);
L_RESULT__399=lisp.values1(TMP_560);
}else{
{
TMP_562=lisp.callFunctionWithCallStack(G_556,L_G235__405,G_561);
L_G237__407=lisp.values1(TMP_562);
if(lisp.values1(L_G237__407) !== lisp.S_nil){
{
TMP_563=lisp.callFunctionWithCallStack(G_564,L_RESULT__399,G_104);
TMP_565=lisp.callFunctionWithCallStack(G_64,L_VALUE__404);
TMP_566=lisp.callFunctionWithCallStack(G_567,TMP_563,TMP_565);
L_G240__409=lisp.values1(TMP_566);
{
TMP_568=lisp.callFunctionWithCallStack(G_569,L_RESULT__399,L_G240__409,G_104);
L_G238__410=lisp.values1(TMP_568);
L_RESULT__399=lisp.values1(L_G238__410);
}
}
}else{
{
TMP_573=lisp.callFunctionWithCallStack(G_11,L_G235__405,lisp.makeCons(G_570, lisp.makeCons(G_571, lisp.makeCons(G_572, lisp.S_nil))));
L_G241__411=lisp.values1(TMP_573);
if(lisp.values1(L_G241__411) !== lisp.S_nil){
{
L_G242__412=lisp.values1(L_KEY__403);
{
TMP_574=lisp.callFunctionWithCallStack(G_11,L_G242__412,lisp.makeCons(G_572, lisp.makeCons(G_570, lisp.S_nil)));
L_G243__413=lisp.values1(TMP_574);
if(lisp.values1(L_G243__413) !== lisp.S_nil){
{
TMP_575=lisp.callFunctionWithCallStack(G_564,L_RESULT__399,G_110);
TMP_576=lisp.callFunctionWithCallStack(G_64,L_VALUE__404);
TMP_577=lisp.callFunctionWithCallStack(G_567,TMP_575,TMP_576);
L_G246__415=lisp.values1(TMP_577);
{
TMP_578=lisp.callFunctionWithCallStack(G_569,L_RESULT__399,L_G246__415,G_110);
L_G244__416=lisp.values1(TMP_578);
L_RESULT__399=lisp.values1(L_G244__416);
}
}
}else{
}
}
}
{
L_G247__417=lisp.values1(L_KEY__403);
{
TMP_579=lisp.callFunctionWithCallStack(G_556,L_G247__417,G_571);
L_G248__418=lisp.values1(TMP_579);
if(lisp.values1(L_G248__418) !== lisp.S_nil){
{
TMP_580=lisp.callFunctionWithCallStack(G_564,L_RESULT__399,G_112);
TMP_581=lisp.callFunctionWithCallStack(G_64,L_VALUE__404);
TMP_582=lisp.callFunctionWithCallStack(G_567,TMP_580,TMP_581);
L_G251__420=lisp.values1(TMP_582);
{
TMP_583=lisp.callFunctionWithCallStack(G_569,L_RESULT__399,L_G251__420,G_112);
L_G249__421=lisp.values1(TMP_583);
L_RESULT__399=lisp.values1(L_G249__421);
}
}
}else{
{
TMP_584=lisp.callFunctionWithCallStack(G_556,L_G247__417,G_572);
L_G252__422=lisp.values1(TMP_584);
if(lisp.values1(L_G252__422) !== lisp.S_nil){
{
TMP_585=lisp.callFunctionWithCallStack(G_564,L_RESULT__399,G_112);
TMP_587=lisp.callFunctionWithCallStack(G_64,G_586,L_VALUE__404);
TMP_588=lisp.callFunctionWithCallStack(G_64,TMP_587);
TMP_589=lisp.callFunctionWithCallStack(G_567,TMP_585,TMP_588);
L_G255__424=lisp.values1(TMP_589);
{
TMP_590=lisp.callFunctionWithCallStack(G_569,L_RESULT__399,L_G255__424,G_112);
L_G253__425=lisp.values1(TMP_590);
L_RESULT__399=lisp.values1(L_G253__425);
}
}
}else{
}
}
}
}
}
}else{
{
TMP_592=lisp.callFunctionWithCallStack(G_556,L_G235__405,G_591);
L_G256__426=lisp.values1(TMP_592);
if(lisp.values1(L_G256__426) !== lisp.S_nil){
{
L_G259__428=lisp.values1(L_VALUE__404);
{
TMP_593=lisp.callFunctionWithCallStack(G_569,L_RESULT__399,L_G259__428,G_591);
L_G257__429=lisp.values1(TMP_593);
L_RESULT__399=lisp.values1(L_G257__429);
}
}
}else{
{
L_G262__431=lisp.values1(L_KEY__403);
TMP_594=lisp.callFunctionWithCallStack(G_564,L_OTHERS__400,L_KEY__403);
TMP_595=lisp.callFunctionWithCallStack(G_64,L_VALUE__404);
TMP_596=lisp.callFunctionWithCallStack(G_567,TMP_594,TMP_595);
L_G263__432=lisp.values1(TMP_596);
{
TMP_597=lisp.callFunctionWithCallStack(G_569,L_OTHERS__400,L_G263__432,L_G262__431);
L_G261__433=lisp.values1(TMP_597);
L_OTHERS__400=lisp.values1(L_G261__433);
}
}
}
}
}
}
}
}
}
}
}
}
{
TMP_598=lisp.callFunctionWithCallStack(G_599,L_PLIST__402);
L_G264__434=lisp.values1(TMP_598);
L_PLIST__402=lisp.values1(L_G264__434);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__401=lisp.values1(lisp.S_nil);
break;
}
BLOCK_NIL__435: for(;;){{
L_PLIST__436=lisp.values1(L_OTHERS__400);
for(;;){
TMP_600=lisp.callFunctionWithCallStack(G_5,L_PLIST__436);
if(lisp.values1(TMP_600) !== lisp.S_nil){
BLOCK_RESULT_NIL__435=lisp.values1(lisp.S_nil);
break BLOCK_NIL__435;
}else{
{
TMP_601=lisp.callFunctionWithCallStack(G_7,L_PLIST__436);
L_K__437=lisp.values1(TMP_601);
TMP_602=lisp.callFunctionWithCallStack(G_554,L_PLIST__436);
L_V__438=lisp.values1(TMP_602);
{
L_G272__439=lisp.values1(L_K__437);
TMP_603=lisp.callFunctionWithCallStack(G_9,L_V__438);
TMP_604=lisp.callFunctionWithCallStack(G_5,TMP_603);
if(lisp.values1(TMP_604) !== lisp.S_nil){
TMP_606=lisp.callFunctionWithCallStack(G_7,L_V__438);
TMP_605=lisp.values1(TMP_606);
}else{
TMP_605=lisp.values1(L_V__438);
}
L_G273__440=lisp.values1(TMP_605);
{
TMP_607=lisp.callFunctionWithCallStack(G_569,L_RESULT__399,L_G273__440,L_G272__439);
L_G271__441=lisp.values1(TMP_607);
L_RESULT__399=lisp.values1(L_G271__441);
}
}
}
{
TMP_608=lisp.callFunctionWithCallStack(G_599,L_PLIST__436);
L_G274__442=lisp.values1(TMP_608);
L_PLIST__436=lisp.values1(L_G274__442);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__435=lisp.values1(lisp.S_nil);
break;
}
BLOCK_NIL__443: for(;;){{
L_PLIST__444=lisp.values1(L_RESULT__399);
for(;;){
TMP_609=lisp.callFunctionWithCallStack(G_5,L_PLIST__444);
if(lisp.values1(TMP_609) !== lisp.S_nil){
BLOCK_RESULT_NIL__443=lisp.values1(lisp.S_nil);
break BLOCK_NIL__443;
}else{
TMP_610=lisp.callFunctionWithCallStack(G_7,L_PLIST__444);
TMP_611=lisp.CL_eq(TMP_610,G_108);
if(lisp.values1(TMP_611) !== lisp.S_nil){
}else{
{
L_G281__445=lisp.values1(L_PLIST__444);
TMP_613=lisp.callFunctionWithCallStack(G_554,L_PLIST__444);
TMP_614=lisp.callFunctionWithCallStack(G_64,G_612,TMP_613);
L_G_STORE282__446=lisp.values1(TMP_614);
lisp.callFunctionWithCallStack(G_615,L_G_STORE282__446,L_G281__445);
}
}
{
L_G283__447=lisp.values1(L_PLIST__444);
TMP_616=lisp.callFunctionWithCallStack(G_7,L_PLIST__444);
TMP_617=lisp.callFunctionWithCallStack(G_64,G_612,TMP_616);
L_G_STORE284__448=lisp.values1(TMP_617);
lisp.callFunctionWithCallStack(G_618,L_G_STORE284__448,L_G283__447);
}
{
TMP_619=lisp.callFunctionWithCallStack(G_599,L_PLIST__444);
L_G285__449=lisp.values1(TMP_619);
L_PLIST__444=lisp.values1(L_G285__449);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__443=lisp.values1(lisp.S_nil);
break;
}
TMP_620=lisp.CL_cons(G_64,L_RESULT__399);
}
return TMP_620;
});
CL_COMMON_LISP_CANONICALIZE_DIRECT_SLOT=lisp.values1(F_CANONICALIZE_DIRECT_SLOT_542);
let F_CANONICALIZE_DIRECT_SLOT_SPECS_621;
F_CANONICALIZE_DIRECT_SLOT_SPECS_621=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_622, arguments.length);
}
let TMP_625;
let TMP_624;
let TMP_623;
let L_DIRECT_SLOT_SPECS__450;
L_DIRECT_SLOT_SPECS__450=arguments[0];
TMP_623=lisp.CL_symbolFunction(G_543);
TMP_624=lisp.callFunctionWithCallStack(G_60,TMP_623,L_DIRECT_SLOT_SPECS__450);
TMP_625=lisp.CL_cons(G_64,TMP_624);
return TMP_625;
});
CL_COMMON_LISP_CANONICALIZE_DIRECT_SLOT_SPECS=lisp.values1(F_CANONICALIZE_DIRECT_SLOT_SPECS_621);
let F_CANONICALIZE_DEFCLASS_OPTIONS_626;
F_CANONICALIZE_DEFCLASS_OPTIONS_626=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_627, arguments.length);
}
let TMP_654;
let TMP_628;
let L_OPTIONS__452;
L_OPTIONS__452=arguments[0];
TMP_628=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_653;
let TMP_652;
let TMP_651;
let TMP_650;
let TMP_649;
let L_G296__464;
let TMP_648;
let TMP_646;
let TMP_644;
let L_G295__463;
let TMP_643;
let L_G294__462;
let TMP_642;
let TMP_641;
let TMP_640;
let TMP_639;
let TMP_638;
let TMP_637;
let TMP_636;
let L_PLIST__461;
let BLOCK_RESULT_NIL__460;
let L_INITARGS__459;
let TMP_635;
let L_G287__458;
let TMP_634;
let L_G286__457;
let TMP_632;
let L_REST__456;
let TMP_630;
let L_KEY__455;
let TMP_629;
let L_ELT__454;
L_ELT__454=arguments[0];
{
TMP_629=lisp.callFunctionWithCallStack(G_7,L_ELT__454);
L_KEY__455=lisp.values1(TMP_629);
TMP_630=lisp.callFunctionWithCallStack(G_9,L_ELT__454);
L_REST__456=lisp.values1(TMP_630);
TMP_632=lisp.CL_eq(L_KEY__455,G_631);
if(lisp.values1(TMP_632) !== lisp.S_nil){
L_KEY__455=lisp.values1(G_633);
}else{
}
{
L_G286__457=lisp.values1(L_KEY__455);
{
TMP_634=lisp.callFunctionWithCallStack(G_556,L_G286__457,G_633);
L_G287__458=lisp.values1(TMP_634);
if(lisp.values1(L_G287__458) !== lisp.S_nil){
{
L_INITARGS__459=lisp.values1(lisp.S_nil);
BLOCK_NIL__460: for(;;){{
L_PLIST__461=lisp.values1(L_REST__456);
for(;;){
TMP_636=lisp.callFunctionWithCallStack(G_5,L_PLIST__461);
if(lisp.values1(TMP_636) !== lisp.S_nil){
BLOCK_RESULT_NIL__460=lisp.values1(lisp.S_nil);
break BLOCK_NIL__460;
}else{
{
TMP_637=lisp.callFunctionWithCallStack(G_7,L_PLIST__461);
TMP_638=lisp.callFunctionWithCallStack(G_554,L_PLIST__461);
TMP_639=lisp.callFunctionWithCallStack(G_554,L_PLIST__461);
TMP_640=lisp.callFunctionWithCallStack(G_64,G_557,lisp.S_nil,TMP_639);
TMP_641=lisp.callFunctionWithCallStack(G_64,G_64,TMP_637,TMP_638,TMP_640);
TMP_642=lisp.CL_cons(TMP_641,L_INITARGS__459);
L_G294__462=lisp.values1(TMP_642);
L_INITARGS__459=lisp.values1(L_G294__462);
}
{
TMP_643=lisp.callFunctionWithCallStack(G_599,L_PLIST__461);
L_G295__463=lisp.values1(TMP_643);
L_PLIST__461=lisp.values1(L_G295__463);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__460=lisp.values1(lisp.S_nil);
break;
}
TMP_644=lisp.callFunctionWithCallStack(G_645,L_INITARGS__459);
TMP_646=lisp.CL_cons(G_64,TMP_644);
}
TMP_635=lisp.values1(lisp.values1(lisp.values1(TMP_646)));
}else{
{
TMP_648=lisp.callFunctionWithCallStack(G_11,L_G286__457,lisp.makeCons(G_647, lisp.makeCons(G_591, lisp.S_nil)));
L_G296__464=lisp.values1(TMP_648);
if(lisp.values1(L_G296__464) !== lisp.S_nil){
TMP_650=lisp.callFunctionWithCallStack(G_7,L_REST__456);
TMP_651=lisp.callFunctionWithCallStack(G_64,G_612,TMP_650);
TMP_649=lisp.values1(TMP_651);
}else{
TMP_652=lisp.callFunctionWithCallStack(G_64,G_612,L_REST__456);
TMP_649=lisp.values1(TMP_652);
}
}
TMP_635=lisp.values1(lisp.values1(TMP_649));
}
}
}
TMP_653=lisp.callFunctionWithCallStack(G_64,L_KEY__455,lisp.values1(lisp.values1(TMP_635)));
}
return TMP_653;
});
TMP_654=lisp.callFunctionWithCallStack(G_655,TMP_628,L_OPTIONS__452);
return TMP_654;
});
CL_COMMON_LISP_CANONICALIZE_DEFCLASS_OPTIONS=lisp.values1(F_CANONICALIZE_DEFCLASS_OPTIONS_626);
let F_CANONICALIZE_CLASS_656;
F_CANONICALIZE_CLASS_656=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_657, arguments.length);
}
let TMP_660;
let TMP_659;
let TMP_658;
let L_ERRORP__467;
let L_CLASS__466;
L_CLASS__466=arguments[0];
L_ERRORP__467=arguments.length > 1 ? arguments[1] : (lisp.values1(G_26));
TMP_658=lisp.CL_symbolp(L_CLASS__466);
if(lisp.values1(TMP_658) !== lisp.S_nil){
TMP_660=lisp.callFunctionWithCallStack(G_456,L_CLASS__466,L_ERRORP__467);
TMP_659=TMP_660;
}else{
TMP_659=lisp.values1(L_CLASS__466);
}
return TMP_659;
});
CL_COMMON_LISP_CANONICALIZE_CLASS=lisp.values1(F_CANONICALIZE_CLASS_656);
let F_CHECK_DUPLICATE_DIRECT_SLOTS_661;
F_CHECK_DUPLICATE_DIRECT_SLOTS_661=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_662, arguments.length);
}
let L_G304__476;
let TMP_672;
let TMP_671;
let TMP_670;
let TMP_668;
let TMP_667;
let L_DIRECT_SLOT__475;
let TMP_666;
let TMP_665;
let L_DIRECT_SLOTS__474;
let BLOCK_RESULT_NIL__473;
let F_NAME__472;
let TMP_663;
let L_DIRECT_SLOTS__469;
L_DIRECT_SLOTS__469=arguments[0];
{
TMP_663=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_664;
let L_DIRECT_SLOT__471;
L_DIRECT_SLOT__471=arguments[0];
TMP_664=lisp.callFunctionWithCallStack(G_564,L_DIRECT_SLOT__471,G_102);
return TMP_664;
});
F_NAME__472=lisp.values1(TMP_663);
BLOCK_NIL__473: for(;;){{
L_DIRECT_SLOTS__474=lisp.values1(L_DIRECT_SLOTS__469);
for(;;){
TMP_665=lisp.callFunctionWithCallStack(G_5,L_DIRECT_SLOTS__474);
if(lisp.values1(TMP_665) !== lisp.S_nil){
BLOCK_RESULT_NIL__473=lisp.values1(lisp.S_nil);
break BLOCK_NIL__473;
}else{
{
TMP_666=lisp.callFunctionWithCallStack(G_7,L_DIRECT_SLOTS__474);
L_DIRECT_SLOT__475=lisp.values1(TMP_666);
TMP_667=F_NAME__472(L_DIRECT_SLOT__475);
TMP_668=lisp.callFunctionWithCallStack(G_9,L_DIRECT_SLOTS__474);
TMP_670=lisp.callFunctionWithCallStack(G_11,TMP_667,TMP_668,G_669,F_NAME__472);
if(lisp.values1(TMP_670) !== lisp.S_nil){
TMP_671=F_NAME__472(L_DIRECT_SLOT__475);
lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([68, 117, 112, 108, 105, 99, 97, 116, 101, 32, 115, 108, 111, 116, 32, 126, 83])),TMP_671);
}else{
}
}
{
TMP_672=lisp.callFunctionWithCallStack(G_9,L_DIRECT_SLOTS__474);
L_G304__476=lisp.values1(TMP_672);
L_DIRECT_SLOTS__474=lisp.values1(L_G304__476);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__473=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__473;
});
CL_COMMON_LISP_CHECK_DUPLICATE_DIRECT_SLOTS=lisp.values1(F_CHECK_DUPLICATE_DIRECT_SLOTS_661);
let F_CHECK_DUPLICATE_DIRECT_DEFAULT_INITARGS_673;
F_CHECK_DUPLICATE_DIRECT_DEFAULT_INITARGS_673=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_674, arguments.length);
}
let L_G311__482;
let TMP_682;
let TMP_681;
let TMP_680;
let TMP_679;
let TMP_678;
let TMP_676;
let TMP_675;
let L_DIRECT_DEFAULT_INITARGS__481;
let BLOCK_RESULT_NIL__480;
let L_CLASS_NAME__478;
let L_DIRECT_DEFAULT_INITARGS__477;
L_DIRECT_DEFAULT_INITARGS__477=arguments[0];
L_CLASS_NAME__478=arguments[1];
BLOCK_NIL__480: for(;;){{
L_DIRECT_DEFAULT_INITARGS__481=lisp.values1(L_DIRECT_DEFAULT_INITARGS__477);
for(;;){
TMP_675=lisp.callFunctionWithCallStack(G_5,L_DIRECT_DEFAULT_INITARGS__481);
if(lisp.values1(TMP_675) !== lisp.S_nil){
BLOCK_RESULT_NIL__480=lisp.values1(lisp.S_nil);
break BLOCK_NIL__480;
}else{
TMP_676=lisp.callFunctionWithCallStack(G_677,L_DIRECT_DEFAULT_INITARGS__481);
TMP_678=lisp.callFunctionWithCallStack(G_9,L_DIRECT_DEFAULT_INITARGS__481);
TMP_679=lisp.CL_symbolFunction(G_7);
TMP_680=lisp.callFunctionWithCallStack(G_11,TMP_676,TMP_678,G_669,TMP_679);
if(lisp.values1(TMP_680) !== lisp.S_nil){
TMP_681=lisp.callFunctionWithCallStack(G_677,L_DIRECT_DEFAULT_INITARGS__481);
lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([68, 117, 112, 108, 105, 99, 97, 116, 101, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 32, 97, 114, 103, 117, 109, 101, 110, 116, 32, 110, 97, 109, 101, 32, 126, 83, 32, 105, 110, 32, 58, 68, 69, 70, 65, 85, 76, 84, 45, 73, 78, 73, 84, 65, 82, 71, 83, 32, 68, 69, 70, 67, 76, 65, 83, 83, 32, 126, 83, 46])),TMP_681,L_CLASS_NAME__478);
}else{
}
{
TMP_682=lisp.callFunctionWithCallStack(G_9,L_DIRECT_DEFAULT_INITARGS__481);
L_G311__482=lisp.values1(TMP_682);
L_DIRECT_DEFAULT_INITARGS__481=lisp.values1(L_G311__482);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__480=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__480;
});
CL_COMMON_LISP_CHECK_DUPLICATE_DIRECT_DEFAULT_INITARGS=lisp.values1(F_CHECK_DUPLICATE_DIRECT_DEFAULT_INITARGS_673);
let F_ENSURE_CLASS_684;
F_ENSURE_CLASS_684=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_685, arguments.length);
}
let TMP_689;
let TMP_688;
let TMP_687;
let L_ARGS__484;
let L_NAME__483;
L_NAME__483=arguments[0];
L_ARGS__484=lisp.jsArrayToList(arguments, 1);
TMP_687=lisp.CL_symbolFunction(G_686);
TMP_688=lisp.callFunctionWithCallStack(G_456,L_NAME__483,lisp.S_nil);
TMP_689=lisp.callFunctionWithCallStack(G_22,TMP_687,TMP_688,L_NAME__483,L_ARGS__484);
return TMP_689;
});
CL_COMMON_LISP_ENSURE_CLASS=lisp.values1(F_ENSURE_CLASS_684);
let F_ENSURE_CLASS_USING_CLASS_690;
F_ENSURE_CLASS_USING_CLASS_690=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_686, arguments.length);
}
let TMP_709;
let L_G_STORE316__497;
let TMP_708;
let TMP_707;
let TMP_706;
let TMP_704;
let TMP_703;
let L_G315__496;
let TMP_702;
let TMP_700;
let L_G313__494;
let TMP_699;
let TMP_698;
let L_ARGS__492;
let L_METACLASS__491;
let L_DIRECT_SUPERCLASSES__490;
let L_DIRECT_SLOTS__489;
let L_DIRECT_DEFAULT_INITARGS__488;
let L_NAME__487;
let L_CLASS__486;
L_CLASS__486=arguments[0];
L_NAME__487=arguments[1];
let supplied_DIRECT_DEFAULT_INITARGS__488;
for (let TMP_691 = 2; TMP_691 < arguments.length; TMP_691 += 2) {
if(arguments[TMP_691] === G_633){
supplied_DIRECT_DEFAULT_INITARGS__488=arguments[TMP_691+1];
break;
}
}
L_DIRECT_DEFAULT_INITARGS__488=supplied_DIRECT_DEFAULT_INITARGS__488 !== undefined ? supplied_DIRECT_DEFAULT_INITARGS__488 : (lisp.values1(lisp.S_nil));
let supplied_DIRECT_SLOTS__489;
for (let TMP_693 = 2; TMP_693 < arguments.length; TMP_693 += 2) {
if(arguments[TMP_693] === G_692){
supplied_DIRECT_SLOTS__489=arguments[TMP_693+1];
break;
}
}
L_DIRECT_SLOTS__489=supplied_DIRECT_SLOTS__489 !== undefined ? supplied_DIRECT_SLOTS__489 : (lisp.values1(lisp.S_nil));
let supplied_DIRECT_SUPERCLASSES__490;
for (let TMP_695 = 2; TMP_695 < arguments.length; TMP_695 += 2) {
if(arguments[TMP_695] === G_694){
supplied_DIRECT_SUPERCLASSES__490=arguments[TMP_695+1];
break;
}
}
L_DIRECT_SUPERCLASSES__490=supplied_DIRECT_SUPERCLASSES__490 !== undefined ? supplied_DIRECT_SUPERCLASSES__490 : (lisp.values1(lisp.S_nil));
let supplied_METACLASS__491;
for (let TMP_696 = 2; TMP_696 < arguments.length; TMP_696 += 2) {
if(arguments[TMP_696] === G_647){
supplied_METACLASS__491=arguments[TMP_696+1];
break;
}
}
L_METACLASS__491=supplied_METACLASS__491 !== undefined ? supplied_METACLASS__491 : (lisp.values1(G_697));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
L_ARGS__492=lisp.jsArrayToList(arguments, 2);
G_662.func(L_DIRECT_SLOTS__489);
G_674.func(L_DIRECT_DEFAULT_INITARGS__488,L_NAME__487);
TMP_698=lisp.CL_symbolFunction(G_456);
TMP_699=lisp.callFunctionWithCallStack(G_60,TMP_698,L_DIRECT_SUPERCLASSES__490);
L_DIRECT_SUPERCLASSES__490=lisp.values1(TMP_699);
{
L_G313__494=lisp.values1(L_CLASS__486);
if(lisp.values1(L_G313__494) !== lisp.S_nil){
G_701.func(L_CLASS__486,G_694,L_DIRECT_SUPERCLASSES__490,G_692,L_DIRECT_SLOTS__489);
TMP_700=lisp.values1(L_CLASS__486);
}else{
TMP_702=G_657.func(L_METACLASS__491);
L_METACLASS__491=lisp.values1(TMP_702);
{
L_G315__496=lisp.values1(L_NAME__487);
TMP_703=lisp.CL_eq(L_METACLASS__491,lisp.symbolValue(G_24));
if(lisp.values1(TMP_703) !== lisp.S_nil){
TMP_706=lisp.CL_symbolFunction(G_705);
TMP_704=lisp.values1(TMP_706);
}else{
TMP_707=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([109, 97, 107, 101, 45, 105, 110, 115, 116, 97, 110, 99, 101, 32, 116, 114, 97, 112])));
TMP_704=lisp.values1(TMP_707);
}
TMP_708=lisp.CL_funcall(lisp.values1(TMP_704),L_METACLASS__491,G_102,L_NAME__487,G_633,L_DIRECT_DEFAULT_INITARGS__488,G_692,L_DIRECT_SLOTS__489,G_694,L_DIRECT_SUPERCLASSES__490);
L_G_STORE316__497=lisp.values1(TMP_708);
TMP_709=lisp.callFunctionWithCallStack(G_528,L_G_STORE316__497,L_G315__496);
}
TMP_700=TMP_709;
}
}
return TMP_700;
});
CL_COMMON_LISP_ENSURE_CLASS_USING_CLASS=lisp.values1(F_ENSURE_CLASS_USING_CLASS_690);
let F_MAKE_INSTANCE_STANDARD_CLASS_710;
F_MAKE_INSTANCE_STANDARD_CLASS_710=(function(){
if(arguments.length < 1 || 9 < arguments.length) {
lisp.argumentsError(G_705, arguments.length);
}
let L_G_STORE322__510;
let L_G321__509;
let L_G319__507;
let L_G_STORE318__506;
let L_G317__505;
let L_CLASS__504;
let TMP_715;
let L_DIRECT_DEFAULT_INITARGS__502;
let L_DIRECT_SLOTS__501;
let L_DIRECT_SUPERCLASSES__500;
let L_NAME__499;
let L_METACLASS__498;
L_METACLASS__498=arguments[0];
let supplied_NAME__499;
for (let TMP_711 = 1; TMP_711 < arguments.length; TMP_711 += 2) {
if(arguments[TMP_711] === G_102){
supplied_NAME__499=arguments[TMP_711+1];
break;
}
}
L_NAME__499=supplied_NAME__499 !== undefined ? supplied_NAME__499 : (lisp.values1(lisp.S_nil));
let supplied_DIRECT_SUPERCLASSES__500;
for (let TMP_712 = 1; TMP_712 < arguments.length; TMP_712 += 2) {
if(arguments[TMP_712] === G_694){
supplied_DIRECT_SUPERCLASSES__500=arguments[TMP_712+1];
break;
}
}
L_DIRECT_SUPERCLASSES__500=supplied_DIRECT_SUPERCLASSES__500 !== undefined ? supplied_DIRECT_SUPERCLASSES__500 : (lisp.values1(lisp.S_nil));
let supplied_DIRECT_SLOTS__501;
for (let TMP_713 = 1; TMP_713 < arguments.length; TMP_713 += 2) {
if(arguments[TMP_713] === G_692){
supplied_DIRECT_SLOTS__501=arguments[TMP_713+1];
break;
}
}
L_DIRECT_SLOTS__501=supplied_DIRECT_SLOTS__501 !== undefined ? supplied_DIRECT_SLOTS__501 : (lisp.values1(lisp.S_nil));
let supplied_DIRECT_DEFAULT_INITARGS__502;
for (let TMP_714 = 1; TMP_714 < arguments.length; TMP_714 += 2) {
if(arguments[TMP_714] === G_633){
supplied_DIRECT_DEFAULT_INITARGS__502=arguments[TMP_714+1];
break;
}
}
L_DIRECT_DEFAULT_INITARGS__502=supplied_DIRECT_DEFAULT_INITARGS__502 !== undefined ? supplied_DIRECT_DEFAULT_INITARGS__502 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
{
TMP_715=G_37.func(G_38,lisp.symbolValue(G_24));
L_CLASS__504=lisp.values1(TMP_715);
{
L_G317__505=lisp.values1(L_CLASS__504);
L_G_STORE318__506=lisp.values1(L_NAME__499);
lisp.callFunctionWithCallStack(G_317,L_G_STORE318__506,L_G317__505);
}
{
L_G319__507=lisp.values1(L_CLASS__504);
lisp.callFunctionWithCallStack(G_385,lisp.S_nil,L_G319__507);
}
{
L_G321__509=lisp.values1(L_CLASS__504);
L_G_STORE322__510=lisp.values1(L_DIRECT_DEFAULT_INITARGS__502);
lisp.callFunctionWithCallStack(G_402,L_G_STORE322__510,L_G321__509);
}
G_701.func(L_CLASS__504,G_694,L_DIRECT_SUPERCLASSES__500,G_692,L_DIRECT_SLOTS__501);
}
return lisp.values1(L_CLASS__504);
});
CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_CLASS=lisp.values1(F_MAKE_INSTANCE_STANDARD_CLASS_710);
let F_STD_AFTER_INITIALIZATION_FOR_CLASSES_716;
F_STD_AFTER_INITIALIZATION_FOR_CLASSES_716=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_701, arguments.length);
}
let TMP_755;
let TMP_753;
let TMP_752;
let TMP_751;
let TMP_750;
let TMP_748;
let TMP_747;
let L_WRITER__539;
let TMP_746;
let TMP_745;
let L_G352__538;
let TMP_744;
let TMP_742;
let TMP_741;
let L_READER__535;
let TMP_740;
let TMP_739;
let L_G345__534;
let TMP_738;
let TMP_737;
let L_DIRECT_SLOT__532;
let TMP_736;
let TMP_735;
let L_G338__531;
let L_G_STORE337__529;
let L_G336__528;
let L_SLOTS__527;
let TMP_734;
let TMP_730;
let L_G_STORE335__524;
let TMP_729;
let TMP_728;
let L_G334__523;
let TMP_727;
let L_SUPERCLASS__522;
let TMP_726;
let TMP_724;
let L_G327__521;
let L_G_STORE326__519;
let L_G325__518;
let L_SUPERS__517;
let TMP_723;
let L_G324__516;
let TMP_722;
let TMP_721;
let TMP_719;
let L_G323__515;
let L_DIRECT_SLOTS__513;
let L_DIRECT_SUPERCLASSES__512;
let L_CLASS__511;
L_CLASS__511=arguments[0];
let supplied_DIRECT_SUPERCLASSES__512;
for (let TMP_717 = 1; TMP_717 < arguments.length; TMP_717 += 2) {
if(arguments[TMP_717] === G_694){
supplied_DIRECT_SUPERCLASSES__512=arguments[TMP_717+1];
break;
}
}
L_DIRECT_SUPERCLASSES__512=supplied_DIRECT_SUPERCLASSES__512 !== undefined ? supplied_DIRECT_SUPERCLASSES__512 : (lisp.values1(lisp.S_nil));
let supplied_DIRECT_SLOTS__513;
for (let TMP_718 = 1; TMP_718 < arguments.length; TMP_718 += 2) {
if(arguments[TMP_718] === G_692){
supplied_DIRECT_SLOTS__513=arguments[TMP_718+1];
break;
}
}
L_DIRECT_SLOTS__513=supplied_DIRECT_SLOTS__513 !== undefined ? supplied_DIRECT_SLOTS__513 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
{
{
L_G323__515=lisp.values1(L_DIRECT_SUPERCLASSES__512);
if(lisp.values1(L_G323__515) !== lisp.S_nil){
TMP_719=lisp.values1(L_G323__515);
}else{
{
TMP_721=lisp.callFunctionWithCallStack(G_456,G_720);
TMP_722=lisp.callFunctionWithCallStack(G_64,TMP_721);
L_G324__516=lisp.values1(TMP_722);
if(lisp.values1(L_G324__516) !== lisp.S_nil){
TMP_723=lisp.values1(L_G324__516);
}else{
TMP_723=lisp.values1(lisp.S_nil);
}
}
TMP_719=lisp.values1(lisp.values1(TMP_723));
}
}
L_SUPERS__517=lisp.values1(lisp.values1(TMP_719));
{
L_G325__518=lisp.values1(L_CLASS__511);
L_G_STORE326__519=lisp.values1(L_SUPERS__517);
lisp.callFunctionWithCallStack(G_351,L_G_STORE326__519,L_G325__518);
}
{
L_G327__521=lisp.values1(L_SUPERS__517);
for(;;){
TMP_724=lisp.callFunctionWithCallStack(G_725,L_G327__521);
if(lisp.values1(TMP_724) !== lisp.S_nil){
}else{
{
TMP_726=lisp.callFunctionWithCallStack(G_7,L_G327__521);
L_SUPERCLASS__522=lisp.values1(TMP_726);
TMP_727=lisp.callFunctionWithCallStack(G_9,L_G327__521);
L_G327__521=lisp.values1(TMP_727);
{
L_G334__523=lisp.values1(L_SUPERCLASS__522);
TMP_728=G_382.func(L_G334__523);
TMP_729=lisp.CL_cons(L_CLASS__511,TMP_728);
L_G_STORE335__524=lisp.values1(TMP_729);
lisp.callFunctionWithCallStack(G_385,L_G_STORE335__524,L_G334__523);
}
}
continue;
}
break;
}
}
}
{
TMP_730=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_733;
let TMP_732;
let L_SLOT_PLIST__526;
L_SLOT_PLIST__526=arguments[0];
TMP_732=lisp.CL_symbolFunction(G_731);
TMP_733=lisp.callFunctionWithCallStack(G_22,TMP_732,L_SLOT_PLIST__526);
return TMP_733;
});
TMP_734=lisp.callFunctionWithCallStack(G_60,TMP_730,L_DIRECT_SLOTS__513);
L_SLOTS__527=lisp.values1(TMP_734);
{
L_G336__528=lisp.values1(L_CLASS__511);
L_G_STORE337__529=lisp.values1(L_SLOTS__527);
lisp.callFunctionWithCallStack(G_368,L_G_STORE337__529,L_G336__528);
}
{
L_G338__531=lisp.values1(L_SLOTS__527);
for(;;){
TMP_735=lisp.callFunctionWithCallStack(G_725,L_G338__531);
if(lisp.values1(TMP_735) !== lisp.S_nil){
}else{
{
TMP_736=lisp.callFunctionWithCallStack(G_7,L_G338__531);
L_DIRECT_SLOT__532=lisp.values1(TMP_736);
TMP_737=lisp.callFunctionWithCallStack(G_9,L_G338__531);
L_G338__531=lisp.values1(TMP_737);
{
TMP_738=G_191.func(L_DIRECT_SLOT__532);
L_G345__534=lisp.values1(TMP_738);
for(;;){
TMP_739=lisp.callFunctionWithCallStack(G_725,L_G345__534);
if(lisp.values1(TMP_739) !== lisp.S_nil){
}else{
{
TMP_740=lisp.callFunctionWithCallStack(G_7,L_G345__534);
L_READER__535=lisp.values1(TMP_740);
TMP_741=lisp.callFunctionWithCallStack(G_9,L_G345__534);
L_G345__534=lisp.values1(TMP_741);
TMP_742=G_119.func(L_DIRECT_SLOT__532);
G_743.func(L_CLASS__511,L_READER__535,TMP_742);
}
continue;
}
break;
}
}
{
TMP_744=G_209.func(L_DIRECT_SLOT__532);
L_G352__538=lisp.values1(TMP_744);
for(;;){
TMP_745=lisp.callFunctionWithCallStack(G_725,L_G352__538);
if(lisp.values1(TMP_745) !== lisp.S_nil){
}else{
{
TMP_746=lisp.callFunctionWithCallStack(G_7,L_G352__538);
L_WRITER__539=lisp.values1(TMP_746);
TMP_747=lisp.callFunctionWithCallStack(G_9,L_G352__538);
L_G352__538=lisp.values1(TMP_747);
TMP_748=G_119.func(L_DIRECT_SLOT__532);
G_749.func(L_CLASS__511,L_WRITER__539,TMP_748);
}
continue;
}
break;
}
}
}
continue;
}
break;
}
}
TMP_750=G_267.func(L_CLASS__511);
TMP_751=lisp.CL_eq(TMP_750,lisp.symbolValue(G_24));
if(lisp.values1(TMP_751) !== lisp.S_nil){
TMP_753=G_754.func(L_CLASS__511);
TMP_752=TMP_753;
}else{
TMP_755=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([102, 105, 110, 97, 108, 105, 122, 101, 45, 105, 110, 104, 101, 114, 105, 116, 97, 110, 99, 101, 32, 116, 114, 97, 112])));
TMP_752=TMP_755;
}
}
return TMP_752;
});
CL_COMMON_LISP_STD_AFTER_INITIALIZATION_FOR_CLASSES=lisp.values1(F_STD_AFTER_INITIALIZATION_FOR_CLASSES_716);
let F_MAKE_DIRECT_SLOT_DEFINITION_756;
F_MAKE_DIRECT_SLOT_DEFINITION_756=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_731, arguments.length);
}
let TMP_766;
let TMP_765;
let L_ARGS__549;
let L_ALLOCATION__548;
let L_WRITERS__547;
let L_READERS__546;
let L_INITFUNCTION__545;
let L_INITFORM__544;
let L_INITARGS__543;
let L_NAME__542;
let supplied_NAME__542;
for (let TMP_757 = 0; TMP_757 < arguments.length; TMP_757 += 2) {
if(arguments[TMP_757] === G_102){
supplied_NAME__542=arguments[TMP_757+1];
break;
}
}
L_NAME__542=supplied_NAME__542 !== undefined ? supplied_NAME__542 : (lisp.values1(lisp.S_nil));
let supplied_INITARGS__543;
for (let TMP_758 = 0; TMP_758 < arguments.length; TMP_758 += 2) {
if(arguments[TMP_758] === G_104){
supplied_INITARGS__543=arguments[TMP_758+1];
break;
}
}
L_INITARGS__543=supplied_INITARGS__543 !== undefined ? supplied_INITARGS__543 : (lisp.values1(lisp.S_nil));
let supplied_INITFORM__544;
for (let TMP_759 = 0; TMP_759 < arguments.length; TMP_759 += 2) {
if(arguments[TMP_759] === G_106){
supplied_INITFORM__544=arguments[TMP_759+1];
break;
}
}
L_INITFORM__544=supplied_INITFORM__544 !== undefined ? supplied_INITFORM__544 : (lisp.values1(lisp.S_nil));
let supplied_INITFUNCTION__545;
for (let TMP_760 = 0; TMP_760 < arguments.length; TMP_760 += 2) {
if(arguments[TMP_760] === G_108){
supplied_INITFUNCTION__545=arguments[TMP_760+1];
break;
}
}
L_INITFUNCTION__545=supplied_INITFUNCTION__545 !== undefined ? supplied_INITFUNCTION__545 : (lisp.values1(lisp.S_nil));
let supplied_READERS__546;
for (let TMP_761 = 0; TMP_761 < arguments.length; TMP_761 += 2) {
if(arguments[TMP_761] === G_110){
supplied_READERS__546=arguments[TMP_761+1];
break;
}
}
L_READERS__546=supplied_READERS__546 !== undefined ? supplied_READERS__546 : (lisp.values1(lisp.S_nil));
let supplied_WRITERS__547;
for (let TMP_762 = 0; TMP_762 < arguments.length; TMP_762 += 2) {
if(arguments[TMP_762] === G_112){
supplied_WRITERS__547=arguments[TMP_762+1];
break;
}
}
L_WRITERS__547=supplied_WRITERS__547 !== undefined ? supplied_WRITERS__547 : (lisp.values1(lisp.S_nil));
let supplied_ALLOCATION__548;
for (let TMP_763 = 0; TMP_763 < arguments.length; TMP_763 += 2) {
if(arguments[TMP_763] === G_114){
supplied_ALLOCATION__548=arguments[TMP_763+1];
break;
}
}
L_ALLOCATION__548=supplied_ALLOCATION__548 !== undefined ? supplied_ALLOCATION__548 : (lisp.values1(G_764));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
L_ARGS__549=lisp.jsArrayToList(arguments, 0);
TMP_765=lisp.CL_symbolFunction(G_101);
TMP_766=lisp.callFunctionWithCallStack(G_22,TMP_765,L_ARGS__549);
return TMP_766;
});
CL_COMMON_LISP_MAKE_DIRECT_SLOT_DEFINITION=lisp.values1(F_MAKE_DIRECT_SLOT_DEFINITION_756);
let F_MAKE_EFFECTIVE_SLOT_DEFINITION_767;
F_MAKE_EFFECTIVE_SLOT_DEFINITION_767=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_768, arguments.length);
}
let TMP_775;
let TMP_774;
let L_ARGS__556;
let L_ALLOCATION__555;
let L_INITFUNCTION__554;
let L_INITFORM__553;
let L_INITARGS__552;
let L_NAME__551;
let supplied_NAME__551;
for (let TMP_769 = 0; TMP_769 < arguments.length; TMP_769 += 2) {
if(arguments[TMP_769] === G_102){
supplied_NAME__551=arguments[TMP_769+1];
break;
}
}
L_NAME__551=supplied_NAME__551 !== undefined ? supplied_NAME__551 : (lisp.values1(lisp.S_nil));
let supplied_INITARGS__552;
for (let TMP_770 = 0; TMP_770 < arguments.length; TMP_770 += 2) {
if(arguments[TMP_770] === G_104){
supplied_INITARGS__552=arguments[TMP_770+1];
break;
}
}
L_INITARGS__552=supplied_INITARGS__552 !== undefined ? supplied_INITARGS__552 : (lisp.values1(lisp.S_nil));
let supplied_INITFORM__553;
for (let TMP_771 = 0; TMP_771 < arguments.length; TMP_771 += 2) {
if(arguments[TMP_771] === G_106){
supplied_INITFORM__553=arguments[TMP_771+1];
break;
}
}
L_INITFORM__553=supplied_INITFORM__553 !== undefined ? supplied_INITFORM__553 : (lisp.values1(lisp.S_nil));
let supplied_INITFUNCTION__554;
for (let TMP_772 = 0; TMP_772 < arguments.length; TMP_772 += 2) {
if(arguments[TMP_772] === G_108){
supplied_INITFUNCTION__554=arguments[TMP_772+1];
break;
}
}
L_INITFUNCTION__554=supplied_INITFUNCTION__554 !== undefined ? supplied_INITFUNCTION__554 : (lisp.values1(lisp.S_nil));
let supplied_ALLOCATION__555;
for (let TMP_773 = 0; TMP_773 < arguments.length; TMP_773 += 2) {
if(arguments[TMP_773] === G_114){
supplied_ALLOCATION__555=arguments[TMP_773+1];
break;
}
}
L_ALLOCATION__555=supplied_ALLOCATION__555 !== undefined ? supplied_ALLOCATION__555 : (lisp.values1(G_764));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
L_ARGS__556=lisp.jsArrayToList(arguments, 0);
TMP_774=lisp.CL_symbolFunction(G_101);
TMP_775=lisp.callFunctionWithCallStack(G_22,TMP_774,L_ARGS__556);
return TMP_775;
});
CL_COMMON_LISP_MAKE_EFFECTIVE_SLOT_DEFINITION=lisp.values1(F_MAKE_EFFECTIVE_SLOT_DEFINITION_767);
let F_STD_FINALIZE_INHERITANCE_776;
F_STD_FINALIZE_INHERITANCE_776=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_754, arguments.length);
}
let TMP_795;
let L_G_STORE364__565;
let TMP_794;
let TMP_792;
let TMP_791;
let TMP_790;
let TMP_789;
let L_G363__564;
let L_G_STORE362__563;
let TMP_788;
let TMP_786;
let TMP_785;
let TMP_784;
let TMP_783;
let L_G361__562;
let L_G_STORE360__561;
let TMP_782;
let TMP_780;
let TMP_779;
let TMP_778;
let TMP_777;
let L_G359__560;
let L_CLASS__558;
L_CLASS__558=arguments[0];
{
L_G359__560=lisp.values1(L_CLASS__558);
TMP_777=G_267.func(L_CLASS__558);
TMP_778=lisp.CL_eq(TMP_777,lisp.symbolValue(G_24));
if(lisp.values1(TMP_778) !== lisp.S_nil){
TMP_780=G_781.func(L_CLASS__558);
TMP_779=lisp.values1(TMP_780);
}else{
TMP_782=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([99, 111, 109, 112, 117, 116, 101, 45, 99, 108, 97, 115, 115, 45, 112, 114, 101, 99, 101, 100, 101, 110, 99, 101, 45, 108, 105, 115, 116, 32, 116, 114, 97, 112])));
TMP_779=lisp.values1(TMP_782);
}
L_G_STORE360__561=lisp.values1(TMP_779);
lisp.callFunctionWithCallStack(G_334,L_G_STORE360__561,L_G359__560);
}
{
L_G361__562=lisp.values1(L_CLASS__558);
TMP_783=G_267.func(L_CLASS__558);
TMP_784=lisp.CL_eq(TMP_783,lisp.symbolValue(G_24));
if(lisp.values1(TMP_784) !== lisp.S_nil){
TMP_786=G_787.func(L_CLASS__558);
TMP_785=lisp.values1(TMP_786);
}else{
TMP_788=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([99, 111, 109, 112, 117, 116, 101, 45, 115, 108, 111, 116, 115, 32, 116, 114, 97, 112])));
TMP_785=lisp.values1(TMP_788);
}
L_G_STORE362__563=lisp.values1(TMP_785);
lisp.callFunctionWithCallStack(G_419,L_G_STORE362__563,L_G361__562);
}
{
L_G363__564=lisp.values1(L_CLASS__558);
TMP_789=G_267.func(L_CLASS__558);
TMP_790=lisp.CL_eq(TMP_789,lisp.symbolValue(G_24));
if(lisp.values1(TMP_790) !== lisp.S_nil){
TMP_792=G_793.func(L_CLASS__558);
TMP_791=lisp.values1(TMP_792);
}else{
TMP_794=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([99, 111, 109, 112, 117, 116, 101, 45, 100, 101, 102, 97, 117, 108, 116, 45, 105, 110, 105, 116, 97, 114, 103, 115, 32, 116, 114, 97, 112])));
TMP_791=lisp.values1(TMP_794);
}
L_G_STORE364__565=lisp.values1(TMP_791);
TMP_795=lisp.callFunctionWithCallStack(G_436,L_G_STORE364__565,L_G363__564);
}
return TMP_795;
});
CL_COMMON_LISP_STD_FINALIZE_INHERITANCE=lisp.values1(F_STD_FINALIZE_INHERITANCE_776);
let F_STD_COMPUTE_CLASS_PRECEDENCE_LIST_796;
F_STD_COMPUTE_CLASS_PRECEDENCE_LIST_796=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_781, arguments.length);
}
let TMP_805;
let TMP_804;
let TMP_802;
let TMP_801;
let TMP_800;
let L_CLASSES_TO_ORDER__568;
let TMP_797;
let L_CLASS__566;
L_CLASS__566=arguments[0];
{
TMP_797=G_798.func(L_CLASS__566);
L_CLASSES_TO_ORDER__568=lisp.values1(TMP_797);
TMP_800=lisp.CL_symbolFunction(G_799);
TMP_801=lisp.callFunctionWithCallStack(G_655,TMP_800,L_CLASSES_TO_ORDER__568);
TMP_802=G_3.func(TMP_801);
TMP_804=lisp.CL_symbolFunction(G_803);
TMP_805=G_806.func(L_CLASSES_TO_ORDER__568,TMP_802,TMP_804);
}
return TMP_805;
});
CL_COMMON_LISP_STD_COMPUTE_CLASS_PRECEDENCE_LIST=lisp.values1(F_STD_COMPUTE_CLASS_PRECEDENCE_LIST_796);
let F_STD_TIE_BREAKER_RULE_807;
F_STD_TIE_BREAKER_RULE_807=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_803, arguments.length);
}
let TMP_817;
let TMP_816;
let TMP_815;
let L_ELEMENT__577;
let TMP_814;
let TMP_813;
let L_G372__576;
let TMP_812;
let L_CPL_CONSTITUENT__574;
let TMP_811;
let TMP_810;
let L_G365__573;
let TMP_808;
let BLOCK_RESULT_STD_TIE_BREAKER_RULE__571;
let L_CPL_SO_FAR__570;
let L_MINIMAL_ELEMENTS__569;
L_MINIMAL_ELEMENTS__569=arguments[0];
L_CPL_SO_FAR__570=arguments[1];
BLOCK_STD_TIE_BREAKER_RULE__571: for(;;){{
TMP_808=lisp.callFunctionWithCallStack(G_809,L_CPL_SO_FAR__570);
L_G365__573=lisp.values1(TMP_808);
for(;;){
TMP_810=lisp.callFunctionWithCallStack(G_725,L_G365__573);
if(lisp.values1(TMP_810) !== lisp.S_nil){
}else{
{
TMP_811=lisp.callFunctionWithCallStack(G_7,L_G365__573);
L_CPL_CONSTITUENT__574=lisp.values1(TMP_811);
TMP_812=lisp.callFunctionWithCallStack(G_9,L_G365__573);
L_G365__573=lisp.values1(TMP_812);
{
L_G372__576=lisp.values1(L_MINIMAL_ELEMENTS__569);
for(;;){
TMP_813=lisp.callFunctionWithCallStack(G_725,L_G372__576);
if(lisp.values1(TMP_813) !== lisp.S_nil){
}else{
{
TMP_814=lisp.callFunctionWithCallStack(G_7,L_G372__576);
L_ELEMENT__577=lisp.values1(TMP_814);
TMP_815=lisp.callFunctionWithCallStack(G_9,L_G372__576);
L_G372__576=lisp.values1(TMP_815);
TMP_816=G_348.func(L_CPL_CONSTITUENT__574);
TMP_817=lisp.callFunctionWithCallStack(G_11,L_ELEMENT__577,TMP_816);
if(lisp.values1(TMP_817) !== lisp.S_nil){
BLOCK_RESULT_STD_TIE_BREAKER_RULE__571=lisp.values1(L_ELEMENT__577);
break BLOCK_STD_TIE_BREAKER_RULE__571;
}else{
}
}
continue;
}
break;
}
}
}
continue;
}
break;
}
}
BLOCK_RESULT_STD_TIE_BREAKER_RULE__571=lisp.values1(lisp.S_nil);
break;
}
return BLOCK_RESULT_STD_TIE_BREAKER_RULE__571;
});
CL_COMMON_LISP_STD_TIE_BREAKER_RULE=lisp.values1(F_STD_TIE_BREAKER_RULE_807);
let F_LOCAL_PRECEDENCE_ORDERING_818;
F_LOCAL_PRECEDENCE_ORDERING_818=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_799, arguments.length);
}
let TMP_822;
let TMP_821;
let TMP_820;
let L_SUPERS__582;
let TMP_819;
let L_CLASS__580;
L_CLASS__580=arguments[0];
{
TMP_819=G_348.func(L_CLASS__580);
L_SUPERS__582=lisp.values1(TMP_819);
TMP_820=lisp.CL_symbolFunction(G_64);
TMP_821=lisp.CL_cons(L_CLASS__580,L_SUPERS__582);
TMP_822=lisp.callFunctionWithCallStack(G_19,TMP_820,TMP_821,L_SUPERS__582);
}
return TMP_822;
});
CL_COMMON_LISP_LOCAL_PRECEDENCE_ORDERING=lisp.values1(F_LOCAL_PRECEDENCE_ORDERING_818);
let F_TOPOLOGICAL_SORT_823;
F_TOPOLOGICAL_SORT_823=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_806, arguments.length);
}
let TMP_842;
let TMP_841;
let TMP_838;
let TMP_837;
let TMP_836;
let L_CHOICE__593;
let TMP_835;
let TMP_834;
let TMP_833;
let TMP_832;
let TMP_831;
let TMP_830;
let TMP_829;
let L_MINIMAL_ELEMENTS__592;
let TMP_827;
let TMP_824;
let BLOCK_RESULT_NIL__590;
let L_RESULT__589;
let L_REMAINING_ELEMENTS__588;
let L_REMAINING_CONSTRAINTS__587;
let BLOCK_RESULT_TOPOLOGICAL_SORT__586;
let L_TIE_BREAKER__585;
let L_CONSTRAINTS__584;
let L_ELEMENTS__583;
L_ELEMENTS__583=arguments[0];
L_CONSTRAINTS__584=arguments[1];
L_TIE_BREAKER__585=arguments[2];
BLOCK_TOPOLOGICAL_SORT__586: for(;;){{
L_REMAINING_CONSTRAINTS__587=lisp.values1(L_CONSTRAINTS__584);
L_REMAINING_ELEMENTS__588=lisp.values1(L_ELEMENTS__583);
L_RESULT__589=lisp.values1(lisp.S_nil);
BLOCK_NIL__590: for(;;){for(;;){
{
TMP_824=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_826;
let TMP_825;
let L_CLASS__591;
L_CLASS__591=arguments[0];
TMP_825=lisp.CL_symbolFunction(G_554);
TMP_826=lisp.callFunctionWithCallStack(G_11,L_CLASS__591,L_REMAINING_CONSTRAINTS__587,G_669,TMP_825);
return TMP_826;
});
TMP_827=lisp.callFunctionWithCallStack(G_828,TMP_824,L_REMAINING_ELEMENTS__588);
L_MINIMAL_ELEMENTS__592=lisp.values1(TMP_827);
TMP_829=lisp.callFunctionWithCallStack(G_5,L_MINIMAL_ELEMENTS__592);
if(lisp.values1(TMP_829) !== lisp.S_nil){
TMP_830=lisp.callFunctionWithCallStack(G_5,L_REMAINING_ELEMENTS__588);
if(lisp.values1(TMP_830) !== lisp.S_nil){
BLOCK_RESULT_TOPOLOGICAL_SORT__586=lisp.values1(L_RESULT__589);
break BLOCK_TOPOLOGICAL_SORT__586;
}else{
lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([73, 110, 99, 111, 110, 115, 105, 115, 116, 101, 110, 116, 32, 112, 114, 101, 99, 101, 100, 101, 110, 99, 101, 32, 103, 114, 97, 112, 104, 46])));
}
}else{
}
{
TMP_831=lisp.callFunctionWithCallStack(G_9,L_MINIMAL_ELEMENTS__592);
TMP_832=lisp.callFunctionWithCallStack(G_5,TMP_831);
if(lisp.values1(TMP_832) !== lisp.S_nil){
TMP_834=lisp.callFunctionWithCallStack(G_7,L_MINIMAL_ELEMENTS__592);
TMP_833=lisp.values1(TMP_834);
}else{
TMP_835=lisp.CL_funcall(lisp.values1(L_TIE_BREAKER__585),L_MINIMAL_ELEMENTS__592,L_RESULT__589);
TMP_833=lisp.values1(TMP_835);
}
L_CHOICE__593=lisp.values1(TMP_833);
TMP_836=lisp.callFunctionWithCallStack(G_64,L_CHOICE__593);
TMP_837=lisp.callFunctionWithCallStack(G_567,L_RESULT__589,TMP_836);
L_RESULT__589=lisp.values1(TMP_837);
TMP_838=lisp.callFunctionWithCallStack(G_839,L_CHOICE__593,L_REMAINING_ELEMENTS__588);
L_REMAINING_ELEMENTS__588=lisp.values1(TMP_838);
TMP_841=lisp.CL_symbolFunction(G_11);
TMP_842=lisp.callFunctionWithCallStack(G_839,L_CHOICE__593,L_REMAINING_CONSTRAINTS__587,G_840,TMP_841);
L_REMAINING_CONSTRAINTS__587=lisp.values1(TMP_842);
}
}
continue;
break;
}
BLOCK_RESULT_NIL__590=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
BLOCK_RESULT_TOPOLOGICAL_SORT__586=BLOCK_RESULT_NIL__590;
break;
}
return BLOCK_RESULT_TOPOLOGICAL_SORT__586;
});
CL_COMMON_LISP_TOPOLOGICAL_SORT=lisp.values1(F_TOPOLOGICAL_SORT_823);
let F_COLLECT_SUPERCLASSESSTAR_843;
F_COLLECT_SUPERCLASSESSTAR_843=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_798, arguments.length);
}
let TMP_857;
let TMP_856;
let F_F__596;
let TMP_844;
let L_CLASS__594;
L_CLASS__594=arguments[0];
{
TMP_844=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_855;
let TMP_853;
let TMP_852;
let TMP_851;
let TMP_850;
let TMP_849;
let L_CLASS_TO_PROCESS__603;
let TMP_848;
let TMP_847;
let L_SUPER__601;
let TMP_846;
let TMP_845;
let L_G385__600;
let BLOCK_RESULT_NIL__599;
let L_SUPERCLASSES__598;
let L_SEEN__597;
L_SEEN__597=arguments[0];
L_SUPERCLASSES__598=arguments[1];
{
BLOCK_NIL__599: for(;;){{
L_G385__600=lisp.values1(L_SUPERCLASSES__598);
for(;;){
TMP_845=lisp.callFunctionWithCallStack(G_725,L_G385__600);
if(lisp.values1(TMP_845) !== lisp.S_nil){
}else{
{
TMP_846=lisp.callFunctionWithCallStack(G_7,L_G385__600);
L_SUPER__601=lisp.values1(TMP_846);
TMP_847=lisp.callFunctionWithCallStack(G_9,L_G385__600);
L_G385__600=lisp.values1(TMP_847);
TMP_848=lisp.callFunctionWithCallStack(G_11,L_SUPER__601,L_SEEN__597);
if(lisp.values1(TMP_848) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__599=lisp.values1(L_SUPER__601);
break BLOCK_NIL__599;
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__599=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
L_CLASS_TO_PROCESS__603=lisp.values1(BLOCK_RESULT_NIL__599);
TMP_849=lisp.callFunctionWithCallStack(G_5,L_CLASS_TO_PROCESS__603);
if(lisp.values1(TMP_849) !== lisp.S_nil){
TMP_850=lisp.values1(L_SUPERCLASSES__598);
}else{
TMP_851=lisp.CL_cons(L_CLASS_TO_PROCESS__603,L_SEEN__597);
TMP_852=G_348.func(L_CLASS_TO_PROCESS__603);
TMP_853=lisp.callFunctionWithCallStack(G_854,TMP_852,L_SUPERCLASSES__598);
TMP_855=F_F__596(TMP_851,TMP_853);
TMP_850=TMP_855;
}
}
return TMP_850;
});
F_F__596=lisp.values1(TMP_844);
TMP_856=lisp.callFunctionWithCallStack(G_64,L_CLASS__594);
TMP_857=F_F__596(lisp.S_nil,TMP_856);
}
return TMP_857;
});
CL_COMMON_LISP_COLLECT_SUPERCLASSESSTAR=lisp.values1(F_COLLECT_SUPERCLASSESSTAR_843);
let F_STD_COMPUTE_SLOTS_858;
F_STD_COMPUTE_SLOTS_858=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_787, arguments.length);
}
let TMP_880;
let TMP_879;
let TMP_871;
let TMP_870;
let TMP_869;
let TMP_868;
let L_ALL_NAMES__611;
let TMP_867;
let TMP_866;
let TMP_865;
let TMP_864;
let TMP_863;
let TMP_862;
let L_CLASS__609;
let TMP_861;
let TMP_860;
let L_G392__608;
let TMP_859;
let L_ALL_SLOTS__606;
let L_CLASS__604;
L_CLASS__604=arguments[0];
{
L_ALL_SLOTS__606=lisp.values1(lisp.S_nil);
{
TMP_859=G_331.func(L_CLASS__604);
L_G392__608=lisp.values1(TMP_859);
for(;;){
TMP_860=lisp.callFunctionWithCallStack(G_725,L_G392__608);
if(lisp.values1(TMP_860) !== lisp.S_nil){
}else{
{
TMP_861=lisp.callFunctionWithCallStack(G_7,L_G392__608);
L_CLASS__609=lisp.values1(TMP_861);
TMP_862=lisp.callFunctionWithCallStack(G_9,L_G392__608);
L_G392__608=lisp.values1(TMP_862);
TMP_863=G_365.func(L_CLASS__609);
TMP_864=lisp.callFunctionWithCallStack(G_17,TMP_863,L_ALL_SLOTS__606);
L_ALL_SLOTS__606=lisp.values1(TMP_864);
}
continue;
}
break;
}
}
{
TMP_865=lisp.CL_symbolFunction(G_119);
TMP_866=lisp.callFunctionWithCallStack(G_60,TMP_865,L_ALL_SLOTS__606);
TMP_867=G_3.func(TMP_866);
L_ALL_NAMES__611=lisp.values1(TMP_867);
TMP_868=G_267.func(L_CLASS__604);
TMP_869=lisp.CL_eq(TMP_868,lisp.symbolValue(G_24));
if(lisp.values1(TMP_869) !== lisp.S_nil){
TMP_871=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_877;
let TMP_875;
let TMP_872;
let L_NAME__612;
L_NAME__612=arguments[0];
TMP_872=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_874;
let TMP_873;
let L_SLOT__613;
L_SLOT__613=arguments[0];
TMP_873=G_119.func(L_SLOT__613);
TMP_874=lisp.CL_eq(L_NAME__612,TMP_873);
return TMP_874;
});
TMP_875=lisp.callFunctionWithCallStack(G_876,TMP_872,L_ALL_SLOTS__606);
TMP_877=G_878.func(L_CLASS__604,TMP_875);
return TMP_877;
});
TMP_870=lisp.values1(TMP_871);
}else{
TMP_879=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([99, 111, 109, 112, 117, 116, 101, 45, 101, 102, 102, 101, 99, 116, 105, 118, 101, 45, 115, 108, 111, 116, 45, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 32, 116, 114, 97, 112])));
TMP_870=lisp.values1(TMP_879);
}
TMP_880=lisp.callFunctionWithCallStack(G_60,TMP_870,L_ALL_NAMES__611);
}
}
return TMP_880;
});
CL_COMMON_LISP_STD_COMPUTE_SLOTS=lisp.values1(F_STD_COMPUTE_SLOTS_858);
let F_STD_COMPUTE_EFFECTIVE_SLOT_DEFINITION_881;
F_STD_COMPUTE_EFFECTIVE_SLOT_DEFINITION_881=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_878, arguments.length);
}
let TMP_897;
let TMP_896;
let TMP_895;
let TMP_894;
let TMP_893;
let TMP_892;
let TMP_891;
let TMP_890;
let TMP_889;
let TMP_888;
let TMP_887;
let TMP_886;
let L_INITER__618;
let TMP_884;
let TMP_882;
let L_DIRECT_SLOTS__615;
let L_CLASS__614;
L_CLASS__614=arguments[0];
L_DIRECT_SLOTS__615=arguments[1];
{
TMP_882=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_883;
let L_SLOT__617;
L_SLOT__617=arguments[0];
TMP_883=G_155.func(L_SLOT__617);
return TMP_883;
});
TMP_884=lisp.callFunctionWithCallStack(G_885,TMP_882,L_DIRECT_SLOTS__615);
L_INITER__618=lisp.values1(TMP_884);
TMP_886=lisp.callFunctionWithCallStack(G_7,L_DIRECT_SLOTS__615);
TMP_887=G_119.func(TMP_886);
if(lisp.values1(L_INITER__618) !== lisp.S_nil){
TMP_889=G_155.func(L_INITER__618);
TMP_888=lisp.values1(TMP_889);
}else{
TMP_888=lisp.values1(lisp.S_nil);
}
if(lisp.values1(L_INITER__618) !== lisp.S_nil){
TMP_891=G_173.func(L_INITER__618);
TMP_890=lisp.values1(TMP_891);
}else{
TMP_890=lisp.values1(lisp.S_nil);
}
TMP_892=lisp.CL_symbolFunction(G_137);
TMP_893=G_16.func(TMP_892,L_DIRECT_SLOTS__615);
TMP_894=G_3.func(TMP_893);
TMP_895=lisp.callFunctionWithCallStack(G_7,L_DIRECT_SLOTS__615);
TMP_896=G_227.func(TMP_895);
TMP_897=G_768.func(G_102,TMP_887,G_106,TMP_888,G_108,TMP_890,G_104,TMP_894,G_114,TMP_896);
}
return TMP_897;
});
CL_COMMON_LISP_STD_COMPUTE_EFFECTIVE_SLOT_DEFINITION=lisp.values1(F_STD_COMPUTE_EFFECTIVE_SLOT_DEFINITION_881);
let F_STD_COMPUTE_DEFAULT_INITARGS_898;
F_STD_COMPUTE_DEFAULT_INITARGS_898=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_793, arguments.length);
}
let TMP_909;
let L_G407__628;
let TMP_908;
let L_G406__627;
let TMP_907;
let TMP_906;
let L_NAME__626;
let TMP_905;
let TMP_904;
let L_INITARG__625;
let TMP_903;
let TMP_902;
let L_G399__624;
let TMP_901;
let TMP_900;
let TMP_899;
let L_INITARGS__622;
let L_NAMES__621;
let L_CLASS__619;
L_CLASS__619=arguments[0];
{
L_NAMES__621=lisp.values1(lisp.S_nil);
L_INITARGS__622=lisp.values1(lisp.S_nil);
{
TMP_899=lisp.CL_symbolFunction(G_399);
TMP_900=G_331.func(L_CLASS__619);
TMP_901=G_16.func(TMP_899,TMP_900);
L_G399__624=lisp.values1(TMP_901);
for(;;){
TMP_902=lisp.callFunctionWithCallStack(G_725,L_G399__624);
if(lisp.values1(TMP_902) !== lisp.S_nil){
}else{
{
TMP_903=lisp.callFunctionWithCallStack(G_7,L_G399__624);
L_INITARG__625=lisp.values1(TMP_903);
TMP_904=lisp.callFunctionWithCallStack(G_9,L_G399__624);
L_G399__624=lisp.values1(TMP_904);
{
TMP_905=lisp.callFunctionWithCallStack(G_7,L_INITARG__625);
L_NAME__626=lisp.values1(TMP_905);
TMP_906=lisp.callFunctionWithCallStack(G_11,L_NAME__626,L_NAMES__621);
if(lisp.values1(TMP_906) !== lisp.S_nil){
}else{
{
TMP_907=lisp.CL_cons(L_NAME__626,L_NAMES__621);
L_G406__627=lisp.values1(TMP_907);
L_NAMES__621=lisp.values1(L_G406__627);
}
{
TMP_908=lisp.CL_cons(L_INITARG__625,L_INITARGS__622);
L_G407__628=lisp.values1(TMP_908);
L_INITARGS__622=lisp.values1(L_G407__628);
}
}
}
}
continue;
}
break;
}
}
TMP_909=lisp.callFunctionWithCallStack(G_645,L_INITARGS__622);
}
return TMP_909;
});
CL_COMMON_LISP_STD_COMPUTE_DEFAULT_INITARGS=lisp.values1(F_STD_COMPUTE_DEFAULT_INITARGS_898);
let F_GENERIC_FUNCTION_NAME_911;
F_GENERIC_FUNCTION_NAME_911=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_912, arguments.length);
}
let TMP_913;
let L_GF__630;
L_GF__630=arguments[0];
TMP_913=G_275.func(L_GF__630,G_315);
return TMP_913;
});
CL_COMMON_LISP_GENERIC_FUNCTION_NAME=lisp.values1(F_GENERIC_FUNCTION_NAME_911);
let F_GENERIC_FUNCTION_METHODS_927;
F_GENERIC_FUNCTION_METHODS_927=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_928, arguments.length);
}
let TMP_930;
let L_GF__647;
L_GF__647=arguments[0];
TMP_930=G_275.func(L_GF__647,G_929);
return TMP_930;
});
CL_COMMON_LISP_GENERIC_FUNCTION_METHODS=lisp.values1(F_GENERIC_FUNCTION_METHODS_927);
let F_GENERIC_FUNCTION_LAMBDA_LIST_944;
F_GENERIC_FUNCTION_LAMBDA_LIST_944=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_945, arguments.length);
}
let TMP_947;
let L_GF__664;
L_GF__664=arguments[0];
TMP_947=G_275.func(L_GF__664,G_946);
return TMP_947;
});
CL_COMMON_LISP_GENERIC_FUNCTION_LAMBDA_LIST=lisp.values1(F_GENERIC_FUNCTION_LAMBDA_LIST_944);
let F_GENERIC_FUNCTION_METHOD_CLASS_961;
F_GENERIC_FUNCTION_METHOD_CLASS_961=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_962, arguments.length);
}
let TMP_964;
let L_GF__681;
L_GF__681=arguments[0];
TMP_964=G_275.func(L_GF__681,G_963);
return TMP_964;
});
CL_COMMON_LISP_GENERIC_FUNCTION_METHOD_CLASS=lisp.values1(F_GENERIC_FUNCTION_METHOD_CLASS_961);
let F_CLASSES_TO_EMF_TABLE_978;
F_CLASSES_TO_EMF_TABLE_978=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_979, arguments.length);
}
let TMP_980;
let L_GF__698;
L_GF__698=arguments[0];
TMP_980=G_275.func(L_GF__698,G_979);
return TMP_980;
});
CL_COMMON_LISP_CLASSES_TO_EMF_TABLE=lisp.values1(F_CLASSES_TO_EMF_TABLE_978);
let F_GENERIC_FUNCTION_MIN_ARGC_994;
F_GENERIC_FUNCTION_MIN_ARGC_994=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_995, arguments.length);
}
let TMP_997;
let L_GF__715;
L_GF__715=arguments[0];
TMP_997=G_275.func(L_GF__715,G_996);
return TMP_997;
});
CL_COMMON_LISP_GENERIC_FUNCTION_MIN_ARGC=lisp.values1(F_GENERIC_FUNCTION_MIN_ARGC_994);
let F_SET_FUNCALLABLE_INSTANCE_FUNCTION_1011;
F_SET_FUNCALLABLE_INSTANCE_FUNCTION_1011=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1012, arguments.length);
}
let TMP_1014;
let L_G_STORE476__737;
let L_G474__735;
let L_FUNCTION__733;
let L_GF__732;
L_GF__732=arguments[0];
L_FUNCTION__733=arguments[1];
{
L_G474__735=lisp.values1(L_GF__732);
L_G_STORE476__737=lisp.values1(L_FUNCTION__733);
TMP_1014=lisp.callFunctionWithCallStack(G_279,L_G_STORE476__737,L_G474__735,G_1013);
}
return TMP_1014;
});
CL_COMMON_LISP_SET_FUNCALLABLE_INSTANCE_FUNCTION=lisp.values1(F_SET_FUNCALLABLE_INSTANCE_FUNCTION_1011);
let F_METHOD_FUNCTION_1016;
F_METHOD_FUNCTION_1016=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1017, arguments.length);
}
let TMP_1018;
let L_METHOD__738;
L_METHOD__738=arguments[0];
TMP_1018=G_275.func(L_METHOD__738,G_518);
return TMP_1018;
});
CL_COMMON_LISP_METHOD_FUNCTION=lisp.values1(F_METHOD_FUNCTION_1016);
let F_METHOD_GENERIC_FUNCTION_1032;
F_METHOD_GENERIC_FUNCTION_1032=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1033, arguments.length);
}
let TMP_1035;
let L_METHOD__755;
L_METHOD__755=arguments[0];
TMP_1035=G_275.func(L_METHOD__755,G_1034);
return TMP_1035;
});
CL_COMMON_LISP_METHOD_GENERIC_FUNCTION=lisp.values1(F_METHOD_GENERIC_FUNCTION_1032);
let F_METHOD_LAMBDA_LIST_1049;
F_METHOD_LAMBDA_LIST_1049=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1050, arguments.length);
}
let TMP_1051;
let L_METHOD__772;
L_METHOD__772=arguments[0];
TMP_1051=G_275.func(L_METHOD__772,G_946);
return TMP_1051;
});
CL_COMMON_LISP_METHOD_LAMBDA_LIST=lisp.values1(F_METHOD_LAMBDA_LIST_1049);
let F_METHOD_SPECIALIZERS_1065;
F_METHOD_SPECIALIZERS_1065=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1066, arguments.length);
}
let TMP_1068;
let L_METHOD__789;
L_METHOD__789=arguments[0];
TMP_1068=G_275.func(L_METHOD__789,G_1067);
return TMP_1068;
});
CL_COMMON_LISP_METHOD_SPECIALIZERS=lisp.values1(F_METHOD_SPECIALIZERS_1065);
let F_METHOD_QUALIFIERS_1082;
F_METHOD_QUALIFIERS_1082=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1083, arguments.length);
}
let TMP_1085;
let L_METHOD__806;
L_METHOD__806=arguments[0];
TMP_1085=G_275.func(L_METHOD__806,G_1084);
return TMP_1085;
});
CL_COMMON_LISP_METHOD_QUALIFIERS=lisp.values1(F_METHOD_QUALIFIERS_1082);
let F_CANONICALIZE_DEFGENERIC_OPTION_1100;
F_CANONICALIZE_DEFGENERIC_OPTION_1100=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1101, arguments.length);
}
let TMP_1122;
let TMP_1121;
let TMP_1120;
let TMP_1119;
let TMP_1118;
let TMP_1117;
let TMP_1116;
let TMP_1115;
let TMP_1114;
let TMP_1113;
let L_G535__827;
let TMP_1112;
let TMP_1110;
let TMP_1109;
let TMP_1108;
let TMP_1107;
let TMP_1105;
let L_G534__826;
let TMP_1104;
let L_G533__825;
let TMP_1102;
let L_OPTION__823;
L_OPTION__823=arguments[0];
{
TMP_1102=lisp.callFunctionWithCallStack(G_7,L_OPTION__823);
L_G533__825=lisp.values1(TMP_1102);
{
TMP_1104=lisp.callFunctionWithCallStack(G_556,L_G533__825,G_1103);
L_G534__826=lisp.values1(TMP_1104);
if(lisp.values1(L_G534__826) !== lisp.S_nil){
TMP_1107=lisp.callFunctionWithCallStack(G_554,L_OPTION__823);
TMP_1108=lisp.callFunctionWithCallStack(G_64,G_612,TMP_1107);
TMP_1109=lisp.callFunctionWithCallStack(G_64,G_456,TMP_1108);
TMP_1110=lisp.callFunctionWithCallStack(G_64,G_1106,TMP_1109);
TMP_1105=TMP_1110;
}else{
{
TMP_1112=lisp.callFunctionWithCallStack(G_556,L_G533__825,G_1111);
L_G535__827=lisp.values1(TMP_1112);
if(lisp.values1(L_G535__827) !== lisp.S_nil){
TMP_1114=lisp.callFunctionWithCallStack(G_554,L_OPTION__823);
TMP_1115=lisp.callFunctionWithCallStack(G_64,G_612,TMP_1114);
TMP_1116=lisp.callFunctionWithCallStack(G_64,G_456,TMP_1115);
TMP_1117=lisp.callFunctionWithCallStack(G_64,G_1111,TMP_1116);
TMP_1113=TMP_1117;
}else{
TMP_1118=lisp.callFunctionWithCallStack(G_7,L_OPTION__823);
TMP_1119=lisp.callFunctionWithCallStack(G_64,G_612,TMP_1118);
TMP_1120=lisp.callFunctionWithCallStack(G_554,L_OPTION__823);
TMP_1121=lisp.callFunctionWithCallStack(G_64,G_612,TMP_1120);
TMP_1122=lisp.callFunctionWithCallStack(G_64,TMP_1119,TMP_1121);
TMP_1113=TMP_1122;
}
}
TMP_1105=TMP_1113;
}
}
}
return TMP_1105;
});
CL_COMMON_LISP_CANONICALIZE_DEFGENERIC_OPTION=lisp.values1(F_CANONICALIZE_DEFGENERIC_OPTION_1100);
let F_CANONICALIZE_DEFGENERIC_OPTIONS_1123;
F_CANONICALIZE_DEFGENERIC_OPTIONS_1123=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1124, arguments.length);
}
let TMP_1126;
let TMP_1125;
let L_OPTIONS__829;
L_OPTIONS__829=arguments[0];
TMP_1125=lisp.CL_symbolFunction(G_1101);
TMP_1126=G_16.func(TMP_1125,L_OPTIONS__829);
return TMP_1126;
});
CL_COMMON_LISP_CANONICALIZE_DEFGENERIC_OPTIONS=lisp.values1(F_CANONICALIZE_DEFGENERIC_OPTIONS_1123);
let F_ENSURE_GENERIC_FUNCTION_1153;
F_ENSURE_GENERIC_FUNCTION_1153=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_1154, arguments.length);
}
let TMP_1162;
let TMP_1161;
let TMP_1160;
let L_ALL_KEYS__857;
let L_METHOD_CLASS__856;
let L_GENERIC_FUNCTION_CLASS__855;
let L_LAMBDA_LIST__854;
let L_FUNCTION_NAME__853;
L_FUNCTION_NAME__853=arguments[0];
let supplied_LAMBDA_LIST__854;
for (let TMP_1156 = 1; TMP_1156 < arguments.length; TMP_1156 += 2) {
if(arguments[TMP_1156] === G_1155){
supplied_LAMBDA_LIST__854=arguments[TMP_1156+1];
break;
}
}
L_LAMBDA_LIST__854=supplied_LAMBDA_LIST__854 !== undefined ? supplied_LAMBDA_LIST__854 : (lisp.values1(lisp.S_nil));
let supplied_GENERIC_FUNCTION_CLASS__855;
for (let TMP_1157 = 1; TMP_1157 < arguments.length; TMP_1157 += 2) {
if(arguments[TMP_1157] === G_1106){
supplied_GENERIC_FUNCTION_CLASS__855=arguments[TMP_1157+1];
break;
}
}
L_GENERIC_FUNCTION_CLASS__855=supplied_GENERIC_FUNCTION_CLASS__855 !== undefined ? supplied_GENERIC_FUNCTION_CLASS__855 : (lisp.values1(lisp.symbolValue(G_910)));
let supplied_METHOD_CLASS__856;
for (let TMP_1158 = 1; TMP_1158 < arguments.length; TMP_1158 += 2) {
if(arguments[TMP_1158] === G_1111){
supplied_METHOD_CLASS__856=arguments[TMP_1158+1];
break;
}
}
L_METHOD_CLASS__856=supplied_METHOD_CLASS__856 !== undefined ? supplied_METHOD_CLASS__856 : (lisp.values1(lisp.symbolValue(G_1015)));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
L_ALL_KEYS__857=lisp.jsArrayToList(arguments, 1);
TMP_1160=lisp.CL_symbolFunction(G_1159);
TMP_1161=lisp.callFunctionWithCallStack(G_1129,L_FUNCTION_NAME__853);
TMP_1162=lisp.callFunctionWithCallStack(G_22,TMP_1160,TMP_1161,L_FUNCTION_NAME__853,L_ALL_KEYS__857);
return TMP_1162;
});
CL_COMMON_LISP_ENSURE_GENERIC_FUNCTION=lisp.values1(F_ENSURE_GENERIC_FUNCTION_1153);
let F_ENSURE_GENERIC_FUNCTION_USING_CLASS_1163;
F_ENSURE_GENERIC_FUNCTION_USING_CLASS_1163=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_1159, arguments.length);
}
let TMP_1174;
let L_G552__870;
let L_G_STORE554__869;
let L_G553__868;
let L_GF__867;
let TMP_1173;
let TMP_1172;
let TMP_1171;
let TMP_1169;
let TMP_1168;
let TMP_1167;
let L_G551__866;
let L_ALL_KEYS__864;
let L_METHOD_CLASS__863;
let L_GENERIC_FUNCTION_CLASS__862;
let L_LAMBDA_LIST__861;
let L_FUNCTION_NAME__860;
let L_GENERIC_FUNCTION_OR_NULL__859;
L_GENERIC_FUNCTION_OR_NULL__859=arguments[0];
L_FUNCTION_NAME__860=arguments[1];
let supplied_LAMBDA_LIST__861;
for (let TMP_1164 = 2; TMP_1164 < arguments.length; TMP_1164 += 2) {
if(arguments[TMP_1164] === G_1155){
supplied_LAMBDA_LIST__861=arguments[TMP_1164+1];
break;
}
}
L_LAMBDA_LIST__861=supplied_LAMBDA_LIST__861 !== undefined ? supplied_LAMBDA_LIST__861 : (lisp.values1(lisp.S_nil));
let supplied_GENERIC_FUNCTION_CLASS__862;
for (let TMP_1165 = 2; TMP_1165 < arguments.length; TMP_1165 += 2) {
if(arguments[TMP_1165] === G_1106){
supplied_GENERIC_FUNCTION_CLASS__862=arguments[TMP_1165+1];
break;
}
}
L_GENERIC_FUNCTION_CLASS__862=supplied_GENERIC_FUNCTION_CLASS__862 !== undefined ? supplied_GENERIC_FUNCTION_CLASS__862 : (lisp.values1(lisp.symbolValue(G_910)));
let supplied_METHOD_CLASS__863;
for (let TMP_1166 = 2; TMP_1166 < arguments.length; TMP_1166 += 2) {
if(arguments[TMP_1166] === G_1111){
supplied_METHOD_CLASS__863=arguments[TMP_1166+1];
break;
}
}
L_METHOD_CLASS__863=supplied_METHOD_CLASS__863 !== undefined ? supplied_METHOD_CLASS__863 : (lisp.values1(lisp.symbolValue(G_1015)));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
L_ALL_KEYS__864=lisp.jsArrayToList(arguments, 2);
{
L_G551__866=lisp.values1(L_GENERIC_FUNCTION_OR_NULL__859);
if(lisp.values1(L_G551__866) !== lisp.S_nil){
TMP_1167=lisp.values1(L_G551__866);
}else{
{
{
TMP_1168=lisp.CL_eq(L_GENERIC_FUNCTION_CLASS__862,lisp.symbolValue(G_910));
if(lisp.values1(TMP_1168) !== lisp.S_nil){
TMP_1171=lisp.CL_symbolFunction(G_1170);
TMP_1169=lisp.values1(TMP_1171);
}else{
TMP_1172=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([109, 97, 107, 101, 45, 105, 110, 115, 116, 97, 110, 99, 101, 32, 116, 114, 97, 112])));
TMP_1169=lisp.values1(TMP_1172);
}
TMP_1173=lisp.callFunctionWithCallStack(G_22,TMP_1169,L_GENERIC_FUNCTION_CLASS__862,G_102,L_FUNCTION_NAME__860,G_1111,L_METHOD_CLASS__863,L_ALL_KEYS__864);
L_GF__867=lisp.values1(TMP_1173);
{
L_G553__868=lisp.values1(L_FUNCTION_NAME__860);
L_G_STORE554__869=lisp.values1(L_GF__867);
lisp.callFunctionWithCallStack(G_1136,L_G_STORE554__869,L_G553__868);
}
}
L_G552__870=lisp.values1(lisp.values1(lisp.values1(L_GF__867)));
if(lisp.values1(L_G552__870) !== lisp.S_nil){
TMP_1174=lisp.values1(L_G552__870);
}else{
TMP_1174=lisp.values1(lisp.S_nil);
}
}
TMP_1167=TMP_1174;
}
}
return TMP_1167;
});
CL_COMMON_LISP_ENSURE_GENERIC_FUNCTION_USING_CLASS=lisp.values1(F_ENSURE_GENERIC_FUNCTION_USING_CLASS_1163);
let F_MAKE_INSTANCE_STANDARD_GENERIC_FUNCTION_1175;
F_MAKE_INSTANCE_STANDARD_GENERIC_FUNCTION_1175=(function(){
if(arguments.length < 1 || 7 < arguments.length) {
lisp.argumentsError(G_1170, arguments.length);
}
let L_G_STORE569__892;
let TMP_1186;
let L_G568__891;
let L_REQUIRED_ARGS__890;
let TMP_1185;
let L_G565__887;
let TMP_1182;
let L_G_STORE564__886;
let TMP_1181;
let L_G563__885;
let L_G561__883;
let L_G_STORE560__882;
let L_G559__881;
let L_G_STORE558__880;
let L_G557__879;
let L_G_STORE556__878;
let L_G555__877;
let L_GF__876;
let TMP_1179;
let L_METHOD_CLASS__874;
let L_LAMBDA_LIST__873;
let L_NAME__872;
let L_GENERIC_FUNCTION_CLASS__871;
L_GENERIC_FUNCTION_CLASS__871=arguments[0];
let supplied_NAME__872;
for (let TMP_1176 = 1; TMP_1176 < arguments.length; TMP_1176 += 2) {
if(arguments[TMP_1176] === G_102){
supplied_NAME__872=arguments[TMP_1176+1];
break;
}
}
L_NAME__872=supplied_NAME__872 !== undefined ? supplied_NAME__872 : (lisp.values1(lisp.S_nil));
let supplied_LAMBDA_LIST__873;
for (let TMP_1177 = 1; TMP_1177 < arguments.length; TMP_1177 += 2) {
if(arguments[TMP_1177] === G_1155){
supplied_LAMBDA_LIST__873=arguments[TMP_1177+1];
break;
}
}
L_LAMBDA_LIST__873=supplied_LAMBDA_LIST__873 !== undefined ? supplied_LAMBDA_LIST__873 : (lisp.values1(lisp.S_nil));
let supplied_METHOD_CLASS__874;
for (let TMP_1178 = 1; TMP_1178 < arguments.length; TMP_1178 += 2) {
if(arguments[TMP_1178] === G_1111){
supplied_METHOD_CLASS__874=arguments[TMP_1178+1];
break;
}
}
L_METHOD_CLASS__874=supplied_METHOD_CLASS__874 !== undefined ? supplied_METHOD_CLASS__874 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
{
TMP_1179=G_37.func(G_38,lisp.symbolValue(G_910));
L_GF__876=lisp.values1(TMP_1179);
{
L_G555__877=lisp.values1(L_GF__876);
L_G_STORE556__878=lisp.values1(L_NAME__872);
lisp.callFunctionWithCallStack(G_914,L_G_STORE556__878,L_G555__877);
}
{
L_G557__879=lisp.values1(L_GF__876);
L_G_STORE558__880=lisp.values1(L_LAMBDA_LIST__873);
lisp.callFunctionWithCallStack(G_948,L_G_STORE558__880,L_G557__879);
}
{
L_G559__881=lisp.values1(L_GF__876);
L_G_STORE560__882=lisp.values1(L_METHOD_CLASS__874);
lisp.callFunctionWithCallStack(G_965,L_G_STORE560__882,L_G559__881);
}
{
L_G561__883=lisp.values1(L_GF__876);
lisp.callFunctionWithCallStack(G_931,lisp.S_nil,L_G561__883);
}
{
L_G563__885=lisp.values1(L_GF__876);
TMP_1181=lisp.callFunctionWithCallStack(G_522,G_840,G_1180);
L_G_STORE564__886=lisp.values1(TMP_1181);
lisp.callFunctionWithCallStack(G_981,L_G_STORE564__886,L_G563__885);
}
{
TMP_1182=G_1183.func(L_LAMBDA_LIST__873);
L_G565__887=lisp.values1(TMP_1182);
{
TMP_1185=lisp.callFunctionWithCallStack(G_564,L_G565__887,G_1184);
L_REQUIRED_ARGS__890=lisp.values1(TMP_1185);
{
L_G568__891=lisp.values1(L_GF__876);
TMP_1186=lisp.callFunctionWithCallStack(G_1187,L_REQUIRED_ARGS__890);
L_G_STORE569__892=lisp.values1(TMP_1186);
lisp.callFunctionWithCallStack(G_998,L_G_STORE569__892,L_G568__891);
}
}
}
G_1188.func(L_GF__876);
}
return lisp.values1(L_GF__876);
});
CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_GENERIC_FUNCTION=lisp.values1(F_MAKE_INSTANCE_STANDARD_GENERIC_FUNCTION_1175);
let F_FINALIZE_GENERIC_FUNCTION_1189;
F_FINALIZE_GENERIC_FUNCTION_1189=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1188, arguments.length);
}
let TMP_1199;
let TMP_1198;
let L_G_STORE571__897;
let L_G570__896;
let TMP_1196;
let L_DISCRIMINATING_FUNCTION__895;
let TMP_1195;
let TMP_1193;
let TMP_1192;
let TMP_1191;
let TMP_1190;
let L_GF__893;
L_GF__893=arguments[0];
{
TMP_1190=G_267.func(L_GF__893);
TMP_1191=lisp.CL_eq(TMP_1190,lisp.symbolValue(G_910));
if(lisp.values1(TMP_1191) !== lisp.S_nil){
TMP_1193=G_1194.func(L_GF__893);
TMP_1192=lisp.values1(TMP_1193);
}else{
TMP_1195=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([99, 111, 109, 112, 117, 116, 101, 45, 100, 105, 115, 99, 114, 105, 109, 105, 110, 97, 116, 105, 110, 103, 45, 102, 117, 110, 99, 116, 105, 111, 110, 32, 116, 114, 97, 112])));
TMP_1192=lisp.values1(TMP_1195);
}
L_DISCRIMINATING_FUNCTION__895=lisp.values1(TMP_1192);
G_1012.func(L_GF__893,L_DISCRIMINATING_FUNCTION__895);
{
TMP_1196=G_912.func(L_GF__893);
L_G570__896=lisp.values1(TMP_1196);
L_G_STORE571__897=lisp.values1(L_DISCRIMINATING_FUNCTION__895);
lisp.callFunctionWithCallStack(G_1197,L_G_STORE571__897,L_G570__896);
}
TMP_1198=G_979.func(L_GF__893);
TMP_1199=lisp.callFunctionWithCallStack(G_1200,TMP_1198);
}
return TMP_1199;
});
CL_COMMON_LISP_FINALIZE_GENERIC_FUNCTION=lisp.values1(F_FINALIZE_GENERIC_FUNCTION_1189);
let F_REQUIRED_CLASSES_1201;
F_REQUIRED_CLASSES_1201=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1202, arguments.length);
}
let TMP_1215;
let L_G582__909;
let TMP_1213;
let L_G579__908;
let TMP_1212;
let TMP_1211;
let L_G581__907;
let TMP_1210;
let L_G580__906;
let TMP_1209;
let TMP_1207;
let L_I__905;
let BLOCK_RESULT_NIL__904;
let L_G572__903;
let L_CLASSES__902;
let TMP_1205;
let TMP_1204;
let L_ARGC__901;
let TMP_1203;
let L_ARGS__899;
let L_GF__898;
L_GF__898=arguments[0];
L_ARGS__899=arguments[1];
{
TMP_1203=lisp.callFunctionWithCallStack(G_1187,L_ARGS__899);
L_ARGC__901=lisp.values1(TMP_1203);
TMP_1204=G_995.func(L_GF__898);
TMP_1205=lisp.callFunctionWithCallStack(G_1206,L_ARGC__901,TMP_1204);
if(lisp.values1(TMP_1205) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([84, 111, 111, 32, 102, 101, 119, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 116, 111, 32, 103, 101, 110, 101, 114, 105, 99, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 126, 83, 46])),L_GF__898);
}else{
}
{
L_CLASSES__902=lisp.values1(lisp.S_nil);
{
L_G572__903=lisp.values1(L_ARGC__901);
BLOCK_NIL__904: for(;;){{
L_I__905=lisp.values1(0);
for(;;){
TMP_1207=lisp.callFunctionWithCallStack(G_1208,L_I__905,L_G572__903);
if(lisp.values1(TMP_1207) !== lisp.S_nil){
BLOCK_RESULT_NIL__904=lisp.values1(lisp.S_nil);
break BLOCK_NIL__904;
}else{
{
{
TMP_1209=lisp.callFunctionWithCallStack(G_9,L_ARGS__899);
L_G580__906=lisp.values1(TMP_1209);
{
TMP_1210=lisp.callFunctionWithCallStack(G_7,L_ARGS__899);
L_G581__907=lisp.values1(TMP_1210);
L_ARGS__899=lisp.values1(L_G580__906);
}
}
TMP_1211=G_267.func(lisp.values1(lisp.values1(lisp.values1(L_G581__907))));
TMP_1212=lisp.CL_cons(TMP_1211,L_CLASSES__902);
L_G579__908=lisp.values1(TMP_1212);
L_CLASSES__902=lisp.values1(L_G579__908);
}
{
TMP_1213=lisp.callFunctionWithCallStack(G_1214,L_I__905,1);
L_G582__909=lisp.values1(TMP_1213);
L_I__905=lisp.values1(L_G582__909);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__904=lisp.values1(lisp.S_nil);
break;
}
}
TMP_1215=lisp.callFunctionWithCallStack(G_645,L_CLASSES__902);
}
}
return TMP_1215;
});
CL_COMMON_LISP_REQUIRED_CLASSES=lisp.values1(F_REQUIRED_CLASSES_1201);
let F_STD_COMPUTE_DISCRIMINATING_FUNCTION_1216;
F_STD_COMPUTE_DISCRIMINATING_FUNCTION_1216=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1194, arguments.length);
}
let TMP_1217;
let L_GF__910;
L_GF__910=arguments[0];
TMP_1217=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1223;
let TMP_1222;
let TMP_1221;
let L_EMFUN__914;
let TMP_1220;
let TMP_1219;
let L_CLASSES__913;
let TMP_1218;
let L_ARGS__912;
L_ARGS__912=lisp.jsArrayToList(arguments, 0);
{
TMP_1218=G_1202.func(L_GF__910,L_ARGS__912);
L_CLASSES__913=lisp.values1(TMP_1218);
TMP_1219=G_979.func(L_GF__910);
TMP_1220=lisp.callFunctionWithCallStack(G_525,L_CLASSES__913,TMP_1219);
L_EMFUN__914=lisp.values1(TMP_1220);
if(lisp.values1(L_EMFUN__914) !== lisp.S_nil){
TMP_1222=lisp.CL_funcall(lisp.values1(L_EMFUN__914),L_ARGS__912);
TMP_1221=TMP_1222;
}else{
TMP_1223=G_1224.func(L_GF__910,L_ARGS__912,L_CLASSES__913);
TMP_1221=TMP_1223;
}
}
return TMP_1221;
});
return lisp.values1(TMP_1217);
});
CL_COMMON_LISP_STD_COMPUTE_DISCRIMINATING_FUNCTION=lisp.values1(F_STD_COMPUTE_DISCRIMINATING_FUNCTION_1216);
let F_SLOW_METHOD_LOOKUP_1225;
F_SLOW_METHOD_LOOKUP_1225=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_1224, arguments.length);
}
let TMP_1235;
let L_G_STORE585__923;
let L_G584__922;
let TMP_1234;
let L_G583__921;
let L_EMFUN__920;
let TMP_1233;
let TMP_1231;
let TMP_1230;
let TMP_1229;
let TMP_1228;
let L_APPLICABLE_METHODS__919;
let TMP_1226;
let L_CLASSES__917;
let L_ARGS__916;
let L_GF__915;
L_GF__915=arguments[0];
L_ARGS__916=arguments[1];
L_CLASSES__917=arguments[2];
{
TMP_1226=G_1227.func(L_GF__915,L_ARGS__916,L_CLASSES__917);
L_APPLICABLE_METHODS__919=lisp.values1(TMP_1226);
TMP_1228=G_267.func(L_GF__915);
TMP_1229=lisp.CL_eq(TMP_1228,lisp.symbolValue(G_910));
if(lisp.values1(TMP_1229) !== lisp.S_nil){
TMP_1231=G_1232.func(L_GF__915,L_APPLICABLE_METHODS__919);
TMP_1230=lisp.values1(TMP_1231);
}else{
TMP_1233=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([99, 111, 109, 112, 117, 116, 101, 45, 101, 102, 102, 101, 99, 116, 105, 118, 101, 45, 109, 101, 116, 104, 111, 100, 45, 102, 117, 110, 99, 116, 105, 111, 110, 32, 116, 114, 97, 112])));
TMP_1230=lisp.values1(TMP_1233);
}
L_EMFUN__920=lisp.values1(TMP_1230);
{
L_G583__921=lisp.values1(L_CLASSES__917);
TMP_1234=G_979.func(L_GF__915);
L_G584__922=lisp.values1(TMP_1234);
L_G_STORE585__923=lisp.values1(L_EMFUN__920);
lisp.callFunctionWithCallStack(G_531,L_G_STORE585__923,L_G583__921,L_G584__922);
}
TMP_1235=lisp.CL_funcall(lisp.values1(L_EMFUN__920),L_ARGS__916);
}
return TMP_1235;
});
CL_COMMON_LISP_SLOW_METHOD_LOOKUP=lisp.values1(F_SLOW_METHOD_LOOKUP_1225);
let F_COMPUTE_APPLICABLE_METHODS_1236;
F_COMPUTE_APPLICABLE_METHODS_1236=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1237, arguments.length);
}
let TMP_1239;
let TMP_1238;
let L_ARGS__925;
let L_GF__924;
L_GF__924=arguments[0];
L_ARGS__925=arguments[1];
TMP_1238=G_1202.func(L_GF__924,L_ARGS__925);
TMP_1239=G_1227.func(L_GF__924,L_ARGS__925,TMP_1238);
return TMP_1239;
});
CL_COMMON_LISP_COMPUTE_APPLICABLE_METHODS=lisp.values1(F_COMPUTE_APPLICABLE_METHODS_1236);
let F_PERCENTCOMPUTE_APPLICABLE_METHODS_1240;
F_PERCENTCOMPUTE_APPLICABLE_METHODS_1240=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_1227, arguments.length);
}
let TMP_1267;
let TMP_1266;
let TMP_1263;
let TMP_1262;
let TMP_1261;
let TMP_1260;
let TMP_1259;
let TMP_1258;
let TMP_1241;
let L_REQUIRED_CLASSES__929;
let L_ARGS__928;
let L_GF__927;
L_GF__927=arguments[0];
L_ARGS__928=arguments[1];
L_REQUIRED_CLASSES__929=arguments[2];
TMP_1241=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G594__941;
let TMP_1257;
let L_G593__940;
let TMP_1256;
let L_G592__939;
let TMP_1255;
let TMP_1253;
let TMP_1252;
let TMP_1250;
let TMP_1249;
let TMP_1248;
let L_ARG__938;
let TMP_1246;
let L_SPECIALIZER__937;
let TMP_1245;
let L_REQUIRED_CLASS__936;
let TMP_1244;
let TMP_1243;
let L_ARGS__935;
let L_SPECIALIZERS__934;
let TMP_1242;
let L_REQUIRED_CLASSES__933;
let BLOCK_RESULT_NIL__932;
let L_METHOD__931;
L_METHOD__931=arguments[0];
BLOCK_NIL__932: for(;;){{
L_REQUIRED_CLASSES__933=lisp.values1(L_REQUIRED_CLASSES__929);
TMP_1242=G_1066.func(L_METHOD__931);
L_SPECIALIZERS__934=lisp.values1(TMP_1242);
L_ARGS__935=lisp.values1(L_ARGS__928);
for(;;){
TMP_1243=lisp.callFunctionWithCallStack(G_5,L_SPECIALIZERS__934);
if(lisp.values1(TMP_1243) !== lisp.S_nil){
BLOCK_RESULT_NIL__932=lisp.values1(G_26);
break BLOCK_NIL__932;
}else{
{
TMP_1244=lisp.callFunctionWithCallStack(G_7,L_REQUIRED_CLASSES__933);
L_REQUIRED_CLASS__936=lisp.values1(TMP_1244);
TMP_1245=lisp.callFunctionWithCallStack(G_7,L_SPECIALIZERS__934);
L_SPECIALIZER__937=lisp.values1(TMP_1245);
TMP_1246=lisp.callFunctionWithCallStack(G_7,L_ARGS__935);
L_ARG__938=lisp.values1(TMP_1246);
TMP_1248=lisp.callFunctionWithCallStack(G_35,L_SPECIALIZER__937,G_1247);
if(lisp.values1(TMP_1248) !== lisp.S_nil){
TMP_1250=lisp.callFunctionWithCallStack(G_1251,L_SPECIALIZER__937);
TMP_1252=lisp.callFunctionWithCallStack(G_556,L_ARG__938,TMP_1250);
TMP_1249=lisp.values1(TMP_1252);
}else{
TMP_1253=G_1254.func(L_REQUIRED_CLASS__936,L_SPECIALIZER__937);
TMP_1249=lisp.values1(TMP_1253);
}
if(lisp.values1(TMP_1249) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__932=lisp.values1(lisp.S_nil);
break BLOCK_NIL__932;
}
}
{
TMP_1255=lisp.callFunctionWithCallStack(G_9,L_REQUIRED_CLASSES__933);
L_G592__939=lisp.values1(TMP_1255);
TMP_1256=lisp.callFunctionWithCallStack(G_9,L_SPECIALIZERS__934);
L_G593__940=lisp.values1(TMP_1256);
TMP_1257=lisp.callFunctionWithCallStack(G_9,L_ARGS__935);
L_G594__941=lisp.values1(TMP_1257);
L_REQUIRED_CLASSES__933=lisp.values1(L_G592__939);
L_SPECIALIZERS__934=lisp.values1(L_G593__940);
L_ARGS__935=lisp.values1(L_G594__941);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__932=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__932;
});
TMP_1258=G_928.func(L_GF__927);
TMP_1259=lisp.callFunctionWithCallStack(G_876,TMP_1241,TMP_1258);
TMP_1260=G_267.func(L_GF__927);
TMP_1261=lisp.CL_eq(TMP_1260,lisp.symbolValue(G_910));
if(lisp.values1(TMP_1261) !== lisp.S_nil){
TMP_1263=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1264;
let L_M2__943;
let L_M1__942;
L_M1__942=arguments[0];
L_M2__943=arguments[1];
TMP_1264=G_1265.func(L_GF__927,L_M1__942,L_M2__943,L_REQUIRED_CLASSES__929);
return TMP_1264;
});
TMP_1262=lisp.values1(TMP_1263);
}else{
TMP_1266=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([109, 101, 116, 104, 111, 100, 45, 109, 111, 114, 101, 45, 115, 112, 101, 99, 105, 102, 105, 99, 45, 112, 32, 116, 114, 97, 112])));
TMP_1262=lisp.values1(TMP_1266);
}
TMP_1267=lisp.callFunctionWithCallStack(G_1268,TMP_1259,TMP_1262);
return TMP_1267;
});
CL_COMMON_LISP_PERCENTCOMPUTE_APPLICABLE_METHODS=lisp.values1(F_PERCENTCOMPUTE_APPLICABLE_METHODS_1240);
let F_STD_METHOD_MORE_SPECIFIC_P_1269;
F_STD_METHOD_MORE_SPECIFIC_P_1269=(function(){
if(arguments.length !== 4) {
lisp.argumentsError(G_1265, arguments.length);
}
let TMP_1278;
let TMP_1277;
let TMP_1272;
let TMP_1271;
let L_REQUIRED_CLASSES__947;
let L_M2__946;
let L_M1__945;
let L_GF__944;
L_GF__944=arguments[0];
L_M1__945=arguments[1];
L_M2__946=arguments[2];
L_REQUIRED_CLASSES__947=arguments[3];
try {
TMP_1272=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1275;
let TMP_1274;
let TMP_1273;
let L_REQUIRED_CLASS__951;
let L_SPEC2__950;
let L_SPEC1__949;
L_SPEC1__949=arguments[0];
L_SPEC2__950=arguments[1];
L_REQUIRED_CLASS__951=arguments[2];
TMP_1273=lisp.CL_eq(L_SPEC1__949,L_SPEC2__950);
if(lisp.values1(TMP_1273) !== lisp.S_nil){
TMP_1274=lisp.values1(lisp.S_nil);
}else{
TMP_1275=G_1276.func(L_SPEC1__949,L_SPEC2__950,L_REQUIRED_CLASS__951);
throw new lisp.BlockValue(G_1265,TMP_1275);TMP_1274=lisp.values1(lisp.values1(lisp.S_nil));
}
return TMP_1274;
});
TMP_1277=G_1066.func(L_M1__945);
TMP_1278=G_1066.func(L_M2__946);
lisp.callFunctionWithCallStack(G_1279,TMP_1272,TMP_1277,TMP_1278,L_REQUIRED_CLASSES__947);
TMP_1271=lisp.values1(lisp.S_nil)
}catch(E__1270){if(E__1270 instanceof lisp.BlockValue && E__1270.name === G_1265){TMP_1271=E__1270.value;}
else{throw E__1270;}
}
return TMP_1271;
});
CL_COMMON_LISP_STD_METHOD_MORE_SPECIFIC_P=lisp.values1(F_STD_METHOD_MORE_SPECIFIC_P_1269);
let F_SUBCLASSP_1280;
F_SUBCLASSP_1280=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1254, arguments.length);
}
let TMP_1284;
let TMP_1283;
let TMP_1282;
let TMP_1281;
let L_C2__953;
let L_C1__952;
L_C1__952=arguments[0];
L_C2__953=arguments[1];
TMP_1281=G_331.func(L_C1__952);
TMP_1282=lisp.callFunctionWithCallStack(G_11,L_C2__953,TMP_1281);
TMP_1283=lisp.callFunctionWithCallStack(G_5,TMP_1282);
TMP_1284=lisp.callFunctionWithCallStack(G_1285,TMP_1283);
return TMP_1284;
});
CL_COMMON_LISP_SUBCLASSP=lisp.values1(F_SUBCLASSP_1280);
let F_SUB_SPECIALIZER_P_1286;
F_SUB_SPECIALIZER_P_1286=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_1276, arguments.length);
}
let TMP_1292;
let TMP_1291;
let TMP_1290;
let TMP_1289;
let TMP_1288;
let L_CPL__959;
let TMP_1287;
let L_ARG__957;
let L_C2__956;
let L_C1__955;
L_C1__955=arguments[0];
L_C2__956=arguments[1];
L_ARG__957=arguments[2];
{
TMP_1287=G_331.func(L_ARG__957);
L_CPL__959=lisp.values1(TMP_1287);
TMP_1288=lisp.callFunctionWithCallStack(G_11,L_C1__955,L_CPL__959);
TMP_1289=lisp.callFunctionWithCallStack(G_9,TMP_1288);
TMP_1290=lisp.callFunctionWithCallStack(G_11,L_C2__956,TMP_1289);
TMP_1291=lisp.callFunctionWithCallStack(G_5,TMP_1290);
TMP_1292=lisp.callFunctionWithCallStack(G_1285,TMP_1291);
}
return TMP_1292;
});
CL_COMMON_LISP_SUB_SPECIALIZER_P=lisp.values1(F_SUB_SPECIALIZER_P_1286);
let F_PRIMARY_METHOD_P_1293;
F_PRIMARY_METHOD_P_1293=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1294, arguments.length);
}
let TMP_1296;
let TMP_1295;
let L_METHOD__960;
L_METHOD__960=arguments[0];
TMP_1295=G_1083.func(L_METHOD__960);
TMP_1296=lisp.callFunctionWithCallStack(G_5,TMP_1295);
return TMP_1296;
});
CL_COMMON_LISP_PRIMARY_METHOD_P=lisp.values1(F_PRIMARY_METHOD_P_1293);
let F_BEFORE_METHOD_P_1297;
F_BEFORE_METHOD_P_1297=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1298, arguments.length);
}
let TMP_1301;
let TMP_1300;
let L_METHOD__962;
L_METHOD__962=arguments[0];
TMP_1300=G_1083.func(L_METHOD__962);
TMP_1301=lisp.callFunctionWithCallStack(G_1180,lisp.makeCons(G_1299, lisp.S_nil),TMP_1300);
return TMP_1301;
});
CL_COMMON_LISP_BEFORE_METHOD_P=lisp.values1(F_BEFORE_METHOD_P_1297);
let F_AFTER_METHOD_P_1302;
F_AFTER_METHOD_P_1302=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1303, arguments.length);
}
let TMP_1306;
let TMP_1305;
let L_METHOD__964;
L_METHOD__964=arguments[0];
TMP_1305=G_1083.func(L_METHOD__964);
TMP_1306=lisp.callFunctionWithCallStack(G_1180,lisp.makeCons(G_1304, lisp.S_nil),TMP_1305);
return TMP_1306;
});
CL_COMMON_LISP_AFTER_METHOD_P=lisp.values1(F_AFTER_METHOD_P_1302);
let F_AROUND_METHOD_P_1307;
F_AROUND_METHOD_P_1307=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1308, arguments.length);
}
let TMP_1311;
let TMP_1310;
let L_METHOD__966;
L_METHOD__966=arguments[0];
TMP_1310=G_1083.func(L_METHOD__966);
TMP_1311=lisp.callFunctionWithCallStack(G_1180,lisp.makeCons(G_1309, lisp.S_nil),TMP_1310);
return TMP_1311;
});
CL_COMMON_LISP_AROUND_METHOD_P=lisp.values1(F_AROUND_METHOD_P_1307);
let F_STD_COMPUTE_EFFECTIVE_METHOD_FUNCTION_1312;
F_STD_COMPUTE_EFFECTIVE_METHOD_FUNCTION_1312=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1232, arguments.length);
}
let TMP_1337;
let L_AFTERS__977;
let TMP_1336;
let TMP_1335;
let TMP_1334;
let L_BEFORES__976;
let TMP_1333;
let TMP_1332;
let L_NEXT_EMFUN__975;
let TMP_1330;
let TMP_1329;
let TMP_1326;
let L_NEXT_EMFUN__973;
let TMP_1325;
let TMP_1324;
let TMP_1322;
let TMP_1321;
let TMP_1320;
let TMP_1319;
let TMP_1318;
let TMP_1317;
let L_AROUND__972;
let TMP_1316;
let TMP_1315;
let L_PRIMARIES__971;
let TMP_1314;
let TMP_1313;
let L_METHODS__969;
let L_GF__968;
L_GF__968=arguments[0];
L_METHODS__969=arguments[1];
{
TMP_1313=lisp.CL_symbolFunction(G_1294);
TMP_1314=lisp.callFunctionWithCallStack(G_876,TMP_1313,L_METHODS__969);
L_PRIMARIES__971=lisp.values1(TMP_1314);
TMP_1315=lisp.CL_symbolFunction(G_1308);
TMP_1316=lisp.callFunctionWithCallStack(G_885,TMP_1315,L_METHODS__969);
L_AROUND__972=lisp.values1(TMP_1316);
TMP_1317=lisp.callFunctionWithCallStack(G_5,L_PRIMARIES__971);
if(lisp.values1(TMP_1317) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([78, 111, 32, 112, 114, 105, 109, 97, 114, 121, 32, 109, 101, 116, 104, 111, 100, 115, 32, 102, 111, 114, 32, 116, 104, 101, 32, 103, 101, 110, 101, 114, 105, 99, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 126, 83, 46])),L_GF__968);
}else{
}
if(lisp.values1(L_AROUND__972) !== lisp.S_nil){
{
TMP_1319=G_267.func(L_GF__968);
TMP_1320=lisp.CL_eq(TMP_1319,lisp.symbolValue(G_910));
if(lisp.values1(TMP_1320) !== lisp.S_nil){
TMP_1322=lisp.callFunctionWithCallStack(G_1323,L_AROUND__972,L_METHODS__969);
TMP_1324=G_1232.func(L_GF__968,TMP_1322);
TMP_1321=lisp.values1(TMP_1324);
}else{
TMP_1325=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([99, 111, 109, 112, 117, 116, 101, 45, 101, 102, 102, 101, 99, 116, 105, 118, 101, 45, 109, 101, 116, 104, 111, 100, 45, 102, 117, 110, 99, 116, 105, 111, 110, 32, 116, 114, 97, 112])));
TMP_1321=lisp.values1(TMP_1325);
}
L_NEXT_EMFUN__973=lisp.values1(TMP_1321);
TMP_1326=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1328;
let TMP_1327;
let L_ARGS__974;
L_ARGS__974=arguments[0];
TMP_1327=G_1017.func(L_AROUND__972);
TMP_1328=lisp.CL_funcall(lisp.values1(TMP_1327),L_ARGS__974,L_NEXT_EMFUN__973);
return TMP_1328;
});
}
TMP_1318=lisp.values1(TMP_1326);
}else{
{
TMP_1329=lisp.callFunctionWithCallStack(G_9,L_PRIMARIES__971);
TMP_1330=G_1331.func(TMP_1329);
L_NEXT_EMFUN__975=lisp.values1(TMP_1330);
TMP_1332=lisp.CL_symbolFunction(G_1298);
TMP_1333=lisp.callFunctionWithCallStack(G_876,TMP_1332,L_METHODS__969);
L_BEFORES__976=lisp.values1(TMP_1333);
TMP_1334=lisp.CL_symbolFunction(G_1303);
TMP_1335=lisp.callFunctionWithCallStack(G_876,TMP_1334,L_METHODS__969);
TMP_1336=lisp.callFunctionWithCallStack(G_645,TMP_1335);
L_AFTERS__977=lisp.values1(TMP_1336);
TMP_1337=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1355;
let TMP_1354;
let TMP_1352;
let TMP_1351;
let L_AFTER__986;
let TMP_1350;
let TMP_1349;
let L_G603__985;
let L_G602__983;
let TMP_1348;
let TMP_1347;
let TMP_1346;
let TMP_1345;
let TMP_1343;
let TMP_1342;
let TMP_1341;
let TMP_1340;
let L_BEFORE__981;
let TMP_1339;
let TMP_1338;
let L_G595__980;
let L_ARGS__978;
L_ARGS__978=arguments[0];
{
L_G595__980=lisp.values1(L_BEFORES__976);
for(;;){
TMP_1338=lisp.callFunctionWithCallStack(G_725,L_G595__980);
if(lisp.values1(TMP_1338) !== lisp.S_nil){
}else{
{
TMP_1339=lisp.callFunctionWithCallStack(G_7,L_G595__980);
L_BEFORE__981=lisp.values1(TMP_1339);
TMP_1340=lisp.callFunctionWithCallStack(G_9,L_G595__980);
L_G595__980=lisp.values1(TMP_1340);
TMP_1341=G_1017.func(L_BEFORE__981);
lisp.CL_funcall(lisp.values1(TMP_1341),L_ARGS__978,lisp.S_nil);
}
continue;
}
break;
}
}
{
TMP_1342=lisp.CL_symbolFunction(G_64);
TMP_1343=lisp.callFunctionWithCallStack(G_1344,TMP_1342);
TMP_1345=lisp.callFunctionWithCallStack(G_7,L_PRIMARIES__971);
TMP_1346=G_1017.func(TMP_1345);
TMP_1347=lisp.CL_funcall(lisp.values1(TMP_1346),L_ARGS__978,L_NEXT_EMFUN__975);
TMP_1348=lisp.CL_multipleValueCall(TMP_1343,TMP_1347);
L_G602__983=lisp.values1(TMP_1348);
{
L_G603__985=lisp.values1(L_AFTERS__977);
for(;;){
TMP_1349=lisp.callFunctionWithCallStack(G_725,L_G603__985);
if(lisp.values1(TMP_1349) !== lisp.S_nil){
}else{
{
TMP_1350=lisp.callFunctionWithCallStack(G_7,L_G603__985);
L_AFTER__986=lisp.values1(TMP_1350);
TMP_1351=lisp.callFunctionWithCallStack(G_9,L_G603__985);
L_G603__985=lisp.values1(TMP_1351);
TMP_1352=G_1017.func(L_AFTER__986);
lisp.CL_funcall(lisp.values1(TMP_1352),L_ARGS__978,lisp.S_nil);
}
continue;
}
break;
}
}
TMP_1354=lisp.CL_symbolFunction(G_1353);
TMP_1355=lisp.callFunctionWithCallStack(G_22,TMP_1354,L_G602__983);
}
return TMP_1355;
});
}
TMP_1318=lisp.values1(TMP_1337);
}
}
return TMP_1318;
});
CL_COMMON_LISP_STD_COMPUTE_EFFECTIVE_METHOD_FUNCTION=lisp.values1(F_STD_COMPUTE_EFFECTIVE_METHOD_FUNCTION_1312);
let F_COMPUTE_PRIMARY_EMFUN_1356;
F_COMPUTE_PRIMARY_EMFUN_1356=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1331, arguments.length);
}
let TMP_1361;
let L_NEXT_EMFUN__990;
let TMP_1360;
let TMP_1359;
let TMP_1358;
let TMP_1357;
let L_METHODS__988;
L_METHODS__988=arguments[0];
TMP_1357=lisp.callFunctionWithCallStack(G_5,L_METHODS__988);
if(lisp.values1(TMP_1357) !== lisp.S_nil){
TMP_1358=lisp.values1(lisp.S_nil);
}else{
{
TMP_1359=lisp.callFunctionWithCallStack(G_9,L_METHODS__988);
TMP_1360=G_1331.func(TMP_1359);
L_NEXT_EMFUN__990=lisp.values1(TMP_1360);
TMP_1361=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1364;
let TMP_1363;
let TMP_1362;
let L_ARGS__991;
L_ARGS__991=arguments[0];
TMP_1362=lisp.callFunctionWithCallStack(G_7,L_METHODS__988);
TMP_1363=G_1017.func(TMP_1362);
TMP_1364=lisp.CL_funcall(lisp.values1(TMP_1363),L_ARGS__991,L_NEXT_EMFUN__990);
return TMP_1364;
});
}
TMP_1358=lisp.values1(TMP_1361);
}
return TMP_1358;
});
CL_COMMON_LISP_COMPUTE_PRIMARY_EMFUN=lisp.values1(F_COMPUTE_PRIMARY_EMFUN_1356);
let F_ANALYZE_LAMBDA_LIST_1365;
F_ANALYZE_LAMBDA_LIST_1365=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1183, arguments.length);
}
let TMP_1440;
let TMP_1438;
let TMP_1436;
let TMP_1434;
let TMP_1432;
let TMP_1429;
let TMP_1427;
let TMP_1426;
let L_G640__1034;
let TMP_1424;
let L_G639__1033;
let TMP_1423;
let L_G638__1032;
let TMP_1422;
let L_G637__1031;
let TMP_1421;
let TMP_1420;
let L_G636__1030;
let TMP_1419;
let L_G635__1029;
let TMP_1418;
let L_G634__1028;
let TMP_1417;
let L_G633__1027;
let TMP_1416;
let L_G632__1026;
let TMP_1415;
let L_G631__1025;
let TMP_1414;
let L_G629__1023;
let TMP_1413;
let TMP_1412;
let L_G628__1022;
let TMP_1411;
let TMP_1410;
let L_G627__1021;
let TMP_1409;
let L_G626__1020;
let TMP_1408;
let L_G625__1019;
let TMP_1407;
let L_G624__1018;
let L_G622__1016;
let TMP_1405;
let L_G621__1015;
let TMP_1404;
let L_G620__1014;
let TMP_1402;
let L_G619__1013;
let TMP_1400;
let L_G618__1012;
let TMP_1398;
let L_G617__1011;
let TMP_1397;
let TMP_1388;
let L_ARG__1010;
let TMP_1387;
let TMP_1386;
let L_G610__1009;
let L_STATE__1007;
let L_ALLOW_OTHER_KEYS__1006;
let L_AUXS__1005;
let L_OPTIONALS__1004;
let L_REST_VAR__1003;
let L_SPECIALIZERS__1002;
let L_REQUIRED_ARGS__1001;
let L_REQUIRED_NAMES__1000;
let L_KEY_ARGS__999;
let L_KEYS__998;
let F_GET_KEYWORD_FROM_ARG__995;
let TMP_1374;
let F_MAKE_KEYWORD__994;
let TMP_1366;
let L_LAMBDA_LIST__992;
L_LAMBDA_LIST__992=arguments[0];
{
TMP_1366=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1372;
let TMP_1370;
let TMP_1367;
let L_SYMBOL__996;
L_SYMBOL__996=arguments[0];
TMP_1367=lisp.callFunctionWithCallStack(G_1368,L_SYMBOL__996);
TMP_1370=lisp.callFunctionWithCallStack(G_1371,G_1369);
TMP_1372=lisp.callFunctionWithCallStack(G_1373,TMP_1367,TMP_1370);
return TMP_1372;
});
F_MAKE_KEYWORD__994=lisp.values1(TMP_1366);
TMP_1374=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1384;
let TMP_1383;
let TMP_1382;
let TMP_1381;
let TMP_1380;
let TMP_1379;
let TMP_1378;
let TMP_1377;
let TMP_1375;
let L_ARG__997;
L_ARG__997=arguments[0];
TMP_1375=lisp.callFunctionWithCallStack(G_1376,L_ARG__997);
if(lisp.values1(TMP_1375) !== lisp.S_nil){
TMP_1378=lisp.callFunctionWithCallStack(G_7,L_ARG__997);
TMP_1379=lisp.callFunctionWithCallStack(G_1376,TMP_1378);
if(lisp.values1(TMP_1379) !== lisp.S_nil){
TMP_1381=lisp.callFunctionWithCallStack(G_677,L_ARG__997);
TMP_1380=TMP_1381;
}else{
TMP_1382=lisp.callFunctionWithCallStack(G_7,L_ARG__997);
TMP_1383=F_MAKE_KEYWORD__994(TMP_1382);
TMP_1380=TMP_1383;
}
TMP_1377=TMP_1380;
}else{
TMP_1384=F_MAKE_KEYWORD__994(L_ARG__997);
TMP_1377=TMP_1384;
}
return TMP_1377;
});
F_GET_KEYWORD_FROM_ARG__995=lisp.values1(TMP_1374);
{
L_KEYS__998=lisp.values1(lisp.S_nil);
L_KEY_ARGS__999=lisp.values1(lisp.S_nil);
L_REQUIRED_NAMES__1000=lisp.values1(lisp.S_nil);
L_REQUIRED_ARGS__1001=lisp.values1(lisp.S_nil);
L_SPECIALIZERS__1002=lisp.values1(lisp.S_nil);
L_REST_VAR__1003=lisp.values1(lisp.S_nil);
L_OPTIONALS__1004=lisp.values1(lisp.S_nil);
L_AUXS__1005=lisp.values1(lisp.S_nil);
L_ALLOW_OTHER_KEYS__1006=lisp.values1(lisp.S_nil);
L_STATE__1007=lisp.values1(G_1385);
{
L_G610__1009=lisp.values1(L_LAMBDA_LIST__992);
for(;;){
TMP_1386=lisp.callFunctionWithCallStack(G_725,L_G610__1009);
if(lisp.values1(TMP_1386) !== lisp.S_nil){
}else{
{
TMP_1387=lisp.callFunctionWithCallStack(G_7,L_G610__1009);
L_ARG__1010=lisp.values1(TMP_1387);
TMP_1388=lisp.callFunctionWithCallStack(G_9,L_G610__1009);
L_G610__1009=lisp.values1(TMP_1388);
TMP_1397=lisp.callFunctionWithCallStack(G_11,L_ARG__1010,lisp.makeCons(G_1389, lisp.makeCons(G_1390, lisp.makeCons(G_1391, lisp.makeCons(G_1392, lisp.makeCons(G_1393, lisp.makeCons(G_1394, lisp.makeCons(G_1395, lisp.makeCons(G_1396, lisp.S_nil)))))))));
if(lisp.values1(TMP_1397) !== lisp.S_nil){
{
L_G617__1011=lisp.values1(L_ARG__1010);
{
TMP_1398=lisp.callFunctionWithCallStack(G_556,L_G617__1011,G_1394);
L_G618__1012=lisp.values1(TMP_1398);
if(lisp.values1(L_G618__1012) !== lisp.S_nil){
L_STATE__1007=lisp.values1(G_1399);
}else{
{
TMP_1400=lisp.callFunctionWithCallStack(G_556,L_G617__1011,G_1395);
L_G619__1013=lisp.values1(TMP_1400);
if(lisp.values1(L_G619__1013) !== lisp.S_nil){
L_STATE__1007=lisp.values1(G_1401);
}else{
{
TMP_1402=lisp.callFunctionWithCallStack(G_556,L_G617__1011,G_1393);
L_G620__1014=lisp.values1(TMP_1402);
if(lisp.values1(L_G620__1014) !== lisp.S_nil){
L_STATE__1007=lisp.values1(G_1403);
}else{
{
TMP_1404=lisp.callFunctionWithCallStack(G_556,L_G617__1011,G_1389);
L_G621__1015=lisp.values1(TMP_1404);
if(lisp.values1(L_G621__1015) !== lisp.S_nil){
L_ALLOW_OTHER_KEYS__1006=lisp.values1(G_26);
}else{
{
TMP_1405=lisp.callFunctionWithCallStack(G_556,L_G617__1011,G_1390);
L_G622__1016=lisp.values1(TMP_1405);
if(lisp.values1(L_G622__1016) !== lisp.S_nil){
L_STATE__1007=lisp.values1(G_1406);
}else{
lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G617__1011,lisp.makeCons(G_1394, lisp.makeCons(G_1395, lisp.makeCons(G_1393, lisp.makeCons(G_1389, lisp.makeCons(G_1390, lisp.S_nil))))));
}
}
}
}
}
}
}
}
}
}
}
}else{
{
L_G624__1018=lisp.values1(L_STATE__1007);
{
TMP_1407=lisp.callFunctionWithCallStack(G_556,L_G624__1018,G_1385);
L_G625__1019=lisp.values1(TMP_1407);
if(lisp.values1(L_G625__1019) !== lisp.S_nil){
{
TMP_1408=lisp.CL_cons(L_ARG__1010,L_REQUIRED_ARGS__1001);
L_G626__1020=lisp.values1(TMP_1408);
L_REQUIRED_ARGS__1001=lisp.values1(L_G626__1020);
}
{
TMP_1409=lisp.callFunctionWithCallStack(G_1376,L_ARG__1010);
L_G627__1021=lisp.values1(TMP_1409);
if(lisp.values1(L_G627__1021) !== lisp.S_nil){
{
TMP_1410=lisp.callFunctionWithCallStack(G_7,L_ARG__1010);
TMP_1411=lisp.CL_cons(TMP_1410,L_REQUIRED_NAMES__1000);
L_G628__1022=lisp.values1(TMP_1411);
L_REQUIRED_NAMES__1000=lisp.values1(L_G628__1022);
}
{
TMP_1412=lisp.callFunctionWithCallStack(G_554,L_ARG__1010);
TMP_1413=lisp.CL_cons(TMP_1412,L_SPECIALIZERS__1002);
L_G629__1023=lisp.values1(TMP_1413);
L_SPECIALIZERS__1002=lisp.values1(L_G629__1023);
}
}else{
{
TMP_1414=lisp.CL_cons(L_ARG__1010,L_REQUIRED_NAMES__1000);
L_G631__1025=lisp.values1(TMP_1414);
L_REQUIRED_NAMES__1000=lisp.values1(L_G631__1025);
}
{
TMP_1415=lisp.CL_cons(G_26,L_SPECIALIZERS__1002);
L_G632__1026=lisp.values1(TMP_1415);
L_SPECIALIZERS__1002=lisp.values1(L_G632__1026);
}
}
}
}else{
{
TMP_1416=lisp.callFunctionWithCallStack(G_556,L_G624__1018,G_1399);
L_G633__1027=lisp.values1(TMP_1416);
if(lisp.values1(L_G633__1027) !== lisp.S_nil){
{
TMP_1417=lisp.CL_cons(L_ARG__1010,L_OPTIONALS__1004);
L_G634__1028=lisp.values1(TMP_1417);
L_OPTIONALS__1004=lisp.values1(L_G634__1028);
}
}else{
{
TMP_1418=lisp.callFunctionWithCallStack(G_556,L_G624__1018,G_1401);
L_G635__1029=lisp.values1(TMP_1418);
if(lisp.values1(L_G635__1029) !== lisp.S_nil){
L_REST_VAR__1003=lisp.values1(L_ARG__1010);
}else{
{
TMP_1419=lisp.callFunctionWithCallStack(G_556,L_G624__1018,G_1403);
L_G636__1030=lisp.values1(TMP_1419);
if(lisp.values1(L_G636__1030) !== lisp.S_nil){
{
TMP_1420=F_GET_KEYWORD_FROM_ARG__995(L_ARG__1010);
TMP_1421=lisp.CL_cons(TMP_1420,L_KEYS__998);
L_G637__1031=lisp.values1(TMP_1421);
L_KEYS__998=lisp.values1(L_G637__1031);
}
{
TMP_1422=lisp.CL_cons(L_ARG__1010,L_KEY_ARGS__999);
L_G638__1032=lisp.values1(TMP_1422);
L_KEY_ARGS__999=lisp.values1(L_G638__1032);
}
}else{
{
TMP_1423=lisp.callFunctionWithCallStack(G_556,L_G624__1018,G_1406);
L_G639__1033=lisp.values1(TMP_1423);
if(lisp.values1(L_G639__1033) !== lisp.S_nil){
{
TMP_1424=lisp.CL_cons(L_ARG__1010,L_AUXS__1005);
L_G640__1034=lisp.values1(TMP_1424);
L_AUXS__1005=lisp.values1(L_G640__1034);
}
}else{
}
}
}
}
}
}
}
}
}
}
}
}
}
continue;
}
break;
}
}
TMP_1426=lisp.callFunctionWithCallStack(G_645,L_REQUIRED_NAMES__1000);
TMP_1427=lisp.callFunctionWithCallStack(G_645,L_REQUIRED_ARGS__1001);
TMP_1429=lisp.callFunctionWithCallStack(G_645,L_SPECIALIZERS__1002);
TMP_1432=lisp.callFunctionWithCallStack(G_645,L_KEYS__998);
TMP_1434=lisp.callFunctionWithCallStack(G_645,L_KEY_ARGS__999);
TMP_1436=lisp.callFunctionWithCallStack(G_645,L_AUXS__1005);
TMP_1438=lisp.callFunctionWithCallStack(G_645,L_OPTIONALS__1004);
TMP_1440=lisp.callFunctionWithCallStack(G_64,G_1425,TMP_1426,G_1184,TMP_1427,G_1428,TMP_1429,G_1430,L_REST_VAR__1003,G_1431,TMP_1432,G_1433,TMP_1434,G_1435,TMP_1436,G_1437,TMP_1438,G_1439,L_ALLOW_OTHER_KEYS__1006);
}
}
return TMP_1440;
});
CL_COMMON_LISP_ANALYZE_LAMBDA_LIST=lisp.values1(F_ANALYZE_LAMBDA_LIST_1365);
let F_EXTRACT_LAMBDA_LIST_1441;
F_EXTRACT_LAMBDA_LIST_1441=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1442, arguments.length);
}
let TMP_1460;
let TMP_1459;
let TMP_1458;
let TMP_1457;
let TMP_1456;
let TMP_1455;
let TMP_1454;
let TMP_1453;
let TMP_1452;
let L_G645__1048;
let TMP_1451;
let L_G644__1047;
let TMP_1450;
let TMP_1449;
let L_AUXILIARY_ARGS__1046;
let TMP_1448;
let L_OPTIONAL_ARGS__1045;
let TMP_1447;
let L_ALLOW_OTHER_KEYS__1044;
let TMP_1446;
let L_KEY_ARGS__1043;
let TMP_1445;
let L_REST_VAR__1042;
let TMP_1444;
let L_REQUIRED_NAMES__1041;
let TMP_1443;
let L_G641__1038;
let L_ANALYZED_LAMBDA_LIST__1036;
L_ANALYZED_LAMBDA_LIST__1036=arguments[0];
{
L_G641__1038=lisp.values1(L_ANALYZED_LAMBDA_LIST__1036);
{
TMP_1443=lisp.callFunctionWithCallStack(G_564,L_G641__1038,G_1425);
L_REQUIRED_NAMES__1041=lisp.values1(TMP_1443);
TMP_1444=lisp.callFunctionWithCallStack(G_564,L_G641__1038,G_1430);
L_REST_VAR__1042=lisp.values1(TMP_1444);
TMP_1445=lisp.callFunctionWithCallStack(G_564,L_G641__1038,G_1433);
L_KEY_ARGS__1043=lisp.values1(TMP_1445);
TMP_1446=lisp.callFunctionWithCallStack(G_564,L_G641__1038,G_1439);
L_ALLOW_OTHER_KEYS__1044=lisp.values1(TMP_1446);
TMP_1447=lisp.callFunctionWithCallStack(G_564,L_G641__1038,G_1437);
L_OPTIONAL_ARGS__1045=lisp.values1(TMP_1447);
TMP_1448=lisp.callFunctionWithCallStack(G_564,L_G641__1038,G_1435);
L_AUXILIARY_ARGS__1046=lisp.values1(TMP_1448);
if(lisp.values1(L_REST_VAR__1042) !== lisp.S_nil){
TMP_1450=lisp.callFunctionWithCallStack(G_64,G_1395,L_REST_VAR__1042);
TMP_1449=lisp.values1(TMP_1450);
}else{
TMP_1449=lisp.values1(lisp.S_nil);
}
{
L_G644__1047=lisp.values1(L_KEY_ARGS__1043);
if(lisp.values1(L_G644__1047) !== lisp.S_nil){
TMP_1451=lisp.values1(L_G644__1047);
}else{
{
L_G645__1048=lisp.values1(L_ALLOW_OTHER_KEYS__1044);
if(lisp.values1(L_G645__1048) !== lisp.S_nil){
TMP_1452=lisp.values1(L_G645__1048);
}else{
TMP_1452=lisp.values1(lisp.S_nil);
}
}
TMP_1451=lisp.values1(lisp.values1(TMP_1452));
}
}
if(lisp.values1(lisp.values1(TMP_1451)) !== lisp.S_nil){
TMP_1454=lisp.CL_cons(G_1393,L_KEY_ARGS__1043);
TMP_1453=lisp.values1(TMP_1454);
}else{
TMP_1453=lisp.values1(lisp.S_nil);
}
if(lisp.values1(L_ALLOW_OTHER_KEYS__1044) !== lisp.S_nil){
TMP_1455=lisp.values1(lisp.makeCons(G_1389, lisp.S_nil));
}else{
TMP_1455=lisp.values1(lisp.S_nil);
}
if(lisp.values1(L_OPTIONAL_ARGS__1045) !== lisp.S_nil){
TMP_1457=lisp.CL_cons(G_1394,L_OPTIONAL_ARGS__1045);
TMP_1456=lisp.values1(TMP_1457);
}else{
TMP_1456=lisp.values1(lisp.S_nil);
}
if(lisp.values1(L_AUXILIARY_ARGS__1046) !== lisp.S_nil){
TMP_1459=lisp.CL_cons(G_1390,L_AUXILIARY_ARGS__1046);
TMP_1458=lisp.values1(TMP_1459);
}else{
TMP_1458=lisp.values1(lisp.S_nil);
}
TMP_1460=lisp.callFunctionWithCallStack(G_17,L_REQUIRED_NAMES__1041,TMP_1449,TMP_1453,TMP_1455,TMP_1456,TMP_1458);
}
}
return TMP_1460;
});
CL_COMMON_LISP_EXTRACT_LAMBDA_LIST=lisp.values1(F_EXTRACT_LAMBDA_LIST_1441);
let F_EXTRACT_SPECIALIZERS_1461;
F_EXTRACT_SPECIALIZERS_1461=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1462, arguments.length);
}
let L_SPECIALIZERS__1054;
let TMP_1463;
let L_G646__1051;
let L_ANALYZED_LAMBDA_LIST__1049;
L_ANALYZED_LAMBDA_LIST__1049=arguments[0];
{
L_G646__1051=lisp.values1(L_ANALYZED_LAMBDA_LIST__1049);
{
TMP_1463=lisp.callFunctionWithCallStack(G_564,L_G646__1051,G_1428);
L_SPECIALIZERS__1054=lisp.values1(TMP_1463);
}
}
return lisp.values1(L_SPECIALIZERS__1054);
});
CL_COMMON_LISP_EXTRACT_SPECIALIZERS=lisp.values1(F_EXTRACT_SPECIALIZERS_1461);
let F_PARSE_DEFMETHOD_1464;
F_PARSE_DEFMETHOD_1464=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1465, arguments.length);
}
let TMP_1499;
let TMP_1497;
let TMP_1496;
let TMP_1478;
let L_G661__1068;
let TMP_1477;
let L_G660__1067;
let TMP_1476;
let TMP_1475;
let L_G657__1066;
let TMP_1474;
let L_G659__1065;
let TMP_1473;
let L_G658__1064;
let TMP_1472;
let TMP_1470;
let TMP_1469;
let L_ARG__1063;
let TMP_1468;
let BLOCK_RESULT_NIL__1062;
let L_SPECIALIZED_LAMBDA_LIST__1061;
let L_METHOD_QUALIFIERS__1060;
let L_FUNCTION_NAME__1059;
let L_G650__1058;
let TMP_1467;
let L_G649__1057;
let TMP_1466;
let L_ARGS__1055;
L_ARGS__1055=arguments[0];
{
{
TMP_1466=lisp.callFunctionWithCallStack(G_9,L_ARGS__1055);
L_G649__1057=lisp.values1(TMP_1466);
{
TMP_1467=lisp.callFunctionWithCallStack(G_7,L_ARGS__1055);
L_G650__1058=lisp.values1(TMP_1467);
L_ARGS__1055=lisp.values1(L_G649__1057);
}
}
L_FUNCTION_NAME__1059=lisp.values1(lisp.values1(lisp.values1(lisp.values1(L_G650__1058))));
L_METHOD_QUALIFIERS__1060=lisp.values1(lisp.S_nil);
L_SPECIALIZED_LAMBDA_LIST__1061=lisp.values1(lisp.S_nil);
BLOCK_NIL__1062: for(;;){for(;;){
{
TMP_1468=lisp.callFunctionWithCallStack(G_7,L_ARGS__1055);
L_ARG__1063=lisp.values1(TMP_1468);
if(lisp.values1(L_ARG__1063) !== lisp.S_nil){
TMP_1470=lisp.callFunctionWithCallStack(G_1471,L_ARG__1063);
TMP_1469=lisp.values1(TMP_1470);
}else{
TMP_1469=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1469) !== lisp.S_nil){
{
{
TMP_1472=lisp.callFunctionWithCallStack(G_9,L_ARGS__1055);
L_G658__1064=lisp.values1(TMP_1472);
{
TMP_1473=lisp.callFunctionWithCallStack(G_7,L_ARGS__1055);
L_G659__1065=lisp.values1(TMP_1473);
L_ARGS__1055=lisp.values1(L_G658__1064);
}
}
TMP_1474=lisp.CL_cons(lisp.values1(lisp.values1(lisp.values1(L_G659__1065))),L_METHOD_QUALIFIERS__1060);
L_G657__1066=lisp.values1(TMP_1474);
L_METHOD_QUALIFIERS__1060=lisp.values1(L_G657__1066);
}
}else{
TMP_1475=lisp.callFunctionWithCallStack(G_645,L_METHOD_QUALIFIERS__1060);
L_METHOD_QUALIFIERS__1060=lisp.values1(TMP_1475);
BLOCK_RESULT_NIL__1062=lisp.values1(lisp.S_nil);
break BLOCK_NIL__1062;
}
}
continue;
break;
}
BLOCK_RESULT_NIL__1062=lisp.values1(lisp.S_nil);
break;
}
{
TMP_1476=lisp.callFunctionWithCallStack(G_9,L_ARGS__1055);
L_G660__1067=lisp.values1(TMP_1476);
{
TMP_1477=lisp.callFunctionWithCallStack(G_7,L_ARGS__1055);
L_G661__1068=lisp.values1(TMP_1477);
L_ARGS__1055=lisp.values1(L_G660__1067);
}
}
L_SPECIALIZED_LAMBDA_LIST__1061=lisp.values1(lisp.values1(lisp.values1(lisp.values1(L_G661__1068))));
TMP_1478=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1495;
let TMP_1494;
let TMP_1493;
let TMP_1492;
let TMP_1491;
let TMP_1490;
let TMP_1489;
let TMP_1487;
let TMP_1486;
let TMP_1484;
let TMP_1483;
let TMP_1482;
let TMP_1481;
let TMP_1480;
let L_ANALYZED_LAMBDA_LIST__1073;
let TMP_1479;
let L_G662__1072;
let L_DOCSTRING__1071;
let L_DECLARES__1070;
let L_BODY__1069;
L_BODY__1069=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__1070=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_DOCSTRING__1071=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_G662__1072=lisp.jsArrayToList(arguments, 3);
{
TMP_1479=G_1183.func(L_SPECIALIZED_LAMBDA_LIST__1061);
L_ANALYZED_LAMBDA_LIST__1073=lisp.values1(TMP_1479);
TMP_1480=G_1442.func(L_ANALYZED_LAMBDA_LIST__1073);
TMP_1481=G_1462.func(L_ANALYZED_LAMBDA_LIST__1073);
if(lisp.values1(L_DOCSTRING__1071) !== lisp.S_nil){
TMP_1483=lisp.callFunctionWithCallStack(G_64,L_DOCSTRING__1071);
TMP_1482=lisp.values1(TMP_1483);
}else{
TMP_1482=lisp.values1(lisp.S_nil);
}
if(lisp.values1(L_DECLARES__1070) !== lisp.S_nil){
TMP_1486=lisp.CL_cons(G_1485,L_DECLARES__1070);
TMP_1487=lisp.callFunctionWithCallStack(G_64,TMP_1486);
TMP_1484=lisp.values1(TMP_1487);
}else{
TMP_1484=lisp.values1(lisp.S_nil);
}
TMP_1489=lisp.CL_consp(L_FUNCTION_NAME__1059);
if(lisp.values1(TMP_1489) !== lisp.S_nil){
TMP_1491=lisp.callFunctionWithCallStack(G_554,L_FUNCTION_NAME__1059);
TMP_1490=lisp.values1(TMP_1491);
}else{
TMP_1490=lisp.values1(L_FUNCTION_NAME__1059);
}
TMP_1492=lisp.callFunctionWithCallStack(G_66,G_1488,TMP_1490,L_BODY__1069);
TMP_1493=lisp.callFunctionWithCallStack(G_64,TMP_1492);
TMP_1494=lisp.callFunctionWithCallStack(G_17,TMP_1482,TMP_1484,TMP_1493);
TMP_1495=lisp.CL_values(L_FUNCTION_NAME__1059,L_METHOD_QUALIFIERS__1060,TMP_1480,TMP_1481,TMP_1494);
}
return TMP_1495;
});
TMP_1496=lisp.callFunctionWithCallStack(G_1344,TMP_1478);
TMP_1497=lisp.callFunctionWithCallStack(G_1498,L_ARGS__1055,G_26);
TMP_1499=lisp.CL_multipleValueCall(TMP_1496,TMP_1497);
}
return TMP_1499;
});
CL_COMMON_LISP_PARSE_DEFMETHOD=lisp.values1(F_PARSE_DEFMETHOD_1464);
let F_KLUDGE_ARGLIST_1500;
F_KLUDGE_ARGLIST_1500=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1501, arguments.length);
}
let TMP_1514;
let TMP_1513;
let TMP_1512;
let TMP_1511;
let TMP_1510;
let TMP_1509;
let TMP_1508;
let TMP_1507;
let TMP_1506;
let TMP_1505;
let TMP_1504;
let TMP_1503;
let TMP_1502;
let L_LAMBDA_LIST__1074;
L_LAMBDA_LIST__1074=arguments[0];
TMP_1502=lisp.callFunctionWithCallStack(G_11,G_1393,L_LAMBDA_LIST__1074);
if(lisp.values1(TMP_1502) !== lisp.S_nil){
TMP_1504=lisp.callFunctionWithCallStack(G_11,G_1389,L_LAMBDA_LIST__1074);
TMP_1505=lisp.callFunctionWithCallStack(G_1285,TMP_1504);
TMP_1503=lisp.values1(TMP_1505);
}else{
TMP_1503=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1503) !== lisp.S_nil){
TMP_1507=lisp.callFunctionWithCallStack(G_17,L_LAMBDA_LIST__1074,lisp.makeCons(G_1389, lisp.S_nil));
TMP_1506=TMP_1507;
}else{
TMP_1508=lisp.callFunctionWithCallStack(G_11,G_1395,L_LAMBDA_LIST__1074);
TMP_1509=lisp.callFunctionWithCallStack(G_1285,TMP_1508);
if(lisp.values1(TMP_1509) !== lisp.S_nil){
TMP_1511=lisp.callFunctionWithCallStack(G_11,G_1393,L_LAMBDA_LIST__1074);
TMP_1512=lisp.callFunctionWithCallStack(G_1285,TMP_1511);
TMP_1510=lisp.values1(TMP_1512);
}else{
TMP_1510=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1510) !== lisp.S_nil){
TMP_1514=lisp.callFunctionWithCallStack(G_17,L_LAMBDA_LIST__1074,lisp.makeCons(G_1393, lisp.makeCons(G_1389, lisp.S_nil)));
TMP_1513=TMP_1514;
}else{
TMP_1513=lisp.values1(L_LAMBDA_LIST__1074);
}
TMP_1506=TMP_1513;
}
return TMP_1506;
});
CL_COMMON_LISP_KLUDGE_ARGLIST=lisp.values1(F_KLUDGE_ARGLIST_1500);
let F_ENSURE_METHOD_1517;
F_ENSURE_METHOD_1517=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_1518, arguments.length);
}
let L_METHOD__1086;
let TMP_1535;
let TMP_1534;
let TMP_1533;
let TMP_1531;
let TMP_1530;
let L_METHOD_CLASS__1085;
let TMP_1529;
let L_GF__1084;
let TMP_1528;
let L_ARGS__1082;
let L_FUNCTION__1081;
let L_BODY__1080;
let L_SPECIALIZERS__1079;
let L_QUALIFIERS__1078;
let L_LAMBDA_LIST__1077;
let L_FUNCTION_NAME__1076;
L_FUNCTION_NAME__1076=arguments[0];
let supplied_LAMBDA_LIST__1077;
for (let TMP_1519 = 1; TMP_1519 < arguments.length; TMP_1519 += 2) {
if(arguments[TMP_1519] === G_1155){
supplied_LAMBDA_LIST__1077=arguments[TMP_1519+1];
break;
}
}
L_LAMBDA_LIST__1077=supplied_LAMBDA_LIST__1077 !== undefined ? supplied_LAMBDA_LIST__1077 : (lisp.values1(lisp.S_nil));
let supplied_QUALIFIERS__1078;
for (let TMP_1521 = 1; TMP_1521 < arguments.length; TMP_1521 += 2) {
if(arguments[TMP_1521] === G_1520){
supplied_QUALIFIERS__1078=arguments[TMP_1521+1];
break;
}
}
L_QUALIFIERS__1078=supplied_QUALIFIERS__1078 !== undefined ? supplied_QUALIFIERS__1078 : (lisp.values1(lisp.S_nil));
let supplied_SPECIALIZERS__1079;
for (let TMP_1522 = 1; TMP_1522 < arguments.length; TMP_1522 += 2) {
if(arguments[TMP_1522] === G_1428){
supplied_SPECIALIZERS__1079=arguments[TMP_1522+1];
break;
}
}
L_SPECIALIZERS__1079=supplied_SPECIALIZERS__1079 !== undefined ? supplied_SPECIALIZERS__1079 : (lisp.values1(lisp.S_nil));
let supplied_BODY__1080;
for (let TMP_1524 = 1; TMP_1524 < arguments.length; TMP_1524 += 2) {
if(arguments[TMP_1524] === G_1523){
supplied_BODY__1080=arguments[TMP_1524+1];
break;
}
}
L_BODY__1080=supplied_BODY__1080 !== undefined ? supplied_BODY__1080 : (lisp.values1(lisp.S_nil));
let supplied_FUNCTION__1081;
for (let TMP_1526 = 1; TMP_1526 < arguments.length; TMP_1526 += 2) {
if(arguments[TMP_1526] === G_1525){
supplied_FUNCTION__1081=arguments[TMP_1526+1];
break;
}
}
L_FUNCTION__1081=supplied_FUNCTION__1081 !== undefined ? supplied_FUNCTION__1081 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1527 = 1; TMP_1527 < arguments.length; TMP_1527 += 2) {
if(arguments[TMP_1527]!==G_1525 && arguments[TMP_1527]!==G_1523 && arguments[TMP_1527]!==G_1428 && arguments[TMP_1527]!==G_1520 && arguments[TMP_1527]!==G_1155) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1527].name); }
}
L_ARGS__1082=lisp.jsArrayToList(arguments, 1);
{
TMP_1528=G_1154.func(L_FUNCTION_NAME__1076,G_1155,L_LAMBDA_LIST__1077);
L_GF__1084=lisp.values1(TMP_1528);
TMP_1529=G_962.func(L_GF__1084);
L_METHOD_CLASS__1085=lisp.values1(TMP_1529);
TMP_1530=lisp.CL_eq(L_METHOD_CLASS__1085,lisp.symbolValue(G_1015));
if(lisp.values1(TMP_1530) !== lisp.S_nil){
TMP_1533=lisp.CL_symbolFunction(G_1532);
TMP_1531=lisp.values1(TMP_1533);
}else{
TMP_1534=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([109, 97, 107, 101, 45, 105, 110, 115, 116, 97, 110, 99, 101, 32, 116, 114, 97, 112])));
TMP_1531=lisp.values1(TMP_1534);
}
TMP_1535=lisp.callFunctionWithCallStack(G_22,TMP_1531,L_METHOD_CLASS__1085,L_ARGS__1082);
L_METHOD__1086=lisp.values1(TMP_1535);
G_1536.func(L_GF__1084,L_METHOD__1086);
}
return lisp.values1(L_METHOD__1086);
});
CL_COMMON_LISP_ENSURE_METHOD=lisp.values1(F_ENSURE_METHOD_1517);
let F_CANONICALIZE_METHOD_SPECIALIZERS_1537;
F_CANONICALIZE_METHOD_SPECIALIZERS_1537=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1538, arguments.length);
}
let TMP_1541;
let TMP_1540;
let L_SPECIALIZERS__1087;
L_SPECIALIZERS__1087=arguments[0];
TMP_1540=lisp.CL_symbolFunction(G_1539);
TMP_1541=lisp.callFunctionWithCallStack(G_60,TMP_1540,L_SPECIALIZERS__1087);
return TMP_1541;
});
CL_COMMON_LISP_CANONICALIZE_METHOD_SPECIALIZERS=lisp.values1(F_CANONICALIZE_METHOD_SPECIALIZERS_1537);
let F_CANONICALIZE_METHOD_SPECIALIZER_1542;
F_CANONICALIZE_METHOD_SPECIALIZER_1542=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1539, arguments.length);
}
let TMP_1562;
let TMP_1560;
let TMP_1559;
let TMP_1558;
let TMP_1557;
let TMP_1556;
let TMP_1555;
let TMP_1554;
let L_OBJECT__1094;
let TMP_1553;
let TMP_1552;
let L_G667__1093;
let TMP_1551;
let TMP_1550;
let TMP_1549;
let TMP_1548;
let TMP_1547;
let TMP_1546;
let L_G666__1092;
let TMP_1545;
let TMP_1544;
let L_G665__1091;
let TMP_1543;
let L_SPECIALIZER__1089;
L_SPECIALIZER__1089=arguments[0];
{
TMP_1543=G_32.func(L_SPECIALIZER__1089);
L_G665__1091=lisp.values1(TMP_1543);
if(lisp.values1(L_G665__1091) !== lisp.S_nil){
TMP_1544=lisp.values1(L_SPECIALIZER__1089);
}else{
{
TMP_1545=lisp.CL_symbolp(L_SPECIALIZER__1089);
L_G666__1092=lisp.values1(TMP_1545);
if(lisp.values1(L_G666__1092) !== lisp.S_nil){
TMP_1547=lisp.callFunctionWithCallStack(G_456,L_SPECIALIZER__1089);
TMP_1546=TMP_1547;
}else{
{
TMP_1548=lisp.CL_consp(L_SPECIALIZER__1089);
if(lisp.values1(TMP_1548) !== lisp.S_nil){
TMP_1550=lisp.callFunctionWithCallStack(G_7,L_SPECIALIZER__1089);
TMP_1551=lisp.CL_eq(TMP_1550,G_556);
TMP_1549=lisp.values1(TMP_1551);
}else{
TMP_1549=lisp.values1(lisp.S_nil);
}
L_G667__1093=lisp.values1(TMP_1549);
if(lisp.values1(L_G667__1093) !== lisp.S_nil){
{
TMP_1553=lisp.callFunctionWithCallStack(G_554,L_SPECIALIZER__1089);
L_OBJECT__1094=lisp.values1(TMP_1553);
TMP_1554=lisp.CL_consp(L_OBJECT__1094);
if(lisp.values1(TMP_1554) !== lisp.S_nil){
TMP_1556=lisp.callFunctionWithCallStack(G_7,L_OBJECT__1094);
TMP_1557=lisp.CL_eq(G_612,TMP_1556);
TMP_1555=lisp.values1(TMP_1557);
}else{
TMP_1555=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1555) !== lisp.S_nil){
TMP_1559=lisp.callFunctionWithCallStack(G_554,L_OBJECT__1094);
TMP_1558=lisp.values1(TMP_1559);
}else{
TMP_1558=lisp.values1(L_OBJECT__1094);
}
TMP_1560=lisp.callFunctionWithCallStack(G_1561,TMP_1558);
}
TMP_1552=TMP_1560;
}else{
TMP_1562=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([85, 110, 107, 110, 111, 119, 110, 32, 115, 112, 101, 99, 105, 97, 108, 105, 122, 101, 114, 58, 32, 126, 83])),L_SPECIALIZER__1089);
TMP_1552=TMP_1562;
}
}
TMP_1546=TMP_1552;
}
}
TMP_1544=TMP_1546;
}
}
return TMP_1544;
});
CL_COMMON_LISP_CANONICALIZE_METHOD_SPECIALIZER=lisp.values1(F_CANONICALIZE_METHOD_SPECIALIZER_1542);
let F_MAKE_INSTANCE_STANDARD_METHOD_1563;
F_MAKE_INSTANCE_STANDARD_METHOD_1563=(function(){
if(arguments.length < 1 || 11 < arguments.length) {
lisp.argumentsError(G_1532, arguments.length);
}
let L_G_STORE678__1113;
let L_G677__1112;
let L_G675__1110;
let L_G_STORE674__1109;
let TMP_1571;
let L_G673__1108;
let L_G_STORE672__1107;
let L_G671__1106;
let L_G_STORE670__1105;
let L_G669__1104;
let L_METHOD__1103;
let TMP_1570;
let L_FUNCTION__1101;
let L_BODY__1100;
let L_SPECIALIZERS__1099;
let L_QUALIFIERS__1098;
let L_LAMBDA_LIST__1097;
let L_METHOD_CLASS__1096;
L_METHOD_CLASS__1096=arguments[0];
let supplied_LAMBDA_LIST__1097;
for (let TMP_1564 = 1; TMP_1564 < arguments.length; TMP_1564 += 2) {
if(arguments[TMP_1564] === G_1155){
supplied_LAMBDA_LIST__1097=arguments[TMP_1564+1];
break;
}
}
L_LAMBDA_LIST__1097=supplied_LAMBDA_LIST__1097 !== undefined ? supplied_LAMBDA_LIST__1097 : (lisp.values1(lisp.S_nil));
let supplied_QUALIFIERS__1098;
for (let TMP_1565 = 1; TMP_1565 < arguments.length; TMP_1565 += 2) {
if(arguments[TMP_1565] === G_1520){
supplied_QUALIFIERS__1098=arguments[TMP_1565+1];
break;
}
}
L_QUALIFIERS__1098=supplied_QUALIFIERS__1098 !== undefined ? supplied_QUALIFIERS__1098 : (lisp.values1(lisp.S_nil));
let supplied_SPECIALIZERS__1099;
for (let TMP_1566 = 1; TMP_1566 < arguments.length; TMP_1566 += 2) {
if(arguments[TMP_1566] === G_1428){
supplied_SPECIALIZERS__1099=arguments[TMP_1566+1];
break;
}
}
L_SPECIALIZERS__1099=supplied_SPECIALIZERS__1099 !== undefined ? supplied_SPECIALIZERS__1099 : (lisp.values1(lisp.S_nil));
let supplied_BODY__1100;
for (let TMP_1567 = 1; TMP_1567 < arguments.length; TMP_1567 += 2) {
if(arguments[TMP_1567] === G_1523){
supplied_BODY__1100=arguments[TMP_1567+1];
break;
}
}
L_BODY__1100=supplied_BODY__1100 !== undefined ? supplied_BODY__1100 : (lisp.values1(lisp.S_nil));
let supplied_FUNCTION__1101;
for (let TMP_1568 = 1; TMP_1568 < arguments.length; TMP_1568 += 2) {
if(arguments[TMP_1568] === G_1525){
supplied_FUNCTION__1101=arguments[TMP_1568+1];
break;
}
}
L_FUNCTION__1101=supplied_FUNCTION__1101 !== undefined ? supplied_FUNCTION__1101 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1569 = 1; TMP_1569 < arguments.length; TMP_1569 += 2) {
if(arguments[TMP_1569]!==G_1525 && arguments[TMP_1569]!==G_1523 && arguments[TMP_1569]!==G_1428 && arguments[TMP_1569]!==G_1520 && arguments[TMP_1569]!==G_1155) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1569].name); }
}
{
TMP_1570=G_37.func(G_38,lisp.symbolValue(G_1015));
L_METHOD__1103=lisp.values1(TMP_1570);
{
L_G669__1104=lisp.values1(L_METHOD__1103);
L_G_STORE670__1105=lisp.values1(L_LAMBDA_LIST__1097);
lisp.callFunctionWithCallStack(G_1052,L_G_STORE670__1105,L_G669__1104);
}
{
L_G671__1106=lisp.values1(L_METHOD__1103);
L_G_STORE672__1107=lisp.values1(L_QUALIFIERS__1098);
lisp.callFunctionWithCallStack(G_1086,L_G_STORE672__1107,L_G671__1106);
}
{
L_G673__1108=lisp.values1(L_METHOD__1103);
TMP_1571=G_1538.func(L_SPECIALIZERS__1099);
L_G_STORE674__1109=lisp.values1(TMP_1571);
lisp.callFunctionWithCallStack(G_1069,L_G_STORE674__1109,L_G673__1108);
}
{
L_G675__1110=lisp.values1(L_METHOD__1103);
lisp.callFunctionWithCallStack(G_1036,lisp.S_nil,L_G675__1110);
}
{
L_G677__1112=lisp.values1(L_METHOD__1103);
L_G_STORE678__1113=lisp.values1(L_FUNCTION__1101);
lisp.callFunctionWithCallStack(G_1019,L_G_STORE678__1113,L_G677__1112);
}
}
return lisp.values1(L_METHOD__1103);
});
CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_METHOD=lisp.values1(F_MAKE_INSTANCE_STANDARD_METHOD_1563);
let F_ADD_METHOD_1572;
F_ADD_METHOD_1572=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1536, arguments.length);
}
let L_G_STORE682__1121;
let TMP_1579;
let TMP_1578;
let L_G681__1120;
let L_G_STORE680__1119;
let L_G679__1118;
let L_OLD_METHOD__1117;
let TMP_1575;
let TMP_1574;
let TMP_1573;
let L_METHOD__1115;
let L_GF__1114;
L_GF__1114=arguments[0];
L_METHOD__1115=arguments[1];
{
TMP_1573=G_1083.func(L_METHOD__1115);
TMP_1574=G_1066.func(L_METHOD__1115);
TMP_1575=G_1576.func(L_GF__1114,TMP_1573,TMP_1574,lisp.S_nil);
L_OLD_METHOD__1117=lisp.values1(TMP_1575);
if(lisp.values1(L_OLD_METHOD__1117) !== lisp.S_nil){
G_1577.func(L_GF__1114,L_OLD_METHOD__1117);
}else{
}
{
L_G679__1118=lisp.values1(L_METHOD__1115);
L_G_STORE680__1119=lisp.values1(L_GF__1114);
lisp.callFunctionWithCallStack(G_1036,L_G_STORE680__1119,L_G679__1118);
}
{
L_G681__1120=lisp.values1(L_GF__1114);
TMP_1578=G_928.func(L_G681__1120);
TMP_1579=lisp.CL_cons(L_METHOD__1115,TMP_1578);
L_G_STORE682__1121=lisp.values1(TMP_1579);
lisp.callFunctionWithCallStack(G_931,L_G_STORE682__1121,L_G681__1120);
}
G_1188.func(L_GF__1114);
}
return lisp.values1(L_METHOD__1115);
});
CL_COMMON_LISP_ADD_METHOD=lisp.values1(F_ADD_METHOD_1572);
let F_REMOVE_METHOD_1580;
F_REMOVE_METHOD_1580=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1577, arguments.length);
}
let L_G685__1127;
let L_G_STORE684__1126;
let TMP_1582;
let TMP_1581;
let L_G683__1125;
let L_METHOD__1123;
let L_GF__1122;
L_GF__1122=arguments[0];
L_METHOD__1123=arguments[1];
{
L_G683__1125=lisp.values1(L_GF__1122);
TMP_1581=G_928.func(L_GF__1122);
TMP_1582=lisp.callFunctionWithCallStack(G_839,L_METHOD__1123,TMP_1581);
L_G_STORE684__1126=lisp.values1(TMP_1582);
lisp.callFunctionWithCallStack(G_931,L_G_STORE684__1126,L_G683__1125);
}
{
L_G685__1127=lisp.values1(L_METHOD__1123);
lisp.callFunctionWithCallStack(G_1036,lisp.S_nil,L_G685__1127);
}
G_1188.func(L_GF__1122);
return lisp.values1(L_METHOD__1123);
});
CL_COMMON_LISP_REMOVE_METHOD=lisp.values1(F_REMOVE_METHOD_1580);
let F_FIND_METHOD_1583;
F_FIND_METHOD_1583=(function(){
if(arguments.length < 3 || 4 < arguments.length) {
lisp.argumentsError(G_1576, arguments.length);
}
let TMP_1596;
let TMP_1595;
let TMP_1594;
let TMP_1593;
let TMP_1592;
let L_METHOD__1135;
let TMP_1591;
let TMP_1590;
let TMP_1584;
let L_ERRORP__1132;
let L_SPECIALIZERS__1131;
let L_QUALIFIERS__1130;
let L_GF__1129;
L_GF__1129=arguments[0];
L_QUALIFIERS__1130=arguments[1];
L_SPECIALIZERS__1131=arguments[2];
L_ERRORP__1132=arguments.length > 3 ? arguments[3] : (lisp.values1(G_26));
{
TMP_1584=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1589;
let TMP_1588;
let TMP_1587;
let TMP_1586;
let TMP_1585;
let L_METHOD__1134;
L_METHOD__1134=arguments[0];
TMP_1585=G_1083.func(L_METHOD__1134);
TMP_1586=lisp.callFunctionWithCallStack(G_1180,L_QUALIFIERS__1130,TMP_1585);
if(lisp.values1(TMP_1586) !== lisp.S_nil){
TMP_1588=G_1066.func(L_METHOD__1134);
TMP_1589=lisp.callFunctionWithCallStack(G_1180,L_SPECIALIZERS__1131,TMP_1588);
TMP_1587=TMP_1589;
}else{
TMP_1587=lisp.values1(lisp.S_nil);
}
return TMP_1587;
});
TMP_1590=G_928.func(L_GF__1129);
TMP_1591=lisp.callFunctionWithCallStack(G_885,TMP_1584,TMP_1590);
L_METHOD__1135=lisp.values1(TMP_1591);
TMP_1592=lisp.callFunctionWithCallStack(G_5,L_METHOD__1135);
if(lisp.values1(TMP_1592) !== lisp.S_nil){
TMP_1593=lisp.values1(L_ERRORP__1132);
}else{
TMP_1593=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1593) !== lisp.S_nil){
TMP_1595=G_912.func(L_GF__1129);
TMP_1596=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([78, 111, 32, 115, 117, 99, 104, 32, 109, 101, 116, 104, 111, 100, 32, 102, 111, 114, 32, 126, 83, 46])),TMP_1595);
TMP_1594=TMP_1596;
}else{
TMP_1594=lisp.values1(L_METHOD__1135);
}
}
return TMP_1594;
});
CL_COMMON_LISP_FIND_METHOD=lisp.values1(F_FIND_METHOD_1583);
let F_ADD_READER_METHOD_1597;
F_ADD_READER_METHOD_1597=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_743, arguments.length);
}
let TMP_1608;
let TMP_1602;
let TMP_1601;
let TMP_1600;
let TMP_1599;
let L_SLOT_NAME__1138;
let L_FN_NAME__1137;
let L_CLASS__1136;
L_CLASS__1136=arguments[0];
L_FN_NAME__1137=arguments[1];
L_SLOT_NAME__1138=arguments[2];
TMP_1599=lisp.callFunctionWithCallStack(G_64,L_CLASS__1136);
TMP_1600=lisp.callFunctionWithCallStack(G_64,G_612,L_SLOT_NAME__1138);
TMP_1601=lisp.callFunctionWithCallStack(G_64,G_298,TMP_1600);
TMP_1602=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1607;
let L_G689__1145;
let TMP_1605;
let L_OBJECT__1144;
let TMP_1603;
let L_G687__1142;
let L_NEXT_EMFUN__1141;
let L_ARGS__1140;
L_ARGS__1140=arguments[0];
L_NEXT_EMFUN__1141=arguments[1];
{
L_G687__1142=lisp.values1(L_ARGS__1140);
{
TMP_1603=lisp.callFunctionWithCallStack(G_1604,L_G687__1142);
L_OBJECT__1144=lisp.values1(TMP_1603);
TMP_1605=lisp.callFunctionWithCallStack(G_1606,L_G687__1142);
L_G689__1145=lisp.values1(TMP_1605);
TMP_1607=G_298.func(L_OBJECT__1144,L_SLOT_NAME__1138);
}
}
return TMP_1607;
});
TMP_1608=G_1518.func(L_FN_NAME__1137,G_1155,lisp.makeCons(G_1598, lisp.S_nil),G_1520,lisp.S_nil,G_1428,TMP_1599,G_1523,TMP_1601,G_1525,TMP_1602);
return TMP_1608;
});
CL_COMMON_LISP_ADD_READER_METHOD=lisp.values1(F_ADD_READER_METHOD_1597);
let F_ADD_WRITER_METHOD_1609;
F_ADD_WRITER_METHOD_1609=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_749, arguments.length);
}
let TMP_1622;
let TMP_1616;
let TMP_1615;
let TMP_1614;
let TMP_1613;
let TMP_1612;
let TMP_1611;
let L_SLOT_NAME__1149;
let L_FN_NAME__1148;
let L_CLASS__1147;
L_CLASS__1147=arguments[0];
L_FN_NAME__1148=arguments[1];
L_SLOT_NAME__1149=arguments[2];
TMP_1611=lisp.callFunctionWithCallStack(G_456,G_26);
TMP_1612=lisp.callFunctionWithCallStack(G_64,TMP_1611,L_CLASS__1147);
TMP_1613=lisp.callFunctionWithCallStack(G_64,G_612,L_SLOT_NAME__1149);
TMP_1614=lisp.callFunctionWithCallStack(G_64,G_298,G_1598,TMP_1613);
TMP_1615=lisp.callFunctionWithCallStack(G_66,G_586,TMP_1614,lisp.makeCons(G_1610, lisp.S_nil));
TMP_1616=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1621;
let L_G_STORE698__1162;
let L_G697__1161;
let L_G696__1160;
let L_G694__1158;
let TMP_1620;
let L_OBJECT__1157;
let TMP_1619;
let L_G693__1156;
let TMP_1618;
let L_NEW_VALUE__1155;
let TMP_1617;
let L_G691__1153;
let L_NEXT_EMFUN__1152;
let L_ARGS__1151;
L_ARGS__1151=arguments[0];
L_NEXT_EMFUN__1152=arguments[1];
{
L_G691__1153=lisp.values1(L_ARGS__1151);
{
TMP_1617=lisp.callFunctionWithCallStack(G_1604,L_G691__1153);
L_NEW_VALUE__1155=lisp.values1(TMP_1617);
TMP_1618=lisp.callFunctionWithCallStack(G_1606,L_G691__1153);
L_G693__1156=lisp.values1(TMP_1618);
TMP_1619=lisp.callFunctionWithCallStack(G_1604,L_G693__1156);
L_OBJECT__1157=lisp.values1(TMP_1619);
TMP_1620=lisp.callFunctionWithCallStack(G_1606,L_G693__1156);
L_G694__1158=lisp.values1(TMP_1620);
{
L_G696__1160=lisp.values1(L_OBJECT__1157);
L_G697__1161=lisp.values1(L_SLOT_NAME__1149);
L_G_STORE698__1162=lisp.values1(L_NEW_VALUE__1155);
TMP_1621=lisp.callFunctionWithCallStack(G_300,L_G_STORE698__1162,L_G696__1160,L_G697__1161);
}
}
}
return TMP_1621;
});
TMP_1622=G_1518.func(L_FN_NAME__1148,G_1155,lisp.makeCons(G_1610, lisp.makeCons(G_1598, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,TMP_1612,G_1523,TMP_1615,G_1525,TMP_1616);
return TMP_1622;
});
CL_COMMON_LISP_ADD_WRITER_METHOD=lisp.values1(F_ADD_WRITER_METHOD_1609);
let F_MAKE_CONDITION_1986;
F_MAKE_CONDITION_1986=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_1987, arguments.length);
}
let TMP_1996;
let TMP_1995;
let TMP_1994;
let L_G863__1368;
let TMP_1993;
let TMP_1992;
let TMP_1991;
let TMP_1990;
let L_G862__1367;
let TMP_1989;
let L_CLASS__1366;
let TMP_1988;
let L_INITARGS__1364;
let L_TYPE__1363;
L_TYPE__1363=arguments[0];
L_INITARGS__1364=lisp.jsArrayToList(arguments, 1);
{
TMP_1988=lisp.callFunctionWithCallStack(G_456,L_TYPE__1363,lisp.S_nil);
L_CLASS__1366=lisp.values1(TMP_1988);
{
TMP_1989=lisp.callFunctionWithCallStack(G_5,L_CLASS__1366);
L_G862__1367=lisp.values1(TMP_1989);
if(lisp.values1(L_G862__1367) !== lisp.S_nil){
TMP_1990=lisp.values1(L_G862__1367);
}else{
{
TMP_1991=lisp.callFunctionWithCallStack(G_456,G_1831);
TMP_1992=G_1254.func(L_CLASS__1366,TMP_1991);
TMP_1993=lisp.callFunctionWithCallStack(G_1285,TMP_1992);
L_G863__1368=lisp.values1(TMP_1993);
if(lisp.values1(L_G863__1368) !== lisp.S_nil){
TMP_1994=lisp.values1(L_G863__1368);
}else{
TMP_1994=lisp.values1(lisp.S_nil);
}
}
TMP_1990=lisp.values1(lisp.values1(TMP_1994));
}
}
if(lisp.values1(lisp.values1(TMP_1990)) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_48,L_TYPE__1363,G_1834);
}else{
}
}
TMP_1995=lisp.CL_symbolFunction(G_1781);
TMP_1996=lisp.callFunctionWithCallStack(G_22,TMP_1995,L_TYPE__1363,L_INITARGS__1364);
return TMP_1996;
});
CL_COMMON_LISP_MAKE_CONDITION=lisp.values1(F_MAKE_CONDITION_1986);
// initialize symbols
G_3 = lisp.intern('LIST-REMOVE-DUPLICATES', 'COMMON-LISP');
G_5 = lisp.intern('NULL', 'COMMON-LISP');
G_7 = lisp.intern('CAR', 'COMMON-LISP');
G_9 = lisp.intern('CDR', 'COMMON-LISP');
G_11 = lisp.intern('MEMBER', 'COMMON-LISP');
G_16 = lisp.intern('MAPPEND', 'COMMON-LISP');
G_17 = lisp.intern('APPEND', 'COMMON-LISP');
G_19 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_22 = lisp.intern('APPLY', 'COMMON-LISP');
G_24 = lisp.intern('+STANDARD-CLASS+', 'COMMON-LISP');
G_25 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_26 = lisp.intern('T', 'COMMON-LISP');
G_28 = lisp.intern('COPY-STANDARD-INSTANCE', 'COMMON-LISP');
G_30 = lisp.intern('COPY-STRUCTURE', 'COMMON-LISP');
G_32 = lisp.intern('STANDARD-INSTANCE-P', 'COMMON-LISP');
G_33 = lisp.intern('STANDARD-INSTANCE', 'COMMON-LISP');
G_35 = lisp.intern('TYPEP', 'COMMON-LISP');
G_37 = lisp.intern('MAKE-STANDARD-INSTANCE', 'COMMON-LISP');
G_38 = lisp.intern('CLASS', 'KEYWORD');
G_40 = lisp.intern('SLOTS', 'KEYWORD');
G_45 = lisp.intern('STANDARD-INSTANCE-CLASS', 'COMMON-LISP');
G_47 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_48 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_50 = lisp.intern('(SETF STANDARD-INSTANCE-CLASS)', 'COMMON-LISP');
G_54 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_58 = lisp.intern('GENSYM', 'COMMON-LISP');
G_60 = lisp.intern('%MAPCAR', 'SYSTEM');
G_61 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_64 = lisp.intern('LIST', 'COMMON-LISP');
G_66 = lisp.intern('LIST*', 'COMMON-LISP');
G_69 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_72 = lisp.intern('STANDARD-INSTANCE-SLOTS', 'COMMON-LISP');
G_75 = lisp.intern('(SETF STANDARD-INSTANCE-SLOTS)', 'COMMON-LISP');
G_91 = lisp.intern('PRINT-STANDARD-INSTANCE', 'COMMON-LISP');
G_92 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_94 = lisp.intern('COPY-SLOT-DEFINITION', 'COMMON-LISP');
G_97 = lisp.intern('SLOT-DEFINITION-P', 'COMMON-LISP');
G_98 = lisp.intern('SLOT-DEFINITION', 'COMMON-LISP');
G_101 = lisp.intern('MAKE-SLOT-DEFINITION', 'COMMON-LISP');
G_102 = lisp.intern('NAME', 'KEYWORD');
G_104 = lisp.intern('INITARGS', 'KEYWORD');
G_106 = lisp.intern('INITFORM', 'KEYWORD');
G_108 = lisp.intern('INITFUNCTION', 'KEYWORD');
G_110 = lisp.intern('READERS', 'KEYWORD');
G_112 = lisp.intern('WRITERS', 'KEYWORD');
G_114 = lisp.intern('ALLOCATION', 'KEYWORD');
G_119 = lisp.intern('SLOT-DEFINITION-NAME', 'COMMON-LISP');
G_122 = lisp.intern('(SETF SLOT-DEFINITION-NAME)', 'COMMON-LISP');
G_137 = lisp.intern('SLOT-DEFINITION-INITARGS', 'COMMON-LISP');
G_140 = lisp.intern('(SETF SLOT-DEFINITION-INITARGS)', 'COMMON-LISP');
G_155 = lisp.intern('SLOT-DEFINITION-INITFORM', 'COMMON-LISP');
G_158 = lisp.intern('(SETF SLOT-DEFINITION-INITFORM)', 'COMMON-LISP');
G_173 = lisp.intern('SLOT-DEFINITION-INITFUNCTION', 'COMMON-LISP');
G_176 = lisp.intern('(SETF SLOT-DEFINITION-INITFUNCTION)', 'COMMON-LISP');
G_191 = lisp.intern('SLOT-DEFINITION-READERS', 'COMMON-LISP');
G_194 = lisp.intern('(SETF SLOT-DEFINITION-READERS)', 'COMMON-LISP');
G_209 = lisp.intern('SLOT-DEFINITION-WRITERS', 'COMMON-LISP');
G_212 = lisp.intern('(SETF SLOT-DEFINITION-WRITERS)', 'COMMON-LISP');
G_227 = lisp.intern('SLOT-DEFINITION-ALLOCATION', 'COMMON-LISP');
G_230 = lisp.intern('(SETF SLOT-DEFINITION-ALLOCATION)', 'COMMON-LISP');
G_245 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_246 = lisp.intern('PRIN1', 'COMMON-LISP');
G_257 = lisp.intern('PRINT-OBJECT', 'COMMON-LISP');
G_259 = lisp.intern('STD-SLOT-BOUNDP', 'COMMON-LISP');
G_262 = lisp.intern('ASSOC', 'COMMON-LISP');
G_265 = lisp.intern('SLOT-BOUNDP', 'COMMON-LISP');
G_267 = lisp.intern('CLASS-OF', 'COMMON-LISP');
G_273 = lisp.intern('ERROR', 'COMMON-LISP');
G_275 = lisp.intern('%SLOT-VALUE', 'COMMON-LISP');
G_279 = lisp.intern('(SETF %SLOT-VALUE)', 'COMMON-LISP');
G_283 = lisp.intern('(SETF CDR)', 'COMMON-LISP');
G_298 = lisp.intern('SLOT-VALUE', 'COMMON-LISP');
G_300 = lisp.intern('(SETF SLOT-VALUE)', 'COMMON-LISP');
G_314 = lisp.intern('CLASS-NAME', 'COMMON-LISP');
G_315 = lisp.intern('NAME', 'COMMON-LISP');
G_317 = lisp.intern('(SETF CLASS-NAME)', 'COMMON-LISP');
G_331 = lisp.intern('CLASS-PRECEDENCE-LIST', 'COMMON-LISP');
G_332 = lisp.intern('PRECEDENCE-LIST', 'COMMON-LISP');
G_334 = lisp.intern('(SETF CLASS-PRECEDENCE-LIST)', 'COMMON-LISP');
G_348 = lisp.intern('CLASS-DIRECT-SUPERCLASSES', 'COMMON-LISP');
G_349 = lisp.intern('DIRECT-SUPERCLASSES', 'COMMON-LISP');
G_351 = lisp.intern('(SETF CLASS-DIRECT-SUPERCLASSES)', 'COMMON-LISP');
G_365 = lisp.intern('CLASS-DIRECT-SLOTS', 'COMMON-LISP');
G_366 = lisp.intern('DIRECT-SLOTS', 'COMMON-LISP');
G_368 = lisp.intern('(SETF CLASS-DIRECT-SLOTS)', 'COMMON-LISP');
G_382 = lisp.intern('CLASS-DIRECT-SUBCLASSES', 'COMMON-LISP');
G_383 = lisp.intern('DIRECT-SUBCLASSES', 'COMMON-LISP');
G_385 = lisp.intern('(SETF CLASS-DIRECT-SUBCLASSES)', 'COMMON-LISP');
G_399 = lisp.intern('CLASS-DIRECT-DEFAULT-INITARGS', 'COMMON-LISP');
G_400 = lisp.intern('DIRECT-DEFAULT-INITARGS', 'COMMON-LISP');
G_402 = lisp.intern('(SETF CLASS-DIRECT-DEFAULT-INITARGS)', 'COMMON-LISP');
G_416 = lisp.intern('CLASS-SLOTS', 'COMMON-LISP');
G_417 = lisp.intern('SLOTS', 'COMMON-LISP');
G_419 = lisp.intern('(SETF CLASS-SLOTS)', 'COMMON-LISP');
G_433 = lisp.intern('CLASS-DEFAULT-INITARGS', 'COMMON-LISP');
G_434 = lisp.intern('DEFAULT-INITARGS', 'COMMON-LISP');
G_436 = lisp.intern('(SETF CLASS-DEFAULT-INITARGS)', 'COMMON-LISP');
G_456 = lisp.intern('FIND-CLASS', 'COMMON-LISP');
G_459 = lisp.intern('SYMBOL', 'COMMON-LISP');
G_463 = lisp.intern('INTEGER', 'COMMON-LISP');
G_466 = lisp.intern('FLOATP', 'COMMON-LISP');
G_468 = lisp.intern('FLOAT', 'COMMON-LISP');
G_472 = lisp.intern('NUMBER', 'COMMON-LISP');
G_476 = lisp.intern('CONS', 'COMMON-LISP');
G_480 = lisp.intern('CHARACTER', 'COMMON-LISP');
G_483 = lisp.intern('HASH-TABLE-P', 'COMMON-LISP');
G_485 = lisp.intern('HASH-TABLE', 'COMMON-LISP');
G_489 = lisp.intern('PACKAGE', 'COMMON-LISP');
G_492 = lisp.intern('READTABLEP', 'COMMON-LISP');
G_494 = lisp.intern('READTABLE', 'COMMON-LISP');
G_497 = lisp.intern('STREAMP', 'COMMON-LISP');
G_499 = lisp.intern('STREAM', 'COMMON-LISP');
G_502 = lisp.intern('VECTORP', 'COMMON-LISP');
G_504 = lisp.intern('VECTOR', 'COMMON-LISP');
G_507 = lisp.intern('ARRAYP', 'COMMON-LISP');
G_509 = lisp.intern('ARRAY', 'COMMON-LISP');
G_512 = lisp.intern('STRINGP', 'COMMON-LISP');
G_514 = lisp.intern('STRING', 'COMMON-LISP');
G_518 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_522 = lisp.intern('MAKE-HASH-TABLE', 'COMMON-LISP');
G_525 = lisp.intern('GETHASH', 'COMMON-LISP');
G_528 = lisp.intern('(SETF FIND-CLASS)', 'COMMON-LISP');
G_531 = lisp.intern('(SETF GETHASH)', 'COMMON-LISP');
G_543 = lisp.intern('CANONICALIZE-DIRECT-SLOT', 'COMMON-LISP');
G_554 = lisp.intern('CADR', 'COMMON-LISP');
G_556 = lisp.intern('EQL', 'COMMON-LISP');
G_557 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_561 = lisp.intern('INITARG', 'KEYWORD');
G_564 = lisp.intern('GETF', 'COMMON-LISP');
G_567 = lisp.intern('NCONC', 'COMMON-LISP');
G_569 = lisp.intern('%PUTF', 'COMMON-LISP');
G_570 = lisp.intern('READER', 'KEYWORD');
G_571 = lisp.intern('WRITER', 'KEYWORD');
G_572 = lisp.intern('ACCESSOR', 'KEYWORD');
G_586 = lisp.intern('SETF', 'COMMON-LISP');
G_591 = lisp.intern('DOCUMENTATION', 'KEYWORD');
G_599 = lisp.intern('CDDR', 'COMMON-LISP');
G_612 = lisp.intern('QUOTE', 'COMMON-LISP');
G_615 = lisp.intern('(SETF CADR)', 'COMMON-LISP');
G_618 = lisp.intern('(SETF CAR)', 'COMMON-LISP');
G_622 = lisp.intern('CANONICALIZE-DIRECT-SLOT-SPECS', 'COMMON-LISP');
G_627 = lisp.intern('CANONICALIZE-DEFCLASS-OPTIONS', 'COMMON-LISP');
G_631 = lisp.intern('DEFAULT-INITARGS', 'KEYWORD');
G_633 = lisp.intern('DIRECT-DEFAULT-INITARGS', 'KEYWORD');
G_645 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_647 = lisp.intern('METACLASS', 'KEYWORD');
G_655 = lisp.intern('MAPCAN', 'COMMON-LISP');
G_657 = lisp.intern('CANONICALIZE-CLASS', 'COMMON-LISP');
G_662 = lisp.intern('CHECK-DUPLICATE-DIRECT-SLOTS', 'COMMON-LISP');
G_669 = lisp.intern('KEY', 'KEYWORD');
G_674 = lisp.intern('CHECK-DUPLICATE-DIRECT-DEFAULT-INITARGS', 'COMMON-LISP');
G_677 = lisp.intern('CAAR', 'COMMON-LISP');
G_683 = lisp.intern('DEFCLASS', 'COMMON-LISP');
G_685 = lisp.intern('ENSURE-CLASS', 'COMMON-LISP');
G_686 = lisp.intern('ENSURE-CLASS-USING-CLASS', 'COMMON-LISP');
G_692 = lisp.intern('DIRECT-SLOTS', 'KEYWORD');
G_694 = lisp.intern('DIRECT-SUPERCLASSES', 'KEYWORD');
G_697 = lisp.intern('STANDARD-CLASS', 'COMMON-LISP');
G_701 = lisp.intern('STD-AFTER-INITIALIZATION-FOR-CLASSES', 'COMMON-LISP');
G_705 = lisp.intern('MAKE-INSTANCE-STANDARD-CLASS', 'COMMON-LISP');
G_720 = lisp.intern('STANDARD-OBJECT', 'COMMON-LISP');
G_725 = lisp.intern('ENDP', 'COMMON-LISP');
G_731 = lisp.intern('MAKE-DIRECT-SLOT-DEFINITION', 'COMMON-LISP');
G_743 = lisp.intern('ADD-READER-METHOD', 'COMMON-LISP');
G_749 = lisp.intern('ADD-WRITER-METHOD', 'COMMON-LISP');
G_754 = lisp.intern('STD-FINALIZE-INHERITANCE', 'COMMON-LISP');
G_764 = lisp.intern('INSTANCE', 'KEYWORD');
G_768 = lisp.intern('MAKE-EFFECTIVE-SLOT-DEFINITION', 'COMMON-LISP');
G_781 = lisp.intern('STD-COMPUTE-CLASS-PRECEDENCE-LIST', 'COMMON-LISP');
G_787 = lisp.intern('STD-COMPUTE-SLOTS', 'COMMON-LISP');
G_793 = lisp.intern('STD-COMPUTE-DEFAULT-INITARGS', 'COMMON-LISP');
G_798 = lisp.intern('COLLECT-SUPERCLASSES*', 'COMMON-LISP');
G_799 = lisp.intern('LOCAL-PRECEDENCE-ORDERING', 'COMMON-LISP');
G_803 = lisp.intern('STD-TIE-BREAKER-RULE', 'COMMON-LISP');
G_806 = lisp.intern('TOPOLOGICAL-SORT', 'COMMON-LISP');
G_809 = lisp.intern('REVERSE', 'COMMON-LISP');
G_828 = lisp.intern('REMOVE-IF', 'COMMON-LISP');
G_839 = lisp.intern('DELETE', 'COMMON-LISP');
G_840 = lisp.intern('TEST', 'KEYWORD');
G_854 = lisp.intern('UNION', 'COMMON-LISP');
G_876 = lisp.intern('REMOVE-IF-NOT', 'COMMON-LISP');
G_878 = lisp.intern('STD-COMPUTE-EFFECTIVE-SLOT-DEFINITION', 'COMMON-LISP');
G_885 = lisp.intern('FIND-IF', 'COMMON-LISP');
G_910 = lisp.intern('+STANDARD-GENERIC-FUNCTION+', 'COMMON-LISP');
G_912 = lisp.intern('GENERIC-FUNCTION-NAME', 'COMMON-LISP');
G_914 = lisp.intern('(SETF GENERIC-FUNCTION-NAME)', 'COMMON-LISP');
G_928 = lisp.intern('GENERIC-FUNCTION-METHODS', 'COMMON-LISP');
G_929 = lisp.intern('METHODS', 'COMMON-LISP');
G_931 = lisp.intern('(SETF GENERIC-FUNCTION-METHODS)', 'COMMON-LISP');
G_945 = lisp.intern('GENERIC-FUNCTION-LAMBDA-LIST', 'COMMON-LISP');
G_946 = lisp.intern('LAMBDA-LIST', 'COMMON-LISP');
G_948 = lisp.intern('(SETF GENERIC-FUNCTION-LAMBDA-LIST)', 'COMMON-LISP');
G_962 = lisp.intern('GENERIC-FUNCTION-METHOD-CLASS', 'COMMON-LISP');
G_963 = lisp.intern('METHOD-CLASS', 'COMMON-LISP');
G_965 = lisp.intern('(SETF GENERIC-FUNCTION-METHOD-CLASS)', 'COMMON-LISP');
G_979 = lisp.intern('CLASSES-TO-EMF-TABLE', 'COMMON-LISP');
G_981 = lisp.intern('(SETF CLASSES-TO-EMF-TABLE)', 'COMMON-LISP');
G_995 = lisp.intern('GENERIC-FUNCTION-MIN-ARGC', 'COMMON-LISP');
G_996 = lisp.intern('MIN-ARGC', 'COMMON-LISP');
G_998 = lisp.intern('(SETF GENERIC-FUNCTION-MIN-ARGC)', 'COMMON-LISP');
G_1012 = lisp.intern('SET-FUNCALLABLE-INSTANCE-FUNCTION', 'COMMON-LISP');
G_1013 = lisp.intern('FUNCALLABLE-INSTANCE', 'COMMON-LISP');
G_1015 = lisp.intern('+STANDARD-METHOD+', 'COMMON-LISP');
G_1017 = lisp.intern('METHOD-FUNCTION', 'COMMON-LISP');
G_1019 = lisp.intern('(SETF METHOD-FUNCTION)', 'COMMON-LISP');
G_1033 = lisp.intern('METHOD-GENERIC-FUNCTION', 'COMMON-LISP');
G_1034 = lisp.intern('GENERIC-FUNCTION', 'COMMON-LISP');
G_1036 = lisp.intern('(SETF METHOD-GENERIC-FUNCTION)', 'COMMON-LISP');
G_1050 = lisp.intern('METHOD-LAMBDA-LIST', 'COMMON-LISP');
G_1052 = lisp.intern('(SETF METHOD-LAMBDA-LIST)', 'COMMON-LISP');
G_1066 = lisp.intern('METHOD-SPECIALIZERS', 'COMMON-LISP');
G_1067 = lisp.intern('SPECIALIZERS', 'COMMON-LISP');
G_1069 = lisp.intern('(SETF METHOD-SPECIALIZERS)', 'COMMON-LISP');
G_1083 = lisp.intern('METHOD-QUALIFIERS', 'COMMON-LISP');
G_1084 = lisp.intern('QUALIFIERS', 'COMMON-LISP');
G_1086 = lisp.intern('(SETF METHOD-QUALIFIERS)', 'COMMON-LISP');
G_1099 = lisp.intern('DEFGENERIC', 'COMMON-LISP');
G_1101 = lisp.intern('CANONICALIZE-DEFGENERIC-OPTION', 'COMMON-LISP');
G_1103 = lisp.intern('METHOD-FUNCTION-CLASS', 'KEYWORD');
G_1106 = lisp.intern('GENERIC-FUNCTION-CLASS', 'KEYWORD');
G_1111 = lisp.intern('METHOD-CLASS', 'KEYWORD');
G_1124 = lisp.intern('CANONICALIZE-DEFGENERIC-OPTIONS', 'COMMON-LISP');
G_1129 = lisp.intern('FIND-GENERIC-FUNCTION', 'COMMON-LISP');
G_1136 = lisp.intern('(SETF FIND-GENERIC-FUNCTION)', 'COMMON-LISP');
G_1154 = lisp.intern('ENSURE-GENERIC-FUNCTION', 'COMMON-LISP');
G_1155 = lisp.intern('LAMBDA-LIST', 'KEYWORD');
G_1159 = lisp.intern('ENSURE-GENERIC-FUNCTION-USING-CLASS', 'COMMON-LISP');
G_1170 = lisp.intern('MAKE-INSTANCE-STANDARD-GENERIC-FUNCTION', 'COMMON-LISP');
G_1180 = lisp.intern('EQUAL', 'COMMON-LISP');
G_1183 = lisp.intern('ANALYZE-LAMBDA-LIST', 'COMMON-LISP');
G_1184 = lisp.intern('REQUIRED-ARGS', 'KEYWORD');
G_1187 = lisp.intern('LENGTH', 'COMMON-LISP');
G_1188 = lisp.intern('FINALIZE-GENERIC-FUNCTION', 'COMMON-LISP');
G_1194 = lisp.intern('STD-COMPUTE-DISCRIMINATING-FUNCTION', 'COMMON-LISP');
G_1197 = lisp.intern('(SETF FDEFINITION)', 'COMMON-LISP');
G_1200 = lisp.intern('CLRHASH', 'COMMON-LISP');
G_1202 = lisp.intern('REQUIRED-CLASSES', 'COMMON-LISP');
G_1206 = lisp.intern('<', 'COMMON-LISP');
G_1208 = lisp.intern('>=', 'COMMON-LISP');
G_1214 = lisp.intern('+', 'COMMON-LISP');
G_1224 = lisp.intern('SLOW-METHOD-LOOKUP', 'COMMON-LISP');
G_1227 = lisp.intern('%COMPUTE-APPLICABLE-METHODS', 'COMMON-LISP');
G_1232 = lisp.intern('STD-COMPUTE-EFFECTIVE-METHOD-FUNCTION', 'COMMON-LISP');
G_1237 = lisp.intern('COMPUTE-APPLICABLE-METHODS', 'COMMON-LISP');
G_1247 = lisp.intern('EQL-SPECIALIZER', 'COMMON-LISP');
G_1251 = lisp.intern('EQL-SPECIALIZER-OBJECT', 'COMMON-LISP');
G_1254 = lisp.intern('SUBCLASSP', 'COMMON-LISP');
G_1265 = lisp.intern('STD-METHOD-MORE-SPECIFIC-P', 'COMMON-LISP');
G_1268 = lisp.intern('STABLE-SORT', 'COMMON-LISP');
G_1276 = lisp.intern('SUB-SPECIALIZER-P', 'COMMON-LISP');
G_1279 = lisp.intern('MAPC', 'COMMON-LISP');
G_1285 = lisp.intern('NOT', 'COMMON-LISP');
G_1294 = lisp.intern('PRIMARY-METHOD-P', 'COMMON-LISP');
G_1298 = lisp.intern('BEFORE-METHOD-P', 'COMMON-LISP');
G_1299 = lisp.intern('BEFORE', 'KEYWORD');
G_1303 = lisp.intern('AFTER-METHOD-P', 'COMMON-LISP');
G_1304 = lisp.intern('AFTER', 'KEYWORD');
G_1308 = lisp.intern('AROUND-METHOD-P', 'COMMON-LISP');
G_1309 = lisp.intern('AROUND', 'KEYWORD');
G_1323 = lisp.intern('REMOVE', 'COMMON-LISP');
G_1331 = lisp.intern('COMPUTE-PRIMARY-EMFUN', 'COMMON-LISP');
G_1344 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_1353 = lisp.intern('VALUES', 'COMMON-LISP');
G_1368 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_1369 = lisp.intern('KEYWORD', 'COMMON-LISP');
G_1371 = lisp.intern('FIND-PACKAGE', 'COMMON-LISP');
G_1373 = lisp.intern('INTERN', 'COMMON-LISP');
G_1376 = lisp.intern('LISTP', 'COMMON-LISP');
G_1385 = lisp.intern('PARSING-REQUIRED', 'KEYWORD');
G_1389 = lisp.intern('&ALLOW-OTHER-KEYS', 'COMMON-LISP');
G_1390 = lisp.intern('&AUX', 'COMMON-LISP');
G_1391 = lisp.intern('&BODY', 'COMMON-LISP');
G_1392 = lisp.intern('&ENVIRONMENT', 'COMMON-LISP');
G_1393 = lisp.intern('&KEY', 'COMMON-LISP');
G_1394 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_1395 = lisp.intern('&REST', 'COMMON-LISP');
G_1396 = lisp.intern('&WHOLE', 'COMMON-LISP');
G_1399 = lisp.intern('PARSING-OPTIONAL', 'KEYWORD');
G_1401 = lisp.intern('PARSING-REST', 'KEYWORD');
G_1403 = lisp.intern('PARSING-KEY', 'KEYWORD');
G_1406 = lisp.intern('PARSING-AUX', 'KEYWORD');
G_1425 = lisp.intern('REQUIRED-NAMES', 'KEYWORD');
G_1428 = lisp.intern('SPECIALIZERS', 'KEYWORD');
G_1430 = lisp.intern('REST-VAR', 'KEYWORD');
G_1431 = lisp.intern('KEYWORDS', 'KEYWORD');
G_1433 = lisp.intern('KEY-ARGS', 'KEYWORD');
G_1435 = lisp.intern('AUXILIARY-ARGS', 'KEYWORD');
G_1437 = lisp.intern('OPTIONAL-ARGS', 'KEYWORD');
G_1439 = lisp.intern('ALLOW-OTHER-KEYS', 'KEYWORD');
G_1442 = lisp.intern('EXTRACT-LAMBDA-LIST', 'COMMON-LISP');
G_1462 = lisp.intern('EXTRACT-SPECIALIZERS', 'COMMON-LISP');
G_1465 = lisp.intern('PARSE-DEFMETHOD', 'COMMON-LISP');
G_1471 = lisp.intern('ATOM', 'COMMON-LISP');
G_1485 = lisp.intern('DECLARE', 'COMMON-LISP');
G_1488 = lisp.intern('BLOCK', 'COMMON-LISP');
G_1498 = lisp.intern('PARSE-BODY', 'COMPILER');
G_1501 = lisp.intern('KLUDGE-ARGLIST', 'COMMON-LISP');
G_1515 = lisp.intern('%MAKE-METHOD-LAMBDA', 'COMMON-LISP');
G_1516 = lisp.intern('DEFMETHOD', 'COMMON-LISP');
G_1518 = lisp.intern('ENSURE-METHOD', 'COMMON-LISP');
G_1520 = lisp.intern('QUALIFIERS', 'KEYWORD');
G_1523 = lisp.intern('BODY', 'KEYWORD');
G_1525 = lisp.intern('FUNCTION', 'KEYWORD');
G_1532 = lisp.intern('MAKE-INSTANCE-STANDARD-METHOD', 'COMMON-LISP');
G_1536 = lisp.intern('ADD-METHOD', 'COMMON-LISP');
G_1538 = lisp.intern('CANONICALIZE-METHOD-SPECIALIZERS', 'COMMON-LISP');
G_1539 = lisp.intern('CANONICALIZE-METHOD-SPECIALIZER', 'COMMON-LISP');
G_1561 = lisp.intern('INTERN-EQL-SPECIALIZER', 'COMMON-LISP');
G_1576 = lisp.intern('FIND-METHOD', 'COMMON-LISP');
G_1577 = lisp.intern('REMOVE-METHOD', 'COMMON-LISP');
G_1598 = lisp.intern('OBJECT', 'COMMON-LISP');
G_1604 = lisp.intern('FIRST', 'COMMON-LISP');
G_1606 = lisp.intern('REST', 'COMMON-LISP');
G_1610 = lisp.intern('NEW-VALUE', 'COMMON-LISP');
G_1637 = lisp.intern('EFFECTIVE-SLOTS', 'COMMON-LISP');
G_1641 = lisp.intern('DIRECT-METHODS', 'COMMON-LISP');
G_1645 = lisp.intern('STANDARD-GENERIC-FUNCTION', 'COMMON-LISP');
G_1651 = lisp.intern('EMF-TABLE', 'COMMON-LISP');
G_1656 = lisp.intern('STANDARD-METHOD', 'COMMON-LISP');
G_1667 = lisp.intern('SEQUENCE', 'COMMON-LISP');
G_1672 = lisp.intern('BIT-VECTOR', 'COMMON-LISP');
G_1679 = lisp.intern('REAL', 'COMMON-LISP');
G_1682 = lisp.intern('RATIONAL', 'COMMON-LISP');
G_1685 = lisp.intern('COMPLEX', 'COMMON-LISP');
G_1706 = lisp.intern('PATHNAME', 'COMMON-LISP');
G_1709 = lisp.intern('RANDOM-STATE', 'COMMON-LISP');
G_1712 = lisp.intern('RATIO', 'COMMON-LISP');
G_1721 = lisp.intern('ALLOCATE-INSTANCE', 'COMMON-LISP');
G_1722 = lisp.intern('CLASS', 'COMMON-LISP');
G_1723 = lisp.intern('INITARGS', 'COMMON-LISP');
G_1724 = lisp.intern('IGNORE', 'COMMON-LISP');
G_1729 = lisp.intern('SHARED-INITIALIZE', 'COMMON-LISP');
G_1730 = lisp.intern('INSTANCE', 'COMMON-LISP');
G_1731 = lisp.intern('SLOT-NAMES', 'COMMON-LISP');
G_1732 = lisp.intern('DOLIST', 'COMMON-LISP');
G_1733 = lisp.intern('SLOT', 'COMMON-LISP');
G_1734 = lisp.intern('LET', 'COMMON-LISP');
G_1735 = lisp.intern('SLOT-NAME', 'COMMON-LISP');
G_1736 = lisp.intern('MULTIPLE-VALUE-BIND', 'COMMON-LISP');
G_1737 = lisp.intern('KEY', 'COMMON-LISP');
G_1738 = lisp.intern('VALUE', 'COMMON-LISP');
G_1739 = lisp.intern('TAIL', 'COMMON-LISP');
G_1740 = lisp.intern('GET-PROPERTIES', 'COMMON-LISP');
G_1741 = lisp.intern('IF', 'COMMON-LISP');
G_1742 = lisp.intern('WHEN', 'COMMON-LISP');
G_1743 = lisp.intern('AND', 'COMMON-LISP');
G_1744 = lisp.intern('OR', 'COMMON-LISP');
G_1745 = lisp.intern('EQ', 'COMMON-LISP');
G_1746 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_1775 = lisp.intern('INITIALIZE-INSTANCE', 'COMMON-LISP');
G_1781 = lisp.intern('MAKE-INSTANCE', 'COMMON-LISP');
G_1788 = lisp.intern('*STANDARD-OBJECT-COUNTER*', 'COMMON-LISP');
G_1790 = lisp.intern('FORMAT', 'COMMON-LISP');
G_1791 = lisp.intern('INCF', 'COMMON-LISP');
G_1800 = lisp.intern('PRINT-UNREADABLE-OBJECT', 'COMMON-LISP');
G_1830 = lisp.intern('DEFINE-CONDITION', 'COMMON-LISP');
G_1831 = lisp.intern('BASE-CONDITION', 'COMMON-LISP');
G_1834 = lisp.intern('CONDITION', 'COMMON-LISP');
G_1837 = lisp.intern('WARNING', 'COMMON-LISP');
G_1840 = lisp.intern('STYLE-WARNING', 'COMMON-LISP');
G_1843 = lisp.intern('SERIOUS-CONDITION', 'COMMON-LISP');
G_1848 = lisp.intern('CELL-ERROR', 'COMMON-LISP');
G_1850 = lisp.intern('CELL-ERROR-NAME', 'COMMON-LISP');
G_1853 = lisp.intern('PARSE-ERROR', 'COMMON-LISP');
G_1856 = lisp.intern('STORAGE-CONDITION', 'COMMON-LISP');
G_1859 = lisp.intern('SIMPLE-CONDITION', 'COMMON-LISP');
G_1861 = lisp.intern('SIMPLE-CONDITION-FORMAT-CONTROL', 'COMMON-LISP');
G_1862 = lisp.intern('FORMAT-CONTROL', 'KEYWORD');
G_1863 = lisp.intern('FORMAT-CONTROL', 'COMMON-LISP');
G_1865 = lisp.intern('SIMPLE-CONDITION-FORMAT-ARGUMENTS', 'COMMON-LISP');
G_1866 = lisp.intern('FORMAT-ARGUMENTS', 'KEYWORD');
G_1867 = lisp.intern('FORMAT-ARGUMENTS', 'COMMON-LISP');
G_1870 = lisp.intern('REPORT', 'KEYWORD');
G_1871 = lisp.intern('C', 'COMMON-LISP');
G_1872 = lisp.makeSymbol("G820");G_1873 = lisp.makeSymbol("G821");G_1874 = lisp.intern('*PRINT-ESCAPE*', 'COMMON-LISP');
G_1875 = lisp.intern('CALL-NEXT-METHOD', 'COMMON-LISP');
G_1894 = lisp.intern('SIMPLE-ERROR', 'COMMON-LISP');
G_1897 = lisp.intern('SIMPLE-WARNING', 'COMMON-LISP');
G_1901 = lisp.intern('TYPE-ERROR-DATUM', 'COMMON-LISP');
G_1902 = lisp.intern('DATUM', 'KEYWORD');
G_1903 = lisp.intern('DATUM', 'COMMON-LISP');
G_1905 = lisp.intern('TYPE-ERROR-EXPECTED-TYPE', 'COMMON-LISP');
G_1906 = lisp.intern('EXPECTED-TYPE', 'KEYWORD');
G_1907 = lisp.intern('EXPECTED-TYPE', 'COMMON-LISP');
G_1910 = lisp.makeSymbol("G831");G_1911 = lisp.makeSymbol("G832");G_1929 = lisp.intern('CONTROL-ERROR', 'COMMON-LISP');
G_1932 = lisp.intern('PROGRAM-ERROR', 'COMMON-LISP');
G_1935 = lisp.intern('UNDEFINED-FUNCTION', 'COMMON-LISP');
G_1938 = lisp.makeSymbol("G842");G_1939 = lisp.makeSymbol("G843");G_1956 = lisp.intern('UNBOUND-VARIABLE', 'COMMON-LISP');
G_1959 = lisp.makeSymbol("G849");G_1960 = lisp.makeSymbol("G850");G_1977 = lisp.intern('STREAM-ERROR', 'COMMON-LISP');
G_1980 = lisp.intern('READER-ERROR', 'COMMON-LISP');
G_1983 = lisp.intern('SIMPLE-READER-ERROR', 'COMMON-LISP');
G_1987 = lisp.intern('MAKE-CONDITION', 'COMMON-LISP');
G_1998 = lisp.intern('OBJECT', 'KEYWORD');
G_2008 = lisp.intern('MACRO', 'COMPILER');
G_2011 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_2013 = lisp.intern('<=', 'COMMON-LISP');
G_2015 = lisp.intern('DIRECT-SLOT-SPECS', 'COMMON-LISP');
G_2016 = lisp.intern('OPTIONS', 'COMMON-LISP');
G_2035 = lisp.intern('FUNCTION-NAME', 'COMMON-LISP');
G_2049 = lisp.intern('BODY', 'COMMON-LISP');
G_2059 = lisp.intern('FLET', 'COMMON-LISP');
G_2066 = lisp.intern('NEXT-METHOD-P', 'COMMON-LISP');
G_2079 = lisp.intern('ARGS', 'COMMON-LISP');
G_2097 = lisp.intern('PARENT-TYPES', 'COMMON-LISP');
G_2098 = lisp.intern('SLOT-SPECS', 'COMMON-LISP');
G_2108 = lisp.intern('SECOND', 'COMMON-LISP');
G_2111 = lisp.intern('PROGN', 'COMMON-LISP');
G_2131 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_LIST_REMOVE_DUPLICATES.lisp_name = 'LIST-REMOVE-DUPLICATES'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_LIST_REMOVE_DUPLICATES);
CL_COMMON_LISP_MAPPEND.lisp_name = 'MAPPEND'
lisp.setSymbolFunction(G_16, CL_COMMON_LISP_MAPPEND);
lisp.CL_put(G_24,G_25,G_26);
CL_COMMON_LISP_COPY_STANDARD_INSTANCE.lisp_name = 'COPY-STANDARD-INSTANCE'
lisp.setSymbolFunction(G_28, CL_COMMON_LISP_COPY_STANDARD_INSTANCE);
CL_COMMON_LISP_STANDARD_INSTANCE_P.lisp_name = 'STANDARD-INSTANCE-P'
lisp.setSymbolFunction(G_32, CL_COMMON_LISP_STANDARD_INSTANCE_P);
CL_COMMON_LISP_MAKE_STANDARD_INSTANCE.lisp_name = 'MAKE-STANDARD-INSTANCE'
lisp.setSymbolFunction(G_37, CL_COMMON_LISP_MAKE_STANDARD_INSTANCE);
CL_COMMON_LISP_STANDARD_INSTANCE_CLASS.lisp_name = 'STANDARD-INSTANCE-CLASS'
lisp.setSymbolFunction(G_45, CL_COMMON_LISP_STANDARD_INSTANCE_CLASS);
TMP_51=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_53;
let TMP_52;
let L_STRUCTURE__21;
let L_VALUE__20;
L_VALUE__20=arguments[0];
L_STRUCTURE__21=arguments[1];
TMP_52=lisp.CL_structurep(L_STRUCTURE__21);
if(lisp.values1(TMP_52) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__21,G_47);
}
TMP_53=lisp.CL_structureSet(L_STRUCTURE__21,0,L_VALUE__20);
return TMP_53;
});
lisp.CL_setSymbolFunction(G_50,TMP_51);
TMP_55=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_68;
let TMP_67;
let TMP_65;
let TMP_63;
let L_STORE12__29;
let TMP_62;
let L_GENSYMS10__28;
let TMP_59;
let TMP_56;
let L_ARGS11__26;
let L_G16__24;
let L_G15__23;
L_G15__23=arguments[0];
{
L_G16__24=lisp.values1(L_G15__23);
{
L_ARGS11__26=lisp.values1(L_G16__24);
{
TMP_56=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_57;
let L_X__27;
L_X__27=arguments[0];
TMP_57=lisp.callFunctionWithCallStack(G_58);
return TMP_57;
});
TMP_59=lisp.callFunctionWithCallStack(G_60,TMP_56,L_ARGS11__26);
L_GENSYMS10__28=lisp.values1(TMP_59);
TMP_62=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE12__29=lisp.values1(TMP_62);
TMP_63=lisp.callFunctionWithCallStack(G_64,L_STORE12__29);
TMP_65=lisp.callFunctionWithCallStack(G_66,G_50,L_STORE12__29,L_GENSYMS10__28);
TMP_67=lisp.callFunctionWithCallStack(G_66,G_45,L_GENSYMS10__28);
TMP_68=lisp.CL_values(L_GENSYMS10__28,L_ARGS11__26,TMP_63,TMP_65,TMP_67);
}
}
}
return TMP_68;
});
lisp.CL_put(G_45,G_54,TMP_55);
TMP_70=lisp.CL_symbolFunction(G_50);
lisp.CL_put(G_45,G_69,TMP_70);
CL_COMMON_LISP_STANDARD_INSTANCE_SLOTS.lisp_name = 'STANDARD-INSTANCE-SLOTS'
lisp.setSymbolFunction(G_72, CL_COMMON_LISP_STANDARD_INSTANCE_SLOTS);
TMP_76=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_78;
let TMP_77;
let L_STRUCTURE__35;
let L_VALUE__34;
L_VALUE__34=arguments[0];
L_STRUCTURE__35=arguments[1];
TMP_77=lisp.CL_structurep(L_STRUCTURE__35);
if(lisp.values1(TMP_77) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__35,G_47);
}
TMP_78=lisp.CL_structureSet(L_STRUCTURE__35,1,L_VALUE__34);
return TMP_78;
});
lisp.CL_setSymbolFunction(G_75,TMP_76);
TMP_79=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_87;
let TMP_86;
let TMP_85;
let TMP_84;
let L_STORE20__43;
let TMP_83;
let L_GENSYMS18__42;
let TMP_82;
let TMP_80;
let L_ARGS19__40;
let L_G24__38;
let L_G23__37;
L_G23__37=arguments[0];
{
L_G24__38=lisp.values1(L_G23__37);
{
L_ARGS19__40=lisp.values1(L_G24__38);
{
TMP_80=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_81;
let L_X__41;
L_X__41=arguments[0];
TMP_81=lisp.callFunctionWithCallStack(G_58);
return TMP_81;
});
TMP_82=lisp.callFunctionWithCallStack(G_60,TMP_80,L_ARGS19__40);
L_GENSYMS18__42=lisp.values1(TMP_82);
TMP_83=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE20__43=lisp.values1(TMP_83);
TMP_84=lisp.callFunctionWithCallStack(G_64,L_STORE20__43);
TMP_85=lisp.callFunctionWithCallStack(G_66,G_75,L_STORE20__43,L_GENSYMS18__42);
TMP_86=lisp.callFunctionWithCallStack(G_66,G_72,L_GENSYMS18__42);
TMP_87=lisp.CL_values(L_GENSYMS18__42,L_ARGS19__40,TMP_84,TMP_85,TMP_86);
}
}
}
return TMP_87;
});
lisp.CL_put(G_72,G_54,TMP_79);
TMP_88=lisp.CL_symbolFunction(G_75);
lisp.CL_put(G_72,G_69,TMP_88);
{
TMP_89=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_90;
let L_G9__49;
let L_G8__48;
L_G8__48=arguments[0];
L_G9__49=arguments[1];
TMP_90=G_91.func(L_G8__48,L_G9__49,0);
return TMP_90;
});
L_G28__50=lisp.values1(TMP_89);
{
L_G29__51=lisp.values1(L_G28__50);
lisp.CL_put(G_33,G_92,L_G29__51);
}
}
CL_COMMON_LISP_COPY_SLOT_DEFINITION.lisp_name = 'COPY-SLOT-DEFINITION'
lisp.setSymbolFunction(G_94, CL_COMMON_LISP_COPY_SLOT_DEFINITION);
CL_COMMON_LISP_SLOT_DEFINITION_P.lisp_name = 'SLOT-DEFINITION-P'
lisp.setSymbolFunction(G_97, CL_COMMON_LISP_SLOT_DEFINITION_P);
CL_COMMON_LISP_MAKE_SLOT_DEFINITION.lisp_name = 'MAKE-SLOT-DEFINITION'
lisp.setSymbolFunction(G_101, CL_COMMON_LISP_MAKE_SLOT_DEFINITION);
CL_COMMON_LISP_SLOT_DEFINITION_NAME.lisp_name = 'SLOT-DEFINITION-NAME'
lisp.setSymbolFunction(G_119, CL_COMMON_LISP_SLOT_DEFINITION_NAME);
TMP_123=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_125;
let TMP_124;
let L_STRUCTURE__67;
let L_VALUE__66;
L_VALUE__66=arguments[0];
L_STRUCTURE__67=arguments[1];
TMP_124=lisp.CL_structurep(L_STRUCTURE__67);
if(lisp.values1(TMP_124) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__67,G_47);
}
TMP_125=lisp.CL_structureSet(L_STRUCTURE__67,0,L_VALUE__66);
return TMP_125;
});
lisp.CL_setSymbolFunction(G_122,TMP_123);
TMP_126=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_134;
let TMP_133;
let TMP_132;
let TMP_131;
let L_STORE32__75;
let TMP_130;
let L_GENSYMS30__74;
let TMP_129;
let TMP_127;
let L_ARGS31__72;
let L_G36__70;
let L_G35__69;
L_G35__69=arguments[0];
{
L_G36__70=lisp.values1(L_G35__69);
{
L_ARGS31__72=lisp.values1(L_G36__70);
{
TMP_127=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_128;
let L_X__73;
L_X__73=arguments[0];
TMP_128=lisp.callFunctionWithCallStack(G_58);
return TMP_128;
});
TMP_129=lisp.callFunctionWithCallStack(G_60,TMP_127,L_ARGS31__72);
L_GENSYMS30__74=lisp.values1(TMP_129);
TMP_130=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE32__75=lisp.values1(TMP_130);
TMP_131=lisp.callFunctionWithCallStack(G_64,L_STORE32__75);
TMP_132=lisp.callFunctionWithCallStack(G_66,G_122,L_STORE32__75,L_GENSYMS30__74);
TMP_133=lisp.callFunctionWithCallStack(G_66,G_119,L_GENSYMS30__74);
TMP_134=lisp.CL_values(L_GENSYMS30__74,L_ARGS31__72,TMP_131,TMP_132,TMP_133);
}
}
}
return TMP_134;
});
lisp.CL_put(G_119,G_54,TMP_126);
TMP_135=lisp.CL_symbolFunction(G_122);
lisp.CL_put(G_119,G_69,TMP_135);
CL_COMMON_LISP_SLOT_DEFINITION_INITARGS.lisp_name = 'SLOT-DEFINITION-INITARGS'
lisp.setSymbolFunction(G_137, CL_COMMON_LISP_SLOT_DEFINITION_INITARGS);
TMP_141=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_143;
let TMP_142;
let L_STRUCTURE__81;
let L_VALUE__80;
L_VALUE__80=arguments[0];
L_STRUCTURE__81=arguments[1];
TMP_142=lisp.CL_structurep(L_STRUCTURE__81);
if(lisp.values1(TMP_142) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__81,G_47);
}
TMP_143=lisp.CL_structureSet(L_STRUCTURE__81,1,L_VALUE__80);
return TMP_143;
});
lisp.CL_setSymbolFunction(G_140,TMP_141);
TMP_144=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_152;
let TMP_151;
let TMP_150;
let TMP_149;
let L_STORE40__89;
let TMP_148;
let L_GENSYMS38__88;
let TMP_147;
let TMP_145;
let L_ARGS39__86;
let L_G44__84;
let L_G43__83;
L_G43__83=arguments[0];
{
L_G44__84=lisp.values1(L_G43__83);
{
L_ARGS39__86=lisp.values1(L_G44__84);
{
TMP_145=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_146;
let L_X__87;
L_X__87=arguments[0];
TMP_146=lisp.callFunctionWithCallStack(G_58);
return TMP_146;
});
TMP_147=lisp.callFunctionWithCallStack(G_60,TMP_145,L_ARGS39__86);
L_GENSYMS38__88=lisp.values1(TMP_147);
TMP_148=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE40__89=lisp.values1(TMP_148);
TMP_149=lisp.callFunctionWithCallStack(G_64,L_STORE40__89);
TMP_150=lisp.callFunctionWithCallStack(G_66,G_140,L_STORE40__89,L_GENSYMS38__88);
TMP_151=lisp.callFunctionWithCallStack(G_66,G_137,L_GENSYMS38__88);
TMP_152=lisp.CL_values(L_GENSYMS38__88,L_ARGS39__86,TMP_149,TMP_150,TMP_151);
}
}
}
return TMP_152;
});
lisp.CL_put(G_137,G_54,TMP_144);
TMP_153=lisp.CL_symbolFunction(G_140);
lisp.CL_put(G_137,G_69,TMP_153);
CL_COMMON_LISP_SLOT_DEFINITION_INITFORM.lisp_name = 'SLOT-DEFINITION-INITFORM'
lisp.setSymbolFunction(G_155, CL_COMMON_LISP_SLOT_DEFINITION_INITFORM);
TMP_159=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_161;
let TMP_160;
let L_STRUCTURE__95;
let L_VALUE__94;
L_VALUE__94=arguments[0];
L_STRUCTURE__95=arguments[1];
TMP_160=lisp.CL_structurep(L_STRUCTURE__95);
if(lisp.values1(TMP_160) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__95,G_47);
}
TMP_161=lisp.CL_structureSet(L_STRUCTURE__95,2,L_VALUE__94);
return TMP_161;
});
lisp.CL_setSymbolFunction(G_158,TMP_159);
TMP_162=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_170;
let TMP_169;
let TMP_168;
let TMP_167;
let L_STORE48__103;
let TMP_166;
let L_GENSYMS46__102;
let TMP_165;
let TMP_163;
let L_ARGS47__100;
let L_G52__98;
let L_G51__97;
L_G51__97=arguments[0];
{
L_G52__98=lisp.values1(L_G51__97);
{
L_ARGS47__100=lisp.values1(L_G52__98);
{
TMP_163=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_164;
let L_X__101;
L_X__101=arguments[0];
TMP_164=lisp.callFunctionWithCallStack(G_58);
return TMP_164;
});
TMP_165=lisp.callFunctionWithCallStack(G_60,TMP_163,L_ARGS47__100);
L_GENSYMS46__102=lisp.values1(TMP_165);
TMP_166=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE48__103=lisp.values1(TMP_166);
TMP_167=lisp.callFunctionWithCallStack(G_64,L_STORE48__103);
TMP_168=lisp.callFunctionWithCallStack(G_66,G_158,L_STORE48__103,L_GENSYMS46__102);
TMP_169=lisp.callFunctionWithCallStack(G_66,G_155,L_GENSYMS46__102);
TMP_170=lisp.CL_values(L_GENSYMS46__102,L_ARGS47__100,TMP_167,TMP_168,TMP_169);
}
}
}
return TMP_170;
});
lisp.CL_put(G_155,G_54,TMP_162);
TMP_171=lisp.CL_symbolFunction(G_158);
lisp.CL_put(G_155,G_69,TMP_171);
CL_COMMON_LISP_SLOT_DEFINITION_INITFUNCTION.lisp_name = 'SLOT-DEFINITION-INITFUNCTION'
lisp.setSymbolFunction(G_173, CL_COMMON_LISP_SLOT_DEFINITION_INITFUNCTION);
TMP_177=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_179;
let TMP_178;
let L_STRUCTURE__109;
let L_VALUE__108;
L_VALUE__108=arguments[0];
L_STRUCTURE__109=arguments[1];
TMP_178=lisp.CL_structurep(L_STRUCTURE__109);
if(lisp.values1(TMP_178) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__109,G_47);
}
TMP_179=lisp.CL_structureSet(L_STRUCTURE__109,3,L_VALUE__108);
return TMP_179;
});
lisp.CL_setSymbolFunction(G_176,TMP_177);
TMP_180=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_188;
let TMP_187;
let TMP_186;
let TMP_185;
let L_STORE56__117;
let TMP_184;
let L_GENSYMS54__116;
let TMP_183;
let TMP_181;
let L_ARGS55__114;
let L_G60__112;
let L_G59__111;
L_G59__111=arguments[0];
{
L_G60__112=lisp.values1(L_G59__111);
{
L_ARGS55__114=lisp.values1(L_G60__112);
{
TMP_181=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_182;
let L_X__115;
L_X__115=arguments[0];
TMP_182=lisp.callFunctionWithCallStack(G_58);
return TMP_182;
});
TMP_183=lisp.callFunctionWithCallStack(G_60,TMP_181,L_ARGS55__114);
L_GENSYMS54__116=lisp.values1(TMP_183);
TMP_184=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE56__117=lisp.values1(TMP_184);
TMP_185=lisp.callFunctionWithCallStack(G_64,L_STORE56__117);
TMP_186=lisp.callFunctionWithCallStack(G_66,G_176,L_STORE56__117,L_GENSYMS54__116);
TMP_187=lisp.callFunctionWithCallStack(G_66,G_173,L_GENSYMS54__116);
TMP_188=lisp.CL_values(L_GENSYMS54__116,L_ARGS55__114,TMP_185,TMP_186,TMP_187);
}
}
}
return TMP_188;
});
lisp.CL_put(G_173,G_54,TMP_180);
TMP_189=lisp.CL_symbolFunction(G_176);
lisp.CL_put(G_173,G_69,TMP_189);
CL_COMMON_LISP_SLOT_DEFINITION_READERS.lisp_name = 'SLOT-DEFINITION-READERS'
lisp.setSymbolFunction(G_191, CL_COMMON_LISP_SLOT_DEFINITION_READERS);
TMP_195=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_197;
let TMP_196;
let L_STRUCTURE__123;
let L_VALUE__122;
L_VALUE__122=arguments[0];
L_STRUCTURE__123=arguments[1];
TMP_196=lisp.CL_structurep(L_STRUCTURE__123);
if(lisp.values1(TMP_196) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__123,G_47);
}
TMP_197=lisp.CL_structureSet(L_STRUCTURE__123,4,L_VALUE__122);
return TMP_197;
});
lisp.CL_setSymbolFunction(G_194,TMP_195);
TMP_198=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_206;
let TMP_205;
let TMP_204;
let TMP_203;
let L_STORE64__131;
let TMP_202;
let L_GENSYMS62__130;
let TMP_201;
let TMP_199;
let L_ARGS63__128;
let L_G68__126;
let L_G67__125;
L_G67__125=arguments[0];
{
L_G68__126=lisp.values1(L_G67__125);
{
L_ARGS63__128=lisp.values1(L_G68__126);
{
TMP_199=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_200;
let L_X__129;
L_X__129=arguments[0];
TMP_200=lisp.callFunctionWithCallStack(G_58);
return TMP_200;
});
TMP_201=lisp.callFunctionWithCallStack(G_60,TMP_199,L_ARGS63__128);
L_GENSYMS62__130=lisp.values1(TMP_201);
TMP_202=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE64__131=lisp.values1(TMP_202);
TMP_203=lisp.callFunctionWithCallStack(G_64,L_STORE64__131);
TMP_204=lisp.callFunctionWithCallStack(G_66,G_194,L_STORE64__131,L_GENSYMS62__130);
TMP_205=lisp.callFunctionWithCallStack(G_66,G_191,L_GENSYMS62__130);
TMP_206=lisp.CL_values(L_GENSYMS62__130,L_ARGS63__128,TMP_203,TMP_204,TMP_205);
}
}
}
return TMP_206;
});
lisp.CL_put(G_191,G_54,TMP_198);
TMP_207=lisp.CL_symbolFunction(G_194);
lisp.CL_put(G_191,G_69,TMP_207);
CL_COMMON_LISP_SLOT_DEFINITION_WRITERS.lisp_name = 'SLOT-DEFINITION-WRITERS'
lisp.setSymbolFunction(G_209, CL_COMMON_LISP_SLOT_DEFINITION_WRITERS);
TMP_213=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_215;
let TMP_214;
let L_STRUCTURE__137;
let L_VALUE__136;
L_VALUE__136=arguments[0];
L_STRUCTURE__137=arguments[1];
TMP_214=lisp.CL_structurep(L_STRUCTURE__137);
if(lisp.values1(TMP_214) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__137,G_47);
}
TMP_215=lisp.CL_structureSet(L_STRUCTURE__137,5,L_VALUE__136);
return TMP_215;
});
lisp.CL_setSymbolFunction(G_212,TMP_213);
TMP_216=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_224;
let TMP_223;
let TMP_222;
let TMP_221;
let L_STORE72__145;
let TMP_220;
let L_GENSYMS70__144;
let TMP_219;
let TMP_217;
let L_ARGS71__142;
let L_G76__140;
let L_G75__139;
L_G75__139=arguments[0];
{
L_G76__140=lisp.values1(L_G75__139);
{
L_ARGS71__142=lisp.values1(L_G76__140);
{
TMP_217=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_218;
let L_X__143;
L_X__143=arguments[0];
TMP_218=lisp.callFunctionWithCallStack(G_58);
return TMP_218;
});
TMP_219=lisp.callFunctionWithCallStack(G_60,TMP_217,L_ARGS71__142);
L_GENSYMS70__144=lisp.values1(TMP_219);
TMP_220=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE72__145=lisp.values1(TMP_220);
TMP_221=lisp.callFunctionWithCallStack(G_64,L_STORE72__145);
TMP_222=lisp.callFunctionWithCallStack(G_66,G_212,L_STORE72__145,L_GENSYMS70__144);
TMP_223=lisp.callFunctionWithCallStack(G_66,G_209,L_GENSYMS70__144);
TMP_224=lisp.CL_values(L_GENSYMS70__144,L_ARGS71__142,TMP_221,TMP_222,TMP_223);
}
}
}
return TMP_224;
});
lisp.CL_put(G_209,G_54,TMP_216);
TMP_225=lisp.CL_symbolFunction(G_212);
lisp.CL_put(G_209,G_69,TMP_225);
CL_COMMON_LISP_SLOT_DEFINITION_ALLOCATION.lisp_name = 'SLOT-DEFINITION-ALLOCATION'
lisp.setSymbolFunction(G_227, CL_COMMON_LISP_SLOT_DEFINITION_ALLOCATION);
TMP_231=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_233;
let TMP_232;
let L_STRUCTURE__151;
let L_VALUE__150;
L_VALUE__150=arguments[0];
L_STRUCTURE__151=arguments[1];
TMP_232=lisp.CL_structurep(L_STRUCTURE__151);
if(lisp.values1(TMP_232) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_48,L_STRUCTURE__151,G_47);
}
TMP_233=lisp.CL_structureSet(L_STRUCTURE__151,6,L_VALUE__150);
return TMP_233;
});
lisp.CL_setSymbolFunction(G_230,TMP_231);
TMP_234=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_242;
let TMP_241;
let TMP_240;
let TMP_239;
let L_STORE80__159;
let TMP_238;
let L_GENSYMS78__158;
let TMP_237;
let TMP_235;
let L_ARGS79__156;
let L_G84__154;
let L_G83__153;
L_G83__153=arguments[0];
{
L_G84__154=lisp.values1(L_G83__153);
{
L_ARGS79__156=lisp.values1(L_G84__154);
{
TMP_235=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_236;
let L_X__157;
L_X__157=arguments[0];
TMP_236=lisp.callFunctionWithCallStack(G_58);
return TMP_236;
});
TMP_237=lisp.callFunctionWithCallStack(G_60,TMP_235,L_ARGS79__156);
L_GENSYMS78__158=lisp.values1(TMP_237);
TMP_238=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE80__159=lisp.values1(TMP_238);
TMP_239=lisp.callFunctionWithCallStack(G_64,L_STORE80__159);
TMP_240=lisp.callFunctionWithCallStack(G_66,G_230,L_STORE80__159,L_GENSYMS78__158);
TMP_241=lisp.callFunctionWithCallStack(G_66,G_227,L_GENSYMS78__158);
TMP_242=lisp.CL_values(L_GENSYMS78__158,L_ARGS79__156,TMP_239,TMP_240,TMP_241);
}
}
}
return TMP_242;
});
lisp.CL_put(G_227,G_54,TMP_234);
TMP_243=lisp.CL_symbolFunction(G_230);
lisp.CL_put(G_227,G_69,TMP_243);
{
TMP_244=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_254;
let TMP_253;
let TMP_252;
let TMP_251;
let TMP_250;
let TMP_249;
let TMP_248;
let TMP_247;
let L_STREAM__165;
let L_STRUCTURE__164;
L_STRUCTURE__164=arguments[0];
L_STREAM__165=arguments[1];
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([83, 76, 79, 84, 45, 68, 69, 70, 73, 78, 73, 84, 73, 79, 78])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_246,G_102,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
TMP_247=lisp.CL_structureRef(L_STRUCTURE__164,0);
lisp.callFunctionWithCallStack(G_246,TMP_247,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_246,G_104,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
TMP_248=lisp.CL_structureRef(L_STRUCTURE__164,1);
lisp.callFunctionWithCallStack(G_246,TMP_248,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_246,G_106,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
TMP_249=lisp.CL_structureRef(L_STRUCTURE__164,2);
lisp.callFunctionWithCallStack(G_246,TMP_249,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_246,G_108,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
TMP_250=lisp.CL_structureRef(L_STRUCTURE__164,3);
lisp.callFunctionWithCallStack(G_246,TMP_250,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_246,G_110,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
TMP_251=lisp.CL_structureRef(L_STRUCTURE__164,4);
lisp.callFunctionWithCallStack(G_246,TMP_251,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_246,G_112,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
TMP_252=lisp.CL_structureRef(L_STRUCTURE__164,5);
lisp.callFunctionWithCallStack(G_246,TMP_252,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
lisp.callFunctionWithCallStack(G_246,G_114,L_STREAM__165);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([32])),L_STREAM__165);
TMP_253=lisp.CL_structureRef(L_STRUCTURE__164,6);
lisp.callFunctionWithCallStack(G_246,TMP_253,L_STREAM__165);
TMP_254=lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([41])),L_STREAM__165);
return TMP_254;
});
L_G88__166=lisp.values1(TMP_244);
{
L_G89__167=lisp.values1(L_G88__166);
lisp.CL_put(G_98,G_92,L_G89__167);
}
}
CL_COMMON_LISP_PRINT_STANDARD_INSTANCE.lisp_name = 'PRINT-STANDARD-INSTANCE'
lisp.setSymbolFunction(G_91, CL_COMMON_LISP_PRINT_STANDARD_INSTANCE);
CL_COMMON_LISP_STD_SLOT_BOUNDP.lisp_name = 'STD-SLOT-BOUNDP'
lisp.setSymbolFunction(G_259, CL_COMMON_LISP_STD_SLOT_BOUNDP);
CL_COMMON_LISP_SLOT_BOUNDP.lisp_name = 'SLOT-BOUNDP'
lisp.setSymbolFunction(G_265, CL_COMMON_LISP_SLOT_BOUNDP);
CL_COMMON_LISP_PERCENTSLOT_VALUE.lisp_name = '%SLOT-VALUE'
lisp.setSymbolFunction(G_275, CL_COMMON_LISP_PERCENTSLOT_VALUE);
TMP_280=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G_STORE98__190;
let TMP_286;
let TMP_285;
let TMP_284;
let L_G97__189;
let L_G_STORE96__188;
let L_G95__187;
let L_ELT__186;
let TMP_282;
let TMP_281;
let L_SLOT_NAME__184;
let L_CLASS__183;
let L_VALUE__182;
L_VALUE__182=arguments[0];
L_CLASS__183=arguments[1];
L_SLOT_NAME__184=arguments[2];
{
TMP_281=G_72.func(L_CLASS__183);
TMP_282=lisp.callFunctionWithCallStack(G_262,L_SLOT_NAME__184,TMP_281);
L_ELT__186=lisp.values1(TMP_282);
if(lisp.values1(L_ELT__186) !== lisp.S_nil){
{
L_G95__187=lisp.values1(L_ELT__186);
L_G_STORE96__188=lisp.values1(L_VALUE__182);
lisp.callFunctionWithCallStack(G_283,L_G_STORE96__188,L_G95__187);
}
}else{
{
L_G97__189=lisp.values1(L_CLASS__183);
TMP_284=lisp.CL_cons(L_SLOT_NAME__184,L_VALUE__182);
TMP_285=G_72.func(L_G97__189);
TMP_286=lisp.CL_cons(TMP_284,TMP_285);
L_G_STORE98__190=lisp.values1(TMP_286);
lisp.callFunctionWithCallStack(G_75,L_G_STORE98__190,L_G97__189);
}
}
}
return lisp.values1(L_VALUE__182);
});
lisp.CL_setSymbolFunction(G_279,TMP_280);
TMP_287=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_295;
let TMP_294;
let TMP_293;
let TMP_292;
let L_STORE92__197;
let TMP_291;
let L_GENSYMS90__196;
let TMP_290;
let TMP_288;
let L_ARGS91__194;
let L_G100__192;
let L_G99__191;
L_G99__191=arguments[0];
{
L_G100__192=lisp.values1(L_G99__191);
{
L_ARGS91__194=lisp.values1(L_G100__192);
{
TMP_288=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_289;
let L_X__195;
L_X__195=arguments[0];
TMP_289=lisp.callFunctionWithCallStack(G_58);
return TMP_289;
});
TMP_290=lisp.callFunctionWithCallStack(G_60,TMP_288,L_ARGS91__194);
L_GENSYMS90__196=lisp.values1(TMP_290);
TMP_291=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE92__197=lisp.values1(TMP_291);
TMP_292=lisp.callFunctionWithCallStack(G_64,L_STORE92__197);
TMP_293=lisp.callFunctionWithCallStack(G_66,G_279,L_STORE92__197,L_GENSYMS90__196);
TMP_294=lisp.callFunctionWithCallStack(G_66,G_275,L_GENSYMS90__196);
TMP_295=lisp.CL_values(L_GENSYMS90__196,L_ARGS91__194,TMP_292,TMP_293,TMP_294);
}
}
}
return TMP_295;
});
lisp.CL_put(G_275,G_54,TMP_287);
TMP_296=lisp.CL_symbolFunction(G_279);
lisp.CL_put(G_275,G_69,TMP_296);
CL_COMMON_LISP_SLOT_VALUE.lisp_name = 'SLOT-VALUE'
lisp.setSymbolFunction(G_298, CL_COMMON_LISP_SLOT_VALUE);
TMP_301=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_302;
let L_G_STORE109__209;
let L_G108__208;
let L_G107__207;
let L_SLOT_NAME__205;
let L_OBJECT__204;
let L_VALUE__203;
L_VALUE__203=arguments[0];
L_OBJECT__204=arguments[1];
L_SLOT_NAME__205=arguments[2];
{
L_G107__207=lisp.values1(L_OBJECT__204);
L_G108__208=lisp.values1(L_SLOT_NAME__205);
L_G_STORE109__209=lisp.values1(L_VALUE__203);
TMP_302=lisp.callFunctionWithCallStack(G_279,L_G_STORE109__209,L_G107__207,L_G108__208);
}
return TMP_302;
});
lisp.CL_setSymbolFunction(G_300,TMP_301);
TMP_303=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_311;
let TMP_310;
let TMP_309;
let TMP_308;
let L_STORE104__216;
let TMP_307;
let L_GENSYMS102__215;
let TMP_306;
let TMP_304;
let L_ARGS103__213;
let L_G111__211;
let L_G110__210;
L_G110__210=arguments[0];
{
L_G111__211=lisp.values1(L_G110__210);
{
L_ARGS103__213=lisp.values1(L_G111__211);
{
TMP_304=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_305;
let L_X__214;
L_X__214=arguments[0];
TMP_305=lisp.callFunctionWithCallStack(G_58);
return TMP_305;
});
TMP_306=lisp.callFunctionWithCallStack(G_60,TMP_304,L_ARGS103__213);
L_GENSYMS102__215=lisp.values1(TMP_306);
TMP_307=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE104__216=lisp.values1(TMP_307);
TMP_308=lisp.callFunctionWithCallStack(G_64,L_STORE104__216);
TMP_309=lisp.callFunctionWithCallStack(G_66,G_300,L_STORE104__216,L_GENSYMS102__215);
TMP_310=lisp.callFunctionWithCallStack(G_66,G_298,L_GENSYMS102__215);
TMP_311=lisp.CL_values(L_GENSYMS102__215,L_ARGS103__213,TMP_308,TMP_309,TMP_310);
}
}
}
return TMP_311;
});
lisp.CL_put(G_298,G_54,TMP_303);
TMP_312=lisp.CL_symbolFunction(G_300);
lisp.CL_put(G_298,G_69,TMP_312);
CL_COMMON_LISP_CLASS_NAME.lisp_name = 'CLASS-NAME'
lisp.setSymbolFunction(G_314, CL_COMMON_LISP_CLASS_NAME);
TMP_318=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_319;
let L_G_STORE120__226;
let L_G118__224;
let L_CLASS__222;
let L_NAME__221;
L_NAME__221=arguments[0];
L_CLASS__222=arguments[1];
{
L_G118__224=lisp.values1(L_CLASS__222);
L_G_STORE120__226=lisp.values1(L_NAME__221);
TMP_319=lisp.callFunctionWithCallStack(G_279,L_G_STORE120__226,L_G118__224,G_315);
}
return TMP_319;
});
lisp.CL_setSymbolFunction(G_317,TMP_318);
TMP_320=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_328;
let TMP_327;
let TMP_326;
let TMP_325;
let L_STORE115__233;
let TMP_324;
let L_GENSYMS113__232;
let TMP_323;
let TMP_321;
let L_ARGS114__230;
let L_G122__228;
let L_G121__227;
L_G121__227=arguments[0];
{
L_G122__228=lisp.values1(L_G121__227);
{
L_ARGS114__230=lisp.values1(L_G122__228);
{
TMP_321=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_322;
let L_X__231;
L_X__231=arguments[0];
TMP_322=lisp.callFunctionWithCallStack(G_58);
return TMP_322;
});
TMP_323=lisp.callFunctionWithCallStack(G_60,TMP_321,L_ARGS114__230);
L_GENSYMS113__232=lisp.values1(TMP_323);
TMP_324=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE115__233=lisp.values1(TMP_324);
TMP_325=lisp.callFunctionWithCallStack(G_64,L_STORE115__233);
TMP_326=lisp.callFunctionWithCallStack(G_66,G_317,L_STORE115__233,L_GENSYMS113__232);
TMP_327=lisp.callFunctionWithCallStack(G_66,G_314,L_GENSYMS113__232);
TMP_328=lisp.CL_values(L_GENSYMS113__232,L_ARGS114__230,TMP_325,TMP_326,TMP_327);
}
}
}
return TMP_328;
});
lisp.CL_put(G_314,G_54,TMP_320);
TMP_329=lisp.CL_symbolFunction(G_317);
lisp.CL_put(G_314,G_69,TMP_329);
CL_COMMON_LISP_CLASS_PRECEDENCE_LIST.lisp_name = 'CLASS-PRECEDENCE-LIST'
lisp.setSymbolFunction(G_331, CL_COMMON_LISP_CLASS_PRECEDENCE_LIST);
TMP_335=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_336;
let L_G_STORE131__243;
let L_G129__241;
let L_CLASS__239;
let L_PRECEDENCE_LIST__238;
L_PRECEDENCE_LIST__238=arguments[0];
L_CLASS__239=arguments[1];
{
L_G129__241=lisp.values1(L_CLASS__239);
L_G_STORE131__243=lisp.values1(L_PRECEDENCE_LIST__238);
TMP_336=lisp.callFunctionWithCallStack(G_279,L_G_STORE131__243,L_G129__241,G_332);
}
return TMP_336;
});
lisp.CL_setSymbolFunction(G_334,TMP_335);
TMP_337=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_345;
let TMP_344;
let TMP_343;
let TMP_342;
let L_STORE126__250;
let TMP_341;
let L_GENSYMS124__249;
let TMP_340;
let TMP_338;
let L_ARGS125__247;
let L_G133__245;
let L_G132__244;
L_G132__244=arguments[0];
{
L_G133__245=lisp.values1(L_G132__244);
{
L_ARGS125__247=lisp.values1(L_G133__245);
{
TMP_338=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_339;
let L_X__248;
L_X__248=arguments[0];
TMP_339=lisp.callFunctionWithCallStack(G_58);
return TMP_339;
});
TMP_340=lisp.callFunctionWithCallStack(G_60,TMP_338,L_ARGS125__247);
L_GENSYMS124__249=lisp.values1(TMP_340);
TMP_341=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE126__250=lisp.values1(TMP_341);
TMP_342=lisp.callFunctionWithCallStack(G_64,L_STORE126__250);
TMP_343=lisp.callFunctionWithCallStack(G_66,G_334,L_STORE126__250,L_GENSYMS124__249);
TMP_344=lisp.callFunctionWithCallStack(G_66,G_331,L_GENSYMS124__249);
TMP_345=lisp.CL_values(L_GENSYMS124__249,L_ARGS125__247,TMP_342,TMP_343,TMP_344);
}
}
}
return TMP_345;
});
lisp.CL_put(G_331,G_54,TMP_337);
TMP_346=lisp.CL_symbolFunction(G_334);
lisp.CL_put(G_331,G_69,TMP_346);
CL_COMMON_LISP_CLASS_DIRECT_SUPERCLASSES.lisp_name = 'CLASS-DIRECT-SUPERCLASSES'
lisp.setSymbolFunction(G_348, CL_COMMON_LISP_CLASS_DIRECT_SUPERCLASSES);
TMP_352=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_353;
let L_G_STORE142__260;
let L_G140__258;
let L_CLASS__256;
let L_DIRECT_SUPERCLASSES__255;
L_DIRECT_SUPERCLASSES__255=arguments[0];
L_CLASS__256=arguments[1];
{
L_G140__258=lisp.values1(L_CLASS__256);
L_G_STORE142__260=lisp.values1(L_DIRECT_SUPERCLASSES__255);
TMP_353=lisp.callFunctionWithCallStack(G_279,L_G_STORE142__260,L_G140__258,G_349);
}
return TMP_353;
});
lisp.CL_setSymbolFunction(G_351,TMP_352);
TMP_354=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_362;
let TMP_361;
let TMP_360;
let TMP_359;
let L_STORE137__267;
let TMP_358;
let L_GENSYMS135__266;
let TMP_357;
let TMP_355;
let L_ARGS136__264;
let L_G144__262;
let L_G143__261;
L_G143__261=arguments[0];
{
L_G144__262=lisp.values1(L_G143__261);
{
L_ARGS136__264=lisp.values1(L_G144__262);
{
TMP_355=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_356;
let L_X__265;
L_X__265=arguments[0];
TMP_356=lisp.callFunctionWithCallStack(G_58);
return TMP_356;
});
TMP_357=lisp.callFunctionWithCallStack(G_60,TMP_355,L_ARGS136__264);
L_GENSYMS135__266=lisp.values1(TMP_357);
TMP_358=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE137__267=lisp.values1(TMP_358);
TMP_359=lisp.callFunctionWithCallStack(G_64,L_STORE137__267);
TMP_360=lisp.callFunctionWithCallStack(G_66,G_351,L_STORE137__267,L_GENSYMS135__266);
TMP_361=lisp.callFunctionWithCallStack(G_66,G_348,L_GENSYMS135__266);
TMP_362=lisp.CL_values(L_GENSYMS135__266,L_ARGS136__264,TMP_359,TMP_360,TMP_361);
}
}
}
return TMP_362;
});
lisp.CL_put(G_348,G_54,TMP_354);
TMP_363=lisp.CL_symbolFunction(G_351);
lisp.CL_put(G_348,G_69,TMP_363);
CL_COMMON_LISP_CLASS_DIRECT_SLOTS.lisp_name = 'CLASS-DIRECT-SLOTS'
lisp.setSymbolFunction(G_365, CL_COMMON_LISP_CLASS_DIRECT_SLOTS);
TMP_369=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_370;
let L_G_STORE153__277;
let L_G151__275;
let L_CLASS__273;
let L_DIRECT_SLOTS__272;
L_DIRECT_SLOTS__272=arguments[0];
L_CLASS__273=arguments[1];
{
L_G151__275=lisp.values1(L_CLASS__273);
L_G_STORE153__277=lisp.values1(L_DIRECT_SLOTS__272);
TMP_370=lisp.callFunctionWithCallStack(G_279,L_G_STORE153__277,L_G151__275,G_366);
}
return TMP_370;
});
lisp.CL_setSymbolFunction(G_368,TMP_369);
TMP_371=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_379;
let TMP_378;
let TMP_377;
let TMP_376;
let L_STORE148__284;
let TMP_375;
let L_GENSYMS146__283;
let TMP_374;
let TMP_372;
let L_ARGS147__281;
let L_G155__279;
let L_G154__278;
L_G154__278=arguments[0];
{
L_G155__279=lisp.values1(L_G154__278);
{
L_ARGS147__281=lisp.values1(L_G155__279);
{
TMP_372=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_373;
let L_X__282;
L_X__282=arguments[0];
TMP_373=lisp.callFunctionWithCallStack(G_58);
return TMP_373;
});
TMP_374=lisp.callFunctionWithCallStack(G_60,TMP_372,L_ARGS147__281);
L_GENSYMS146__283=lisp.values1(TMP_374);
TMP_375=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE148__284=lisp.values1(TMP_375);
TMP_376=lisp.callFunctionWithCallStack(G_64,L_STORE148__284);
TMP_377=lisp.callFunctionWithCallStack(G_66,G_368,L_STORE148__284,L_GENSYMS146__283);
TMP_378=lisp.callFunctionWithCallStack(G_66,G_365,L_GENSYMS146__283);
TMP_379=lisp.CL_values(L_GENSYMS146__283,L_ARGS147__281,TMP_376,TMP_377,TMP_378);
}
}
}
return TMP_379;
});
lisp.CL_put(G_365,G_54,TMP_371);
TMP_380=lisp.CL_symbolFunction(G_368);
lisp.CL_put(G_365,G_69,TMP_380);
CL_COMMON_LISP_CLASS_DIRECT_SUBCLASSES.lisp_name = 'CLASS-DIRECT-SUBCLASSES'
lisp.setSymbolFunction(G_382, CL_COMMON_LISP_CLASS_DIRECT_SUBCLASSES);
TMP_386=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_387;
let L_G_STORE164__294;
let L_G162__292;
let L_CLASS__290;
let L_DIRECT_SUBCLASSES__289;
L_DIRECT_SUBCLASSES__289=arguments[0];
L_CLASS__290=arguments[1];
{
L_G162__292=lisp.values1(L_CLASS__290);
L_G_STORE164__294=lisp.values1(L_DIRECT_SUBCLASSES__289);
TMP_387=lisp.callFunctionWithCallStack(G_279,L_G_STORE164__294,L_G162__292,G_383);
}
return TMP_387;
});
lisp.CL_setSymbolFunction(G_385,TMP_386);
TMP_388=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_396;
let TMP_395;
let TMP_394;
let TMP_393;
let L_STORE159__301;
let TMP_392;
let L_GENSYMS157__300;
let TMP_391;
let TMP_389;
let L_ARGS158__298;
let L_G166__296;
let L_G165__295;
L_G165__295=arguments[0];
{
L_G166__296=lisp.values1(L_G165__295);
{
L_ARGS158__298=lisp.values1(L_G166__296);
{
TMP_389=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_390;
let L_X__299;
L_X__299=arguments[0];
TMP_390=lisp.callFunctionWithCallStack(G_58);
return TMP_390;
});
TMP_391=lisp.callFunctionWithCallStack(G_60,TMP_389,L_ARGS158__298);
L_GENSYMS157__300=lisp.values1(TMP_391);
TMP_392=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE159__301=lisp.values1(TMP_392);
TMP_393=lisp.callFunctionWithCallStack(G_64,L_STORE159__301);
TMP_394=lisp.callFunctionWithCallStack(G_66,G_385,L_STORE159__301,L_GENSYMS157__300);
TMP_395=lisp.callFunctionWithCallStack(G_66,G_382,L_GENSYMS157__300);
TMP_396=lisp.CL_values(L_GENSYMS157__300,L_ARGS158__298,TMP_393,TMP_394,TMP_395);
}
}
}
return TMP_396;
});
lisp.CL_put(G_382,G_54,TMP_388);
TMP_397=lisp.CL_symbolFunction(G_385);
lisp.CL_put(G_382,G_69,TMP_397);
CL_COMMON_LISP_CLASS_DIRECT_DEFAULT_INITARGS.lisp_name = 'CLASS-DIRECT-DEFAULT-INITARGS'
lisp.setSymbolFunction(G_399, CL_COMMON_LISP_CLASS_DIRECT_DEFAULT_INITARGS);
TMP_403=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_404;
let L_G_STORE175__311;
let L_G173__309;
let L_CLASS__307;
let L_DIRECT_DEFAULT_INITARGS__306;
L_DIRECT_DEFAULT_INITARGS__306=arguments[0];
L_CLASS__307=arguments[1];
{
L_G173__309=lisp.values1(L_CLASS__307);
L_G_STORE175__311=lisp.values1(L_DIRECT_DEFAULT_INITARGS__306);
TMP_404=lisp.callFunctionWithCallStack(G_279,L_G_STORE175__311,L_G173__309,G_400);
}
return TMP_404;
});
lisp.CL_setSymbolFunction(G_402,TMP_403);
TMP_405=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_413;
let TMP_412;
let TMP_411;
let TMP_410;
let L_STORE170__318;
let TMP_409;
let L_GENSYMS168__317;
let TMP_408;
let TMP_406;
let L_ARGS169__315;
let L_G177__313;
let L_G176__312;
L_G176__312=arguments[0];
{
L_G177__313=lisp.values1(L_G176__312);
{
L_ARGS169__315=lisp.values1(L_G177__313);
{
TMP_406=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_407;
let L_X__316;
L_X__316=arguments[0];
TMP_407=lisp.callFunctionWithCallStack(G_58);
return TMP_407;
});
TMP_408=lisp.callFunctionWithCallStack(G_60,TMP_406,L_ARGS169__315);
L_GENSYMS168__317=lisp.values1(TMP_408);
TMP_409=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE170__318=lisp.values1(TMP_409);
TMP_410=lisp.callFunctionWithCallStack(G_64,L_STORE170__318);
TMP_411=lisp.callFunctionWithCallStack(G_66,G_402,L_STORE170__318,L_GENSYMS168__317);
TMP_412=lisp.callFunctionWithCallStack(G_66,G_399,L_GENSYMS168__317);
TMP_413=lisp.CL_values(L_GENSYMS168__317,L_ARGS169__315,TMP_410,TMP_411,TMP_412);
}
}
}
return TMP_413;
});
lisp.CL_put(G_399,G_54,TMP_405);
TMP_414=lisp.CL_symbolFunction(G_402);
lisp.CL_put(G_399,G_69,TMP_414);
CL_COMMON_LISP_CLASS_SLOTS.lisp_name = 'CLASS-SLOTS'
lisp.setSymbolFunction(G_416, CL_COMMON_LISP_CLASS_SLOTS);
TMP_420=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_421;
let L_G_STORE186__328;
let L_G184__326;
let L_CLASS__324;
let L_SLOTS__323;
L_SLOTS__323=arguments[0];
L_CLASS__324=arguments[1];
{
L_G184__326=lisp.values1(L_CLASS__324);
L_G_STORE186__328=lisp.values1(L_SLOTS__323);
TMP_421=lisp.callFunctionWithCallStack(G_279,L_G_STORE186__328,L_G184__326,G_417);
}
return TMP_421;
});
lisp.CL_setSymbolFunction(G_419,TMP_420);
TMP_422=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_430;
let TMP_429;
let TMP_428;
let TMP_427;
let L_STORE181__335;
let TMP_426;
let L_GENSYMS179__334;
let TMP_425;
let TMP_423;
let L_ARGS180__332;
let L_G188__330;
let L_G187__329;
L_G187__329=arguments[0];
{
L_G188__330=lisp.values1(L_G187__329);
{
L_ARGS180__332=lisp.values1(L_G188__330);
{
TMP_423=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_424;
let L_X__333;
L_X__333=arguments[0];
TMP_424=lisp.callFunctionWithCallStack(G_58);
return TMP_424;
});
TMP_425=lisp.callFunctionWithCallStack(G_60,TMP_423,L_ARGS180__332);
L_GENSYMS179__334=lisp.values1(TMP_425);
TMP_426=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE181__335=lisp.values1(TMP_426);
TMP_427=lisp.callFunctionWithCallStack(G_64,L_STORE181__335);
TMP_428=lisp.callFunctionWithCallStack(G_66,G_419,L_STORE181__335,L_GENSYMS179__334);
TMP_429=lisp.callFunctionWithCallStack(G_66,G_416,L_GENSYMS179__334);
TMP_430=lisp.CL_values(L_GENSYMS179__334,L_ARGS180__332,TMP_427,TMP_428,TMP_429);
}
}
}
return TMP_430;
});
lisp.CL_put(G_416,G_54,TMP_422);
TMP_431=lisp.CL_symbolFunction(G_419);
lisp.CL_put(G_416,G_69,TMP_431);
CL_COMMON_LISP_CLASS_DEFAULT_INITARGS.lisp_name = 'CLASS-DEFAULT-INITARGS'
lisp.setSymbolFunction(G_433, CL_COMMON_LISP_CLASS_DEFAULT_INITARGS);
TMP_437=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_438;
let L_G_STORE197__345;
let L_G195__343;
let L_CLASS__341;
let L_DEFAULT_INITARGS__340;
L_DEFAULT_INITARGS__340=arguments[0];
L_CLASS__341=arguments[1];
{
L_G195__343=lisp.values1(L_CLASS__341);
L_G_STORE197__345=lisp.values1(L_DEFAULT_INITARGS__340);
TMP_438=lisp.callFunctionWithCallStack(G_279,L_G_STORE197__345,L_G195__343,G_434);
}
return TMP_438;
});
lisp.CL_setSymbolFunction(G_436,TMP_437);
TMP_439=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_447;
let TMP_446;
let TMP_445;
let TMP_444;
let L_STORE192__352;
let TMP_443;
let L_GENSYMS190__351;
let TMP_442;
let TMP_440;
let L_ARGS191__349;
let L_G199__347;
let L_G198__346;
L_G198__346=arguments[0];
{
L_G199__347=lisp.values1(L_G198__346);
{
L_ARGS191__349=lisp.values1(L_G199__347);
{
TMP_440=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_441;
let L_X__350;
L_X__350=arguments[0];
TMP_441=lisp.callFunctionWithCallStack(G_58);
return TMP_441;
});
TMP_442=lisp.callFunctionWithCallStack(G_60,TMP_440,L_ARGS191__349);
L_GENSYMS190__351=lisp.values1(TMP_442);
TMP_443=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE192__352=lisp.values1(TMP_443);
TMP_444=lisp.callFunctionWithCallStack(G_64,L_STORE192__352);
TMP_445=lisp.callFunctionWithCallStack(G_66,G_436,L_STORE192__352,L_GENSYMS190__351);
TMP_446=lisp.callFunctionWithCallStack(G_66,G_433,L_GENSYMS190__351);
TMP_447=lisp.CL_values(L_GENSYMS190__351,L_ARGS191__349,TMP_444,TMP_445,TMP_446);
}
}
}
return TMP_447;
});
lisp.CL_put(G_433,G_54,TMP_439);
TMP_448=lisp.CL_symbolFunction(G_436);
lisp.CL_put(G_433,G_69,TMP_448);
CL_COMMON_LISP_CLASS_OF.lisp_name = 'CLASS-OF'
lisp.setSymbolFunction(G_267, CL_COMMON_LISP_CLASS_OF);
{
TMP_521=lisp.callFunctionWithCallStack(G_522);
L_CLASS_TABLE__374=lisp.values1(TMP_521);
TMP_523=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_527;
let TMP_526;
let L_CLASS__379;
let TMP_524;
let L_ENVIRONMENT__377;
let L_ERRORP__376;
let L_SYMBOL__375;
L_SYMBOL__375=arguments[0];
L_ERRORP__376=arguments.length > 1 ? arguments[1] : (lisp.values1(G_26));
L_ENVIRONMENT__377=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
{
TMP_524=lisp.callFunctionWithCallStack(G_525,L_SYMBOL__375,L_CLASS_TABLE__374);
L_CLASS__379=lisp.values1(TMP_524);
TMP_526=lisp.callFunctionWithCallStack(G_5,L_CLASS__379);
if(lisp.values1(TMP_526) !== lisp.S_nil){
TMP_527=lisp.values1(L_ERRORP__376);
}else{
TMP_527=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_527) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([84, 104, 101, 114, 101, 32, 105, 115, 32, 110, 111, 32, 99, 108, 97, 115, 115, 32, 110, 97, 109, 101, 100, 32, 126, 83, 46])),L_SYMBOL__375);
}else{
}
}
return lisp.values1(L_CLASS__379);
});
lisp.CL_setSymbolFunction(G_456,TMP_523);
TMP_529=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_530;
let L_G_STORE225__387;
let L_G224__386;
let L_G223__385;
let L_ENVIRONMENT__383;
let L_ERRORP__382;
let L_SYMBOL__381;
let L_CLASS__380;
L_CLASS__380=arguments[0];
L_SYMBOL__381=arguments[1];
L_ERRORP__382=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_ENVIRONMENT__383=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
{
L_G223__385=lisp.values1(L_SYMBOL__381);
L_G224__386=lisp.values1(L_CLASS_TABLE__374);
L_G_STORE225__387=lisp.values1(L_CLASS__380);
TMP_530=lisp.callFunctionWithCallStack(G_531,L_G_STORE225__387,L_G223__385,L_G224__386);
}
return TMP_530;
});
lisp.CL_setSymbolFunction(G_528,TMP_529);
TMP_532=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_540;
let TMP_539;
let TMP_538;
let TMP_537;
let L_STORE220__394;
let TMP_536;
let L_GENSYMS218__393;
let TMP_535;
let TMP_533;
let L_ARGS219__391;
let L_G227__389;
let L_G226__388;
L_G226__388=arguments[0];
{
L_G227__389=lisp.values1(L_G226__388);
{
L_ARGS219__391=lisp.values1(L_G227__389);
{
TMP_533=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_534;
let L_X__392;
L_X__392=arguments[0];
TMP_534=lisp.callFunctionWithCallStack(G_58);
return TMP_534;
});
TMP_535=lisp.callFunctionWithCallStack(G_60,TMP_533,L_ARGS219__391);
L_GENSYMS218__393=lisp.values1(TMP_535);
TMP_536=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE220__394=lisp.values1(TMP_536);
TMP_537=lisp.callFunctionWithCallStack(G_64,L_STORE220__394);
TMP_538=lisp.callFunctionWithCallStack(G_66,G_528,L_STORE220__394,L_GENSYMS218__393);
TMP_539=lisp.callFunctionWithCallStack(G_66,G_456,L_GENSYMS218__393);
TMP_540=lisp.CL_values(L_GENSYMS218__393,L_ARGS219__391,TMP_537,TMP_538,TMP_539);
}
}
}
return TMP_540;
});
lisp.CL_put(G_456,G_54,TMP_532);
TMP_541=lisp.CL_symbolFunction(G_528);
lisp.CL_put(G_456,G_69,TMP_541);
}
CL_COMMON_LISP_CANONICALIZE_DIRECT_SLOT.lisp_name = 'CANONICALIZE-DIRECT-SLOT'
lisp.setSymbolFunction(G_543, CL_COMMON_LISP_CANONICALIZE_DIRECT_SLOT);
CL_COMMON_LISP_CANONICALIZE_DIRECT_SLOT_SPECS.lisp_name = 'CANONICALIZE-DIRECT-SLOT-SPECS'
lisp.setSymbolFunction(G_622, CL_COMMON_LISP_CANONICALIZE_DIRECT_SLOT_SPECS);
CL_COMMON_LISP_CANONICALIZE_DEFCLASS_OPTIONS.lisp_name = 'CANONICALIZE-DEFCLASS-OPTIONS'
lisp.setSymbolFunction(G_627, CL_COMMON_LISP_CANONICALIZE_DEFCLASS_OPTIONS);
CL_COMMON_LISP_CANONICALIZE_CLASS.lisp_name = 'CANONICALIZE-CLASS'
lisp.setSymbolFunction(G_657, CL_COMMON_LISP_CANONICALIZE_CLASS);
CL_COMMON_LISP_CHECK_DUPLICATE_DIRECT_SLOTS.lisp_name = 'CHECK-DUPLICATE-DIRECT-SLOTS'
lisp.setSymbolFunction(G_662, CL_COMMON_LISP_CHECK_DUPLICATE_DIRECT_SLOTS);
CL_COMMON_LISP_CHECK_DUPLICATE_DIRECT_DEFAULT_INITARGS.lisp_name = 'CHECK-DUPLICATE-DIRECT-DEFAULT-INITARGS'
lisp.setSymbolFunction(G_674, CL_COMMON_LISP_CHECK_DUPLICATE_DIRECT_DEFAULT_INITARGS);
CL_COMMON_LISP_ENSURE_CLASS.lisp_name = 'ENSURE-CLASS'
lisp.setSymbolFunction(G_685, CL_COMMON_LISP_ENSURE_CLASS);
CL_COMMON_LISP_ENSURE_CLASS_USING_CLASS.lisp_name = 'ENSURE-CLASS-USING-CLASS'
lisp.setSymbolFunction(G_686, CL_COMMON_LISP_ENSURE_CLASS_USING_CLASS);
CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_CLASS.lisp_name = 'MAKE-INSTANCE-STANDARD-CLASS'
lisp.setSymbolFunction(G_705, CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_CLASS);
CL_COMMON_LISP_STD_AFTER_INITIALIZATION_FOR_CLASSES.lisp_name = 'STD-AFTER-INITIALIZATION-FOR-CLASSES'
lisp.setSymbolFunction(G_701, CL_COMMON_LISP_STD_AFTER_INITIALIZATION_FOR_CLASSES);
CL_COMMON_LISP_MAKE_DIRECT_SLOT_DEFINITION.lisp_name = 'MAKE-DIRECT-SLOT-DEFINITION'
lisp.setSymbolFunction(G_731, CL_COMMON_LISP_MAKE_DIRECT_SLOT_DEFINITION);
CL_COMMON_LISP_MAKE_EFFECTIVE_SLOT_DEFINITION.lisp_name = 'MAKE-EFFECTIVE-SLOT-DEFINITION'
lisp.setSymbolFunction(G_768, CL_COMMON_LISP_MAKE_EFFECTIVE_SLOT_DEFINITION);
CL_COMMON_LISP_STD_FINALIZE_INHERITANCE.lisp_name = 'STD-FINALIZE-INHERITANCE'
lisp.setSymbolFunction(G_754, CL_COMMON_LISP_STD_FINALIZE_INHERITANCE);
CL_COMMON_LISP_STD_COMPUTE_CLASS_PRECEDENCE_LIST.lisp_name = 'STD-COMPUTE-CLASS-PRECEDENCE-LIST'
lisp.setSymbolFunction(G_781, CL_COMMON_LISP_STD_COMPUTE_CLASS_PRECEDENCE_LIST);
CL_COMMON_LISP_STD_TIE_BREAKER_RULE.lisp_name = 'STD-TIE-BREAKER-RULE'
lisp.setSymbolFunction(G_803, CL_COMMON_LISP_STD_TIE_BREAKER_RULE);
CL_COMMON_LISP_LOCAL_PRECEDENCE_ORDERING.lisp_name = 'LOCAL-PRECEDENCE-ORDERING'
lisp.setSymbolFunction(G_799, CL_COMMON_LISP_LOCAL_PRECEDENCE_ORDERING);
CL_COMMON_LISP_TOPOLOGICAL_SORT.lisp_name = 'TOPOLOGICAL-SORT'
lisp.setSymbolFunction(G_806, CL_COMMON_LISP_TOPOLOGICAL_SORT);
CL_COMMON_LISP_COLLECT_SUPERCLASSESSTAR.lisp_name = 'COLLECT-SUPERCLASSES*'
lisp.setSymbolFunction(G_798, CL_COMMON_LISP_COLLECT_SUPERCLASSESSTAR);
CL_COMMON_LISP_STD_COMPUTE_SLOTS.lisp_name = 'STD-COMPUTE-SLOTS'
lisp.setSymbolFunction(G_787, CL_COMMON_LISP_STD_COMPUTE_SLOTS);
CL_COMMON_LISP_STD_COMPUTE_EFFECTIVE_SLOT_DEFINITION.lisp_name = 'STD-COMPUTE-EFFECTIVE-SLOT-DEFINITION'
lisp.setSymbolFunction(G_878, CL_COMMON_LISP_STD_COMPUTE_EFFECTIVE_SLOT_DEFINITION);
CL_COMMON_LISP_STD_COMPUTE_DEFAULT_INITARGS.lisp_name = 'STD-COMPUTE-DEFAULT-INITARGS'
lisp.setSymbolFunction(G_793, CL_COMMON_LISP_STD_COMPUTE_DEFAULT_INITARGS);
lisp.CL_put(G_910,G_25,G_26);
CL_COMMON_LISP_GENERIC_FUNCTION_NAME.lisp_name = 'GENERIC-FUNCTION-NAME'
lisp.setSymbolFunction(G_912, CL_COMMON_LISP_GENERIC_FUNCTION_NAME);
TMP_915=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_916;
let L_G_STORE415__637;
let L_G413__635;
let L_GF__633;
let L_NAME__632;
L_NAME__632=arguments[0];
L_GF__633=arguments[1];
{
L_G413__635=lisp.values1(L_GF__633);
L_G_STORE415__637=lisp.values1(L_NAME__632);
TMP_916=lisp.callFunctionWithCallStack(G_279,L_G_STORE415__637,L_G413__635,G_315);
}
return TMP_916;
});
lisp.CL_setSymbolFunction(G_914,TMP_915);
TMP_917=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_925;
let TMP_924;
let TMP_923;
let TMP_922;
let L_STORE410__644;
let TMP_921;
let L_GENSYMS408__643;
let TMP_920;
let TMP_918;
let L_ARGS409__641;
let L_G417__639;
let L_G416__638;
L_G416__638=arguments[0];
{
L_G417__639=lisp.values1(L_G416__638);
{
L_ARGS409__641=lisp.values1(L_G417__639);
{
TMP_918=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_919;
let L_X__642;
L_X__642=arguments[0];
TMP_919=lisp.callFunctionWithCallStack(G_58);
return TMP_919;
});
TMP_920=lisp.callFunctionWithCallStack(G_60,TMP_918,L_ARGS409__641);
L_GENSYMS408__643=lisp.values1(TMP_920);
TMP_921=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE410__644=lisp.values1(TMP_921);
TMP_922=lisp.callFunctionWithCallStack(G_64,L_STORE410__644);
TMP_923=lisp.callFunctionWithCallStack(G_66,G_914,L_STORE410__644,L_GENSYMS408__643);
TMP_924=lisp.callFunctionWithCallStack(G_66,G_912,L_GENSYMS408__643);
TMP_925=lisp.CL_values(L_GENSYMS408__643,L_ARGS409__641,TMP_922,TMP_923,TMP_924);
}
}
}
return TMP_925;
});
lisp.CL_put(G_912,G_54,TMP_917);
TMP_926=lisp.CL_symbolFunction(G_914);
lisp.CL_put(G_912,G_69,TMP_926);
CL_COMMON_LISP_GENERIC_FUNCTION_METHODS.lisp_name = 'GENERIC-FUNCTION-METHODS'
lisp.setSymbolFunction(G_928, CL_COMMON_LISP_GENERIC_FUNCTION_METHODS);
TMP_932=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_933;
let L_G_STORE426__654;
let L_G424__652;
let L_GF__650;
let L_METHODS__649;
L_METHODS__649=arguments[0];
L_GF__650=arguments[1];
{
L_G424__652=lisp.values1(L_GF__650);
L_G_STORE426__654=lisp.values1(L_METHODS__649);
TMP_933=lisp.callFunctionWithCallStack(G_279,L_G_STORE426__654,L_G424__652,G_929);
}
return TMP_933;
});
lisp.CL_setSymbolFunction(G_931,TMP_932);
TMP_934=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_942;
let TMP_941;
let TMP_940;
let TMP_939;
let L_STORE421__661;
let TMP_938;
let L_GENSYMS419__660;
let TMP_937;
let TMP_935;
let L_ARGS420__658;
let L_G428__656;
let L_G427__655;
L_G427__655=arguments[0];
{
L_G428__656=lisp.values1(L_G427__655);
{
L_ARGS420__658=lisp.values1(L_G428__656);
{
TMP_935=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_936;
let L_X__659;
L_X__659=arguments[0];
TMP_936=lisp.callFunctionWithCallStack(G_58);
return TMP_936;
});
TMP_937=lisp.callFunctionWithCallStack(G_60,TMP_935,L_ARGS420__658);
L_GENSYMS419__660=lisp.values1(TMP_937);
TMP_938=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE421__661=lisp.values1(TMP_938);
TMP_939=lisp.callFunctionWithCallStack(G_64,L_STORE421__661);
TMP_940=lisp.callFunctionWithCallStack(G_66,G_931,L_STORE421__661,L_GENSYMS419__660);
TMP_941=lisp.callFunctionWithCallStack(G_66,G_928,L_GENSYMS419__660);
TMP_942=lisp.CL_values(L_GENSYMS419__660,L_ARGS420__658,TMP_939,TMP_940,TMP_941);
}
}
}
return TMP_942;
});
lisp.CL_put(G_928,G_54,TMP_934);
TMP_943=lisp.CL_symbolFunction(G_931);
lisp.CL_put(G_928,G_69,TMP_943);
CL_COMMON_LISP_GENERIC_FUNCTION_LAMBDA_LIST.lisp_name = 'GENERIC-FUNCTION-LAMBDA-LIST'
lisp.setSymbolFunction(G_945, CL_COMMON_LISP_GENERIC_FUNCTION_LAMBDA_LIST);
TMP_949=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_950;
let L_G_STORE437__671;
let L_G435__669;
let L_GF__667;
let L_LAMBDA_LIST__666;
L_LAMBDA_LIST__666=arguments[0];
L_GF__667=arguments[1];
{
L_G435__669=lisp.values1(L_GF__667);
L_G_STORE437__671=lisp.values1(L_LAMBDA_LIST__666);
TMP_950=lisp.callFunctionWithCallStack(G_279,L_G_STORE437__671,L_G435__669,G_946);
}
return TMP_950;
});
lisp.CL_setSymbolFunction(G_948,TMP_949);
TMP_951=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_959;
let TMP_958;
let TMP_957;
let TMP_956;
let L_STORE432__678;
let TMP_955;
let L_GENSYMS430__677;
let TMP_954;
let TMP_952;
let L_ARGS431__675;
let L_G439__673;
let L_G438__672;
L_G438__672=arguments[0];
{
L_G439__673=lisp.values1(L_G438__672);
{
L_ARGS431__675=lisp.values1(L_G439__673);
{
TMP_952=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_953;
let L_X__676;
L_X__676=arguments[0];
TMP_953=lisp.callFunctionWithCallStack(G_58);
return TMP_953;
});
TMP_954=lisp.callFunctionWithCallStack(G_60,TMP_952,L_ARGS431__675);
L_GENSYMS430__677=lisp.values1(TMP_954);
TMP_955=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE432__678=lisp.values1(TMP_955);
TMP_956=lisp.callFunctionWithCallStack(G_64,L_STORE432__678);
TMP_957=lisp.callFunctionWithCallStack(G_66,G_948,L_STORE432__678,L_GENSYMS430__677);
TMP_958=lisp.callFunctionWithCallStack(G_66,G_945,L_GENSYMS430__677);
TMP_959=lisp.CL_values(L_GENSYMS430__677,L_ARGS431__675,TMP_956,TMP_957,TMP_958);
}
}
}
return TMP_959;
});
lisp.CL_put(G_945,G_54,TMP_951);
TMP_960=lisp.CL_symbolFunction(G_948);
lisp.CL_put(G_945,G_69,TMP_960);
CL_COMMON_LISP_GENERIC_FUNCTION_METHOD_CLASS.lisp_name = 'GENERIC-FUNCTION-METHOD-CLASS'
lisp.setSymbolFunction(G_962, CL_COMMON_LISP_GENERIC_FUNCTION_METHOD_CLASS);
TMP_966=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_967;
let L_G_STORE448__688;
let L_G446__686;
let L_GF__684;
let L_METHOD_CLASS__683;
L_METHOD_CLASS__683=arguments[0];
L_GF__684=arguments[1];
{
L_G446__686=lisp.values1(L_GF__684);
L_G_STORE448__688=lisp.values1(L_METHOD_CLASS__683);
TMP_967=lisp.callFunctionWithCallStack(G_279,L_G_STORE448__688,L_G446__686,G_963);
}
return TMP_967;
});
lisp.CL_setSymbolFunction(G_965,TMP_966);
TMP_968=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_976;
let TMP_975;
let TMP_974;
let TMP_973;
let L_STORE443__695;
let TMP_972;
let L_GENSYMS441__694;
let TMP_971;
let TMP_969;
let L_ARGS442__692;
let L_G450__690;
let L_G449__689;
L_G449__689=arguments[0];
{
L_G450__690=lisp.values1(L_G449__689);
{
L_ARGS442__692=lisp.values1(L_G450__690);
{
TMP_969=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_970;
let L_X__693;
L_X__693=arguments[0];
TMP_970=lisp.callFunctionWithCallStack(G_58);
return TMP_970;
});
TMP_971=lisp.callFunctionWithCallStack(G_60,TMP_969,L_ARGS442__692);
L_GENSYMS441__694=lisp.values1(TMP_971);
TMP_972=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE443__695=lisp.values1(TMP_972);
TMP_973=lisp.callFunctionWithCallStack(G_64,L_STORE443__695);
TMP_974=lisp.callFunctionWithCallStack(G_66,G_965,L_STORE443__695,L_GENSYMS441__694);
TMP_975=lisp.callFunctionWithCallStack(G_66,G_962,L_GENSYMS441__694);
TMP_976=lisp.CL_values(L_GENSYMS441__694,L_ARGS442__692,TMP_973,TMP_974,TMP_975);
}
}
}
return TMP_976;
});
lisp.CL_put(G_962,G_54,TMP_968);
TMP_977=lisp.CL_symbolFunction(G_965);
lisp.CL_put(G_962,G_69,TMP_977);
CL_COMMON_LISP_CLASSES_TO_EMF_TABLE.lisp_name = 'CLASSES-TO-EMF-TABLE'
lisp.setSymbolFunction(G_979, CL_COMMON_LISP_CLASSES_TO_EMF_TABLE);
TMP_982=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_983;
let L_G_STORE459__705;
let L_G457__703;
let L_GF__701;
let L_CLASSES_TO_EMF_TABLE__700;
L_CLASSES_TO_EMF_TABLE__700=arguments[0];
L_GF__701=arguments[1];
{
L_G457__703=lisp.values1(L_GF__701);
L_G_STORE459__705=lisp.values1(L_CLASSES_TO_EMF_TABLE__700);
TMP_983=lisp.callFunctionWithCallStack(G_279,L_G_STORE459__705,L_G457__703,G_979);
}
return TMP_983;
});
lisp.CL_setSymbolFunction(G_981,TMP_982);
TMP_984=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_992;
let TMP_991;
let TMP_990;
let TMP_989;
let L_STORE454__712;
let TMP_988;
let L_GENSYMS452__711;
let TMP_987;
let TMP_985;
let L_ARGS453__709;
let L_G461__707;
let L_G460__706;
L_G460__706=arguments[0];
{
L_G461__707=lisp.values1(L_G460__706);
{
L_ARGS453__709=lisp.values1(L_G461__707);
{
TMP_985=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_986;
let L_X__710;
L_X__710=arguments[0];
TMP_986=lisp.callFunctionWithCallStack(G_58);
return TMP_986;
});
TMP_987=lisp.callFunctionWithCallStack(G_60,TMP_985,L_ARGS453__709);
L_GENSYMS452__711=lisp.values1(TMP_987);
TMP_988=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE454__712=lisp.values1(TMP_988);
TMP_989=lisp.callFunctionWithCallStack(G_64,L_STORE454__712);
TMP_990=lisp.callFunctionWithCallStack(G_66,G_981,L_STORE454__712,L_GENSYMS452__711);
TMP_991=lisp.callFunctionWithCallStack(G_66,G_979,L_GENSYMS452__711);
TMP_992=lisp.CL_values(L_GENSYMS452__711,L_ARGS453__709,TMP_989,TMP_990,TMP_991);
}
}
}
return TMP_992;
});
lisp.CL_put(G_979,G_54,TMP_984);
TMP_993=lisp.CL_symbolFunction(G_981);
lisp.CL_put(G_979,G_69,TMP_993);
CL_COMMON_LISP_GENERIC_FUNCTION_MIN_ARGC.lisp_name = 'GENERIC-FUNCTION-MIN-ARGC'
lisp.setSymbolFunction(G_995, CL_COMMON_LISP_GENERIC_FUNCTION_MIN_ARGC);
TMP_999=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1000;
let L_G_STORE470__722;
let L_G468__720;
let L_GF__718;
let L_MIN_ARGC__717;
L_MIN_ARGC__717=arguments[0];
L_GF__718=arguments[1];
{
L_G468__720=lisp.values1(L_GF__718);
L_G_STORE470__722=lisp.values1(L_MIN_ARGC__717);
TMP_1000=lisp.callFunctionWithCallStack(G_279,L_G_STORE470__722,L_G468__720,G_996);
}
return TMP_1000;
});
lisp.CL_setSymbolFunction(G_998,TMP_999);
TMP_1001=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1009;
let TMP_1008;
let TMP_1007;
let TMP_1006;
let L_STORE465__729;
let TMP_1005;
let L_GENSYMS463__728;
let TMP_1004;
let TMP_1002;
let L_ARGS464__726;
let L_G472__724;
let L_G471__723;
L_G471__723=arguments[0];
{
L_G472__724=lisp.values1(L_G471__723);
{
L_ARGS464__726=lisp.values1(L_G472__724);
{
TMP_1002=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1003;
let L_X__727;
L_X__727=arguments[0];
TMP_1003=lisp.callFunctionWithCallStack(G_58);
return TMP_1003;
});
TMP_1004=lisp.callFunctionWithCallStack(G_60,TMP_1002,L_ARGS464__726);
L_GENSYMS463__728=lisp.values1(TMP_1004);
TMP_1005=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE465__729=lisp.values1(TMP_1005);
TMP_1006=lisp.callFunctionWithCallStack(G_64,L_STORE465__729);
TMP_1007=lisp.callFunctionWithCallStack(G_66,G_998,L_STORE465__729,L_GENSYMS463__728);
TMP_1008=lisp.callFunctionWithCallStack(G_66,G_995,L_GENSYMS463__728);
TMP_1009=lisp.CL_values(L_GENSYMS463__728,L_ARGS464__726,TMP_1006,TMP_1007,TMP_1008);
}
}
}
return TMP_1009;
});
lisp.CL_put(G_995,G_54,TMP_1001);
TMP_1010=lisp.CL_symbolFunction(G_998);
lisp.CL_put(G_995,G_69,TMP_1010);
CL_COMMON_LISP_SET_FUNCALLABLE_INSTANCE_FUNCTION.lisp_name = 'SET-FUNCALLABLE-INSTANCE-FUNCTION'
lisp.setSymbolFunction(G_1012, CL_COMMON_LISP_SET_FUNCALLABLE_INSTANCE_FUNCTION);
lisp.CL_put(G_1015,G_25,G_26);
CL_COMMON_LISP_METHOD_FUNCTION.lisp_name = 'METHOD-FUNCTION'
lisp.setSymbolFunction(G_1017, CL_COMMON_LISP_METHOD_FUNCTION);
TMP_1020=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1021;
let L_G_STORE484__745;
let L_G482__743;
let L_METHOD__741;
let L_FUNCTION__740;
L_FUNCTION__740=arguments[0];
L_METHOD__741=arguments[1];
{
L_G482__743=lisp.values1(L_METHOD__741);
L_G_STORE484__745=lisp.values1(L_FUNCTION__740);
TMP_1021=lisp.callFunctionWithCallStack(G_279,L_G_STORE484__745,L_G482__743,G_518);
}
return TMP_1021;
});
lisp.CL_setSymbolFunction(G_1019,TMP_1020);
TMP_1022=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1030;
let TMP_1029;
let TMP_1028;
let TMP_1027;
let L_STORE479__752;
let TMP_1026;
let L_GENSYMS477__751;
let TMP_1025;
let TMP_1023;
let L_ARGS478__749;
let L_G486__747;
let L_G485__746;
L_G485__746=arguments[0];
{
L_G486__747=lisp.values1(L_G485__746);
{
L_ARGS478__749=lisp.values1(L_G486__747);
{
TMP_1023=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1024;
let L_X__750;
L_X__750=arguments[0];
TMP_1024=lisp.callFunctionWithCallStack(G_58);
return TMP_1024;
});
TMP_1025=lisp.callFunctionWithCallStack(G_60,TMP_1023,L_ARGS478__749);
L_GENSYMS477__751=lisp.values1(TMP_1025);
TMP_1026=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE479__752=lisp.values1(TMP_1026);
TMP_1027=lisp.callFunctionWithCallStack(G_64,L_STORE479__752);
TMP_1028=lisp.callFunctionWithCallStack(G_66,G_1019,L_STORE479__752,L_GENSYMS477__751);
TMP_1029=lisp.callFunctionWithCallStack(G_66,G_1017,L_GENSYMS477__751);
TMP_1030=lisp.CL_values(L_GENSYMS477__751,L_ARGS478__749,TMP_1027,TMP_1028,TMP_1029);
}
}
}
return TMP_1030;
});
lisp.CL_put(G_1017,G_54,TMP_1022);
TMP_1031=lisp.CL_symbolFunction(G_1019);
lisp.CL_put(G_1017,G_69,TMP_1031);
CL_COMMON_LISP_METHOD_GENERIC_FUNCTION.lisp_name = 'METHOD-GENERIC-FUNCTION'
lisp.setSymbolFunction(G_1033, CL_COMMON_LISP_METHOD_GENERIC_FUNCTION);
TMP_1037=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1038;
let L_G_STORE495__762;
let L_G493__760;
let L_METHOD__758;
let L_GENERIC_FUNCTION__757;
L_GENERIC_FUNCTION__757=arguments[0];
L_METHOD__758=arguments[1];
{
L_G493__760=lisp.values1(L_METHOD__758);
L_G_STORE495__762=lisp.values1(L_GENERIC_FUNCTION__757);
TMP_1038=lisp.callFunctionWithCallStack(G_279,L_G_STORE495__762,L_G493__760,G_1034);
}
return TMP_1038;
});
lisp.CL_setSymbolFunction(G_1036,TMP_1037);
TMP_1039=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1047;
let TMP_1046;
let TMP_1045;
let TMP_1044;
let L_STORE490__769;
let TMP_1043;
let L_GENSYMS488__768;
let TMP_1042;
let TMP_1040;
let L_ARGS489__766;
let L_G497__764;
let L_G496__763;
L_G496__763=arguments[0];
{
L_G497__764=lisp.values1(L_G496__763);
{
L_ARGS489__766=lisp.values1(L_G497__764);
{
TMP_1040=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1041;
let L_X__767;
L_X__767=arguments[0];
TMP_1041=lisp.callFunctionWithCallStack(G_58);
return TMP_1041;
});
TMP_1042=lisp.callFunctionWithCallStack(G_60,TMP_1040,L_ARGS489__766);
L_GENSYMS488__768=lisp.values1(TMP_1042);
TMP_1043=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE490__769=lisp.values1(TMP_1043);
TMP_1044=lisp.callFunctionWithCallStack(G_64,L_STORE490__769);
TMP_1045=lisp.callFunctionWithCallStack(G_66,G_1036,L_STORE490__769,L_GENSYMS488__768);
TMP_1046=lisp.callFunctionWithCallStack(G_66,G_1033,L_GENSYMS488__768);
TMP_1047=lisp.CL_values(L_GENSYMS488__768,L_ARGS489__766,TMP_1044,TMP_1045,TMP_1046);
}
}
}
return TMP_1047;
});
lisp.CL_put(G_1033,G_54,TMP_1039);
TMP_1048=lisp.CL_symbolFunction(G_1036);
lisp.CL_put(G_1033,G_69,TMP_1048);
CL_COMMON_LISP_METHOD_LAMBDA_LIST.lisp_name = 'METHOD-LAMBDA-LIST'
lisp.setSymbolFunction(G_1050, CL_COMMON_LISP_METHOD_LAMBDA_LIST);
TMP_1053=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1054;
let L_G_STORE506__779;
let L_G504__777;
let L_METHOD__775;
let L_LAMBDA_LIST__774;
L_LAMBDA_LIST__774=arguments[0];
L_METHOD__775=arguments[1];
{
L_G504__777=lisp.values1(L_METHOD__775);
L_G_STORE506__779=lisp.values1(L_LAMBDA_LIST__774);
TMP_1054=lisp.callFunctionWithCallStack(G_279,L_G_STORE506__779,L_G504__777,G_946);
}
return TMP_1054;
});
lisp.CL_setSymbolFunction(G_1052,TMP_1053);
TMP_1055=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1063;
let TMP_1062;
let TMP_1061;
let TMP_1060;
let L_STORE501__786;
let TMP_1059;
let L_GENSYMS499__785;
let TMP_1058;
let TMP_1056;
let L_ARGS500__783;
let L_G508__781;
let L_G507__780;
L_G507__780=arguments[0];
{
L_G508__781=lisp.values1(L_G507__780);
{
L_ARGS500__783=lisp.values1(L_G508__781);
{
TMP_1056=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1057;
let L_X__784;
L_X__784=arguments[0];
TMP_1057=lisp.callFunctionWithCallStack(G_58);
return TMP_1057;
});
TMP_1058=lisp.callFunctionWithCallStack(G_60,TMP_1056,L_ARGS500__783);
L_GENSYMS499__785=lisp.values1(TMP_1058);
TMP_1059=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE501__786=lisp.values1(TMP_1059);
TMP_1060=lisp.callFunctionWithCallStack(G_64,L_STORE501__786);
TMP_1061=lisp.callFunctionWithCallStack(G_66,G_1052,L_STORE501__786,L_GENSYMS499__785);
TMP_1062=lisp.callFunctionWithCallStack(G_66,G_1050,L_GENSYMS499__785);
TMP_1063=lisp.CL_values(L_GENSYMS499__785,L_ARGS500__783,TMP_1060,TMP_1061,TMP_1062);
}
}
}
return TMP_1063;
});
lisp.CL_put(G_1050,G_54,TMP_1055);
TMP_1064=lisp.CL_symbolFunction(G_1052);
lisp.CL_put(G_1050,G_69,TMP_1064);
CL_COMMON_LISP_METHOD_SPECIALIZERS.lisp_name = 'METHOD-SPECIALIZERS'
lisp.setSymbolFunction(G_1066, CL_COMMON_LISP_METHOD_SPECIALIZERS);
TMP_1070=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1071;
let L_G_STORE517__796;
let L_G515__794;
let L_METHOD__792;
let L_SPECIALIZERS__791;
L_SPECIALIZERS__791=arguments[0];
L_METHOD__792=arguments[1];
{
L_G515__794=lisp.values1(L_METHOD__792);
L_G_STORE517__796=lisp.values1(L_SPECIALIZERS__791);
TMP_1071=lisp.callFunctionWithCallStack(G_279,L_G_STORE517__796,L_G515__794,G_1067);
}
return TMP_1071;
});
lisp.CL_setSymbolFunction(G_1069,TMP_1070);
TMP_1072=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1080;
let TMP_1079;
let TMP_1078;
let TMP_1077;
let L_STORE512__803;
let TMP_1076;
let L_GENSYMS510__802;
let TMP_1075;
let TMP_1073;
let L_ARGS511__800;
let L_G519__798;
let L_G518__797;
L_G518__797=arguments[0];
{
L_G519__798=lisp.values1(L_G518__797);
{
L_ARGS511__800=lisp.values1(L_G519__798);
{
TMP_1073=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1074;
let L_X__801;
L_X__801=arguments[0];
TMP_1074=lisp.callFunctionWithCallStack(G_58);
return TMP_1074;
});
TMP_1075=lisp.callFunctionWithCallStack(G_60,TMP_1073,L_ARGS511__800);
L_GENSYMS510__802=lisp.values1(TMP_1075);
TMP_1076=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE512__803=lisp.values1(TMP_1076);
TMP_1077=lisp.callFunctionWithCallStack(G_64,L_STORE512__803);
TMP_1078=lisp.callFunctionWithCallStack(G_66,G_1069,L_STORE512__803,L_GENSYMS510__802);
TMP_1079=lisp.callFunctionWithCallStack(G_66,G_1066,L_GENSYMS510__802);
TMP_1080=lisp.CL_values(L_GENSYMS510__802,L_ARGS511__800,TMP_1077,TMP_1078,TMP_1079);
}
}
}
return TMP_1080;
});
lisp.CL_put(G_1066,G_54,TMP_1072);
TMP_1081=lisp.CL_symbolFunction(G_1069);
lisp.CL_put(G_1066,G_69,TMP_1081);
CL_COMMON_LISP_METHOD_QUALIFIERS.lisp_name = 'METHOD-QUALIFIERS'
lisp.setSymbolFunction(G_1083, CL_COMMON_LISP_METHOD_QUALIFIERS);
TMP_1087=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1088;
let L_G_STORE528__813;
let L_G526__811;
let L_METHOD__809;
let L_QUALIFIERS__808;
L_QUALIFIERS__808=arguments[0];
L_METHOD__809=arguments[1];
{
L_G526__811=lisp.values1(L_METHOD__809);
L_G_STORE528__813=lisp.values1(L_QUALIFIERS__808);
TMP_1088=lisp.callFunctionWithCallStack(G_279,L_G_STORE528__813,L_G526__811,G_1084);
}
return TMP_1088;
});
lisp.CL_setSymbolFunction(G_1086,TMP_1087);
TMP_1089=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1097;
let TMP_1096;
let TMP_1095;
let TMP_1094;
let L_STORE523__820;
let TMP_1093;
let L_GENSYMS521__819;
let TMP_1092;
let TMP_1090;
let L_ARGS522__817;
let L_G530__815;
let L_G529__814;
L_G529__814=arguments[0];
{
L_G530__815=lisp.values1(L_G529__814);
{
L_ARGS522__817=lisp.values1(L_G530__815);
{
TMP_1090=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1091;
let L_X__818;
L_X__818=arguments[0];
TMP_1091=lisp.callFunctionWithCallStack(G_58);
return TMP_1091;
});
TMP_1092=lisp.callFunctionWithCallStack(G_60,TMP_1090,L_ARGS522__817);
L_GENSYMS521__819=lisp.values1(TMP_1092);
TMP_1093=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE523__820=lisp.values1(TMP_1093);
TMP_1094=lisp.callFunctionWithCallStack(G_64,L_STORE523__820);
TMP_1095=lisp.callFunctionWithCallStack(G_66,G_1086,L_STORE523__820,L_GENSYMS521__819);
TMP_1096=lisp.callFunctionWithCallStack(G_66,G_1083,L_GENSYMS521__819);
TMP_1097=lisp.CL_values(L_GENSYMS521__819,L_ARGS522__817,TMP_1094,TMP_1095,TMP_1096);
}
}
}
return TMP_1097;
});
lisp.CL_put(G_1083,G_54,TMP_1089);
TMP_1098=lisp.CL_symbolFunction(G_1086);
lisp.CL_put(G_1083,G_69,TMP_1098);
CL_COMMON_LISP_CANONICALIZE_DEFGENERIC_OPTION.lisp_name = 'CANONICALIZE-DEFGENERIC-OPTION'
lisp.setSymbolFunction(G_1101, CL_COMMON_LISP_CANONICALIZE_DEFGENERIC_OPTION);
CL_COMMON_LISP_CANONICALIZE_DEFGENERIC_OPTIONS.lisp_name = 'CANONICALIZE-DEFGENERIC-OPTIONS'
lisp.setSymbolFunction(G_1124, CL_COMMON_LISP_CANONICALIZE_DEFGENERIC_OPTIONS);
{
TMP_1127=lisp.callFunctionWithCallStack(G_522);
L_GENERIC_FUNCTION_TABLE__831=lisp.values1(TMP_1127);
TMP_1128=lisp.callFunctionWithCallStack(G_522);
L_SETF_GENERIC_FUNCTION_TABLE__832=lisp.values1(TMP_1128);
TMP_1130=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1135;
let TMP_1134;
let TMP_1133;
let TMP_1132;
let TMP_1131;
let L_FUNCTION_NAME__833;
L_FUNCTION_NAME__833=arguments[0];
TMP_1131=lisp.CL_consp(L_FUNCTION_NAME__833);
if(lisp.values1(TMP_1131) !== lisp.S_nil){
TMP_1133=lisp.callFunctionWithCallStack(G_554,L_FUNCTION_NAME__833);
TMP_1134=lisp.callFunctionWithCallStack(G_525,TMP_1133,L_SETF_GENERIC_FUNCTION_TABLE__832);
TMP_1132=TMP_1134;
}else{
TMP_1135=lisp.callFunctionWithCallStack(G_525,L_FUNCTION_NAME__833,L_GENERIC_FUNCTION_TABLE__831);
TMP_1132=TMP_1135;
}
return TMP_1132;
});
lisp.CL_setSymbolFunction(G_1129,TMP_1130);
TMP_1137=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1142;
let L_G_STORE547__843;
let L_G546__842;
let L_G545__841;
let TMP_1141;
let L_G_STORE544__840;
let L_G543__839;
let L_G542__838;
let TMP_1140;
let TMP_1139;
let TMP_1138;
let L_FUNCTION_NAME__836;
let L_GF__835;
L_GF__835=arguments[0];
L_FUNCTION_NAME__836=arguments[1];
TMP_1138=lisp.CL_consp(L_FUNCTION_NAME__836);
if(lisp.values1(TMP_1138) !== lisp.S_nil){
{
TMP_1140=lisp.callFunctionWithCallStack(G_554,L_FUNCTION_NAME__836);
L_G542__838=lisp.values1(TMP_1140);
L_G543__839=lisp.values1(L_SETF_GENERIC_FUNCTION_TABLE__832);
L_G_STORE544__840=lisp.values1(L_GF__835);
TMP_1141=lisp.callFunctionWithCallStack(G_531,L_G_STORE544__840,L_G542__838,L_G543__839);
}
TMP_1139=TMP_1141;
}else{
{
L_G545__841=lisp.values1(L_FUNCTION_NAME__836);
L_G546__842=lisp.values1(L_GENERIC_FUNCTION_TABLE__831);
L_G_STORE547__843=lisp.values1(L_GF__835);
TMP_1142=lisp.callFunctionWithCallStack(G_531,L_G_STORE547__843,L_G545__841,L_G546__842);
}
TMP_1139=TMP_1142;
}
return TMP_1139;
});
lisp.CL_setSymbolFunction(G_1136,TMP_1137);
TMP_1143=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1151;
let TMP_1150;
let TMP_1149;
let TMP_1148;
let L_STORE539__850;
let TMP_1147;
let L_GENSYMS537__849;
let TMP_1146;
let TMP_1144;
let L_ARGS538__847;
let L_G549__845;
let L_G548__844;
L_G548__844=arguments[0];
{
L_G549__845=lisp.values1(L_G548__844);
{
L_ARGS538__847=lisp.values1(L_G549__845);
{
TMP_1144=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1145;
let L_X__848;
L_X__848=arguments[0];
TMP_1145=lisp.callFunctionWithCallStack(G_58);
return TMP_1145;
});
TMP_1146=lisp.callFunctionWithCallStack(G_60,TMP_1144,L_ARGS538__847);
L_GENSYMS537__849=lisp.values1(TMP_1146);
TMP_1147=lisp.callFunctionWithCallStack(G_58,G_61.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE539__850=lisp.values1(TMP_1147);
TMP_1148=lisp.callFunctionWithCallStack(G_64,L_STORE539__850);
TMP_1149=lisp.callFunctionWithCallStack(G_66,G_1136,L_STORE539__850,L_GENSYMS537__849);
TMP_1150=lisp.callFunctionWithCallStack(G_66,G_1129,L_GENSYMS537__849);
TMP_1151=lisp.CL_values(L_GENSYMS537__849,L_ARGS538__847,TMP_1148,TMP_1149,TMP_1150);
}
}
}
return TMP_1151;
});
lisp.CL_put(G_1129,G_54,TMP_1143);
TMP_1152=lisp.CL_symbolFunction(G_1136);
lisp.CL_put(G_1129,G_69,TMP_1152);
}
CL_COMMON_LISP_ENSURE_GENERIC_FUNCTION.lisp_name = 'ENSURE-GENERIC-FUNCTION'
lisp.setSymbolFunction(G_1154, CL_COMMON_LISP_ENSURE_GENERIC_FUNCTION);
CL_COMMON_LISP_ENSURE_GENERIC_FUNCTION_USING_CLASS.lisp_name = 'ENSURE-GENERIC-FUNCTION-USING-CLASS'
lisp.setSymbolFunction(G_1159, CL_COMMON_LISP_ENSURE_GENERIC_FUNCTION_USING_CLASS);
CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_GENERIC_FUNCTION.lisp_name = 'MAKE-INSTANCE-STANDARD-GENERIC-FUNCTION'
lisp.setSymbolFunction(G_1170, CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_GENERIC_FUNCTION);
CL_COMMON_LISP_FINALIZE_GENERIC_FUNCTION.lisp_name = 'FINALIZE-GENERIC-FUNCTION'
lisp.setSymbolFunction(G_1188, CL_COMMON_LISP_FINALIZE_GENERIC_FUNCTION);
CL_COMMON_LISP_REQUIRED_CLASSES.lisp_name = 'REQUIRED-CLASSES'
lisp.setSymbolFunction(G_1202, CL_COMMON_LISP_REQUIRED_CLASSES);
CL_COMMON_LISP_STD_COMPUTE_DISCRIMINATING_FUNCTION.lisp_name = 'STD-COMPUTE-DISCRIMINATING-FUNCTION'
lisp.setSymbolFunction(G_1194, CL_COMMON_LISP_STD_COMPUTE_DISCRIMINATING_FUNCTION);
CL_COMMON_LISP_SLOW_METHOD_LOOKUP.lisp_name = 'SLOW-METHOD-LOOKUP'
lisp.setSymbolFunction(G_1224, CL_COMMON_LISP_SLOW_METHOD_LOOKUP);
CL_COMMON_LISP_COMPUTE_APPLICABLE_METHODS.lisp_name = 'COMPUTE-APPLICABLE-METHODS'
lisp.setSymbolFunction(G_1237, CL_COMMON_LISP_COMPUTE_APPLICABLE_METHODS);
CL_COMMON_LISP_PERCENTCOMPUTE_APPLICABLE_METHODS.lisp_name = '%COMPUTE-APPLICABLE-METHODS'
lisp.setSymbolFunction(G_1227, CL_COMMON_LISP_PERCENTCOMPUTE_APPLICABLE_METHODS);
CL_COMMON_LISP_STD_METHOD_MORE_SPECIFIC_P.lisp_name = 'STD-METHOD-MORE-SPECIFIC-P'
lisp.setSymbolFunction(G_1265, CL_COMMON_LISP_STD_METHOD_MORE_SPECIFIC_P);
CL_COMMON_LISP_SUBCLASSP.lisp_name = 'SUBCLASSP'
lisp.setSymbolFunction(G_1254, CL_COMMON_LISP_SUBCLASSP);
CL_COMMON_LISP_SUB_SPECIALIZER_P.lisp_name = 'SUB-SPECIALIZER-P'
lisp.setSymbolFunction(G_1276, CL_COMMON_LISP_SUB_SPECIALIZER_P);
CL_COMMON_LISP_PRIMARY_METHOD_P.lisp_name = 'PRIMARY-METHOD-P'
lisp.setSymbolFunction(G_1294, CL_COMMON_LISP_PRIMARY_METHOD_P);
CL_COMMON_LISP_BEFORE_METHOD_P.lisp_name = 'BEFORE-METHOD-P'
lisp.setSymbolFunction(G_1298, CL_COMMON_LISP_BEFORE_METHOD_P);
CL_COMMON_LISP_AFTER_METHOD_P.lisp_name = 'AFTER-METHOD-P'
lisp.setSymbolFunction(G_1303, CL_COMMON_LISP_AFTER_METHOD_P);
CL_COMMON_LISP_AROUND_METHOD_P.lisp_name = 'AROUND-METHOD-P'
lisp.setSymbolFunction(G_1308, CL_COMMON_LISP_AROUND_METHOD_P);
CL_COMMON_LISP_STD_COMPUTE_EFFECTIVE_METHOD_FUNCTION.lisp_name = 'STD-COMPUTE-EFFECTIVE-METHOD-FUNCTION'
lisp.setSymbolFunction(G_1232, CL_COMMON_LISP_STD_COMPUTE_EFFECTIVE_METHOD_FUNCTION);
CL_COMMON_LISP_COMPUTE_PRIMARY_EMFUN.lisp_name = 'COMPUTE-PRIMARY-EMFUN'
lisp.setSymbolFunction(G_1331, CL_COMMON_LISP_COMPUTE_PRIMARY_EMFUN);
CL_COMMON_LISP_ANALYZE_LAMBDA_LIST.lisp_name = 'ANALYZE-LAMBDA-LIST'
lisp.setSymbolFunction(G_1183, CL_COMMON_LISP_ANALYZE_LAMBDA_LIST);
CL_COMMON_LISP_EXTRACT_LAMBDA_LIST.lisp_name = 'EXTRACT-LAMBDA-LIST'
lisp.setSymbolFunction(G_1442, CL_COMMON_LISP_EXTRACT_LAMBDA_LIST);
CL_COMMON_LISP_EXTRACT_SPECIALIZERS.lisp_name = 'EXTRACT-SPECIALIZERS'
lisp.setSymbolFunction(G_1462, CL_COMMON_LISP_EXTRACT_SPECIALIZERS);
CL_COMMON_LISP_PARSE_DEFMETHOD.lisp_name = 'PARSE-DEFMETHOD'
lisp.setSymbolFunction(G_1465, CL_COMMON_LISP_PARSE_DEFMETHOD);
CL_COMMON_LISP_KLUDGE_ARGLIST.lisp_name = 'KLUDGE-ARGLIST'
lisp.setSymbolFunction(G_1501, CL_COMMON_LISP_KLUDGE_ARGLIST);
CL_COMMON_LISP_ENSURE_METHOD.lisp_name = 'ENSURE-METHOD'
lisp.setSymbolFunction(G_1518, CL_COMMON_LISP_ENSURE_METHOD);
CL_COMMON_LISP_CANONICALIZE_METHOD_SPECIALIZERS.lisp_name = 'CANONICALIZE-METHOD-SPECIALIZERS'
lisp.setSymbolFunction(G_1538, CL_COMMON_LISP_CANONICALIZE_METHOD_SPECIALIZERS);
CL_COMMON_LISP_CANONICALIZE_METHOD_SPECIALIZER.lisp_name = 'CANONICALIZE-METHOD-SPECIALIZER'
lisp.setSymbolFunction(G_1539, CL_COMMON_LISP_CANONICALIZE_METHOD_SPECIALIZER);
CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_METHOD.lisp_name = 'MAKE-INSTANCE-STANDARD-METHOD'
lisp.setSymbolFunction(G_1532, CL_COMMON_LISP_MAKE_INSTANCE_STANDARD_METHOD);
CL_COMMON_LISP_ADD_METHOD.lisp_name = 'ADD-METHOD'
lisp.setSymbolFunction(G_1536, CL_COMMON_LISP_ADD_METHOD);
CL_COMMON_LISP_REMOVE_METHOD.lisp_name = 'REMOVE-METHOD'
lisp.setSymbolFunction(G_1577, CL_COMMON_LISP_REMOVE_METHOD);
CL_COMMON_LISP_FIND_METHOD.lisp_name = 'FIND-METHOD'
lisp.setSymbolFunction(G_1576, CL_COMMON_LISP_FIND_METHOD);
CL_COMMON_LISP_ADD_READER_METHOD.lisp_name = 'ADD-READER-METHOD'
lisp.setSymbolFunction(G_743, CL_COMMON_LISP_ADD_READER_METHOD);
CL_COMMON_LISP_ADD_WRITER_METHOD.lisp_name = 'ADD-WRITER-METHOD'
lisp.setSymbolFunction(G_749, CL_COMMON_LISP_ADD_WRITER_METHOD);
{
TMP_1623=G_37.func();
L_STANDARD_CLASS__1163=lisp.values1(TMP_1623);
{
L_G699__1164=lisp.values1(L_STANDARD_CLASS__1163);
L_G_STORE700__1165=lisp.values1(L_STANDARD_CLASS__1163);
lisp.callFunctionWithCallStack(G_50,L_G_STORE700__1165,L_G699__1164);
}
{
L_G701__1166=lisp.values1(L_STANDARD_CLASS__1163);
lisp.callFunctionWithCallStack(G_317,G_697,L_G701__1166);
}
{
L_G703__1168=lisp.values1(L_STANDARD_CLASS__1163);
lisp.callFunctionWithCallStack(G_385,lisp.S_nil,L_G703__1168);
}
{
L_G705__1170=lisp.values1(L_STANDARD_CLASS__1163);
lisp.callFunctionWithCallStack(G_351,lisp.S_nil,L_G705__1170);
}
{
L_G707__1172=lisp.values1(L_STANDARD_CLASS__1163);
lisp.callFunctionWithCallStack(G_368,lisp.S_nil,L_G707__1172);
}
{
L_G709__1174=lisp.values1(L_STANDARD_CLASS__1163);
TMP_1624=lisp.callFunctionWithCallStack(G_64,L_STANDARD_CLASS__1163);
L_G_STORE710__1175=lisp.values1(TMP_1624);
lisp.callFunctionWithCallStack(G_334,L_G_STORE710__1175,L_G709__1174);
}
{
L_G711__1176=lisp.values1(L_STANDARD_CLASS__1163);
lisp.callFunctionWithCallStack(G_419,lisp.S_nil,L_G711__1176);
}
{
L_G713__1178=lisp.values1(L_STANDARD_CLASS__1163);
lisp.callFunctionWithCallStack(G_402,lisp.S_nil,L_G713__1178);
}
}
lisp.setSymbolValue(G_24, lisp.values1(lisp.values1(lisp.values1(L_STANDARD_CLASS__1163))));
{
L_G_STORE716__1181=lisp.values1(lisp.symbolValue(G_24));
lisp.callFunctionWithCallStack(G_528,L_G_STORE716__1181,G_697);
}
{
{
TMP_1625=G_37.func(G_38,lisp.symbolValue(G_24));
L_CLASS__1183=lisp.values1(TMP_1625);
{
L_G719__1184=lisp.values1(L_CLASS__1183);
lisp.callFunctionWithCallStack(G_317,G_26,L_G719__1184);
}
{
L_G721__1186=lisp.values1(L_CLASS__1183);
lisp.callFunctionWithCallStack(G_385,lisp.S_nil,L_G721__1186);
}
{
L_G723__1188=lisp.values1(L_CLASS__1183);
lisp.callFunctionWithCallStack(G_351,lisp.S_nil,L_G723__1188);
}
{
L_G725__1190=lisp.values1(L_CLASS__1183);
lisp.callFunctionWithCallStack(G_368,lisp.S_nil,L_G725__1190);
}
{
L_G727__1192=lisp.values1(L_CLASS__1183);
TMP_1626=lisp.callFunctionWithCallStack(G_64,L_CLASS__1183);
L_G_STORE728__1193=lisp.values1(TMP_1626);
lisp.callFunctionWithCallStack(G_334,L_G_STORE728__1193,L_G727__1192);
}
{
L_G729__1194=lisp.values1(L_CLASS__1183);
lisp.callFunctionWithCallStack(G_419,lisp.S_nil,L_G729__1194);
}
{
L_G731__1196=lisp.values1(L_CLASS__1183);
lisp.callFunctionWithCallStack(G_402,lisp.S_nil,L_G731__1196);
}
}
L_G_STORE718__1198=lisp.values1(lisp.values1(lisp.values1(L_CLASS__1183)));
lisp.callFunctionWithCallStack(G_528,L_G_STORE718__1198,G_26);
}
TMP_1627=lisp.callFunctionWithCallStack(G_456,G_720,lisp.S_nil);
TMP_1628=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1627,G_720,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1628);
TMP_1629=lisp.callFunctionWithCallStack(G_456,G_697,lisp.S_nil);
TMP_1630=lisp.callFunctionWithCallStack(G_64,G_104,lisp.makeCons(G_102, lisp.S_nil),G_102,G_315);
TMP_1631=lisp.callFunctionWithCallStack(G_64,G_104,lisp.makeCons(G_694, lisp.S_nil),G_102,G_349);
TMP_1632=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
return lisp.values1(lisp.S_nil);
});
TMP_1633=lisp.callFunctionWithCallStack(G_64,G_102,G_366,G_106,lisp.makeCons(G_612, lisp.makeCons(lisp.S_nil, lisp.S_nil)),G_108,TMP_1632);
TMP_1634=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
return lisp.values1(lisp.S_nil);
});
TMP_1635=lisp.callFunctionWithCallStack(G_64,G_102,G_400,G_106,lisp.makeCons(G_612, lisp.makeCons(lisp.S_nil, lisp.S_nil)),G_108,TMP_1634);
TMP_1636=lisp.callFunctionWithCallStack(G_64,G_102,G_331);
TMP_1638=lisp.callFunctionWithCallStack(G_64,G_102,G_1637);
TMP_1639=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
return lisp.values1(lisp.S_nil);
});
TMP_1640=lisp.callFunctionWithCallStack(G_64,G_102,G_383,G_106,lisp.makeCons(G_612, lisp.makeCons(lisp.S_nil, lisp.S_nil)),G_108,TMP_1639);
TMP_1642=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
return lisp.values1(lisp.S_nil);
});
TMP_1643=lisp.callFunctionWithCallStack(G_64,G_102,G_1641,G_106,lisp.makeCons(G_612, lisp.makeCons(lisp.S_nil, lisp.S_nil)),G_108,TMP_1642);
TMP_1644=lisp.callFunctionWithCallStack(G_64,TMP_1630,TMP_1631,TMP_1633,TMP_1635,TMP_1636,TMP_1638,TMP_1640,TMP_1643);
G_686.func(TMP_1629,G_697,G_694,lisp.S_nil,G_692,TMP_1644);
TMP_1646=lisp.callFunctionWithCallStack(G_456,G_1645,lisp.S_nil);
TMP_1647=lisp.callFunctionWithCallStack(G_64,G_102,G_315);
TMP_1648=lisp.callFunctionWithCallStack(G_64,G_102,G_929);
TMP_1649=lisp.callFunctionWithCallStack(G_64,G_102,G_946);
TMP_1650=lisp.callFunctionWithCallStack(G_64,G_102,G_963);
TMP_1652=lisp.callFunctionWithCallStack(G_64,G_102,G_1651);
TMP_1653=lisp.callFunctionWithCallStack(G_64,G_102,G_1013);
TMP_1654=lisp.callFunctionWithCallStack(G_64,TMP_1647,TMP_1648,TMP_1649,TMP_1650,TMP_1652,TMP_1653);
TMP_1655=G_686.func(TMP_1646,G_1645,G_694,lisp.S_nil,G_692,TMP_1654);
lisp.setSymbolValue(G_910, lisp.values1(TMP_1655));
TMP_1657=lisp.callFunctionWithCallStack(G_456,G_1656,lisp.S_nil);
TMP_1658=lisp.callFunctionWithCallStack(G_64,G_102,G_518);
TMP_1659=lisp.callFunctionWithCallStack(G_64,G_102,G_1034);
TMP_1660=lisp.callFunctionWithCallStack(G_64,G_102,G_946);
TMP_1661=lisp.callFunctionWithCallStack(G_64,G_102,G_1067);
TMP_1662=lisp.callFunctionWithCallStack(G_64,G_102,G_1084);
TMP_1663=lisp.callFunctionWithCallStack(G_64,TMP_1658,TMP_1659,TMP_1660,TMP_1661,TMP_1662);
TMP_1664=G_686.func(TMP_1657,G_1656,G_694,lisp.S_nil,G_692,TMP_1663);
lisp.setSymbolValue(G_1015, lisp.values1(TMP_1664));
TMP_1665=lisp.callFunctionWithCallStack(G_456,G_509,lisp.S_nil);
TMP_1666=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1665,G_509,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1666);
TMP_1668=lisp.callFunctionWithCallStack(G_456,G_1667,lisp.S_nil);
TMP_1669=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1668,G_1667,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1669);
TMP_1670=lisp.callFunctionWithCallStack(G_456,G_504,lisp.S_nil);
TMP_1671=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1670,G_504,G_694,lisp.makeCons(G_509, lisp.makeCons(G_1667, lisp.S_nil)),G_692,TMP_1671);
TMP_1673=lisp.callFunctionWithCallStack(G_456,G_1672,lisp.S_nil);
TMP_1674=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1673,G_1672,G_694,lisp.makeCons(G_504, lisp.S_nil),G_692,TMP_1674);
TMP_1675=lisp.callFunctionWithCallStack(G_456,G_480,lisp.S_nil);
TMP_1676=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1675,G_480,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1676);
TMP_1677=lisp.callFunctionWithCallStack(G_456,G_472,lisp.S_nil);
TMP_1678=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1677,G_472,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1678);
TMP_1680=lisp.callFunctionWithCallStack(G_456,G_1679,lisp.S_nil);
TMP_1681=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1680,G_1679,G_694,lisp.makeCons(G_472, lisp.S_nil),G_692,TMP_1681);
TMP_1683=lisp.callFunctionWithCallStack(G_456,G_1682,lisp.S_nil);
TMP_1684=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1683,G_1682,G_694,lisp.makeCons(G_1679, lisp.S_nil),G_692,TMP_1684);
TMP_1686=lisp.callFunctionWithCallStack(G_456,G_1685,lisp.S_nil);
TMP_1687=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1686,G_1685,G_694,lisp.makeCons(G_472, lisp.S_nil),G_692,TMP_1687);
TMP_1688=lisp.callFunctionWithCallStack(G_456,G_64,lisp.S_nil);
TMP_1689=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1688,G_64,G_694,lisp.makeCons(G_1667, lisp.S_nil),G_692,TMP_1689);
TMP_1690=lisp.callFunctionWithCallStack(G_456,G_476,lisp.S_nil);
TMP_1691=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1690,G_476,G_694,lisp.makeCons(G_64, lisp.S_nil),G_692,TMP_1691);
TMP_1692=lisp.callFunctionWithCallStack(G_456,G_468,lisp.S_nil);
TMP_1693=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1692,G_468,G_694,lisp.makeCons(G_1679, lisp.S_nil),G_692,TMP_1693);
TMP_1694=lisp.callFunctionWithCallStack(G_456,G_463,lisp.S_nil);
TMP_1695=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1694,G_463,G_694,lisp.makeCons(G_1682, lisp.S_nil),G_692,TMP_1695);
TMP_1696=lisp.callFunctionWithCallStack(G_456,G_518,lisp.S_nil);
TMP_1697=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1696,G_518,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1697);
TMP_1698=lisp.callFunctionWithCallStack(G_456,G_485,lisp.S_nil);
TMP_1699=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1698,G_485,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1699);
TMP_1700=lisp.callFunctionWithCallStack(G_456,G_459,lisp.S_nil);
TMP_1701=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1700,G_459,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1701);
TMP_1702=lisp.callFunctionWithCallStack(G_456,G_5,lisp.S_nil);
TMP_1703=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1702,G_5,G_694,lisp.makeCons(G_459, lisp.makeCons(G_64, lisp.S_nil)),G_692,TMP_1703);
TMP_1704=lisp.callFunctionWithCallStack(G_456,G_489,lisp.S_nil);
TMP_1705=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1704,G_489,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1705);
TMP_1707=lisp.callFunctionWithCallStack(G_456,G_1706,lisp.S_nil);
TMP_1708=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1707,G_1706,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1708);
TMP_1710=lisp.callFunctionWithCallStack(G_456,G_1709,lisp.S_nil);
TMP_1711=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1710,G_1709,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1711);
TMP_1713=lisp.callFunctionWithCallStack(G_456,G_1712,lisp.S_nil);
TMP_1714=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1713,G_1712,G_694,lisp.makeCons(G_1682, lisp.S_nil),G_692,TMP_1714);
TMP_1715=lisp.callFunctionWithCallStack(G_456,G_494,lisp.S_nil);
TMP_1716=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1715,G_494,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1716);
TMP_1717=lisp.callFunctionWithCallStack(G_456,G_499,lisp.S_nil);
TMP_1718=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1717,G_499,G_694,lisp.makeCons(G_26, lisp.S_nil),G_692,TMP_1718);
TMP_1719=lisp.callFunctionWithCallStack(G_456,G_514,lisp.S_nil);
TMP_1720=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1719,G_514,G_694,lisp.makeCons(G_504, lisp.S_nil),G_692,TMP_1720);
G_1154.func(G_1721,G_1155,lisp.makeCons(G_1722, lisp.makeCons(G_1393, lisp.S_nil)));
TMP_1725=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1728;
let TMP_1726;
let L_G734__1200;
let L_G733__1199;
L_G733__1199=arguments[0];
L_G734__1200=arguments[1];
TMP_1726=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1727;
let L_INITARGS__1207;
let L_CLASS__1206;
L_CLASS__1206=arguments[0];
L_INITARGS__1207=lisp.jsArrayToList(arguments, 1);
TMP_1727=G_37.func(G_38,L_CLASS__1206);
return TMP_1727;
});
TMP_1728=lisp.callFunctionWithCallStack(G_22,TMP_1726,L_G733__1199);
return TMP_1728;
});
G_1518.func(G_1721,G_1155,lisp.makeCons(G_1722, lisp.makeCons(G_1395, lisp.makeCons(G_1723, lisp.S_nil))),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_697, lisp.S_nil),G_1523,lisp.makeCons(lisp.makeCons(G_1485, lisp.makeCons(lisp.makeCons(G_1724, lisp.makeCons(G_1723, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_1721, lisp.makeCons(lisp.makeCons(G_37, lisp.makeCons(G_38, lisp.makeCons(G_1722, lisp.S_nil))), lisp.S_nil))), lisp.S_nil)),G_1525,TMP_1725);
G_1154.func(G_1729,G_1155,lisp.makeCons(G_1730, lisp.makeCons(G_1731, lisp.makeCons(G_1393, lisp.S_nil))));
TMP_1747=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1774;
let TMP_1748;
let L_G739__1210;
let L_G738__1209;
L_G738__1209=arguments[0];
L_G739__1210=arguments[1];
TMP_1748=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1773;
let TMP_1772;
let TMP_1771;
let TMP_1755;
let L_SLOT_NAME__1223;
let TMP_1754;
let TMP_1753;
let L_SLOT__1222;
let TMP_1752;
let TMP_1751;
let L_G743__1221;
let TMP_1750;
let TMP_1749;
let L_INITARGS__1218;
let L_SLOT_NAMES__1217;
let L_INSTANCE__1216;
L_INSTANCE__1216=arguments[0];
L_SLOT_NAMES__1217=arguments[1];
L_INITARGS__1218=lisp.jsArrayToList(arguments, 2);
{
TMP_1749=G_267.func(L_INSTANCE__1216);
TMP_1750=G_416.func(TMP_1749);
L_G743__1221=lisp.values1(TMP_1750);
for(;;){
TMP_1751=lisp.callFunctionWithCallStack(G_725,L_G743__1221);
if(lisp.values1(TMP_1751) !== lisp.S_nil){
}else{
{
TMP_1752=lisp.callFunctionWithCallStack(G_7,L_G743__1221);
L_SLOT__1222=lisp.values1(TMP_1752);
TMP_1753=lisp.callFunctionWithCallStack(G_9,L_G743__1221);
L_G743__1221=lisp.values1(TMP_1753);
{
TMP_1754=G_119.func(L_SLOT__1222);
L_SLOT_NAME__1223=lisp.values1(TMP_1754);
TMP_1755=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1770;
let L_G_STORE758__1235;
let TMP_1769;
let TMP_1768;
let L_G757__1234;
let L_G756__1233;
let TMP_1767;
let TMP_1766;
let TMP_1765;
let TMP_1764;
let L_G755__1232;
let TMP_1763;
let TMP_1762;
let L_G754__1231;
let TMP_1761;
let TMP_1760;
let TMP_1759;
let TMP_1758;
let TMP_1757;
let L_G_STORE753__1230;
let L_G752__1229;
let L_G751__1228;
let TMP_1756;
let L_G750__1227;
let L_TAIL__1226;
let L_VALUE__1225;
let L_KEY__1224;
L_KEY__1224=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALUE__1225=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_TAIL__1226=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_G750__1227=lisp.jsArrayToList(arguments, 3);
if(lisp.values1(L_TAIL__1226) !== lisp.S_nil){
{
L_G751__1228=lisp.values1(L_INSTANCE__1216);
L_G752__1229=lisp.values1(L_SLOT_NAME__1223);
L_G_STORE753__1230=lisp.values1(L_VALUE__1225);
TMP_1757=lisp.callFunctionWithCallStack(G_300,L_G_STORE753__1230,L_G751__1228,L_G752__1229);
}
TMP_1756=TMP_1757;
}else{
TMP_1758=G_265.func(L_INSTANCE__1216,L_SLOT_NAME__1223);
TMP_1759=lisp.callFunctionWithCallStack(G_1285,TMP_1758);
if(lisp.values1(TMP_1759) !== lisp.S_nil){
{
TMP_1761=lisp.CL_eq(L_SLOT_NAMES__1217,G_26);
L_G754__1231=lisp.values1(TMP_1761);
if(lisp.values1(L_G754__1231) !== lisp.S_nil){
TMP_1762=lisp.values1(L_G754__1231);
}else{
{
TMP_1763=lisp.callFunctionWithCallStack(G_11,L_SLOT_NAME__1223,L_SLOT_NAMES__1217);
L_G755__1232=lisp.values1(TMP_1763);
if(lisp.values1(L_G755__1232) !== lisp.S_nil){
TMP_1764=lisp.values1(L_G755__1232);
}else{
TMP_1764=lisp.values1(lisp.S_nil);
}
}
TMP_1762=lisp.values1(lisp.values1(TMP_1764));
}
}
if(lisp.values1(lisp.values1(TMP_1762)) !== lisp.S_nil){
TMP_1766=G_173.func(L_SLOT__1222);
TMP_1765=lisp.values1(TMP_1766);
}else{
TMP_1765=lisp.values1(lisp.S_nil);
}
TMP_1760=lisp.values1(TMP_1765);
}else{
TMP_1760=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1760) !== lisp.S_nil){
{
L_G756__1233=lisp.values1(L_INSTANCE__1216);
L_G757__1234=lisp.values1(L_SLOT_NAME__1223);
TMP_1768=G_173.func(L_SLOT__1222);
TMP_1769=lisp.CL_funcall(lisp.values1(TMP_1768));
L_G_STORE758__1235=lisp.values1(TMP_1769);
TMP_1770=lisp.callFunctionWithCallStack(G_300,L_G_STORE758__1235,L_G756__1233,L_G757__1234);
}
TMP_1767=TMP_1770;
}else{
TMP_1767=lisp.values1(lisp.S_nil);
}
TMP_1756=TMP_1767;
}
return TMP_1756;
});
TMP_1771=lisp.callFunctionWithCallStack(G_1344,TMP_1755);
TMP_1772=G_137.func(L_SLOT__1222);
TMP_1773=lisp.callFunctionWithCallStack(G_1740,L_INITARGS__1218,TMP_1772);
lisp.CL_multipleValueCall(TMP_1771,TMP_1773);
}
}
continue;
}
break;
}
}
return lisp.values1(L_INSTANCE__1216);
});
TMP_1774=lisp.callFunctionWithCallStack(G_22,TMP_1748,L_G738__1209);
return TMP_1774;
});
G_1518.func(G_1729,G_1155,lisp.makeCons(G_1730, lisp.makeCons(G_1731, lisp.makeCons(G_1395, lisp.makeCons(G_1723, lisp.S_nil)))),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_720, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_1729, lisp.makeCons(lisp.makeCons(G_1732, lisp.makeCons(lisp.makeCons(G_1733, lisp.makeCons(lisp.makeCons(G_416, lisp.makeCons(lisp.makeCons(G_267, lisp.makeCons(G_1730, lisp.S_nil)), lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1734, lisp.makeCons(lisp.makeCons(lisp.makeCons(G_1735, lisp.makeCons(lisp.makeCons(G_119, lisp.makeCons(G_1733, lisp.S_nil)), lisp.S_nil)), lisp.S_nil), lisp.makeCons(lisp.makeCons(G_1736, lisp.makeCons(lisp.makeCons(G_1737, lisp.makeCons(G_1738, lisp.makeCons(G_1739, lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_1740, lisp.makeCons(G_1723, lisp.makeCons(lisp.makeCons(G_137, lisp.makeCons(G_1733, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_1485, lisp.makeCons(lisp.makeCons(G_1724, lisp.makeCons(G_1737, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1741, lisp.makeCons(G_1739, lisp.makeCons(lisp.makeCons(G_586, lisp.makeCons(lisp.makeCons(G_298, lisp.makeCons(G_1730, lisp.makeCons(G_1735, lisp.S_nil))), lisp.makeCons(G_1738, lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_1742, lisp.makeCons(lisp.makeCons(G_1743, lisp.makeCons(lisp.makeCons(G_1285, lisp.makeCons(lisp.makeCons(G_265, lisp.makeCons(G_1730, lisp.makeCons(G_1735, lisp.S_nil))), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1744, lisp.makeCons(lisp.makeCons(G_1745, lisp.makeCons(G_1731, lisp.makeCons(G_26, lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_11, lisp.makeCons(G_1735, lisp.makeCons(G_1731, lisp.S_nil))), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_173, lisp.makeCons(G_1733, lisp.S_nil)), lisp.S_nil)))), lisp.makeCons(lisp.makeCons(G_586, lisp.makeCons(lisp.makeCons(G_298, lisp.makeCons(G_1730, lisp.makeCons(G_1735, lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_1746, lisp.makeCons(lisp.makeCons(G_173, lisp.makeCons(G_1733, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))), lisp.S_nil))), lisp.S_nil)))), lisp.S_nil))))), lisp.S_nil))), lisp.S_nil))), lisp.makeCons(G_1730, lisp.S_nil)))), lisp.S_nil),G_1525,TMP_1747);
G_1154.func(G_1775,G_1155,lisp.makeCons(G_1730, lisp.makeCons(G_1393, lisp.S_nil)));
TMP_1776=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1780;
let TMP_1777;
let L_G760__1238;
let L_G759__1237;
L_G759__1237=arguments[0];
L_G760__1238=arguments[1];
TMP_1777=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1779;
let TMP_1778;
let L_INITARGS__1245;
let L_INSTANCE__1244;
L_INSTANCE__1244=arguments[0];
L_INITARGS__1245=lisp.jsArrayToList(arguments, 1);
TMP_1778=lisp.CL_symbolFunction(G_1729);
TMP_1779=lisp.callFunctionWithCallStack(G_22,TMP_1778,L_INSTANCE__1244,G_26,L_INITARGS__1245);
return TMP_1779;
});
TMP_1780=lisp.callFunctionWithCallStack(G_22,TMP_1777,L_G759__1237);
return TMP_1780;
});
G_1518.func(G_1775,G_1155,lisp.makeCons(G_1730, lisp.makeCons(G_1395, lisp.makeCons(G_1723, lisp.S_nil))),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_720, lisp.S_nil),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_1775, lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(lisp.makeCons(G_518, lisp.makeCons(G_1729, lisp.S_nil)), lisp.makeCons(G_1730, lisp.makeCons(G_26, lisp.makeCons(G_1723, lisp.S_nil))))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1776);
G_1154.func(G_1781,G_1155,lisp.makeCons(G_1722, lisp.makeCons(G_1393, lisp.S_nil)));
TMP_1782=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1787;
let TMP_1783;
let L_G765__1248;
let L_G764__1247;
L_G764__1247=arguments[0];
L_G765__1248=arguments[1];
TMP_1783=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1786;
let TMP_1785;
let TMP_1784;
let L_INITARGS__1255;
let L_SYMBOL__1254;
L_SYMBOL__1254=arguments[0];
L_INITARGS__1255=lisp.jsArrayToList(arguments, 1);
TMP_1784=lisp.CL_symbolFunction(G_1781);
TMP_1785=lisp.callFunctionWithCallStack(G_456,L_SYMBOL__1254);
TMP_1786=lisp.callFunctionWithCallStack(G_22,TMP_1784,TMP_1785,L_INITARGS__1255);
return TMP_1786;
});
TMP_1787=lisp.callFunctionWithCallStack(G_22,TMP_1783,L_G764__1247);
return TMP_1787;
});
G_1518.func(G_1781,G_1155,lisp.makeCons(G_459, lisp.makeCons(G_1395, lisp.makeCons(G_1723, lisp.S_nil))),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_459, lisp.S_nil),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_1781, lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(lisp.makeCons(G_518, lisp.makeCons(G_1781, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_456, lisp.makeCons(G_459, lisp.S_nil)), lisp.makeCons(G_1723, lisp.S_nil)))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1782);
TMP_1789=lisp.CL_boundp(G_1788);
if(lisp.values1(TMP_1789) !== lisp.S_nil){
}else{
lisp.CL_set(G_1788,0);
}
lisp.CL_put(G_1788,G_25,G_26);
TMP_1792=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1799;
let TMP_1793;
let L_G770__1258;
let L_G769__1257;
L_G769__1257=arguments[0];
L_G770__1258=arguments[1];
TMP_1793=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1798;
let L_G_STORE775__1270;
let TMP_1797;
let L_G776__1269;
let TMP_1796;
let L_G774__1268;
let L_INSTANCE__1267;
let TMP_1795;
let TMP_1794;
let L_INITARGS__1265;
let L_CLASS__1264;
L_CLASS__1264=arguments[0];
L_INITARGS__1265=lisp.jsArrayToList(arguments, 1);
{
TMP_1794=lisp.CL_symbolFunction(G_1721);
TMP_1795=lisp.callFunctionWithCallStack(G_22,TMP_1794,L_CLASS__1264,L_INITARGS__1265);
L_INSTANCE__1267=lisp.values1(TMP_1795);
{
L_G774__1268=lisp.values1(L_INSTANCE__1267);
{
TMP_1796=lisp.callFunctionWithCallStack(G_1214,lisp.symbolValue(G_1788),1);
L_G776__1269=lisp.values1(TMP_1796);
lisp.setSymbolValue(G_1788, lisp.values1(L_G776__1269));
}
TMP_1797=lisp.callFunctionWithCallStack(G_1790,lisp.S_nil,G_61.func(lisp.codeArrayToString([123, 126, 65, 125])),lisp.values1(G_1788.value));
L_G_STORE775__1270=lisp.values1(TMP_1797);
lisp.callFunctionWithCallStack(G_317,L_G_STORE775__1270,L_G774__1268);
}
TMP_1798=lisp.CL_symbolFunction(G_1775);
lisp.callFunctionWithCallStack(G_22,TMP_1798,L_INSTANCE__1267,L_INITARGS__1265);
}
return lisp.values1(L_INSTANCE__1267);
});
TMP_1799=lisp.callFunctionWithCallStack(G_22,TMP_1793,L_G769__1257);
return TMP_1799;
});
G_1518.func(G_1781,G_1155,lisp.makeCons(G_1722, lisp.makeCons(G_1395, lisp.makeCons(G_1723, lisp.S_nil))),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_697, lisp.S_nil),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_1781, lisp.makeCons(lisp.makeCons(G_1734, lisp.makeCons(lisp.makeCons(lisp.makeCons(G_1730, lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(lisp.makeCons(G_518, lisp.makeCons(G_1721, lisp.S_nil)), lisp.makeCons(G_1722, lisp.makeCons(G_1723, lisp.S_nil)))), lisp.S_nil)), lisp.S_nil), lisp.makeCons(lisp.makeCons(G_586, lisp.makeCons(lisp.makeCons(G_314, lisp.makeCons(G_1730, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(lisp.S_nil, lisp.makeCons(G_61.func(lisp.codeArrayToString([123, 126, 65, 125])), lisp.makeCons(lisp.makeCons(G_1791, lisp.makeCons(G_1788, lisp.S_nil)), lisp.S_nil)))), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(lisp.makeCons(G_518, lisp.makeCons(G_1775, lisp.S_nil)), lisp.makeCons(G_1730, lisp.makeCons(G_1723, lisp.S_nil)))), lisp.makeCons(G_1730, lisp.S_nil))))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1792);
G_1154.func(G_257,G_1155,lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)));
TMP_1801=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1806;
let TMP_1802;
let L_G778__1272;
let L_G777__1271;
L_G777__1271=arguments[0];
L_G778__1272=arguments[1];
TMP_1802=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1805;
let TMP_1804;
let TMP_1803;
let L_G782__1281;
let L_STREAM__1279;
let L_OBJECT__1278;
L_OBJECT__1278=arguments[0];
L_STREAM__1279=arguments[1];
{
L_G782__1281=lisp.values1(L_STREAM__1279);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([35, 60])),L_G782__1281);
TMP_1803=G_45.func(L_OBJECT__1278);
TMP_1804=G_314.func(TMP_1803);
TMP_1805=G_314.func(L_OBJECT__1278);
lisp.callFunctionWithCallStack(G_1790,L_STREAM__1279,G_61.func(lisp.codeArrayToString([126, 83, 32, 126, 65])),TMP_1804,TMP_1805);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([62])),L_G782__1281);
}
return lisp.values1(lisp.S_nil);
});
TMP_1806=lisp.callFunctionWithCallStack(G_22,TMP_1802,L_G777__1271);
return TMP_1806;
});
G_1518.func(G_257,G_1155,lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_697, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_257, lisp.makeCons(lisp.makeCons(G_1800, lisp.makeCons(lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([126, 83, 32, 126, 65])), lisp.makeCons(lisp.makeCons(G_314, lisp.makeCons(lisp.makeCons(G_45, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_314, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil))))), lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1801);
TMP_1807=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1812;
let TMP_1808;
let L_G784__1283;
let L_G783__1282;
L_G783__1282=arguments[0];
L_G784__1283=arguments[1];
TMP_1808=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1811;
let TMP_1810;
let TMP_1809;
let L_G788__1292;
let L_STREAM__1290;
let L_OBJECT__1289;
L_OBJECT__1289=arguments[0];
L_STREAM__1290=arguments[1];
{
L_G788__1292=lisp.values1(L_STREAM__1290);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([35, 60])),L_G788__1292);
TMP_1809=G_45.func(L_OBJECT__1289);
TMP_1810=G_314.func(TMP_1809);
TMP_1811=G_314.func(L_OBJECT__1289);
lisp.callFunctionWithCallStack(G_1790,L_STREAM__1290,G_61.func(lisp.codeArrayToString([126, 83, 32, 126, 65])),TMP_1810,TMP_1811);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([62])),L_G788__1292);
}
return lisp.values1(lisp.S_nil);
});
TMP_1812=lisp.callFunctionWithCallStack(G_22,TMP_1808,L_G783__1282);
return TMP_1812;
});
G_1518.func(G_257,G_1155,lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_720, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_257, lisp.makeCons(lisp.makeCons(G_1800, lisp.makeCons(lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([126, 83, 32, 126, 65])), lisp.makeCons(lisp.makeCons(G_314, lisp.makeCons(lisp.makeCons(G_45, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_314, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil))))), lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1807);
TMP_1813=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1819;
let TMP_1814;
let L_G790__1294;
let L_G789__1293;
L_G789__1293=arguments[0];
L_G790__1294=arguments[1];
TMP_1814=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1818;
let TMP_1817;
let TMP_1816;
let TMP_1815;
let L_G794__1303;
let L_STREAM__1301;
let L_OBJECT__1300;
L_OBJECT__1300=arguments[0];
L_STREAM__1301=arguments[1];
{
L_G794__1303=lisp.values1(L_STREAM__1301);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([35, 60])),L_G794__1303);
TMP_1815=G_45.func(L_OBJECT__1300);
TMP_1816=G_314.func(TMP_1815);
TMP_1817=G_912.func(L_OBJECT__1300);
TMP_1818=G_945.func(L_OBJECT__1300);
lisp.callFunctionWithCallStack(G_1790,L_STREAM__1301,G_61.func(lisp.codeArrayToString([126, 83, 32, 126, 83, 32, 126, 83])),TMP_1816,TMP_1817,TMP_1818);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([62])),L_G794__1303);
}
return lisp.values1(lisp.S_nil);
});
TMP_1819=lisp.callFunctionWithCallStack(G_22,TMP_1814,L_G789__1293);
return TMP_1819;
});
G_1518.func(G_257,G_1155,lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_1645, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_257, lisp.makeCons(lisp.makeCons(G_1800, lisp.makeCons(lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([126, 83, 32, 126, 83, 32, 126, 83])), lisp.makeCons(lisp.makeCons(G_314, lisp.makeCons(lisp.makeCons(G_45, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_912, lisp.makeCons(G_1598, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_945, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil)))))), lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1813);
TMP_1820=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1829;
let TMP_1821;
let L_G796__1305;
let L_G795__1304;
L_G795__1304=arguments[0];
L_G796__1305=arguments[1];
TMP_1821=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1828;
let TMP_1827;
let TMP_1826;
let TMP_1825;
let TMP_1824;
let TMP_1823;
let TMP_1822;
let L_G800__1314;
let L_STREAM__1312;
let L_OBJECT__1311;
L_OBJECT__1311=arguments[0];
L_STREAM__1312=arguments[1];
{
L_G800__1314=lisp.values1(L_STREAM__1312);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([35, 60])),L_G800__1314);
TMP_1822=G_45.func(L_OBJECT__1311);
TMP_1823=G_314.func(TMP_1822);
TMP_1824=G_1033.func(L_OBJECT__1311);
if(lisp.values1(TMP_1824) !== lisp.S_nil){
TMP_1826=G_1033.func(L_OBJECT__1311);
TMP_1827=G_912.func(TMP_1826);
TMP_1825=lisp.values1(TMP_1827);
}else{
TMP_1825=lisp.values1(lisp.S_nil);
}
TMP_1828=G_1066.func(L_OBJECT__1311);
lisp.callFunctionWithCallStack(G_1790,L_STREAM__1312,G_61.func(lisp.codeArrayToString([126, 83, 32, 126, 83, 32, 126, 83])),TMP_1823,TMP_1825,TMP_1828);
lisp.callFunctionWithCallStack(G_245,G_61.func(lisp.codeArrayToString([62])),L_G800__1314);
}
return lisp.values1(lisp.S_nil);
});
TMP_1829=lisp.callFunctionWithCallStack(G_22,TMP_1821,L_G795__1304);
return TMP_1829;
});
G_1518.func(G_257,G_1155,lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_1656, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_257, lisp.makeCons(lisp.makeCons(G_1800, lisp.makeCons(lisp.makeCons(G_1598, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([126, 83, 32, 126, 83, 32, 126, 83])), lisp.makeCons(lisp.makeCons(G_314, lisp.makeCons(lisp.makeCons(G_45, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1741, lisp.makeCons(lisp.makeCons(G_1033, lisp.makeCons(G_1598, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_912, lisp.makeCons(lisp.makeCons(G_1033, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.S_nil, lisp.S_nil)))), lisp.makeCons(lisp.makeCons(G_1066, lisp.makeCons(G_1598, lisp.S_nil)), lisp.S_nil)))))), lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1820);
TMP_1832=lisp.callFunctionWithCallStack(G_456,G_1831,lisp.S_nil);
TMP_1833=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1832,G_1831,G_694,lisp.makeCons(G_720, lisp.S_nil),G_692,TMP_1833);
TMP_1835=lisp.callFunctionWithCallStack(G_456,G_1834,lisp.S_nil);
TMP_1836=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1835,G_1834,G_694,lisp.makeCons(G_1831, lisp.S_nil),G_692,TMP_1836);
TMP_1838=lisp.callFunctionWithCallStack(G_456,G_1837,lisp.S_nil);
TMP_1839=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1838,G_1837,G_694,lisp.makeCons(G_1834, lisp.S_nil),G_692,TMP_1839);
TMP_1841=lisp.callFunctionWithCallStack(G_456,G_1840,lisp.S_nil);
TMP_1842=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1841,G_1840,G_694,lisp.makeCons(G_1837, lisp.S_nil),G_692,TMP_1842);
TMP_1844=lisp.callFunctionWithCallStack(G_456,G_1843,lisp.S_nil);
TMP_1845=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1844,G_1843,G_694,lisp.makeCons(G_1834, lisp.S_nil),G_692,TMP_1845);
TMP_1846=lisp.callFunctionWithCallStack(G_456,G_273,lisp.S_nil);
TMP_1847=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1846,G_273,G_694,lisp.makeCons(G_1843, lisp.S_nil),G_692,TMP_1847);
TMP_1849=lisp.callFunctionWithCallStack(G_456,G_1848,lisp.S_nil);
TMP_1851=lisp.callFunctionWithCallStack(G_64,G_110,lisp.makeCons(G_1850, lisp.S_nil),G_104,lisp.makeCons(G_102, lisp.S_nil),G_102,G_315);
TMP_1852=lisp.callFunctionWithCallStack(G_64,TMP_1851);
G_686.func(TMP_1849,G_1848,G_694,lisp.makeCons(G_273, lisp.S_nil),G_692,TMP_1852);
TMP_1854=lisp.callFunctionWithCallStack(G_456,G_1853,lisp.S_nil);
TMP_1855=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1854,G_1853,G_694,lisp.makeCons(G_273, lisp.S_nil),G_692,TMP_1855);
TMP_1857=lisp.callFunctionWithCallStack(G_456,G_1856,lisp.S_nil);
TMP_1858=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1857,G_1856,G_694,lisp.makeCons(G_1843, lisp.S_nil),G_692,TMP_1858);
TMP_1860=lisp.callFunctionWithCallStack(G_456,G_1859,lisp.S_nil);
TMP_1864=lisp.callFunctionWithCallStack(G_64,G_110,lisp.makeCons(G_1861, lisp.S_nil),G_104,lisp.makeCons(G_1862, lisp.S_nil),G_102,G_1863);
TMP_1868=lisp.callFunctionWithCallStack(G_64,G_110,lisp.makeCons(G_1865, lisp.S_nil),G_104,lisp.makeCons(G_1866, lisp.S_nil),G_102,G_1867);
TMP_1869=lisp.callFunctionWithCallStack(G_64,TMP_1864,TMP_1868);
G_686.func(TMP_1860,G_1859,G_694,lisp.makeCons(G_1834, lisp.S_nil),G_692,TMP_1869,G_1870,lisp.makeCons(lisp.makeCons(G_557, lisp.makeCons(lisp.makeCons(G_1871, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(lisp.makeCons(G_518, lisp.makeCons(G_1790, lisp.S_nil)), lisp.makeCons(G_499, lisp.makeCons(lisp.makeCons(G_1861, lisp.makeCons(G_1871, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1865, lisp.makeCons(G_1871, lisp.S_nil)), lisp.S_nil))))), lisp.S_nil))), lisp.S_nil));
TMP_1876=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1893;
let TMP_1884;
let F_CALL_NEXT_METHOD__1320;
let TMP_1877;
let L_G823__1316;
let L_G822__1315;
L_G822__1315=arguments[0];
L_G823__1316=arguments[1];
{
TMP_1877=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1883;
let TMP_1882;
let L_G826__1319;
let TMP_1881;
let L_G825__1318;
let TMP_1880;
let TMP_1879;
let TMP_1878;
let L_G824__1317;
L_G824__1317=lisp.jsArrayToList(arguments, 0);
TMP_1878=lisp.callFunctionWithCallStack(G_5,L_G823__1316);
if(lisp.values1(TMP_1878) !== lisp.S_nil){
TMP_1880=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([78, 111, 32, 110, 101, 120, 116, 32, 109, 101, 116, 104, 111, 100])));
TMP_1879=TMP_1880;
}else{
{
L_G825__1318=lisp.values1(L_G824__1317);
if(lisp.values1(L_G825__1318) !== lisp.S_nil){
TMP_1881=lisp.values1(L_G825__1318);
}else{
{
L_G826__1319=lisp.values1(L_G822__1315);
if(lisp.values1(L_G826__1319) !== lisp.S_nil){
TMP_1882=lisp.values1(L_G826__1319);
}else{
TMP_1882=lisp.values1(lisp.S_nil);
}
}
TMP_1881=lisp.values1(lisp.values1(TMP_1882));
}
}
TMP_1883=lisp.CL_funcall(lisp.values1(L_G823__1316),lisp.values1(TMP_1881));
TMP_1879=TMP_1883;
}
return TMP_1879;
});
F_CALL_NEXT_METHOD__1320=lisp.values1(TMP_1877);
TMP_1884=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1892;
let TMP_1887;
let TMP_1886;
let TMP_1885;
let L_G821__1323;
let L_G820__1322;
L_G820__1322=arguments[0];
L_G821__1323=arguments[1];
if(lisp.values1(lisp.symbolValue(G_1874)) !== lisp.S_nil){
TMP_1886=F_CALL_NEXT_METHOD__1320();
TMP_1885=TMP_1886;
}else{
TMP_1887=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1891;
let TMP_1890;
let TMP_1889;
let TMP_1888;
let L_STREAM__1326;
let L_C__1325;
L_C__1325=arguments[0];
L_STREAM__1326=arguments[1];
TMP_1888=lisp.CL_symbolFunction(G_1790);
TMP_1889=lisp.callFunctionWithCallStack(G_1861,L_C__1325);
TMP_1890=lisp.callFunctionWithCallStack(G_1865,L_C__1325);
TMP_1891=lisp.callFunctionWithCallStack(G_22,TMP_1888,L_STREAM__1326,TMP_1889,TMP_1890);
return TMP_1891;
});
TMP_1892=lisp.CL_funcall(lisp.values1(TMP_1887),L_G820__1322,L_G821__1323);
TMP_1885=TMP_1892;
}
return TMP_1885;
});
TMP_1893=lisp.callFunctionWithCallStack(G_22,TMP_1884,L_G822__1315);
}
return TMP_1893;
});
G_1518.func(G_257,G_1155,lisp.makeCons(G_1872, lisp.makeCons(G_1873, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_1859, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_257, lisp.makeCons(lisp.makeCons(G_1741, lisp.makeCons(G_1874, lisp.makeCons(lisp.makeCons(G_1875, lisp.S_nil), lisp.makeCons(lisp.makeCons(lisp.makeCons(G_557, lisp.makeCons(lisp.makeCons(G_1871, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(lisp.makeCons(G_518, lisp.makeCons(G_1790, lisp.S_nil)), lisp.makeCons(G_499, lisp.makeCons(lisp.makeCons(G_1861, lisp.makeCons(G_1871, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1865, lisp.makeCons(G_1871, lisp.S_nil)), lisp.S_nil))))), lisp.S_nil))), lisp.makeCons(G_1872, lisp.makeCons(G_1873, lisp.S_nil))), lisp.S_nil)))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1876);
TMP_1895=lisp.callFunctionWithCallStack(G_456,G_1894,lisp.S_nil);
TMP_1896=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1895,G_1894,G_694,lisp.makeCons(G_1859, lisp.makeCons(G_273, lisp.S_nil)),G_692,TMP_1896);
TMP_1898=lisp.callFunctionWithCallStack(G_456,G_1897,lisp.S_nil);
TMP_1899=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1898,G_1897,G_694,lisp.makeCons(G_1859, lisp.makeCons(G_1837, lisp.S_nil)),G_692,TMP_1899);
TMP_1900=lisp.callFunctionWithCallStack(G_456,G_48,lisp.S_nil);
TMP_1904=lisp.callFunctionWithCallStack(G_64,G_110,lisp.makeCons(G_1901, lisp.S_nil),G_104,lisp.makeCons(G_1902, lisp.S_nil),G_102,G_1903);
TMP_1908=lisp.callFunctionWithCallStack(G_64,G_110,lisp.makeCons(G_1905, lisp.S_nil),G_104,lisp.makeCons(G_1906, lisp.S_nil),G_102,G_1907);
TMP_1909=lisp.callFunctionWithCallStack(G_64,TMP_1904,TMP_1908);
G_686.func(TMP_1900,G_48,G_694,lisp.makeCons(G_273, lisp.S_nil),G_692,TMP_1909,G_1870,lisp.makeCons(lisp.makeCons(G_557, lisp.makeCons(lisp.makeCons(G_1871, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 118, 97, 108, 117, 101, 32, 126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 111, 102, 32, 116, 104, 101, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 121, 112, 101, 32, 126, 65])), lisp.makeCons(lisp.makeCons(G_1901, lisp.makeCons(G_1871, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1905, lisp.makeCons(G_1871, lisp.S_nil)), lisp.S_nil))))), lisp.S_nil))), lisp.S_nil));
TMP_1912=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1928;
let TMP_1920;
let F_CALL_NEXT_METHOD__1332;
let TMP_1913;
let L_G834__1328;
let L_G833__1327;
L_G833__1327=arguments[0];
L_G834__1328=arguments[1];
{
TMP_1913=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1919;
let TMP_1918;
let L_G837__1331;
let TMP_1917;
let L_G836__1330;
let TMP_1916;
let TMP_1915;
let TMP_1914;
let L_G835__1329;
L_G835__1329=lisp.jsArrayToList(arguments, 0);
TMP_1914=lisp.callFunctionWithCallStack(G_5,L_G834__1328);
if(lisp.values1(TMP_1914) !== lisp.S_nil){
TMP_1916=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([78, 111, 32, 110, 101, 120, 116, 32, 109, 101, 116, 104, 111, 100])));
TMP_1915=TMP_1916;
}else{
{
L_G836__1330=lisp.values1(L_G835__1329);
if(lisp.values1(L_G836__1330) !== lisp.S_nil){
TMP_1917=lisp.values1(L_G836__1330);
}else{
{
L_G837__1331=lisp.values1(L_G833__1327);
if(lisp.values1(L_G837__1331) !== lisp.S_nil){
TMP_1918=lisp.values1(L_G837__1331);
}else{
TMP_1918=lisp.values1(lisp.S_nil);
}
}
TMP_1917=lisp.values1(lisp.values1(TMP_1918));
}
}
TMP_1919=lisp.CL_funcall(lisp.values1(L_G834__1328),lisp.values1(TMP_1917));
TMP_1915=TMP_1919;
}
return TMP_1915;
});
F_CALL_NEXT_METHOD__1332=lisp.values1(TMP_1913);
TMP_1920=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1927;
let TMP_1923;
let TMP_1922;
let TMP_1921;
let L_G832__1335;
let L_G831__1334;
L_G831__1334=arguments[0];
L_G832__1335=arguments[1];
if(lisp.values1(lisp.symbolValue(G_1874)) !== lisp.S_nil){
TMP_1922=F_CALL_NEXT_METHOD__1332();
TMP_1921=TMP_1922;
}else{
TMP_1923=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1926;
let TMP_1925;
let TMP_1924;
let L_STREAM__1338;
let L_C__1337;
L_C__1337=arguments[0];
L_STREAM__1338=arguments[1];
TMP_1924=lisp.callFunctionWithCallStack(G_1901,L_C__1337);
TMP_1925=lisp.callFunctionWithCallStack(G_1905,L_C__1337);
TMP_1926=lisp.callFunctionWithCallStack(G_1790,L_STREAM__1338,G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 118, 97, 108, 117, 101, 32, 126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 111, 102, 32, 116, 104, 101, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 121, 112, 101, 32, 126, 65])),TMP_1924,TMP_1925);
return TMP_1926;
});
TMP_1927=lisp.CL_funcall(lisp.values1(TMP_1923),L_G831__1334,L_G832__1335);
TMP_1921=TMP_1927;
}
return TMP_1921;
});
TMP_1928=lisp.callFunctionWithCallStack(G_22,TMP_1920,L_G833__1327);
}
return TMP_1928;
});
G_1518.func(G_257,G_1155,lisp.makeCons(G_1910, lisp.makeCons(G_1911, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_48, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_257, lisp.makeCons(lisp.makeCons(G_1741, lisp.makeCons(G_1874, lisp.makeCons(lisp.makeCons(G_1875, lisp.S_nil), lisp.makeCons(lisp.makeCons(lisp.makeCons(G_557, lisp.makeCons(lisp.makeCons(G_1871, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 118, 97, 108, 117, 101, 32, 126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 111, 102, 32, 116, 104, 101, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 121, 112, 101, 32, 126, 65])), lisp.makeCons(lisp.makeCons(G_1901, lisp.makeCons(G_1871, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1905, lisp.makeCons(G_1871, lisp.S_nil)), lisp.S_nil))))), lisp.S_nil))), lisp.makeCons(G_1910, lisp.makeCons(G_1911, lisp.S_nil))), lisp.S_nil)))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1912);
TMP_1930=lisp.callFunctionWithCallStack(G_456,G_1929,lisp.S_nil);
TMP_1931=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1930,G_1929,G_694,lisp.makeCons(G_273, lisp.S_nil),G_692,TMP_1931);
TMP_1933=lisp.callFunctionWithCallStack(G_456,G_1932,lisp.S_nil);
TMP_1934=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1933,G_1932,G_694,lisp.makeCons(G_1859, lisp.makeCons(G_273, lisp.S_nil)),G_692,TMP_1934);
TMP_1936=lisp.callFunctionWithCallStack(G_456,G_1935,lisp.S_nil);
TMP_1937=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1936,G_1935,G_694,lisp.makeCons(G_1848, lisp.S_nil),G_692,TMP_1937,G_1870,lisp.makeCons(lisp.makeCons(G_557, lisp.makeCons(lisp.makeCons(G_1871, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 126, 83, 32, 105, 115, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100])), lisp.makeCons(lisp.makeCons(G_1850, lisp.makeCons(G_1871, lisp.S_nil)), lisp.S_nil)))), lisp.S_nil))), lisp.S_nil));
TMP_1940=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1955;
let TMP_1948;
let F_CALL_NEXT_METHOD__1344;
let TMP_1941;
let L_G845__1340;
let L_G844__1339;
L_G844__1339=arguments[0];
L_G845__1340=arguments[1];
{
TMP_1941=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1947;
let TMP_1946;
let L_G848__1343;
let TMP_1945;
let L_G847__1342;
let TMP_1944;
let TMP_1943;
let TMP_1942;
let L_G846__1341;
L_G846__1341=lisp.jsArrayToList(arguments, 0);
TMP_1942=lisp.callFunctionWithCallStack(G_5,L_G845__1340);
if(lisp.values1(TMP_1942) !== lisp.S_nil){
TMP_1944=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([78, 111, 32, 110, 101, 120, 116, 32, 109, 101, 116, 104, 111, 100])));
TMP_1943=TMP_1944;
}else{
{
L_G847__1342=lisp.values1(L_G846__1341);
if(lisp.values1(L_G847__1342) !== lisp.S_nil){
TMP_1945=lisp.values1(L_G847__1342);
}else{
{
L_G848__1343=lisp.values1(L_G844__1339);
if(lisp.values1(L_G848__1343) !== lisp.S_nil){
TMP_1946=lisp.values1(L_G848__1343);
}else{
TMP_1946=lisp.values1(lisp.S_nil);
}
}
TMP_1945=lisp.values1(lisp.values1(TMP_1946));
}
}
TMP_1947=lisp.CL_funcall(lisp.values1(L_G845__1340),lisp.values1(TMP_1945));
TMP_1943=TMP_1947;
}
return TMP_1943;
});
F_CALL_NEXT_METHOD__1344=lisp.values1(TMP_1941);
TMP_1948=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1954;
let TMP_1951;
let TMP_1950;
let TMP_1949;
let L_G843__1347;
let L_G842__1346;
L_G842__1346=arguments[0];
L_G843__1347=arguments[1];
if(lisp.values1(lisp.symbolValue(G_1874)) !== lisp.S_nil){
TMP_1950=F_CALL_NEXT_METHOD__1344();
TMP_1949=TMP_1950;
}else{
TMP_1951=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1953;
let TMP_1952;
let L_STREAM__1350;
let L_C__1349;
L_C__1349=arguments[0];
L_STREAM__1350=arguments[1];
TMP_1952=lisp.callFunctionWithCallStack(G_1850,L_C__1349);
TMP_1953=lisp.callFunctionWithCallStack(G_1790,L_STREAM__1350,G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 126, 83, 32, 105, 115, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100])),TMP_1952);
return TMP_1953;
});
TMP_1954=lisp.CL_funcall(lisp.values1(TMP_1951),L_G842__1346,L_G843__1347);
TMP_1949=TMP_1954;
}
return TMP_1949;
});
TMP_1955=lisp.callFunctionWithCallStack(G_22,TMP_1948,L_G844__1339);
}
return TMP_1955;
});
G_1518.func(G_257,G_1155,lisp.makeCons(G_1938, lisp.makeCons(G_1939, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_1935, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_257, lisp.makeCons(lisp.makeCons(G_1741, lisp.makeCons(G_1874, lisp.makeCons(lisp.makeCons(G_1875, lisp.S_nil), lisp.makeCons(lisp.makeCons(lisp.makeCons(G_557, lisp.makeCons(lisp.makeCons(G_1871, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 126, 83, 32, 105, 115, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100])), lisp.makeCons(lisp.makeCons(G_1850, lisp.makeCons(G_1871, lisp.S_nil)), lisp.S_nil)))), lisp.S_nil))), lisp.makeCons(G_1938, lisp.makeCons(G_1939, lisp.S_nil))), lisp.S_nil)))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1940);
TMP_1957=lisp.callFunctionWithCallStack(G_456,G_1956,lisp.S_nil);
TMP_1958=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1957,G_1956,G_694,lisp.makeCons(G_1848, lisp.S_nil),G_692,TMP_1958,G_1870,lisp.makeCons(lisp.makeCons(G_557, lisp.makeCons(lisp.makeCons(G_1871, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 126, 83, 32, 105, 115, 32, 117, 110, 98, 111, 117, 110, 100])), lisp.makeCons(lisp.makeCons(G_1850, lisp.makeCons(G_1871, lisp.S_nil)), lisp.S_nil)))), lisp.S_nil))), lisp.S_nil));
TMP_1961=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1976;
let TMP_1969;
let F_CALL_NEXT_METHOD__1356;
let TMP_1962;
let L_G852__1352;
let L_G851__1351;
L_G851__1351=arguments[0];
L_G852__1352=arguments[1];
{
TMP_1962=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1968;
let TMP_1967;
let L_G855__1355;
let TMP_1966;
let L_G854__1354;
let TMP_1965;
let TMP_1964;
let TMP_1963;
let L_G853__1353;
L_G853__1353=lisp.jsArrayToList(arguments, 0);
TMP_1963=lisp.callFunctionWithCallStack(G_5,L_G852__1352);
if(lisp.values1(TMP_1963) !== lisp.S_nil){
TMP_1965=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([78, 111, 32, 110, 101, 120, 116, 32, 109, 101, 116, 104, 111, 100])));
TMP_1964=TMP_1965;
}else{
{
L_G854__1354=lisp.values1(L_G853__1353);
if(lisp.values1(L_G854__1354) !== lisp.S_nil){
TMP_1966=lisp.values1(L_G854__1354);
}else{
{
L_G855__1355=lisp.values1(L_G851__1351);
if(lisp.values1(L_G855__1355) !== lisp.S_nil){
TMP_1967=lisp.values1(L_G855__1355);
}else{
TMP_1967=lisp.values1(lisp.S_nil);
}
}
TMP_1966=lisp.values1(lisp.values1(TMP_1967));
}
}
TMP_1968=lisp.CL_funcall(lisp.values1(L_G852__1352),lisp.values1(TMP_1966));
TMP_1964=TMP_1968;
}
return TMP_1964;
});
F_CALL_NEXT_METHOD__1356=lisp.values1(TMP_1962);
TMP_1969=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1975;
let TMP_1972;
let TMP_1971;
let TMP_1970;
let L_G850__1359;
let L_G849__1358;
L_G849__1358=arguments[0];
L_G850__1359=arguments[1];
if(lisp.values1(lisp.symbolValue(G_1874)) !== lisp.S_nil){
TMP_1971=F_CALL_NEXT_METHOD__1356();
TMP_1970=TMP_1971;
}else{
TMP_1972=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1974;
let TMP_1973;
let L_STREAM__1362;
let L_C__1361;
L_C__1361=arguments[0];
L_STREAM__1362=arguments[1];
TMP_1973=lisp.callFunctionWithCallStack(G_1850,L_C__1361);
TMP_1974=lisp.callFunctionWithCallStack(G_1790,L_STREAM__1362,G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 126, 83, 32, 105, 115, 32, 117, 110, 98, 111, 117, 110, 100])),TMP_1973);
return TMP_1974;
});
TMP_1975=lisp.CL_funcall(lisp.values1(TMP_1972),L_G849__1358,L_G850__1359);
TMP_1970=TMP_1975;
}
return TMP_1970;
});
TMP_1976=lisp.callFunctionWithCallStack(G_22,TMP_1969,L_G851__1351);
}
return TMP_1976;
});
G_1518.func(G_257,G_1155,lisp.makeCons(G_1959, lisp.makeCons(G_1960, lisp.S_nil)),G_1520,lisp.S_nil,G_1428,lisp.makeCons(G_1956, lisp.makeCons(G_26, lisp.S_nil)),G_1523,lisp.makeCons(lisp.makeCons(G_1488, lisp.makeCons(G_257, lisp.makeCons(lisp.makeCons(G_1741, lisp.makeCons(G_1874, lisp.makeCons(lisp.makeCons(G_1875, lisp.S_nil), lisp.makeCons(lisp.makeCons(lisp.makeCons(G_557, lisp.makeCons(lisp.makeCons(G_1871, lisp.makeCons(G_499, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_1790, lisp.makeCons(G_499, lisp.makeCons(G_61.func(lisp.codeArrayToString([84, 104, 101, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 126, 83, 32, 105, 115, 32, 117, 110, 98, 111, 117, 110, 100])), lisp.makeCons(lisp.makeCons(G_1850, lisp.makeCons(G_1871, lisp.S_nil)), lisp.S_nil)))), lisp.S_nil))), lisp.makeCons(G_1959, lisp.makeCons(G_1960, lisp.S_nil))), lisp.S_nil)))), lisp.S_nil))), lisp.S_nil),G_1525,TMP_1961);
TMP_1978=lisp.callFunctionWithCallStack(G_456,G_1977,lisp.S_nil);
TMP_1979=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1978,G_1977,G_694,lisp.makeCons(G_273, lisp.S_nil),G_692,TMP_1979);
TMP_1981=lisp.callFunctionWithCallStack(G_456,G_1980,lisp.S_nil);
TMP_1982=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1981,G_1980,G_694,lisp.makeCons(G_1853, lisp.makeCons(G_1977, lisp.S_nil)),G_692,TMP_1982);
TMP_1984=lisp.callFunctionWithCallStack(G_456,G_1983,lisp.S_nil);
TMP_1985=lisp.callFunctionWithCallStack(G_64);
G_686.func(TMP_1984,G_1983,G_694,lisp.makeCons(G_1980, lisp.makeCons(G_1859, lisp.S_nil)),G_692,TMP_1985);
CL_COMMON_LISP_MAKE_CONDITION.lisp_name = 'MAKE-CONDITION'
lisp.setSymbolFunction(G_1987, CL_COMMON_LISP_MAKE_CONDITION);
TMP_1997=lisp.callFunctionWithCallStack(G_456,G_1247,lisp.S_nil);
TMP_1999=lisp.callFunctionWithCallStack(G_64,G_110,lisp.makeCons(G_1251, lisp.S_nil),G_104,lisp.makeCons(G_1998, lisp.S_nil),G_102,G_1598);
TMP_2000=lisp.callFunctionWithCallStack(G_64,TMP_1999);
G_686.func(TMP_1997,G_1247,G_694,lisp.S_nil,G_692,TMP_2000);
{
TMP_2001=lisp.callFunctionWithCallStack(G_522);
L_EQL_SPECIALIZER_TABLE__1369=lisp.values1(TMP_2001);
TMP_2002=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_2007;
let L_G865__1376;
let TMP_2006;
let L_G_STORE868__1375;
let TMP_2005;
let L_G867__1374;
let L_G866__1373;
let TMP_2004;
let L_G864__1372;
let TMP_2003;
let L_OBJECT__1370;
L_OBJECT__1370=arguments[0];
{
TMP_2003=lisp.callFunctionWithCallStack(G_525,L_OBJECT__1370,L_EQL_SPECIALIZER_TABLE__1369);
L_G864__1372=lisp.values1(TMP_2003);
if(lisp.values1(L_G864__1372) !== lisp.S_nil){
TMP_2004=lisp.values1(L_G864__1372);
}else{
{
{
L_G866__1373=lisp.values1(L_OBJECT__1370);
L_G867__1374=lisp.values1(L_EQL_SPECIALIZER_TABLE__1369);
TMP_2005=lisp.callFunctionWithCallStack(G_1781,G_1247,G_1998,L_OBJECT__1370);
L_G_STORE868__1375=lisp.values1(TMP_2005);
TMP_2006=lisp.callFunctionWithCallStack(G_531,L_G_STORE868__1375,L_G866__1373,L_G867__1374);
}
L_G865__1376=lisp.values1(lisp.values1(TMP_2006));
if(lisp.values1(L_G865__1376) !== lisp.S_nil){
TMP_2007=lisp.values1(L_G865__1376);
}else{
TMP_2007=lisp.values1(lisp.S_nil);
}
}
TMP_2004=TMP_2007;
}
}
return TMP_2004;
});
lisp.CL_setSymbolFunction(G_1561,TMP_2002);
}
TMP_2009=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_2030;
let TMP_2029;
let TMP_2028;
let TMP_2027;
let TMP_2026;
let TMP_2025;
let TMP_2024;
let L_OPTIONS__1386;
let L_G873__1385;
let TMP_2023;
let L_DIRECT_SLOT_SPECS__1384;
let TMP_2022;
let L_G872__1383;
let TMP_2021;
let L_DIRECT_SUPERCLASSES__1382;
let TMP_2020;
let L_G871__1381;
let TMP_2019;
let L_NAME__1380;
let TMP_2018;
let L_G870__1379;
let TMP_2017;
let TMP_2014;
let TMP_2012;
let TMP_2010;
let L_G869__1378;
let L_G312__1377;
L_G312__1377=lisp.jsArrayToList(arguments, 0);
{
L_G869__1378=lisp.values1(L_G312__1377);
{
TMP_2010=lisp.callFunctionWithCallStack(G_2011,L_G869__1378);
TMP_2012=lisp.callFunctionWithCallStack(G_2013,3,TMP_2010);
if(lisp.values1(TMP_2012) !== lisp.S_nil){
TMP_2014=lisp.values1(lisp.S_nil);
}else{
TMP_2017=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_315, lisp.makeCons(G_349, lisp.makeCons(G_2015, lisp.makeCons(G_1395, lisp.makeCons(G_2016, lisp.S_nil))))),L_G869__1378);
TMP_2014=lisp.values1(lisp.values1(TMP_2017));
}
L_G870__1379=lisp.values1(TMP_2014);
TMP_2018=lisp.callFunctionWithCallStack(G_1604,L_G869__1378);
L_NAME__1380=lisp.values1(TMP_2018);
TMP_2019=lisp.callFunctionWithCallStack(G_1606,L_G869__1378);
L_G871__1381=lisp.values1(TMP_2019);
TMP_2020=lisp.callFunctionWithCallStack(G_1604,L_G871__1381);
L_DIRECT_SUPERCLASSES__1382=lisp.values1(TMP_2020);
TMP_2021=lisp.callFunctionWithCallStack(G_1606,L_G871__1381);
L_G872__1383=lisp.values1(TMP_2021);
TMP_2022=lisp.callFunctionWithCallStack(G_1604,L_G872__1383);
L_DIRECT_SLOT_SPECS__1384=lisp.values1(TMP_2022);
TMP_2023=lisp.callFunctionWithCallStack(G_1606,L_G872__1383);
L_G873__1385=lisp.values1(TMP_2023);
L_OPTIONS__1386=lisp.values1(L_G873__1385);
TMP_2024=lisp.callFunctionWithCallStack(G_64,G_612,L_NAME__1380);
TMP_2025=lisp.callFunctionWithCallStack(G_66,G_456,TMP_2024,lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_2026=lisp.callFunctionWithCallStack(G_64,G_612,L_NAME__1380);
TMP_2027=lisp.callFunctionWithCallStack(G_64,G_612,L_DIRECT_SUPERCLASSES__1382);
TMP_2028=G_622.func(L_DIRECT_SLOT_SPECS__1384);
TMP_2029=G_627.func(L_OPTIONS__1386);
TMP_2030=lisp.callFunctionWithCallStack(G_66,G_686,TMP_2025,TMP_2026,G_694,TMP_2027,G_692,TMP_2028,TMP_2029);
}
}
return TMP_2030;
});
lisp.CL_put(G_683,G_2008,TMP_2009);
TMP_2031=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_2044;
let TMP_2043;
let TMP_2042;
let TMP_2041;
let L_OPTIONS__1394;
let L_G877__1393;
let TMP_2040;
let L_LAMBDA_LIST__1392;
let TMP_2039;
let L_G876__1391;
let TMP_2038;
let L_FUNCTION_NAME__1390;
let TMP_2037;
let L_G875__1389;
let TMP_2036;
let TMP_2034;
let TMP_2033;
let TMP_2032;
let L_G874__1388;
let L_G532__1387;
L_G532__1387=lisp.jsArrayToList(arguments, 0);
{
L_G874__1388=lisp.values1(L_G532__1387);
{
TMP_2032=lisp.callFunctionWithCallStack(G_2011,L_G874__1388);
TMP_2033=lisp.callFunctionWithCallStack(G_2013,2,TMP_2032);
if(lisp.values1(TMP_2033) !== lisp.S_nil){
TMP_2034=lisp.values1(lisp.S_nil);
}else{
TMP_2036=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_2035, lisp.makeCons(G_946, lisp.makeCons(G_1391, lisp.makeCons(G_2016, lisp.S_nil)))),L_G874__1388);
TMP_2034=lisp.values1(lisp.values1(TMP_2036));
}
L_G875__1389=lisp.values1(TMP_2034);
TMP_2037=lisp.callFunctionWithCallStack(G_1604,L_G874__1388);
L_FUNCTION_NAME__1390=lisp.values1(TMP_2037);
TMP_2038=lisp.callFunctionWithCallStack(G_1606,L_G874__1388);
L_G876__1391=lisp.values1(TMP_2038);
TMP_2039=lisp.callFunctionWithCallStack(G_1604,L_G876__1391);
L_LAMBDA_LIST__1392=lisp.values1(TMP_2039);
TMP_2040=lisp.callFunctionWithCallStack(G_1606,L_G876__1391);
L_G877__1393=lisp.values1(TMP_2040);
L_OPTIONS__1394=lisp.values1(L_G877__1393);
TMP_2041=lisp.callFunctionWithCallStack(G_64,G_612,L_FUNCTION_NAME__1390);
TMP_2042=lisp.callFunctionWithCallStack(G_64,G_612,L_LAMBDA_LIST__1392);
TMP_2043=G_1124.func(L_OPTIONS__1394);
TMP_2044=lisp.callFunctionWithCallStack(G_66,G_1154,TMP_2041,G_1155,TMP_2042,TMP_2043);
}
}
return TMP_2044;
});
lisp.CL_put(G_1099,G_2008,TMP_2031);
TMP_2045=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_2074;
let TMP_2073;
let TMP_2072;
let TMP_2071;
let TMP_2070;
let TMP_2069;
let TMP_2068;
let TMP_2067;
let TMP_2065;
let TMP_2064;
let TMP_2063;
let TMP_2062;
let TMP_2061;
let TMP_2060;
let TMP_2058;
let L_G_CALL_NEXT_METHOD_ARGS__1404;
let TMP_2057;
let L_G_NEXT_EMFUN__1403;
let TMP_2056;
let L_G_ARGS__1402;
let TMP_2055;
let L_G881__1401;
let TMP_2054;
let L_BODY__1400;
let TMP_2053;
let L_G880__1399;
let TMP_2052;
let L_LAMBDA_LIST__1398;
let TMP_2051;
let L_G879__1397;
let TMP_2050;
let TMP_2048;
let TMP_2047;
let TMP_2046;
let L_G878__1396;
let L_G663__1395;
L_G663__1395=lisp.jsArrayToList(arguments, 0);
{
L_G878__1396=lisp.values1(L_G663__1395);
{
TMP_2046=lisp.callFunctionWithCallStack(G_2011,L_G878__1396);
TMP_2047=lisp.callFunctionWithCallStack(G_2013,2,TMP_2046,2);
if(lisp.values1(TMP_2047) !== lisp.S_nil){
TMP_2048=lisp.values1(lisp.S_nil);
}else{
TMP_2050=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_946, lisp.makeCons(G_2049, lisp.S_nil)),L_G878__1396);
TMP_2048=lisp.values1(lisp.values1(TMP_2050));
}
L_G879__1397=lisp.values1(TMP_2048);
TMP_2051=lisp.callFunctionWithCallStack(G_1604,L_G878__1396);
L_LAMBDA_LIST__1398=lisp.values1(TMP_2051);
TMP_2052=lisp.callFunctionWithCallStack(G_1606,L_G878__1396);
L_G880__1399=lisp.values1(TMP_2052);
TMP_2053=lisp.callFunctionWithCallStack(G_1604,L_G880__1399);
L_BODY__1400=lisp.values1(TMP_2053);
TMP_2054=lisp.callFunctionWithCallStack(G_1606,L_G880__1399);
L_G881__1401=lisp.values1(TMP_2054);
{
TMP_2055=lisp.callFunctionWithCallStack(G_58);
L_G_ARGS__1402=lisp.values1(TMP_2055);
TMP_2056=lisp.callFunctionWithCallStack(G_58);
L_G_NEXT_EMFUN__1403=lisp.values1(TMP_2056);
TMP_2057=lisp.callFunctionWithCallStack(G_58);
L_G_CALL_NEXT_METHOD_ARGS__1404=lisp.values1(TMP_2057);
TMP_2058=lisp.callFunctionWithCallStack(G_64,L_G_ARGS__1402,L_G_NEXT_EMFUN__1403);
TMP_2060=lisp.callFunctionWithCallStack(G_64,G_1395,L_G_CALL_NEXT_METHOD_ARGS__1404);
TMP_2061=lisp.callFunctionWithCallStack(G_64,G_5,L_G_NEXT_EMFUN__1403);
TMP_2062=lisp.callFunctionWithCallStack(G_64,G_1744,L_G_CALL_NEXT_METHOD_ARGS__1404,L_G_ARGS__1402);
TMP_2063=lisp.callFunctionWithCallStack(G_64,G_1746,L_G_NEXT_EMFUN__1403,TMP_2062);
TMP_2064=lisp.callFunctionWithCallStack(G_64,G_1741,TMP_2061,lisp.makeCons(G_273, lisp.makeCons(G_61.func(lisp.codeArrayToString([78, 111, 32, 110, 101, 120, 116, 32, 109, 101, 116, 104, 111, 100])), lisp.S_nil)),TMP_2063);
TMP_2065=lisp.callFunctionWithCallStack(G_64,G_1875,TMP_2060,TMP_2064);
TMP_2067=lisp.callFunctionWithCallStack(G_64,G_5,L_G_NEXT_EMFUN__1403);
TMP_2068=lisp.callFunctionWithCallStack(G_64,G_1285,TMP_2067);
TMP_2069=lisp.callFunctionWithCallStack(G_64,G_2066,lisp.S_nil,TMP_2068);
TMP_2070=lisp.callFunctionWithCallStack(G_64,TMP_2065,TMP_2069);
TMP_2071=lisp.callFunctionWithCallStack(G_66,G_557,L_LAMBDA_LIST__1398,L_BODY__1400);
TMP_2072=lisp.callFunctionWithCallStack(G_64,G_22,TMP_2071,L_G_ARGS__1402);
TMP_2073=lisp.callFunctionWithCallStack(G_64,G_2059,TMP_2070,TMP_2072);
TMP_2074=lisp.callFunctionWithCallStack(G_64,G_557,TMP_2058,TMP_2073);
}
}
}
return TMP_2074;
});
lisp.CL_put(G_1515,G_2008,TMP_2045);
TMP_2075=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_2092;
let TMP_2091;
let TMP_2090;
let TMP_2081;
let L_ARGS__1408;
let L_G883__1407;
let TMP_2080;
let TMP_2078;
let TMP_2077;
let TMP_2076;
let L_G882__1406;
let L_G664__1405;
L_G664__1405=lisp.jsArrayToList(arguments, 0);
{
L_G882__1406=lisp.values1(L_G664__1405);
{
TMP_2076=lisp.callFunctionWithCallStack(G_2011,L_G882__1406);
TMP_2077=lisp.callFunctionWithCallStack(G_2013,0,TMP_2076);
if(lisp.values1(TMP_2077) !== lisp.S_nil){
TMP_2078=lisp.values1(lisp.S_nil);
}else{
TMP_2080=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1395, lisp.makeCons(G_2079, lisp.S_nil)),L_G882__1406);
TMP_2078=lisp.values1(lisp.values1(TMP_2080));
}
L_G883__1407=lisp.values1(TMP_2078);
L_ARGS__1408=lisp.values1(L_G882__1406);
TMP_2081=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_2089;
let TMP_2088;
let TMP_2087;
let TMP_2086;
let TMP_2085;
let TMP_2084;
let TMP_2083;
let TMP_2082;
let L_G884__1414;
let L_BODY__1413;
let L_SPECIALIZERS__1412;
let L_LAMBDA_LIST__1411;
let L_QUALIFIERS__1410;
let L_FUNCTION_NAME__1409;
L_FUNCTION_NAME__1409=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_QUALIFIERS__1410=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_LAMBDA_LIST__1411=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_SPECIALIZERS__1412=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_BODY__1413=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
L_G884__1414=lisp.jsArrayToList(arguments, 5);
TMP_2082=lisp.callFunctionWithCallStack(G_64,G_612,L_FUNCTION_NAME__1409);
TMP_2083=lisp.callFunctionWithCallStack(G_64,G_612,L_LAMBDA_LIST__1411);
TMP_2084=lisp.callFunctionWithCallStack(G_64,G_612,L_QUALIFIERS__1410);
TMP_2085=lisp.callFunctionWithCallStack(G_64,G_612,L_SPECIALIZERS__1412);
TMP_2086=lisp.callFunctionWithCallStack(G_64,G_612,L_BODY__1413);
TMP_2087=G_1501.func(L_LAMBDA_LIST__1411);
TMP_2088=lisp.callFunctionWithCallStack(G_64,G_1515,TMP_2087,L_BODY__1413);
TMP_2089=lisp.callFunctionWithCallStack(G_64,G_1518,TMP_2082,G_1155,TMP_2083,G_1520,TMP_2084,G_1428,TMP_2085,G_1523,TMP_2086,G_1525,TMP_2088);
return TMP_2089;
});
TMP_2090=lisp.callFunctionWithCallStack(G_1344,TMP_2081);
TMP_2091=G_1465.func(L_ARGS__1408);
TMP_2092=lisp.CL_multipleValueCall(TMP_2090,TMP_2091);
}
}
return TMP_2092;
});
lisp.CL_put(G_1516,G_2008,TMP_2075);
TMP_2093=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_2130;
let TMP_2129;
let TMP_2128;
let TMP_2127;
let TMP_2126;
let TMP_2125;
let TMP_2124;
let TMP_2123;
let L_G894__1432;
let TMP_2122;
let TMP_2121;
let TMP_2120;
let TMP_2119;
let TMP_2118;
let L_G893__1431;
let TMP_2117;
let TMP_2116;
let L_G892__1430;
let TMP_2115;
let TMP_2114;
let TMP_2113;
let L_G891__1429;
let TMP_2112;
let L_G890__1428;
let L_G_STREAM__1427;
let TMP_2110;
let L_G_CONDITION__1426;
let TMP_2109;
let L_REPORT__1425;
let TMP_2107;
let TMP_2106;
let L_OPTIONS__1424;
let L_G889__1423;
let TMP_2105;
let L_SLOT_SPECS__1422;
let TMP_2104;
let L_G888__1421;
let TMP_2103;
let L_PARENT_TYPES__1420;
let TMP_2102;
let L_G887__1419;
let TMP_2101;
let L_NAME__1418;
let TMP_2100;
let L_G886__1417;
let TMP_2099;
let TMP_2096;
let TMP_2095;
let TMP_2094;
let L_G885__1416;
let L_G801__1415;
L_G801__1415=lisp.jsArrayToList(arguments, 0);
{
L_G885__1416=lisp.values1(L_G801__1415);
{
TMP_2094=lisp.callFunctionWithCallStack(G_2011,L_G885__1416);
TMP_2095=lisp.callFunctionWithCallStack(G_2013,3,TMP_2094);
if(lisp.values1(TMP_2095) !== lisp.S_nil){
TMP_2096=lisp.values1(lisp.S_nil);
}else{
TMP_2099=lisp.callFunctionWithCallStack(G_273,G_61.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_315, lisp.makeCons(G_2097, lisp.makeCons(G_2098, lisp.makeCons(G_1391, lisp.makeCons(G_2016, lisp.S_nil))))),L_G885__1416);
TMP_2096=lisp.values1(lisp.values1(TMP_2099));
}
L_G886__1417=lisp.values1(TMP_2096);
TMP_2100=lisp.callFunctionWithCallStack(G_1604,L_G885__1416);
L_NAME__1418=lisp.values1(TMP_2100);
TMP_2101=lisp.callFunctionWithCallStack(G_1606,L_G885__1416);
L_G887__1419=lisp.values1(TMP_2101);
TMP_2102=lisp.callFunctionWithCallStack(G_1604,L_G887__1419);
L_PARENT_TYPES__1420=lisp.values1(TMP_2102);
TMP_2103=lisp.callFunctionWithCallStack(G_1606,L_G887__1419);
L_G888__1421=lisp.values1(TMP_2103);
TMP_2104=lisp.callFunctionWithCallStack(G_1604,L_G888__1421);
L_SLOT_SPECS__1422=lisp.values1(TMP_2104);
TMP_2105=lisp.callFunctionWithCallStack(G_1606,L_G888__1421);
L_G889__1423=lisp.values1(TMP_2105);
L_OPTIONS__1424=lisp.values1(L_G889__1423);
{
TMP_2106=lisp.callFunctionWithCallStack(G_262,G_1870,L_OPTIONS__1424);
TMP_2107=lisp.callFunctionWithCallStack(G_2108,TMP_2106);
L_REPORT__1425=lisp.values1(TMP_2107);
TMP_2109=lisp.callFunctionWithCallStack(G_58);
L_G_CONDITION__1426=lisp.values1(TMP_2109);
TMP_2110=lisp.callFunctionWithCallStack(G_58);
L_G_STREAM__1427=lisp.values1(TMP_2110);
{
L_G890__1428=lisp.values1(L_PARENT_TYPES__1420);
if(lisp.values1(L_G890__1428) !== lisp.S_nil){
TMP_2112=lisp.values1(L_G890__1428);
}else{
{
L_G891__1429=lisp.values1(lisp.makeCons(G_1834, lisp.S_nil));
if(lisp.values1(L_G891__1429) !== lisp.S_nil){
TMP_2113=lisp.values1(L_G891__1429);
}else{
TMP_2113=lisp.values1(lisp.S_nil);
}
}
TMP_2112=lisp.values1(lisp.values1(TMP_2113));
}
}
TMP_2114=lisp.callFunctionWithCallStack(G_66,G_683,L_NAME__1418,lisp.values1(TMP_2112),L_SLOT_SPECS__1422,L_OPTIONS__1424);
{
TMP_2115=lisp.callFunctionWithCallStack(G_5,L_REPORT__1425);
L_G892__1430=lisp.values1(TMP_2115);
if(lisp.values1(L_G892__1430) !== lisp.S_nil){
TMP_2116=lisp.values1(L_G892__1430);
}else{
{
TMP_2117=lisp.callFunctionWithCallStack(G_512,L_REPORT__1425);
L_G893__1431=lisp.values1(TMP_2117);
if(lisp.values1(L_G893__1431) !== lisp.S_nil){
TMP_2119=lisp.callFunctionWithCallStack(G_64,L_G_CONDITION__1426,L_NAME__1418);
TMP_2120=lisp.callFunctionWithCallStack(G_64,TMP_2119,L_G_STREAM__1427);
TMP_2121=lisp.callFunctionWithCallStack(G_64,G_245,L_REPORT__1425,L_G_STREAM__1427);
TMP_2122=lisp.callFunctionWithCallStack(G_64,G_1516,G_257,TMP_2120,TMP_2121);
TMP_2118=lisp.values1(lisp.values1(TMP_2122));
}else{
{
L_G894__1432=lisp.values1(G_26);
if(lisp.values1(L_G894__1432) !== lisp.S_nil){
TMP_2124=lisp.callFunctionWithCallStack(G_64,L_G_CONDITION__1426,L_NAME__1418);
TMP_2125=lisp.callFunctionWithCallStack(G_64,TMP_2124,L_G_STREAM__1427);
TMP_2126=lisp.callFunctionWithCallStack(G_64,L_REPORT__1425,L_G_CONDITION__1426,L_G_STREAM__1427);
TMP_2127=lisp.callFunctionWithCallStack(G_64,G_1741,G_1874,lisp.makeCons(G_1875, lisp.S_nil),TMP_2126);
TMP_2128=lisp.callFunctionWithCallStack(G_64,G_1516,G_257,TMP_2125,TMP_2127);
TMP_2123=lisp.values1(lisp.values1(TMP_2128));
}else{
TMP_2123=lisp.values1(lisp.S_nil);
}
}
TMP_2118=lisp.values1(lisp.values1(TMP_2123));
}
}
TMP_2116=lisp.values1(lisp.values1(TMP_2118));
}
}
TMP_2129=lisp.callFunctionWithCallStack(G_64,G_612,L_NAME__1418);
TMP_2130=lisp.callFunctionWithCallStack(G_64,G_2111,TMP_2114,lisp.values1(TMP_2116),TMP_2129);
}
}
}
return TMP_2130;
});
lisp.CL_put(G_1830,G_2008,TMP_2093);
}catch(TMP_1){G_2131.func();
console.log(TMP_1.message);
}


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_7;
let G_9;
let G_11;
let G_12;
let G_14;
let G_16;
let G_17;
let G_19;
let G_21;
let G_23;
let G_25;
let G_27;
let G_32;
let G_34;
let G_35;
let G_37;
let G_41;
let G_45;
let G_47;
let G_48;
let G_51;
let G_53;
let G_56;
let G_59;
let G_62;
let G_77;
let G_80;
let G_95;
let G_98;
let G_113;
let G_116;
let G_131;
let G_134;
let G_149;
let G_150;
let G_158;
let G_160;
let G_162;
let G_164;
let G_166;
let G_171;
let G_178;
let G_188;
let G_192;
let G_199;
let G_213;
let G_215;
let G_216;
let G_217;
let G_219;
let G_221;
let G_225;
let G_227;
let G_232;
let G_237;
let G_238;
let G_239;
let G_240;
let G_242;
let G_245;
let G_248;
let G_250;
let G_257;
let G_259;
let G_267;
let G_268;
let G_277;
let G_280;
let G_283;
let G_284;
let G_286;
let G_288;
let G_289;
let G_290;
let G_293;
let G_295;
let G_301;
let G_302;
let G_304;
let G_315;
let G_320;
let G_325;
let G_326;
let G_327;
let G_328;
let G_330;
let G_332;
let G_335;
let G_337;
let G_341;
let G_349;
let G_350;
let G_353;
let G_355;
let G_357;
let G_358;
let G_359;
let G_362;
let G_364;
let G_365;
let G_366;
let G_371;
let G_372;
let G_373;
let G_374;
let G_375;
let G_376;
let G_386;
let G_399;
let G_401;
let G_404;
let G_408;
let G_418;
let G_419;
let G_427;
let G_429;
let G_430;
let G_443;
let G_445;
let G_448;
let G_453;
let G_461;
let G_478;
let G_481;
let G_485;
let G_490;
let G_491;
let G_492;
let G_500;
let G_502;
let G_503;
let G_510;
let G_522;
let G_523;
let G_524;
let G_541;
let G_548;
let G_549;
let G_550;
let G_562;
let G_563;
let G_565;
let G_571;
let G_581;
let G_582;
let G_583;
let G_584;
let G_592;
let G_596;
let G_602;
let CL_COMMON_LISP_CHECK_TYPE_ERROR;
let CL_COMMON_LISP_READ_EVALUATED_FORM;
let CL_COMMON_LISP_USE_VALUE;
let CL_COMMON_LISP_STORE_VALUE;
let CL_COMMON_LISP_MUFFLE_WARNING;
let CL_COMMON_LISP_CONTINUE;
let CL_COMMON_LISP_ABORT;
let CL_COMMON_LISP_WARN;
let CL_COMMON_LISP_CERROR;
let CL_COMMON_LISP_INVOKE_RESTART_INTERACTIVELY;
let CL_COMMON_LISP_INTERACTIVE_RESTART_ARGUMENTS;
let CL_COMMON_LISP_INVOKE_RESTART;
let CL_COMMON_LISP_FIND_RESTART_OR_CONTROL_ERROR;
let CL_COMMON_LISP_FIND_RESTART;
let CL_COMMON_LISP_COMPUTE_RESTARTS;
let CL_COMMON_LISP_MAP_RESTARTS;
let CL_COMMON_LISP_RESTART_ASSOCIATED_CONDITIONS;
let CL_COMMON_LISP_RESTART_TEST_FUNCTION;
let CL_COMMON_LISP_RESTART_REPORT_FUNCTION;
let CL_COMMON_LISP_RESTART_INTERACTIVE_FUNCTION;
let CL_COMMON_LISP_RESTART_FUNCTION;
let CL_COMMON_LISP_RESTART_NAME;
let CL_COMMON_LISP_MAKE_RESTART;
let CL_COMMON_LISP_RESTART_P;
let CL_COMMON_LISP_COPY_RESTART;
let TMP_577;
let TMP_544;
let TMP_518;
let TMP_414;
let TMP_351;
let L_G51__101;
let L_G50__100;
let TMP_148;
let TMP_147;
let TMP_138;
let TMP_135;
let TMP_129;
let TMP_120;
let TMP_117;
let TMP_111;
let TMP_102;
let TMP_99;
let TMP_93;
let TMP_84;
let TMP_81;
let TMP_75;
let TMP_66;
let TMP_63;
let TMP_57;
let TMP_42;
let TMP_38;
let TMP_3;
// toplevel defun
let F_COPY_RESTART_6;
F_COPY_RESTART_6=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_7, arguments.length);
}
let TMP_8;
let L_X__1;
L_X__1=arguments[0];
TMP_8=lisp.callFunctionWithCallStack(G_9,L_X__1);
return TMP_8;
});
CL_COMMON_LISP_COPY_RESTART=lisp.values1(F_COPY_RESTART_6);
let F_RESTART_P_10;
F_RESTART_P_10=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_11, arguments.length);
}
let TMP_13;
let L_X__3;
L_X__3=arguments[0];
TMP_13=lisp.callFunctionWithCallStack(G_14,L_X__3,G_12);
return TMP_13;
});
CL_COMMON_LISP_RESTART_P=lisp.values1(F_RESTART_P_10);
let F_MAKE_RESTART_15;
F_MAKE_RESTART_15=(function(){
if(arguments.length < 0 || 12 < arguments.length) {
lisp.argumentsError(G_16, arguments.length);
}
let TMP_30;
let L_ASSOCIATED_CONDITIONS__10;
let L_TEST_FUNCTION__9;
let L_REPORT_FUNCTION__8;
let L_INTERACTIVE_FUNCTION__7;
let L_FUNCTION__6;
let L_NAME__5;
let supplied_NAME__5;
for (let TMP_18 = 0; TMP_18 < arguments.length; TMP_18 += 2) {
if(arguments[TMP_18] === G_17){
supplied_NAME__5=arguments[TMP_18+1];
break;
}
}
L_NAME__5=supplied_NAME__5 !== undefined ? supplied_NAME__5 : (lisp.values1(lisp.S_nil));
let supplied_FUNCTION__6;
for (let TMP_20 = 0; TMP_20 < arguments.length; TMP_20 += 2) {
if(arguments[TMP_20] === G_19){
supplied_FUNCTION__6=arguments[TMP_20+1];
break;
}
}
L_FUNCTION__6=supplied_FUNCTION__6 !== undefined ? supplied_FUNCTION__6 : (lisp.values1(lisp.S_nil));
let supplied_INTERACTIVE_FUNCTION__7;
for (let TMP_22 = 0; TMP_22 < arguments.length; TMP_22 += 2) {
if(arguments[TMP_22] === G_21){
supplied_INTERACTIVE_FUNCTION__7=arguments[TMP_22+1];
break;
}
}
L_INTERACTIVE_FUNCTION__7=supplied_INTERACTIVE_FUNCTION__7 !== undefined ? supplied_INTERACTIVE_FUNCTION__7 : (lisp.values1(lisp.S_nil));
let supplied_REPORT_FUNCTION__8;
for (let TMP_24 = 0; TMP_24 < arguments.length; TMP_24 += 2) {
if(arguments[TMP_24] === G_23){
supplied_REPORT_FUNCTION__8=arguments[TMP_24+1];
break;
}
}
L_REPORT_FUNCTION__8=supplied_REPORT_FUNCTION__8 !== undefined ? supplied_REPORT_FUNCTION__8 : (lisp.values1(lisp.S_nil));
let supplied_TEST_FUNCTION__9;
for (let TMP_26 = 0; TMP_26 < arguments.length; TMP_26 += 2) {
if(arguments[TMP_26] === G_25){
supplied_TEST_FUNCTION__9=arguments[TMP_26+1];
break;
}
}
L_TEST_FUNCTION__9=supplied_TEST_FUNCTION__9 !== undefined ? supplied_TEST_FUNCTION__9 : (lisp.values1(lisp.S_nil));
let supplied_ASSOCIATED_CONDITIONS__10;
for (let TMP_28 = 0; TMP_28 < arguments.length; TMP_28 += 2) {
if(arguments[TMP_28] === G_27){
supplied_ASSOCIATED_CONDITIONS__10=arguments[TMP_28+1];
break;
}
}
L_ASSOCIATED_CONDITIONS__10=supplied_ASSOCIATED_CONDITIONS__10 !== undefined ? supplied_ASSOCIATED_CONDITIONS__10 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_29 = 0; TMP_29 < arguments.length; TMP_29 += 2) {
if(arguments[TMP_29]!==G_27 && arguments[TMP_29]!==G_25 && arguments[TMP_29]!==G_23 && arguments[TMP_29]!==G_21 && arguments[TMP_29]!==G_19 && arguments[TMP_29]!==G_17) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_29].name); }
}
TMP_30=lisp.CL_makeStructure(G_12,L_NAME__5,L_FUNCTION__6,L_INTERACTIVE_FUNCTION__7,L_REPORT_FUNCTION__8,L_TEST_FUNCTION__9,L_ASSOCIATED_CONDITIONS__10);
return TMP_30;
});
CL_COMMON_LISP_MAKE_RESTART=lisp.values1(F_MAKE_RESTART_15);
let F_RESTART_NAME_31;
F_RESTART_NAME_31=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_32, arguments.length);
}
let TMP_36;
let TMP_33;
let L_STRUCTURE__12;
L_STRUCTURE__12=arguments[0];
TMP_33=lisp.CL_structurep(L_STRUCTURE__12);
if(lisp.values1(TMP_33) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__12,G_34);
}
TMP_36=lisp.CL_structureRef(L_STRUCTURE__12,0);
return TMP_36;
});
CL_COMMON_LISP_RESTART_NAME=lisp.values1(F_RESTART_NAME_31);
let F_RESTART_FUNCTION_58;
F_RESTART_FUNCTION_58=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_59, arguments.length);
}
let TMP_61;
let TMP_60;
let L_STRUCTURE__26;
L_STRUCTURE__26=arguments[0];
TMP_60=lisp.CL_structurep(L_STRUCTURE__26);
if(lisp.values1(TMP_60) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__26,G_34);
}
TMP_61=lisp.CL_structureRef(L_STRUCTURE__26,1);
return TMP_61;
});
CL_COMMON_LISP_RESTART_FUNCTION=lisp.values1(F_RESTART_FUNCTION_58);
let F_RESTART_INTERACTIVE_FUNCTION_76;
F_RESTART_INTERACTIVE_FUNCTION_76=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_77, arguments.length);
}
let TMP_79;
let TMP_78;
let L_STRUCTURE__40;
L_STRUCTURE__40=arguments[0];
TMP_78=lisp.CL_structurep(L_STRUCTURE__40);
if(lisp.values1(TMP_78) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__40,G_34);
}
TMP_79=lisp.CL_structureRef(L_STRUCTURE__40,2);
return TMP_79;
});
CL_COMMON_LISP_RESTART_INTERACTIVE_FUNCTION=lisp.values1(F_RESTART_INTERACTIVE_FUNCTION_76);
let F_RESTART_REPORT_FUNCTION_94;
F_RESTART_REPORT_FUNCTION_94=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_95, arguments.length);
}
let TMP_97;
let TMP_96;
let L_STRUCTURE__54;
L_STRUCTURE__54=arguments[0];
TMP_96=lisp.CL_structurep(L_STRUCTURE__54);
if(lisp.values1(TMP_96) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__54,G_34);
}
TMP_97=lisp.CL_structureRef(L_STRUCTURE__54,3);
return TMP_97;
});
CL_COMMON_LISP_RESTART_REPORT_FUNCTION=lisp.values1(F_RESTART_REPORT_FUNCTION_94);
let F_RESTART_TEST_FUNCTION_112;
F_RESTART_TEST_FUNCTION_112=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_113, arguments.length);
}
let TMP_115;
let TMP_114;
let L_STRUCTURE__68;
L_STRUCTURE__68=arguments[0];
TMP_114=lisp.CL_structurep(L_STRUCTURE__68);
if(lisp.values1(TMP_114) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__68,G_34);
}
TMP_115=lisp.CL_structureRef(L_STRUCTURE__68,4);
return TMP_115;
});
CL_COMMON_LISP_RESTART_TEST_FUNCTION=lisp.values1(F_RESTART_TEST_FUNCTION_112);
let F_RESTART_ASSOCIATED_CONDITIONS_130;
F_RESTART_ASSOCIATED_CONDITIONS_130=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_131, arguments.length);
}
let TMP_133;
let TMP_132;
let L_STRUCTURE__82;
L_STRUCTURE__82=arguments[0];
TMP_132=lisp.CL_structurep(L_STRUCTURE__82);
if(lisp.values1(TMP_132) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__82,G_34);
}
TMP_133=lisp.CL_structureRef(L_STRUCTURE__82,5);
return TMP_133;
});
CL_COMMON_LISP_RESTART_ASSOCIATED_CONDITIONS=lisp.values1(F_RESTART_ASSOCIATED_CONDITIONS_130);
let F_MAP_RESTARTS_159;
F_MAP_RESTARTS_159=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_160, arguments.length);
}
let TMP_186;
let L_G70__115;
let TMP_185;
let TMP_184;
let TMP_183;
let L_G69__114;
let TMP_182;
let TMP_181;
let TMP_180;
let TMP_179;
let L_G68__113;
let TMP_177;
let TMP_176;
let TMP_175;
let L_G67__112;
let TMP_174;
let TMP_173;
let TMP_172;
let L_G66__111;
let TMP_170;
let TMP_169;
let L_RESTART__110;
let TMP_168;
let TMP_167;
let L_G59__109;
let TMP_165;
let L_RESTARTS__107;
let TMP_163;
let TMP_161;
let L_G52__106;
let L_CONDITION__103;
let L_FUNCTION__102;
L_FUNCTION__102=arguments[0];
L_CONDITION__103=arguments[1];
{
L_G52__106=lisp.values1(lisp.symbolValue(G_2));
for(;;){
TMP_161=lisp.callFunctionWithCallStack(G_162,L_G52__106);
if(lisp.values1(TMP_161) !== lisp.S_nil){
}else{
{
TMP_163=lisp.callFunctionWithCallStack(G_164,L_G52__106);
L_RESTARTS__107=lisp.values1(TMP_163);
TMP_165=lisp.callFunctionWithCallStack(G_166,L_G52__106);
L_G52__106=lisp.values1(TMP_165);
{
L_G59__109=lisp.values1(L_RESTARTS__107);
for(;;){
TMP_167=lisp.callFunctionWithCallStack(G_162,L_G59__109);
if(lisp.values1(TMP_167) !== lisp.S_nil){
}else{
{
TMP_168=lisp.callFunctionWithCallStack(G_164,L_G59__109);
L_RESTART__110=lisp.values1(TMP_168);
TMP_169=lisp.callFunctionWithCallStack(G_166,L_G59__109);
L_G59__109=lisp.values1(TMP_169);
{
TMP_170=lisp.callFunctionWithCallStack(G_171,L_CONDITION__103);
L_G66__111=lisp.values1(TMP_170);
if(lisp.values1(L_G66__111) !== lisp.S_nil){
TMP_172=lisp.values1(L_G66__111);
}else{
{
TMP_173=G_131.func(L_RESTART__110);
TMP_174=lisp.callFunctionWithCallStack(G_171,TMP_173);
L_G67__112=lisp.values1(TMP_174);
if(lisp.values1(L_G67__112) !== lisp.S_nil){
TMP_175=lisp.values1(L_G67__112);
}else{
{
TMP_176=G_131.func(L_RESTART__110);
TMP_177=lisp.callFunctionWithCallStack(G_178,L_CONDITION__103,TMP_176);
L_G68__113=lisp.values1(TMP_177);
if(lisp.values1(L_G68__113) !== lisp.S_nil){
TMP_179=lisp.values1(L_G68__113);
}else{
TMP_179=lisp.values1(lisp.S_nil);
}
}
TMP_175=lisp.values1(lisp.values1(TMP_179));
}
}
TMP_172=lisp.values1(lisp.values1(TMP_175));
}
}
if(lisp.values1(lisp.values1(TMP_172)) !== lisp.S_nil){
{
TMP_181=G_113.func(L_RESTART__110);
TMP_182=lisp.callFunctionWithCallStack(G_171,TMP_181);
L_G69__114=lisp.values1(TMP_182);
if(lisp.values1(L_G69__114) !== lisp.S_nil){
TMP_183=lisp.values1(L_G69__114);
}else{
{
TMP_184=G_113.func(L_RESTART__110);
TMP_185=lisp.CL_funcall(lisp.values1(TMP_184),L_CONDITION__103);
L_G70__115=lisp.values1(TMP_185);
if(lisp.values1(L_G70__115) !== lisp.S_nil){
TMP_186=lisp.values1(L_G70__115);
}else{
TMP_186=lisp.values1(lisp.S_nil);
}
}
TMP_183=lisp.values1(lisp.values1(TMP_186));
}
}
TMP_180=lisp.values1(lisp.values1(TMP_183));
}else{
TMP_180=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_180) !== lisp.S_nil){
lisp.CL_funcall(lisp.values1(L_FUNCTION__102),L_RESTART__110);
}else{
}
}
continue;
}
break;
}
}
}
continue;
}
break;
}
}
return lisp.values1(lisp.S_nil);
});
CL_COMMON_LISP_MAP_RESTARTS=lisp.values1(F_MAP_RESTARTS_159);
let F_COMPUTE_RESTARTS_187;
F_COMPUTE_RESTARTS_187=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_188, arguments.length);
}
let TMP_197;
let TMP_195;
let F_COLLECT__122;
let TMP_190;
let L_G72__121;
let L_G71__120;
let TMP_189;
let L_CONDITION__118;
L_CONDITION__118=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
{
TMP_189=lisp.callFunctionWithCallStack(G_51,lisp.S_nil);
L_G71__120=lisp.values1(TMP_189);
L_G72__121=lisp.values1(L_G71__120);
{
TMP_190=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_194;
let L_G75__126;
let TMP_193;
let L_G_STORE74__125;
let TMP_191;
let L_G73__124;
let L_X__123;
L_X__123=arguments[0];
{
L_G73__124=lisp.values1(L_G72__121);
TMP_191=lisp.callFunctionWithCallStack(G_51,L_X__123);
L_G_STORE74__125=lisp.values1(TMP_191);
lisp.callFunctionWithCallStack(G_192,L_G_STORE74__125,L_G73__124);
}
{
TMP_193=lisp.callFunctionWithCallStack(G_166,L_G72__121);
L_G75__126=lisp.values1(TMP_193);
L_G72__121=(TMP_194=lisp.values1(L_G75__126));
}
return lisp.values1(TMP_194);
});
F_COLLECT__122=lisp.values1(TMP_190);
TMP_195=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_196;
let L_RESTART__127;
L_RESTART__127=arguments[0];
TMP_196=F_COLLECT__122(L_RESTART__127);
return TMP_196;
});
G_160.func(TMP_195,L_CONDITION__118);
}
TMP_197=lisp.callFunctionWithCallStack(G_166,L_G71__120);
}
return TMP_197;
});
CL_COMMON_LISP_COMPUTE_RESTARTS=lisp.values1(F_COMPUTE_RESTARTS_187);
let F_FIND_RESTART_198;
F_FIND_RESTART_198=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_199, arguments.length);
}
let TMP_211;
let TMP_207;
let TMP_204;
let TMP_203;
let TMP_202;
let TMP_201;
let L_CONDITION__129;
let L_IDENTIER__128;
L_IDENTIER__128=arguments[0];
L_CONDITION__129=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
try {
TMP_202=G_11.func(L_IDENTIER__128);
if(lisp.values1(TMP_202) !== lisp.S_nil){
TMP_204=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_206;
let TMP_205;
let L_RESTART__131;
L_RESTART__131=arguments[0];
TMP_205=lisp.CL_eq(L_IDENTIER__128,L_RESTART__131);
if(lisp.values1(TMP_205) !== lisp.S_nil){
throw new lisp.BlockValue(G_199,lisp.values1(L_RESTART__131));TMP_206=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_206=lisp.values1(lisp.S_nil);
}
return TMP_206;
});
TMP_203=lisp.values1(TMP_204);
}else{
TMP_207=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_210;
let TMP_209;
let TMP_208;
let L_RESTART__132;
L_RESTART__132=arguments[0];
TMP_208=G_32.func(L_RESTART__132);
TMP_209=lisp.CL_eq(L_IDENTIER__128,TMP_208);
if(lisp.values1(TMP_209) !== lisp.S_nil){
throw new lisp.BlockValue(G_199,lisp.values1(L_RESTART__132));TMP_210=lisp.values1(lisp.values1(lisp.S_nil));
}else{
TMP_210=lisp.values1(lisp.S_nil);
}
return TMP_210;
});
TMP_203=lisp.values1(TMP_207);
}
TMP_211=G_160.func(TMP_203,L_CONDITION__129);
TMP_201=TMP_211
}catch(E__200){if(E__200 instanceof lisp.BlockValue && E__200.name === G_199){TMP_201=E__200.value;}
else{throw E__200;}
}
return TMP_201;
});
CL_COMMON_LISP_FIND_RESTART=lisp.values1(F_FIND_RESTART_198);
let F_FIND_RESTART_OR_CONTROL_ERROR_212;
F_FIND_RESTART_OR_CONTROL_ERROR_212=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_213, arguments.length);
}
let TMP_218;
let L_R__136;
let TMP_214;
let L_CONDITION__134;
let L_RESTART__133;
L_RESTART__133=arguments[0];
L_CONDITION__134=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
{
TMP_214=G_199.func(L_RESTART__133,L_CONDITION__134);
L_R__136=lisp.values1(TMP_214);
if(lisp.values1(L_R__136) !== lisp.S_nil){
}else{
TMP_218=lisp.callFunctionWithCallStack(G_51,L_RESTART__133);
lisp.callFunctionWithCallStack(G_219,G_215,G_216,G_48.func(lisp.codeArrayToString([78, 111, 32, 114, 101, 115, 116, 97, 114, 116, 32, 126, 83, 32, 105, 115, 32, 97, 99, 116, 105, 118, 101])),G_217,TMP_218);
}
}
return lisp.values1(L_R__136);
});
CL_COMMON_LISP_FIND_RESTART_OR_CONTROL_ERROR=lisp.values1(F_FIND_RESTART_OR_CONTROL_ERROR_212);
let F_INVOKE_RESTART_220;
F_INVOKE_RESTART_220=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_221, arguments.length);
}
let TMP_224;
let TMP_223;
let L_RESTART__140;
let TMP_222;
let L_VALUES__138;
let L_RESTART__137;
L_RESTART__137=arguments[0];
L_VALUES__138=lisp.jsArrayToList(arguments, 1);
{
TMP_222=G_213.func(L_RESTART__137);
L_RESTART__140=lisp.values1(TMP_222);
TMP_223=G_59.func(L_RESTART__140);
TMP_224=lisp.callFunctionWithCallStack(G_225,TMP_223,L_VALUES__138);
}
return TMP_224;
});
CL_COMMON_LISP_INVOKE_RESTART=lisp.values1(F_INVOKE_RESTART_220);
let F_INTERACTIVE_RESTART_ARGUMENTS_226;
F_INTERACTIVE_RESTART_ARGUMENTS_226=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_227, arguments.length);
}
let TMP_230;
let TMP_229;
let L_INTERACTIVE_FUNCTION__143;
let TMP_228;
let L_RESTART__141;
L_RESTART__141=arguments[0];
{
TMP_228=G_77.func(L_RESTART__141);
L_INTERACTIVE_FUNCTION__143=lisp.values1(TMP_228);
if(lisp.values1(L_INTERACTIVE_FUNCTION__143) !== lisp.S_nil){
TMP_230=lisp.CL_funcall(lisp.values1(L_INTERACTIVE_FUNCTION__143));
TMP_229=TMP_230;
}else{
TMP_229=lisp.values1(lisp.S_nil);
}
}
return TMP_229;
});
CL_COMMON_LISP_INTERACTIVE_RESTART_ARGUMENTS=lisp.values1(F_INTERACTIVE_RESTART_ARGUMENTS_226);
let F_INVOKE_RESTART_INTERACTIVELY_231;
F_INVOKE_RESTART_INTERACTIVELY_231=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_232, arguments.length);
}
let TMP_236;
let TMP_235;
let L_ARGS__147;
let TMP_234;
let L_RESTART__146;
let TMP_233;
let L_RESTART__144;
L_RESTART__144=arguments[0];
{
TMP_233=G_213.func(L_RESTART__144);
L_RESTART__146=lisp.values1(TMP_233);
TMP_234=G_227.func(L_RESTART__146);
L_ARGS__147=lisp.values1(TMP_234);
TMP_235=G_59.func(L_RESTART__146);
TMP_236=lisp.callFunctionWithCallStack(G_225,TMP_235,L_ARGS__147);
}
return TMP_236;
});
CL_COMMON_LISP_INVOKE_RESTART_INTERACTIVELY=lisp.values1(F_INVOKE_RESTART_INTERACTIVELY_231);
let F_CERROR_241;
F_CERROR_241=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_242, arguments.length);
}
let L_G103__169;
let TMP_275;
let TMP_274;
let L_G_STORE102__168;
let TMP_273;
let TMP_272;
let L_G101__167;
let TMP_271;
let L_G84__166;
let TMP_270;
let TMP_269;
let L_G94__165;
let L_G_STORE93__162;
let TMP_266;
let TMP_265;
let L_G92__161;
let TMP_264;
let L_G84__160;
let TMP_263;
let TMP_262;
let L_G85__159;
let L_G83__157;
let TMP_261;
let TMP_260;
let L_G82__156;
let L_CONDITION__155;
let TMP_258;
let save_STARRESTART_CLUSTORSSTAR__154;
let TMP_256;
let TMP_255;
let TMP_254;
let TMP_249;
let TMP_246;
let TMP_244;
let L_ARGUMENTS__150;
let L_DATUM__149;
let L_CONTINUE_FORMAT_CONTROL__148;
L_CONTINUE_FORMAT_CONTROL__148=arguments[0];
L_DATUM__149=arguments[1];
L_ARGUMENTS__150=lisp.jsArrayToList(arguments, 2);
try {
{
TMP_246=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_247;
TMP_247=lisp.CL_values(lisp.S_nil,G_5);
throw new lisp.BlockValue(G_248,TMP_247);return lisp.values1(lisp.values1(lisp.S_nil));
});
TMP_249=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_253;
let TMP_252;
let TMP_251;
let L_G80__153;
L_G80__153=arguments[0];
TMP_251=lisp.CL_symbolFunction(G_250);
TMP_252=lisp.callFunctionWithCallStack(G_225,TMP_251,lisp.S_nil,L_CONTINUE_FORMAT_CONTROL__148,L_ARGUMENTS__150);
TMP_253=lisp.callFunctionWithCallStack(G_250,L_G80__153,G_48.func(lisp.codeArrayToString([126, 65])),TMP_252);
return TMP_253;
});
TMP_254=G_16.func(G_17,G_245,G_19,TMP_246,G_21,lisp.S_nil,G_23,TMP_249,G_25,lisp.S_nil);
TMP_255=lisp.callFunctionWithCallStack(G_51,TMP_254);
TMP_256=lisp.CL_cons(TMP_255,lisp.symbolValue(G_2));
save_STARRESTART_CLUSTORSSTAR__154=G_2.value;
G_2.value=lisp.values1(TMP_256);
try{
{
TMP_258=lisp.callFunctionWithCallStack(G_259,L_DATUM__149,L_ARGUMENTS__150,G_257);
L_CONDITION__155=lisp.values1(TMP_258);
{
L_G82__156=lisp.values1(L_CONDITION__155);
TMP_260=G_199.func(G_245);
TMP_261=lisp.callFunctionWithCallStack(G_51,TMP_260);
L_G83__157=lisp.values1(TMP_261);
try{
{
L_G85__159=lisp.values1(L_G83__157);
for(;;){
TMP_262=lisp.callFunctionWithCallStack(G_162,L_G85__159);
if(lisp.values1(TMP_262) !== lisp.S_nil){
}else{
{
TMP_263=lisp.callFunctionWithCallStack(G_164,L_G85__159);
L_G84__160=lisp.values1(TMP_263);
TMP_264=lisp.callFunctionWithCallStack(G_166,L_G85__159);
L_G85__159=lisp.values1(TMP_264);
{
L_G92__161=lisp.values1(L_G84__160);
TMP_265=G_131.func(L_G92__161);
TMP_266=lisp.CL_cons(L_G82__156,TMP_265);
L_G_STORE93__162=lisp.values1(TMP_266);
lisp.callFunctionWithCallStack(G_134,L_G_STORE93__162,L_G92__161);
}
}
continue;
}
break;
}
}
lisp.callFunctionWithCallStack(G_267,L_CONDITION__155);
lisp.callFunctionWithCallStack(G_268,L_CONDITION__155);
}finally{
{
L_G94__165=lisp.values1(L_G83__157);
for(;;){
TMP_269=lisp.callFunctionWithCallStack(G_162,L_G94__165);
if(lisp.values1(TMP_269) !== lisp.S_nil){
}else{
{
TMP_270=lisp.callFunctionWithCallStack(G_164,L_G94__165);
L_G84__166=lisp.values1(TMP_270);
TMP_271=lisp.callFunctionWithCallStack(G_166,L_G94__165);
L_G94__165=lisp.values1(TMP_271);
{
L_G101__167=lisp.values1(L_G84__166);
TMP_272=G_131.func(L_G101__167);
TMP_273=lisp.callFunctionWithCallStack(G_166,TMP_272);
L_G_STORE102__168=lisp.values1(TMP_273);
{
TMP_274=G_131.func(L_G101__167);
TMP_275=lisp.callFunctionWithCallStack(G_164,TMP_274);
L_G103__169=lisp.values1(TMP_275);
lisp.callFunctionWithCallStack(G_134,L_G_STORE102__168,L_G101__167);
}
}
}
continue;
}
break;
}
}
}
}
}
}finally{
G_2.value=save_STARRESTART_CLUSTORSSTAR__154;
}
}
TMP_244=lisp.values1(lisp.S_nil)
}catch(E__243){if(E__243 instanceof lisp.BlockValue && E__243.name === G_248){TMP_244=E__243.value;}
else{throw E__243;}
}
return lisp.values1(lisp.S_nil);
});
CL_COMMON_LISP_CERROR=lisp.values1(F_CERROR_241);
let F_WARN_276;
F_WARN_276=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_277, arguments.length);
}
let save_STARRESTART_CLUSTORSSTAR__177;
let TMP_300;
let TMP_299;
let TMP_298;
let TMP_296;
let TMP_294;
let TMP_292;
let TMP_287;
let TMP_285;
let TMP_282;
let L_CONDITION__174;
let TMP_281;
let TMP_279;
let L_ARGUMENTS__172;
let L_DATUM__171;
L_DATUM__171=arguments[0];
L_ARGUMENTS__172=lisp.jsArrayToList(arguments, 1);
try {
{
TMP_281=lisp.callFunctionWithCallStack(G_259,L_DATUM__171,L_ARGUMENTS__172,G_280);
L_CONDITION__174=lisp.values1(TMP_281);
TMP_282=lisp.callFunctionWithCallStack(G_283,L_CONDITION__174);
TMP_285=lisp.callFunctionWithCallStack(G_286,G_284);
TMP_287=lisp.callFunctionWithCallStack(G_288,TMP_282,TMP_285);
if(lisp.values1(TMP_287) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_219,G_35,G_289,L_CONDITION__174,G_290,G_284);
}
try {
{
TMP_294=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
throw new lisp.BlockValue(G_277,lisp.values1(lisp.S_nil));throw new lisp.BlockValue(G_295,lisp.values1(lisp.values1(lisp.S_nil)));return lisp.values1(lisp.values1(lisp.S_nil));
});
TMP_296=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_297;
let L_STREAM__176;
L_STREAM__176=arguments[0];
TMP_297=lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([83, 107, 105, 112, 32, 119, 97, 114, 110, 105, 110, 103, 46])),L_STREAM__176);
return TMP_297;
});
TMP_298=G_16.func(G_17,G_293,G_19,TMP_294,G_21,lisp.S_nil,G_23,TMP_296,G_25,lisp.S_nil);
TMP_299=lisp.callFunctionWithCallStack(G_51,TMP_298);
TMP_300=lisp.CL_cons(TMP_299,lisp.symbolValue(G_2));
save_STARRESTART_CLUSTORSSTAR__177=G_2.value;
G_2.value=lisp.values1(TMP_300);
try{
lisp.callFunctionWithCallStack(G_301,L_CONDITION__174);
}finally{
G_2.value=save_STARRESTART_CLUSTORSSTAR__177;
}
}
TMP_292=lisp.values1(lisp.S_nil)
}catch(E__291){if(E__291 instanceof lisp.BlockValue && E__291.name === G_295){TMP_292=E__291.value;}
else{throw E__291;}
}
lisp.callFunctionWithCallStack(G_250,lisp.symbolValue(G_302),G_48.func(lisp.codeArrayToString([126, 38, 87, 97, 114, 110, 105, 110, 103, 58, 32, 126, 65, 126, 37])),L_CONDITION__174);
}
TMP_279=lisp.values1(lisp.S_nil)
}catch(E__278){if(E__278 instanceof lisp.BlockValue && E__278.name === G_277){TMP_279=E__278.value;}
else{throw E__278;}
}
return TMP_279;
});
CL_COMMON_LISP_WARN=lisp.values1(F_WARN_276);
let F_ABORT_303;
F_ABORT_303=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_304, arguments.length);
}
let TMP_306;
let L_RESTART__180;
let TMP_305;
let L_CONDITION__178;
L_CONDITION__178=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
{
TMP_305=G_199.func(G_304,L_CONDITION__178);
L_RESTART__180=lisp.values1(TMP_305);
if(lisp.values1(L_RESTART__180) !== lisp.S_nil){
G_221.func(G_304);
}else{
}
}
TMP_306=lisp.callFunctionWithCallStack(G_219,G_215,G_216,G_48.func(lisp.codeArrayToString([65, 110, 32, 65, 66, 79, 82, 84, 32, 114, 101, 115, 116, 97, 114, 116, 32, 119, 97, 115, 32, 102, 111, 117, 110, 100, 32, 116, 104, 97, 116, 32, 102, 97, 105, 108, 101, 100, 32, 116, 111, 32, 116, 114, 97, 110, 115, 102, 101, 114, 32, 99, 111, 110, 116, 114, 111, 108, 32, 100, 121, 110, 97, 109, 105, 99, 97, 108, 108, 121, 46])));
return TMP_306;
});
CL_COMMON_LISP_ABORT=lisp.values1(F_ABORT_303);
let F_CONTINUE_307;
F_CONTINUE_307=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_245, arguments.length);
}
let TMP_310;
let TMP_309;
let L_RESTART__183;
let TMP_308;
let L_CONDITION__181;
L_CONDITION__181=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
{
TMP_308=G_199.func(G_245,L_CONDITION__181);
L_RESTART__183=lisp.values1(TMP_308);
if(lisp.values1(L_RESTART__183) !== lisp.S_nil){
TMP_310=G_221.func(L_RESTART__183);
TMP_309=TMP_310;
}else{
TMP_309=lisp.values1(lisp.S_nil);
}
}
return TMP_309;
});
CL_COMMON_LISP_CONTINUE=lisp.values1(F_CONTINUE_307);
let F_MUFFLE_WARNING_311;
F_MUFFLE_WARNING_311=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_293, arguments.length);
}
let TMP_313;
let TMP_312;
let L_CONDITION__184;
L_CONDITION__184=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
TMP_312=G_213.func(G_293,L_CONDITION__184);
TMP_313=G_221.func(TMP_312);
return TMP_313;
});
CL_COMMON_LISP_MUFFLE_WARNING=lisp.values1(F_MUFFLE_WARNING_311);
let F_STORE_VALUE_314;
F_STORE_VALUE_314=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_315, arguments.length);
}
let TMP_318;
let TMP_317;
let L_RESTART__189;
let TMP_316;
let L_CONDITION__187;
let L_VALUE__186;
L_VALUE__186=arguments[0];
L_CONDITION__187=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
{
TMP_316=G_199.func(G_315,L_CONDITION__187);
L_RESTART__189=lisp.values1(TMP_316);
if(lisp.values1(L_RESTART__189) !== lisp.S_nil){
TMP_318=G_221.func(L_RESTART__189,L_VALUE__186);
TMP_317=TMP_318;
}else{
TMP_317=lisp.values1(lisp.S_nil);
}
}
return TMP_317;
});
CL_COMMON_LISP_STORE_VALUE=lisp.values1(F_STORE_VALUE_314);
let F_USE_VALUE_319;
F_USE_VALUE_319=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_320, arguments.length);
}
let TMP_323;
let TMP_322;
let L_RESTART__193;
let TMP_321;
let L_CONDITION__191;
let L_VALUE__190;
L_VALUE__190=arguments[0];
L_CONDITION__191=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
{
TMP_321=G_199.func(G_320,L_CONDITION__191);
L_RESTART__193=lisp.values1(TMP_321);
if(lisp.values1(L_RESTART__193) !== lisp.S_nil){
TMP_323=G_221.func(L_RESTART__193,L_VALUE__190);
TMP_322=TMP_323;
}else{
TMP_322=lisp.values1(lisp.S_nil);
}
}
return TMP_322;
});
CL_COMMON_LISP_USE_VALUE=lisp.values1(F_USE_VALUE_319);
let F_READ_EVALUATED_FORM_324;
F_READ_EVALUATED_FORM_324=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_325, arguments.length);
}
let TMP_333;
let TMP_331;
let TMP_329;
lisp.callFunctionWithCallStack(G_327,G_48.func(lisp.codeArrayToString([69, 110, 116, 101, 114, 32, 97, 32, 102, 111, 114, 109, 32, 116, 111, 32, 98, 101, 32, 101, 118, 97, 108, 117, 97, 116, 101, 100, 39, 32])),lisp.symbolValue(G_326));
TMP_329=lisp.callFunctionWithCallStack(G_330,lisp.symbolValue(G_328));
TMP_331=lisp.callFunctionWithCallStack(G_332,TMP_329);
TMP_333=lisp.callFunctionWithCallStack(G_51,TMP_331);
return TMP_333;
});
CL_COMMON_LISP_READ_EVALUATED_FORM=lisp.values1(F_READ_EVALUATED_FORM_324);
let F_CHECK_TYPE_ERROR_334;
F_CHECK_TYPE_ERROR_334=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_335, arguments.length);
}
let TMP_348;
let save_STARRESTART_CLUSTORSSTAR__202;
let TMP_347;
let TMP_346;
let TMP_345;
let TMP_343;
let TMP_342;
let TMP_340;
let TMP_339;
let L_CONDITION__198;
let TMP_336;
let L_PLACE__196;
let L_TYPE_SPEC__195;
L_TYPE_SPEC__195=arguments[0];
L_PLACE__196=arguments[1];
{
TMP_336=lisp.callFunctionWithCallStack(G_337,G_35,G_289,L_PLACE__196,G_290,L_TYPE_SPEC__195);
L_CONDITION__198=lisp.values1(TMP_336);
try {
{
TMP_340=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_VALUE__200;
L_VALUE__200=arguments[0];
throw new lisp.BlockValue(G_341,lisp.values1(L_VALUE__200));return lisp.values1(lisp.values1(lisp.S_nil));
});
TMP_342=lisp.CL_symbolFunction(G_325);
TMP_343=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_344;
let L_STREAM__201;
L_STREAM__201=arguments[0];
TMP_344=lisp.callFunctionWithCallStack(G_250,L_STREAM__201,G_48.func(lisp.codeArrayToString([83, 117, 112, 112, 108, 121, 32, 97, 32, 110, 101, 119, 32, 118, 97, 108, 117, 101, 32, 102, 111, 114, 32, 126, 83])),L_PLACE__196);
return TMP_344;
});
TMP_345=G_16.func(G_17,G_315,G_19,TMP_340,G_21,TMP_342,G_23,TMP_343,G_25,lisp.S_nil);
TMP_346=lisp.callFunctionWithCallStack(G_51,TMP_345);
TMP_347=lisp.CL_cons(TMP_346,lisp.symbolValue(G_2));
save_STARRESTART_CLUSTORSSTAR__202=G_2.value;
G_2.value=lisp.values1(TMP_347);
try{
TMP_348=lisp.callFunctionWithCallStack(G_219,L_CONDITION__198);
}finally{
G_2.value=save_STARRESTART_CLUSTORSSTAR__202;
}
}
TMP_339=TMP_348
}catch(E__338){if(E__338 instanceof lisp.BlockValue && E__338.name === G_341){TMP_339=E__338.value;}
else{throw E__338;}
}
}
return TMP_339;
});
CL_COMMON_LISP_CHECK_TYPE_ERROR=lisp.values1(F_CHECK_TYPE_ERROR_334);
// initialize symbols
G_2 = lisp.intern('*RESTART-CLUSTORS*', 'COMMON-LISP');
G_4 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_5 = lisp.intern('T', 'COMMON-LISP');
G_7 = lisp.intern('COPY-RESTART', 'COMMON-LISP');
G_9 = lisp.intern('COPY-STRUCTURE', 'COMMON-LISP');
G_11 = lisp.intern('RESTART-P', 'COMMON-LISP');
G_12 = lisp.intern('RESTART', 'COMMON-LISP');
G_14 = lisp.intern('TYPEP', 'COMMON-LISP');
G_16 = lisp.intern('MAKE-RESTART', 'COMMON-LISP');
G_17 = lisp.intern('NAME', 'KEYWORD');
G_19 = lisp.intern('FUNCTION', 'KEYWORD');
G_21 = lisp.intern('INTERACTIVE-FUNCTION', 'KEYWORD');
G_23 = lisp.intern('REPORT-FUNCTION', 'KEYWORD');
G_25 = lisp.intern('TEST-FUNCTION', 'KEYWORD');
G_27 = lisp.intern('ASSOCIATED-CONDITIONS', 'KEYWORD');
G_32 = lisp.intern('RESTART-NAME', 'COMMON-LISP');
G_34 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_35 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_37 = lisp.intern('(SETF RESTART-NAME)', 'COMMON-LISP');
G_41 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_45 = lisp.intern('GENSYM', 'COMMON-LISP');
G_47 = lisp.intern('%MAPCAR', 'SYSTEM');
G_48 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_51 = lisp.intern('LIST', 'COMMON-LISP');
G_53 = lisp.intern('LIST*', 'COMMON-LISP');
G_56 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_59 = lisp.intern('RESTART-FUNCTION', 'COMMON-LISP');
G_62 = lisp.intern('(SETF RESTART-FUNCTION)', 'COMMON-LISP');
G_77 = lisp.intern('RESTART-INTERACTIVE-FUNCTION', 'COMMON-LISP');
G_80 = lisp.intern('(SETF RESTART-INTERACTIVE-FUNCTION)', 'COMMON-LISP');
G_95 = lisp.intern('RESTART-REPORT-FUNCTION', 'COMMON-LISP');
G_98 = lisp.intern('(SETF RESTART-REPORT-FUNCTION)', 'COMMON-LISP');
G_113 = lisp.intern('RESTART-TEST-FUNCTION', 'COMMON-LISP');
G_116 = lisp.intern('(SETF RESTART-TEST-FUNCTION)', 'COMMON-LISP');
G_131 = lisp.intern('RESTART-ASSOCIATED-CONDITIONS', 'COMMON-LISP');
G_134 = lisp.intern('(SETF RESTART-ASSOCIATED-CONDITIONS)', 'COMMON-LISP');
G_149 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_150 = lisp.intern('PRIN1', 'COMMON-LISP');
G_158 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_160 = lisp.intern('MAP-RESTARTS', 'COMMON-LISP');
G_162 = lisp.intern('ENDP', 'COMMON-LISP');
G_164 = lisp.intern('CAR', 'COMMON-LISP');
G_166 = lisp.intern('CDR', 'COMMON-LISP');
G_171 = lisp.intern('NULL', 'COMMON-LISP');
G_178 = lisp.intern('MEMBER', 'COMMON-LISP');
G_188 = lisp.intern('COMPUTE-RESTARTS', 'COMMON-LISP');
G_192 = lisp.intern('(SETF CDR)', 'COMMON-LISP');
G_199 = lisp.intern('FIND-RESTART', 'COMMON-LISP');
G_213 = lisp.intern('FIND-RESTART-OR-CONTROL-ERROR', 'COMMON-LISP');
G_215 = lisp.intern('CONTROL-ERROR', 'COMMON-LISP');
G_216 = lisp.intern('FORMAT-CONTROL', 'KEYWORD');
G_217 = lisp.intern('FORMAT-ARGUMENTS', 'KEYWORD');
G_219 = lisp.intern('ERROR', 'COMMON-LISP');
G_221 = lisp.intern('INVOKE-RESTART', 'COMMON-LISP');
G_225 = lisp.intern('APPLY', 'COMMON-LISP');
G_227 = lisp.intern('INTERACTIVE-RESTART-ARGUMENTS', 'COMMON-LISP');
G_232 = lisp.intern('INVOKE-RESTART-INTERACTIVELY', 'COMMON-LISP');
G_237 = lisp.intern('RESTART-BIND', 'COMMON-LISP');
G_238 = lisp.intern('RESTART-CASE', 'COMMON-LISP');
G_239 = lisp.intern('WITH-SIMPLE-RESTART', 'COMMON-LISP');
G_240 = lisp.intern('WITH-CONDITION-RESTARTS', 'COMMON-LISP');
G_242 = lisp.intern('CERROR', 'COMMON-LISP');
G_245 = lisp.intern('CONTINUE', 'COMMON-LISP');
G_248 = lisp.makeSymbol("G81");G_250 = lisp.intern('FORMAT', 'COMMON-LISP');
G_257 = lisp.intern('SIMPLE-ERROR', 'COMMON-LISP');
G_259 = lisp.intern('COERCE-TO-CONDITION', 'COMMON-LISP');
G_267 = lisp.intern('SIGNAL-1', 'COMMON-LISP');
G_268 = lisp.intern('INVOKE-DEBUGGER', 'COMMON-LISP');
G_277 = lisp.intern('WARN', 'COMMON-LISP');
G_280 = lisp.intern('SIMPLE-WARNING', 'COMMON-LISP');
G_283 = lisp.intern('CLASS-OF', 'COMMON-LISP');
G_284 = lisp.intern('WARNING', 'COMMON-LISP');
G_286 = lisp.intern('FIND-CLASS', 'COMMON-LISP');
G_288 = lisp.intern('SUBCLASSP', 'COMMON-LISP');
G_289 = lisp.intern('DATUM', 'KEYWORD');
G_290 = lisp.intern('EXPECTED-TYPE', 'KEYWORD');
G_293 = lisp.intern('MUFFLE-WARNING', 'COMMON-LISP');
G_295 = lisp.makeSymbol("G104");G_301 = lisp.intern('SIGNAL', 'COMMON-LISP');
G_302 = lisp.intern('*ERROR-OUTPUT*', 'COMMON-LISP');
G_304 = lisp.intern('ABORT', 'COMMON-LISP');
G_315 = lisp.intern('STORE-VALUE', 'COMMON-LISP');
G_320 = lisp.intern('USE-VALUE', 'COMMON-LISP');
G_325 = lisp.intern('READ-EVALUATED-FORM', 'COMMON-LISP');
G_326 = lisp.intern('*STANDARD-OUTPUT*', 'COMMON-LISP');
G_327 = lisp.intern('WRITE-LINE', 'COMMON-LISP');
G_328 = lisp.intern('*STANDARD-INPUT*', 'COMMON-LISP');
G_330 = lisp.intern('READ', 'COMMON-LISP');
G_332 = lisp.intern('EVAL', 'COMMON-LISP');
G_335 = lisp.intern('CHECK-TYPE-ERROR', 'COMMON-LISP');
G_337 = lisp.intern('MAKE-CONDITION', 'COMMON-LISP');
G_341 = lisp.makeSymbol("G105");G_349 = lisp.intern('CHECK-TYPE', 'COMMON-LISP');
G_350 = lisp.intern('MACRO', 'COMPILER');
G_353 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_355 = lisp.intern('<=', 'COMMON-LISP');
G_357 = lisp.intern('BINDINGS', 'COMMON-LISP');
G_358 = lisp.intern('&BODY', 'COMMON-LISP');
G_359 = lisp.intern('FORMS', 'COMMON-LISP');
G_362 = lisp.intern('FIRST', 'COMMON-LISP');
G_364 = lisp.intern('REST', 'COMMON-LISP');
G_365 = lisp.intern('LET', 'COMMON-LISP');
G_366 = lisp.intern('CONS', 'COMMON-LISP');
G_371 = lisp.intern('NAME', 'COMMON-LISP');
G_372 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_373 = lisp.intern('&KEY', 'COMMON-LISP');
G_374 = lisp.intern('INTERACTIVE-FUNCTION', 'COMMON-LISP');
G_375 = lisp.intern('REPORT-FUNCTION', 'COMMON-LISP');
G_376 = lisp.intern('TEST-FUNCTION', 'COMMON-LISP');
G_386 = lisp.intern('NIL', 'COMMON-LISP');
G_399 = lisp.intern('CDDR', 'COMMON-LISP');
G_401 = lisp.intern('GETF', 'COMMON-LISP');
G_404 = lisp.intern('QUOTE', 'COMMON-LISP');
G_408 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_418 = lisp.intern('EXPRESSION', 'COMMON-LISP');
G_419 = lisp.intern('CLAUSES', 'COMMON-LISP');
G_427 = lisp.intern('STRINGP', 'COMMON-LISP');
G_429 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_430 = lisp.intern('STREAM', 'COMMON-LISP');
G_443 = lisp.intern('INTERACTIVE', 'KEYWORD');
G_445 = lisp.intern('EQL', 'COMMON-LISP');
G_448 = lisp.intern('CADR', 'COMMON-LISP');
G_453 = lisp.intern('REPORT', 'KEYWORD');
G_461 = lisp.intern('TEST', 'KEYWORD');
G_478 = lisp.intern('NCONC', 'COMMON-LISP');
G_481 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_485 = lisp.intern('BLOCK', 'COMMON-LISP');
G_490 = lisp.intern('CASE-NAME', 'COMMON-LISP');
G_491 = lisp.intern('LAMBDA-LIST', 'COMMON-LISP');
G_492 = lisp.intern('CLAUSE', 'COMMON-LISP');
G_500 = lisp.intern('DECLARE', 'COMMON-LISP');
G_502 = lisp.intern('RETURN-FROM', 'COMMON-LISP');
G_503 = lisp.intern('PROGN', 'COMMON-LISP');
G_510 = lisp.intern('PARSE-BODY', 'COMPILER');
G_522 = lisp.intern('FORMAT-CONTROL', 'COMMON-LISP');
G_523 = lisp.intern('&REST', 'COMMON-LISP');
G_524 = lisp.intern('FORMAT-ARGUMENTS', 'COMMON-LISP');
G_541 = lisp.intern('VALUES', 'COMMON-LISP');
G_548 = lisp.intern('CONDITION-FORM', 'COMMON-LISP');
G_549 = lisp.intern('RESTARTS-FORM', 'COMMON-LISP');
G_550 = lisp.intern('BODY', 'COMMON-LISP');
G_562 = lisp.intern('UNWIND-PROTECT', 'COMMON-LISP');
G_563 = lisp.intern('DOLIST', 'COMMON-LISP');
G_565 = lisp.intern('PUSH', 'COMMON-LISP');
G_571 = lisp.intern('POP', 'COMMON-LISP');
G_581 = lisp.intern('PLACE', 'COMMON-LISP');
G_582 = lisp.intern('TYPE-SPEC', 'COMMON-LISP');
G_583 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_584 = lisp.intern('TYPE-STRING', 'COMMON-LISP');
G_592 = lisp.intern('DO', 'COMMON-LISP');
G_596 = lisp.intern('SETF', 'COMMON-LISP');
G_602 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');TMP_3=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_3) !== lisp.S_nil){
}else{
lisp.CL_set(G_2,lisp.S_nil);
}
lisp.CL_put(G_2,G_4,G_5);
CL_COMMON_LISP_COPY_RESTART.lisp_name = 'COPY-RESTART'
lisp.setSymbolFunction(G_7, CL_COMMON_LISP_COPY_RESTART);
CL_COMMON_LISP_RESTART_P.lisp_name = 'RESTART-P'
lisp.setSymbolFunction(G_11, CL_COMMON_LISP_RESTART_P);
CL_COMMON_LISP_MAKE_RESTART.lisp_name = 'MAKE-RESTART'
lisp.setSymbolFunction(G_16, CL_COMMON_LISP_MAKE_RESTART);
CL_COMMON_LISP_RESTART_NAME.lisp_name = 'RESTART-NAME'
lisp.setSymbolFunction(G_32, CL_COMMON_LISP_RESTART_NAME);
TMP_38=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_40;
let TMP_39;
let L_STRUCTURE__15;
let L_VALUE__14;
L_VALUE__14=arguments[0];
L_STRUCTURE__15=arguments[1];
TMP_39=lisp.CL_structurep(L_STRUCTURE__15);
if(lisp.values1(TMP_39) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__15,G_34);
}
TMP_40=lisp.CL_structureSet(L_STRUCTURE__15,0,L_VALUE__14);
return TMP_40;
});
lisp.CL_setSymbolFunction(G_37,TMP_38);
TMP_42=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_55;
let TMP_54;
let TMP_52;
let TMP_50;
let L_STORE2__23;
let TMP_49;
let L_GENSYMS0__22;
let TMP_46;
let TMP_43;
let L_ARGS1__20;
let L_G6__18;
let L_G5__17;
L_G5__17=arguments[0];
{
L_G6__18=lisp.values1(L_G5__17);
{
L_ARGS1__20=lisp.values1(L_G6__18);
{
TMP_43=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_44;
let L_X__21;
L_X__21=arguments[0];
TMP_44=lisp.callFunctionWithCallStack(G_45);
return TMP_44;
});
TMP_46=lisp.callFunctionWithCallStack(G_47,TMP_43,L_ARGS1__20);
L_GENSYMS0__22=lisp.values1(TMP_46);
TMP_49=lisp.callFunctionWithCallStack(G_45,G_48.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE2__23=lisp.values1(TMP_49);
TMP_50=lisp.callFunctionWithCallStack(G_51,L_STORE2__23);
TMP_52=lisp.callFunctionWithCallStack(G_53,G_37,L_STORE2__23,L_GENSYMS0__22);
TMP_54=lisp.callFunctionWithCallStack(G_53,G_32,L_GENSYMS0__22);
TMP_55=lisp.CL_values(L_GENSYMS0__22,L_ARGS1__20,TMP_50,TMP_52,TMP_54);
}
}
}
return TMP_55;
});
lisp.CL_put(G_32,G_41,TMP_42);
TMP_57=lisp.CL_symbolFunction(G_37);
lisp.CL_put(G_32,G_56,TMP_57);
CL_COMMON_LISP_RESTART_FUNCTION.lisp_name = 'RESTART-FUNCTION'
lisp.setSymbolFunction(G_59, CL_COMMON_LISP_RESTART_FUNCTION);
TMP_63=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_65;
let TMP_64;
let L_STRUCTURE__29;
let L_VALUE__28;
L_VALUE__28=arguments[0];
L_STRUCTURE__29=arguments[1];
TMP_64=lisp.CL_structurep(L_STRUCTURE__29);
if(lisp.values1(TMP_64) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__29,G_34);
}
TMP_65=lisp.CL_structureSet(L_STRUCTURE__29,1,L_VALUE__28);
return TMP_65;
});
lisp.CL_setSymbolFunction(G_62,TMP_63);
TMP_66=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_74;
let TMP_73;
let TMP_72;
let TMP_71;
let L_STORE10__37;
let TMP_70;
let L_GENSYMS8__36;
let TMP_69;
let TMP_67;
let L_ARGS9__34;
let L_G14__32;
let L_G13__31;
L_G13__31=arguments[0];
{
L_G14__32=lisp.values1(L_G13__31);
{
L_ARGS9__34=lisp.values1(L_G14__32);
{
TMP_67=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_68;
let L_X__35;
L_X__35=arguments[0];
TMP_68=lisp.callFunctionWithCallStack(G_45);
return TMP_68;
});
TMP_69=lisp.callFunctionWithCallStack(G_47,TMP_67,L_ARGS9__34);
L_GENSYMS8__36=lisp.values1(TMP_69);
TMP_70=lisp.callFunctionWithCallStack(G_45,G_48.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE10__37=lisp.values1(TMP_70);
TMP_71=lisp.callFunctionWithCallStack(G_51,L_STORE10__37);
TMP_72=lisp.callFunctionWithCallStack(G_53,G_62,L_STORE10__37,L_GENSYMS8__36);
TMP_73=lisp.callFunctionWithCallStack(G_53,G_59,L_GENSYMS8__36);
TMP_74=lisp.CL_values(L_GENSYMS8__36,L_ARGS9__34,TMP_71,TMP_72,TMP_73);
}
}
}
return TMP_74;
});
lisp.CL_put(G_59,G_41,TMP_66);
TMP_75=lisp.CL_symbolFunction(G_62);
lisp.CL_put(G_59,G_56,TMP_75);
CL_COMMON_LISP_RESTART_INTERACTIVE_FUNCTION.lisp_name = 'RESTART-INTERACTIVE-FUNCTION'
lisp.setSymbolFunction(G_77, CL_COMMON_LISP_RESTART_INTERACTIVE_FUNCTION);
TMP_81=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_83;
let TMP_82;
let L_STRUCTURE__43;
let L_VALUE__42;
L_VALUE__42=arguments[0];
L_STRUCTURE__43=arguments[1];
TMP_82=lisp.CL_structurep(L_STRUCTURE__43);
if(lisp.values1(TMP_82) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__43,G_34);
}
TMP_83=lisp.CL_structureSet(L_STRUCTURE__43,2,L_VALUE__42);
return TMP_83;
});
lisp.CL_setSymbolFunction(G_80,TMP_81);
TMP_84=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_92;
let TMP_91;
let TMP_90;
let TMP_89;
let L_STORE18__51;
let TMP_88;
let L_GENSYMS16__50;
let TMP_87;
let TMP_85;
let L_ARGS17__48;
let L_G22__46;
let L_G21__45;
L_G21__45=arguments[0];
{
L_G22__46=lisp.values1(L_G21__45);
{
L_ARGS17__48=lisp.values1(L_G22__46);
{
TMP_85=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_86;
let L_X__49;
L_X__49=arguments[0];
TMP_86=lisp.callFunctionWithCallStack(G_45);
return TMP_86;
});
TMP_87=lisp.callFunctionWithCallStack(G_47,TMP_85,L_ARGS17__48);
L_GENSYMS16__50=lisp.values1(TMP_87);
TMP_88=lisp.callFunctionWithCallStack(G_45,G_48.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE18__51=lisp.values1(TMP_88);
TMP_89=lisp.callFunctionWithCallStack(G_51,L_STORE18__51);
TMP_90=lisp.callFunctionWithCallStack(G_53,G_80,L_STORE18__51,L_GENSYMS16__50);
TMP_91=lisp.callFunctionWithCallStack(G_53,G_77,L_GENSYMS16__50);
TMP_92=lisp.CL_values(L_GENSYMS16__50,L_ARGS17__48,TMP_89,TMP_90,TMP_91);
}
}
}
return TMP_92;
});
lisp.CL_put(G_77,G_41,TMP_84);
TMP_93=lisp.CL_symbolFunction(G_80);
lisp.CL_put(G_77,G_56,TMP_93);
CL_COMMON_LISP_RESTART_REPORT_FUNCTION.lisp_name = 'RESTART-REPORT-FUNCTION'
lisp.setSymbolFunction(G_95, CL_COMMON_LISP_RESTART_REPORT_FUNCTION);
TMP_99=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_101;
let TMP_100;
let L_STRUCTURE__57;
let L_VALUE__56;
L_VALUE__56=arguments[0];
L_STRUCTURE__57=arguments[1];
TMP_100=lisp.CL_structurep(L_STRUCTURE__57);
if(lisp.values1(TMP_100) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__57,G_34);
}
TMP_101=lisp.CL_structureSet(L_STRUCTURE__57,3,L_VALUE__56);
return TMP_101;
});
lisp.CL_setSymbolFunction(G_98,TMP_99);
TMP_102=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_110;
let TMP_109;
let TMP_108;
let TMP_107;
let L_STORE26__65;
let TMP_106;
let L_GENSYMS24__64;
let TMP_105;
let TMP_103;
let L_ARGS25__62;
let L_G30__60;
let L_G29__59;
L_G29__59=arguments[0];
{
L_G30__60=lisp.values1(L_G29__59);
{
L_ARGS25__62=lisp.values1(L_G30__60);
{
TMP_103=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_104;
let L_X__63;
L_X__63=arguments[0];
TMP_104=lisp.callFunctionWithCallStack(G_45);
return TMP_104;
});
TMP_105=lisp.callFunctionWithCallStack(G_47,TMP_103,L_ARGS25__62);
L_GENSYMS24__64=lisp.values1(TMP_105);
TMP_106=lisp.callFunctionWithCallStack(G_45,G_48.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE26__65=lisp.values1(TMP_106);
TMP_107=lisp.callFunctionWithCallStack(G_51,L_STORE26__65);
TMP_108=lisp.callFunctionWithCallStack(G_53,G_98,L_STORE26__65,L_GENSYMS24__64);
TMP_109=lisp.callFunctionWithCallStack(G_53,G_95,L_GENSYMS24__64);
TMP_110=lisp.CL_values(L_GENSYMS24__64,L_ARGS25__62,TMP_107,TMP_108,TMP_109);
}
}
}
return TMP_110;
});
lisp.CL_put(G_95,G_41,TMP_102);
TMP_111=lisp.CL_symbolFunction(G_98);
lisp.CL_put(G_95,G_56,TMP_111);
CL_COMMON_LISP_RESTART_TEST_FUNCTION.lisp_name = 'RESTART-TEST-FUNCTION'
lisp.setSymbolFunction(G_113, CL_COMMON_LISP_RESTART_TEST_FUNCTION);
TMP_117=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_119;
let TMP_118;
let L_STRUCTURE__71;
let L_VALUE__70;
L_VALUE__70=arguments[0];
L_STRUCTURE__71=arguments[1];
TMP_118=lisp.CL_structurep(L_STRUCTURE__71);
if(lisp.values1(TMP_118) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__71,G_34);
}
TMP_119=lisp.CL_structureSet(L_STRUCTURE__71,4,L_VALUE__70);
return TMP_119;
});
lisp.CL_setSymbolFunction(G_116,TMP_117);
TMP_120=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_128;
let TMP_127;
let TMP_126;
let TMP_125;
let L_STORE34__79;
let TMP_124;
let L_GENSYMS32__78;
let TMP_123;
let TMP_121;
let L_ARGS33__76;
let L_G38__74;
let L_G37__73;
L_G37__73=arguments[0];
{
L_G38__74=lisp.values1(L_G37__73);
{
L_ARGS33__76=lisp.values1(L_G38__74);
{
TMP_121=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_122;
let L_X__77;
L_X__77=arguments[0];
TMP_122=lisp.callFunctionWithCallStack(G_45);
return TMP_122;
});
TMP_123=lisp.callFunctionWithCallStack(G_47,TMP_121,L_ARGS33__76);
L_GENSYMS32__78=lisp.values1(TMP_123);
TMP_124=lisp.callFunctionWithCallStack(G_45,G_48.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE34__79=lisp.values1(TMP_124);
TMP_125=lisp.callFunctionWithCallStack(G_51,L_STORE34__79);
TMP_126=lisp.callFunctionWithCallStack(G_53,G_116,L_STORE34__79,L_GENSYMS32__78);
TMP_127=lisp.callFunctionWithCallStack(G_53,G_113,L_GENSYMS32__78);
TMP_128=lisp.CL_values(L_GENSYMS32__78,L_ARGS33__76,TMP_125,TMP_126,TMP_127);
}
}
}
return TMP_128;
});
lisp.CL_put(G_113,G_41,TMP_120);
TMP_129=lisp.CL_symbolFunction(G_116);
lisp.CL_put(G_113,G_56,TMP_129);
CL_COMMON_LISP_RESTART_ASSOCIATED_CONDITIONS.lisp_name = 'RESTART-ASSOCIATED-CONDITIONS'
lisp.setSymbolFunction(G_131, CL_COMMON_LISP_RESTART_ASSOCIATED_CONDITIONS);
TMP_135=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_137;
let TMP_136;
let L_STRUCTURE__85;
let L_VALUE__84;
L_VALUE__84=arguments[0];
L_STRUCTURE__85=arguments[1];
TMP_136=lisp.CL_structurep(L_STRUCTURE__85);
if(lisp.values1(TMP_136) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_35,L_STRUCTURE__85,G_34);
}
TMP_137=lisp.CL_structureSet(L_STRUCTURE__85,5,L_VALUE__84);
return TMP_137;
});
lisp.CL_setSymbolFunction(G_134,TMP_135);
TMP_138=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_146;
let TMP_145;
let TMP_144;
let TMP_143;
let L_STORE42__93;
let TMP_142;
let L_GENSYMS40__92;
let TMP_141;
let TMP_139;
let L_ARGS41__90;
let L_G46__88;
let L_G45__87;
L_G45__87=arguments[0];
{
L_G46__88=lisp.values1(L_G45__87);
{
L_ARGS41__90=lisp.values1(L_G46__88);
{
TMP_139=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_140;
let L_X__91;
L_X__91=arguments[0];
TMP_140=lisp.callFunctionWithCallStack(G_45);
return TMP_140;
});
TMP_141=lisp.callFunctionWithCallStack(G_47,TMP_139,L_ARGS41__90);
L_GENSYMS40__92=lisp.values1(TMP_141);
TMP_142=lisp.callFunctionWithCallStack(G_45,G_48.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE42__93=lisp.values1(TMP_142);
TMP_143=lisp.callFunctionWithCallStack(G_51,L_STORE42__93);
TMP_144=lisp.callFunctionWithCallStack(G_53,G_134,L_STORE42__93,L_GENSYMS40__92);
TMP_145=lisp.callFunctionWithCallStack(G_53,G_131,L_GENSYMS40__92);
TMP_146=lisp.CL_values(L_GENSYMS40__92,L_ARGS41__90,TMP_143,TMP_144,TMP_145);
}
}
}
return TMP_146;
});
lisp.CL_put(G_131,G_41,TMP_138);
TMP_147=lisp.CL_symbolFunction(G_134);
lisp.CL_put(G_131,G_56,TMP_147);
{
TMP_148=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_157;
let TMP_156;
let TMP_155;
let TMP_154;
let TMP_153;
let TMP_152;
let TMP_151;
let L_STREAM__99;
let L_STRUCTURE__98;
L_STRUCTURE__98=arguments[0];
L_STREAM__99=arguments[1];
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([82, 69, 83, 84, 65, 82, 84])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_150,G_17,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_151=lisp.CL_structureRef(L_STRUCTURE__98,0);
lisp.callFunctionWithCallStack(G_150,TMP_151,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_150,G_19,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_152=lisp.CL_structureRef(L_STRUCTURE__98,1);
lisp.callFunctionWithCallStack(G_150,TMP_152,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_150,G_21,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_153=lisp.CL_structureRef(L_STRUCTURE__98,2);
lisp.callFunctionWithCallStack(G_150,TMP_153,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_150,G_23,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_154=lisp.CL_structureRef(L_STRUCTURE__98,3);
lisp.callFunctionWithCallStack(G_150,TMP_154,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_150,G_25,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_155=lisp.CL_structureRef(L_STRUCTURE__98,4);
lisp.callFunctionWithCallStack(G_150,TMP_155,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_150,G_27,L_STREAM__99);
lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_156=lisp.CL_structureRef(L_STRUCTURE__98,5);
lisp.callFunctionWithCallStack(G_150,TMP_156,L_STREAM__99);
TMP_157=lisp.callFunctionWithCallStack(G_149,G_48.func(lisp.codeArrayToString([41])),L_STREAM__99);
return TMP_157;
});
L_G50__100=lisp.values1(TMP_148);
{
L_G51__101=lisp.values1(L_G50__100);
lisp.CL_put(G_12,G_158,L_G51__101);
}
}
CL_COMMON_LISP_MAP_RESTARTS.lisp_name = 'MAP-RESTARTS'
lisp.setSymbolFunction(G_160, CL_COMMON_LISP_MAP_RESTARTS);
CL_COMMON_LISP_COMPUTE_RESTARTS.lisp_name = 'COMPUTE-RESTARTS'
lisp.setSymbolFunction(G_188, CL_COMMON_LISP_COMPUTE_RESTARTS);
CL_COMMON_LISP_FIND_RESTART.lisp_name = 'FIND-RESTART'
lisp.setSymbolFunction(G_199, CL_COMMON_LISP_FIND_RESTART);
CL_COMMON_LISP_FIND_RESTART_OR_CONTROL_ERROR.lisp_name = 'FIND-RESTART-OR-CONTROL-ERROR'
lisp.setSymbolFunction(G_213, CL_COMMON_LISP_FIND_RESTART_OR_CONTROL_ERROR);
CL_COMMON_LISP_INVOKE_RESTART.lisp_name = 'INVOKE-RESTART'
lisp.setSymbolFunction(G_221, CL_COMMON_LISP_INVOKE_RESTART);
CL_COMMON_LISP_INTERACTIVE_RESTART_ARGUMENTS.lisp_name = 'INTERACTIVE-RESTART-ARGUMENTS'
lisp.setSymbolFunction(G_227, CL_COMMON_LISP_INTERACTIVE_RESTART_ARGUMENTS);
CL_COMMON_LISP_INVOKE_RESTART_INTERACTIVELY.lisp_name = 'INVOKE-RESTART-INTERACTIVELY'
lisp.setSymbolFunction(G_232, CL_COMMON_LISP_INVOKE_RESTART_INTERACTIVELY);
CL_COMMON_LISP_CERROR.lisp_name = 'CERROR'
lisp.setSymbolFunction(G_242, CL_COMMON_LISP_CERROR);
CL_COMMON_LISP_WARN.lisp_name = 'WARN'
lisp.setSymbolFunction(G_277, CL_COMMON_LISP_WARN);
CL_COMMON_LISP_ABORT.lisp_name = 'ABORT'
lisp.setSymbolFunction(G_304, CL_COMMON_LISP_ABORT);
CL_COMMON_LISP_CONTINUE.lisp_name = 'CONTINUE'
lisp.setSymbolFunction(G_245, CL_COMMON_LISP_CONTINUE);
CL_COMMON_LISP_MUFFLE_WARNING.lisp_name = 'MUFFLE-WARNING'
lisp.setSymbolFunction(G_293, CL_COMMON_LISP_MUFFLE_WARNING);
CL_COMMON_LISP_STORE_VALUE.lisp_name = 'STORE-VALUE'
lisp.setSymbolFunction(G_315, CL_COMMON_LISP_STORE_VALUE);
CL_COMMON_LISP_USE_VALUE.lisp_name = 'USE-VALUE'
lisp.setSymbolFunction(G_320, CL_COMMON_LISP_USE_VALUE);
CL_COMMON_LISP_READ_EVALUATED_FORM.lisp_name = 'READ-EVALUATED-FORM'
lisp.setSymbolFunction(G_325, CL_COMMON_LISP_READ_EVALUATED_FORM);
CL_COMMON_LISP_CHECK_TYPE_ERROR.lisp_name = 'CHECK-TYPE-ERROR'
lisp.setSymbolFunction(G_335, CL_COMMON_LISP_CHECK_TYPE_ERROR);
TMP_351=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_413;
let TMP_412;
let TMP_411;
let TMP_410;
let TMP_409;
let TMP_407;
let TMP_367;
let L_FORMS__208;
let L_G109__207;
let TMP_363;
let L_BINDINGS__206;
let TMP_361;
let L_G108__205;
let TMP_360;
let TMP_356;
let TMP_354;
let TMP_352;
let L_G107__204;
let L_G76__203;
L_G76__203=lisp.jsArrayToList(arguments, 0);
{
L_G107__204=lisp.values1(L_G76__203);
{
TMP_352=lisp.callFunctionWithCallStack(G_353,L_G107__204);
TMP_354=lisp.callFunctionWithCallStack(G_355,1,TMP_352);
if(lisp.values1(TMP_354) !== lisp.S_nil){
TMP_356=lisp.values1(lisp.S_nil);
}else{
TMP_360=lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_357, lisp.makeCons(G_358, lisp.makeCons(G_359, lisp.S_nil))),L_G107__204);
TMP_356=lisp.values1(lisp.values1(TMP_360));
}
L_G108__205=lisp.values1(TMP_356);
TMP_361=lisp.callFunctionWithCallStack(G_362,L_G107__204);
L_BINDINGS__206=lisp.values1(TMP_361);
TMP_363=lisp.callFunctionWithCallStack(G_364,L_G107__204);
L_G109__207=lisp.values1(TMP_363);
L_FORMS__208=lisp.values1(L_G109__207);
TMP_367=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_406;
let TMP_405;
let L_TEST_FUNCTION__225;
let TMP_403;
let L_REPORT_FUNCTION__224;
let TMP_402;
let L_INTERACTIVE_FUNCTION__223;
let TMP_400;
let L_G114__222;
let L_G125__221;
let TMP_398;
let TMP_397;
let TMP_396;
let L_G124__220;
let TMP_395;
let TMP_394;
let TMP_393;
let L_G123__219;
let TMP_392;
let TMP_391;
let TMP_390;
let L_G122__218;
let TMP_389;
let TMP_388;
let TMP_385;
let L_G115__217;
let TMP_383;
let L_G113__215;
let TMP_381;
let L_FUNCTION__214;
let TMP_380;
let L_G112__213;
let TMP_379;
let L_NAME__212;
let TMP_378;
let L_G111__211;
let TMP_377;
let TMP_370;
let TMP_369;
let TMP_368;
let L_G110__210;
let L_BINDING__209;
L_BINDING__209=arguments[0];
{
L_G110__210=lisp.values1(L_BINDING__209);
{
TMP_368=lisp.callFunctionWithCallStack(G_353,L_G110__210);
TMP_369=lisp.callFunctionWithCallStack(G_355,2,TMP_368);
if(lisp.values1(TMP_369) !== lisp.S_nil){
TMP_370=lisp.values1(lisp.S_nil);
}else{
TMP_377=lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_371, lisp.makeCons(G_372, lisp.makeCons(G_373, lisp.makeCons(G_374, lisp.makeCons(G_375, lisp.makeCons(G_376, lisp.S_nil)))))),L_G110__210);
TMP_370=lisp.values1(lisp.values1(TMP_377));
}
L_G111__211=lisp.values1(TMP_370);
TMP_378=lisp.callFunctionWithCallStack(G_362,L_G110__210);
L_NAME__212=lisp.values1(TMP_378);
TMP_379=lisp.callFunctionWithCallStack(G_364,L_G110__210);
L_G112__213=lisp.values1(TMP_379);
TMP_380=lisp.callFunctionWithCallStack(G_362,L_G112__213);
L_FUNCTION__214=lisp.values1(TMP_380);
TMP_381=lisp.callFunctionWithCallStack(G_364,L_G112__213);
L_G113__215=lisp.values1(TMP_381);
try {
{
L_G115__217=lisp.values1(L_G113__215);
let HOST_G117_STATE = 'G119';
HOST_G117: for(;;){
try{
switch(HOST_G117_STATE){
case 'G119':
case 'G118':
TMP_385=lisp.callFunctionWithCallStack(G_171,L_G115__217);
if(lisp.values1(TMP_385) !== lisp.S_nil){
throw new lisp.BlockValue(G_386,lisp.values1(lisp.S_nil));}else{
let HOST_G120_STATE = 'G121';
HOST_G120: for(;;){
try{
switch(HOST_G120_STATE){
case 'G121':
{
TMP_388=lisp.callFunctionWithCallStack(G_362,L_G115__217);
TMP_389=lisp.CL_eq(G_25,TMP_388);
L_G122__218=lisp.values1(TMP_389);
if(lisp.values1(L_G122__218) !== lisp.S_nil){
TMP_390=lisp.values1(L_G122__218);
}else{
{
TMP_391=lisp.callFunctionWithCallStack(G_362,L_G115__217);
TMP_392=lisp.CL_eq(G_23,TMP_391);
L_G123__219=lisp.values1(TMP_392);
if(lisp.values1(L_G123__219) !== lisp.S_nil){
TMP_393=lisp.values1(L_G123__219);
}else{
{
TMP_394=lisp.callFunctionWithCallStack(G_362,L_G115__217);
TMP_395=lisp.CL_eq(G_21,TMP_394);
L_G124__220=lisp.values1(TMP_395);
if(lisp.values1(L_G124__220) !== lisp.S_nil){
TMP_396=lisp.values1(L_G124__220);
}else{
TMP_396=lisp.values1(lisp.S_nil);
}
}
TMP_393=lisp.values1(lisp.values1(TMP_396));
}
}
TMP_390=lisp.values1(lisp.values1(TMP_393));
}
}
if(lisp.values1(lisp.values1(TMP_390)) !== lisp.S_nil){
}else{
TMP_397=lisp.callFunctionWithCallStack(G_362,L_G115__217);
lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([85, 110, 107, 110, 111, 119, 110, 32, 38, 107, 101, 121, 32, 97, 114, 103, 117, 109, 101, 110, 116, 58, 32, 126, 83])),TMP_397);
}
}
break;
}catch(ERR_387){
if(ERR_387 instanceof lisp.TagValue && ERR_387.id==='HOST_G120'){HOST_G120_STATE=ERR_387.index;}
else{throw ERR_387;}}
}
{
TMP_398=lisp.callFunctionWithCallStack(G_399,L_G115__217);
L_G125__221=lisp.values1(TMP_398);
L_G115__217=lisp.values1(L_G125__221);
}
throw new lisp.TagValue('HOST_G117', 'G118');
}
}
break;
}catch(ERR_384){
if(ERR_384 instanceof lisp.TagValue && ERR_384.id==='HOST_G117'){HOST_G117_STATE=ERR_384.index;}
else{throw ERR_384;}}
}
}
TMP_383=lisp.values1(lisp.values1(lisp.values1(lisp.S_nil)))
}catch(E__382){if(E__382 instanceof lisp.BlockValue && E__382.name === G_386){TMP_383=E__382.value;}
else{throw E__382;}
}
L_G114__222=lisp.values1(TMP_383);
TMP_400=lisp.callFunctionWithCallStack(G_401,L_G113__215,G_21);
L_INTERACTIVE_FUNCTION__223=lisp.values1(TMP_400);
TMP_402=lisp.callFunctionWithCallStack(G_401,L_G113__215,G_23);
L_REPORT_FUNCTION__224=lisp.values1(TMP_402);
TMP_403=lisp.callFunctionWithCallStack(G_401,L_G113__215,G_25);
L_TEST_FUNCTION__225=lisp.values1(TMP_403);
TMP_405=lisp.callFunctionWithCallStack(G_51,G_404,L_NAME__212);
TMP_406=lisp.callFunctionWithCallStack(G_51,G_16,G_17,TMP_405,G_19,L_FUNCTION__214,G_21,L_INTERACTIVE_FUNCTION__223,G_23,L_REPORT_FUNCTION__224,G_25,L_TEST_FUNCTION__225);
}
}
return TMP_406;
});
TMP_407=lisp.callFunctionWithCallStack(G_408,TMP_367,L_BINDINGS__206);
TMP_409=lisp.CL_cons(G_51,TMP_407);
TMP_410=lisp.callFunctionWithCallStack(G_53,G_366,TMP_409,lisp.makeCons(G_2, lisp.S_nil));
TMP_411=lisp.callFunctionWithCallStack(G_51,G_2,TMP_410);
TMP_412=lisp.callFunctionWithCallStack(G_51,TMP_411);
TMP_413=lisp.callFunctionWithCallStack(G_53,G_365,TMP_412,L_FORMS__208);
}
}
return TMP_413;
});
lisp.CL_put(G_237,G_350,TMP_351);
TMP_414=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_517;
let TMP_516;
let TMP_515;
let TMP_486;
let L_OUTER_BLOCK_NAME__253;
let TMP_484;
let F_PARSE_CLAUSE__236;
let TMP_471;
let F_PARSE_CLAUSE_1__235;
let TMP_441;
let F_ENSURE_TEST_FUNCTION__234;
let TMP_434;
let F_ENSURE_REPORT_FUNCTION__233;
let TMP_425;
let F_ENSURE_INTERACTIVE_FUNCTION__232;
let TMP_423;
let L_CLAUSES__231;
let L_G128__230;
let TMP_422;
let L_EXPRESSION__229;
let TMP_421;
let L_G127__228;
let TMP_420;
let TMP_417;
let TMP_416;
let TMP_415;
let L_G126__227;
let L_G77__226;
L_G77__226=lisp.jsArrayToList(arguments, 0);
{
L_G126__227=lisp.values1(L_G77__226);
{
TMP_415=lisp.callFunctionWithCallStack(G_353,L_G126__227);
TMP_416=lisp.callFunctionWithCallStack(G_355,1,TMP_415);
if(lisp.values1(TMP_416) !== lisp.S_nil){
TMP_417=lisp.values1(lisp.S_nil);
}else{
TMP_420=lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_418, lisp.makeCons(G_358, lisp.makeCons(G_419, lisp.S_nil))),L_G126__227);
TMP_417=lisp.values1(lisp.values1(TMP_420));
}
L_G127__228=lisp.values1(TMP_417);
TMP_421=lisp.callFunctionWithCallStack(G_362,L_G126__227);
L_EXPRESSION__229=lisp.values1(TMP_421);
TMP_422=lisp.callFunctionWithCallStack(G_364,L_G126__227);
L_G128__230=lisp.values1(TMP_422);
L_CLAUSES__231=lisp.values1(L_G128__230);
{
TMP_423=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_424;
let L_INTERACTIVE__237;
L_INTERACTIVE__237=arguments[0];
TMP_424=lisp.callFunctionWithCallStack(G_51,G_372,L_INTERACTIVE__237);
return TMP_424;
});
F_ENSURE_INTERACTIVE_FUNCTION__232=lisp.values1(TMP_423);
TMP_425=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_433;
let TMP_432;
let TMP_431;
let TMP_428;
let TMP_426;
let L_REPORT__238;
L_REPORT__238=arguments[0];
TMP_426=lisp.callFunctionWithCallStack(G_427,L_REPORT__238);
if(lisp.values1(TMP_426) !== lisp.S_nil){
TMP_431=lisp.callFunctionWithCallStack(G_53,G_149,L_REPORT__238,lisp.makeCons(G_430, lisp.S_nil));
TMP_432=lisp.callFunctionWithCallStack(G_51,G_429,lisp.makeCons(G_430, lisp.S_nil),TMP_431);
TMP_428=TMP_432;
}else{
TMP_433=lisp.callFunctionWithCallStack(G_51,G_372,L_REPORT__238);
TMP_428=TMP_433;
}
return TMP_428;
});
F_ENSURE_REPORT_FUNCTION__233=lisp.values1(TMP_425);
TMP_434=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_440;
let TMP_439;
let TMP_438;
let TMP_437;
let TMP_436;
let TMP_435;
let L_TEST__239;
L_TEST__239=arguments[0];
TMP_435=lisp.CL_consp(L_TEST__239);
if(lisp.values1(TMP_435) !== lisp.S_nil){
TMP_437=lisp.callFunctionWithCallStack(G_164,L_TEST__239);
TMP_438=lisp.CL_eq(G_372,TMP_437);
TMP_436=lisp.values1(TMP_438);
}else{
TMP_436=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_436) !== lisp.S_nil){
TMP_439=lisp.values1(L_TEST__239);
}else{
TMP_440=lisp.callFunctionWithCallStack(G_51,G_372,L_TEST__239);
TMP_439=TMP_440;
}
return TMP_439;
});
F_ENSURE_TEST_FUNCTION__234=lisp.values1(TMP_434);
TMP_441=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_470;
let TMP_469;
let L_G133__245;
let TMP_468;
let TMP_467;
let TMP_466;
let TMP_465;
let TMP_464;
let TMP_463;
let L_G132__244;
let TMP_462;
let TMP_460;
let TMP_459;
let TMP_458;
let TMP_457;
let TMP_456;
let TMP_455;
let L_G131__243;
let TMP_454;
let TMP_452;
let TMP_451;
let TMP_450;
let TMP_449;
let TMP_447;
let TMP_446;
let L_G130__242;
let TMP_444;
let L_G129__241;
let TMP_442;
let L_CLAUSE__240;
L_CLAUSE__240=arguments[0];
{
TMP_442=lisp.callFunctionWithCallStack(G_164,L_CLAUSE__240);
L_G129__241=lisp.values1(TMP_442);
{
TMP_444=lisp.callFunctionWithCallStack(G_445,L_G129__241,G_443);
L_G130__242=lisp.values1(TMP_444);
if(lisp.values1(L_G130__242) !== lisp.S_nil){
TMP_447=lisp.callFunctionWithCallStack(G_448,L_CLAUSE__240);
TMP_449=F_ENSURE_INTERACTIVE_FUNCTION__232(TMP_447);
TMP_450=lisp.callFunctionWithCallStack(G_51,G_21,TMP_449);
TMP_451=lisp.callFunctionWithCallStack(G_399,L_CLAUSE__240);
TMP_452=lisp.CL_values(TMP_450,TMP_451);
TMP_446=TMP_452;
}else{
{
TMP_454=lisp.callFunctionWithCallStack(G_445,L_G129__241,G_453);
L_G131__243=lisp.values1(TMP_454);
if(lisp.values1(L_G131__243) !== lisp.S_nil){
TMP_456=lisp.callFunctionWithCallStack(G_448,L_CLAUSE__240);
TMP_457=F_ENSURE_REPORT_FUNCTION__233(TMP_456);
TMP_458=lisp.callFunctionWithCallStack(G_51,G_23,TMP_457);
TMP_459=lisp.callFunctionWithCallStack(G_399,L_CLAUSE__240);
TMP_460=lisp.CL_values(TMP_458,TMP_459);
TMP_455=TMP_460;
}else{
{
TMP_462=lisp.callFunctionWithCallStack(G_445,L_G129__241,G_461);
L_G132__244=lisp.values1(TMP_462);
if(lisp.values1(L_G132__244) !== lisp.S_nil){
TMP_464=lisp.callFunctionWithCallStack(G_448,L_CLAUSE__240);
TMP_465=F_ENSURE_TEST_FUNCTION__234(TMP_464);
TMP_466=lisp.callFunctionWithCallStack(G_51,G_25,TMP_465);
TMP_467=lisp.callFunctionWithCallStack(G_399,L_CLAUSE__240);
TMP_468=lisp.CL_values(TMP_466,TMP_467);
TMP_463=TMP_468;
}else{
{
L_G133__245=lisp.values1(G_5);
if(lisp.values1(L_G133__245) !== lisp.S_nil){
TMP_470=lisp.CL_values(lisp.S_nil,L_CLAUSE__240);
TMP_469=TMP_470;
}else{
TMP_469=lisp.values1(lisp.S_nil);
}
}
TMP_463=TMP_469;
}
}
TMP_455=TMP_463;
}
}
TMP_446=TMP_455;
}
}
}
return TMP_446;
});
F_PARSE_CLAUSE_1__235=lisp.values1(TMP_441);
TMP_471=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_483;
let TMP_482;
let TMP_480;
let TMP_472;
let L_OPTIONS__247;
let L_CLAUSE__246;
L_CLAUSE__246=arguments[0];
L_OPTIONS__247=arguments[1];
TMP_472=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_479;
let TMP_477;
let TMP_476;
let L_G136__252;
let TMP_475;
let TMP_474;
let L_G135__251;
let TMP_473;
let L_G134__250;
let L_CLAUSE__249;
let L_OPTION__248;
L_OPTION__248=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_CLAUSE__249=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G134__250=lisp.jsArrayToList(arguments, 2);
{
TMP_473=lisp.callFunctionWithCallStack(G_171,L_OPTION__248);
L_G135__251=lisp.values1(TMP_473);
if(lisp.values1(L_G135__251) !== lisp.S_nil){
TMP_475=lisp.CL_values(L_CLAUSE__249,L_OPTIONS__247);
TMP_474=TMP_475;
}else{
{
L_G136__252=lisp.values1(G_5);
if(lisp.values1(L_G136__252) !== lisp.S_nil){
TMP_477=lisp.callFunctionWithCallStack(G_478,L_OPTION__248,L_OPTIONS__247);
TMP_479=F_PARSE_CLAUSE__236(L_CLAUSE__249,TMP_477);
TMP_476=TMP_479;
}else{
TMP_476=lisp.values1(lisp.S_nil);
}
}
TMP_474=TMP_476;
}
}
return TMP_474;
});
TMP_480=lisp.callFunctionWithCallStack(G_481,TMP_472);
TMP_482=F_PARSE_CLAUSE_1__235(L_CLAUSE__246);
TMP_483=lisp.CL_multipleValueCall(TMP_480,TMP_482);
return TMP_483;
});
F_PARSE_CLAUSE__236=lisp.values1(TMP_471);
{
TMP_484=lisp.callFunctionWithCallStack(G_45);
L_OUTER_BLOCK_NAME__253=lisp.values1(TMP_484);
TMP_486=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_514;
let TMP_513;
let TMP_512;
let TMP_498;
let L_CLAUSE__261;
let L_G140__260;
let TMP_497;
let L_LAMBDA_LIST__259;
let TMP_496;
let L_G139__258;
let TMP_495;
let L_CASE_NAME__257;
let TMP_494;
let L_G138__256;
let TMP_493;
let TMP_489;
let TMP_488;
let TMP_487;
let L_G137__255;
let L_CLAUSE__254;
L_CLAUSE__254=arguments[0];
{
L_G137__255=lisp.values1(L_CLAUSE__254);
{
TMP_487=lisp.callFunctionWithCallStack(G_353,L_G137__255);
TMP_488=lisp.callFunctionWithCallStack(G_355,2,TMP_487);
if(lisp.values1(TMP_488) !== lisp.S_nil){
TMP_489=lisp.values1(lisp.S_nil);
}else{
TMP_493=lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_490, lisp.makeCons(G_491, G_492)),L_G137__255);
TMP_489=lisp.values1(lisp.values1(TMP_493));
}
L_G138__256=lisp.values1(TMP_489);
TMP_494=lisp.callFunctionWithCallStack(G_362,L_G137__255);
L_CASE_NAME__257=lisp.values1(TMP_494);
TMP_495=lisp.callFunctionWithCallStack(G_364,L_G137__255);
L_G139__258=lisp.values1(TMP_495);
TMP_496=lisp.callFunctionWithCallStack(G_362,L_G139__258);
L_LAMBDA_LIST__259=lisp.values1(TMP_496);
TMP_497=lisp.callFunctionWithCallStack(G_364,L_G139__258);
L_G140__260=lisp.values1(TMP_497);
L_CLAUSE__261=lisp.values1(L_G140__260);
TMP_498=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_511;
let TMP_509;
let TMP_508;
let TMP_499;
let L_G141__264;
let L_OPTIONS__263;
let L_CLAUSE__262;
L_CLAUSE__262=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_OPTIONS__263=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G141__264=lisp.jsArrayToList(arguments, 2);
TMP_499=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_507;
let TMP_506;
let TMP_505;
let TMP_504;
let TMP_501;
let L_G142__267;
let L_DECLARES__266;
let L_FORMS__265;
L_FORMS__265=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__266=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G142__267=lisp.jsArrayToList(arguments, 2);
TMP_501=lisp.CL_cons(G_500,L_DECLARES__266);
TMP_504=lisp.CL_cons(G_503,L_FORMS__265);
TMP_505=lisp.callFunctionWithCallStack(G_51,G_502,L_OUTER_BLOCK_NAME__253,TMP_504);
TMP_506=lisp.callFunctionWithCallStack(G_51,G_429,L_LAMBDA_LIST__259,TMP_501,TMP_505);
TMP_507=lisp.callFunctionWithCallStack(G_53,L_CASE_NAME__257,TMP_506,L_OPTIONS__263);
return TMP_507;
});
TMP_508=lisp.callFunctionWithCallStack(G_481,TMP_499);
TMP_509=lisp.callFunctionWithCallStack(G_510,L_CLAUSE__262,lisp.S_nil);
TMP_511=lisp.CL_multipleValueCall(TMP_508,TMP_509);
return TMP_511;
});
TMP_512=lisp.callFunctionWithCallStack(G_481,TMP_498);
TMP_513=F_PARSE_CLAUSE__236(L_CLAUSE__261,lisp.S_nil);
TMP_514=lisp.CL_multipleValueCall(TMP_512,TMP_513);
}
}
return TMP_514;
});
TMP_515=lisp.callFunctionWithCallStack(G_408,TMP_486,L_CLAUSES__231);
TMP_516=lisp.callFunctionWithCallStack(G_51,G_237,TMP_515,L_EXPRESSION__229);
TMP_517=lisp.callFunctionWithCallStack(G_51,G_485,L_OUTER_BLOCK_NAME__253,TMP_516);
}
}
}
}
return TMP_517;
});
lisp.CL_put(G_238,G_350,TMP_414);
TMP_518=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_543;
let TMP_542;
let TMP_540;
let TMP_539;
let TMP_538;
let TMP_537;
let L_G_STREAM__280;
let TMP_536;
let L_FORMS__279;
let L_G149__278;
let TMP_535;
let L_FORMAT_ARGUMENTS__277;
let L_G148__276;
let TMP_534;
let L_FORMAT_CONTROL__275;
let TMP_533;
let L_G147__274;
let TMP_532;
let L_RESTART_NAME__273;
let TMP_531;
let L_G146__272;
let TMP_530;
let TMP_529;
let TMP_528;
let TMP_527;
let L_G145__271;
let TMP_526;
let L_G144__270;
let TMP_525;
let TMP_521;
let TMP_520;
let TMP_519;
let L_G143__269;
let L_G78__268;
L_G78__268=lisp.jsArrayToList(arguments, 0);
{
L_G143__269=lisp.values1(L_G78__268);
{
TMP_519=lisp.callFunctionWithCallStack(G_353,L_G143__269);
TMP_520=lisp.callFunctionWithCallStack(G_355,1,TMP_519);
if(lisp.values1(TMP_520) !== lisp.S_nil){
TMP_521=lisp.values1(lisp.S_nil);
}else{
TMP_525=lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_32, lisp.makeCons(G_522, lisp.makeCons(G_523, lisp.makeCons(G_524, lisp.S_nil)))), lisp.makeCons(G_358, lisp.makeCons(G_359, lisp.S_nil))),L_G143__269);
TMP_521=lisp.values1(lisp.values1(TMP_525));
}
L_G144__270=lisp.values1(TMP_521);
TMP_526=lisp.callFunctionWithCallStack(G_362,L_G143__269);
L_G145__271=lisp.values1(TMP_526);
TMP_527=lisp.callFunctionWithCallStack(G_353,L_G145__271);
TMP_528=lisp.callFunctionWithCallStack(G_355,2,TMP_527);
if(lisp.values1(TMP_528) !== lisp.S_nil){
TMP_529=lisp.values1(lisp.S_nil);
}else{
TMP_530=lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_32, lisp.makeCons(G_522, lisp.makeCons(G_523, lisp.makeCons(G_524, lisp.S_nil)))),L_G145__271);
TMP_529=lisp.values1(lisp.values1(TMP_530));
}
L_G146__272=lisp.values1(TMP_529);
TMP_531=lisp.callFunctionWithCallStack(G_362,L_G145__271);
L_RESTART_NAME__273=lisp.values1(TMP_531);
TMP_532=lisp.callFunctionWithCallStack(G_364,L_G145__271);
L_G147__274=lisp.values1(TMP_532);
TMP_533=lisp.callFunctionWithCallStack(G_362,L_G147__274);
L_FORMAT_CONTROL__275=lisp.values1(TMP_533);
TMP_534=lisp.callFunctionWithCallStack(G_364,L_G147__274);
L_G148__276=lisp.values1(TMP_534);
L_FORMAT_ARGUMENTS__277=lisp.values1(L_G148__276);
TMP_535=lisp.callFunctionWithCallStack(G_364,L_G143__269);
L_G149__278=lisp.values1(TMP_535);
L_FORMS__279=lisp.values1(L_G149__278);
{
TMP_536=lisp.callFunctionWithCallStack(G_45);
L_G_STREAM__280=lisp.values1(TMP_536);
TMP_537=lisp.CL_cons(G_503,L_FORMS__279);
TMP_538=lisp.callFunctionWithCallStack(G_51,L_G_STREAM__280);
TMP_539=lisp.callFunctionWithCallStack(G_53,G_250,L_G_STREAM__280,L_FORMAT_CONTROL__275,L_FORMAT_ARGUMENTS__277);
TMP_540=lisp.callFunctionWithCallStack(G_51,G_429,TMP_538,TMP_539);
TMP_542=lisp.callFunctionWithCallStack(G_53,L_RESTART_NAME__273,lisp.S_nil,G_453,TMP_540,lisp.makeCons(lisp.makeCons(G_541, lisp.makeCons(lisp.S_nil, lisp.makeCons(G_5, lisp.S_nil))), lisp.S_nil));
TMP_543=lisp.callFunctionWithCallStack(G_51,G_238,TMP_537,TMP_542);
}
}
}
return TMP_543;
});
lisp.CL_put(G_239,G_350,TMP_518);
TMP_544=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_576;
let TMP_575;
let TMP_574;
let TMP_573;
let TMP_572;
let TMP_570;
let TMP_569;
let TMP_568;
let TMP_567;
let TMP_566;
let TMP_564;
let TMP_561;
let TMP_560;
let TMP_559;
let L_RESTART__291;
let TMP_558;
let L_RESTARTS__290;
let TMP_557;
let L_CONDITION__289;
let TMP_556;
let L_BODY__288;
let L_G153__287;
let TMP_555;
let L_RESTARTS_FORM__286;
let TMP_554;
let L_G152__285;
let TMP_553;
let L_CONDITION_FORM__284;
let TMP_552;
let L_G151__283;
let TMP_551;
let TMP_547;
let TMP_546;
let TMP_545;
let L_G150__282;
let L_G79__281;
L_G79__281=lisp.jsArrayToList(arguments, 0);
{
L_G150__282=lisp.values1(L_G79__281);
{
TMP_545=lisp.callFunctionWithCallStack(G_353,L_G150__282);
TMP_546=lisp.callFunctionWithCallStack(G_355,2,TMP_545);
if(lisp.values1(TMP_546) !== lisp.S_nil){
TMP_547=lisp.values1(lisp.S_nil);
}else{
TMP_551=lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_548, lisp.makeCons(G_549, lisp.makeCons(G_358, lisp.makeCons(G_550, lisp.S_nil)))),L_G150__282);
TMP_547=lisp.values1(lisp.values1(TMP_551));
}
L_G151__283=lisp.values1(TMP_547);
TMP_552=lisp.callFunctionWithCallStack(G_362,L_G150__282);
L_CONDITION_FORM__284=lisp.values1(TMP_552);
TMP_553=lisp.callFunctionWithCallStack(G_364,L_G150__282);
L_G152__285=lisp.values1(TMP_553);
TMP_554=lisp.callFunctionWithCallStack(G_362,L_G152__285);
L_RESTARTS_FORM__286=lisp.values1(TMP_554);
TMP_555=lisp.callFunctionWithCallStack(G_364,L_G152__285);
L_G153__287=lisp.values1(TMP_555);
L_BODY__288=lisp.values1(L_G153__287);
{
TMP_556=lisp.callFunctionWithCallStack(G_45);
L_CONDITION__289=lisp.values1(TMP_556);
TMP_557=lisp.callFunctionWithCallStack(G_45);
L_RESTARTS__290=lisp.values1(TMP_557);
TMP_558=lisp.callFunctionWithCallStack(G_45);
L_RESTART__291=lisp.values1(TMP_558);
TMP_559=lisp.callFunctionWithCallStack(G_51,L_CONDITION__289,L_CONDITION_FORM__284);
TMP_560=lisp.callFunctionWithCallStack(G_51,L_RESTARTS__290,L_RESTARTS_FORM__286);
TMP_561=lisp.callFunctionWithCallStack(G_51,TMP_559,TMP_560);
TMP_564=lisp.callFunctionWithCallStack(G_51,L_RESTART__291,L_RESTARTS__290);
TMP_566=lisp.callFunctionWithCallStack(G_51,G_131,L_RESTART__291);
TMP_567=lisp.callFunctionWithCallStack(G_51,G_565,L_CONDITION__289,TMP_566);
TMP_568=lisp.callFunctionWithCallStack(G_51,G_563,TMP_564,TMP_567);
TMP_569=lisp.callFunctionWithCallStack(G_53,G_503,TMP_568,L_BODY__288);
TMP_570=lisp.callFunctionWithCallStack(G_51,L_RESTART__291,L_RESTARTS__290);
TMP_572=lisp.callFunctionWithCallStack(G_51,G_131,L_RESTART__291);
TMP_573=lisp.callFunctionWithCallStack(G_51,G_571,TMP_572);
TMP_574=lisp.callFunctionWithCallStack(G_51,G_563,TMP_570,TMP_573);
TMP_575=lisp.callFunctionWithCallStack(G_51,G_562,TMP_569,TMP_574);
TMP_576=lisp.callFunctionWithCallStack(G_51,G_365,TMP_561,TMP_575);
}
}
}
return TMP_576;
});
lisp.CL_put(G_240,G_350,TMP_544);
TMP_577=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_601;
let TMP_600;
let TMP_599;
let TMP_598;
let TMP_597;
let TMP_595;
let TMP_594;
let TMP_593;
let L_G158__300;
let TMP_591;
let L_TYPE_STRING__299;
let TMP_590;
let L_G157__298;
let TMP_589;
let L_TYPE_SPEC__297;
let TMP_588;
let L_G156__296;
let TMP_587;
let L_PLACE__295;
let TMP_586;
let L_G155__294;
let TMP_585;
let TMP_580;
let TMP_579;
let TMP_578;
let L_G154__293;
let L_G106__292;
L_G106__292=lisp.jsArrayToList(arguments, 0);
{
L_G154__293=lisp.values1(L_G106__292);
{
TMP_578=lisp.callFunctionWithCallStack(G_353,L_G154__293);
TMP_579=lisp.callFunctionWithCallStack(G_355,2,TMP_578,3);
if(lisp.values1(TMP_579) !== lisp.S_nil){
TMP_580=lisp.values1(lisp.S_nil);
}else{
TMP_585=lisp.callFunctionWithCallStack(G_219,G_48.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_581, lisp.makeCons(G_582, lisp.makeCons(G_583, lisp.makeCons(G_584, lisp.S_nil)))),L_G154__293);
TMP_580=lisp.values1(lisp.values1(TMP_585));
}
L_G155__294=lisp.values1(TMP_580);
TMP_586=lisp.callFunctionWithCallStack(G_362,L_G154__293);
L_PLACE__295=lisp.values1(TMP_586);
TMP_587=lisp.callFunctionWithCallStack(G_364,L_G154__293);
L_G156__296=lisp.values1(TMP_587);
TMP_588=lisp.callFunctionWithCallStack(G_362,L_G156__296);
L_TYPE_SPEC__297=lisp.values1(TMP_588);
TMP_589=lisp.callFunctionWithCallStack(G_364,L_G156__296);
L_G157__298=lisp.values1(TMP_589);
TMP_590=lisp.callFunctionWithCallStack(G_362,L_G157__298);
L_TYPE_STRING__299=lisp.values1(TMP_590);
TMP_591=lisp.callFunctionWithCallStack(G_364,L_G157__298);
L_G158__300=lisp.values1(TMP_591);
TMP_593=lisp.callFunctionWithCallStack(G_51,G_404,L_TYPE_SPEC__297);
TMP_594=lisp.callFunctionWithCallStack(G_51,G_14,L_PLACE__295,TMP_593);
TMP_595=lisp.callFunctionWithCallStack(G_51,TMP_594);
TMP_597=lisp.callFunctionWithCallStack(G_51,G_404,L_TYPE_SPEC__297);
TMP_598=lisp.callFunctionWithCallStack(G_51,G_404,L_PLACE__295);
TMP_599=lisp.callFunctionWithCallStack(G_51,G_335,TMP_597,TMP_598);
TMP_600=lisp.callFunctionWithCallStack(G_51,G_596,L_PLACE__295,TMP_599);
TMP_601=lisp.callFunctionWithCallStack(G_51,G_592,lisp.S_nil,TMP_595,TMP_600);
}
}
return TMP_601;
});
lisp.CL_put(G_349,G_350,TMP_577);
}catch(TMP_1){G_602.func();
console.log(TMP_1.message);
}


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let G_7;
let G_8;
let G_9;
let G_10;
let G_11;
let G_12;
let G_13;
let G_15;
let G_16;
let G_17;
let G_18;
let G_21;
let G_22;
let G_24;
let G_26;
let G_27;
let G_30;
let G_32;
let G_34;
let G_35;
let G_36;
let G_39;
let G_41;
let G_43;
let G_44;
let G_47;
let G_48;
let G_50;
let G_51;
let G_52;
let G_54;
let G_59;
let CL_COMMON_LISP_THROW;
let TMP_28;
let TMP_20;
let TMP_19;
let TMP_14;
let TMP_3;
// toplevel defun
let F_THROW_23;
F_THROW_23=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_24, arguments.length);
}
let TMP_25;
let L_RESULT__2;
let L_TAG__1;
L_TAG__1=arguments[0];
L_RESULT__2=arguments[1];
TMP_25=lisp.callFunctionWithCallStack(G_26,G_2,G_11,L_TAG__1,G_17,L_RESULT__2);
return TMP_25;
});
CL_COMMON_LISP_THROW=lisp.values1(F_THROW_23);
// initialize symbols
G_2 = lisp.intern('THROW-CONDITION', 'COMMON-LISP');
G_4 = lisp.intern('FIND-CLASS', 'COMMON-LISP');
G_5 = lisp.intern('DIRECT-SUPERCLASSES', 'KEYWORD');
G_6 = lisp.intern('BASE-CONDITION', 'COMMON-LISP');
G_7 = lisp.intern('DIRECT-SLOTS', 'KEYWORD');
G_8 = lisp.intern('READERS', 'KEYWORD');
G_9 = lisp.intern('THROW-CONDITION-TAG', 'COMMON-LISP');
G_10 = lisp.intern('INITARGS', 'KEYWORD');
G_11 = lisp.intern('TAG', 'KEYWORD');
G_12 = lisp.intern('NAME', 'KEYWORD');
G_13 = lisp.intern('TAG', 'COMMON-LISP');
G_15 = lisp.intern('LIST', 'COMMON-LISP');
G_16 = lisp.intern('THROW-CONDITION-VALUE', 'COMMON-LISP');
G_17 = lisp.intern('VALUE', 'KEYWORD');
G_18 = lisp.intern('VALUE', 'COMMON-LISP');
G_21 = lisp.intern('ENSURE-CLASS-USING-CLASS', 'COMMON-LISP');
G_22 = lisp.intern('CATCH', 'COMMON-LISP');
G_24 = lisp.intern('THROW', 'COMMON-LISP');
G_26 = lisp.intern('ERROR', 'COMMON-LISP');
G_27 = lisp.intern('MACRO', 'COMPILER');
G_30 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_32 = lisp.intern('<=', 'COMMON-LISP');
G_34 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_35 = lisp.intern('&BODY', 'COMMON-LISP');
G_36 = lisp.intern('BODY', 'COMMON-LISP');
G_39 = lisp.intern('FIRST', 'COMMON-LISP');
G_41 = lisp.intern('REST', 'COMMON-LISP');
G_43 = lisp.intern('GENSYM', 'COMMON-LISP');
G_44 = lisp.intern('LET', 'COMMON-LISP');
G_47 = lisp.intern('HANDLER-CASE', 'COMMON-LISP');
G_48 = lisp.intern('PROGN', 'COMMON-LISP');
G_50 = lisp.intern('E', 'COMMON-LISP');
G_51 = lisp.intern('IF', 'COMMON-LISP');
G_52 = lisp.intern('EQ', 'COMMON-LISP');
G_54 = lisp.intern('LIST*', 'COMMON-LISP');
G_59 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');TMP_3=lisp.callFunctionWithCallStack(G_4,G_2,lisp.S_nil);
TMP_14=lisp.callFunctionWithCallStack(G_15,G_8,lisp.makeCons(G_9, lisp.S_nil),G_10,lisp.makeCons(G_11, lisp.S_nil),G_12,G_13);
TMP_19=lisp.callFunctionWithCallStack(G_15,G_8,lisp.makeCons(G_16, lisp.S_nil),G_10,lisp.makeCons(G_17, lisp.S_nil),G_12,G_18);
TMP_20=lisp.callFunctionWithCallStack(G_15,TMP_14,TMP_19);
lisp.callFunctionWithCallStack(G_21,TMP_3,G_2,G_5,lisp.makeCons(G_6, lisp.S_nil),G_7,TMP_20);
CL_COMMON_LISP_THROW.lisp_name = 'THROW'
lisp.setSymbolFunction(G_24, CL_COMMON_LISP_THROW);
TMP_28=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_58;
let TMP_57;
let TMP_56;
let TMP_55;
let TMP_53;
let TMP_49;
let TMP_46;
let TMP_45;
let L_G_TAG__10;
let TMP_42;
let L_BODY__9;
let L_G5__8;
let TMP_40;
let L_TAG__7;
let TMP_38;
let L_G4__6;
let TMP_37;
let TMP_33;
let TMP_31;
let TMP_29;
let L_G3__5;
let L_G2__4;
L_G2__4=lisp.jsArrayToList(arguments, 0);
{
L_G3__5=lisp.values1(L_G2__4);
{
TMP_29=lisp.callFunctionWithCallStack(G_30,L_G3__5);
TMP_31=lisp.callFunctionWithCallStack(G_32,1,TMP_29);
if(lisp.values1(TMP_31) !== lisp.S_nil){
TMP_33=lisp.values1(lisp.S_nil);
}else{
TMP_37=lisp.callFunctionWithCallStack(G_26,G_34.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_13, lisp.makeCons(G_35, lisp.makeCons(G_36, lisp.S_nil))),L_G3__5);
TMP_33=lisp.values1(lisp.values1(TMP_37));
}
L_G4__6=lisp.values1(TMP_33);
TMP_38=lisp.callFunctionWithCallStack(G_39,L_G3__5);
L_TAG__7=lisp.values1(TMP_38);
TMP_40=lisp.callFunctionWithCallStack(G_41,L_G3__5);
L_G5__8=lisp.values1(TMP_40);
L_BODY__9=lisp.values1(L_G5__8);
{
TMP_42=lisp.callFunctionWithCallStack(G_43,G_34.func(lisp.codeArrayToString([84, 65, 71])));
L_G_TAG__10=lisp.values1(TMP_42);
TMP_45=lisp.callFunctionWithCallStack(G_15,L_G_TAG__10,L_TAG__7);
TMP_46=lisp.callFunctionWithCallStack(G_15,TMP_45);
TMP_49=lisp.CL_cons(G_48,L_BODY__9);
TMP_53=lisp.callFunctionWithCallStack(G_54,G_52,L_G_TAG__10,lisp.makeCons(lisp.makeCons(G_9, lisp.makeCons(G_50, lisp.S_nil)), lisp.S_nil));
TMP_55=lisp.callFunctionWithCallStack(G_54,G_51,TMP_53,lisp.makeCons(lisp.makeCons(G_16, lisp.makeCons(G_50, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_26, lisp.makeCons(G_50, lisp.S_nil)), lisp.S_nil)));
TMP_56=lisp.callFunctionWithCallStack(G_15,G_2,lisp.makeCons(G_50, lisp.S_nil),TMP_55);
TMP_57=lisp.callFunctionWithCallStack(G_15,G_47,TMP_49,TMP_56);
TMP_58=lisp.callFunctionWithCallStack(G_15,G_44,TMP_46,TMP_57);
}
}
}
return TMP_58;
});
lisp.CL_put(G_22,G_27,TMP_28);
}catch(TMP_1){G_59.func();
console.log(TMP_1.message);
}


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_5;
let G_6;
let G_7;
let G_8;
let G_9;
let G_10;
let G_11;
let G_12;
let G_13;
let G_14;
let G_18;
let G_19;
let G_20;
let G_21;
let G_25;
let G_29;
let G_33;
let G_40;
let G_44;
let G_66;
let G_67;
let G_68;
let G_69;
let G_70;
let G_71;
let G_72;
let G_82;
let G_84;
let TMP_78;
let TMP_73;
let TMP_63;
let TMP_60;
let TMP_57;
let TMP_54;
let TMP_51;
let TMP_48;
let TMP_45;
let TMP_41;
let TMP_37;
let TMP_34;
let TMP_30;
let TMP_26;
let TMP_22;
let TMP_15;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('DOCUMENTATION', 'COMMON-LISP');
G_3 = lisp.intern('LAMBDA-LIST', 'KEYWORD');
G_4 = lisp.intern('X', 'COMMON-LISP');
G_5 = lisp.intern('DOC-TYPE', 'COMMON-LISP');
G_6 = lisp.intern('ENSURE-GENERIC-FUNCTION', 'COMMON-LISP');
G_7 = lisp.intern('QUALIFIERS', 'KEYWORD');
G_8 = lisp.intern('SPECIALIZERS', 'KEYWORD');
G_9 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_10 = lisp.intern('EQL', 'COMMON-LISP');
G_11 = lisp.intern('T', 'COMMON-LISP');
G_12 = lisp.intern('BODY', 'KEYWORD');
G_13 = lisp.intern('BLOCK', 'COMMON-LISP');
G_14 = lisp.intern('FUNCTION', 'KEYWORD');
G_18 = lisp.intern('APPLY', 'COMMON-LISP');
G_19 = lisp.intern('ENSURE-METHOD', 'COMMON-LISP');
G_20 = lisp.intern('QUOTE', 'COMMON-LISP');
G_21 = lisp.intern('FUNCTIN', 'COMMON-LISP');
G_25 = lisp.intern('LIST', 'COMMON-LISP');
G_29 = lisp.intern('COMPILER-MACRO', 'COMMON-LISP');
G_33 = lisp.intern('SYMBOL', 'COMMON-LISP');
G_40 = lisp.intern('SETF', 'COMMON-LISP');
G_44 = lisp.intern('NEW-VALUE', 'COMMON-LISP');
G_66 = lisp.intern('DOCUMENTATIN', 'COMMON-LISP');
G_67 = lisp.intern('VARIABLE', 'COMMON-LISP');
G_68 = lisp.intern('DECLARE', 'COMMON-LISP');
G_69 = lisp.intern('IGNORE', 'COMMON-LISP');
G_70 = lisp.intern('GETF', 'COMMON-LISP');
G_71 = lisp.intern('GET', 'COMMON-LISP');
G_72 = lisp.intern('DOC-PLIST', 'COMMON-LISP');
G_82 = lisp.intern('%PUTF', 'COMMON-LISP');
G_84 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');lisp.callFunctionWithCallStack(G_6,G_2,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)));
TMP_15=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_17;
let TMP_16;
let L_G1__2;
let L_G0__1;
L_G0__1=arguments[0];
L_G1__2=arguments[1];
TMP_16=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__9;
let L_X__8;
L_X__8=arguments[0];
L_DOC_TYPE__9=arguments[1];
return lisp.values1(lisp.S_nil);
});
TMP_17=lisp.callFunctionWithCallStack(G_18,TMP_16,L_G0__1);
return TMP_17;
});
lisp.callFunctionWithCallStack(G_19,G_2,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)),G_7,lisp.S_nil,G_8,lisp.makeCons(G_9, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(G_11, lisp.S_nil)), lisp.S_nil)),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_15);
TMP_22=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_24;
let TMP_23;
let L_G6__12;
let L_G5__11;
L_G5__11=arguments[0];
L_G6__12=arguments[1];
TMP_23=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__19;
let L_X__18;
L_X__18=arguments[0];
L_DOC_TYPE__19=arguments[1];
return lisp.values1(lisp.S_nil);
});
TMP_24=lisp.callFunctionWithCallStack(G_18,TMP_23,L_G5__11);
return TMP_24;
});
lisp.callFunctionWithCallStack(G_19,G_2,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)),G_7,lisp.S_nil,G_8,lisp.makeCons(G_9, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_21, lisp.S_nil)), lisp.S_nil)), lisp.S_nil)),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_22);
TMP_26=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_28;
let TMP_27;
let L_G11__22;
let L_G10__21;
L_G10__21=arguments[0];
L_G11__22=arguments[1];
TMP_27=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__29;
let L_X__28;
L_X__28=arguments[0];
L_DOC_TYPE__29=arguments[1];
return lisp.values1(lisp.S_nil);
});
TMP_28=lisp.callFunctionWithCallStack(G_18,TMP_27,L_G10__21);
return TMP_28;
});
lisp.callFunctionWithCallStack(G_19,G_2,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)),G_7,lisp.S_nil,G_8,lisp.makeCons(G_25, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_9, lisp.S_nil)), lisp.S_nil)), lisp.S_nil)),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_26);
TMP_30=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_32;
let TMP_31;
let L_G16__32;
let L_G15__31;
L_G15__31=arguments[0];
L_G16__32=arguments[1];
TMP_31=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__39;
let L_X__38;
L_X__38=arguments[0];
L_DOC_TYPE__39=arguments[1];
return lisp.values1(lisp.S_nil);
});
TMP_32=lisp.callFunctionWithCallStack(G_18,TMP_31,L_G15__31);
return TMP_32;
});
lisp.callFunctionWithCallStack(G_19,G_2,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)),G_7,lisp.S_nil,G_8,lisp.makeCons(G_25, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_29, lisp.S_nil)), lisp.S_nil)), lisp.S_nil)),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_30);
TMP_34=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_36;
let TMP_35;
let L_G21__42;
let L_G20__41;
L_G20__41=arguments[0];
L_G21__42=arguments[1];
TMP_35=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__49;
let L_X__48;
L_X__48=arguments[0];
L_DOC_TYPE__49=arguments[1];
return lisp.values1(lisp.S_nil);
});
TMP_36=lisp.callFunctionWithCallStack(G_18,TMP_35,L_G20__41);
return TMP_36;
});
lisp.callFunctionWithCallStack(G_19,G_2,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)),G_7,lisp.S_nil,G_8,lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_9, lisp.S_nil)), lisp.S_nil)), lisp.S_nil)),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_34);
TMP_37=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_39;
let TMP_38;
let L_G26__52;
let L_G25__51;
L_G25__51=arguments[0];
L_G26__52=arguments[1];
TMP_38=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__59;
let L_X__58;
L_X__58=arguments[0];
L_DOC_TYPE__59=arguments[1];
return lisp.values1(lisp.S_nil);
});
TMP_39=lisp.callFunctionWithCallStack(G_18,TMP_38,L_G25__51);
return TMP_39;
});
lisp.callFunctionWithCallStack(G_19,G_2,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)),G_7,lisp.S_nil,G_8,lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_29, lisp.S_nil)), lisp.S_nil)), lisp.S_nil)),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_37);
TMP_41=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_43;
let TMP_42;
let L_G31__62;
let L_G30__61;
L_G30__61=arguments[0];
L_G31__62=arguments[1];
TMP_42=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__69;
let L_X__68;
L_X__68=arguments[0];
L_DOC_TYPE__69=arguments[1];
return lisp.values1(lisp.S_nil);
});
TMP_43=lisp.callFunctionWithCallStack(G_18,TMP_42,L_G30__61);
return TMP_43;
});
lisp.callFunctionWithCallStack(G_19,G_2,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)),G_7,lisp.S_nil,G_8,lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_40, lisp.S_nil)), lisp.S_nil)), lisp.S_nil)),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_41);
TMP_45=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_47;
let TMP_46;
let L_G36__72;
let L_G35__71;
L_G35__71=arguments[0];
L_G36__72=arguments[1];
TMP_46=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__80;
let L_X__79;
let L_NEW_VALUE__78;
L_NEW_VALUE__78=arguments[0];
L_X__79=arguments[1];
L_DOC_TYPE__80=arguments[2];
return lisp.values1(lisp.S_nil);
});
TMP_47=lisp.callFunctionWithCallStack(G_18,TMP_46,L_G35__71);
return TMP_47;
});
lisp.callFunctionWithCallStack(G_19,lisp.makeCons(G_40, lisp.makeCons(G_2, lisp.S_nil)),G_3,lisp.makeCons(G_44, lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil))),G_7,lisp.S_nil,G_8,lisp.makeCons(G_11, lisp.makeCons(G_9, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_11, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_45);
TMP_48=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_50;
let TMP_49;
let L_G41__83;
let L_G40__82;
L_G40__82=arguments[0];
L_G41__83=arguments[1];
TMP_49=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__91;
let L_X__90;
let L_NEW_VALUE__89;
L_NEW_VALUE__89=arguments[0];
L_X__90=arguments[1];
L_DOC_TYPE__91=arguments[2];
return lisp.values1(lisp.S_nil);
});
TMP_50=lisp.callFunctionWithCallStack(G_18,TMP_49,L_G40__82);
return TMP_50;
});
lisp.callFunctionWithCallStack(G_19,lisp.makeCons(G_40, lisp.makeCons(G_2, lisp.S_nil)),G_3,lisp.makeCons(G_44, lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil))),G_7,lisp.S_nil,G_8,lisp.makeCons(G_11, lisp.makeCons(G_9, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_9, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_48);
TMP_51=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_53;
let TMP_52;
let L_G46__94;
let L_G45__93;
L_G45__93=arguments[0];
L_G46__94=arguments[1];
TMP_52=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__102;
let L_X__101;
let L_NEW_VALUE__100;
L_NEW_VALUE__100=arguments[0];
L_X__101=arguments[1];
L_DOC_TYPE__102=arguments[2];
return lisp.values1(lisp.S_nil);
});
TMP_53=lisp.callFunctionWithCallStack(G_18,TMP_52,L_G45__93);
return TMP_53;
});
lisp.callFunctionWithCallStack(G_19,lisp.makeCons(G_40, lisp.makeCons(G_2, lisp.S_nil)),G_3,lisp.makeCons(G_44, lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil))),G_7,lisp.S_nil,G_8,lisp.makeCons(G_11, lisp.makeCons(G_25, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_9, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_51);
TMP_54=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_56;
let TMP_55;
let L_G51__105;
let L_G50__104;
L_G50__104=arguments[0];
L_G51__105=arguments[1];
TMP_55=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__113;
let L_X__112;
let L_NEW_VALUE__111;
L_NEW_VALUE__111=arguments[0];
L_X__112=arguments[1];
L_DOC_TYPE__113=arguments[2];
return lisp.values1(lisp.S_nil);
});
TMP_56=lisp.callFunctionWithCallStack(G_18,TMP_55,L_G50__104);
return TMP_56;
});
lisp.callFunctionWithCallStack(G_19,lisp.makeCons(G_40, lisp.makeCons(G_2, lisp.S_nil)),G_3,lisp.makeCons(G_44, lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil))),G_7,lisp.S_nil,G_8,lisp.makeCons(G_11, lisp.makeCons(G_25, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_29, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_54);
TMP_57=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_59;
let TMP_58;
let L_G56__116;
let L_G55__115;
L_G55__115=arguments[0];
L_G56__116=arguments[1];
TMP_58=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__124;
let L_X__123;
let L_NEW_VALUE__122;
L_NEW_VALUE__122=arguments[0];
L_X__123=arguments[1];
L_DOC_TYPE__124=arguments[2];
return lisp.values1(lisp.S_nil);
});
TMP_59=lisp.callFunctionWithCallStack(G_18,TMP_58,L_G55__115);
return TMP_59;
});
lisp.callFunctionWithCallStack(G_19,lisp.makeCons(G_40, lisp.makeCons(G_2, lisp.S_nil)),G_3,lisp.makeCons(G_44, lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil))),G_7,lisp.S_nil,G_8,lisp.makeCons(G_11, lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_9, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_57);
TMP_60=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_62;
let TMP_61;
let L_G61__127;
let L_G60__126;
L_G60__126=arguments[0];
L_G61__127=arguments[1];
TMP_61=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__135;
let L_X__134;
let L_NEW_VALUE__133;
L_NEW_VALUE__133=arguments[0];
L_X__134=arguments[1];
L_DOC_TYPE__135=arguments[2];
return lisp.values1(lisp.S_nil);
});
TMP_62=lisp.callFunctionWithCallStack(G_18,TMP_61,L_G60__126);
return TMP_62;
});
lisp.callFunctionWithCallStack(G_19,lisp.makeCons(G_40, lisp.makeCons(G_2, lisp.S_nil)),G_3,lisp.makeCons(G_44, lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil))),G_7,lisp.S_nil,G_8,lisp.makeCons(G_11, lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_29, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_60);
TMP_63=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_65;
let TMP_64;
let L_G66__138;
let L_G65__137;
L_G65__137=arguments[0];
L_G66__138=arguments[1];
TMP_64=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_DOC_TYPE__146;
let L_X__145;
let L_NEW_VALUE__144;
L_NEW_VALUE__144=arguments[0];
L_X__145=arguments[1];
L_DOC_TYPE__146=arguments[2];
return lisp.values1(lisp.S_nil);
});
TMP_65=lisp.callFunctionWithCallStack(G_18,TMP_64,L_G65__137);
return TMP_65;
});
lisp.callFunctionWithCallStack(G_19,lisp.makeCons(G_40, lisp.makeCons(G_2, lisp.S_nil)),G_3,lisp.makeCons(G_44, lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil))),G_7,lisp.S_nil,G_8,lisp.makeCons(G_11, lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_40, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))),G_12,lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.S_nil)), lisp.S_nil),G_14,TMP_63);
TMP_73=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_77;
let TMP_74;
let L_G71__149;
let L_G70__148;
L_G70__148=arguments[0];
L_G71__149=arguments[1];
TMP_74=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_76;
let TMP_75;
let L_DOC_TYPE__156;
let L_X__155;
L_X__155=arguments[0];
L_DOC_TYPE__156=arguments[1];
TMP_75=lisp.callFunctionWithCallStack(G_71,L_X__155,G_72);
TMP_76=lisp.callFunctionWithCallStack(G_70,TMP_75,G_67);
return TMP_76;
});
TMP_77=lisp.callFunctionWithCallStack(G_18,TMP_74,L_G70__148);
return TMP_77;
});
lisp.callFunctionWithCallStack(G_19,G_66,G_3,lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil)),G_7,lisp.S_nil,G_8,lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_67, lisp.S_nil)), lisp.S_nil)), lisp.S_nil)),G_12,lisp.makeCons(lisp.makeCons(G_68, lisp.makeCons(lisp.makeCons(G_69, lisp.makeCons(G_5, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_66, lisp.makeCons(lisp.makeCons(G_70, lisp.makeCons(lisp.makeCons(G_71, lisp.makeCons(G_4, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_72, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_67, lisp.S_nil)), lisp.S_nil))), lisp.S_nil))), lisp.S_nil)),G_14,TMP_73);
TMP_78=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_83;
let TMP_79;
let L_G76__159;
let L_G75__158;
L_G75__158=arguments[0];
L_G76__159=arguments[1];
TMP_79=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G83__174;
let L_G82__173;
let TMP_81;
let TMP_80;
let L_G85__172;
let L_G80__169;
let L_DOC_TYPE__167;
let L_X__166;
let L_NEW_VALUE__165;
L_NEW_VALUE__165=arguments[0];
L_X__166=arguments[1];
L_DOC_TYPE__167=arguments[2];
{
L_G80__169=lisp.values1(L_X__166);
L_G85__172=lisp.values1(L_NEW_VALUE__165);
{
TMP_80=lisp.callFunctionWithCallStack(G_71,L_G80__169,G_72);
TMP_81=lisp.callFunctionWithCallStack(G_82,TMP_80,L_G85__172,G_67);
L_G82__173=lisp.values1(TMP_81);
{
L_G83__174=lisp.values1(L_G82__173);
lisp.CL_put(L_G80__169,G_72,L_G83__174);
}
}
}
return lisp.values1(L_G85__172);
});
TMP_83=lisp.callFunctionWithCallStack(G_18,TMP_79,L_G75__158);
return TMP_83;
});
lisp.callFunctionWithCallStack(G_19,lisp.makeCons(G_40, lisp.makeCons(G_2, lisp.S_nil)),G_3,lisp.makeCons(G_44, lisp.makeCons(G_4, lisp.makeCons(G_5, lisp.S_nil))),G_7,lisp.S_nil,G_8,lisp.makeCons(G_11, lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_10, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_67, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))),G_12,lisp.makeCons(lisp.makeCons(G_68, lisp.makeCons(lisp.makeCons(G_69, lisp.makeCons(G_5, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_13, lisp.makeCons(G_2, lisp.makeCons(lisp.makeCons(G_40, lisp.makeCons(lisp.makeCons(G_70, lisp.makeCons(lisp.makeCons(G_71, lisp.makeCons(G_4, lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_72, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_20, lisp.makeCons(G_67, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(G_44, lisp.S_nil))), lisp.S_nil))), lisp.S_nil)),G_14,TMP_78);
}catch(TMP_1){G_84.func();
console.log(TMP_1.message);
}


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_5;
let G_6;
let G_7;
let G_8;
let G_9;
let G_10;
let G_11;
let G_12;
let G_13;
let G_14;
let G_16;
let G_17;
let G_18;
let G_20;
let G_22;
let G_24;
let G_25;
let G_27;
let G_29;
let G_30;
let G_35;
let G_37;
let G_38;
let G_40;
let G_44;
let G_48;
let G_50;
let G_51;
let G_54;
let G_56;
let G_59;
let G_62;
let G_63;
let G_66;
let G_68;
let G_71;
let G_72;
let G_75;
let G_76;
let G_81;
let G_84;
let G_102;
let G_105;
let G_106;
let G_109;
let G_110;
let G_112;
let G_117;
let G_120;
let G_135;
let G_138;
let G_157;
let G_160;
let G_161;
let G_164;
let G_165;
let G_170;
let G_173;
let G_191;
let G_194;
let G_195;
let G_198;
let G_203;
let G_206;
let G_223;
let G_224;
let G_225;
let G_226;
let G_227;
let G_228;
let G_230;
let G_231;
let G_234;
let G_236;
let G_238;
let G_243;
let G_244;
let G_246;
let G_248;
let G_257;
let G_259;
let G_261;
let G_263;
let G_266;
let G_268;
let G_270;
let G_275;
let G_282;
let G_285;
let G_289;
let G_293;
let G_296;
let G_299;
let G_301;
let G_304;
let G_308;
let G_317;
let G_319;
let G_320;
let G_322;
let G_326;
let G_332;
let G_338;
let G_345;
let G_349;
let G_363;
let G_380;
let G_381;
let G_390;
let G_395;
let G_407;
let G_414;
let G_421;
let G_427;
let G_438;
let G_451;
let G_457;
let G_458;
let G_459;
let G_462;
let G_466;
let G_469;
let G_475;
let G_476;
let G_477;
let G_478;
let G_479;
let G_501;
let G_502;
let G_504;
let G_505;
let G_507;
let G_510;
let G_511;
let G_517;
let G_519;
let G_525;
let G_527;
let G_538;
let G_545;
let G_548;
let G_553;
let G_555;
let G_568;
let G_573;
let G_586;
let G_596;
let G_600;
let G_611;
let G_613;
let G_619;
let G_622;
let G_623;
let G_626;
let G_627;
let G_636;
let G_639;
let G_640;
let G_644;
let G_645;
let G_646;
let G_647;
let G_648;
let G_658;
let G_696;
let G_697;
let G_701;
let G_702;
let G_711;
let G_714;
let G_715;
let G_719;
let G_723;
let G_729;
let G_735;
let G_737;
let G_739;
let G_753;
let G_755;
let G_759;
let G_766;
let G_773;
let G_780;
let G_784;
let G_785;
let G_789;
let G_794;
let G_797;
let G_800;
let G_801;
let G_806;
let G_808;
let G_811;
let G_813;
let G_821;
let G_822;
let G_826;
let G_827;
let G_828;
let G_832;
let G_837;
let G_840;
let G_844;
let G_846;
let G_850;
let G_857;
let G_862;
let G_876;
let G_890;
let G_891;
let G_892;
let G_896;
let G_897;
let G_901;
let G_902;
let G_906;
let G_907;
let G_911;
let G_912;
let G_916;
let G_917;
let G_920;
let G_922;
let G_923;
let G_926;
let G_929;
let G_937;
let G_942;
let G_953;
let G_958;
let G_964;
let G_966;
let G_967;
let G_973;
let G_987;
let G_988;
let G_993;
let G_996;
let G_999;
let G_1009;
let G_1012;
let G_1018;
let G_1024;
let G_1028;
let G_1036;
let G_1054;
let G_1057;
let G_1062;
let G_1068;
let G_1075;
let G_1078;
let G_1106;
let G_1108;
let G_1110;
let G_1112;
let G_1151;
let G_1155;
let G_1176;
let G_1179;
let G_1191;
let G_1192;
let G_1193;
let G_1196;
let G_1199;
let G_1200;
let G_1201;
let G_1202;
let G_1203;
let G_1217;
let G_1232;
let G_1233;
let G_1245;
let G_1252;
let G_1265;
let G_1283;
let G_1327;
let G_1359;
let G_1376;
let G_1407;
let G_1409;
let G_1410;
let G_1413;
let G_1421;
let G_1440;
let G_1443;
let G_1448;
let G_1470;
let G_1478;
let CL_VALTAN_CORESLASHLOOP_EXPAND_LOOP;
let CL_VALTAN_CORESLASHLOOP_EXPAND_COMPLEX_LOOP;
let CL_VALTAN_CORESLASHLOOP_EXPAND_LOOP_DESTRUCTURING_BIND;
let CL_VALTAN_CORESLASHLOOP_PARSE_LOOP;
let CL_VALTAN_CORESLASHLOOP_PARSE_NAME_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_MAIN_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_TERMINATION_TEST_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_CLAUSE_1;
let CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_THEN_ELSE_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_SELECTABLE_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_ACCUMULATION_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_MAXMIN_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_COUNT_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_COLLECT_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_INTO_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_UNCONDITIONAL_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_RETURN_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_FORM_OR_IT;
let CL_VALTAN_CORESLASHLOOP_PARSE_DOING_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_VARIABLE_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_INITIAL_FINAL_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_CLAUSE_1;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_HASH_OR_PACKAGE;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_HASH;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ACROSS;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ON_LIST;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_IN_LIST;
let CL_VALTAN_CORESLASHLOOP_PARSE_BY_FORM;
let CL_VALTAN_CORESLASHLOOP_FUNCTION_FORM_P;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_BY_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_EQUALS_THEN;
let CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ARITHMETIC;
let CL_VALTAN_CORESLASHLOOP_PARSE_WITH_CLAUSE;
let CL_VALTAN_CORESLASHLOOP_MAP_D_VAR_D_TYPE_SPEC;
let CL_VALTAN_CORESLASHLOOP_GEN_D_VAR_BINDINGS;
let CL_VALTAN_CORESLASHLOOP_PARSE_COMPOUND_FORMS;
let CL_VALTAN_CORESLASHLOOP_IT;
let CL_VALTAN_CORESLASHLOOP_PARSE_TYPE_SPEC;
let CL_VALTAN_CORESLASHLOOP_PARSE_D_TYPE_SPEC;
let CL_VALTAN_CORESLASHLOOP_ADD_FINALLY_FORMS;
let CL_VALTAN_CORESLASHLOOP_ADD_FINALLY_FORM;
let CL_VALTAN_CORESLASHLOOP_ADD_INITIALLY_FORMS;
let CL_VALTAN_CORESLASHLOOP_ADD_INITIALLY_FORM;
let CL_VALTAN_CORESLASHLOOP_ADD_AFTER_UPDATE_FORM;
let CL_VALTAN_CORESLASHLOOP_ADD_BEFORE_UPDATE_FORM;
let CL_VALTAN_CORESLASHLOOP_ADD_LOOP_TEST_FORM;
let CL_VALTAN_CORESLASHLOOP_CHECK_SIMPLE_VAR;
let CL_VALTAN_CORESLASHLOOP_END_OF_LOOP_P;
let CL_VALTAN_CORESLASHLOOP_LOOKAHEAD;
let CL_VALTAN_CORESLASHLOOP_NEXT_EXP;
let CL_VALTAN_CORESLASHLOOP_TO_KEYWORD;
let CL_VALTAN_CORESLASHLOOP_ENSURE_KEYWORD;
let CL_VALTAN_CORESLASHLOOP_LOOP_ERROR;
let CL_VALTAN_CORESLASHLOOP_MAXMIN_COLLECTOR_VAR;
let CL_VALTAN_CORESLASHLOOP_MAKE_MAXMIN_COLLECTOR;
let CL_VALTAN_CORESLASHLOOP_MAXMIN_COLLECTOR_P;
let CL_VALTAN_CORESLASHLOOP_COPY_MAXMIN_COLLECTOR;
let CL_VALTAN_CORESLASHLOOP_SUM_COUNTER_VAR;
let CL_VALTAN_CORESLASHLOOP_MAKE_SUM_COUNTER;
let CL_VALTAN_CORESLASHLOOP_SUM_COUNTER_P;
let CL_VALTAN_CORESLASHLOOP_COPY_SUM_COUNTER;
let CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_TAIL;
let CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_HEAD;
let CL_VALTAN_CORESLASHLOOP_MAKE_LIST_COLLECTOR;
let CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_P;
let CL_VALTAN_CORESLASHLOOP_COPY_LIST_COLLECTOR;
let CL_VALTAN_CORESLASHLOOP_DESTRUCTURING_BINDINGS_PAIR;
let CL_VALTAN_CORESLASHLOOP_MAKE_DESTRUCTURING_BINDINGS;
let CL_VALTAN_CORESLASHLOOP_DESTRUCTURING_BINDINGS_P;
let CL_VALTAN_CORESLASHLOOP_COPY_DESTRUCTURING_BINDINGS;
let CL_VALTAN_CORESLASHLOOP_LET_BINDINGS_PAIRS;
let CL_VALTAN_CORESLASHLOOP_MAKE_LET_BINDINGS;
let CL_VALTAN_CORESLASHLOOP_LET_BINDINGS_P;
let CL_VALTAN_CORESLASHLOOP_COPY_LET_BINDINGS;
let TMP_1473;
let TMP_1466;
let TMP_1455;
let TMP_1417;
let TMP_1372;
let TMP_1345;
let TMP_1323;
let TMP_1301;
let TMP_1279;
let TMP_1228;
let TMP_1194;
let TMP_1069;
let TMP_1063;
let L_G67__145;
let L_G66__144;
let TMP_220;
let TMP_219;
let TMP_210;
let TMP_207;
let L_G55__119;
let L_G54__118;
let TMP_187;
let TMP_186;
let TMP_177;
let TMP_174;
let L_G43__93;
let L_G42__92;
let TMP_152;
let TMP_151;
let TMP_142;
let TMP_139;
let TMP_133;
let TMP_124;
let TMP_121;
let L_G23__52;
let L_G22__51;
let TMP_98;
let TMP_97;
let TMP_88;
let TMP_85;
let L_G11__26;
let L_G10__25;
let TMP_61;
let TMP_60;
let TMP_45;
let TMP_41;
let TMP_15;
// toplevel defun
lisp.defpackage('VALTAN-CORE/LOOP', {exportNames: [], usePackageNames: ['CL'], nicknames: []});
let F_COPY_LET_BINDINGS_19;
F_COPY_LET_BINDINGS_19=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_20, arguments.length);
}
let TMP_21;
let L_X__1;
L_X__1=arguments[0];
TMP_21=lisp.callFunctionWithCallStack(G_22,L_X__1);
return TMP_21;
});
CL_VALTAN_CORESLASHLOOP_COPY_LET_BINDINGS=lisp.values1(F_COPY_LET_BINDINGS_19);
let F_LET_BINDINGS_P_23;
F_LET_BINDINGS_P_23=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_24, arguments.length);
}
let TMP_26;
let L_X__3;
L_X__3=arguments[0];
TMP_26=lisp.callFunctionWithCallStack(G_27,L_X__3,G_25);
return TMP_26;
});
CL_VALTAN_CORESLASHLOOP_LET_BINDINGS_P=lisp.values1(F_LET_BINDINGS_P_23);
let F_MAKE_LET_BINDINGS_28;
F_MAKE_LET_BINDINGS_28=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_29, arguments.length);
}
let TMP_33;
let L_PAIRS__5;
let supplied_PAIRS__5;
for (let TMP_31 = 0; TMP_31 < arguments.length; TMP_31 += 2) {
if(arguments[TMP_31] === G_30){
supplied_PAIRS__5=arguments[TMP_31+1];
break;
}
}
L_PAIRS__5=supplied_PAIRS__5 !== undefined ? supplied_PAIRS__5 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_32 = 0; TMP_32 < arguments.length; TMP_32 += 2) {
if(arguments[TMP_32]!==G_30) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_32].name); }
}
TMP_33=lisp.CL_makeStructure(G_25,L_PAIRS__5);
return TMP_33;
});
CL_VALTAN_CORESLASHLOOP_MAKE_LET_BINDINGS=lisp.values1(F_MAKE_LET_BINDINGS_28);
let F_LET_BINDINGS_PAIRS_34;
F_LET_BINDINGS_PAIRS_34=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_35, arguments.length);
}
let TMP_39;
let TMP_36;
let L_STRUCTURE__7;
L_STRUCTURE__7=arguments[0];
TMP_36=lisp.CL_structurep(L_STRUCTURE__7);
if(lisp.values1(TMP_36) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__7,G_37);
}
TMP_39=lisp.CL_structureRef(L_STRUCTURE__7,0);
return TMP_39;
});
CL_VALTAN_CORESLASHLOOP_LET_BINDINGS_PAIRS=lisp.values1(F_LET_BINDINGS_PAIRS_34);
let F_COPY_DESTRUCTURING_BINDINGS_67;
F_COPY_DESTRUCTURING_BINDINGS_67=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_68, arguments.length);
}
let TMP_69;
let L_X__27;
L_X__27=arguments[0];
TMP_69=lisp.callFunctionWithCallStack(G_22,L_X__27);
return TMP_69;
});
CL_VALTAN_CORESLASHLOOP_COPY_DESTRUCTURING_BINDINGS=lisp.values1(F_COPY_DESTRUCTURING_BINDINGS_67);
let F_DESTRUCTURING_BINDINGS_P_70;
F_DESTRUCTURING_BINDINGS_P_70=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_71, arguments.length);
}
let TMP_73;
let L_X__29;
L_X__29=arguments[0];
TMP_73=lisp.callFunctionWithCallStack(G_27,L_X__29,G_72);
return TMP_73;
});
CL_VALTAN_CORESLASHLOOP_DESTRUCTURING_BINDINGS_P=lisp.values1(F_DESTRUCTURING_BINDINGS_P_70);
let F_MAKE_DESTRUCTURING_BINDINGS_74;
F_MAKE_DESTRUCTURING_BINDINGS_74=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_75, arguments.length);
}
let TMP_79;
let L_PAIR__31;
let supplied_PAIR__31;
for (let TMP_77 = 0; TMP_77 < arguments.length; TMP_77 += 2) {
if(arguments[TMP_77] === G_76){
supplied_PAIR__31=arguments[TMP_77+1];
break;
}
}
L_PAIR__31=supplied_PAIR__31 !== undefined ? supplied_PAIR__31 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_78 = 0; TMP_78 < arguments.length; TMP_78 += 2) {
if(arguments[TMP_78]!==G_76) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_78].name); }
}
TMP_79=lisp.CL_makeStructure(G_72,L_PAIR__31);
return TMP_79;
});
CL_VALTAN_CORESLASHLOOP_MAKE_DESTRUCTURING_BINDINGS=lisp.values1(F_MAKE_DESTRUCTURING_BINDINGS_74);
let F_DESTRUCTURING_BINDINGS_PAIR_80;
F_DESTRUCTURING_BINDINGS_PAIR_80=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_81, arguments.length);
}
let TMP_83;
let TMP_82;
let L_STRUCTURE__33;
L_STRUCTURE__33=arguments[0];
TMP_82=lisp.CL_structurep(L_STRUCTURE__33);
if(lisp.values1(TMP_82) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__33,G_37);
}
TMP_83=lisp.CL_structureRef(L_STRUCTURE__33,0);
return TMP_83;
});
CL_VALTAN_CORESLASHLOOP_DESTRUCTURING_BINDINGS_PAIR=lisp.values1(F_DESTRUCTURING_BINDINGS_PAIR_80);
let F_COPY_LIST_COLLECTOR_101;
F_COPY_LIST_COLLECTOR_101=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_102, arguments.length);
}
let TMP_103;
let L_X__53;
L_X__53=arguments[0];
TMP_103=lisp.callFunctionWithCallStack(G_22,L_X__53);
return TMP_103;
});
CL_VALTAN_CORESLASHLOOP_COPY_LIST_COLLECTOR=lisp.values1(F_COPY_LIST_COLLECTOR_101);
let F_LIST_COLLECTOR_P_104;
F_LIST_COLLECTOR_P_104=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_105, arguments.length);
}
let TMP_107;
let L_X__55;
L_X__55=arguments[0];
TMP_107=lisp.callFunctionWithCallStack(G_27,L_X__55,G_106);
return TMP_107;
});
CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_P=lisp.values1(F_LIST_COLLECTOR_P_104);
let F_MAKE_LIST_COLLECTOR_108;
F_MAKE_LIST_COLLECTOR_108=(function(){
if(arguments.length < 0 || 4 < arguments.length) {
lisp.argumentsError(G_109, arguments.length);
}
let TMP_115;
let L_TAIL__58;
let L_HEAD__57;
let supplied_HEAD__57;
for (let TMP_111 = 0; TMP_111 < arguments.length; TMP_111 += 2) {
if(arguments[TMP_111] === G_110){
supplied_HEAD__57=arguments[TMP_111+1];
break;
}
}
L_HEAD__57=supplied_HEAD__57 !== undefined ? supplied_HEAD__57 : (lisp.values1(lisp.S_nil));
let supplied_TAIL__58;
for (let TMP_113 = 0; TMP_113 < arguments.length; TMP_113 += 2) {
if(arguments[TMP_113] === G_112){
supplied_TAIL__58=arguments[TMP_113+1];
break;
}
}
L_TAIL__58=supplied_TAIL__58 !== undefined ? supplied_TAIL__58 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_114 = 0; TMP_114 < arguments.length; TMP_114 += 2) {
if(arguments[TMP_114]!==G_112 && arguments[TMP_114]!==G_110) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_114].name); }
}
TMP_115=lisp.CL_makeStructure(G_106,L_HEAD__57,L_TAIL__58);
return TMP_115;
});
CL_VALTAN_CORESLASHLOOP_MAKE_LIST_COLLECTOR=lisp.values1(F_MAKE_LIST_COLLECTOR_108);
let F_LIST_COLLECTOR_HEAD_116;
F_LIST_COLLECTOR_HEAD_116=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_117, arguments.length);
}
let TMP_119;
let TMP_118;
let L_STRUCTURE__60;
L_STRUCTURE__60=arguments[0];
TMP_118=lisp.CL_structurep(L_STRUCTURE__60);
if(lisp.values1(TMP_118) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__60,G_37);
}
TMP_119=lisp.CL_structureRef(L_STRUCTURE__60,0);
return TMP_119;
});
CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_HEAD=lisp.values1(F_LIST_COLLECTOR_HEAD_116);
let F_LIST_COLLECTOR_TAIL_134;
F_LIST_COLLECTOR_TAIL_134=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_135, arguments.length);
}
let TMP_137;
let TMP_136;
let L_STRUCTURE__74;
L_STRUCTURE__74=arguments[0];
TMP_136=lisp.CL_structurep(L_STRUCTURE__74);
if(lisp.values1(TMP_136) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__74,G_37);
}
TMP_137=lisp.CL_structureRef(L_STRUCTURE__74,1);
return TMP_137;
});
CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_TAIL=lisp.values1(F_LIST_COLLECTOR_TAIL_134);
let F_COPY_SUM_COUNTER_156;
F_COPY_SUM_COUNTER_156=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_157, arguments.length);
}
let TMP_158;
let L_X__94;
L_X__94=arguments[0];
TMP_158=lisp.callFunctionWithCallStack(G_22,L_X__94);
return TMP_158;
});
CL_VALTAN_CORESLASHLOOP_COPY_SUM_COUNTER=lisp.values1(F_COPY_SUM_COUNTER_156);
let F_SUM_COUNTER_P_159;
F_SUM_COUNTER_P_159=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_160, arguments.length);
}
let TMP_162;
let L_X__96;
L_X__96=arguments[0];
TMP_162=lisp.callFunctionWithCallStack(G_27,L_X__96,G_161);
return TMP_162;
});
CL_VALTAN_CORESLASHLOOP_SUM_COUNTER_P=lisp.values1(F_SUM_COUNTER_P_159);
let F_MAKE_SUM_COUNTER_163;
F_MAKE_SUM_COUNTER_163=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_164, arguments.length);
}
let TMP_168;
let L_VAR__98;
let supplied_VAR__98;
for (let TMP_166 = 0; TMP_166 < arguments.length; TMP_166 += 2) {
if(arguments[TMP_166] === G_165){
supplied_VAR__98=arguments[TMP_166+1];
break;
}
}
L_VAR__98=supplied_VAR__98 !== undefined ? supplied_VAR__98 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_167 = 0; TMP_167 < arguments.length; TMP_167 += 2) {
if(arguments[TMP_167]!==G_165) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_167].name); }
}
TMP_168=lisp.CL_makeStructure(G_161,L_VAR__98);
return TMP_168;
});
CL_VALTAN_CORESLASHLOOP_MAKE_SUM_COUNTER=lisp.values1(F_MAKE_SUM_COUNTER_163);
let F_SUM_COUNTER_VAR_169;
F_SUM_COUNTER_VAR_169=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_170, arguments.length);
}
let TMP_172;
let TMP_171;
let L_STRUCTURE__100;
L_STRUCTURE__100=arguments[0];
TMP_171=lisp.CL_structurep(L_STRUCTURE__100);
if(lisp.values1(TMP_171) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__100,G_37);
}
TMP_172=lisp.CL_structureRef(L_STRUCTURE__100,0);
return TMP_172;
});
CL_VALTAN_CORESLASHLOOP_SUM_COUNTER_VAR=lisp.values1(F_SUM_COUNTER_VAR_169);
let F_COPY_MAXMIN_COLLECTOR_190;
F_COPY_MAXMIN_COLLECTOR_190=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_191, arguments.length);
}
let TMP_192;
let L_X__120;
L_X__120=arguments[0];
TMP_192=lisp.callFunctionWithCallStack(G_22,L_X__120);
return TMP_192;
});
CL_VALTAN_CORESLASHLOOP_COPY_MAXMIN_COLLECTOR=lisp.values1(F_COPY_MAXMIN_COLLECTOR_190);
let F_MAXMIN_COLLECTOR_P_193;
F_MAXMIN_COLLECTOR_P_193=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_194, arguments.length);
}
let TMP_196;
let L_X__122;
L_X__122=arguments[0];
TMP_196=lisp.callFunctionWithCallStack(G_27,L_X__122,G_195);
return TMP_196;
});
CL_VALTAN_CORESLASHLOOP_MAXMIN_COLLECTOR_P=lisp.values1(F_MAXMIN_COLLECTOR_P_193);
let F_MAKE_MAXMIN_COLLECTOR_197;
F_MAKE_MAXMIN_COLLECTOR_197=(function(){
if(arguments.length < 0 || 2 < arguments.length) {
lisp.argumentsError(G_198, arguments.length);
}
let TMP_201;
let L_VAR__124;
let supplied_VAR__124;
for (let TMP_199 = 0; TMP_199 < arguments.length; TMP_199 += 2) {
if(arguments[TMP_199] === G_165){
supplied_VAR__124=arguments[TMP_199+1];
break;
}
}
L_VAR__124=supplied_VAR__124 !== undefined ? supplied_VAR__124 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_200 = 0; TMP_200 < arguments.length; TMP_200 += 2) {
if(arguments[TMP_200]!==G_165) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_200].name); }
}
TMP_201=lisp.CL_makeStructure(G_195,L_VAR__124);
return TMP_201;
});
CL_VALTAN_CORESLASHLOOP_MAKE_MAXMIN_COLLECTOR=lisp.values1(F_MAKE_MAXMIN_COLLECTOR_197);
let F_MAXMIN_COLLECTOR_VAR_202;
F_MAXMIN_COLLECTOR_VAR_202=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_203, arguments.length);
}
let TMP_205;
let TMP_204;
let L_STRUCTURE__126;
L_STRUCTURE__126=arguments[0];
TMP_204=lisp.CL_structurep(L_STRUCTURE__126);
if(lisp.values1(TMP_204) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__126,G_37);
}
TMP_205=lisp.CL_structureRef(L_STRUCTURE__126,0);
return TMP_205;
});
CL_VALTAN_CORESLASHLOOP_MAXMIN_COLLECTOR_VAR=lisp.values1(F_MAXMIN_COLLECTOR_VAR_202);
let F_LOOP_ERROR_229;
F_LOOP_ERROR_229=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_230, arguments.length);
}
let TMP_233;
let TMP_232;
let L_ARGS__147;
let L_MSG__146;
L_MSG__146=arguments[0];
L_ARGS__147=lisp.jsArrayToList(arguments, 1);
TMP_232=lisp.CL_symbolFunction(G_231);
TMP_233=lisp.callFunctionWithCallStack(G_234,TMP_232,L_MSG__146,L_ARGS__147);
return TMP_233;
});
CL_VALTAN_CORESLASHLOOP_LOOP_ERROR=lisp.values1(F_LOOP_ERROR_229);
let F_ENSURE_KEYWORD_235;
F_ENSURE_KEYWORD_235=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_236, arguments.length);
}
let TMP_245;
let TMP_242;
let TMP_241;
let L_G75__152;
let TMP_240;
let TMP_239;
let L_G74__151;
let TMP_237;
let L_X__149;
L_X__149=arguments[0];
{
TMP_237=lisp.callFunctionWithCallStack(G_238,L_X__149);
L_G74__151=lisp.values1(TMP_237);
if(lisp.values1(L_G74__151) !== lisp.S_nil){
TMP_239=lisp.values1(L_X__149);
}else{
{
TMP_240=lisp.CL_symbolp(L_X__149);
L_G75__152=lisp.values1(TMP_240);
if(lisp.values1(L_G75__152) !== lisp.S_nil){
TMP_242=lisp.callFunctionWithCallStack(G_243,L_X__149);
TMP_245=lisp.callFunctionWithCallStack(G_246,TMP_242,G_244);
TMP_241=TMP_245;
}else{
TMP_241=lisp.values1(L_X__149);
}
}
TMP_239=TMP_241;
}
}
return TMP_239;
});
CL_VALTAN_CORESLASHLOOP_ENSURE_KEYWORD=lisp.values1(F_ENSURE_KEYWORD_235);
let F_TO_KEYWORD_247;
F_TO_KEYWORD_247=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_248, arguments.length);
}
let TMP_255;
let TMP_254;
let TMP_253;
let TMP_252;
let L_G78__157;
let TMP_251;
let TMP_250;
let L_G77__156;
let TMP_249;
let L_X__154;
L_X__154=arguments[0];
{
TMP_249=lisp.callFunctionWithCallStack(G_238,L_X__154);
L_G77__156=lisp.values1(TMP_249);
if(lisp.values1(L_G77__156) !== lisp.S_nil){
TMP_250=lisp.values1(L_X__154);
}else{
{
TMP_251=lisp.CL_symbolp(L_X__154);
L_G78__157=lisp.values1(TMP_251);
if(lisp.values1(L_G78__157) !== lisp.S_nil){
TMP_253=lisp.callFunctionWithCallStack(G_243,L_X__154);
TMP_254=lisp.callFunctionWithCallStack(G_246,TMP_253,G_244);
TMP_252=TMP_254;
}else{
TMP_255=G_230.func(G_51.func(lisp.codeArrayToString([117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 58, 32, 126, 83])),L_X__154);
TMP_252=TMP_255;
}
}
TMP_250=TMP_252;
}
}
return TMP_250;
});
CL_VALTAN_CORESLASHLOOP_TO_KEYWORD=lisp.values1(F_TO_KEYWORD_247);
let F_NEXT_EXP_256;
F_NEXT_EXP_256=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_257, arguments.length);
}
let L_G81__161;
let TMP_260;
let L_G80__160;
let TMP_258;
{
TMP_258=lisp.callFunctionWithCallStack(G_259,lisp.symbolValue(G_2));
L_G80__160=lisp.values1(TMP_258);
{
TMP_260=lisp.callFunctionWithCallStack(G_261,lisp.symbolValue(G_2));
L_G81__161=lisp.values1(TMP_260);
lisp.setSymbolValue(G_2, lisp.values1(L_G80__160));
}
}
return lisp.values1(L_G81__161);
});
CL_VALTAN_CORESLASHLOOP_NEXT_EXP=lisp.values1(F_NEXT_EXP_256);
let F_LOOKAHEAD_262;
F_LOOKAHEAD_262=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_263, arguments.length);
}
let TMP_264;
TMP_264=lisp.callFunctionWithCallStack(G_261,lisp.symbolValue(G_2));
return TMP_264;
});
CL_VALTAN_CORESLASHLOOP_LOOKAHEAD=lisp.values1(F_LOOKAHEAD_262);
let F_END_OF_LOOP_P_265;
F_END_OF_LOOP_P_265=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_266, arguments.length);
}
let TMP_267;
TMP_267=lisp.callFunctionWithCallStack(G_268,lisp.symbolValue(G_2));
return TMP_267;
});
CL_VALTAN_CORESLASHLOOP_END_OF_LOOP_P=lisp.values1(F_END_OF_LOOP_P_265);
let F_CHECK_SIMPLE_VAR_269;
F_CHECK_SIMPLE_VAR_269=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_270, arguments.length);
}
let TMP_280;
let TMP_279;
let TMP_278;
let TMP_277;
let TMP_276;
let TMP_274;
let TMP_273;
let TMP_272;
let TMP_271;
let L_X__164;
L_X__164=arguments[0];
TMP_271=lisp.CL_symbolp(L_X__164);
if(lisp.values1(TMP_271) !== lisp.S_nil){
TMP_273=lisp.callFunctionWithCallStack(G_238,L_X__164);
TMP_274=lisp.callFunctionWithCallStack(G_275,TMP_273);
if(lisp.values1(TMP_274) !== lisp.S_nil){
TMP_277=lisp.callFunctionWithCallStack(G_268,L_X__164);
TMP_278=lisp.callFunctionWithCallStack(G_275,TMP_277);
TMP_276=lisp.values1(TMP_278);
}else{
TMP_276=lisp.values1(lisp.S_nil);
}
TMP_272=lisp.values1(TMP_276);
}else{
TMP_272=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_272) !== lisp.S_nil){
TMP_279=lisp.values1(lisp.S_nil);
}else{
TMP_280=G_230.func(G_51.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 118, 97, 114, 105, 97, 98, 108, 101])),L_X__164);
TMP_279=TMP_280;
}
return TMP_279;
});
CL_VALTAN_CORESLASHLOOP_CHECK_SIMPLE_VAR=lisp.values1(F_CHECK_SIMPLE_VAR_269);
let F_ADD_LOOP_TEST_FORM_281;
F_ADD_LOOP_TEST_FORM_281=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_282, arguments.length);
}
let L_G82__168;
let TMP_283;
let L_FORM__166;
L_FORM__166=arguments[0];
{
TMP_283=lisp.CL_cons(L_FORM__166,lisp.symbolValue(G_8));
L_G82__168=lisp.values1(TMP_283);
lisp.setSymbolValue(G_8, lisp.values1(L_G82__168));
}
return lisp.values1(G_8.value);
});
CL_VALTAN_CORESLASHLOOP_ADD_LOOP_TEST_FORM=lisp.values1(F_ADD_LOOP_TEST_FORM_281);
let F_ADD_BEFORE_UPDATE_FORM_284;
F_ADD_BEFORE_UPDATE_FORM_284=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_285, arguments.length);
}
let L_G83__173;
let TMP_287;
let TMP_286;
let L_FORM__171;
let L_VAR__170;
let L_OP__169;
L_OP__169=arguments[0];
L_VAR__170=arguments[1];
L_FORM__171=arguments[2];
{
TMP_286=lisp.callFunctionWithCallStack(G_54,L_OP__169,L_VAR__170,L_FORM__171);
TMP_287=lisp.CL_cons(TMP_286,lisp.symbolValue(G_9));
L_G83__173=lisp.values1(TMP_287);
lisp.setSymbolValue(G_9, lisp.values1(L_G83__173));
}
return lisp.values1(G_9.value);
});
CL_VALTAN_CORESLASHLOOP_ADD_BEFORE_UPDATE_FORM=lisp.values1(F_ADD_BEFORE_UPDATE_FORM_284);
let F_ADD_AFTER_UPDATE_FORM_288;
F_ADD_AFTER_UPDATE_FORM_288=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_289, arguments.length);
}
let L_G84__178;
let TMP_291;
let TMP_290;
let L_FORM__176;
let L_VAR__175;
let L_OP__174;
L_OP__174=arguments[0];
L_VAR__175=arguments[1];
L_FORM__176=arguments[2];
{
TMP_290=lisp.callFunctionWithCallStack(G_54,L_OP__174,L_VAR__175,L_FORM__176);
TMP_291=lisp.CL_cons(TMP_290,lisp.symbolValue(G_10));
L_G84__178=lisp.values1(TMP_291);
lisp.setSymbolValue(G_10, lisp.values1(L_G84__178));
}
return lisp.values1(G_10.value);
});
CL_VALTAN_CORESLASHLOOP_ADD_AFTER_UPDATE_FORM=lisp.values1(F_ADD_AFTER_UPDATE_FORM_288);
let F_ADD_INITIALLY_FORM_292;
F_ADD_INITIALLY_FORM_292=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_293, arguments.length);
}
let L_G85__181;
let TMP_294;
let L_FORM__179;
L_FORM__179=arguments[0];
{
TMP_294=lisp.CL_cons(L_FORM__179,lisp.symbolValue(G_6));
L_G85__181=lisp.values1(TMP_294);
lisp.setSymbolValue(G_6, lisp.values1(L_G85__181));
}
return lisp.values1(G_6.value);
});
CL_VALTAN_CORESLASHLOOP_ADD_INITIALLY_FORM=lisp.values1(F_ADD_INITIALLY_FORM_292);
let F_ADD_INITIALLY_FORMS_295;
F_ADD_INITIALLY_FORMS_295=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_296, arguments.length);
}
let TMP_298;
let TMP_297;
let L_FORMS__182;
L_FORMS__182=arguments[0];
TMP_297=lisp.CL_symbolFunction(G_293);
TMP_298=lisp.callFunctionWithCallStack(G_299,TMP_297,L_FORMS__182);
return TMP_298;
});
CL_VALTAN_CORESLASHLOOP_ADD_INITIALLY_FORMS=lisp.values1(F_ADD_INITIALLY_FORMS_295);
let F_ADD_FINALLY_FORM_300;
F_ADD_FINALLY_FORM_300=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_301, arguments.length);
}
let L_G86__186;
let TMP_302;
let L_FORM__184;
L_FORM__184=arguments[0];
{
TMP_302=lisp.CL_cons(L_FORM__184,lisp.symbolValue(G_7));
L_G86__186=lisp.values1(TMP_302);
lisp.setSymbolValue(G_7, lisp.values1(L_G86__186));
}
return lisp.values1(G_7.value);
});
CL_VALTAN_CORESLASHLOOP_ADD_FINALLY_FORM=lisp.values1(F_ADD_FINALLY_FORM_300);
let F_ADD_FINALLY_FORMS_303;
F_ADD_FINALLY_FORMS_303=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_304, arguments.length);
}
let TMP_306;
let TMP_305;
let L_FORMS__187;
L_FORMS__187=arguments[0];
TMP_305=lisp.CL_symbolFunction(G_301);
TMP_306=lisp.callFunctionWithCallStack(G_299,TMP_305,L_FORMS__187);
return TMP_306;
});
CL_VALTAN_CORESLASHLOOP_ADD_FINALLY_FORMS=lisp.values1(F_ADD_FINALLY_FORMS_303);
let F_PARSE_D_TYPE_SPEC_307;
F_PARSE_D_TYPE_SPEC_307=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_308, arguments.length);
}
let TMP_315;
let TMP_314;
let TMP_313;
let TMP_312;
let TMP_311;
let TMP_310;
let TMP_309;
let L_D_TYPE_SPEC__189;
L_D_TYPE_SPEC__189=arguments[0];
TMP_309=lisp.CL_consp(L_D_TYPE_SPEC__189);
if(lisp.values1(TMP_309) !== lisp.S_nil){
TMP_311=lisp.callFunctionWithCallStack(G_261,L_D_TYPE_SPEC__189);
TMP_312=G_308.func(TMP_311);
TMP_313=lisp.callFunctionWithCallStack(G_259,L_D_TYPE_SPEC__189);
TMP_314=G_308.func(TMP_313);
TMP_315=lisp.CL_cons(TMP_312,TMP_314);
TMP_310=TMP_315;
}else{
TMP_310=lisp.values1(L_D_TYPE_SPEC__189);
}
return TMP_310;
});
CL_VALTAN_CORESLASHLOOP_PARSE_D_TYPE_SPEC=lisp.values1(F_PARSE_D_TYPE_SPEC_307);
let F_PARSE_TYPE_SPEC_316;
F_PARSE_TYPE_SPEC_316=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_317, arguments.length);
}
let TMP_330;
let TMP_329;
let TMP_328;
let L_G88__194;
let TMP_327;
let TMP_325;
let TMP_324;
let TMP_323;
let L_G87__193;
let TMP_321;
let L_X__192;
let TMP_318;
{
TMP_318=G_263.func();
L_X__192=lisp.values1(TMP_318);
{
TMP_321=lisp.callFunctionWithCallStack(G_322,L_X__192,lisp.makeCons(G_319, lisp.makeCons(G_320, lisp.makeCons(G_4, lisp.makeCons(lisp.S_nil, lisp.S_nil)))));
L_G87__193=lisp.values1(TMP_321);
if(lisp.values1(L_G87__193) !== lisp.S_nil){
TMP_324=G_257.func();
TMP_323=TMP_324;
}else{
{
TMP_325=G_236.func(L_X__192);
TMP_327=lisp.CL_eq(TMP_325,G_326);
L_G88__194=lisp.values1(TMP_327);
if(lisp.values1(L_G88__194) !== lisp.S_nil){
G_257.func();
TMP_329=G_257.func();
TMP_330=G_308.func(TMP_329);
TMP_328=TMP_330;
}else{
TMP_328=lisp.values1(lisp.S_nil);
}
}
TMP_323=TMP_328;
}
}
}
return TMP_323;
});
CL_VALTAN_CORESLASHLOOP_PARSE_TYPE_SPEC=lisp.values1(F_PARSE_TYPE_SPEC_316);
let F_IT_331;
F_IT_331=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_332, arguments.length);
}
let TMP_336;
let L_G90__197;
let TMP_335;
let TMP_334;
let L_G89__196;
let TMP_333;
if(lisp.values1(lisp.symbolValue(G_14)) !== lisp.S_nil){
{
L_G89__196=lisp.values1(lisp.symbolValue(G_13));
if(lisp.values1(L_G89__196) !== lisp.S_nil){
TMP_334=lisp.values1(L_G89__196);
}else{
{
TMP_335=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([73, 84])));
lisp.setSymbolValue(G_13, lisp.values1(TMP_335));
L_G90__197=lisp.values1(G_13.value);
if(lisp.values1(L_G90__197) !== lisp.S_nil){
TMP_336=lisp.values1(L_G90__197);
}else{
TMP_336=lisp.values1(lisp.S_nil);
}
}
TMP_334=TMP_336;
}
}
TMP_333=TMP_334;
}else{
TMP_333=lisp.values1(lisp.S_nil);
}
return TMP_333;
});
CL_VALTAN_CORESLASHLOOP_IT=lisp.values1(F_IT_331);
let F_PARSE_COMPOUND_FORMS_337;
F_PARSE_COMPOUND_FORMS_337=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_338, arguments.length);
}
let L_G99__203;
let TMP_347;
let TMP_346;
let TMP_344;
let TMP_343;
let L_G96__202;
let TMP_342;
let TMP_341;
let TMP_340;
let L_G95__201;
let TMP_339;
let L_FORMS__200;
let BLOCK_RESULT_NIL__199;
BLOCK_NIL__199: for(;;){{
L_FORMS__200=lisp.values1(lisp.S_nil);
for(;;){
{
TMP_339=G_266.func();
L_G95__201=lisp.values1(TMP_339);
if(lisp.values1(L_G95__201) !== lisp.S_nil){
TMP_340=lisp.values1(L_G95__201);
}else{
{
TMP_341=G_263.func();
TMP_342=lisp.CL_symbolp(TMP_341);
L_G96__202=lisp.values1(TMP_342);
if(lisp.values1(L_G96__202) !== lisp.S_nil){
TMP_343=lisp.values1(L_G96__202);
}else{
TMP_343=lisp.values1(lisp.S_nil);
}
}
TMP_340=lisp.values1(lisp.values1(TMP_343));
}
}
if(lisp.values1(lisp.values1(TMP_340)) !== lisp.S_nil){
TMP_344=lisp.callFunctionWithCallStack(G_345,L_FORMS__200);
BLOCK_RESULT_NIL__199=TMP_344;
break BLOCK_NIL__199;
}else{
{
TMP_346=G_257.func();
TMP_347=lisp.CL_cons(TMP_346,L_FORMS__200);
L_G99__203=lisp.values1(TMP_347);
L_FORMS__200=lisp.values1(L_G99__203);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__199=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__199;
});
CL_VALTAN_CORESLASHLOOP_PARSE_COMPOUND_FORMS=lisp.values1(F_PARSE_COMPOUND_FORMS_337);
let F_GEN_D_VAR_BINDINGS_348;
F_GEN_D_VAR_BINDINGS_348=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_349, arguments.length);
}
let TMP_361;
let F_F__207;
let TMP_350;
let L_BINDINGS__206;
let L_D_VAR__204;
L_D_VAR__204=arguments[0];
{
L_BINDINGS__206=lisp.values1(lisp.S_nil);
{
TMP_350=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_360;
let L_G103__212;
let TMP_359;
let TMP_358;
let TMP_357;
let TMP_356;
let TMP_355;
let TMP_354;
let L_G101__210;
let TMP_353;
let TMP_352;
let L_G100__209;
let TMP_351;
let L_D_VAR__208;
L_D_VAR__208=arguments[0];
{
TMP_351=lisp.callFunctionWithCallStack(G_268,L_D_VAR__208);
L_G100__209=lisp.values1(TMP_351);
if(lisp.values1(L_G100__209) !== lisp.S_nil){
TMP_352=lisp.values1(lisp.S_nil);
}else{
{
TMP_353=lisp.CL_consp(L_D_VAR__208);
L_G101__210=lisp.values1(TMP_353);
if(lisp.values1(L_G101__210) !== lisp.S_nil){
TMP_355=lisp.callFunctionWithCallStack(G_261,L_D_VAR__208);
F_F__207(TMP_355);
TMP_356=lisp.callFunctionWithCallStack(G_259,L_D_VAR__208);
TMP_357=F_F__207(TMP_356);
TMP_354=TMP_357;
}else{
G_270.func(L_D_VAR__208);
{
TMP_358=lisp.callFunctionWithCallStack(G_54,L_D_VAR__208,lisp.S_nil);
TMP_359=lisp.CL_cons(TMP_358,L_BINDINGS__206);
L_G103__212=lisp.values1(TMP_359);
L_BINDINGS__206=(TMP_360=lisp.values1(L_G103__212));
}
TMP_354=lisp.values1(TMP_360);
}
}
TMP_352=TMP_354;
}
}
return TMP_352;
});
F_F__207=lisp.values1(TMP_350);
F_F__207(L_D_VAR__204);
}
TMP_361=lisp.callFunctionWithCallStack(G_345,L_BINDINGS__206);
}
return TMP_361;
});
CL_VALTAN_CORESLASHLOOP_GEN_D_VAR_BINDINGS=lisp.values1(F_GEN_D_VAR_BINDINGS_348);
let F_MAP_D_VAR_D_TYPE_SPEC_362;
F_MAP_D_VAR_D_TYPE_SPEC_362=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_363, arguments.length);
}
let TMP_388;
let F_F__216;
let TMP_364;
let L_D_TYPE_SPEC__214;
let L_D_VAR__213;
L_D_VAR__213=arguments[0];
L_D_TYPE_SPEC__214=arguments[1];
{
TMP_364=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_387;
let TMP_386;
let TMP_385;
let L_G109__224;
let TMP_384;
let TMP_383;
let L_G108__223;
let TMP_382;
let L_G107__222;
let TMP_379;
let TMP_378;
let TMP_377;
let TMP_376;
let TMP_375;
let TMP_374;
let TMP_373;
let TMP_372;
let TMP_371;
let TMP_370;
let TMP_369;
let TMP_368;
let L_G105__220;
let TMP_367;
let TMP_366;
let L_G104__219;
let TMP_365;
let L_D_TYPE_SPEC__218;
let L_D_VAR__217;
L_D_VAR__217=arguments[0];
L_D_TYPE_SPEC__218=arguments[1];
{
TMP_365=lisp.callFunctionWithCallStack(G_268,L_D_VAR__217);
L_G104__219=lisp.values1(TMP_365);
if(lisp.values1(L_G104__219) !== lisp.S_nil){
TMP_366=lisp.values1(lisp.S_nil);
}else{
{
TMP_367=lisp.CL_consp(L_D_VAR__217);
L_G105__220=lisp.values1(TMP_367);
if(lisp.values1(L_G105__220) !== lisp.S_nil){
TMP_369=lisp.callFunctionWithCallStack(G_261,L_D_VAR__217);
TMP_370=lisp.CL_symbolp(L_D_TYPE_SPEC__218);
if(lisp.values1(TMP_370) !== lisp.S_nil){
TMP_371=lisp.values1(L_D_TYPE_SPEC__218);
}else{
TMP_372=lisp.callFunctionWithCallStack(G_261,L_D_TYPE_SPEC__218);
TMP_371=lisp.values1(TMP_372);
}
TMP_373=F_F__216(TMP_369,TMP_371);
TMP_374=lisp.callFunctionWithCallStack(G_259,L_D_VAR__217);
TMP_375=lisp.CL_symbolp(L_D_TYPE_SPEC__218);
if(lisp.values1(TMP_375) !== lisp.S_nil){
TMP_376=lisp.values1(L_D_TYPE_SPEC__218);
}else{
TMP_377=lisp.callFunctionWithCallStack(G_259,L_D_TYPE_SPEC__218);
TMP_376=lisp.values1(TMP_377);
}
TMP_378=F_F__216(TMP_374,TMP_376);
TMP_379=lisp.callFunctionWithCallStack(G_380,TMP_373,TMP_378);
TMP_368=TMP_379;
}else{
{
L_G107__222=lisp.values1(L_D_TYPE_SPEC__218);
{
TMP_382=lisp.callFunctionWithCallStack(G_322,L_G107__222,lisp.makeCons(G_319, lisp.makeCons(G_381, lisp.S_nil)));
L_G108__223=lisp.values1(TMP_382);
if(lisp.values1(L_G108__223) !== lisp.S_nil){
TMP_383=lisp.values1(0);
}else{
{
TMP_384=lisp.callFunctionWithCallStack(G_322,L_G107__222,lisp.makeCons(G_320, lisp.S_nil));
L_G109__224=lisp.values1(TMP_384);
if(lisp.values1(L_G109__224) !== lisp.S_nil){
TMP_385=lisp.values1(0.0);
}else{
TMP_385=lisp.values1(lisp.S_nil);
}
}
TMP_383=lisp.values1(lisp.values1(TMP_385));
}
}
}
TMP_386=lisp.callFunctionWithCallStack(G_54,L_D_VAR__217,lisp.values1(lisp.values1(TMP_383)));
TMP_387=lisp.callFunctionWithCallStack(G_54,TMP_386);
TMP_368=TMP_387;
}
}
TMP_366=TMP_368;
}
}
return TMP_366;
});
F_F__216=lisp.values1(TMP_364);
TMP_388=F_F__216(L_D_VAR__213,L_D_TYPE_SPEC__214);
}
return TMP_388;
});
CL_VALTAN_CORESLASHLOOP_MAP_D_VAR_D_TYPE_SPEC=lisp.values1(F_MAP_D_VAR_D_TYPE_SPEC_362);
let F_PARSE_WITH_CLAUSE_389;
F_PARSE_WITH_CLAUSE_389=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_390, arguments.length);
}
let L_G132__245;
let TMP_425;
let TMP_424;
let TMP_423;
let L_D_BIND__244;
let TMP_422;
let TMP_420;
let L_G125__243;
let TMP_419;
let L_G124__241;
let TMP_418;
let TMP_417;
let TMP_416;
let TMP_415;
let TMP_413;
let TMP_412;
let L_G123__240;
let TMP_411;
let TMP_410;
let L_G122__239;
let TMP_409;
let TMP_408;
let L_G120__237;
let TMP_406;
let TMP_405;
let L_G119__236;
let TMP_404;
let TMP_403;
let L_G118__235;
let TMP_402;
let TMP_401;
let L_TMP_VAR__234;
let TMP_400;
let L_G117__233;
let TMP_399;
let L_FORM__232;
let TMP_398;
let TMP_397;
let TMP_396;
let TMP_394;
let TMP_393;
let L_TYPE_SPEC__231;
let TMP_392;
let L_VAR__230;
let TMP_391;
let BLOCK_RESULT_NIL__229;
let L_D_BINDS__228;
let L_BINDINGS__227;
{
L_BINDINGS__227=lisp.values1(lisp.S_nil);
L_D_BINDS__228=lisp.values1(lisp.S_nil);
BLOCK_NIL__229: for(;;){for(;;){
{
TMP_391=G_257.func();
L_VAR__230=lisp.values1(TMP_391);
TMP_392=G_317.func();
L_TYPE_SPEC__231=lisp.values1(TMP_392);
TMP_393=G_263.func();
TMP_394=G_248.func(TMP_393);
TMP_396=lisp.CL_eq(TMP_394,G_395);
if(lisp.values1(TMP_396) !== lisp.S_nil){
G_257.func();
TMP_398=G_257.func();
TMP_397=lisp.values1(lisp.values1(TMP_398));
}else{
TMP_397=lisp.values1(lisp.S_nil);
}
L_FORM__232=lisp.values1(TMP_397);
{
TMP_399=lisp.CL_consp(L_VAR__230);
L_G117__233=lisp.values1(TMP_399);
if(lisp.values1(L_G117__233) !== lisp.S_nil){
if(lisp.values1(L_FORM__232) !== lisp.S_nil){
{
TMP_400=lisp.callFunctionWithCallStack(G_48);
L_TMP_VAR__234=lisp.values1(TMP_400);
{
TMP_401=lisp.callFunctionWithCallStack(G_54,L_VAR__230,L_TMP_VAR__234);
TMP_402=lisp.CL_cons(TMP_401,L_D_BINDS__228);
L_G118__235=lisp.values1(TMP_402);
L_D_BINDS__228=lisp.values1(L_G118__235);
}
{
TMP_403=lisp.callFunctionWithCallStack(G_54,L_TMP_VAR__234,L_FORM__232);
TMP_404=lisp.CL_cons(TMP_403,L_BINDINGS__227);
L_G119__236=lisp.values1(TMP_404);
L_BINDINGS__227=lisp.values1(L_G119__236);
}
}
}else{
{
TMP_405=G_363.func(L_VAR__230,L_TYPE_SPEC__231);
TMP_406=lisp.callFunctionWithCallStack(G_407,TMP_405,L_BINDINGS__227);
L_G120__237=lisp.values1(TMP_406);
L_BINDINGS__227=lisp.values1(L_G120__237);
}
}
}else{
if(lisp.values1(L_FORM__232) !== lisp.S_nil){
{
TMP_408=lisp.callFunctionWithCallStack(G_54,L_VAR__230,L_FORM__232);
TMP_409=lisp.CL_cons(TMP_408,L_BINDINGS__227);
L_G122__239=lisp.values1(TMP_409);
L_BINDINGS__227=lisp.values1(L_G122__239);
}
}else{
{
TMP_410=G_363.func(L_VAR__230,L_TYPE_SPEC__231);
TMP_411=lisp.callFunctionWithCallStack(G_407,TMP_410,L_BINDINGS__227);
L_G123__240=lisp.values1(TMP_411);
L_BINDINGS__227=lisp.values1(L_G123__240);
}
}
}
}
TMP_412=G_263.func();
TMP_413=G_248.func(TMP_412);
TMP_415=lisp.CL_eq(TMP_413,G_414);
if(lisp.values1(TMP_415) !== lisp.S_nil){
G_257.func();
}else{
BLOCK_RESULT_NIL__229=lisp.values1(lisp.S_nil);
break BLOCK_NIL__229;
}
}
continue;
break;
}
BLOCK_RESULT_NIL__229=lisp.values1(lisp.S_nil);
break;
}
{
TMP_416=lisp.callFunctionWithCallStack(G_345,L_BINDINGS__227);
TMP_417=G_29.func(G_30,TMP_416);
TMP_418=lisp.CL_cons(TMP_417,lisp.symbolValue(G_12));
L_G124__241=lisp.values1(TMP_418);
lisp.setSymbolValue(G_12, lisp.values1(L_G124__241));
}
{
TMP_419=lisp.callFunctionWithCallStack(G_345,L_D_BINDS__228);
L_G125__243=lisp.values1(TMP_419);
for(;;){
TMP_420=lisp.callFunctionWithCallStack(G_421,L_G125__243);
if(lisp.values1(TMP_420) !== lisp.S_nil){
}else{
{
TMP_422=lisp.callFunctionWithCallStack(G_261,L_G125__243);
L_D_BIND__244=lisp.values1(TMP_422);
TMP_423=lisp.callFunctionWithCallStack(G_259,L_G125__243);
L_G125__243=lisp.values1(TMP_423);
{
TMP_424=G_75.func(G_76,L_D_BIND__244);
TMP_425=lisp.CL_cons(TMP_424,lisp.symbolValue(G_12));
L_G132__245=lisp.values1(TMP_425);
lisp.setSymbolValue(G_12, lisp.values1(L_G132__245));
}
}
continue;
}
break;
}
}
}
return lisp.values1(lisp.S_nil);
});
CL_VALTAN_CORESLASHLOOP_PARSE_WITH_CLAUSE=lisp.values1(F_PARSE_WITH_CLAUSE_389);
let F_PARSE_FOR_AS_ARITHMETIC_426;
F_PARSE_FOR_AS_ARITHMETIC_426=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_427, arguments.length);
}
let L_G174__312;
let TMP_516;
let TMP_515;
let TMP_514;
let TMP_513;
let TMP_512;
let L_G172__310;
let TMP_509;
let TMP_508;
let TMP_506;
let TMP_503;
let TMP_500;
let TMP_499;
let TMP_498;
let L_G171__309;
let TMP_497;
let TMP_496;
let L_G169__307;
let TMP_495;
let TMP_494;
let L_G168__306;
let TMP_493;
let L_G162__305;
let L_G161__304;
let TMP_492;
let L_G167__303;
let TMP_491;
let L_G166__302;
let L_G160__301;
let TMP_490;
let L_G164__299;
let TMP_489;
let L_G163__298;
let L_G159__297;
let TMP_488;
let TMP_487;
let L_G158__296;
let L_DIR1__295;
let TMP_486;
let L_G157__294;
let TMP_485;
let TMP_484;
let L_G156__293;
let TMP_483;
let TMP_482;
let L_G155__292;
let TMP_481;
let L_G154__291;
let L_G153__290;
let TMP_480;
let L_G152__289;
let TMP_474;
let TMP_473;
let L_G149__288;
let L_G148__287;
let TMP_472;
let L_G151__286;
let TMP_471;
let L_G150__285;
let L_G147__284;
let TMP_470;
let L_G146__283;
let L_DIR1__282;
let TMP_468;
let L_G145__281;
let TMP_467;
let TMP_465;
let L_G144__280;
let TMP_464;
let TMP_463;
let L_G143__279;
let TMP_461;
let L_G142__278;
let L_G141__277;
let TMP_460;
let L_G140__276;
let L_KEYWORD__275;
let TMP_456;
let TMP_455;
let BLOCK_RESULT_NIL__274;
let F_ONCE_ONLY_VALUE__263;
let TMP_447;
let F_CHECK_DIR__262;
let TMP_440;
let F_CHECK_BY_FORM__261;
let TMP_436;
let F_CHECK_END_FORM__260;
let TMP_433;
let F_CHECK_INIT_FORM__259;
let TMP_430;
let F_COMBINATION_ERROR__258;
let TMP_428;
let L_BINDINGS__257;
let L_BY_VALUE__256;
let L_THEN_OR_EQUAL__255;
let L_DIR_KEYWORD__254;
let L_DIR__253;
let L_END_VALUE__252;
let L_INIT_VALUE__251;
let L_END_KEYWORD__250;
let L_INIT_KEYWORD__249;
let L_VAR__247;
L_VAR__247=arguments[0];
G_270.func(L_VAR__247);
{
L_INIT_KEYWORD__249=lisp.values1(lisp.S_nil);
L_END_KEYWORD__250=lisp.values1(lisp.S_nil);
L_INIT_VALUE__251=lisp.values1(lisp.S_nil);
L_END_VALUE__252=lisp.values1(lisp.S_nil);
L_DIR__253=lisp.values1(lisp.S_nil);
L_DIR_KEYWORD__254=lisp.values1(lisp.S_nil);
L_THEN_OR_EQUAL__255=lisp.values1(lisp.S_nil);
L_BY_VALUE__256=lisp.values1(lisp.S_nil);
L_BINDINGS__257=lisp.values1(lisp.S_nil);
{
TMP_428=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_429;
let L_KEY2__265;
let L_KEY1__264;
L_KEY1__264=arguments[0];
L_KEY2__265=arguments[1];
TMP_429=G_230.func(G_51.func(lisp.codeArrayToString([84, 104, 101, 32, 99, 111, 109, 98, 105, 110, 97, 116, 105, 111, 110, 32, 111, 102, 32, 126, 83, 32, 97, 110, 100, 32, 126, 83, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100])),L_KEY1__264,L_KEY2__265);
return TMP_429;
});
F_COMBINATION_ERROR__258=lisp.values1(TMP_428);
TMP_430=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_432;
let TMP_431;
let L_KEYWORD__266;
L_KEYWORD__266=arguments[0];
if(lisp.values1(L_INIT_KEYWORD__249) !== lisp.S_nil){
TMP_432=F_COMBINATION_ERROR__258(L_INIT_KEYWORD__249,L_KEYWORD__266);
TMP_431=TMP_432;
}else{
TMP_431=lisp.values1(lisp.S_nil);
}
return TMP_431;
});
F_CHECK_INIT_FORM__259=lisp.values1(TMP_430);
TMP_433=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_435;
let TMP_434;
let L_KEYWORD__267;
L_KEYWORD__267=arguments[0];
if(lisp.values1(L_END_KEYWORD__250) !== lisp.S_nil){
TMP_435=F_COMBINATION_ERROR__258(L_END_KEYWORD__250,L_KEYWORD__267);
TMP_434=TMP_435;
}else{
TMP_434=lisp.values1(lisp.S_nil);
}
return TMP_434;
});
F_CHECK_END_FORM__260=lisp.values1(TMP_433);
TMP_436=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_439;
let TMP_437;
if(lisp.values1(L_BY_VALUE__256) !== lisp.S_nil){
TMP_439=F_COMBINATION_ERROR__258(G_438,G_438);
TMP_437=TMP_439;
}else{
TMP_437=lisp.values1(lisp.S_nil);
}
return TMP_437;
});
F_CHECK_BY_FORM__261=lisp.values1(TMP_436);
TMP_440=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_446;
let TMP_445;
let TMP_444;
let TMP_443;
let TMP_442;
let TMP_441;
let L_KEYWORD__269;
let L_DIR1__268;
L_DIR1__268=arguments[0];
L_KEYWORD__269=arguments[1];
if(lisp.values1(L_DIR1__268) !== lisp.S_nil){
if(lisp.values1(L_DIR__253) !== lisp.S_nil){
TMP_443=lisp.CL_eq(L_DIR1__268,L_DIR__253);
TMP_444=lisp.callFunctionWithCallStack(G_275,TMP_443);
TMP_442=lisp.values1(TMP_444);
}else{
TMP_442=lisp.values1(lisp.S_nil);
}
TMP_441=lisp.values1(TMP_442);
}else{
TMP_441=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_441) !== lisp.S_nil){
TMP_446=F_COMBINATION_ERROR__258(L_KEYWORD__269,L_DIR_KEYWORD__254);
TMP_445=TMP_446;
}else{
TMP_445=lisp.values1(lisp.S_nil);
}
return TMP_445;
});
F_CHECK_DIR__262=lisp.values1(TMP_440);
TMP_447=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G133__273;
let TMP_454;
let TMP_453;
let L_VAR__272;
let TMP_452;
let TMP_450;
let TMP_449;
let TMP_448;
let L_NAME__271;
let L_FORM__270;
L_FORM__270=arguments[0];
L_NAME__271=arguments[1];
TMP_448=lisp.CL_consp(L_FORM__270);
if(lisp.values1(TMP_448) !== lisp.S_nil){
{
TMP_450=lisp.callFunctionWithCallStack(G_451,L_NAME__271);
TMP_452=lisp.callFunctionWithCallStack(G_48,TMP_450);
L_VAR__272=lisp.values1(TMP_452);
{
TMP_453=lisp.callFunctionWithCallStack(G_54,L_VAR__272,L_FORM__270);
TMP_454=lisp.CL_cons(TMP_453,L_BINDINGS__257);
L_G133__273=lisp.values1(TMP_454);
L_BINDINGS__257=lisp.values1(L_G133__273);
}
}
TMP_449=lisp.values1(L_VAR__272);
}else{
TMP_449=lisp.values1(L_FORM__270);
}
return TMP_449;
});
F_ONCE_ONLY_VALUE__263=lisp.values1(TMP_447);
BLOCK_NIL__274: for(;;){for(;;){
{
TMP_455=G_263.func();
TMP_456=G_236.func(TMP_455);
L_KEYWORD__275=lisp.values1(TMP_456);
{
L_G140__276=lisp.values1(L_KEYWORD__275);
{
TMP_460=lisp.callFunctionWithCallStack(G_322,L_G140__276,lisp.makeCons(G_457, lisp.makeCons(G_458, lisp.makeCons(G_459, lisp.S_nil))));
L_G141__277=lisp.values1(TMP_460);
if(lisp.values1(L_G141__277) !== lisp.S_nil){
G_257.func();
F_CHECK_INIT_FORM__259(L_KEYWORD__275);
{
{
L_G142__278=lisp.values1(L_KEYWORD__275);
{
TMP_461=lisp.callFunctionWithCallStack(G_462,L_G142__278,G_457);
L_G143__279=lisp.values1(TMP_461);
if(lisp.values1(L_G143__279) !== lisp.S_nil){
TMP_463=lisp.values1(lisp.S_nil);
}else{
{
TMP_464=lisp.callFunctionWithCallStack(G_462,L_G142__278,G_458);
L_G144__280=lisp.values1(TMP_464);
if(lisp.values1(L_G144__280) !== lisp.S_nil){
TMP_465=lisp.values1(G_466);
}else{
{
TMP_467=lisp.callFunctionWithCallStack(G_462,L_G142__278,G_459);
L_G145__281=lisp.values1(TMP_467);
if(lisp.values1(L_G145__281) !== lisp.S_nil){
TMP_468=lisp.values1(G_469);
}else{
TMP_468=lisp.values1(lisp.S_nil);
}
}
TMP_465=lisp.values1(lisp.values1(TMP_468));
}
}
TMP_463=lisp.values1(lisp.values1(TMP_465));
}
}
}
L_DIR1__282=lisp.values1(lisp.values1(lisp.values1(TMP_463)));
F_CHECK_DIR__262(L_DIR1__282,L_KEYWORD__275);
{
L_G146__283=lisp.values1(L_KEYWORD__275);
L_INIT_KEYWORD__249=lisp.values1(L_G146__283);
}
{
TMP_470=G_257.func();
L_G147__284=lisp.values1(TMP_470);
L_INIT_VALUE__251=lisp.values1(L_G147__284);
}
{
{
L_G150__285=lisp.values1(L_DIR1__282);
if(lisp.values1(L_G150__285) !== lisp.S_nil){
TMP_471=lisp.values1(L_G150__285);
}else{
{
L_G151__286=lisp.values1(L_DIR__253);
if(lisp.values1(L_G151__286) !== lisp.S_nil){
TMP_472=lisp.values1(L_G151__286);
}else{
TMP_472=lisp.values1(lisp.S_nil);
}
}
TMP_471=lisp.values1(lisp.values1(TMP_472));
}
}
L_G148__287=lisp.values1(lisp.values1(TMP_471));
L_DIR__253=lisp.values1(L_G148__287);
}
{
L_G149__288=lisp.values1(L_KEYWORD__275);
L_DIR_KEYWORD__254=lisp.values1(L_G149__288);
}
{
TMP_473=lisp.callFunctionWithCallStack(G_54,L_VAR__247,L_INIT_VALUE__251);
TMP_474=lisp.CL_cons(TMP_473,L_BINDINGS__257);
L_G152__289=lisp.values1(TMP_474);
L_BINDINGS__257=lisp.values1(L_G152__289);
}
}
}else{
{
TMP_480=lisp.callFunctionWithCallStack(G_322,L_G140__276,lisp.makeCons(G_475, lisp.makeCons(G_476, lisp.makeCons(G_477, lisp.makeCons(G_478, lisp.makeCons(G_479, lisp.S_nil))))));
L_G153__290=lisp.values1(TMP_480);
if(lisp.values1(L_G153__290) !== lisp.S_nil){
G_257.func();
F_CHECK_END_FORM__260(L_KEYWORD__275);
{
{
L_G154__291=lisp.values1(L_KEYWORD__275);
{
TMP_481=lisp.callFunctionWithCallStack(G_462,L_G154__291,G_475);
L_G155__292=lisp.values1(TMP_481);
if(lisp.values1(L_G155__292) !== lisp.S_nil){
TMP_482=lisp.values1(lisp.S_nil);
}else{
{
TMP_483=lisp.callFunctionWithCallStack(G_322,L_G154__291,lisp.makeCons(G_476, lisp.makeCons(G_478, lisp.S_nil)));
L_G156__293=lisp.values1(TMP_483);
if(lisp.values1(L_G156__293) !== lisp.S_nil){
TMP_484=lisp.values1(G_466);
}else{
{
TMP_485=lisp.callFunctionWithCallStack(G_322,L_G154__291,lisp.makeCons(G_477, lisp.makeCons(G_479, lisp.S_nil)));
L_G157__294=lisp.values1(TMP_485);
if(lisp.values1(L_G157__294) !== lisp.S_nil){
TMP_486=lisp.values1(G_469);
}else{
TMP_486=lisp.values1(lisp.S_nil);
}
}
TMP_484=lisp.values1(lisp.values1(TMP_486));
}
}
TMP_482=lisp.values1(lisp.values1(TMP_484));
}
}
}
L_DIR1__295=lisp.values1(lisp.values1(lisp.values1(TMP_482)));
F_CHECK_DIR__262(L_DIR1__295,L_KEYWORD__275);
{
L_G158__296=lisp.values1(L_KEYWORD__275);
L_END_KEYWORD__250=lisp.values1(L_G158__296);
}
{
TMP_487=G_257.func();
TMP_488=F_ONCE_ONLY_VALUE__263(TMP_487,L_KEYWORD__275);
L_G159__297=lisp.values1(TMP_488);
L_END_VALUE__252=lisp.values1(L_G159__297);
}
{
{
L_G163__298=lisp.values1(L_KEYWORD__275);
{
TMP_489=lisp.callFunctionWithCallStack(G_322,L_G163__298,lisp.makeCons(G_475, lisp.makeCons(G_476, lisp.makeCons(G_477, lisp.S_nil))));
L_G164__299=lisp.values1(TMP_489);
if(lisp.values1(L_G164__299) !== lisp.S_nil){
TMP_490=lisp.values1(G_4);
}else{
TMP_490=lisp.values1(lisp.S_nil);
}
}
}
L_G160__301=lisp.values1(lisp.values1(lisp.values1(TMP_490)));
L_THEN_OR_EQUAL__255=lisp.values1(L_G160__301);
}
{
{
L_G166__302=lisp.values1(L_DIR1__295);
if(lisp.values1(L_G166__302) !== lisp.S_nil){
TMP_491=lisp.values1(L_G166__302);
}else{
{
L_G167__303=lisp.values1(L_DIR__253);
if(lisp.values1(L_G167__303) !== lisp.S_nil){
TMP_492=lisp.values1(L_G167__303);
}else{
TMP_492=lisp.values1(lisp.S_nil);
}
}
TMP_491=lisp.values1(lisp.values1(TMP_492));
}
}
L_G161__304=lisp.values1(lisp.values1(TMP_491));
L_DIR__253=lisp.values1(L_G161__304);
}
{
L_G162__305=lisp.values1(L_KEYWORD__275);
L_DIR_KEYWORD__254=lisp.values1(L_G162__305);
}
}
}else{
{
TMP_493=lisp.callFunctionWithCallStack(G_462,L_G140__276,G_438);
L_G168__306=lisp.values1(TMP_493);
if(lisp.values1(L_G168__306) !== lisp.S_nil){
G_257.func();
F_CHECK_BY_FORM__261();
{
TMP_494=G_257.func();
TMP_495=F_ONCE_ONLY_VALUE__263(TMP_494,L_KEYWORD__275);
L_G169__307=lisp.values1(TMP_495);
L_BY_VALUE__256=lisp.values1(L_G169__307);
}
}else{
BLOCK_RESULT_NIL__274=lisp.values1(lisp.S_nil);
break BLOCK_NIL__274;
}
}
}
}
}
}
}
}
continue;
break;
}
BLOCK_RESULT_NIL__274=lisp.values1(lisp.S_nil);
break;
}
if(lisp.values1(L_INIT_VALUE__251) !== lisp.S_nil){
}else{
{
TMP_496=lisp.callFunctionWithCallStack(G_54,L_VAR__247,0);
TMP_497=lisp.CL_cons(TMP_496,L_BINDINGS__257);
L_G171__309=lisp.values1(TMP_497);
L_BINDINGS__257=lisp.values1(L_G171__309);
}
}
if(lisp.values1(L_END_VALUE__252) !== lisp.S_nil){
TMP_498=lisp.CL_eq(L_DIR__253,G_469);
if(lisp.values1(TMP_498) !== lisp.S_nil){
if(lisp.values1(L_THEN_OR_EQUAL__255) !== lisp.S_nil){
TMP_500=lisp.values1(G_501);
}else{
TMP_500=lisp.values1(G_502);
}
TMP_499=lisp.values1(TMP_500);
}else{
if(lisp.values1(L_THEN_OR_EQUAL__255) !== lisp.S_nil){
TMP_503=lisp.values1(G_504);
}else{
TMP_503=lisp.values1(G_505);
}
TMP_499=lisp.values1(TMP_503);
}
TMP_506=lisp.callFunctionWithCallStack(G_54,TMP_499,L_VAR__247,L_END_VALUE__252);
G_282.func(TMP_506);
}else{
}
TMP_508=lisp.CL_eq(L_DIR__253,G_469);
if(lisp.values1(TMP_508) !== lisp.S_nil){
TMP_509=lisp.values1(G_510);
}else{
TMP_509=lisp.values1(G_511);
}
{
L_G172__310=lisp.values1(L_BY_VALUE__256);
if(lisp.values1(L_G172__310) !== lisp.S_nil){
TMP_512=lisp.values1(L_G172__310);
}else{
TMP_512=lisp.values1(1);
}
}
TMP_513=lisp.callFunctionWithCallStack(G_54,TMP_509,L_VAR__247,lisp.values1(TMP_512));
G_289.func(G_507,L_VAR__247,TMP_513);
{
TMP_514=lisp.callFunctionWithCallStack(G_345,L_BINDINGS__257);
TMP_515=G_29.func(G_30,TMP_514);
TMP_516=lisp.CL_cons(TMP_515,lisp.symbolValue(G_12));
L_G174__312=lisp.values1(TMP_516);
lisp.setSymbolValue(G_12, lisp.values1(L_G174__312));
}
}
}
return lisp.values1(G_12.value);
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ARITHMETIC=lisp.values1(F_PARSE_FOR_AS_ARITHMETIC_426);
let F_PARSE_FOR_AS_EQUALS_THEN_518;
F_PARSE_FOR_AS_EQUALS_THEN_518=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_519, arguments.length);
}
let TMP_536;
let TMP_535;
let TMP_534;
let TMP_533;
let L_G177__318;
let L_G176__317;
let TMP_532;
let TMP_531;
let TMP_530;
let L_THEN_FORM__316;
let TMP_529;
let TMP_528;
let TMP_526;
let TMP_524;
let TMP_523;
let TMP_522;
let TMP_521;
let L_EQUALS_FORM__315;
let TMP_520;
let L_D_VAR__313;
L_D_VAR__313=arguments[0];
{
TMP_520=G_257.func();
L_EQUALS_FORM__315=lisp.values1(TMP_520);
TMP_521=G_263.func();
TMP_522=lisp.CL_symbolp(TMP_521);
if(lisp.values1(TMP_522) !== lisp.S_nil){
TMP_524=G_263.func();
TMP_526=lisp.callFunctionWithCallStack(G_527,TMP_524,G_525);
TMP_523=lisp.values1(TMP_526);
}else{
TMP_523=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_523) !== lisp.S_nil){
G_257.func();
TMP_529=G_257.func();
TMP_528=lisp.values1(lisp.values1(TMP_529));
}else{
TMP_528=lisp.values1(lisp.S_nil);
}
L_THEN_FORM__316=lisp.values1(TMP_528);
{
TMP_530=G_349.func(L_D_VAR__313);
TMP_531=G_29.func(G_30,TMP_530);
TMP_532=lisp.CL_cons(TMP_531,lisp.symbolValue(G_12));
L_G176__317=lisp.values1(TMP_532);
lisp.setSymbolValue(G_12, lisp.values1(L_G176__317));
}
{
L_G177__318=lisp.values1(L_THEN_FORM__316);
if(lisp.values1(L_G177__318) !== lisp.S_nil){
TMP_534=lisp.callFunctionWithCallStack(G_54,G_517,L_D_VAR__313,L_EQUALS_FORM__315);
G_293.func(TMP_534);
TMP_535=G_289.func(G_517,L_D_VAR__313,L_THEN_FORM__316);
TMP_533=TMP_535;
}else{
TMP_536=G_285.func(G_517,L_D_VAR__313,L_EQUALS_FORM__315);
TMP_533=TMP_536;
}
}
}
return TMP_533;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_EQUALS_THEN=lisp.values1(F_PARSE_FOR_AS_EQUALS_THEN_518);
let F_PARSE_FOR_AS_BY_CLAUSE_537;
F_PARSE_FOR_AS_BY_CLAUSE_537=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_538, arguments.length);
}
let TMP_543;
let TMP_542;
let TMP_541;
let TMP_540;
let TMP_539;
TMP_539=G_263.func();
TMP_540=G_236.func(TMP_539);
TMP_541=lisp.CL_eq(TMP_540,G_438);
if(lisp.values1(TMP_541) !== lisp.S_nil){
G_257.func();
TMP_543=G_257.func();
TMP_542=TMP_543;
}else{
TMP_542=lisp.values1(lisp.S_nil);
}
return TMP_542;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_BY_CLAUSE=lisp.values1(F_PARSE_FOR_AS_BY_CLAUSE_537);
let F_FUNCTION_FORM_P_544;
F_FUNCTION_FORM_P_544=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_545, arguments.length);
}
let TMP_552;
let TMP_551;
let TMP_550;
let TMP_549;
let TMP_547;
let TMP_546;
let L_FORM__321;
L_FORM__321=arguments[0];
TMP_546=lisp.CL_consp(L_FORM__321);
if(lisp.values1(TMP_546) !== lisp.S_nil){
TMP_549=lisp.callFunctionWithCallStack(G_261,L_FORM__321);
TMP_550=lisp.CL_eq(G_548,TMP_549);
TMP_547=lisp.values1(TMP_550);
}else{
TMP_547=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_547) !== lisp.S_nil){
TMP_552=lisp.callFunctionWithCallStack(G_553,L_FORM__321);
TMP_551=TMP_552;
}else{
TMP_551=lisp.values1(lisp.S_nil);
}
return TMP_551;
});
CL_VALTAN_CORESLASHLOOP_FUNCTION_FORM_P=lisp.values1(F_FUNCTION_FORM_P_544);
let F_PARSE_BY_FORM_554;
F_PARSE_BY_FORM_554=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_555, arguments.length);
}
let TMP_571;
let TMP_570;
let TMP_569;
let TMP_567;
let TMP_566;
let L_FUNCTION_NAME__330;
let TMP_565;
let TMP_564;
let F_ONCE_ONLY_VALUE__329;
let TMP_556;
let L_VAR__324;
let L_BY_FORM__323;
L_BY_FORM__323=arguments[0];
L_VAR__324=arguments[1];
{
TMP_556=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G179__328;
let TMP_563;
let TMP_562;
let TMP_561;
let TMP_560;
let L_VAR__327;
let TMP_559;
let TMP_558;
let TMP_557;
let L_FORM__326;
L_FORM__326=arguments[0];
TMP_557=lisp.CL_consp(L_FORM__326);
if(lisp.values1(TMP_557) !== lisp.S_nil){
{
TMP_559=lisp.callFunctionWithCallStack(G_48);
L_VAR__327=lisp.values1(TMP_559);
{
TMP_560=lisp.callFunctionWithCallStack(G_54,L_VAR__327,L_FORM__326);
TMP_561=lisp.callFunctionWithCallStack(G_54,TMP_560);
TMP_562=G_29.func(G_30,TMP_561);
TMP_563=lisp.CL_cons(TMP_562,lisp.symbolValue(G_12));
L_G179__328=lisp.values1(TMP_563);
lisp.setSymbolValue(G_12, lisp.values1(L_G179__328));
}
}
TMP_558=lisp.values1(L_VAR__327);
}else{
TMP_558=lisp.values1(L_FORM__326);
}
return TMP_558;
});
F_ONCE_ONLY_VALUE__329=lisp.values1(TMP_556);
if(lisp.values1(L_BY_FORM__323) !== lisp.S_nil){
{
TMP_565=G_545.func(L_BY_FORM__323);
L_FUNCTION_NAME__330=lisp.values1(TMP_565);
if(lisp.values1(L_FUNCTION_NAME__330) !== lisp.S_nil){
TMP_567=lisp.callFunctionWithCallStack(G_54,L_FUNCTION_NAME__330,L_VAR__324);
TMP_566=TMP_567;
}else{
TMP_569=F_ONCE_ONLY_VALUE__329(L_BY_FORM__323);
TMP_570=lisp.callFunctionWithCallStack(G_54,G_568,TMP_569,L_VAR__324);
TMP_566=TMP_570;
}
}
TMP_564=TMP_566;
}else{
TMP_571=lisp.callFunctionWithCallStack(G_54,G_259,L_VAR__324);
TMP_564=TMP_571;
}
}
return TMP_564;
});
CL_VALTAN_CORESLASHLOOP_PARSE_BY_FORM=lisp.values1(F_PARSE_BY_FORM_554);
let F_PARSE_FOR_AS_IN_LIST_572;
F_PARSE_FOR_AS_IN_LIST_572=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_573, arguments.length);
}
let TMP_584;
let TMP_583;
let TMP_582;
let L_G180__336;
let TMP_581;
let TMP_580;
let TMP_579;
let TMP_578;
let TMP_577;
let L_TEMPORARY_VAR__335;
let TMP_576;
let L_BY_FORM__334;
let TMP_575;
let L_LIST_FORM__333;
let TMP_574;
let L_D_VAR__331;
L_D_VAR__331=arguments[0];
{
TMP_574=G_257.func();
L_LIST_FORM__333=lisp.values1(TMP_574);
TMP_575=G_538.func();
L_BY_FORM__334=lisp.values1(TMP_575);
TMP_576=lisp.callFunctionWithCallStack(G_48);
L_TEMPORARY_VAR__335=lisp.values1(TMP_576);
{
TMP_577=lisp.callFunctionWithCallStack(G_54,L_TEMPORARY_VAR__335,L_LIST_FORM__333);
TMP_578=G_349.func(L_D_VAR__331);
TMP_579=lisp.CL_cons(TMP_577,TMP_578);
TMP_580=G_29.func(G_30,TMP_579);
TMP_581=lisp.CL_cons(TMP_580,lisp.symbolValue(G_12));
L_G180__336=lisp.values1(TMP_581);
lisp.setSymbolValue(G_12, lisp.values1(L_G180__336));
}
TMP_582=G_555.func(L_BY_FORM__334,L_TEMPORARY_VAR__335);
G_289.func(G_507,L_TEMPORARY_VAR__335,TMP_582);
G_282.func(L_TEMPORARY_VAR__335);
TMP_583=lisp.callFunctionWithCallStack(G_54,G_261,L_TEMPORARY_VAR__335);
TMP_584=G_285.func(G_517,L_D_VAR__331,TMP_583);
}
return TMP_584;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_IN_LIST=lisp.values1(F_PARSE_FOR_AS_IN_LIST_572);
let F_PARSE_FOR_AS_ON_LIST_585;
F_PARSE_FOR_AS_ON_LIST_585=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_586, arguments.length);
}
let TMP_598;
let TMP_597;
let TMP_595;
let L_G181__342;
let TMP_594;
let TMP_593;
let TMP_592;
let TMP_591;
let TMP_590;
let L_TEMPORARY_VAR__341;
let TMP_589;
let L_BY_FORM__340;
let TMP_588;
let L_LIST_FORM__339;
let TMP_587;
let L_D_VAR__337;
L_D_VAR__337=arguments[0];
{
TMP_587=G_257.func();
L_LIST_FORM__339=lisp.values1(TMP_587);
TMP_588=G_538.func();
L_BY_FORM__340=lisp.values1(TMP_588);
TMP_589=lisp.callFunctionWithCallStack(G_48);
L_TEMPORARY_VAR__341=lisp.values1(TMP_589);
{
TMP_590=lisp.callFunctionWithCallStack(G_54,L_TEMPORARY_VAR__341,L_LIST_FORM__339);
TMP_591=G_349.func(L_D_VAR__337);
TMP_592=lisp.CL_cons(TMP_590,TMP_591);
TMP_593=G_29.func(G_30,TMP_592);
TMP_594=lisp.CL_cons(TMP_593,lisp.symbolValue(G_12));
L_G181__342=lisp.values1(TMP_594);
lisp.setSymbolValue(G_12, lisp.values1(L_G181__342));
}
TMP_595=G_555.func(L_BY_FORM__340,L_TEMPORARY_VAR__341);
G_289.func(G_507,L_TEMPORARY_VAR__341,TMP_595);
TMP_597=lisp.callFunctionWithCallStack(G_54,G_596,L_TEMPORARY_VAR__341);
G_282.func(TMP_597);
TMP_598=G_285.func(G_517,L_D_VAR__337,L_TEMPORARY_VAR__341);
}
return TMP_598;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ON_LIST=lisp.values1(F_PARSE_FOR_AS_ON_LIST_585);
let F_PARSE_FOR_AS_ACROSS_599;
F_PARSE_FOR_AS_ACROSS_599=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_600, arguments.length);
}
let TMP_617;
let TMP_616;
let TMP_615;
let TMP_614;
let TMP_612;
let L_G182__348;
let TMP_610;
let TMP_609;
let TMP_608;
let TMP_607;
let TMP_606;
let TMP_605;
let TMP_604;
let L_INDEX_VAR__347;
let TMP_603;
let L_VECTOR_VAR__346;
let TMP_602;
let L_VECTOR_FORM__345;
let TMP_601;
let L_D_VAR__343;
L_D_VAR__343=arguments[0];
{
TMP_601=G_257.func();
L_VECTOR_FORM__345=lisp.values1(TMP_601);
TMP_602=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([86, 69, 67, 84, 79, 82])));
L_VECTOR_VAR__346=lisp.values1(TMP_602);
TMP_603=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([73, 78, 68, 69, 88])));
L_INDEX_VAR__347=lisp.values1(TMP_603);
{
TMP_604=G_349.func(L_D_VAR__343);
TMP_605=lisp.callFunctionWithCallStack(G_54,L_VECTOR_VAR__346,L_VECTOR_FORM__345);
TMP_606=lisp.CL_cons(L_INDEX_VAR__347,lisp.makeCons(0, lisp.S_nil));
TMP_607=lisp.callFunctionWithCallStack(G_54,TMP_605,TMP_606);
TMP_608=lisp.callFunctionWithCallStack(G_380,TMP_604,TMP_607);
TMP_609=G_29.func(G_30,TMP_608);
TMP_610=lisp.CL_cons(TMP_609,lisp.symbolValue(G_12));
L_G182__348=lisp.values1(TMP_610);
lisp.setSymbolValue(G_12, lisp.values1(L_G182__348));
}
TMP_612=lisp.callFunctionWithCallStack(G_54,G_611,L_VECTOR_VAR__346,L_INDEX_VAR__347);
G_285.func(G_517,L_D_VAR__343,TMP_612);
TMP_614=lisp.callFunctionWithCallStack(G_54,G_613,L_VECTOR_VAR__346);
TMP_615=lisp.callFunctionWithCallStack(G_54,G_505,L_INDEX_VAR__347,TMP_614);
G_282.func(TMP_615);
TMP_616=lisp.callFunctionWithCallStack(G_56,G_511,L_INDEX_VAR__347,lisp.makeCons(1, lisp.S_nil));
TMP_617=G_285.func(G_507,L_INDEX_VAR__347,TMP_616);
}
return TMP_617;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ACROSS=lisp.values1(F_PARSE_FOR_AS_ACROSS_599);
let F_PARSE_FOR_AS_HASH_618;
F_PARSE_FOR_AS_HASH_618=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_619, arguments.length);
}
let L_G208__390;
let TMP_709;
let TMP_708;
let TMP_707;
let L_G207__389;
let TMP_706;
let TMP_705;
let L_G206__388;
let TMP_704;
let TMP_703;
let TMP_700;
let TMP_699;
let TMP_698;
let L_G205__387;
let TMP_695;
let TMP_694;
let L_G204__386;
let TMP_693;
let TMP_692;
let L_G203__385;
let TMP_691;
let TMP_690;
let L_G202__384;
let TMP_689;
let TMP_688;
let L_G201__383;
let TMP_687;
let TMP_686;
let L_G199__381;
let TMP_685;
let TMP_684;
let TMP_683;
let TMP_682;
let L_G198__380;
let L_G197__379;
let TMP_681;
let TMP_680;
let L_G195__377;
let TMP_679;
let TMP_678;
let TMP_677;
let TMP_676;
let L_G194__376;
let L_BINDINGS__375;
let L_HASH_VALUE_VAR__374;
let TMP_675;
let L_G193__373;
let TMP_674;
let L_G192__372;
let TMP_673;
let L_G191__371;
let TMP_672;
let L_G190__370;
let TMP_671;
let L_HASH_KEY_VAR__369;
let TMP_670;
let L_G189__368;
let TMP_669;
let L_G188__367;
let TMP_668;
let L_G187__366;
let TMP_667;
let L_G186__365;
let TMP_666;
let L_HASH_SECOND_TEMP__364;
let TMP_665;
let TMP_664;
let TMP_663;
let TMP_662;
let L_HASH_FIRST_TEMP__363;
let TMP_661;
let TMP_660;
let TMP_659;
let TMP_657;
let L_HASH_TABLE_NEXT__362;
let TMP_656;
let L_HASH_MORE_VAR__361;
let TMP_655;
let L_HASH_TABLE_VAR__360;
let TMP_654;
let L_HASH_SECOND_VAR__359;
let TMP_653;
let TMP_652;
let TMP_651;
let TMP_650;
let TMP_649;
let TMP_643;
let TMP_642;
let TMP_641;
let TMP_638;
let TMP_637;
let TMP_635;
let TMP_634;
let TMP_633;
let TMP_632;
let L_FORM__358;
let TMP_631;
let TMP_630;
let TMP_629;
let TMP_628;
let L_HASH_SECOND_VAR__357;
let L_HASH_TABLE__356;
let TMP_625;
let L_G184__353;
let TMP_624;
let L_G183__352;
let TMP_621;
let TMP_620;
let L_HASH_KEY_P__350;
let L_HASH_FIRST_VAR__349;
L_HASH_FIRST_VAR__349=arguments[0];
L_HASH_KEY_P__350=arguments[1];
G_257.func();
{
TMP_620=G_257.func();
TMP_621=G_236.func(TMP_620);
L_G183__352=lisp.values1(TMP_621);
{
TMP_624=lisp.callFunctionWithCallStack(G_322,L_G183__352,lisp.makeCons(G_622, lisp.makeCons(G_623, lisp.S_nil)));
L_G184__353=lisp.values1(TMP_624);
if(lisp.values1(L_G184__353) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G183__352,lisp.makeCons(G_622, lisp.makeCons(G_623, lisp.S_nil)));
}
}
}
{
TMP_625=G_257.func();
L_HASH_TABLE__356=lisp.values1(TMP_625);
L_HASH_SECOND_VAR__357=lisp.values1(G_626);
TMP_628=G_263.func();
TMP_629=G_236.func(TMP_628);
TMP_630=lisp.CL_eq(G_627,TMP_629);
if(lisp.values1(TMP_630) !== lisp.S_nil){
G_257.func();
{
TMP_631=G_257.func();
L_FORM__358=lisp.values1(TMP_631);
TMP_632=lisp.CL_consp(L_FORM__358);
if(lisp.values1(TMP_632) !== lisp.S_nil){
TMP_634=lisp.callFunctionWithCallStack(G_613,L_FORM__358);
TMP_635=lisp.callFunctionWithCallStack(G_636,2,TMP_634);
if(lisp.values1(TMP_635) !== lisp.S_nil){
if(lisp.values1(L_HASH_KEY_P__350) !== lisp.S_nil){
TMP_638=lisp.values1(G_639);
}else{
TMP_638=lisp.values1(G_640);
}
TMP_641=lisp.callFunctionWithCallStack(G_261,L_FORM__358);
TMP_642=G_236.func(TMP_641);
TMP_643=lisp.CL_eq(TMP_638,TMP_642);
TMP_637=lisp.values1(TMP_643);
}else{
TMP_637=lisp.values1(lisp.S_nil);
}
TMP_633=lisp.values1(TMP_637);
}else{
TMP_633=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_633) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),lisp.makeCons(G_644, lisp.makeCons(lisp.makeCons(G_596, lisp.makeCons(G_645, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_636, lisp.makeCons(2, lisp.makeCons(lisp.makeCons(G_613, lisp.makeCons(G_645, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_646, lisp.makeCons(lisp.makeCons(G_647, lisp.makeCons(G_648, lisp.makeCons(G_639, lisp.makeCons(G_640, lisp.S_nil)))), lisp.makeCons(lisp.makeCons(G_236, lisp.makeCons(lisp.makeCons(G_261, lisp.makeCons(G_645, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))), lisp.S_nil)))));
}
TMP_649=lisp.callFunctionWithCallStack(G_553,L_FORM__358);
L_HASH_SECOND_VAR__357=lisp.values1(TMP_649);
}
}else{
}
{
TMP_650=lisp.CL_eq(L_HASH_SECOND_VAR__357,G_626);
if(lisp.values1(TMP_650) !== lisp.S_nil){
if(lisp.values1(L_HASH_KEY_P__350) !== lisp.S_nil){
TMP_652=lisp.values1(G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 86, 65, 76, 85, 69])));
}else{
TMP_652=lisp.values1(G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 75, 69, 89])));
}
TMP_653=lisp.callFunctionWithCallStack(G_48,TMP_652);
TMP_651=lisp.values1(TMP_653);
}else{
TMP_651=lisp.values1(L_HASH_SECOND_VAR__357);
}
L_HASH_SECOND_VAR__359=lisp.values1(TMP_651);
TMP_654=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 84, 65, 66, 76, 69])));
L_HASH_TABLE_VAR__360=lisp.values1(TMP_654);
TMP_655=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 77, 79, 82, 69])));
L_HASH_MORE_VAR__361=lisp.values1(TMP_655);
TMP_656=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 78, 69, 88, 84])));
L_HASH_TABLE_NEXT__362=lisp.values1(TMP_656);
TMP_657=lisp.callFunctionWithCallStack(G_658,L_HASH_FIRST_VAR__349);
if(lisp.values1(TMP_657) !== lisp.S_nil){
if(lisp.values1(L_HASH_KEY_P__350) !== lisp.S_nil){
TMP_660=lisp.values1(G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 75, 69, 89, 45, 84, 69, 77, 80])));
}else{
TMP_660=lisp.values1(G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 86, 65, 76, 85, 69, 45, 84, 69, 77, 80])));
}
TMP_661=lisp.callFunctionWithCallStack(G_48,TMP_660);
TMP_659=lisp.values1(TMP_661);
}else{
TMP_659=lisp.values1(lisp.S_nil);
}
L_HASH_FIRST_TEMP__363=lisp.values1(TMP_659);
TMP_662=lisp.callFunctionWithCallStack(G_658,L_HASH_SECOND_VAR__359);
if(lisp.values1(TMP_662) !== lisp.S_nil){
if(lisp.values1(L_HASH_KEY_P__350) !== lisp.S_nil){
TMP_664=lisp.values1(G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 86, 65, 76, 85, 69, 45, 84, 69, 77, 80])));
}else{
TMP_664=lisp.values1(G_51.func(lisp.codeArrayToString([72, 65, 83, 72, 45, 75, 69, 89, 45, 84, 69, 77, 80])));
}
TMP_665=lisp.callFunctionWithCallStack(G_48,TMP_664);
TMP_663=lisp.values1(TMP_665);
}else{
TMP_663=lisp.values1(lisp.S_nil);
}
L_HASH_SECOND_TEMP__364=lisp.values1(TMP_663);
if(lisp.values1(L_HASH_KEY_P__350) !== lisp.S_nil){
{
L_G186__365=lisp.values1(L_HASH_FIRST_TEMP__363);
if(lisp.values1(L_G186__365) !== lisp.S_nil){
TMP_667=lisp.values1(L_G186__365);
}else{
{
L_G187__366=lisp.values1(L_HASH_FIRST_VAR__349);
if(lisp.values1(L_G187__366) !== lisp.S_nil){
TMP_668=lisp.values1(L_G187__366);
}else{
TMP_668=lisp.values1(lisp.S_nil);
}
}
TMP_667=lisp.values1(lisp.values1(TMP_668));
}
}
TMP_666=lisp.values1(lisp.values1(TMP_667));
}else{
{
L_G188__367=lisp.values1(L_HASH_SECOND_TEMP__364);
if(lisp.values1(L_G188__367) !== lisp.S_nil){
TMP_669=lisp.values1(L_G188__367);
}else{
{
L_G189__368=lisp.values1(L_HASH_SECOND_VAR__359);
if(lisp.values1(L_G189__368) !== lisp.S_nil){
TMP_670=lisp.values1(L_G189__368);
}else{
TMP_670=lisp.values1(lisp.S_nil);
}
}
TMP_669=lisp.values1(lisp.values1(TMP_670));
}
}
TMP_666=lisp.values1(lisp.values1(TMP_669));
}
L_HASH_KEY_VAR__369=lisp.values1(TMP_666);
if(lisp.values1(L_HASH_KEY_P__350) !== lisp.S_nil){
{
L_G190__370=lisp.values1(L_HASH_SECOND_TEMP__364);
if(lisp.values1(L_G190__370) !== lisp.S_nil){
TMP_672=lisp.values1(L_G190__370);
}else{
{
L_G191__371=lisp.values1(L_HASH_SECOND_VAR__359);
if(lisp.values1(L_G191__371) !== lisp.S_nil){
TMP_673=lisp.values1(L_G191__371);
}else{
TMP_673=lisp.values1(lisp.S_nil);
}
}
TMP_672=lisp.values1(lisp.values1(TMP_673));
}
}
TMP_671=lisp.values1(lisp.values1(TMP_672));
}else{
{
L_G192__372=lisp.values1(L_HASH_FIRST_TEMP__363);
if(lisp.values1(L_G192__372) !== lisp.S_nil){
TMP_674=lisp.values1(L_G192__372);
}else{
{
L_G193__373=lisp.values1(L_HASH_FIRST_VAR__349);
if(lisp.values1(L_G193__373) !== lisp.S_nil){
TMP_675=lisp.values1(L_G193__373);
}else{
TMP_675=lisp.values1(lisp.S_nil);
}
}
TMP_674=lisp.values1(lisp.values1(TMP_675));
}
}
TMP_671=lisp.values1(lisp.values1(TMP_674));
}
L_HASH_VALUE_VAR__374=lisp.values1(TMP_671);
{
L_BINDINGS__375=lisp.values1(lisp.S_nil);
{
L_G194__376=lisp.values1(L_HASH_FIRST_TEMP__363);
if(lisp.values1(L_G194__376) !== lisp.S_nil){
TMP_676=G_349.func(L_HASH_FIRST_VAR__349);
TMP_677=lisp.callFunctionWithCallStack(G_407,L_BINDINGS__375,TMP_676);
L_BINDINGS__375=lisp.values1(TMP_677);
{
TMP_678=lisp.callFunctionWithCallStack(G_54,L_HASH_FIRST_TEMP__363,lisp.S_nil);
TMP_679=lisp.CL_cons(TMP_678,L_BINDINGS__375);
L_G195__377=lisp.values1(TMP_679);
L_BINDINGS__375=lisp.values1(L_G195__377);
}
}else{
{
TMP_680=lisp.callFunctionWithCallStack(G_54,L_HASH_FIRST_VAR__349,lisp.S_nil);
TMP_681=lisp.CL_cons(TMP_680,L_BINDINGS__375);
L_G197__379=lisp.values1(TMP_681);
L_BINDINGS__375=lisp.values1(L_G197__379);
}
}
}
{
L_G198__380=lisp.values1(L_HASH_SECOND_TEMP__364);
if(lisp.values1(L_G198__380) !== lisp.S_nil){
TMP_682=G_349.func(L_HASH_SECOND_VAR__359);
TMP_683=lisp.callFunctionWithCallStack(G_407,L_BINDINGS__375,TMP_682);
L_BINDINGS__375=lisp.values1(TMP_683);
{
TMP_684=lisp.callFunctionWithCallStack(G_54,L_HASH_SECOND_TEMP__364,lisp.S_nil);
TMP_685=lisp.CL_cons(TMP_684,L_BINDINGS__375);
L_G199__381=lisp.values1(TMP_685);
L_BINDINGS__375=lisp.values1(L_G199__381);
}
}else{
{
TMP_686=lisp.callFunctionWithCallStack(G_54,L_HASH_SECOND_VAR__359,lisp.S_nil);
TMP_687=lisp.CL_cons(TMP_686,L_BINDINGS__375);
L_G201__383=lisp.values1(TMP_687);
L_BINDINGS__375=lisp.values1(L_G201__383);
}
}
}
{
TMP_688=lisp.callFunctionWithCallStack(G_54,L_HASH_TABLE_VAR__360,L_HASH_TABLE__356);
TMP_689=lisp.CL_cons(TMP_688,L_BINDINGS__375);
L_G202__384=lisp.values1(TMP_689);
L_BINDINGS__375=lisp.values1(L_G202__384);
}
{
TMP_690=lisp.callFunctionWithCallStack(G_54,L_HASH_MORE_VAR__361,lisp.S_nil);
TMP_691=lisp.CL_cons(TMP_690,L_BINDINGS__375);
L_G203__385=lisp.values1(TMP_691);
L_BINDINGS__375=lisp.values1(L_G203__385);
}
{
TMP_692=G_29.func(G_30,L_BINDINGS__375);
TMP_693=lisp.CL_cons(TMP_692,lisp.symbolValue(G_12));
L_G204__386=lisp.values1(TMP_693);
lisp.setSymbolValue(G_12, lisp.values1(L_G204__386));
}
}
{
TMP_694=lisp.CL_cons(L_HASH_TABLE_NEXT__362,L_HASH_TABLE_VAR__360);
TMP_695=lisp.CL_cons(TMP_694,lisp.symbolValue(G_17));
L_G205__387=lisp.values1(TMP_695);
lisp.setSymbolValue(G_17, lisp.values1(L_G205__387));
}
{
TMP_698=lisp.callFunctionWithCallStack(G_54,L_HASH_MORE_VAR__361,L_HASH_KEY_VAR__369,L_HASH_VALUE_VAR__374);
TMP_699=lisp.callFunctionWithCallStack(G_54,L_HASH_TABLE_NEXT__362);
TMP_700=lisp.callFunctionWithCallStack(G_54,G_697,TMP_698,TMP_699);
TMP_703=lisp.callFunctionWithCallStack(G_56,G_696,TMP_700,lisp.makeCons(lisp.makeCons(G_701, lisp.makeCons(G_702, lisp.S_nil)), lisp.S_nil));
TMP_704=lisp.CL_cons(TMP_703,lisp.symbolValue(G_18));
L_G206__388=lisp.values1(TMP_704);
lisp.setSymbolValue(G_18, lisp.values1(L_G206__388));
}
if(lisp.values1(L_HASH_FIRST_TEMP__363) !== lisp.S_nil){
{
TMP_705=lisp.callFunctionWithCallStack(G_54,G_517,L_HASH_FIRST_VAR__349,L_HASH_FIRST_TEMP__363);
TMP_706=lisp.CL_cons(TMP_705,lisp.symbolValue(G_18));
L_G207__389=lisp.values1(TMP_706);
lisp.setSymbolValue(G_18, lisp.values1(L_G207__389));
}
}else{
}
if(lisp.values1(L_HASH_SECOND_TEMP__364) !== lisp.S_nil){
{
TMP_708=lisp.callFunctionWithCallStack(G_54,G_517,L_HASH_SECOND_VAR__359,L_HASH_SECOND_TEMP__364);
TMP_709=lisp.CL_cons(TMP_708,lisp.symbolValue(G_18));
L_G208__390=lisp.values1(TMP_709);
lisp.setSymbolValue(G_18, lisp.values1(L_G208__390));
}
TMP_707=lisp.values1(G_18.value);
}else{
TMP_707=lisp.values1(lisp.S_nil);
}
}
}
return TMP_707;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_HASH=lisp.values1(F_PARSE_FOR_AS_HASH_618);
let F_PARSE_FOR_AS_HASH_OR_PACKAGE_710;
F_PARSE_FOR_AS_HASH_OR_PACKAGE_710=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_711, arguments.length);
}
let TMP_727;
let TMP_726;
let TMP_725;
let L_G214__398;
let TMP_724;
let TMP_722;
let TMP_721;
let L_G213__397;
let TMP_720;
let L_G212__396;
let TMP_718;
let TMP_717;
let L_G210__394;
let TMP_716;
let L_G209__393;
let TMP_713;
let TMP_712;
let L_VAR__391;
L_VAR__391=arguments[0];
{
TMP_712=G_263.func();
TMP_713=G_236.func(TMP_712);
L_G209__393=lisp.values1(TMP_713);
{
TMP_716=lisp.callFunctionWithCallStack(G_322,L_G209__393,lisp.makeCons(G_714, lisp.makeCons(G_715, lisp.S_nil)));
L_G210__394=lisp.values1(TMP_716);
if(lisp.values1(L_G210__394) !== lisp.S_nil){
G_257.func();
}else{
lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G209__393,lisp.makeCons(G_714, lisp.makeCons(G_715, lisp.S_nil)));
}
}
}
{
TMP_717=G_263.func();
TMP_718=G_236.func(TMP_717);
L_G212__396=lisp.values1(TMP_718);
{
TMP_720=lisp.callFunctionWithCallStack(G_322,L_G212__396,lisp.makeCons(G_640, lisp.makeCons(G_719, lisp.S_nil)));
L_G213__397=lisp.values1(TMP_720);
if(lisp.values1(L_G213__397) !== lisp.S_nil){
TMP_722=G_619.func(L_VAR__391,G_4);
TMP_721=TMP_722;
}else{
{
TMP_724=lisp.callFunctionWithCallStack(G_322,L_G212__396,lisp.makeCons(G_723, lisp.makeCons(G_639, lisp.S_nil)));
L_G214__398=lisp.values1(TMP_724);
if(lisp.values1(L_G214__398) !== lisp.S_nil){
TMP_726=G_619.func(L_VAR__391,lisp.S_nil);
TMP_725=TMP_726;
}else{
TMP_727=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G212__396,lisp.makeCons(G_640, lisp.makeCons(G_719, lisp.makeCons(G_723, lisp.makeCons(G_639, lisp.S_nil)))));
TMP_725=TMP_727;
}
}
TMP_721=TMP_725;
}
}
}
return TMP_721;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_HASH_OR_PACKAGE=lisp.values1(F_PARSE_FOR_AS_HASH_OR_PACKAGE_710);
let F_PARSE_FOR_AS_CLAUSE_1_728;
F_PARSE_FOR_AS_CLAUSE_1_728=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_729, arguments.length);
}
let TMP_771;
let TMP_770;
let TMP_769;
let TMP_768;
let F_CONSTRUCT_BINDINGS__429;
let TMP_762;
let F_CONSTRUCT_UPDATE_FORMS__427;
let TMP_744;
let TMP_743;
let TMP_742;
let TMP_741;
let L_G227__411;
let TMP_740;
let L_G226__410;
let TMP_738;
let L_G225__409;
let TMP_736;
let L_G224__408;
let TMP_734;
let L_G223__407;
let TMP_733;
let L_G222__406;
let TMP_732;
let TMP_731;
let L_VAR__405;
let TMP_730;
let BLOCK_RESULT_NIL__404;
let save_STARBINDINGSSTAR__403;
let save_STARAFTER_UPDATE_FORMSSTAR__402;
let save_STARBEFORE_UPDATE_FORMSSTAR__401;
{
save_STARBEFORE_UPDATE_FORMSSTAR__401=G_9.value;
G_9.value=lisp.values1(lisp.S_nil);
save_STARAFTER_UPDATE_FORMSSTAR__402=G_10.value;
G_10.value=lisp.values1(lisp.S_nil);
save_STARBINDINGSSTAR__403=G_12.value;
G_12.value=lisp.values1(lisp.S_nil);
try{
BLOCK_NIL__404: for(;;){for(;;){
{
TMP_730=G_257.func();
L_VAR__405=lisp.values1(TMP_730);
G_317.func();
{
TMP_731=G_263.func();
TMP_732=G_248.func(TMP_731);
L_G222__406=lisp.values1(TMP_732);
{
TMP_733=lisp.callFunctionWithCallStack(G_322,L_G222__406,lisp.makeCons(G_395, lisp.S_nil));
L_G223__407=lisp.values1(TMP_733);
if(lisp.values1(L_G223__407) !== lisp.S_nil){
G_257.func();
G_519.func(L_VAR__405);
}else{
{
TMP_734=lisp.callFunctionWithCallStack(G_322,L_G222__406,lisp.makeCons(G_622, lisp.S_nil));
L_G224__408=lisp.values1(TMP_734);
if(lisp.values1(L_G224__408) !== lisp.S_nil){
G_257.func();
G_573.func(L_VAR__405);
}else{
{
TMP_736=lisp.callFunctionWithCallStack(G_322,L_G222__406,lisp.makeCons(G_735, lisp.S_nil));
L_G225__409=lisp.values1(TMP_736);
if(lisp.values1(L_G225__409) !== lisp.S_nil){
G_257.func();
G_586.func(L_VAR__405);
}else{
{
TMP_738=lisp.callFunctionWithCallStack(G_322,L_G222__406,lisp.makeCons(G_737, lisp.S_nil));
L_G226__410=lisp.values1(TMP_738);
if(lisp.values1(L_G226__410) !== lisp.S_nil){
G_257.func();
G_600.func(L_VAR__405);
}else{
{
TMP_740=lisp.callFunctionWithCallStack(G_322,L_G222__406,lisp.makeCons(G_739, lisp.S_nil));
L_G227__411=lisp.values1(TMP_740);
if(lisp.values1(L_G227__411) !== lisp.S_nil){
G_257.func();
G_711.func(L_VAR__405);
}else{
G_427.func(L_VAR__405);
}
}
}
}
}
}
}
}
}
}
}
}
TMP_741=G_263.func();
TMP_742=G_236.func(TMP_741);
TMP_743=lisp.CL_eq(TMP_742,G_414);
if(lisp.values1(TMP_743) !== lisp.S_nil){
G_257.func();
}else{
BLOCK_RESULT_NIL__404=lisp.values1(lisp.S_nil);
break BLOCK_NIL__404;
}
continue;
break;
}
BLOCK_RESULT_NIL__404=lisp.values1(lisp.S_nil);
break;
}
{
TMP_744=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_761;
let TMP_760;
let L_VALUE__424;
let TMP_758;
let L_G239__423;
let TMP_757;
let L_VAR__422;
let TMP_756;
let L_G238__421;
let TMP_754;
let L_SET__420;
let TMP_752;
let L_G236__418;
let TMP_751;
let L_UPDATE_FORM__417;
let TMP_750;
let TMP_749;
let L_G229__416;
let TMP_748;
let L_LAST_FORM__414;
let TMP_747;
let TMP_746;
let TMP_745;
let L_UPDATE_FORMS__413;
L_UPDATE_FORMS__413=arguments[0];
TMP_745=lisp.callFunctionWithCallStack(G_268,L_UPDATE_FORMS__413);
if(lisp.values1(TMP_745) !== lisp.S_nil){
TMP_746=lisp.values1(lisp.S_nil);
}else{
{
TMP_747=lisp.callFunctionWithCallStack(G_261,L_UPDATE_FORMS__413);
L_LAST_FORM__414=lisp.values1(TMP_747);
{
TMP_748=lisp.callFunctionWithCallStack(G_259,L_UPDATE_FORMS__413);
L_G229__416=lisp.values1(TMP_748);
for(;;){
TMP_749=lisp.callFunctionWithCallStack(G_421,L_G229__416);
if(lisp.values1(TMP_749) !== lisp.S_nil){
}else{
{
TMP_750=lisp.callFunctionWithCallStack(G_261,L_G229__416);
L_UPDATE_FORM__417=lisp.values1(TMP_750);
TMP_751=lisp.callFunctionWithCallStack(G_259,L_G229__416);
L_G229__416=lisp.values1(TMP_751);
{
L_G236__418=lisp.values1(L_UPDATE_FORM__417);
{
TMP_752=lisp.callFunctionWithCallStack(G_753,L_G236__418);
L_SET__420=lisp.values1(TMP_752);
TMP_754=lisp.callFunctionWithCallStack(G_755,L_G236__418);
L_G238__421=lisp.values1(TMP_754);
TMP_756=lisp.callFunctionWithCallStack(G_753,L_G238__421);
L_VAR__422=lisp.values1(TMP_756);
TMP_757=lisp.callFunctionWithCallStack(G_755,L_G238__421);
L_G239__423=lisp.values1(TMP_757);
TMP_758=lisp.callFunctionWithCallStack(G_753,L_G239__423);
L_VALUE__424=lisp.values1(TMP_758);
TMP_760=lisp.callFunctionWithCallStack(G_54,G_759,L_VALUE__424,L_LAST_FORM__414);
TMP_761=lisp.callFunctionWithCallStack(G_54,L_SET__420,L_VAR__422,TMP_760);
L_LAST_FORM__414=lisp.values1(TMP_761);
}
}
}
continue;
}
break;
}
}
}
TMP_746=lisp.values1(L_LAST_FORM__414);
}
return TMP_746;
});
F_CONSTRUCT_UPDATE_FORMS__427=lisp.values1(TMP_744);
TMP_762=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_767;
let TMP_765;
let TMP_764;
let TMP_763;
let L_BINDINGS__428;
L_BINDINGS__428=arguments[0];
TMP_763=lisp.CL_symbolFunction(G_35);
TMP_764=lisp.callFunctionWithCallStack(G_345,L_BINDINGS__428);
TMP_765=lisp.callFunctionWithCallStack(G_766,TMP_763,TMP_764);
TMP_767=G_29.func(G_30,TMP_765);
return TMP_767;
});
F_CONSTRUCT_BINDINGS__429=lisp.values1(TMP_762);
TMP_768=F_CONSTRUCT_UPDATE_FORMS__427(lisp.symbolValue(G_9));
TMP_769=F_CONSTRUCT_UPDATE_FORMS__427(lisp.symbolValue(G_10));
TMP_770=F_CONSTRUCT_BINDINGS__429(lisp.symbolValue(G_12));
TMP_771=lisp.CL_values(TMP_768,TMP_769,TMP_770);
}
}finally{
G_12.value=save_STARBINDINGSSTAR__403;
G_10.value=save_STARAFTER_UPDATE_FORMSSTAR__402;
G_9.value=save_STARBEFORE_UPDATE_FORMSSTAR__401;
}
}
return TMP_771;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_CLAUSE_1=lisp.values1(F_PARSE_FOR_AS_CLAUSE_1_728);
let F_PARSE_FOR_AS_CLAUSE_772;
F_PARSE_FOR_AS_CLAUSE_772=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_773, arguments.length);
}
let TMP_782;
let TMP_781;
let TMP_779;
let TMP_774;
TMP_774=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G244__437;
let TMP_778;
let TMP_777;
let L_G243__436;
let TMP_776;
let L_G242__435;
let TMP_775;
let L_G241__434;
let L_BINDINGS__433;
let L_AFTER_UPDATE_FORM__432;
let L_BEFORE_UPDATE_FORM__431;
L_BEFORE_UPDATE_FORM__431=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_AFTER_UPDATE_FORM__432=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_BINDINGS__433=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_G241__434=lisp.jsArrayToList(arguments, 3);
if(lisp.values1(L_BEFORE_UPDATE_FORM__431) !== lisp.S_nil){
{
TMP_775=lisp.CL_cons(L_BEFORE_UPDATE_FORM__431,lisp.symbolValue(G_9));
L_G242__435=lisp.values1(TMP_775);
lisp.setSymbolValue(G_9, lisp.values1(L_G242__435));
}
}else{
}
if(lisp.values1(L_AFTER_UPDATE_FORM__432) !== lisp.S_nil){
{
TMP_776=lisp.CL_cons(L_AFTER_UPDATE_FORM__432,lisp.symbolValue(G_10));
L_G243__436=lisp.values1(TMP_776);
lisp.setSymbolValue(G_10, lisp.values1(L_G243__436));
}
}else{
}
if(lisp.values1(L_BINDINGS__433) !== lisp.S_nil){
{
TMP_778=lisp.CL_cons(L_BINDINGS__433,lisp.symbolValue(G_12));
L_G244__437=lisp.values1(TMP_778);
lisp.setSymbolValue(G_12, lisp.values1(L_G244__437));
}
TMP_777=lisp.values1(G_12.value);
}else{
TMP_777=lisp.values1(lisp.S_nil);
}
return TMP_777;
});
TMP_779=lisp.callFunctionWithCallStack(G_780,TMP_774);
TMP_781=G_729.func();
TMP_782=lisp.CL_multipleValueCall(TMP_779,TMP_781);
return TMP_782;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_CLAUSE=lisp.values1(F_PARSE_FOR_AS_CLAUSE_772);
let F_PARSE_INITIAL_FINAL_CLAUSE_783;
F_PARSE_INITIAL_FINAL_CLAUSE_783=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_784, arguments.length);
}
let TMP_792;
let TMP_791;
let L_G247__442;
let TMP_790;
let TMP_788;
let TMP_787;
let L_G246__441;
let TMP_786;
let L_G245__440;
let L_EXP__438;
L_EXP__438=arguments[0];
{
L_G245__440=lisp.values1(L_EXP__438);
{
TMP_786=lisp.callFunctionWithCallStack(G_322,L_G245__440,lisp.makeCons(G_785, lisp.S_nil));
L_G246__441=lisp.values1(TMP_786);
if(lisp.values1(L_G246__441) !== lisp.S_nil){
G_257.func();
TMP_788=G_338.func();
G_296.func(TMP_788);
TMP_787=lisp.values1(G_4);
}else{
{
TMP_790=lisp.callFunctionWithCallStack(G_322,L_G245__440,lisp.makeCons(G_789, lisp.S_nil));
L_G247__442=lisp.values1(TMP_790);
if(lisp.values1(L_G247__442) !== lisp.S_nil){
G_257.func();
TMP_792=G_338.func();
G_304.func(TMP_792);
TMP_791=lisp.values1(G_4);
}else{
TMP_791=lisp.values1(lisp.S_nil);
}
}
TMP_787=TMP_791;
}
}
}
return TMP_787;
});
CL_VALTAN_CORESLASHLOOP_PARSE_INITIAL_FINAL_CLAUSE=lisp.values1(F_PARSE_INITIAL_FINAL_CLAUSE_783);
let F_PARSE_VARIABLE_CLAUSE_793;
F_PARSE_VARIABLE_CLAUSE_793=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_794, arguments.length);
}
let TMP_804;
let TMP_803;
let L_G250__447;
let TMP_802;
let TMP_799;
let L_G249__446;
let TMP_798;
let L_G248__445;
let L_EXP__444;
let TMP_796;
let TMP_795;
{
TMP_795=G_263.func();
TMP_796=G_236.func(TMP_795);
L_EXP__444=lisp.values1(TMP_796);
{
L_G248__445=lisp.values1(L_EXP__444);
{
TMP_798=lisp.callFunctionWithCallStack(G_322,L_G248__445,lisp.makeCons(G_797, lisp.S_nil));
L_G249__446=lisp.values1(TMP_798);
if(lisp.values1(L_G249__446) !== lisp.S_nil){
G_257.func();
G_390.func();
TMP_799=lisp.values1(G_4);
}else{
{
TMP_802=lisp.callFunctionWithCallStack(G_322,L_G248__445,lisp.makeCons(G_800, lisp.makeCons(G_801, lisp.S_nil)));
L_G250__447=lisp.values1(TMP_802);
if(lisp.values1(L_G250__447) !== lisp.S_nil){
G_257.func();
G_773.func();
TMP_803=lisp.values1(G_4);
}else{
TMP_804=G_784.func(L_EXP__444);
TMP_803=TMP_804;
}
}
TMP_799=TMP_803;
}
}
}
}
return TMP_799;
});
CL_VALTAN_CORESLASHLOOP_PARSE_VARIABLE_CLAUSE=lisp.values1(F_PARSE_VARIABLE_CLAUSE_793);
let F_PARSE_DOING_CLAUSE_805;
F_PARSE_DOING_CLAUSE_805=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_806, arguments.length);
}
let TMP_809;
let L_FORMS__450;
let TMP_807;
{
TMP_807=G_338.func();
L_FORMS__450=lisp.values1(TMP_807);
TMP_809=lisp.CL_cons(G_808,L_FORMS__450);
}
return TMP_809;
});
CL_VALTAN_CORESLASHLOOP_PARSE_DOING_CLAUSE=lisp.values1(F_PARSE_DOING_CLAUSE_805);
let F_PARSE_FORM_OR_IT_810;
F_PARSE_FORM_OR_IT_810=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_811, arguments.length);
}
let TMP_819;
let L_G253__454;
let TMP_818;
let L_G252__453;
let TMP_817;
let TMP_816;
let TMP_815;
let TMP_814;
let L_EXP__452;
let TMP_812;
{
TMP_812=G_257.func();
L_EXP__452=lisp.values1(TMP_812);
TMP_814=G_236.func(L_EXP__452);
TMP_815=lisp.CL_eq(G_813,TMP_814);
if(lisp.values1(TMP_815) !== lisp.S_nil){
{
TMP_817=G_332.func();
L_G252__453=lisp.values1(TMP_817);
if(lisp.values1(L_G252__453) !== lisp.S_nil){
TMP_818=lisp.values1(L_G252__453);
}else{
{
L_G253__454=lisp.values1(L_EXP__452);
if(lisp.values1(L_G253__454) !== lisp.S_nil){
TMP_819=lisp.values1(L_G253__454);
}else{
TMP_819=lisp.values1(lisp.S_nil);
}
}
TMP_818=TMP_819;
}
}
TMP_816=TMP_818;
}else{
TMP_816=lisp.values1(L_EXP__452);
}
}
return TMP_816;
});
CL_VALTAN_CORESLASHLOOP_PARSE_FORM_OR_IT=lisp.values1(F_PARSE_FORM_OR_IT_810);
let F_PARSE_RETURN_CLAUSE_820;
F_PARSE_RETURN_CLAUSE_820=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_821, arguments.length);
}
let TMP_824;
let TMP_823;
TMP_823=G_811.func();
TMP_824=lisp.callFunctionWithCallStack(G_54,G_822,TMP_823);
return TMP_824;
});
CL_VALTAN_CORESLASHLOOP_PARSE_RETURN_CLAUSE=lisp.values1(F_PARSE_RETURN_CLAUSE_820);
let F_PARSE_UNCONDITIONAL_CLAUSE_825;
F_PARSE_UNCONDITIONAL_CLAUSE_825=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_826, arguments.length);
}
let TMP_835;
let TMP_834;
let L_G256__460;
let TMP_833;
let TMP_831;
let TMP_830;
let L_G255__459;
let TMP_829;
let L_G254__458;
let L_EXP__456;
L_EXP__456=arguments[0];
{
L_G254__458=lisp.values1(L_EXP__456);
{
TMP_829=lisp.callFunctionWithCallStack(G_322,L_G254__458,lisp.makeCons(G_827, lisp.makeCons(G_828, lisp.S_nil)));
L_G255__459=lisp.values1(TMP_829);
if(lisp.values1(L_G255__459) !== lisp.S_nil){
G_257.func();
TMP_831=G_806.func();
TMP_830=TMP_831;
}else{
{
TMP_833=lisp.callFunctionWithCallStack(G_322,L_G254__458,lisp.makeCons(G_832, lisp.S_nil));
L_G256__460=lisp.values1(TMP_833);
if(lisp.values1(L_G256__460) !== lisp.S_nil){
G_257.func();
TMP_835=G_821.func();
TMP_834=TMP_835;
}else{
TMP_834=lisp.values1(lisp.S_nil);
}
}
TMP_830=TMP_834;
}
}
}
return TMP_830;
});
CL_VALTAN_CORESLASHLOOP_PARSE_UNCONDITIONAL_CLAUSE=lisp.values1(F_PARSE_UNCONDITIONAL_CLAUSE_825);
let F_PARSE_INTO_CLAUSE_836;
F_PARSE_INTO_CLAUSE_836=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_837, arguments.length);
}
let L_VAR__463;
let TMP_843;
let TMP_842;
let TMP_841;
let TMP_839;
let TMP_838;
TMP_838=G_263.func();
TMP_839=G_236.func(TMP_838);
TMP_841=lisp.CL_eq(TMP_839,G_840);
if(lisp.values1(TMP_841) !== lisp.S_nil){
G_257.func();
{
TMP_843=G_257.func();
L_VAR__463=lisp.values1(TMP_843);
G_270.func(L_VAR__463);
}
TMP_842=lisp.values1(L_VAR__463);
}else{
TMP_842=lisp.values1(lisp.S_nil);
}
return TMP_842;
});
CL_VALTAN_CORESLASHLOOP_PARSE_INTO_CLAUSE=lisp.values1(F_PARSE_INTO_CLAUSE_836);
let F_PARSE_COLLECT_CLAUSE_845;
F_PARSE_COLLECT_CLAUSE_845=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_846, arguments.length);
}
let TMP_860;
let TMP_859;
let TMP_858;
let L_LIST_COLLECTOR__477;
let L_G_STORE266__476;
let TMP_856;
let L_G265__475;
let L_G264__474;
let L_ACCUMULATOR__473;
let TMP_855;
let TMP_854;
let TMP_853;
let TMP_852;
let TMP_851;
let L_G262__471;
let L_INTO261__470;
let L_KIND260__469;
let L_KINDSLASHACCUMULATOR259__468;
let TMP_849;
let L_INTO__467;
let TMP_848;
let L_FORM_OR_IT__466;
let TMP_847;
let L_KIND__464;
L_KIND__464=arguments[0];
{
TMP_847=G_811.func();
L_FORM_OR_IT__466=lisp.values1(TMP_847);
TMP_848=G_837.func();
L_INTO__467=lisp.values1(TMP_848);
{
{
TMP_849=lisp.callFunctionWithCallStack(G_850,L_INTO__467,lisp.symbolValue(G_16));
L_KINDSLASHACCUMULATOR259__468=lisp.values1(TMP_849);
L_KIND260__469=lisp.values1(L_KIND__464);
L_INTO261__470=lisp.values1(L_INTO__467);
{
L_G262__471=lisp.values1(L_KINDSLASHACCUMULATOR259__468);
if(lisp.values1(L_G262__471) !== lisp.S_nil){
TMP_852=lisp.callFunctionWithCallStack(G_259,L_KINDSLASHACCUMULATOR259__468);
TMP_851=lisp.values1(TMP_852);
}else{
{
TMP_853=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([76, 73, 83, 84, 45, 72, 69, 65, 68])));
TMP_854=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([76, 73, 83, 84, 45, 84, 65, 73, 76])));
TMP_855=G_109.func(G_110,TMP_853,G_112,TMP_854);
L_ACCUMULATOR__473=lisp.values1(TMP_855);
{
L_G264__474=lisp.values1(L_INTO261__470);
L_G265__475=lisp.values1(lisp.symbolValue(G_16));
TMP_856=lisp.CL_cons(L_KIND260__469,L_ACCUMULATOR__473);
L_G_STORE266__476=lisp.values1(TMP_856);
lisp.callFunctionWithCallStack(G_857,L_G_STORE266__476,L_G264__474,L_G265__475);
}
}
TMP_851=lisp.values1(lisp.values1(lisp.values1(L_ACCUMULATOR__473)));
}
}
}
L_LIST_COLLECTOR__477=lisp.values1(lisp.values1(lisp.values1(TMP_851)));
TMP_858=G_117.func(L_LIST_COLLECTOR__477);
TMP_859=G_135.func(L_LIST_COLLECTOR__477);
TMP_860=lisp.callFunctionWithCallStack(G_54,G_224,TMP_858,TMP_859,L_FORM_OR_IT__466,L_INTO__467,L_KIND__464);
}
}
return TMP_860;
});
CL_VALTAN_CORESLASHLOOP_PARSE_COLLECT_CLAUSE=lisp.values1(F_PARSE_COLLECT_CLAUSE_845);
let F_PARSE_COUNT_CLAUSE_861;
F_PARSE_COUNT_CLAUSE_861=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_862, arguments.length);
}
let TMP_874;
let TMP_873;
let L_SUM_COUNTER__493;
let L_G_STORE276__492;
let TMP_872;
let L_G275__491;
let L_G274__490;
let L_ACCUMULATOR__489;
let TMP_871;
let TMP_870;
let L_G273__488;
let TMP_869;
let TMP_868;
let L_G272__487;
let TMP_867;
let TMP_866;
let L_G270__485;
let L_INTO269__484;
let L_KIND268__483;
let L_KINDSLASHACCUMULATOR267__482;
let TMP_865;
let L_INTO__481;
let TMP_864;
let L_FORM_OR_IT__480;
let TMP_863;
let L_KIND__478;
L_KIND__478=arguments[0];
{
TMP_863=G_811.func();
L_FORM_OR_IT__480=lisp.values1(TMP_863);
TMP_864=G_837.func();
L_INTO__481=lisp.values1(TMP_864);
{
{
TMP_865=lisp.callFunctionWithCallStack(G_850,L_INTO__481,lisp.symbolValue(G_16));
L_KINDSLASHACCUMULATOR267__482=lisp.values1(TMP_865);
L_KIND268__483=lisp.values1(L_KIND__478);
L_INTO269__484=lisp.values1(L_INTO__481);
{
L_G270__485=lisp.values1(L_KINDSLASHACCUMULATOR267__482);
if(lisp.values1(L_G270__485) !== lisp.S_nil){
TMP_867=lisp.callFunctionWithCallStack(G_259,L_KINDSLASHACCUMULATOR267__482);
TMP_866=lisp.values1(TMP_867);
}else{
{
{
L_G272__487=lisp.values1(L_INTO__481);
if(lisp.values1(L_G272__487) !== lisp.S_nil){
TMP_868=lisp.values1(L_G272__487);
}else{
{
TMP_869=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([83, 85, 77, 45, 67, 79, 85, 78, 84, 69, 82])));
L_G273__488=lisp.values1(TMP_869);
if(lisp.values1(L_G273__488) !== lisp.S_nil){
TMP_870=lisp.values1(L_G273__488);
}else{
TMP_870=lisp.values1(lisp.S_nil);
}
}
TMP_868=lisp.values1(lisp.values1(TMP_870));
}
}
TMP_871=G_164.func(G_165,lisp.values1(TMP_868));
L_ACCUMULATOR__489=lisp.values1(TMP_871);
{
L_G274__490=lisp.values1(L_INTO269__484);
L_G275__491=lisp.values1(lisp.symbolValue(G_16));
TMP_872=lisp.CL_cons(L_KIND268__483,L_ACCUMULATOR__489);
L_G_STORE276__492=lisp.values1(TMP_872);
lisp.callFunctionWithCallStack(G_857,L_G_STORE276__492,L_G274__490,L_G275__491);
}
}
TMP_866=lisp.values1(lisp.values1(lisp.values1(L_ACCUMULATOR__489)));
}
}
}
L_SUM_COUNTER__493=lisp.values1(lisp.values1(lisp.values1(TMP_866)));
TMP_873=G_170.func(L_SUM_COUNTER__493);
TMP_874=lisp.callFunctionWithCallStack(G_54,G_226,TMP_873,L_FORM_OR_IT__480,L_KIND__478);
}
}
return TMP_874;
});
CL_VALTAN_CORESLASHLOOP_PARSE_COUNT_CLAUSE=lisp.values1(F_PARSE_COUNT_CLAUSE_861);
let F_PARSE_MAXMIN_CLAUSE_875;
F_PARSE_MAXMIN_CLAUSE_875=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_876, arguments.length);
}
let TMP_888;
let TMP_887;
let L_MAXMIN_COLLECTOR__509;
let L_G_STORE286__508;
let TMP_886;
let L_G285__507;
let L_G284__506;
let L_ACCUMULATOR__505;
let TMP_885;
let TMP_884;
let L_G283__504;
let TMP_883;
let TMP_882;
let L_G282__503;
let TMP_881;
let TMP_880;
let L_G280__501;
let L_INTO279__500;
let L_KIND278__499;
let L_KINDSLASHACCUMULATOR277__498;
let TMP_879;
let L_INTO__497;
let TMP_878;
let L_FORM_OR_IT__496;
let TMP_877;
let L_KIND__494;
L_KIND__494=arguments[0];
{
TMP_877=G_811.func();
L_FORM_OR_IT__496=lisp.values1(TMP_877);
TMP_878=G_837.func();
L_INTO__497=lisp.values1(TMP_878);
{
{
TMP_879=lisp.callFunctionWithCallStack(G_850,L_INTO__497,lisp.symbolValue(G_16));
L_KINDSLASHACCUMULATOR277__498=lisp.values1(TMP_879);
L_KIND278__499=lisp.values1(L_KIND__494);
L_INTO279__500=lisp.values1(L_INTO__497);
{
L_G280__501=lisp.values1(L_KINDSLASHACCUMULATOR277__498);
if(lisp.values1(L_G280__501) !== lisp.S_nil){
TMP_881=lisp.callFunctionWithCallStack(G_259,L_KINDSLASHACCUMULATOR277__498);
TMP_880=lisp.values1(TMP_881);
}else{
{
{
L_G282__503=lisp.values1(L_INTO__497);
if(lisp.values1(L_G282__503) !== lisp.S_nil){
TMP_882=lisp.values1(L_G282__503);
}else{
{
TMP_883=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([77, 65, 88, 77, 73, 78, 45, 67, 79, 76, 76, 69, 67, 84, 79, 82])));
L_G283__504=lisp.values1(TMP_883);
if(lisp.values1(L_G283__504) !== lisp.S_nil){
TMP_884=lisp.values1(L_G283__504);
}else{
TMP_884=lisp.values1(lisp.S_nil);
}
}
TMP_882=lisp.values1(lisp.values1(TMP_884));
}
}
TMP_885=G_198.func(G_165,lisp.values1(TMP_882));
L_ACCUMULATOR__505=lisp.values1(TMP_885);
{
L_G284__506=lisp.values1(L_INTO279__500);
L_G285__507=lisp.values1(lisp.symbolValue(G_16));
TMP_886=lisp.CL_cons(L_KIND278__499,L_ACCUMULATOR__505);
L_G_STORE286__508=lisp.values1(TMP_886);
lisp.callFunctionWithCallStack(G_857,L_G_STORE286__508,L_G284__506,L_G285__507);
}
}
TMP_880=lisp.values1(lisp.values1(lisp.values1(L_ACCUMULATOR__505)));
}
}
}
L_MAXMIN_COLLECTOR__509=lisp.values1(lisp.values1(lisp.values1(TMP_880)));
TMP_887=G_203.func(L_MAXMIN_COLLECTOR__509);
TMP_888=lisp.callFunctionWithCallStack(G_54,G_228,TMP_887,L_FORM_OR_IT__496,L_KIND__494);
}
}
return TMP_888;
});
CL_VALTAN_CORESLASHLOOP_PARSE_MAXMIN_CLAUSE=lisp.values1(F_PARSE_MAXMIN_CLAUSE_875);
let F_PARSE_ACCUMULATION_CLAUSE_889;
F_PARSE_ACCUMULATION_CLAUSE_889=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_890, arguments.length);
}
let L_G287__520;
let TMP_927;
let TMP_925;
let L_G295__519;
let TMP_924;
let TMP_921;
let TMP_919;
let L_G294__518;
let TMP_918;
let TMP_915;
let TMP_914;
let L_G293__517;
let TMP_913;
let TMP_910;
let TMP_909;
let L_G292__516;
let TMP_908;
let TMP_905;
let TMP_904;
let L_G291__515;
let TMP_903;
let TMP_900;
let TMP_899;
let L_G290__514;
let TMP_898;
let TMP_895;
let TMP_894;
let L_G289__513;
let TMP_893;
let L_G288__512;
let L_EXP__510;
L_EXP__510=arguments[0];
{
{
L_G288__512=lisp.values1(L_EXP__510);
{
TMP_893=lisp.callFunctionWithCallStack(G_322,L_G288__512,lisp.makeCons(G_891, lisp.makeCons(G_892, lisp.S_nil)));
L_G289__513=lisp.values1(TMP_893);
if(lisp.values1(L_G289__513) !== lisp.S_nil){
G_257.func();
TMP_895=G_846.func(G_891);
TMP_894=lisp.values1(lisp.values1(TMP_895));
}else{
{
TMP_898=lisp.callFunctionWithCallStack(G_322,L_G288__512,lisp.makeCons(G_896, lisp.makeCons(G_897, lisp.S_nil)));
L_G290__514=lisp.values1(TMP_898);
if(lisp.values1(L_G290__514) !== lisp.S_nil){
G_257.func();
TMP_900=G_846.func(G_896);
TMP_899=lisp.values1(lisp.values1(TMP_900));
}else{
{
TMP_903=lisp.callFunctionWithCallStack(G_322,L_G288__512,lisp.makeCons(G_901, lisp.makeCons(G_902, lisp.S_nil)));
L_G291__515=lisp.values1(TMP_903);
if(lisp.values1(L_G291__515) !== lisp.S_nil){
G_257.func();
TMP_905=G_846.func(G_901);
TMP_904=lisp.values1(lisp.values1(TMP_905));
}else{
{
TMP_908=lisp.callFunctionWithCallStack(G_322,L_G288__512,lisp.makeCons(G_906, lisp.makeCons(G_907, lisp.S_nil)));
L_G292__516=lisp.values1(TMP_908);
if(lisp.values1(L_G292__516) !== lisp.S_nil){
G_257.func();
TMP_910=G_862.func(G_906);
TMP_909=lisp.values1(lisp.values1(TMP_910));
}else{
{
TMP_913=lisp.callFunctionWithCallStack(G_322,L_G288__512,lisp.makeCons(G_911, lisp.makeCons(G_912, lisp.S_nil)));
L_G293__517=lisp.values1(TMP_913);
if(lisp.values1(L_G293__517) !== lisp.S_nil){
G_257.func();
TMP_915=G_862.func(G_911);
TMP_914=lisp.values1(lisp.values1(TMP_915));
}else{
{
TMP_918=lisp.callFunctionWithCallStack(G_322,L_G288__512,lisp.makeCons(G_916, lisp.makeCons(G_917, lisp.S_nil)));
L_G294__518=lisp.values1(TMP_918);
if(lisp.values1(L_G294__518) !== lisp.S_nil){
G_257.func();
TMP_921=G_876.func(G_920);
TMP_919=lisp.values1(lisp.values1(TMP_921));
}else{
{
TMP_924=lisp.callFunctionWithCallStack(G_322,L_G288__512,lisp.makeCons(G_922, lisp.makeCons(G_923, lisp.S_nil)));
L_G295__519=lisp.values1(TMP_924);
if(lisp.values1(L_G295__519) !== lisp.S_nil){
G_257.func();
TMP_927=G_876.func(G_926);
TMP_925=lisp.values1(lisp.values1(TMP_927));
}else{
TMP_925=lisp.values1(lisp.S_nil);
}
}
TMP_919=lisp.values1(lisp.values1(TMP_925));
}
}
TMP_914=lisp.values1(lisp.values1(TMP_919));
}
}
TMP_909=lisp.values1(lisp.values1(TMP_914));
}
}
TMP_904=lisp.values1(lisp.values1(TMP_909));
}
}
TMP_899=lisp.values1(lisp.values1(TMP_904));
}
}
TMP_894=lisp.values1(lisp.values1(TMP_899));
}
}
}
L_G287__520=lisp.values1(lisp.values1(lisp.values1(TMP_894)));
G_317.func();
}
return lisp.values1(L_G287__520);
});
CL_VALTAN_CORESLASHLOOP_PARSE_ACCUMULATION_CLAUSE=lisp.values1(F_PARSE_ACCUMULATION_CLAUSE_889);
let F_PARSE_SELECTABLE_CLAUSE_928;
F_PARSE_SELECTABLE_CLAUSE_928=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_929, arguments.length);
}
let TMP_940;
let L_G299__526;
let TMP_939;
let TMP_938;
let L_G298__525;
let TMP_936;
let TMP_935;
let L_G297__524;
let TMP_934;
let TMP_933;
let L_G296__523;
let TMP_932;
let L_EXP__522;
let TMP_931;
let TMP_930;
{
TMP_930=G_263.func();
TMP_931=G_236.func(TMP_930);
L_EXP__522=lisp.values1(TMP_931);
{
TMP_932=G_826.func(L_EXP__522);
L_G296__523=lisp.values1(TMP_932);
if(lisp.values1(L_G296__523) !== lisp.S_nil){
TMP_933=lisp.values1(L_G296__523);
}else{
{
TMP_934=G_890.func(L_EXP__522);
L_G297__524=lisp.values1(TMP_934);
if(lisp.values1(L_G297__524) !== lisp.S_nil){
TMP_935=lisp.values1(L_G297__524);
}else{
{
TMP_936=G_937.func(L_EXP__522);
L_G298__525=lisp.values1(TMP_936);
if(lisp.values1(L_G298__525) !== lisp.S_nil){
TMP_938=lisp.values1(L_G298__525);
}else{
{
TMP_939=G_230.func(G_51.func(lisp.codeArrayToString([117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 102, 111, 114, 109, 58, 32, 126, 83])),L_EXP__522);
L_G299__526=lisp.values1(TMP_939);
if(lisp.values1(L_G299__526) !== lisp.S_nil){
TMP_940=lisp.values1(L_G299__526);
}else{
TMP_940=lisp.values1(lisp.S_nil);
}
}
TMP_938=TMP_940;
}
}
TMP_935=TMP_938;
}
}
TMP_933=TMP_935;
}
}
}
return TMP_933;
});
CL_VALTAN_CORESLASHLOOP_PARSE_SELECTABLE_CLAUSE=lisp.values1(F_PARSE_SELECTABLE_CLAUSE_928);
let F_PARSE_CONDITIONAL_THEN_ELSE_CLAUSE_941;
F_PARSE_CONDITIONAL_THEN_ELSE_CLAUSE_941=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_942, arguments.length);
}
let TMP_951;
let TMP_950;
let L_G306__530;
let TMP_949;
let TMP_948;
let TMP_947;
let TMP_946;
let TMP_945;
let BLOCK_RESULT_NIL__529;
let L_FORMS__528;
let TMP_944;
let TMP_943;
{
TMP_943=G_929.func();
TMP_944=lisp.callFunctionWithCallStack(G_54,TMP_943);
L_FORMS__528=lisp.values1(TMP_944);
BLOCK_NIL__529: for(;;){for(;;){
TMP_945=G_263.func();
TMP_946=G_236.func(TMP_945);
TMP_947=lisp.CL_eq(TMP_946,G_414);
if(lisp.values1(TMP_947) !== lisp.S_nil){
G_257.func();
}else{
BLOCK_RESULT_NIL__529=lisp.values1(lisp.S_nil);
break BLOCK_NIL__529;
}
{
TMP_948=G_929.func();
TMP_949=lisp.CL_cons(TMP_948,L_FORMS__528);
L_G306__530=lisp.values1(TMP_949);
L_FORMS__528=lisp.values1(L_G306__530);
}
continue;
break;
}
BLOCK_RESULT_NIL__529=lisp.values1(lisp.S_nil);
break;
}
TMP_950=lisp.callFunctionWithCallStack(G_345,L_FORMS__528);
TMP_951=lisp.CL_cons(G_808,TMP_950);
}
return TMP_951;
});
CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_THEN_ELSE_CLAUSE=lisp.values1(F_PARSE_CONDITIONAL_THEN_ELSE_CLAUSE_941);
let F_PARSE_CONDITIONAL_CLAUSE_1_952;
F_PARSE_CONDITIONAL_CLAUSE_1_952=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_953, arguments.length);
}
let TMP_981;
let TMP_980;
let TMP_979;
let TMP_978;
let TMP_977;
let TMP_976;
let TMP_975;
let L_G309__539;
let TMP_974;
let TMP_972;
let TMP_971;
let TMP_970;
let TMP_969;
let L_G308__538;
let TMP_968;
let L_G307__537;
let TMP_965;
let TMP_963;
let TMP_962;
let L_ELSE__536;
let TMP_961;
let TMP_960;
let TMP_959;
let TMP_957;
let TMP_956;
let L_THEN__535;
let TMP_955;
let save_STARIT_ENABLE_CONTEXTSTAR__534;
let L_CONDITION__533;
let TMP_954;
let L_TEST_NAME__531;
L_TEST_NAME__531=arguments[0];
{
TMP_954=G_257.func();
L_CONDITION__533=lisp.values1(TMP_954);
{
save_STARIT_ENABLE_CONTEXTSTAR__534=G_14.value;
G_14.value=lisp.values1(G_4);
try{
TMP_955=G_942.func();
}finally{
G_14.value=save_STARIT_ENABLE_CONTEXTSTAR__534;
}
}
L_THEN__535=lisp.values1(lisp.values1(TMP_955));
TMP_956=G_263.func();
TMP_957=G_236.func(TMP_956);
TMP_959=lisp.CL_eq(TMP_957,G_958);
if(lisp.values1(TMP_959) !== lisp.S_nil){
G_257.func();
TMP_961=G_942.func();
TMP_960=lisp.values1(lisp.values1(TMP_961));
}else{
TMP_960=lisp.values1(lisp.S_nil);
}
L_ELSE__536=lisp.values1(TMP_960);
TMP_962=G_263.func();
TMP_963=G_236.func(TMP_962);
TMP_965=lisp.CL_eq(TMP_963,G_964);
if(lisp.values1(TMP_965) !== lisp.S_nil){
G_257.func();
}else{
}
{
L_G307__537=lisp.values1(L_TEST_NAME__531);
{
TMP_968=lisp.callFunctionWithCallStack(G_322,L_G307__537,lisp.makeCons(G_966, lisp.makeCons(G_967, lisp.S_nil)));
L_G308__538=lisp.values1(TMP_968);
if(lisp.values1(L_G308__538) !== lisp.S_nil){
if(lisp.values1(lisp.symbolValue(G_13)) !== lisp.S_nil){
TMP_971=lisp.callFunctionWithCallStack(G_54,G_507,lisp.symbolValue(G_13),L_CONDITION__533);
TMP_970=lisp.values1(TMP_971);
}else{
TMP_970=lisp.values1(L_CONDITION__533);
}
TMP_972=lisp.callFunctionWithCallStack(G_54,G_647,TMP_970,L_THEN__535,L_ELSE__536);
TMP_969=TMP_972;
}else{
{
TMP_974=lisp.callFunctionWithCallStack(G_322,L_G307__537,lisp.makeCons(G_973, lisp.S_nil));
L_G309__539=lisp.values1(TMP_974);
if(lisp.values1(L_G309__539) !== lisp.S_nil){
if(lisp.values1(lisp.symbolValue(G_13)) !== lisp.S_nil){
TMP_977=lisp.callFunctionWithCallStack(G_54,G_275,L_CONDITION__533);
TMP_978=lisp.callFunctionWithCallStack(G_54,G_507,lisp.symbolValue(G_13),TMP_977);
TMP_976=lisp.values1(TMP_978);
}else{
TMP_979=lisp.callFunctionWithCallStack(G_54,G_275,L_CONDITION__533);
TMP_976=lisp.values1(TMP_979);
}
TMP_980=lisp.callFunctionWithCallStack(G_54,G_647,TMP_976,L_THEN__535,L_ELSE__536);
TMP_975=TMP_980;
}else{
TMP_981=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G307__537,lisp.makeCons(G_966, lisp.makeCons(G_967, lisp.makeCons(G_973, lisp.S_nil))));
TMP_975=TMP_981;
}
}
TMP_969=TMP_975;
}
}
}
}
return TMP_969;
});
CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_CLAUSE_1=lisp.values1(F_PARSE_CONDITIONAL_CLAUSE_1_952);
let F_PARSE_CONDITIONAL_CLAUSE_982;
F_PARSE_CONDITIONAL_CLAUSE_982=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_937, arguments.length);
}
let TMP_985;
let TMP_984;
let L_G312__544;
let TMP_983;
let L_G311__543;
let L_EXP__541;
L_EXP__541=arguments[0];
{
L_G311__543=lisp.values1(L_EXP__541);
{
TMP_983=lisp.callFunctionWithCallStack(G_322,L_G311__543,lisp.makeCons(G_966, lisp.makeCons(G_967, lisp.makeCons(G_973, lisp.S_nil))));
L_G312__544=lisp.values1(TMP_983);
if(lisp.values1(L_G312__544) !== lisp.S_nil){
G_257.func();
TMP_985=G_953.func(L_EXP__541);
TMP_984=TMP_985;
}else{
TMP_984=lisp.values1(lisp.S_nil);
}
}
}
return TMP_984;
});
CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_CLAUSE=lisp.values1(F_PARSE_CONDITIONAL_CLAUSE_982);
let F_PARSE_TERMINATION_TEST_CLAUSE_986;
F_PARSE_TERMINATION_TEST_CLAUSE_986=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_987, arguments.length);
}
let TMP_1034;
let TMP_1033;
let TMP_1032;
let TMP_1031;
let TMP_1030;
let TMP_1029;
let L_THEREIS__559;
let TMP_1027;
let TMP_1026;
let L_G322__558;
let TMP_1025;
let TMP_1023;
let TMP_1022;
let L_G321__557;
let TMP_1021;
let TMP_1020;
let L_G320__556;
let TMP_1019;
let TMP_1017;
let TMP_1016;
let L_G319__555;
let TMP_1015;
let TMP_1014;
let L_G318__554;
let TMP_1013;
let TMP_1011;
let TMP_1010;
let TMP_1008;
let L_G317__553;
let TMP_1007;
let TMP_1006;
let TMP_1005;
let TMP_1004;
let L_REPEAT_VALUE__552;
let TMP_1003;
let L_REPEAT_VAR__551;
let TMP_1002;
let TMP_1001;
let L_G316__550;
let TMP_1000;
let TMP_998;
let TMP_997;
let TMP_995;
let L_G315__549;
let TMP_994;
let TMP_992;
let TMP_991;
let TMP_990;
let L_G314__548;
let TMP_989;
let L_G313__547;
let L_EXP__545;
L_EXP__545=arguments[0];
{
L_G313__547=lisp.values1(L_EXP__545);
{
TMP_989=lisp.callFunctionWithCallStack(G_322,L_G313__547,lisp.makeCons(G_988, lisp.S_nil));
L_G314__548=lisp.values1(TMP_989);
if(lisp.values1(L_G314__548) !== lisp.S_nil){
G_257.func();
TMP_991=G_257.func();
TMP_992=lisp.callFunctionWithCallStack(G_56,G_696,TMP_991,lisp.makeCons(lisp.makeCons(G_701, lisp.makeCons(G_702, lisp.S_nil)), lisp.S_nil));
TMP_990=TMP_992;
}else{
{
TMP_994=lisp.callFunctionWithCallStack(G_322,L_G313__547,lisp.makeCons(G_993, lisp.S_nil));
L_G315__549=lisp.values1(TMP_994);
if(lisp.values1(L_G315__549) !== lisp.S_nil){
G_257.func();
TMP_997=G_257.func();
TMP_998=lisp.callFunctionWithCallStack(G_56,G_996,TMP_997,lisp.makeCons(lisp.makeCons(G_701, lisp.makeCons(G_702, lisp.S_nil)), lisp.S_nil));
TMP_995=TMP_998;
}else{
{
TMP_1000=lisp.callFunctionWithCallStack(G_322,L_G313__547,lisp.makeCons(G_999, lisp.S_nil));
L_G316__550=lisp.values1(TMP_1000);
if(lisp.values1(L_G316__550) !== lisp.S_nil){
G_257.func();
{
TMP_1002=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([82, 69, 80, 69, 65, 84])));
L_REPEAT_VAR__551=lisp.values1(TMP_1002);
TMP_1003=G_257.func();
L_REPEAT_VALUE__552=lisp.values1(TMP_1003);
{
TMP_1004=lisp.callFunctionWithCallStack(G_54,L_REPEAT_VAR__551,L_REPEAT_VALUE__552);
TMP_1005=lisp.callFunctionWithCallStack(G_54,TMP_1004);
TMP_1006=G_29.func(G_30,TMP_1005);
TMP_1007=lisp.CL_cons(TMP_1006,lisp.symbolValue(G_12));
L_G317__553=lisp.values1(TMP_1007);
lisp.setSymbolValue(G_12, lisp.values1(L_G317__553));
}
TMP_1008=lisp.callFunctionWithCallStack(G_56,G_504,L_REPEAT_VAR__551,lisp.makeCons(0, lisp.S_nil));
TMP_1010=lisp.callFunctionWithCallStack(G_54,G_1009,L_REPEAT_VAR__551);
TMP_1011=lisp.callFunctionWithCallStack(G_54,G_647,TMP_1008,lisp.makeCons(G_701, lisp.makeCons(G_702, lisp.S_nil)),TMP_1010);
}
TMP_1001=TMP_1011;
}else{
{
TMP_1013=lisp.callFunctionWithCallStack(G_322,L_G313__547,lisp.makeCons(G_1012, lisp.S_nil));
L_G318__554=lisp.values1(TMP_1013);
if(lisp.values1(L_G318__554) !== lisp.S_nil){
G_257.func();
{
TMP_1015=lisp.CL_cons(lisp.makeCons(G_822, lisp.makeCons(G_4, lisp.S_nil)),lisp.symbolValue(G_11));
L_G319__555=lisp.values1(TMP_1015);
lisp.setSymbolValue(G_11, lisp.values1(L_G319__555));
}
TMP_1016=G_257.func();
TMP_1017=lisp.callFunctionWithCallStack(G_56,G_696,TMP_1016,lisp.makeCons(lisp.makeCons(G_822, lisp.makeCons(lisp.S_nil, lisp.S_nil)), lisp.S_nil));
TMP_1014=TMP_1017;
}else{
{
TMP_1019=lisp.callFunctionWithCallStack(G_322,L_G313__547,lisp.makeCons(G_1018, lisp.S_nil));
L_G320__556=lisp.values1(TMP_1019);
if(lisp.values1(L_G320__556) !== lisp.S_nil){
G_257.func();
{
TMP_1021=lisp.CL_cons(lisp.makeCons(G_822, lisp.makeCons(G_4, lisp.S_nil)),lisp.symbolValue(G_11));
L_G321__557=lisp.values1(TMP_1021);
lisp.setSymbolValue(G_11, lisp.values1(L_G321__557));
}
TMP_1022=G_257.func();
TMP_1023=lisp.callFunctionWithCallStack(G_56,G_996,TMP_1022,lisp.makeCons(lisp.makeCons(G_822, lisp.makeCons(lisp.S_nil, lisp.S_nil)), lisp.S_nil));
TMP_1020=TMP_1023;
}else{
{
TMP_1025=lisp.callFunctionWithCallStack(G_322,L_G313__547,lisp.makeCons(G_1024, lisp.S_nil));
L_G322__558=lisp.values1(TMP_1025);
if(lisp.values1(L_G322__558) !== lisp.S_nil){
G_257.func();
{
TMP_1027=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([84, 72, 69, 82, 69, 73, 83])));
L_THEREIS__559=lisp.values1(TMP_1027);
TMP_1029=G_257.func();
TMP_1030=lisp.callFunctionWithCallStack(G_54,L_THEREIS__559,TMP_1029);
TMP_1031=lisp.callFunctionWithCallStack(G_54,TMP_1030);
TMP_1032=lisp.callFunctionWithCallStack(G_54,G_822,L_THEREIS__559);
TMP_1033=lisp.callFunctionWithCallStack(G_54,G_996,L_THEREIS__559,TMP_1032);
TMP_1034=lisp.callFunctionWithCallStack(G_54,G_1028,TMP_1031,TMP_1033);
}
TMP_1026=TMP_1034;
}else{
TMP_1026=lisp.values1(lisp.S_nil);
}
}
TMP_1020=TMP_1026;
}
}
TMP_1014=TMP_1020;
}
}
TMP_1001=TMP_1014;
}
}
TMP_995=TMP_1001;
}
}
TMP_990=TMP_995;
}
}
}
return TMP_990;
});
CL_VALTAN_CORESLASHLOOP_PARSE_TERMINATION_TEST_CLAUSE=lisp.values1(F_PARSE_TERMINATION_TEST_CLAUSE_986);
let F_PARSE_MAIN_CLAUSE_1035;
F_PARSE_MAIN_CLAUSE_1035=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_1036, arguments.length);
}
let TMP_1052;
let L_G329__569;
let TMP_1051;
let TMP_1050;
let L_G328__568;
let TMP_1049;
let L_G327__567;
let TMP_1048;
let TMP_1047;
let L_FORM__566;
let TMP_1046;
let L_G326__565;
let TMP_1045;
let TMP_1044;
let L_G325__564;
let TMP_1043;
let TMP_1042;
let L_G324__563;
let TMP_1041;
let TMP_1040;
let L_G323__562;
let TMP_1039;
let L_EXP__561;
let TMP_1038;
let TMP_1037;
{
TMP_1037=G_263.func();
TMP_1038=G_236.func(TMP_1037);
L_EXP__561=lisp.values1(TMP_1038);
{
{
TMP_1039=G_826.func(L_EXP__561);
L_G323__562=lisp.values1(TMP_1039);
if(lisp.values1(L_G323__562) !== lisp.S_nil){
TMP_1040=lisp.values1(L_G323__562);
}else{
{
TMP_1041=G_890.func(L_EXP__561);
L_G324__563=lisp.values1(TMP_1041);
if(lisp.values1(L_G324__563) !== lisp.S_nil){
TMP_1042=lisp.values1(L_G324__563);
}else{
{
TMP_1043=G_937.func(L_EXP__561);
L_G325__564=lisp.values1(TMP_1043);
if(lisp.values1(L_G325__564) !== lisp.S_nil){
TMP_1044=lisp.values1(L_G325__564);
}else{
{
TMP_1045=G_987.func(L_EXP__561);
L_G326__565=lisp.values1(TMP_1045);
if(lisp.values1(L_G326__565) !== lisp.S_nil){
TMP_1046=lisp.values1(L_G326__565);
}else{
TMP_1046=lisp.values1(lisp.S_nil);
}
}
TMP_1044=lisp.values1(lisp.values1(TMP_1046));
}
}
TMP_1042=lisp.values1(lisp.values1(TMP_1044));
}
}
TMP_1040=lisp.values1(lisp.values1(TMP_1042));
}
}
L_FORM__566=lisp.values1(lisp.values1(TMP_1040));
if(lisp.values1(L_FORM__566) !== lisp.S_nil){
{
TMP_1048=lisp.CL_cons(L_FORM__566,lisp.symbolValue(G_18));
L_G327__567=lisp.values1(TMP_1048);
lisp.setSymbolValue(G_18, lisp.values1(L_G327__567));
}
TMP_1047=lisp.values1(G_18.value);
}else{
{
TMP_1049=G_784.func(L_EXP__561);
L_G328__568=lisp.values1(TMP_1049);
if(lisp.values1(L_G328__568) !== lisp.S_nil){
TMP_1050=lisp.values1(L_G328__568);
}else{
{
TMP_1051=G_230.func(G_51.func(lisp.codeArrayToString([117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 102, 111, 114, 109, 58, 32, 126, 83])),L_EXP__561);
L_G329__569=lisp.values1(TMP_1051);
if(lisp.values1(L_G329__569) !== lisp.S_nil){
TMP_1052=lisp.values1(L_G329__569);
}else{
TMP_1052=lisp.values1(lisp.S_nil);
}
}
TMP_1050=TMP_1052;
}
}
TMP_1047=TMP_1050;
}
}
}
return TMP_1047;
});
CL_VALTAN_CORESLASHLOOP_PARSE_MAIN_CLAUSE=lisp.values1(F_PARSE_MAIN_CLAUSE_1035);
let F_PARSE_NAME_CLAUSE_1053;
F_PARSE_NAME_CLAUSE_1053=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_1054, arguments.length);
}
let TMP_1061;
let L_NAME__571;
let TMP_1060;
let TMP_1059;
let TMP_1058;
let TMP_1056;
let TMP_1055;
TMP_1055=G_263.func();
TMP_1056=G_236.func(TMP_1055);
TMP_1058=lisp.CL_eq(TMP_1056,G_1057);
if(lisp.values1(TMP_1058) !== lisp.S_nil){
G_257.func();
{
TMP_1060=G_257.func();
L_NAME__571=lisp.values1(TMP_1060);
TMP_1061=lisp.CL_symbolp(L_NAME__571);
if(lisp.values1(TMP_1061) !== lisp.S_nil){
}else{
G_230.func(G_51.func(lisp.codeArrayToString([78, 97, 109, 101, 32, 99, 108, 97, 117, 115, 101, 32, 109, 117, 115, 116, 32, 98, 101, 32, 97, 32, 115, 121, 109, 98, 111, 108, 32, 40, 97, 99, 116, 117, 97, 108, 32, 118, 97, 108, 117, 101, 58, 32, 126, 83, 41])),L_NAME__571);
}
lisp.setSymbolValue(G_5, lisp.values1(L_NAME__571));
}
TMP_1059=lisp.values1(G_5.value);
}else{
TMP_1059=lisp.values1(lisp.S_nil);
}
return TMP_1059;
});
CL_VALTAN_CORESLASHLOOP_PARSE_NAME_CLAUSE=lisp.values1(F_PARSE_NAME_CLAUSE_1053);
let F_PARSE_LOOP_1074;
F_PARSE_LOOP_1074=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1075, arguments.length);
}
let TMP_1076;
let save_STARLOOP_EXPSSTAR__580;
let L_FORMS__578;
L_FORMS__578=arguments[0];
{
save_STARLOOP_EXPSSTAR__580=G_2.value;
G_2.value=lisp.values1(L_FORMS__578);
try{
G_1054.func();
lisp.callFunctionWithCallStack(G_1062);
TMP_1076=lisp.callFunctionWithCallStack(G_1068);
}finally{
G_2.value=save_STARLOOP_EXPSSTAR__580;
}
}
return TMP_1076;
});
CL_VALTAN_CORESLASHLOOP_PARSE_LOOP=lisp.values1(F_PARSE_LOOP_1074);
let F_EXPAND_LOOP_DESTRUCTURING_BIND_1077;
F_EXPAND_LOOP_DESTRUCTURING_BIND_1077=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_1078, arguments.length);
}
let TMP_1105;
let L_G348__597;
let TMP_1104;
let TMP_1103;
let L_VALUE__596;
let TMP_1102;
let TMP_1101;
let F_F__585;
let TMP_1079;
let L_BINDINGS__584;
let L_FORM__582;
let L_D_VAR__581;
L_D_VAR__581=arguments[0];
L_FORM__582=arguments[1];
{
L_BINDINGS__584=lisp.values1(lisp.S_nil);
{
TMP_1079=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1100;
let L_G347__595;
let TMP_1099;
let TMP_1098;
let TMP_1097;
let TMP_1096;
let TMP_1095;
let TMP_1094;
let L_G345__593;
let TMP_1093;
let TMP_1092;
let TMP_1091;
let L_G344__592;
let TMP_1090;
let TMP_1089;
let TMP_1088;
let L_CDR__591;
let TMP_1087;
let TMP_1086;
let TMP_1085;
let L_CAR__590;
let TMP_1084;
let TMP_1083;
let L_G343__589;
let TMP_1082;
let TMP_1081;
let L_G342__588;
let TMP_1080;
let L_VALUE__587;
let L_D_VAR__586;
L_D_VAR__586=arguments[0];
L_VALUE__587=arguments[1];
{
TMP_1080=lisp.callFunctionWithCallStack(G_268,L_D_VAR__586);
L_G342__588=lisp.values1(TMP_1080);
if(lisp.values1(L_G342__588) !== lisp.S_nil){
TMP_1081=lisp.values1(lisp.S_nil);
}else{
{
TMP_1082=lisp.CL_consp(L_D_VAR__586);
L_G343__589=lisp.values1(TMP_1082);
if(lisp.values1(L_G343__589) !== lisp.S_nil){
{
TMP_1084=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([67, 65, 82])));
L_CAR__590=lisp.values1(TMP_1084);
TMP_1085=lisp.callFunctionWithCallStack(G_259,L_D_VAR__586);
if(lisp.values1(TMP_1085) !== lisp.S_nil){
TMP_1087=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([67, 68, 82])));
TMP_1086=lisp.values1(TMP_1087);
}else{
TMP_1086=lisp.values1(lisp.S_nil);
}
L_CDR__591=lisp.values1(TMP_1086);
{
TMP_1088=lisp.callFunctionWithCallStack(G_54,G_261,L_VALUE__587);
TMP_1089=lisp.callFunctionWithCallStack(G_54,L_CAR__590,TMP_1088);
TMP_1090=lisp.CL_cons(TMP_1089,L_BINDINGS__584);
L_G344__592=lisp.values1(TMP_1090);
L_BINDINGS__584=lisp.values1(L_G344__592);
}
if(lisp.values1(L_CDR__591) !== lisp.S_nil){
{
TMP_1091=lisp.callFunctionWithCallStack(G_54,G_259,L_VALUE__587);
TMP_1092=lisp.callFunctionWithCallStack(G_54,L_CDR__591,TMP_1091);
TMP_1093=lisp.CL_cons(TMP_1092,L_BINDINGS__584);
L_G345__593=lisp.values1(TMP_1093);
L_BINDINGS__584=lisp.values1(L_G345__593);
}
}else{
}
TMP_1094=lisp.callFunctionWithCallStack(G_261,L_D_VAR__586);
F_F__585(TMP_1094,L_CAR__590);
if(lisp.values1(L_CDR__591) !== lisp.S_nil){
TMP_1096=lisp.callFunctionWithCallStack(G_259,L_D_VAR__586);
TMP_1097=F_F__585(TMP_1096,L_CDR__591);
TMP_1095=TMP_1097;
}else{
TMP_1095=lisp.values1(lisp.S_nil);
}
}
TMP_1083=TMP_1095;
}else{
G_270.func(L_D_VAR__586);
{
TMP_1098=lisp.callFunctionWithCallStack(G_54,L_D_VAR__586,L_VALUE__587);
TMP_1099=lisp.CL_cons(TMP_1098,L_BINDINGS__584);
L_G347__595=lisp.values1(TMP_1099);
L_BINDINGS__584=(TMP_1100=lisp.values1(L_G347__595));
}
TMP_1083=lisp.values1(TMP_1100);
}
}
TMP_1081=TMP_1083;
}
}
return TMP_1081;
});
F_F__585=lisp.values1(TMP_1079);
TMP_1101=lisp.CL_consp(L_D_VAR__581);
if(lisp.values1(TMP_1101) !== lisp.S_nil){
{
TMP_1102=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([68, 69, 83, 84, 82, 85, 67, 84, 85, 82, 73, 78, 71, 45, 86, 65, 82])));
L_VALUE__596=lisp.values1(TMP_1102);
{
TMP_1103=lisp.callFunctionWithCallStack(G_54,L_VALUE__596,L_FORM__582);
TMP_1104=lisp.CL_cons(TMP_1103,L_BINDINGS__584);
L_G348__597=lisp.values1(TMP_1104);
L_BINDINGS__584=lisp.values1(L_G348__597);
}
F_F__585(L_D_VAR__581,L_VALUE__596);
}
}else{
F_F__585(L_D_VAR__581,L_FORM__582);
}
}
TMP_1105=lisp.callFunctionWithCallStack(G_345,L_BINDINGS__584);
}
return TMP_1105;
});
CL_VALTAN_CORESLASHLOOP_EXPAND_LOOP_DESTRUCTURING_BIND=lisp.values1(F_EXPAND_LOOP_DESTRUCTURING_BIND_1077);
let F_EXPAND_COMPLEX_LOOP_1107;
F_EXPAND_COMPLEX_LOOP_1107=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1108, arguments.length);
}
let TMP_1177;
let TMP_1175;
let TMP_1174;
let TMP_1173;
let TMP_1172;
let TMP_1171;
let TMP_1170;
let TMP_1169;
let TMP_1168;
let L_G370__632;
let TMP_1167;
let TMP_1166;
let TMP_1165;
let TMP_1164;
let L_G369__631;
let TMP_1163;
let L_G368__630;
let TMP_1162;
let L_BINDINGS__629;
let TMP_1161;
let TMP_1160;
let L_G361__628;
let TMP_1159;
let TMP_1158;
let TMP_1157;
let TMP_1156;
let TMP_1154;
let L_ITERATOR__625;
let TMP_1153;
let TMP_1152;
let L_G354__624;
let TMP_1130;
let L_BODY__615;
let TMP_1129;
let TMP_1128;
let TMP_1127;
let TMP_1126;
let TMP_1125;
let TMP_1124;
let TMP_1123;
let TMP_1122;
let TMP_1121;
let TMP_1120;
let TMP_1119;
let TMP_1118;
let TMP_1117;
let TMP_1116;
let TMP_1114;
let TMP_1113;
let L_LOOP_START__613;
let TMP_1111;
let save_STARLOOP_BODYSTAR__612;
let save_STARIT_ENABLE_CONTEXTSTAR__611;
let save_STARITSTAR__610;
let save_STARAFTER_UPDATE_FORMSSTAR__609;
let save_STARBEFORE_UPDATE_FORMSSTAR__608;
let save_STARLOOP_TEST_FORMSSTAR__607;
let save_STARRESULT_FORMSSTAR__606;
let save_STARHASH_TABLE_ITERATORSSTAR__605;
let save_STARACCUMULATORSSTAR__604;
let TMP_1109;
let save_STARBINDINGSSTAR__603;
let save_STARFINALLY_FORMSSTAR__602;
let save_STARINITIALLY_FORMSSTAR__601;
let save_STARNAMEDSTAR__600;
let L_FORMS__598;
L_FORMS__598=arguments[0];
{
save_STARNAMEDSTAR__600=G_5.value;
G_5.value=lisp.values1(lisp.S_nil);
save_STARINITIALLY_FORMSSTAR__601=G_6.value;
G_6.value=lisp.values1(lisp.S_nil);
save_STARFINALLY_FORMSSTAR__602=G_7.value;
G_7.value=lisp.values1(lisp.S_nil);
save_STARBINDINGSSTAR__603=G_12.value;
G_12.value=lisp.values1(lisp.S_nil);
TMP_1109=lisp.callFunctionWithCallStack(G_1110);
save_STARACCUMULATORSSTAR__604=G_16.value;
G_16.value=lisp.values1(TMP_1109);
save_STARHASH_TABLE_ITERATORSSTAR__605=G_17.value;
G_17.value=lisp.values1(lisp.S_nil);
save_STARRESULT_FORMSSTAR__606=G_11.value;
G_11.value=lisp.values1(lisp.S_nil);
save_STARLOOP_TEST_FORMSSTAR__607=G_8.value;
G_8.value=lisp.values1(lisp.S_nil);
save_STARBEFORE_UPDATE_FORMSSTAR__608=G_9.value;
G_9.value=lisp.values1(lisp.S_nil);
save_STARAFTER_UPDATE_FORMSSTAR__609=G_10.value;
G_10.value=lisp.values1(lisp.S_nil);
save_STARITSTAR__610=G_13.value;
G_13.value=lisp.values1(lisp.S_nil);
save_STARIT_ENABLE_CONTEXTSTAR__611=G_14.value;
G_14.value=lisp.values1(lisp.S_nil);
save_STARLOOP_BODYSTAR__612=G_18.value;
G_18.value=lisp.values1(lisp.S_nil);
TMP_1111=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([76, 79, 79, 80, 45, 83, 84, 65, 82, 84])));
L_LOOP_START__613=lisp.values1(TMP_1111);
try{
G_1075.func(L_FORMS__598);
{
TMP_1113=lisp.callFunctionWithCallStack(G_345,lisp.symbolValue(G_6));
TMP_1114=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1115;
let L_FORM__614;
L_FORM__614=arguments[0];
TMP_1115=lisp.callFunctionWithCallStack(G_56,G_696,L_FORM__614,lisp.makeCons(lisp.makeCons(G_701, lisp.makeCons(G_702, lisp.S_nil)), lisp.S_nil));
return TMP_1115;
});
TMP_1116=lisp.callFunctionWithCallStack(G_345,lisp.symbolValue(G_8));
TMP_1117=lisp.callFunctionWithCallStack(G_50,TMP_1114,TMP_1116);
TMP_1118=lisp.callFunctionWithCallStack(G_345,lisp.symbolValue(G_9));
TMP_1119=lisp.callFunctionWithCallStack(G_345,lisp.symbolValue(G_18));
TMP_1120=lisp.callFunctionWithCallStack(G_345,lisp.symbolValue(G_10));
TMP_1121=lisp.callFunctionWithCallStack(G_54,G_701,L_LOOP_START__613);
TMP_1122=lisp.callFunctionWithCallStack(G_345,lisp.symbolValue(G_7));
TMP_1123=lisp.callFunctionWithCallStack(G_345,lisp.symbolValue(G_11));
TMP_1124=lisp.callFunctionWithCallStack(G_380,TMP_1122,TMP_1123);
TMP_1125=lisp.callFunctionWithCallStack(G_56,TMP_1121,G_702,TMP_1124);
TMP_1126=lisp.callFunctionWithCallStack(G_380,TMP_1117,TMP_1118,TMP_1119,TMP_1120,TMP_1125);
TMP_1127=lisp.CL_cons(L_LOOP_START__613,TMP_1126);
TMP_1128=lisp.callFunctionWithCallStack(G_380,TMP_1113,TMP_1127);
TMP_1129=lisp.CL_cons(G_1112,TMP_1128);
L_BODY__615=lisp.values1(TMP_1129);
TMP_1130=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1150;
let TMP_1149;
let TMP_1148;
let TMP_1147;
let TMP_1146;
let L_G353__622;
let TMP_1145;
let TMP_1144;
let TMP_1143;
let TMP_1142;
let TMP_1141;
let TMP_1140;
let L_G352__621;
let TMP_1139;
let TMP_1138;
let TMP_1137;
let TMP_1136;
let TMP_1135;
let TMP_1134;
let TMP_1133;
let L_G351__620;
let TMP_1132;
let L_G350__619;
let L_ACCUMULATOR__618;
let TMP_1131;
let L_KINDSLASHACCUMULATOR__617;
let L_NAME__616;
L_NAME__616=arguments[0];
L_KINDSLASHACCUMULATOR__617=arguments[1];
{
TMP_1131=lisp.callFunctionWithCallStack(G_259,L_KINDSLASHACCUMULATOR__617);
L_ACCUMULATOR__618=lisp.values1(TMP_1131);
{
L_G350__619=lisp.values1(L_ACCUMULATOR__618);
{
TMP_1132=lisp.callFunctionWithCallStack(G_27,L_G350__619,G_106);
L_G351__620=lisp.values1(TMP_1132);
if(lisp.values1(L_G351__620) !== lisp.S_nil){
TMP_1134=G_117.func(L_ACCUMULATOR__618);
TMP_1135=G_135.func(L_ACCUMULATOR__618);
TMP_1136=lisp.callFunctionWithCallStack(G_54,TMP_1134,TMP_1135,L_NAME__616);
TMP_1137=lisp.callFunctionWithCallStack(G_54,G_223,TMP_1136,L_BODY__615);
L_BODY__615=(TMP_1138=lisp.values1(TMP_1137));
TMP_1133=lisp.values1(TMP_1138);
}else{
{
TMP_1139=lisp.callFunctionWithCallStack(G_27,L_G350__619,G_161);
L_G352__621=lisp.values1(TMP_1139);
if(lisp.values1(L_G352__621) !== lisp.S_nil){
TMP_1141=G_170.func(L_ACCUMULATOR__618);
TMP_1142=lisp.callFunctionWithCallStack(G_54,TMP_1141,L_NAME__616);
TMP_1143=lisp.callFunctionWithCallStack(G_54,G_225,TMP_1142,L_BODY__615);
L_BODY__615=(TMP_1144=lisp.values1(TMP_1143));
TMP_1140=lisp.values1(TMP_1144);
}else{
{
TMP_1145=lisp.callFunctionWithCallStack(G_27,L_G350__619,G_195);
L_G353__622=lisp.values1(TMP_1145);
if(lisp.values1(L_G353__622) !== lisp.S_nil){
TMP_1147=G_203.func(L_ACCUMULATOR__618);
TMP_1148=lisp.callFunctionWithCallStack(G_54,TMP_1147,L_NAME__616);
TMP_1149=lisp.callFunctionWithCallStack(G_54,G_227,TMP_1148,L_BODY__615);
L_BODY__615=(TMP_1150=lisp.values1(TMP_1149));
TMP_1146=lisp.values1(TMP_1150);
}else{
TMP_1146=lisp.values1(lisp.S_nil);
}
}
TMP_1140=TMP_1146;
}
}
TMP_1133=TMP_1140;
}
}
}
}
return TMP_1133;
});
lisp.callFunctionWithCallStack(G_1151,TMP_1130,lisp.symbolValue(G_16));
{
L_G354__624=lisp.values1(lisp.symbolValue(G_17));
for(;;){
TMP_1152=lisp.callFunctionWithCallStack(G_421,L_G354__624);
if(lisp.values1(TMP_1152) !== lisp.S_nil){
}else{
{
TMP_1153=lisp.callFunctionWithCallStack(G_261,L_G354__624);
L_ITERATOR__625=lisp.values1(TMP_1153);
TMP_1154=lisp.callFunctionWithCallStack(G_259,L_G354__624);
L_G354__624=lisp.values1(TMP_1154);
TMP_1156=lisp.callFunctionWithCallStack(G_261,L_ITERATOR__625);
TMP_1157=lisp.callFunctionWithCallStack(G_259,L_ITERATOR__625);
TMP_1158=lisp.callFunctionWithCallStack(G_54,TMP_1156,TMP_1157);
TMP_1159=lisp.callFunctionWithCallStack(G_54,G_1155,TMP_1158,L_BODY__615);
L_BODY__615=lisp.values1(TMP_1159);
}
continue;
}
break;
}
}
{
L_G361__628=lisp.values1(lisp.symbolValue(G_12));
for(;;){
TMP_1160=lisp.callFunctionWithCallStack(G_421,L_G361__628);
if(lisp.values1(TMP_1160) !== lisp.S_nil){
}else{
{
TMP_1161=lisp.callFunctionWithCallStack(G_261,L_G361__628);
L_BINDINGS__629=lisp.values1(TMP_1161);
TMP_1162=lisp.callFunctionWithCallStack(G_259,L_G361__628);
L_G361__628=lisp.values1(TMP_1162);
{
L_G368__630=lisp.values1(L_BINDINGS__629);
{
TMP_1163=lisp.callFunctionWithCallStack(G_27,L_G368__630,G_25);
L_G369__631=lisp.values1(TMP_1163);
if(lisp.values1(L_G369__631) !== lisp.S_nil){
TMP_1165=G_35.func(L_BINDINGS__629);
TMP_1166=lisp.callFunctionWithCallStack(G_54,G_1028,TMP_1165,L_BODY__615);
TMP_1164=lisp.values1(TMP_1166);
}else{
{
TMP_1167=lisp.callFunctionWithCallStack(G_27,L_G368__630,G_72);
L_G370__632=lisp.values1(TMP_1167);
if(lisp.values1(L_G370__632) !== lisp.S_nil){
TMP_1169=G_81.func(L_BINDINGS__629);
TMP_1170=lisp.callFunctionWithCallStack(G_54,L_BODY__615);
TMP_1171=lisp.callFunctionWithCallStack(G_380,TMP_1169,TMP_1170);
TMP_1172=lisp.CL_cons(G_1106,TMP_1171);
TMP_1168=lisp.values1(TMP_1172);
}else{
TMP_1168=lisp.values1(lisp.S_nil);
}
}
TMP_1164=lisp.values1(lisp.values1(TMP_1168));
}
}
}
L_BODY__615=lisp.values1(lisp.values1(lisp.values1(TMP_1164)));
}
continue;
}
break;
}
}
if(lisp.values1(lisp.symbolValue(G_13)) !== lisp.S_nil){
TMP_1173=lisp.CL_cons(lisp.symbolValue(G_13),lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_1174=lisp.callFunctionWithCallStack(G_54,TMP_1173);
TMP_1175=lisp.callFunctionWithCallStack(G_54,G_1028,TMP_1174,L_BODY__615);
L_BODY__615=lisp.values1(TMP_1175);
}else{
}
TMP_1177=lisp.callFunctionWithCallStack(G_54,G_1176,lisp.symbolValue(G_5),L_BODY__615);
}
}finally{
G_18.value=save_STARLOOP_BODYSTAR__612;
G_14.value=save_STARIT_ENABLE_CONTEXTSTAR__611;
G_13.value=save_STARITSTAR__610;
G_10.value=save_STARAFTER_UPDATE_FORMSSTAR__609;
G_9.value=save_STARBEFORE_UPDATE_FORMSSTAR__608;
G_8.value=save_STARLOOP_TEST_FORMSSTAR__607;
G_11.value=save_STARRESULT_FORMSSTAR__606;
G_17.value=save_STARHASH_TABLE_ITERATORSSTAR__605;
G_16.value=save_STARACCUMULATORSSTAR__604;
G_12.value=save_STARBINDINGSSTAR__603;
G_7.value=save_STARFINALLY_FORMSSTAR__602;
G_6.value=save_STARINITIALLY_FORMSSTAR__601;
G_5.value=save_STARNAMEDSTAR__600;
}
}
return TMP_1177;
});
CL_VALTAN_CORESLASHLOOP_EXPAND_COMPLEX_LOOP=lisp.values1(F_EXPAND_COMPLEX_LOOP_1107);
let F_EXPAND_LOOP_1178;
F_EXPAND_LOOP_1178=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1179, arguments.length);
}
let TMP_1190;
let TMP_1189;
let TMP_1188;
let TMP_1187;
let TMP_1186;
let L_TAG__636;
let TMP_1185;
let TMP_1184;
let TMP_1183;
let TMP_1182;
let TMP_1181;
let TMP_1180;
let L_FORMS__634;
L_FORMS__634=arguments[0];
if(lisp.values1(L_FORMS__634) !== lisp.S_nil){
TMP_1181=lisp.callFunctionWithCallStack(G_261,L_FORMS__634);
TMP_1182=lisp.CL_symbolp(TMP_1181);
TMP_1180=lisp.values1(TMP_1182);
}else{
TMP_1180=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1180) !== lisp.S_nil){
TMP_1184=G_1108.func(L_FORMS__634);
TMP_1183=TMP_1184;
}else{
{
TMP_1185=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([76, 79, 79, 80, 45, 83, 84, 65, 82, 84])));
L_TAG__636=lisp.values1(TMP_1185);
TMP_1186=lisp.callFunctionWithCallStack(G_54,G_701,L_TAG__636);
TMP_1187=lisp.callFunctionWithCallStack(G_54,TMP_1186);
TMP_1188=lisp.callFunctionWithCallStack(G_380,L_FORMS__634,TMP_1187);
TMP_1189=lisp.callFunctionWithCallStack(G_56,G_1112,L_TAG__636,TMP_1188);
TMP_1190=lisp.callFunctionWithCallStack(G_54,G_1176,lisp.S_nil,TMP_1189);
}
TMP_1183=TMP_1190;
}
return TMP_1183;
});
CL_VALTAN_CORESLASHLOOP_EXPAND_LOOP=lisp.values1(F_EXPAND_LOOP_1178);
// initialize symbols
G_2 = lisp.intern('*LOOP-EXPS*', 'VALTAN-CORE/LOOP');
G_3 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_4 = lisp.intern('T', 'COMMON-LISP');
G_5 = lisp.intern('*NAMED*', 'VALTAN-CORE/LOOP');
G_6 = lisp.intern('*INITIALLY-FORMS*', 'VALTAN-CORE/LOOP');
G_7 = lisp.intern('*FINALLY-FORMS*', 'VALTAN-CORE/LOOP');
G_8 = lisp.intern('*LOOP-TEST-FORMS*', 'VALTAN-CORE/LOOP');
G_9 = lisp.intern('*BEFORE-UPDATE-FORMS*', 'VALTAN-CORE/LOOP');
G_10 = lisp.intern('*AFTER-UPDATE-FORMS*', 'VALTAN-CORE/LOOP');
G_11 = lisp.intern('*RESULT-FORMS*', 'VALTAN-CORE/LOOP');
G_12 = lisp.intern('*BINDINGS*', 'VALTAN-CORE/LOOP');
G_13 = lisp.intern('*IT*', 'VALTAN-CORE/LOOP');
G_14 = lisp.intern('*IT-ENABLE-CONTEXT*', 'VALTAN-CORE/LOOP');
G_16 = lisp.intern('*ACCUMULATORS*', 'VALTAN-CORE/LOOP');
G_17 = lisp.intern('*HASH-TABLE-ITERATORS*', 'VALTAN-CORE/LOOP');
G_18 = lisp.intern('*LOOP-BODY*', 'VALTAN-CORE/LOOP');
G_20 = lisp.intern('COPY-LET-BINDINGS', 'VALTAN-CORE/LOOP');
G_22 = lisp.intern('COPY-STRUCTURE', 'COMMON-LISP');
G_24 = lisp.intern('LET-BINDINGS-P', 'VALTAN-CORE/LOOP');
G_25 = lisp.intern('LET-BINDINGS', 'VALTAN-CORE/LOOP');
G_27 = lisp.intern('TYPEP', 'COMMON-LISP');
G_29 = lisp.intern('MAKE-LET-BINDINGS', 'VALTAN-CORE/LOOP');
G_30 = lisp.intern('PAIRS', 'KEYWORD');
G_35 = lisp.intern('LET-BINDINGS-PAIRS', 'VALTAN-CORE/LOOP');
G_37 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_38 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_40 = lisp.intern('(SETF LET-BINDINGS-PAIRS)', 'VALTAN-CORE/LOOP');
G_44 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_48 = lisp.intern('GENSYM', 'COMMON-LISP');
G_50 = lisp.intern('%MAPCAR', 'SYSTEM');
G_51 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_54 = lisp.intern('LIST', 'COMMON-LISP');
G_56 = lisp.intern('LIST*', 'COMMON-LISP');
G_59 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_62 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_63 = lisp.intern('PRIN1', 'COMMON-LISP');
G_66 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_68 = lisp.intern('COPY-DESTRUCTURING-BINDINGS', 'VALTAN-CORE/LOOP');
G_71 = lisp.intern('DESTRUCTURING-BINDINGS-P', 'VALTAN-CORE/LOOP');
G_72 = lisp.intern('DESTRUCTURING-BINDINGS', 'VALTAN-CORE/LOOP');
G_75 = lisp.intern('MAKE-DESTRUCTURING-BINDINGS', 'VALTAN-CORE/LOOP');
G_76 = lisp.intern('PAIR', 'KEYWORD');
G_81 = lisp.intern('DESTRUCTURING-BINDINGS-PAIR', 'VALTAN-CORE/LOOP');
G_84 = lisp.intern('(SETF DESTRUCTURING-BINDINGS-PAIR)', 'VALTAN-CORE/LOOP');
G_102 = lisp.intern('COPY-LIST-COLLECTOR', 'VALTAN-CORE/LOOP');
G_105 = lisp.intern('LIST-COLLECTOR-P', 'VALTAN-CORE/LOOP');
G_106 = lisp.intern('LIST-COLLECTOR', 'VALTAN-CORE/LOOP');
G_109 = lisp.intern('MAKE-LIST-COLLECTOR', 'VALTAN-CORE/LOOP');
G_110 = lisp.intern('HEAD', 'KEYWORD');
G_112 = lisp.intern('TAIL', 'KEYWORD');
G_117 = lisp.intern('LIST-COLLECTOR-HEAD', 'VALTAN-CORE/LOOP');
G_120 = lisp.intern('(SETF LIST-COLLECTOR-HEAD)', 'VALTAN-CORE/LOOP');
G_135 = lisp.intern('LIST-COLLECTOR-TAIL', 'VALTAN-CORE/LOOP');
G_138 = lisp.intern('(SETF LIST-COLLECTOR-TAIL)', 'VALTAN-CORE/LOOP');
G_157 = lisp.intern('COPY-SUM-COUNTER', 'VALTAN-CORE/LOOP');
G_160 = lisp.intern('SUM-COUNTER-P', 'VALTAN-CORE/LOOP');
G_161 = lisp.intern('SUM-COUNTER', 'VALTAN-CORE/LOOP');
G_164 = lisp.intern('MAKE-SUM-COUNTER', 'VALTAN-CORE/LOOP');
G_165 = lisp.intern('VAR', 'KEYWORD');
G_170 = lisp.intern('SUM-COUNTER-VAR', 'VALTAN-CORE/LOOP');
G_173 = lisp.intern('(SETF SUM-COUNTER-VAR)', 'VALTAN-CORE/LOOP');
G_191 = lisp.intern('COPY-MAXMIN-COLLECTOR', 'VALTAN-CORE/LOOP');
G_194 = lisp.intern('MAXMIN-COLLECTOR-P', 'VALTAN-CORE/LOOP');
G_195 = lisp.intern('MAXMIN-COLLECTOR', 'VALTAN-CORE/LOOP');
G_198 = lisp.intern('MAKE-MAXMIN-COLLECTOR', 'VALTAN-CORE/LOOP');
G_203 = lisp.intern('MAXMIN-COLLECTOR-VAR', 'VALTAN-CORE/LOOP');
G_206 = lisp.intern('(SETF MAXMIN-COLLECTOR-VAR)', 'VALTAN-CORE/LOOP');
G_223 = lisp.intern('WITH-LIST-COLLECTOR', 'VALTAN-CORE/LOOP');
G_224 = lisp.intern('COLLECTING', 'VALTAN-CORE/LOOP');
G_225 = lisp.intern('WITH-SUM-COUNTER', 'VALTAN-CORE/LOOP');
G_226 = lisp.intern('SUM-COUNT', 'VALTAN-CORE/LOOP');
G_227 = lisp.intern('WITH-MAXMIN-COLLECTOR', 'VALTAN-CORE/LOOP');
G_228 = lisp.intern('COLLECT-MAXMIN', 'VALTAN-CORE/LOOP');
G_230 = lisp.intern('LOOP-ERROR', 'VALTAN-CORE/LOOP');
G_231 = lisp.intern('ERROR', 'COMMON-LISP');
G_234 = lisp.intern('APPLY', 'COMMON-LISP');
G_236 = lisp.intern('ENSURE-KEYWORD', 'VALTAN-CORE/LOOP');
G_238 = lisp.intern('KEYWORDP', 'COMMON-LISP');
G_243 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_244 = lisp.intern('KEYWORD', 'KEYWORD');
G_246 = lisp.intern('INTERN', 'COMMON-LISP');
G_248 = lisp.intern('TO-KEYWORD', 'VALTAN-CORE/LOOP');
G_257 = lisp.intern('NEXT-EXP', 'VALTAN-CORE/LOOP');
G_259 = lisp.intern('CDR', 'COMMON-LISP');
G_261 = lisp.intern('CAR', 'COMMON-LISP');
G_263 = lisp.intern('LOOKAHEAD', 'VALTAN-CORE/LOOP');
G_266 = lisp.intern('END-OF-LOOP-P', 'VALTAN-CORE/LOOP');
G_268 = lisp.intern('NULL', 'COMMON-LISP');
G_270 = lisp.intern('CHECK-SIMPLE-VAR', 'VALTAN-CORE/LOOP');
G_275 = lisp.intern('NOT', 'COMMON-LISP');
G_282 = lisp.intern('ADD-LOOP-TEST-FORM', 'VALTAN-CORE/LOOP');
G_285 = lisp.intern('ADD-BEFORE-UPDATE-FORM', 'VALTAN-CORE/LOOP');
G_289 = lisp.intern('ADD-AFTER-UPDATE-FORM', 'VALTAN-CORE/LOOP');
G_293 = lisp.intern('ADD-INITIALLY-FORM', 'VALTAN-CORE/LOOP');
G_296 = lisp.intern('ADD-INITIALLY-FORMS', 'VALTAN-CORE/LOOP');
G_299 = lisp.intern('MAPC', 'COMMON-LISP');
G_301 = lisp.intern('ADD-FINALLY-FORM', 'VALTAN-CORE/LOOP');
G_304 = lisp.intern('ADD-FINALLY-FORMS', 'VALTAN-CORE/LOOP');
G_308 = lisp.intern('PARSE-D-TYPE-SPEC', 'VALTAN-CORE/LOOP');
G_317 = lisp.intern('PARSE-TYPE-SPEC', 'VALTAN-CORE/LOOP');
G_319 = lisp.intern('FIXNUM', 'COMMON-LISP');
G_320 = lisp.intern('FLOAT', 'COMMON-LISP');
G_322 = lisp.intern('MEMBER', 'COMMON-LISP');
G_326 = lisp.intern('OF-TYPE', 'KEYWORD');
G_332 = lisp.intern('IT', 'VALTAN-CORE/LOOP');
G_338 = lisp.intern('PARSE-COMPOUND-FORMS', 'VALTAN-CORE/LOOP');
G_345 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_349 = lisp.intern('GEN-D-VAR-BINDINGS', 'VALTAN-CORE/LOOP');
G_363 = lisp.intern('MAP-D-VAR-D-TYPE-SPEC', 'VALTAN-CORE/LOOP');
G_380 = lisp.intern('APPEND', 'COMMON-LISP');
G_381 = lisp.intern('INTEGER', 'COMMON-LISP');
G_390 = lisp.intern('PARSE-WITH-CLAUSE', 'VALTAN-CORE/LOOP');
G_395 = lisp.intern('=', 'KEYWORD');
G_407 = lisp.intern('NCONC', 'COMMON-LISP');
G_414 = lisp.intern('AND', 'KEYWORD');
G_421 = lisp.intern('ENDP', 'COMMON-LISP');
G_427 = lisp.intern('PARSE-FOR-AS-ARITHMETIC', 'VALTAN-CORE/LOOP');
G_438 = lisp.intern('BY', 'KEYWORD');
G_451 = lisp.intern('STRING', 'COMMON-LISP');
G_457 = lisp.intern('FROM', 'KEYWORD');
G_458 = lisp.intern('UPFROM', 'KEYWORD');
G_459 = lisp.intern('DOWNFROM', 'KEYWORD');
G_462 = lisp.intern('EQL', 'COMMON-LISP');
G_466 = lisp.intern('UP', 'KEYWORD');
G_469 = lisp.intern('DOWN', 'KEYWORD');
G_475 = lisp.intern('TO', 'KEYWORD');
G_476 = lisp.intern('UPTO', 'KEYWORD');
G_477 = lisp.intern('DOWNTO', 'KEYWORD');
G_478 = lisp.intern('BELOW', 'KEYWORD');
G_479 = lisp.intern('ABOVE', 'KEYWORD');
G_501 = lisp.intern('>=', 'COMMON-LISP');
G_502 = lisp.intern('>', 'COMMON-LISP');
G_504 = lisp.intern('<=', 'COMMON-LISP');
G_505 = lisp.intern('<', 'COMMON-LISP');
G_507 = lisp.intern('SETQ', 'COMMON-LISP');
G_510 = lisp.intern('-', 'COMMON-LISP');
G_511 = lisp.intern('+', 'COMMON-LISP');
G_517 = lisp.intern('D-SETQ', 'VALTAN-CORE/LOOP');
G_519 = lisp.intern('PARSE-FOR-AS-EQUALS-THEN', 'VALTAN-CORE/LOOP');
G_525 = lisp.intern('THEN', 'KEYWORD');
G_527 = lisp.intern('STRING=', 'COMMON-LISP');
G_538 = lisp.intern('PARSE-FOR-AS-BY-CLAUSE', 'VALTAN-CORE/LOOP');
G_545 = lisp.intern('FUNCTION-FORM-P', 'VALTAN-CORE/LOOP');
G_548 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_553 = lisp.intern('CADR', 'COMMON-LISP');
G_555 = lisp.intern('PARSE-BY-FORM', 'VALTAN-CORE/LOOP');
G_568 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_573 = lisp.intern('PARSE-FOR-AS-IN-LIST', 'VALTAN-CORE/LOOP');
G_586 = lisp.intern('PARSE-FOR-AS-ON-LIST', 'VALTAN-CORE/LOOP');
G_596 = lisp.intern('CONSP', 'COMMON-LISP');
G_600 = lisp.intern('PARSE-FOR-AS-ACROSS', 'VALTAN-CORE/LOOP');
G_611 = lisp.intern('AREF', 'COMMON-LISP');
G_613 = lisp.intern('LENGTH', 'COMMON-LISP');
G_619 = lisp.intern('PARSE-FOR-AS-HASH', 'VALTAN-CORE/LOOP');
G_622 = lisp.intern('IN', 'KEYWORD');
G_623 = lisp.intern('OF', 'KEYWORD');
G_626 = lisp.makeSymbol("NULL");G_627 = lisp.intern('USING', 'KEYWORD');
G_636 = lisp.intern('=', 'COMMON-LISP');
G_639 = lisp.intern('HASH-VALUE', 'KEYWORD');
G_640 = lisp.intern('HASH-KEY', 'KEYWORD');
G_644 = lisp.intern('AND', 'COMMON-LISP');
G_645 = lisp.intern('FORM', 'VALTAN-CORE/LOOP');
G_646 = lisp.intern('EQ', 'COMMON-LISP');
G_647 = lisp.intern('IF', 'COMMON-LISP');
G_648 = lisp.intern('HASH-KEY-P', 'VALTAN-CORE/LOOP');
G_658 = lisp.intern('LISTP', 'COMMON-LISP');
G_696 = lisp.intern('UNLESS', 'COMMON-LISP');
G_697 = lisp.intern('MULTIPLE-VALUE-SETQ', 'COMMON-LISP');
G_701 = lisp.intern('GO', 'COMMON-LISP');
G_702 = lisp.intern('END-LOOP', 'VALTAN-CORE/LOOP');
G_711 = lisp.intern('PARSE-FOR-AS-HASH-OR-PACKAGE', 'VALTAN-CORE/LOOP');
G_714 = lisp.intern('EACH', 'KEYWORD');
G_715 = lisp.intern('THE', 'KEYWORD');
G_719 = lisp.intern('HASH-KEYS', 'KEYWORD');
G_723 = lisp.intern('HASH-VALUES', 'KEYWORD');
G_729 = lisp.intern('PARSE-FOR-AS-CLAUSE-1', 'VALTAN-CORE/LOOP');
G_735 = lisp.intern('ON', 'KEYWORD');
G_737 = lisp.intern('ACROSS', 'KEYWORD');
G_739 = lisp.intern('BEING', 'KEYWORD');
G_753 = lisp.intern('FIRST', 'COMMON-LISP');
G_755 = lisp.intern('REST', 'COMMON-LISP');
G_759 = lisp.intern('PROG1', 'COMMON-LISP');
G_766 = lisp.intern('MAPCAN', 'COMMON-LISP');
G_773 = lisp.intern('PARSE-FOR-AS-CLAUSE', 'VALTAN-CORE/LOOP');
G_780 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_784 = lisp.intern('PARSE-INITIAL-FINAL-CLAUSE', 'VALTAN-CORE/LOOP');
G_785 = lisp.intern('INITIALLY', 'KEYWORD');
G_789 = lisp.intern('FINALLY', 'KEYWORD');
G_794 = lisp.intern('PARSE-VARIABLE-CLAUSE', 'VALTAN-CORE/LOOP');
G_797 = lisp.intern('WITH', 'KEYWORD');
G_800 = lisp.intern('FOR', 'KEYWORD');
G_801 = lisp.intern('AS', 'KEYWORD');
G_806 = lisp.intern('PARSE-DOING-CLAUSE', 'VALTAN-CORE/LOOP');
G_808 = lisp.intern('PROGN', 'COMMON-LISP');
G_811 = lisp.intern('PARSE-FORM-OR-IT', 'VALTAN-CORE/LOOP');
G_813 = lisp.intern('IT', 'KEYWORD');
G_821 = lisp.intern('PARSE-RETURN-CLAUSE', 'VALTAN-CORE/LOOP');
G_822 = lisp.intern('RETURN', 'COMMON-LISP');
G_826 = lisp.intern('PARSE-UNCONDITIONAL-CLAUSE', 'VALTAN-CORE/LOOP');
G_827 = lisp.intern('DO', 'KEYWORD');
G_828 = lisp.intern('DOING', 'KEYWORD');
G_832 = lisp.intern('RETURN', 'KEYWORD');
G_837 = lisp.intern('PARSE-INTO-CLAUSE', 'VALTAN-CORE/LOOP');
G_840 = lisp.intern('INTO', 'KEYWORD');
G_844 = lisp.intern('SELECT-ACCUMULATOR', 'VALTAN-CORE/LOOP');
G_846 = lisp.intern('PARSE-COLLECT-CLAUSE', 'VALTAN-CORE/LOOP');
G_850 = lisp.intern('GETHASH', 'COMMON-LISP');
G_857 = lisp.intern('(SETF GETHASH)', 'COMMON-LISP');
G_862 = lisp.intern('PARSE-COUNT-CLAUSE', 'VALTAN-CORE/LOOP');
G_876 = lisp.intern('PARSE-MAXMIN-CLAUSE', 'VALTAN-CORE/LOOP');
G_890 = lisp.intern('PARSE-ACCUMULATION-CLAUSE', 'VALTAN-CORE/LOOP');
G_891 = lisp.intern('COLLECT', 'KEYWORD');
G_892 = lisp.intern('COLLECTING', 'KEYWORD');
G_896 = lisp.intern('APPEND', 'KEYWORD');
G_897 = lisp.intern('APPENDING', 'KEYWORD');
G_901 = lisp.intern('NCONC', 'KEYWORD');
G_902 = lisp.intern('NCONCING', 'KEYWORD');
G_906 = lisp.intern('COUNT', 'KEYWORD');
G_907 = lisp.intern('COUNTING', 'KEYWORD');
G_911 = lisp.intern('SUM', 'KEYWORD');
G_912 = lisp.intern('SUMMING', 'KEYWORD');
G_916 = lisp.intern('MAXIMIZE', 'KEYWORD');
G_917 = lisp.intern('MAXIMIZING', 'KEYWORD');
G_920 = lisp.intern('MAX', 'KEYWORD');
G_922 = lisp.intern('MINIMIZE', 'KEYWORD');
G_923 = lisp.intern('MINIMIZING', 'KEYWORD');
G_926 = lisp.intern('MIN', 'KEYWORD');
G_929 = lisp.intern('PARSE-SELECTABLE-CLAUSE', 'VALTAN-CORE/LOOP');
G_937 = lisp.intern('PARSE-CONDITIONAL-CLAUSE', 'VALTAN-CORE/LOOP');
G_942 = lisp.intern('PARSE-CONDITIONAL-THEN-ELSE-CLAUSE', 'VALTAN-CORE/LOOP');
G_953 = lisp.intern('PARSE-CONDITIONAL-CLAUSE-1', 'VALTAN-CORE/LOOP');
G_958 = lisp.intern('ELSE', 'KEYWORD');
G_964 = lisp.intern('END', 'KEYWORD');
G_966 = lisp.intern('IF', 'KEYWORD');
G_967 = lisp.intern('WHEN', 'KEYWORD');
G_973 = lisp.intern('UNLESS', 'KEYWORD');
G_987 = lisp.intern('PARSE-TERMINATION-TEST-CLAUSE', 'VALTAN-CORE/LOOP');
G_988 = lisp.intern('WHILE', 'KEYWORD');
G_993 = lisp.intern('UNTIL', 'KEYWORD');
G_996 = lisp.intern('WHEN', 'COMMON-LISP');
G_999 = lisp.intern('REPEAT', 'KEYWORD');
G_1009 = lisp.intern('DECF', 'COMMON-LISP');
G_1012 = lisp.intern('ALWAYS', 'KEYWORD');
G_1018 = lisp.intern('NEVER', 'KEYWORD');
G_1024 = lisp.intern('THEREIS', 'KEYWORD');
G_1028 = lisp.intern('LET', 'COMMON-LISP');
G_1036 = lisp.intern('PARSE-MAIN-CLAUSE', 'VALTAN-CORE/LOOP');
G_1054 = lisp.intern('PARSE-NAME-CLAUSE', 'VALTAN-CORE/LOOP');
G_1057 = lisp.intern('NAMED', 'KEYWORD');
G_1062 = lisp.intern('PARSE-VARIABLE-CLAUSES', 'VALTAN-CORE/LOOP');
G_1068 = lisp.intern('PARSE-MAIN-CLAUSES', 'VALTAN-CORE/LOOP');
G_1075 = lisp.intern('PARSE-LOOP', 'VALTAN-CORE/LOOP');
G_1078 = lisp.intern('EXPAND-LOOP-DESTRUCTURING-BIND', 'VALTAN-CORE/LOOP');
G_1106 = lisp.intern('LOOP-DESTRUCTURING-BIND', 'VALTAN-CORE/LOOP');
G_1108 = lisp.intern('EXPAND-COMPLEX-LOOP', 'VALTAN-CORE/LOOP');
G_1110 = lisp.intern('MAKE-HASH-TABLE', 'COMMON-LISP');
G_1112 = lisp.intern('TAGBODY', 'COMMON-LISP');
G_1151 = lisp.intern('MAPHASH', 'COMMON-LISP');
G_1155 = lisp.intern('WITH-HASH-TABLE-ITERATOR', 'COMMON-LISP');
G_1176 = lisp.intern('BLOCK', 'COMMON-LISP');
G_1179 = lisp.intern('EXPAND-LOOP', 'VALTAN-CORE/LOOP');
G_1191 = lisp.intern('LOOP', 'COMMON-LISP');
G_1192 = lisp.intern('LOOP-FINISH', 'COMMON-LISP');
G_1193 = lisp.intern('MACRO', 'COMPILER');
G_1196 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_1199 = lisp.intern('HEAD', 'VALTAN-CORE/LOOP');
G_1200 = lisp.intern('TAIL', 'VALTAN-CORE/LOOP');
G_1201 = lisp.intern('VAR', 'VALTAN-CORE/LOOP');
G_1202 = lisp.intern('&BODY', 'COMMON-LISP');
G_1203 = lisp.intern('BODY', 'VALTAN-CORE/LOOP');
G_1217 = lisp.intern('LET*', 'COMMON-LISP');
G_1232 = lisp.intern('VALUE', 'VALTAN-CORE/LOOP');
G_1233 = lisp.intern('KIND', 'VALTAN-CORE/LOOP');
G_1245 = lisp.intern('SETF', 'COMMON-LISP');
G_1252 = lisp.intern('COPY-LIST', 'COMMON-LISP');
G_1265 = lisp.intern('DO', 'COMMON-LISP');
G_1283 = lisp.intern('COUNTER-VAR', 'VALTAN-CORE/LOOP');
G_1327 = lisp.intern('MAXMIN-VAR', 'VALTAN-CORE/LOOP');
G_1359 = lisp.intern('OR', 'COMMON-LISP');
G_1376 = lisp.intern('D-VAR', 'VALTAN-CORE/LOOP');
G_1407 = lisp.intern('REVERSE', 'COMMON-LISP');
G_1409 = lisp.intern('DECLARE', 'COMMON-LISP');
G_1410 = lisp.intern('IGNORABLE', 'COMMON-LISP');
G_1413 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_1421 = lisp.intern('INTO', 'VALTAN-CORE/LOOP');
G_1440 = lisp.intern('COND', 'COMMON-LISP');
G_1443 = lisp.intern('ACCUMULATOR', 'VALTAN-CORE/LOOP');
G_1448 = lisp.intern('CONS', 'COMMON-LISP');
G_1470 = lisp.intern('FORMS', 'COMMON-LISP');
G_1478 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.ensurePackage('VALTAN-CORE/LOOP');lisp.changeCurrentPackage('VALTAN-CORE/LOOP');lisp.CL_put(G_2,G_3,G_4);
lisp.CL_put(G_5,G_3,G_4);
lisp.CL_put(G_6,G_3,G_4);
lisp.CL_put(G_7,G_3,G_4);
lisp.CL_put(G_8,G_3,G_4);
lisp.CL_put(G_9,G_3,G_4);
lisp.CL_put(G_10,G_3,G_4);
lisp.CL_put(G_11,G_3,G_4);
lisp.CL_put(G_12,G_3,G_4);
lisp.CL_put(G_13,G_3,G_4);
TMP_15=lisp.CL_boundp(G_14);
if(lisp.values1(TMP_15) !== lisp.S_nil){
}else{
lisp.CL_set(G_14,lisp.S_nil);
}
lisp.CL_put(G_14,G_3,G_4);
lisp.CL_put(G_16,G_3,G_4);
lisp.CL_put(G_17,G_3,G_4);
lisp.CL_put(G_18,G_3,G_4);
CL_VALTAN_CORESLASHLOOP_COPY_LET_BINDINGS.lisp_name = 'COPY-LET-BINDINGS'
lisp.setSymbolFunction(G_20, CL_VALTAN_CORESLASHLOOP_COPY_LET_BINDINGS);
CL_VALTAN_CORESLASHLOOP_LET_BINDINGS_P.lisp_name = 'LET-BINDINGS-P'
lisp.setSymbolFunction(G_24, CL_VALTAN_CORESLASHLOOP_LET_BINDINGS_P);
CL_VALTAN_CORESLASHLOOP_MAKE_LET_BINDINGS.lisp_name = 'MAKE-LET-BINDINGS'
lisp.setSymbolFunction(G_29, CL_VALTAN_CORESLASHLOOP_MAKE_LET_BINDINGS);
CL_VALTAN_CORESLASHLOOP_LET_BINDINGS_PAIRS.lisp_name = 'LET-BINDINGS-PAIRS'
lisp.setSymbolFunction(G_35, CL_VALTAN_CORESLASHLOOP_LET_BINDINGS_PAIRS);
TMP_41=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_43;
let TMP_42;
let L_STRUCTURE__10;
let L_VALUE__9;
L_VALUE__9=arguments[0];
L_STRUCTURE__10=arguments[1];
TMP_42=lisp.CL_structurep(L_STRUCTURE__10);
if(lisp.values1(TMP_42) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__10,G_37);
}
TMP_43=lisp.CL_structureSet(L_STRUCTURE__10,0,L_VALUE__9);
return TMP_43;
});
lisp.CL_setSymbolFunction(G_40,TMP_41);
TMP_45=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_58;
let TMP_57;
let TMP_55;
let TMP_53;
let L_STORE2__18;
let TMP_52;
let L_GENSYMS0__17;
let TMP_49;
let TMP_46;
let L_ARGS1__15;
let L_G6__13;
let L_G5__12;
L_G5__12=arguments[0];
{
L_G6__13=lisp.values1(L_G5__12);
{
L_ARGS1__15=lisp.values1(L_G6__13);
{
TMP_46=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_47;
let L_X__16;
L_X__16=arguments[0];
TMP_47=lisp.callFunctionWithCallStack(G_48);
return TMP_47;
});
TMP_49=lisp.callFunctionWithCallStack(G_50,TMP_46,L_ARGS1__15);
L_GENSYMS0__17=lisp.values1(TMP_49);
TMP_52=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE2__18=lisp.values1(TMP_52);
TMP_53=lisp.callFunctionWithCallStack(G_54,L_STORE2__18);
TMP_55=lisp.callFunctionWithCallStack(G_56,G_40,L_STORE2__18,L_GENSYMS0__17);
TMP_57=lisp.callFunctionWithCallStack(G_56,G_35,L_GENSYMS0__17);
TMP_58=lisp.CL_values(L_GENSYMS0__17,L_ARGS1__15,TMP_53,TMP_55,TMP_57);
}
}
}
return TMP_58;
});
lisp.CL_put(G_35,G_44,TMP_45);
TMP_60=lisp.CL_symbolFunction(G_40);
lisp.CL_put(G_35,G_59,TMP_60);
{
TMP_61=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_65;
let TMP_64;
let L_STREAM__24;
let L_STRUCTURE__23;
L_STRUCTURE__23=arguments[0];
L_STREAM__24=arguments[1];
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__24);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([76, 69, 84, 45, 66, 73, 78, 68, 73, 78, 71, 83])),L_STREAM__24);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__24);
lisp.callFunctionWithCallStack(G_63,G_30,L_STREAM__24);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__24);
TMP_64=lisp.CL_structureRef(L_STRUCTURE__23,0);
lisp.callFunctionWithCallStack(G_63,TMP_64,L_STREAM__24);
TMP_65=lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([41])),L_STREAM__24);
return TMP_65;
});
L_G10__25=lisp.values1(TMP_61);
{
L_G11__26=lisp.values1(L_G10__25);
lisp.CL_put(G_25,G_66,L_G11__26);
}
}
CL_VALTAN_CORESLASHLOOP_COPY_DESTRUCTURING_BINDINGS.lisp_name = 'COPY-DESTRUCTURING-BINDINGS'
lisp.setSymbolFunction(G_68, CL_VALTAN_CORESLASHLOOP_COPY_DESTRUCTURING_BINDINGS);
CL_VALTAN_CORESLASHLOOP_DESTRUCTURING_BINDINGS_P.lisp_name = 'DESTRUCTURING-BINDINGS-P'
lisp.setSymbolFunction(G_71, CL_VALTAN_CORESLASHLOOP_DESTRUCTURING_BINDINGS_P);
CL_VALTAN_CORESLASHLOOP_MAKE_DESTRUCTURING_BINDINGS.lisp_name = 'MAKE-DESTRUCTURING-BINDINGS'
lisp.setSymbolFunction(G_75, CL_VALTAN_CORESLASHLOOP_MAKE_DESTRUCTURING_BINDINGS);
CL_VALTAN_CORESLASHLOOP_DESTRUCTURING_BINDINGS_PAIR.lisp_name = 'DESTRUCTURING-BINDINGS-PAIR'
lisp.setSymbolFunction(G_81, CL_VALTAN_CORESLASHLOOP_DESTRUCTURING_BINDINGS_PAIR);
TMP_85=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_87;
let TMP_86;
let L_STRUCTURE__36;
let L_VALUE__35;
L_VALUE__35=arguments[0];
L_STRUCTURE__36=arguments[1];
TMP_86=lisp.CL_structurep(L_STRUCTURE__36);
if(lisp.values1(TMP_86) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__36,G_37);
}
TMP_87=lisp.CL_structureSet(L_STRUCTURE__36,0,L_VALUE__35);
return TMP_87;
});
lisp.CL_setSymbolFunction(G_84,TMP_85);
TMP_88=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_96;
let TMP_95;
let TMP_94;
let TMP_93;
let L_STORE14__44;
let TMP_92;
let L_GENSYMS12__43;
let TMP_91;
let TMP_89;
let L_ARGS13__41;
let L_G18__39;
let L_G17__38;
L_G17__38=arguments[0];
{
L_G18__39=lisp.values1(L_G17__38);
{
L_ARGS13__41=lisp.values1(L_G18__39);
{
TMP_89=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_90;
let L_X__42;
L_X__42=arguments[0];
TMP_90=lisp.callFunctionWithCallStack(G_48);
return TMP_90;
});
TMP_91=lisp.callFunctionWithCallStack(G_50,TMP_89,L_ARGS13__41);
L_GENSYMS12__43=lisp.values1(TMP_91);
TMP_92=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE14__44=lisp.values1(TMP_92);
TMP_93=lisp.callFunctionWithCallStack(G_54,L_STORE14__44);
TMP_94=lisp.callFunctionWithCallStack(G_56,G_84,L_STORE14__44,L_GENSYMS12__43);
TMP_95=lisp.callFunctionWithCallStack(G_56,G_81,L_GENSYMS12__43);
TMP_96=lisp.CL_values(L_GENSYMS12__43,L_ARGS13__41,TMP_93,TMP_94,TMP_95);
}
}
}
return TMP_96;
});
lisp.CL_put(G_81,G_44,TMP_88);
TMP_97=lisp.CL_symbolFunction(G_84);
lisp.CL_put(G_81,G_59,TMP_97);
{
TMP_98=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_100;
let TMP_99;
let L_STREAM__50;
let L_STRUCTURE__49;
L_STRUCTURE__49=arguments[0];
L_STREAM__50=arguments[1];
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__50);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([68, 69, 83, 84, 82, 85, 67, 84, 85, 82, 73, 78, 71, 45, 66, 73, 78, 68, 73, 78, 71, 83])),L_STREAM__50);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__50);
lisp.callFunctionWithCallStack(G_63,G_76,L_STREAM__50);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__50);
TMP_99=lisp.CL_structureRef(L_STRUCTURE__49,0);
lisp.callFunctionWithCallStack(G_63,TMP_99,L_STREAM__50);
TMP_100=lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([41])),L_STREAM__50);
return TMP_100;
});
L_G22__51=lisp.values1(TMP_98);
{
L_G23__52=lisp.values1(L_G22__51);
lisp.CL_put(G_72,G_66,L_G23__52);
}
}
CL_VALTAN_CORESLASHLOOP_COPY_LIST_COLLECTOR.lisp_name = 'COPY-LIST-COLLECTOR'
lisp.setSymbolFunction(G_102, CL_VALTAN_CORESLASHLOOP_COPY_LIST_COLLECTOR);
CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_P.lisp_name = 'LIST-COLLECTOR-P'
lisp.setSymbolFunction(G_105, CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_P);
CL_VALTAN_CORESLASHLOOP_MAKE_LIST_COLLECTOR.lisp_name = 'MAKE-LIST-COLLECTOR'
lisp.setSymbolFunction(G_109, CL_VALTAN_CORESLASHLOOP_MAKE_LIST_COLLECTOR);
CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_HEAD.lisp_name = 'LIST-COLLECTOR-HEAD'
lisp.setSymbolFunction(G_117, CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_HEAD);
TMP_121=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_123;
let TMP_122;
let L_STRUCTURE__63;
let L_VALUE__62;
L_VALUE__62=arguments[0];
L_STRUCTURE__63=arguments[1];
TMP_122=lisp.CL_structurep(L_STRUCTURE__63);
if(lisp.values1(TMP_122) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__63,G_37);
}
TMP_123=lisp.CL_structureSet(L_STRUCTURE__63,0,L_VALUE__62);
return TMP_123;
});
lisp.CL_setSymbolFunction(G_120,TMP_121);
TMP_124=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_132;
let TMP_131;
let TMP_130;
let TMP_129;
let L_STORE26__71;
let TMP_128;
let L_GENSYMS24__70;
let TMP_127;
let TMP_125;
let L_ARGS25__68;
let L_G30__66;
let L_G29__65;
L_G29__65=arguments[0];
{
L_G30__66=lisp.values1(L_G29__65);
{
L_ARGS25__68=lisp.values1(L_G30__66);
{
TMP_125=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_126;
let L_X__69;
L_X__69=arguments[0];
TMP_126=lisp.callFunctionWithCallStack(G_48);
return TMP_126;
});
TMP_127=lisp.callFunctionWithCallStack(G_50,TMP_125,L_ARGS25__68);
L_GENSYMS24__70=lisp.values1(TMP_127);
TMP_128=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE26__71=lisp.values1(TMP_128);
TMP_129=lisp.callFunctionWithCallStack(G_54,L_STORE26__71);
TMP_130=lisp.callFunctionWithCallStack(G_56,G_120,L_STORE26__71,L_GENSYMS24__70);
TMP_131=lisp.callFunctionWithCallStack(G_56,G_117,L_GENSYMS24__70);
TMP_132=lisp.CL_values(L_GENSYMS24__70,L_ARGS25__68,TMP_129,TMP_130,TMP_131);
}
}
}
return TMP_132;
});
lisp.CL_put(G_117,G_44,TMP_124);
TMP_133=lisp.CL_symbolFunction(G_120);
lisp.CL_put(G_117,G_59,TMP_133);
CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_TAIL.lisp_name = 'LIST-COLLECTOR-TAIL'
lisp.setSymbolFunction(G_135, CL_VALTAN_CORESLASHLOOP_LIST_COLLECTOR_TAIL);
TMP_139=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_141;
let TMP_140;
let L_STRUCTURE__77;
let L_VALUE__76;
L_VALUE__76=arguments[0];
L_STRUCTURE__77=arguments[1];
TMP_140=lisp.CL_structurep(L_STRUCTURE__77);
if(lisp.values1(TMP_140) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__77,G_37);
}
TMP_141=lisp.CL_structureSet(L_STRUCTURE__77,1,L_VALUE__76);
return TMP_141;
});
lisp.CL_setSymbolFunction(G_138,TMP_139);
TMP_142=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_150;
let TMP_149;
let TMP_148;
let TMP_147;
let L_STORE34__85;
let TMP_146;
let L_GENSYMS32__84;
let TMP_145;
let TMP_143;
let L_ARGS33__82;
let L_G38__80;
let L_G37__79;
L_G37__79=arguments[0];
{
L_G38__80=lisp.values1(L_G37__79);
{
L_ARGS33__82=lisp.values1(L_G38__80);
{
TMP_143=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_144;
let L_X__83;
L_X__83=arguments[0];
TMP_144=lisp.callFunctionWithCallStack(G_48);
return TMP_144;
});
TMP_145=lisp.callFunctionWithCallStack(G_50,TMP_143,L_ARGS33__82);
L_GENSYMS32__84=lisp.values1(TMP_145);
TMP_146=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE34__85=lisp.values1(TMP_146);
TMP_147=lisp.callFunctionWithCallStack(G_54,L_STORE34__85);
TMP_148=lisp.callFunctionWithCallStack(G_56,G_138,L_STORE34__85,L_GENSYMS32__84);
TMP_149=lisp.callFunctionWithCallStack(G_56,G_135,L_GENSYMS32__84);
TMP_150=lisp.CL_values(L_GENSYMS32__84,L_ARGS33__82,TMP_147,TMP_148,TMP_149);
}
}
}
return TMP_150;
});
lisp.CL_put(G_135,G_44,TMP_142);
TMP_151=lisp.CL_symbolFunction(G_138);
lisp.CL_put(G_135,G_59,TMP_151);
{
TMP_152=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_155;
let TMP_154;
let TMP_153;
let L_STREAM__91;
let L_STRUCTURE__90;
L_STRUCTURE__90=arguments[0];
L_STREAM__91=arguments[1];
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__91);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([76, 73, 83, 84, 45, 67, 79, 76, 76, 69, 67, 84, 79, 82])),L_STREAM__91);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__91);
lisp.callFunctionWithCallStack(G_63,G_110,L_STREAM__91);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__91);
TMP_153=lisp.CL_structureRef(L_STRUCTURE__90,0);
lisp.callFunctionWithCallStack(G_63,TMP_153,L_STREAM__91);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__91);
lisp.callFunctionWithCallStack(G_63,G_112,L_STREAM__91);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__91);
TMP_154=lisp.CL_structureRef(L_STRUCTURE__90,1);
lisp.callFunctionWithCallStack(G_63,TMP_154,L_STREAM__91);
TMP_155=lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([41])),L_STREAM__91);
return TMP_155;
});
L_G42__92=lisp.values1(TMP_152);
{
L_G43__93=lisp.values1(L_G42__92);
lisp.CL_put(G_106,G_66,L_G43__93);
}
}
CL_VALTAN_CORESLASHLOOP_COPY_SUM_COUNTER.lisp_name = 'COPY-SUM-COUNTER'
lisp.setSymbolFunction(G_157, CL_VALTAN_CORESLASHLOOP_COPY_SUM_COUNTER);
CL_VALTAN_CORESLASHLOOP_SUM_COUNTER_P.lisp_name = 'SUM-COUNTER-P'
lisp.setSymbolFunction(G_160, CL_VALTAN_CORESLASHLOOP_SUM_COUNTER_P);
CL_VALTAN_CORESLASHLOOP_MAKE_SUM_COUNTER.lisp_name = 'MAKE-SUM-COUNTER'
lisp.setSymbolFunction(G_164, CL_VALTAN_CORESLASHLOOP_MAKE_SUM_COUNTER);
CL_VALTAN_CORESLASHLOOP_SUM_COUNTER_VAR.lisp_name = 'SUM-COUNTER-VAR'
lisp.setSymbolFunction(G_170, CL_VALTAN_CORESLASHLOOP_SUM_COUNTER_VAR);
TMP_174=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_176;
let TMP_175;
let L_STRUCTURE__103;
let L_VALUE__102;
L_VALUE__102=arguments[0];
L_STRUCTURE__103=arguments[1];
TMP_175=lisp.CL_structurep(L_STRUCTURE__103);
if(lisp.values1(TMP_175) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__103,G_37);
}
TMP_176=lisp.CL_structureSet(L_STRUCTURE__103,0,L_VALUE__102);
return TMP_176;
});
lisp.CL_setSymbolFunction(G_173,TMP_174);
TMP_177=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_185;
let TMP_184;
let TMP_183;
let TMP_182;
let L_STORE46__111;
let TMP_181;
let L_GENSYMS44__110;
let TMP_180;
let TMP_178;
let L_ARGS45__108;
let L_G50__106;
let L_G49__105;
L_G49__105=arguments[0];
{
L_G50__106=lisp.values1(L_G49__105);
{
L_ARGS45__108=lisp.values1(L_G50__106);
{
TMP_178=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_179;
let L_X__109;
L_X__109=arguments[0];
TMP_179=lisp.callFunctionWithCallStack(G_48);
return TMP_179;
});
TMP_180=lisp.callFunctionWithCallStack(G_50,TMP_178,L_ARGS45__108);
L_GENSYMS44__110=lisp.values1(TMP_180);
TMP_181=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE46__111=lisp.values1(TMP_181);
TMP_182=lisp.callFunctionWithCallStack(G_54,L_STORE46__111);
TMP_183=lisp.callFunctionWithCallStack(G_56,G_173,L_STORE46__111,L_GENSYMS44__110);
TMP_184=lisp.callFunctionWithCallStack(G_56,G_170,L_GENSYMS44__110);
TMP_185=lisp.CL_values(L_GENSYMS44__110,L_ARGS45__108,TMP_182,TMP_183,TMP_184);
}
}
}
return TMP_185;
});
lisp.CL_put(G_170,G_44,TMP_177);
TMP_186=lisp.CL_symbolFunction(G_173);
lisp.CL_put(G_170,G_59,TMP_186);
{
TMP_187=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_189;
let TMP_188;
let L_STREAM__117;
let L_STRUCTURE__116;
L_STRUCTURE__116=arguments[0];
L_STREAM__117=arguments[1];
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__117);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([83, 85, 77, 45, 67, 79, 85, 78, 84, 69, 82])),L_STREAM__117);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__117);
lisp.callFunctionWithCallStack(G_63,G_165,L_STREAM__117);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__117);
TMP_188=lisp.CL_structureRef(L_STRUCTURE__116,0);
lisp.callFunctionWithCallStack(G_63,TMP_188,L_STREAM__117);
TMP_189=lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([41])),L_STREAM__117);
return TMP_189;
});
L_G54__118=lisp.values1(TMP_187);
{
L_G55__119=lisp.values1(L_G54__118);
lisp.CL_put(G_161,G_66,L_G55__119);
}
}
CL_VALTAN_CORESLASHLOOP_COPY_MAXMIN_COLLECTOR.lisp_name = 'COPY-MAXMIN-COLLECTOR'
lisp.setSymbolFunction(G_191, CL_VALTAN_CORESLASHLOOP_COPY_MAXMIN_COLLECTOR);
CL_VALTAN_CORESLASHLOOP_MAXMIN_COLLECTOR_P.lisp_name = 'MAXMIN-COLLECTOR-P'
lisp.setSymbolFunction(G_194, CL_VALTAN_CORESLASHLOOP_MAXMIN_COLLECTOR_P);
CL_VALTAN_CORESLASHLOOP_MAKE_MAXMIN_COLLECTOR.lisp_name = 'MAKE-MAXMIN-COLLECTOR'
lisp.setSymbolFunction(G_198, CL_VALTAN_CORESLASHLOOP_MAKE_MAXMIN_COLLECTOR);
CL_VALTAN_CORESLASHLOOP_MAXMIN_COLLECTOR_VAR.lisp_name = 'MAXMIN-COLLECTOR-VAR'
lisp.setSymbolFunction(G_203, CL_VALTAN_CORESLASHLOOP_MAXMIN_COLLECTOR_VAR);
TMP_207=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_209;
let TMP_208;
let L_STRUCTURE__129;
let L_VALUE__128;
L_VALUE__128=arguments[0];
L_STRUCTURE__129=arguments[1];
TMP_208=lisp.CL_structurep(L_STRUCTURE__129);
if(lisp.values1(TMP_208) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_38,L_STRUCTURE__129,G_37);
}
TMP_209=lisp.CL_structureSet(L_STRUCTURE__129,0,L_VALUE__128);
return TMP_209;
});
lisp.CL_setSymbolFunction(G_206,TMP_207);
TMP_210=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_218;
let TMP_217;
let TMP_216;
let TMP_215;
let L_STORE58__137;
let TMP_214;
let L_GENSYMS56__136;
let TMP_213;
let TMP_211;
let L_ARGS57__134;
let L_G62__132;
let L_G61__131;
L_G61__131=arguments[0];
{
L_G62__132=lisp.values1(L_G61__131);
{
L_ARGS57__134=lisp.values1(L_G62__132);
{
TMP_211=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_212;
let L_X__135;
L_X__135=arguments[0];
TMP_212=lisp.callFunctionWithCallStack(G_48);
return TMP_212;
});
TMP_213=lisp.callFunctionWithCallStack(G_50,TMP_211,L_ARGS57__134);
L_GENSYMS56__136=lisp.values1(TMP_213);
TMP_214=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE58__137=lisp.values1(TMP_214);
TMP_215=lisp.callFunctionWithCallStack(G_54,L_STORE58__137);
TMP_216=lisp.callFunctionWithCallStack(G_56,G_206,L_STORE58__137,L_GENSYMS56__136);
TMP_217=lisp.callFunctionWithCallStack(G_56,G_203,L_GENSYMS56__136);
TMP_218=lisp.CL_values(L_GENSYMS56__136,L_ARGS57__134,TMP_215,TMP_216,TMP_217);
}
}
}
return TMP_218;
});
lisp.CL_put(G_203,G_44,TMP_210);
TMP_219=lisp.CL_symbolFunction(G_206);
lisp.CL_put(G_203,G_59,TMP_219);
{
TMP_220=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_222;
let TMP_221;
let L_STREAM__143;
let L_STRUCTURE__142;
L_STRUCTURE__142=arguments[0];
L_STREAM__143=arguments[1];
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__143);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([77, 65, 88, 77, 73, 78, 45, 67, 79, 76, 76, 69, 67, 84, 79, 82])),L_STREAM__143);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__143);
lisp.callFunctionWithCallStack(G_63,G_165,L_STREAM__143);
lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([32])),L_STREAM__143);
TMP_221=lisp.CL_structureRef(L_STRUCTURE__142,0);
lisp.callFunctionWithCallStack(G_63,TMP_221,L_STREAM__143);
TMP_222=lisp.callFunctionWithCallStack(G_62,G_51.func(lisp.codeArrayToString([41])),L_STREAM__143);
return TMP_222;
});
L_G66__144=lisp.values1(TMP_220);
{
L_G67__145=lisp.values1(L_G66__144);
lisp.CL_put(G_195,G_66,L_G67__145);
}
}
CL_VALTAN_CORESLASHLOOP_LOOP_ERROR.lisp_name = 'LOOP-ERROR'
lisp.setSymbolFunction(G_230, CL_VALTAN_CORESLASHLOOP_LOOP_ERROR);
CL_VALTAN_CORESLASHLOOP_ENSURE_KEYWORD.lisp_name = 'ENSURE-KEYWORD'
lisp.setSymbolFunction(G_236, CL_VALTAN_CORESLASHLOOP_ENSURE_KEYWORD);
CL_VALTAN_CORESLASHLOOP_TO_KEYWORD.lisp_name = 'TO-KEYWORD'
lisp.setSymbolFunction(G_248, CL_VALTAN_CORESLASHLOOP_TO_KEYWORD);
CL_VALTAN_CORESLASHLOOP_NEXT_EXP.lisp_name = 'NEXT-EXP'
lisp.setSymbolFunction(G_257, CL_VALTAN_CORESLASHLOOP_NEXT_EXP);
CL_VALTAN_CORESLASHLOOP_LOOKAHEAD.lisp_name = 'LOOKAHEAD'
lisp.setSymbolFunction(G_263, CL_VALTAN_CORESLASHLOOP_LOOKAHEAD);
CL_VALTAN_CORESLASHLOOP_END_OF_LOOP_P.lisp_name = 'END-OF-LOOP-P'
lisp.setSymbolFunction(G_266, CL_VALTAN_CORESLASHLOOP_END_OF_LOOP_P);
CL_VALTAN_CORESLASHLOOP_CHECK_SIMPLE_VAR.lisp_name = 'CHECK-SIMPLE-VAR'
lisp.setSymbolFunction(G_270, CL_VALTAN_CORESLASHLOOP_CHECK_SIMPLE_VAR);
CL_VALTAN_CORESLASHLOOP_ADD_LOOP_TEST_FORM.lisp_name = 'ADD-LOOP-TEST-FORM'
lisp.setSymbolFunction(G_282, CL_VALTAN_CORESLASHLOOP_ADD_LOOP_TEST_FORM);
CL_VALTAN_CORESLASHLOOP_ADD_BEFORE_UPDATE_FORM.lisp_name = 'ADD-BEFORE-UPDATE-FORM'
lisp.setSymbolFunction(G_285, CL_VALTAN_CORESLASHLOOP_ADD_BEFORE_UPDATE_FORM);
CL_VALTAN_CORESLASHLOOP_ADD_AFTER_UPDATE_FORM.lisp_name = 'ADD-AFTER-UPDATE-FORM'
lisp.setSymbolFunction(G_289, CL_VALTAN_CORESLASHLOOP_ADD_AFTER_UPDATE_FORM);
CL_VALTAN_CORESLASHLOOP_ADD_INITIALLY_FORM.lisp_name = 'ADD-INITIALLY-FORM'
lisp.setSymbolFunction(G_293, CL_VALTAN_CORESLASHLOOP_ADD_INITIALLY_FORM);
CL_VALTAN_CORESLASHLOOP_ADD_INITIALLY_FORMS.lisp_name = 'ADD-INITIALLY-FORMS'
lisp.setSymbolFunction(G_296, CL_VALTAN_CORESLASHLOOP_ADD_INITIALLY_FORMS);
CL_VALTAN_CORESLASHLOOP_ADD_FINALLY_FORM.lisp_name = 'ADD-FINALLY-FORM'
lisp.setSymbolFunction(G_301, CL_VALTAN_CORESLASHLOOP_ADD_FINALLY_FORM);
CL_VALTAN_CORESLASHLOOP_ADD_FINALLY_FORMS.lisp_name = 'ADD-FINALLY-FORMS'
lisp.setSymbolFunction(G_304, CL_VALTAN_CORESLASHLOOP_ADD_FINALLY_FORMS);
CL_VALTAN_CORESLASHLOOP_PARSE_D_TYPE_SPEC.lisp_name = 'PARSE-D-TYPE-SPEC'
lisp.setSymbolFunction(G_308, CL_VALTAN_CORESLASHLOOP_PARSE_D_TYPE_SPEC);
CL_VALTAN_CORESLASHLOOP_PARSE_TYPE_SPEC.lisp_name = 'PARSE-TYPE-SPEC'
lisp.setSymbolFunction(G_317, CL_VALTAN_CORESLASHLOOP_PARSE_TYPE_SPEC);
CL_VALTAN_CORESLASHLOOP_IT.lisp_name = 'IT'
lisp.setSymbolFunction(G_332, CL_VALTAN_CORESLASHLOOP_IT);
CL_VALTAN_CORESLASHLOOP_PARSE_COMPOUND_FORMS.lisp_name = 'PARSE-COMPOUND-FORMS'
lisp.setSymbolFunction(G_338, CL_VALTAN_CORESLASHLOOP_PARSE_COMPOUND_FORMS);
CL_VALTAN_CORESLASHLOOP_GEN_D_VAR_BINDINGS.lisp_name = 'GEN-D-VAR-BINDINGS'
lisp.setSymbolFunction(G_349, CL_VALTAN_CORESLASHLOOP_GEN_D_VAR_BINDINGS);
CL_VALTAN_CORESLASHLOOP_MAP_D_VAR_D_TYPE_SPEC.lisp_name = 'MAP-D-VAR-D-TYPE-SPEC'
lisp.setSymbolFunction(G_363, CL_VALTAN_CORESLASHLOOP_MAP_D_VAR_D_TYPE_SPEC);
CL_VALTAN_CORESLASHLOOP_PARSE_WITH_CLAUSE.lisp_name = 'PARSE-WITH-CLAUSE'
lisp.setSymbolFunction(G_390, CL_VALTAN_CORESLASHLOOP_PARSE_WITH_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ARITHMETIC.lisp_name = 'PARSE-FOR-AS-ARITHMETIC'
lisp.setSymbolFunction(G_427, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ARITHMETIC);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_EQUALS_THEN.lisp_name = 'PARSE-FOR-AS-EQUALS-THEN'
lisp.setSymbolFunction(G_519, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_EQUALS_THEN);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_BY_CLAUSE.lisp_name = 'PARSE-FOR-AS-BY-CLAUSE'
lisp.setSymbolFunction(G_538, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_BY_CLAUSE);
CL_VALTAN_CORESLASHLOOP_FUNCTION_FORM_P.lisp_name = 'FUNCTION-FORM-P'
lisp.setSymbolFunction(G_545, CL_VALTAN_CORESLASHLOOP_FUNCTION_FORM_P);
CL_VALTAN_CORESLASHLOOP_PARSE_BY_FORM.lisp_name = 'PARSE-BY-FORM'
lisp.setSymbolFunction(G_555, CL_VALTAN_CORESLASHLOOP_PARSE_BY_FORM);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_IN_LIST.lisp_name = 'PARSE-FOR-AS-IN-LIST'
lisp.setSymbolFunction(G_573, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_IN_LIST);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ON_LIST.lisp_name = 'PARSE-FOR-AS-ON-LIST'
lisp.setSymbolFunction(G_586, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ON_LIST);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ACROSS.lisp_name = 'PARSE-FOR-AS-ACROSS'
lisp.setSymbolFunction(G_600, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_ACROSS);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_HASH.lisp_name = 'PARSE-FOR-AS-HASH'
lisp.setSymbolFunction(G_619, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_HASH);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_HASH_OR_PACKAGE.lisp_name = 'PARSE-FOR-AS-HASH-OR-PACKAGE'
lisp.setSymbolFunction(G_711, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_HASH_OR_PACKAGE);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_CLAUSE_1.lisp_name = 'PARSE-FOR-AS-CLAUSE-1'
lisp.setSymbolFunction(G_729, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_CLAUSE_1);
CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_CLAUSE.lisp_name = 'PARSE-FOR-AS-CLAUSE'
lisp.setSymbolFunction(G_773, CL_VALTAN_CORESLASHLOOP_PARSE_FOR_AS_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_INITIAL_FINAL_CLAUSE.lisp_name = 'PARSE-INITIAL-FINAL-CLAUSE'
lisp.setSymbolFunction(G_784, CL_VALTAN_CORESLASHLOOP_PARSE_INITIAL_FINAL_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_VARIABLE_CLAUSE.lisp_name = 'PARSE-VARIABLE-CLAUSE'
lisp.setSymbolFunction(G_794, CL_VALTAN_CORESLASHLOOP_PARSE_VARIABLE_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_DOING_CLAUSE.lisp_name = 'PARSE-DOING-CLAUSE'
lisp.setSymbolFunction(G_806, CL_VALTAN_CORESLASHLOOP_PARSE_DOING_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_FORM_OR_IT.lisp_name = 'PARSE-FORM-OR-IT'
lisp.setSymbolFunction(G_811, CL_VALTAN_CORESLASHLOOP_PARSE_FORM_OR_IT);
CL_VALTAN_CORESLASHLOOP_PARSE_RETURN_CLAUSE.lisp_name = 'PARSE-RETURN-CLAUSE'
lisp.setSymbolFunction(G_821, CL_VALTAN_CORESLASHLOOP_PARSE_RETURN_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_UNCONDITIONAL_CLAUSE.lisp_name = 'PARSE-UNCONDITIONAL-CLAUSE'
lisp.setSymbolFunction(G_826, CL_VALTAN_CORESLASHLOOP_PARSE_UNCONDITIONAL_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_INTO_CLAUSE.lisp_name = 'PARSE-INTO-CLAUSE'
lisp.setSymbolFunction(G_837, CL_VALTAN_CORESLASHLOOP_PARSE_INTO_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_COLLECT_CLAUSE.lisp_name = 'PARSE-COLLECT-CLAUSE'
lisp.setSymbolFunction(G_846, CL_VALTAN_CORESLASHLOOP_PARSE_COLLECT_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_COUNT_CLAUSE.lisp_name = 'PARSE-COUNT-CLAUSE'
lisp.setSymbolFunction(G_862, CL_VALTAN_CORESLASHLOOP_PARSE_COUNT_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_MAXMIN_CLAUSE.lisp_name = 'PARSE-MAXMIN-CLAUSE'
lisp.setSymbolFunction(G_876, CL_VALTAN_CORESLASHLOOP_PARSE_MAXMIN_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_ACCUMULATION_CLAUSE.lisp_name = 'PARSE-ACCUMULATION-CLAUSE'
lisp.setSymbolFunction(G_890, CL_VALTAN_CORESLASHLOOP_PARSE_ACCUMULATION_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_SELECTABLE_CLAUSE.lisp_name = 'PARSE-SELECTABLE-CLAUSE'
lisp.setSymbolFunction(G_929, CL_VALTAN_CORESLASHLOOP_PARSE_SELECTABLE_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_THEN_ELSE_CLAUSE.lisp_name = 'PARSE-CONDITIONAL-THEN-ELSE-CLAUSE'
lisp.setSymbolFunction(G_942, CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_THEN_ELSE_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_CLAUSE_1.lisp_name = 'PARSE-CONDITIONAL-CLAUSE-1'
lisp.setSymbolFunction(G_953, CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_CLAUSE_1);
CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_CLAUSE.lisp_name = 'PARSE-CONDITIONAL-CLAUSE'
lisp.setSymbolFunction(G_937, CL_VALTAN_CORESLASHLOOP_PARSE_CONDITIONAL_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_TERMINATION_TEST_CLAUSE.lisp_name = 'PARSE-TERMINATION-TEST-CLAUSE'
lisp.setSymbolFunction(G_987, CL_VALTAN_CORESLASHLOOP_PARSE_TERMINATION_TEST_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_MAIN_CLAUSE.lisp_name = 'PARSE-MAIN-CLAUSE'
lisp.setSymbolFunction(G_1036, CL_VALTAN_CORESLASHLOOP_PARSE_MAIN_CLAUSE);
CL_VALTAN_CORESLASHLOOP_PARSE_NAME_CLAUSE.lisp_name = 'PARSE-NAME-CLAUSE'
lisp.setSymbolFunction(G_1054, CL_VALTAN_CORESLASHLOOP_PARSE_NAME_CLAUSE);
TMP_1063=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1067;
let TMP_1066;
let L_X__574;
let TMP_1065;
let TMP_1064;
let BLOCK_RESULT_NIL__573;
BLOCK_NIL__573: for(;;){for(;;){
TMP_1064=G_266.func();
if(lisp.values1(TMP_1064) !== lisp.S_nil){
BLOCK_RESULT_NIL__573=lisp.values1(lisp.S_nil);
break BLOCK_NIL__573;
}else{
{
TMP_1065=G_263.func();
L_X__574=lisp.values1(TMP_1065);
TMP_1066=lisp.CL_symbolp(L_X__574);
if(lisp.values1(TMP_1066) !== lisp.S_nil){
}else{
G_230.func(G_51.func(lisp.codeArrayToString([117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 111, 107, 101, 110, 58, 32, 126, 83])),L_X__574);
}
TMP_1067=G_794.func();
if(lisp.values1(TMP_1067) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__573=lisp.values1(lisp.S_nil);
break BLOCK_NIL__573;
}
}
continue;
}
break;
}
BLOCK_RESULT_NIL__573=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__573;
});
lisp.CL_setSymbolFunction(G_1062,TMP_1063);
TMP_1069=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1073;
let TMP_1072;
let L_X__577;
let TMP_1071;
let TMP_1070;
let BLOCK_RESULT_NIL__576;
BLOCK_NIL__576: for(;;){for(;;){
TMP_1070=G_266.func();
if(lisp.values1(TMP_1070) !== lisp.S_nil){
BLOCK_RESULT_NIL__576=lisp.values1(lisp.S_nil);
break BLOCK_NIL__576;
}else{
{
TMP_1071=G_263.func();
L_X__577=lisp.values1(TMP_1071);
TMP_1072=lisp.CL_symbolp(L_X__577);
if(lisp.values1(TMP_1072) !== lisp.S_nil){
}else{
G_230.func(G_51.func(lisp.codeArrayToString([117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 116, 111, 107, 101, 110, 58, 32, 126, 83])),L_X__577);
}
TMP_1073=G_1036.func();
if(lisp.values1(TMP_1073) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__576=lisp.values1(lisp.S_nil);
break BLOCK_NIL__576;
}
}
continue;
}
break;
}
BLOCK_RESULT_NIL__576=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__576;
});
lisp.CL_setSymbolFunction(G_1068,TMP_1069);
CL_VALTAN_CORESLASHLOOP_PARSE_LOOP.lisp_name = 'PARSE-LOOP'
lisp.setSymbolFunction(G_1075, CL_VALTAN_CORESLASHLOOP_PARSE_LOOP);
CL_VALTAN_CORESLASHLOOP_EXPAND_LOOP_DESTRUCTURING_BIND.lisp_name = 'EXPAND-LOOP-DESTRUCTURING-BIND'
lisp.setSymbolFunction(G_1078, CL_VALTAN_CORESLASHLOOP_EXPAND_LOOP_DESTRUCTURING_BIND);
CL_VALTAN_CORESLASHLOOP_EXPAND_COMPLEX_LOOP.lisp_name = 'EXPAND-COMPLEX-LOOP'
lisp.setSymbolFunction(G_1108, CL_VALTAN_CORESLASHLOOP_EXPAND_COMPLEX_LOOP);
CL_VALTAN_CORESLASHLOOP_EXPAND_LOOP.lisp_name = 'EXPAND-LOOP'
lisp.setSymbolFunction(G_1179, CL_VALTAN_CORESLASHLOOP_EXPAND_LOOP);
lisp.changeCurrentPackage('COMMON-LISP');TMP_1194=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1227;
let TMP_1226;
let TMP_1225;
let TMP_1224;
let TMP_1223;
let TMP_1222;
let TMP_1221;
let TMP_1220;
let TMP_1219;
let TMP_1218;
let L_BODY__649;
let L_G380__648;
let TMP_1216;
let L_G379__647;
let TMP_1215;
let L_VAR__646;
let TMP_1214;
let L_G378__645;
let TMP_1213;
let L_TAIL__644;
let TMP_1212;
let L_G377__643;
let TMP_1211;
let L_HEAD__642;
let TMP_1210;
let L_G376__641;
let TMP_1209;
let TMP_1208;
let TMP_1207;
let TMP_1206;
let L_G375__640;
let TMP_1205;
let L_G374__639;
let TMP_1204;
let TMP_1198;
let TMP_1197;
let TMP_1195;
let L_G373__638;
let L_G68__637;
L_G68__637=lisp.jsArrayToList(arguments, 0);
{
L_G373__638=lisp.values1(L_G68__637);
{
TMP_1195=lisp.callFunctionWithCallStack(G_1196,L_G373__638);
TMP_1197=lisp.callFunctionWithCallStack(G_504,1,TMP_1195);
if(lisp.values1(TMP_1197) !== lisp.S_nil){
TMP_1198=lisp.values1(lisp.S_nil);
}else{
TMP_1204=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_1199, lisp.makeCons(G_1200, lisp.makeCons(G_1201, lisp.S_nil))), lisp.makeCons(G_1202, lisp.makeCons(G_1203, lisp.S_nil))),L_G373__638);
TMP_1198=lisp.values1(lisp.values1(TMP_1204));
}
L_G374__639=lisp.values1(TMP_1198);
TMP_1205=lisp.callFunctionWithCallStack(G_753,L_G373__638);
L_G375__640=lisp.values1(TMP_1205);
TMP_1206=lisp.callFunctionWithCallStack(G_1196,L_G375__640);
TMP_1207=lisp.callFunctionWithCallStack(G_504,3,TMP_1206,3);
if(lisp.values1(TMP_1207) !== lisp.S_nil){
TMP_1208=lisp.values1(lisp.S_nil);
}else{
TMP_1209=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1199, lisp.makeCons(G_1200, lisp.makeCons(G_1201, lisp.S_nil))),L_G375__640);
TMP_1208=lisp.values1(lisp.values1(TMP_1209));
}
L_G376__641=lisp.values1(TMP_1208);
TMP_1210=lisp.callFunctionWithCallStack(G_753,L_G375__640);
L_HEAD__642=lisp.values1(TMP_1210);
TMP_1211=lisp.callFunctionWithCallStack(G_755,L_G375__640);
L_G377__643=lisp.values1(TMP_1211);
TMP_1212=lisp.callFunctionWithCallStack(G_753,L_G377__643);
L_TAIL__644=lisp.values1(TMP_1212);
TMP_1213=lisp.callFunctionWithCallStack(G_755,L_G377__643);
L_G378__645=lisp.values1(TMP_1213);
TMP_1214=lisp.callFunctionWithCallStack(G_753,L_G378__645);
L_VAR__646=lisp.values1(TMP_1214);
TMP_1215=lisp.callFunctionWithCallStack(G_755,L_G378__645);
L_G379__647=lisp.values1(TMP_1215);
TMP_1216=lisp.callFunctionWithCallStack(G_755,L_G373__638);
L_G380__648=lisp.values1(TMP_1216);
L_BODY__649=lisp.values1(L_G380__648);
TMP_1218=lisp.CL_cons(L_HEAD__642,lisp.makeCons(lisp.makeCons(G_54, lisp.makeCons(lisp.S_nil, lisp.S_nil)), lisp.S_nil));
TMP_1219=lisp.callFunctionWithCallStack(G_54,L_TAIL__644,L_HEAD__642);
if(lisp.values1(L_VAR__646) !== lisp.S_nil){
TMP_1221=lisp.callFunctionWithCallStack(G_54,L_VAR__646);
TMP_1220=lisp.values1(lisp.values1(TMP_1221));
}else{
TMP_1220=lisp.values1(lisp.S_nil);
}
TMP_1222=lisp.callFunctionWithCallStack(G_56,TMP_1218,TMP_1219,TMP_1220);
if(lisp.values1(L_VAR__646) !== lisp.S_nil){
TMP_1223=lisp.values1(lisp.S_nil);
}else{
TMP_1224=lisp.callFunctionWithCallStack(G_54,G_259,L_HEAD__642);
TMP_1225=lisp.callFunctionWithCallStack(G_54,TMP_1224);
TMP_1223=lisp.values1(lisp.values1(TMP_1225));
}
TMP_1226=lisp.callFunctionWithCallStack(G_380,L_BODY__649,TMP_1223);
TMP_1227=lisp.callFunctionWithCallStack(G_56,G_1217,TMP_1222,TMP_1226);
}
}
return TMP_1227;
});
lisp.CL_put(G_223,G_1193,TMP_1194);
TMP_1228=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1278;
let TMP_1277;
let TMP_1276;
let TMP_1275;
let TMP_1274;
let TMP_1273;
let TMP_1272;
let L_G396__671;
let TMP_1271;
let TMP_1270;
let TMP_1269;
let TMP_1268;
let TMP_1267;
let TMP_1266;
let TMP_1264;
let L_G395__670;
let TMP_1263;
let TMP_1262;
let TMP_1261;
let TMP_1260;
let L_G394__669;
let TMP_1259;
let L_G393__668;
let TMP_1258;
let TMP_1257;
let TMP_1256;
let L_G392__667;
let TMP_1255;
let L_G391__666;
let TMP_1254;
let TMP_1253;
let TMP_1251;
let L_G390__665;
let TMP_1250;
let TMP_1249;
let TMP_1248;
let L_G389__664;
let TMP_1247;
let L_G388__663;
let TMP_1246;
let L_G387__662;
let TMP_1244;
let L_KIND__661;
let TMP_1243;
let L_G386__660;
let TMP_1242;
let L_VAR__659;
let TMP_1241;
let L_G385__658;
let TMP_1240;
let L_VALUE__657;
let TMP_1239;
let L_G384__656;
let TMP_1238;
let L_TAIL__655;
let TMP_1237;
let L_G383__654;
let TMP_1236;
let L_HEAD__653;
let TMP_1235;
let L_G382__652;
let TMP_1234;
let TMP_1231;
let TMP_1230;
let TMP_1229;
let L_G381__651;
let L_G69__650;
L_G69__650=lisp.jsArrayToList(arguments, 0);
{
L_G381__651=lisp.values1(L_G69__650);
{
TMP_1229=lisp.callFunctionWithCallStack(G_1196,L_G381__651);
TMP_1230=lisp.callFunctionWithCallStack(G_504,5,TMP_1229,5);
if(lisp.values1(TMP_1230) !== lisp.S_nil){
TMP_1231=lisp.values1(lisp.S_nil);
}else{
TMP_1234=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1199, lisp.makeCons(G_1200, lisp.makeCons(G_1232, lisp.makeCons(G_1201, lisp.makeCons(G_1233, lisp.S_nil))))),L_G381__651);
TMP_1231=lisp.values1(lisp.values1(TMP_1234));
}
L_G382__652=lisp.values1(TMP_1231);
TMP_1235=lisp.callFunctionWithCallStack(G_753,L_G381__651);
L_HEAD__653=lisp.values1(TMP_1235);
TMP_1236=lisp.callFunctionWithCallStack(G_755,L_G381__651);
L_G383__654=lisp.values1(TMP_1236);
TMP_1237=lisp.callFunctionWithCallStack(G_753,L_G383__654);
L_TAIL__655=lisp.values1(TMP_1237);
TMP_1238=lisp.callFunctionWithCallStack(G_755,L_G383__654);
L_G384__656=lisp.values1(TMP_1238);
TMP_1239=lisp.callFunctionWithCallStack(G_753,L_G384__656);
L_VALUE__657=lisp.values1(TMP_1239);
TMP_1240=lisp.callFunctionWithCallStack(G_755,L_G384__656);
L_G385__658=lisp.values1(TMP_1240);
TMP_1241=lisp.callFunctionWithCallStack(G_753,L_G385__658);
L_VAR__659=lisp.values1(TMP_1241);
TMP_1242=lisp.callFunctionWithCallStack(G_755,L_G385__658);
L_G386__660=lisp.values1(TMP_1242);
TMP_1243=lisp.callFunctionWithCallStack(G_753,L_G386__660);
L_KIND__661=lisp.values1(TMP_1243);
TMP_1244=lisp.callFunctionWithCallStack(G_755,L_G386__660);
L_G387__662=lisp.values1(TMP_1244);
TMP_1246=lisp.callFunctionWithCallStack(G_54,G_259,L_TAIL__655);
{
L_G388__663=lisp.values1(L_KIND__661);
{
TMP_1247=lisp.callFunctionWithCallStack(G_462,L_G388__663,G_891);
L_G389__664=lisp.values1(TMP_1247);
if(lisp.values1(L_G389__664) !== lisp.S_nil){
TMP_1249=lisp.callFunctionWithCallStack(G_54,G_54,L_VALUE__657);
TMP_1248=lisp.values1(lisp.values1(TMP_1249));
}else{
{
TMP_1250=lisp.callFunctionWithCallStack(G_462,L_G388__663,G_896);
L_G390__665=lisp.values1(TMP_1250);
if(lisp.values1(L_G390__665) !== lisp.S_nil){
TMP_1253=lisp.callFunctionWithCallStack(G_54,G_1252,L_VALUE__657);
TMP_1251=lisp.values1(lisp.values1(TMP_1253));
}else{
{
TMP_1254=lisp.callFunctionWithCallStack(G_462,L_G388__663,G_901);
L_G391__666=lisp.values1(TMP_1254);
if(lisp.values1(L_G391__666) !== lisp.S_nil){
TMP_1255=lisp.values1(lisp.values1(L_VALUE__657));
}else{
{
L_G392__667=lisp.values1(G_4);
if(lisp.values1(L_G392__667) !== lisp.S_nil){
TMP_1257=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G388__663,lisp.makeCons(G_891, lisp.makeCons(G_896, lisp.makeCons(G_901, lisp.S_nil))));
TMP_1256=lisp.values1(lisp.values1(TMP_1257));
}else{
TMP_1256=lisp.values1(lisp.S_nil);
}
}
TMP_1255=lisp.values1(lisp.values1(TMP_1256));
}
}
TMP_1251=lisp.values1(lisp.values1(TMP_1255));
}
}
TMP_1248=lisp.values1(lisp.values1(TMP_1251));
}
}
}
TMP_1258=lisp.callFunctionWithCallStack(G_54,G_1245,TMP_1246,lisp.values1(lisp.values1(TMP_1248)));
{
L_G393__668=lisp.values1(L_KIND__661);
{
TMP_1259=lisp.callFunctionWithCallStack(G_322,L_G393__668,lisp.makeCons(G_891, lisp.S_nil));
L_G394__669=lisp.values1(TMP_1259);
if(lisp.values1(L_G394__669) !== lisp.S_nil){
TMP_1261=lisp.callFunctionWithCallStack(G_54,G_259,L_TAIL__655);
TMP_1262=lisp.callFunctionWithCallStack(G_54,G_1245,L_TAIL__655,TMP_1261);
TMP_1260=lisp.values1(lisp.values1(TMP_1262));
}else{
{
TMP_1263=lisp.callFunctionWithCallStack(G_322,L_G393__668,lisp.makeCons(G_896, lisp.makeCons(G_901, lisp.S_nil)));
L_G395__670=lisp.values1(TMP_1263);
if(lisp.values1(L_G395__670) !== lisp.S_nil){
TMP_1266=lisp.callFunctionWithCallStack(G_54,G_259,L_TAIL__655);
TMP_1267=lisp.callFunctionWithCallStack(G_54,G_268,TMP_1266);
TMP_1268=lisp.callFunctionWithCallStack(G_54,TMP_1267);
TMP_1269=lisp.callFunctionWithCallStack(G_54,G_259,L_TAIL__655);
TMP_1270=lisp.callFunctionWithCallStack(G_54,G_507,L_TAIL__655,TMP_1269);
TMP_1271=lisp.callFunctionWithCallStack(G_54,G_1265,lisp.S_nil,TMP_1268,TMP_1270);
TMP_1264=lisp.values1(lisp.values1(TMP_1271));
}else{
{
L_G396__671=lisp.values1(G_4);
if(lisp.values1(L_G396__671) !== lisp.S_nil){
TMP_1273=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G393__668,lisp.makeCons(G_891, lisp.makeCons(G_896, lisp.makeCons(G_901, lisp.S_nil))));
TMP_1272=lisp.values1(lisp.values1(TMP_1273));
}else{
TMP_1272=lisp.values1(lisp.S_nil);
}
}
TMP_1264=lisp.values1(lisp.values1(TMP_1272));
}
}
TMP_1260=lisp.values1(lisp.values1(TMP_1264));
}
}
}
if(lisp.values1(L_VAR__659) !== lisp.S_nil){
TMP_1275=lisp.callFunctionWithCallStack(G_54,G_259,L_HEAD__653);
TMP_1276=lisp.callFunctionWithCallStack(G_54,G_1245,L_VAR__659,TMP_1275);
TMP_1277=lisp.callFunctionWithCallStack(G_54,TMP_1276);
TMP_1274=lisp.values1(lisp.values1(TMP_1277));
}else{
TMP_1274=lisp.values1(lisp.S_nil);
}
TMP_1278=lisp.callFunctionWithCallStack(G_56,G_808,TMP_1258,lisp.values1(lisp.values1(TMP_1260)),TMP_1274);
}
}
return TMP_1278;
});
lisp.CL_put(G_224,G_1193,TMP_1228);
TMP_1279=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1300;
let TMP_1299;
let TMP_1298;
let TMP_1297;
let TMP_1296;
let TMP_1295;
let L_BODY__682;
let L_G403__681;
let TMP_1294;
let L_G402__680;
let TMP_1293;
let L_VAR__679;
let TMP_1292;
let L_G401__678;
let TMP_1291;
let L_COUNTER_VAR__677;
let TMP_1290;
let L_G400__676;
let TMP_1289;
let TMP_1288;
let TMP_1287;
let TMP_1286;
let L_G399__675;
let TMP_1285;
let L_G398__674;
let TMP_1284;
let TMP_1282;
let TMP_1281;
let TMP_1280;
let L_G397__673;
let L_G70__672;
L_G70__672=lisp.jsArrayToList(arguments, 0);
{
L_G397__673=lisp.values1(L_G70__672);
{
TMP_1280=lisp.callFunctionWithCallStack(G_1196,L_G397__673);
TMP_1281=lisp.callFunctionWithCallStack(G_504,1,TMP_1280);
if(lisp.values1(TMP_1281) !== lisp.S_nil){
TMP_1282=lisp.values1(lisp.S_nil);
}else{
TMP_1284=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_1283, lisp.makeCons(G_1201, lisp.S_nil)), lisp.makeCons(G_1202, lisp.makeCons(G_1203, lisp.S_nil))),L_G397__673);
TMP_1282=lisp.values1(lisp.values1(TMP_1284));
}
L_G398__674=lisp.values1(TMP_1282);
TMP_1285=lisp.callFunctionWithCallStack(G_753,L_G397__673);
L_G399__675=lisp.values1(TMP_1285);
TMP_1286=lisp.callFunctionWithCallStack(G_1196,L_G399__675);
TMP_1287=lisp.callFunctionWithCallStack(G_504,2,TMP_1286,2);
if(lisp.values1(TMP_1287) !== lisp.S_nil){
TMP_1288=lisp.values1(lisp.S_nil);
}else{
TMP_1289=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1283, lisp.makeCons(G_1201, lisp.S_nil)),L_G399__675);
TMP_1288=lisp.values1(lisp.values1(TMP_1289));
}
L_G400__676=lisp.values1(TMP_1288);
TMP_1290=lisp.callFunctionWithCallStack(G_753,L_G399__675);
L_COUNTER_VAR__677=lisp.values1(TMP_1290);
TMP_1291=lisp.callFunctionWithCallStack(G_755,L_G399__675);
L_G401__678=lisp.values1(TMP_1291);
TMP_1292=lisp.callFunctionWithCallStack(G_753,L_G401__678);
L_VAR__679=lisp.values1(TMP_1292);
TMP_1293=lisp.callFunctionWithCallStack(G_755,L_G401__678);
L_G402__680=lisp.values1(TMP_1293);
TMP_1294=lisp.callFunctionWithCallStack(G_755,L_G397__673);
L_G403__681=lisp.values1(TMP_1294);
L_BODY__682=lisp.values1(L_G403__681);
TMP_1295=lisp.CL_cons(L_COUNTER_VAR__677,lisp.makeCons(0, lisp.S_nil));
TMP_1296=lisp.callFunctionWithCallStack(G_54,TMP_1295);
if(lisp.values1(L_VAR__679) !== lisp.S_nil){
TMP_1297=lisp.values1(lisp.S_nil);
}else{
TMP_1298=lisp.callFunctionWithCallStack(G_54,L_COUNTER_VAR__677);
TMP_1297=lisp.values1(lisp.values1(TMP_1298));
}
TMP_1299=lisp.callFunctionWithCallStack(G_380,L_BODY__682,TMP_1297);
TMP_1300=lisp.callFunctionWithCallStack(G_56,G_1028,TMP_1296,TMP_1299);
}
}
return TMP_1300;
});
lisp.CL_put(G_225,G_1193,TMP_1279);
TMP_1301=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1322;
let TMP_1321;
let L_G412__695;
let TMP_1320;
let TMP_1319;
let TMP_1318;
let L_G411__694;
let TMP_1317;
let TMP_1316;
let TMP_1315;
let TMP_1314;
let TMP_1313;
let L_G410__693;
let TMP_1312;
let L_G409__692;
let L_G408__691;
let TMP_1311;
let L_KIND__690;
let TMP_1310;
let L_G407__689;
let TMP_1309;
let L_VALUE__688;
let TMP_1308;
let L_G406__687;
let TMP_1307;
let L_COUNTER_VAR__686;
let TMP_1306;
let L_G405__685;
let TMP_1305;
let TMP_1304;
let TMP_1303;
let TMP_1302;
let L_G404__684;
let L_G71__683;
L_G71__683=lisp.jsArrayToList(arguments, 0);
{
L_G404__684=lisp.values1(L_G71__683);
{
TMP_1302=lisp.callFunctionWithCallStack(G_1196,L_G404__684);
TMP_1303=lisp.callFunctionWithCallStack(G_504,3,TMP_1302,3);
if(lisp.values1(TMP_1303) !== lisp.S_nil){
TMP_1304=lisp.values1(lisp.S_nil);
}else{
TMP_1305=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1283, lisp.makeCons(G_1232, lisp.makeCons(G_1233, lisp.S_nil))),L_G404__684);
TMP_1304=lisp.values1(lisp.values1(TMP_1305));
}
L_G405__685=lisp.values1(TMP_1304);
TMP_1306=lisp.callFunctionWithCallStack(G_753,L_G404__684);
L_COUNTER_VAR__686=lisp.values1(TMP_1306);
TMP_1307=lisp.callFunctionWithCallStack(G_755,L_G404__684);
L_G406__687=lisp.values1(TMP_1307);
TMP_1308=lisp.callFunctionWithCallStack(G_753,L_G406__687);
L_VALUE__688=lisp.values1(TMP_1308);
TMP_1309=lisp.callFunctionWithCallStack(G_755,L_G406__687);
L_G407__689=lisp.values1(TMP_1309);
TMP_1310=lisp.callFunctionWithCallStack(G_753,L_G407__689);
L_KIND__690=lisp.values1(TMP_1310);
TMP_1311=lisp.callFunctionWithCallStack(G_755,L_G407__689);
L_G408__691=lisp.values1(TMP_1311);
{
L_G409__692=lisp.values1(L_KIND__690);
{
TMP_1312=lisp.callFunctionWithCallStack(G_462,L_G409__692,G_906);
L_G410__693=lisp.values1(TMP_1312);
if(lisp.values1(L_G410__693) !== lisp.S_nil){
TMP_1314=lisp.callFunctionWithCallStack(G_56,G_511,L_COUNTER_VAR__686,lisp.makeCons(1, lisp.S_nil));
TMP_1315=lisp.callFunctionWithCallStack(G_54,G_507,L_COUNTER_VAR__686,TMP_1314);
TMP_1316=lisp.callFunctionWithCallStack(G_54,G_996,L_VALUE__688,TMP_1315);
TMP_1313=TMP_1316;
}else{
{
TMP_1317=lisp.callFunctionWithCallStack(G_462,L_G409__692,G_911);
L_G411__694=lisp.values1(TMP_1317);
if(lisp.values1(L_G411__694) !== lisp.S_nil){
TMP_1319=lisp.callFunctionWithCallStack(G_54,G_511,L_COUNTER_VAR__686,L_VALUE__688);
TMP_1320=lisp.callFunctionWithCallStack(G_54,G_507,L_COUNTER_VAR__686,TMP_1319);
TMP_1318=TMP_1320;
}else{
{
L_G412__695=lisp.values1(G_4);
if(lisp.values1(L_G412__695) !== lisp.S_nil){
TMP_1322=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G409__692,lisp.makeCons(G_906, lisp.makeCons(G_911, lisp.S_nil)));
TMP_1321=TMP_1322;
}else{
TMP_1321=lisp.values1(lisp.S_nil);
}
}
TMP_1318=TMP_1321;
}
}
TMP_1313=TMP_1318;
}
}
}
}
}
return TMP_1313;
});
lisp.CL_put(G_226,G_1193,TMP_1301);
TMP_1323=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1344;
let TMP_1343;
let TMP_1342;
let TMP_1341;
let TMP_1340;
let TMP_1339;
let L_BODY__706;
let L_G419__705;
let TMP_1338;
let L_G418__704;
let TMP_1337;
let L_VAR__703;
let TMP_1336;
let L_G417__702;
let TMP_1335;
let L_MAXMIN_VAR__701;
let TMP_1334;
let L_G416__700;
let TMP_1333;
let TMP_1332;
let TMP_1331;
let TMP_1330;
let L_G415__699;
let TMP_1329;
let L_G414__698;
let TMP_1328;
let TMP_1326;
let TMP_1325;
let TMP_1324;
let L_G413__697;
let L_G72__696;
L_G72__696=lisp.jsArrayToList(arguments, 0);
{
L_G413__697=lisp.values1(L_G72__696);
{
TMP_1324=lisp.callFunctionWithCallStack(G_1196,L_G413__697);
TMP_1325=lisp.callFunctionWithCallStack(G_504,1,TMP_1324);
if(lisp.values1(TMP_1325) !== lisp.S_nil){
TMP_1326=lisp.values1(lisp.S_nil);
}else{
TMP_1328=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_1327, lisp.makeCons(G_1201, lisp.S_nil)), lisp.makeCons(G_1202, lisp.makeCons(G_1203, lisp.S_nil))),L_G413__697);
TMP_1326=lisp.values1(lisp.values1(TMP_1328));
}
L_G414__698=lisp.values1(TMP_1326);
TMP_1329=lisp.callFunctionWithCallStack(G_753,L_G413__697);
L_G415__699=lisp.values1(TMP_1329);
TMP_1330=lisp.callFunctionWithCallStack(G_1196,L_G415__699);
TMP_1331=lisp.callFunctionWithCallStack(G_504,2,TMP_1330,2);
if(lisp.values1(TMP_1331) !== lisp.S_nil){
TMP_1332=lisp.values1(lisp.S_nil);
}else{
TMP_1333=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1327, lisp.makeCons(G_1201, lisp.S_nil)),L_G415__699);
TMP_1332=lisp.values1(lisp.values1(TMP_1333));
}
L_G416__700=lisp.values1(TMP_1332);
TMP_1334=lisp.callFunctionWithCallStack(G_753,L_G415__699);
L_MAXMIN_VAR__701=lisp.values1(TMP_1334);
TMP_1335=lisp.callFunctionWithCallStack(G_755,L_G415__699);
L_G417__702=lisp.values1(TMP_1335);
TMP_1336=lisp.callFunctionWithCallStack(G_753,L_G417__702);
L_VAR__703=lisp.values1(TMP_1336);
TMP_1337=lisp.callFunctionWithCallStack(G_755,L_G417__702);
L_G418__704=lisp.values1(TMP_1337);
TMP_1338=lisp.callFunctionWithCallStack(G_755,L_G413__697);
L_G419__705=lisp.values1(TMP_1338);
L_BODY__706=lisp.values1(L_G419__705);
TMP_1339=lisp.CL_cons(L_MAXMIN_VAR__701,lisp.makeCons(lisp.S_nil, lisp.S_nil));
TMP_1340=lisp.callFunctionWithCallStack(G_54,TMP_1339);
if(lisp.values1(L_VAR__703) !== lisp.S_nil){
TMP_1341=lisp.values1(lisp.S_nil);
}else{
TMP_1342=lisp.callFunctionWithCallStack(G_54,L_MAXMIN_VAR__701);
TMP_1341=lisp.values1(lisp.values1(TMP_1342));
}
TMP_1343=lisp.callFunctionWithCallStack(G_380,L_BODY__706,TMP_1341);
TMP_1344=lisp.callFunctionWithCallStack(G_56,G_1028,TMP_1340,TMP_1343);
}
}
return TMP_1344;
});
lisp.CL_put(G_227,G_1193,TMP_1323);
TMP_1345=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1371;
let TMP_1370;
let TMP_1369;
let TMP_1368;
let TMP_1367;
let TMP_1366;
let TMP_1365;
let L_G428__720;
let TMP_1364;
let L_G427__719;
let TMP_1363;
let TMP_1362;
let L_G426__718;
let TMP_1361;
let L_G425__717;
let TMP_1360;
let TMP_1358;
let TMP_1357;
let L_G_VALUE__716;
let TMP_1356;
let L_G424__715;
let TMP_1355;
let L_KIND__714;
let TMP_1354;
let L_G423__713;
let TMP_1353;
let L_VALUE__712;
let TMP_1352;
let L_G422__711;
let TMP_1351;
let L_MAXMIN_VAR__710;
let TMP_1350;
let L_G421__709;
let TMP_1349;
let TMP_1348;
let TMP_1347;
let TMP_1346;
let L_G420__708;
let L_G73__707;
L_G73__707=lisp.jsArrayToList(arguments, 0);
{
L_G420__708=lisp.values1(L_G73__707);
{
TMP_1346=lisp.callFunctionWithCallStack(G_1196,L_G420__708);
TMP_1347=lisp.callFunctionWithCallStack(G_504,3,TMP_1346,3);
if(lisp.values1(TMP_1347) !== lisp.S_nil){
TMP_1348=lisp.values1(lisp.S_nil);
}else{
TMP_1349=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1327, lisp.makeCons(G_1232, lisp.makeCons(G_1233, lisp.S_nil))),L_G420__708);
TMP_1348=lisp.values1(lisp.values1(TMP_1349));
}
L_G421__709=lisp.values1(TMP_1348);
TMP_1350=lisp.callFunctionWithCallStack(G_753,L_G420__708);
L_MAXMIN_VAR__710=lisp.values1(TMP_1350);
TMP_1351=lisp.callFunctionWithCallStack(G_755,L_G420__708);
L_G422__711=lisp.values1(TMP_1351);
TMP_1352=lisp.callFunctionWithCallStack(G_753,L_G422__711);
L_VALUE__712=lisp.values1(TMP_1352);
TMP_1353=lisp.callFunctionWithCallStack(G_755,L_G422__711);
L_G423__713=lisp.values1(TMP_1353);
TMP_1354=lisp.callFunctionWithCallStack(G_753,L_G423__713);
L_KIND__714=lisp.values1(TMP_1354);
TMP_1355=lisp.callFunctionWithCallStack(G_755,L_G423__713);
L_G424__715=lisp.values1(TMP_1355);
{
TMP_1356=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([86, 65, 76, 85, 69])));
L_G_VALUE__716=lisp.values1(TMP_1356);
TMP_1357=lisp.callFunctionWithCallStack(G_54,L_G_VALUE__716,L_VALUE__712);
TMP_1358=lisp.callFunctionWithCallStack(G_54,TMP_1357);
TMP_1360=lisp.callFunctionWithCallStack(G_54,G_268,L_MAXMIN_VAR__710);
{
L_G425__717=lisp.values1(L_KIND__714);
{
TMP_1361=lisp.callFunctionWithCallStack(G_462,L_G425__717,G_920);
L_G426__718=lisp.values1(TMP_1361);
if(lisp.values1(L_G426__718) !== lisp.S_nil){
TMP_1362=lisp.values1(lisp.values1(G_505));
}else{
{
TMP_1363=lisp.callFunctionWithCallStack(G_462,L_G425__717,G_926);
L_G427__719=lisp.values1(TMP_1363);
if(lisp.values1(L_G427__719) !== lisp.S_nil){
TMP_1364=lisp.values1(lisp.values1(G_502));
}else{
{
L_G428__720=lisp.values1(G_4);
if(lisp.values1(L_G428__720) !== lisp.S_nil){
TMP_1366=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G425__717,lisp.makeCons(G_920, lisp.makeCons(G_926, lisp.S_nil)));
TMP_1365=lisp.values1(lisp.values1(TMP_1366));
}else{
TMP_1365=lisp.values1(lisp.S_nil);
}
}
TMP_1364=lisp.values1(lisp.values1(TMP_1365));
}
}
TMP_1362=lisp.values1(lisp.values1(TMP_1364));
}
}
}
TMP_1367=lisp.callFunctionWithCallStack(G_54,lisp.values1(lisp.values1(TMP_1362)),L_MAXMIN_VAR__710,L_G_VALUE__716);
TMP_1368=lisp.callFunctionWithCallStack(G_54,G_1359,TMP_1360,TMP_1367);
TMP_1369=lisp.callFunctionWithCallStack(G_54,G_507,L_MAXMIN_VAR__710,L_G_VALUE__716);
TMP_1370=lisp.callFunctionWithCallStack(G_54,G_996,TMP_1368,TMP_1369);
TMP_1371=lisp.callFunctionWithCallStack(G_54,G_1028,TMP_1358,TMP_1370);
}
}
}
return TMP_1371;
});
lisp.CL_put(G_228,G_1193,TMP_1345);
TMP_1372=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1416;
let TMP_1415;
let TMP_1414;
let TMP_1412;
let TMP_1411;
let TMP_1408;
let TMP_1406;
let TMP_1405;
let L_BODY__740;
let TMP_1404;
let L_VAR__739;
let TMP_1403;
let F_F__729;
let TMP_1382;
let L_BINDS__728;
let L_G432__727;
let TMP_1381;
let L_FORM__726;
let TMP_1380;
let L_G431__725;
let TMP_1379;
let L_D_VAR__724;
let TMP_1378;
let L_G430__723;
let TMP_1377;
let TMP_1375;
let TMP_1374;
let TMP_1373;
let L_G429__722;
let L_G175__721;
L_G175__721=lisp.jsArrayToList(arguments, 0);
{
L_G429__722=lisp.values1(L_G175__721);
{
TMP_1373=lisp.callFunctionWithCallStack(G_1196,L_G429__722);
TMP_1374=lisp.callFunctionWithCallStack(G_504,2,TMP_1373,2);
if(lisp.values1(TMP_1374) !== lisp.S_nil){
TMP_1375=lisp.values1(lisp.S_nil);
}else{
TMP_1377=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1376, lisp.makeCons(G_645, lisp.S_nil)),L_G429__722);
TMP_1375=lisp.values1(lisp.values1(TMP_1377));
}
L_G430__723=lisp.values1(TMP_1375);
TMP_1378=lisp.callFunctionWithCallStack(G_753,L_G429__722);
L_D_VAR__724=lisp.values1(TMP_1378);
TMP_1379=lisp.callFunctionWithCallStack(G_755,L_G429__722);
L_G431__725=lisp.values1(TMP_1379);
TMP_1380=lisp.callFunctionWithCallStack(G_753,L_G431__725);
L_FORM__726=lisp.values1(TMP_1380);
TMP_1381=lisp.callFunctionWithCallStack(G_755,L_G431__725);
L_G432__727=lisp.values1(TMP_1381);
{
L_BINDS__728=lisp.values1(lisp.S_nil);
{
TMP_1382=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1402;
let TMP_1401;
let TMP_1400;
let L_G437__738;
let TMP_1399;
let TMP_1398;
let TMP_1397;
let TMP_1396;
let TMP_1395;
let L_G436__737;
let TMP_1394;
let TMP_1393;
let TMP_1392;
let L_G435__736;
let TMP_1391;
let TMP_1390;
let TMP_1389;
let L_CDR_VAR__735;
let TMP_1388;
let L_CAR_VAR__734;
let TMP_1387;
let TMP_1386;
let L_G434__733;
let TMP_1385;
let TMP_1384;
let L_G433__732;
let TMP_1383;
let L_VALUE__731;
let L_D_VAR__730;
L_D_VAR__730=arguments[0];
L_VALUE__731=arguments[1];
{
TMP_1383=lisp.callFunctionWithCallStack(G_268,L_D_VAR__730);
L_G433__732=lisp.values1(TMP_1383);
if(lisp.values1(L_G433__732) !== lisp.S_nil){
TMP_1384=lisp.values1(lisp.S_nil);
}else{
{
TMP_1385=lisp.CL_consp(L_D_VAR__730);
L_G434__733=lisp.values1(TMP_1385);
if(lisp.values1(L_G434__733) !== lisp.S_nil){
{
TMP_1387=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([67, 65, 82])));
L_CAR_VAR__734=lisp.values1(TMP_1387);
TMP_1388=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([67, 68, 82])));
L_CDR_VAR__735=lisp.values1(TMP_1388);
{
TMP_1389=lisp.callFunctionWithCallStack(G_54,G_261,L_VALUE__731);
TMP_1390=lisp.callFunctionWithCallStack(G_54,L_CAR_VAR__734,TMP_1389);
TMP_1391=lisp.CL_cons(TMP_1390,L_BINDS__728);
L_G435__736=lisp.values1(TMP_1391);
L_BINDS__728=lisp.values1(L_G435__736);
}
{
TMP_1392=lisp.callFunctionWithCallStack(G_54,G_259,L_VALUE__731);
TMP_1393=lisp.callFunctionWithCallStack(G_54,L_CDR_VAR__735,TMP_1392);
TMP_1394=lisp.CL_cons(TMP_1393,L_BINDS__728);
L_G436__737=lisp.values1(TMP_1394);
L_BINDS__728=lisp.values1(L_G436__737);
}
TMP_1395=lisp.callFunctionWithCallStack(G_261,L_D_VAR__730);
TMP_1396=F_F__729(TMP_1395,L_CAR_VAR__734);
TMP_1397=lisp.callFunctionWithCallStack(G_259,L_D_VAR__730);
TMP_1398=F_F__729(TMP_1397,L_CDR_VAR__735);
TMP_1399=lisp.callFunctionWithCallStack(G_380,TMP_1396,TMP_1398);
}
TMP_1386=TMP_1399;
}else{
{
L_G437__738=lisp.values1(G_4);
if(lisp.values1(L_G437__738) !== lisp.S_nil){
G_270.func(L_D_VAR__730);
TMP_1401=lisp.callFunctionWithCallStack(G_54,G_507,L_D_VAR__730,L_VALUE__731);
TMP_1402=lisp.callFunctionWithCallStack(G_54,TMP_1401);
TMP_1400=TMP_1402;
}else{
TMP_1400=lisp.values1(lisp.S_nil);
}
}
TMP_1386=TMP_1400;
}
}
TMP_1384=TMP_1386;
}
}
return TMP_1384;
});
F_F__729=lisp.values1(TMP_1382);
{
TMP_1403=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([68, 69, 83, 84, 82, 85, 67, 84, 85, 82, 73, 78, 71, 45, 86, 65, 82])));
L_VAR__739=lisp.values1(TMP_1403);
TMP_1404=F_F__729(L_D_VAR__724,L_VAR__739);
L_BODY__740=lisp.values1(TMP_1404);
TMP_1405=lisp.callFunctionWithCallStack(G_54,L_VAR__739,L_FORM__726);
TMP_1406=lisp.callFunctionWithCallStack(G_1407,L_BINDS__728);
TMP_1408=lisp.CL_cons(TMP_1405,TMP_1406);
TMP_1411=lisp.CL_symbolFunction(G_261);
TMP_1412=lisp.callFunctionWithCallStack(G_1413,TMP_1411,L_BINDS__728);
TMP_1414=lisp.CL_cons(G_1410,TMP_1412);
TMP_1415=lisp.callFunctionWithCallStack(G_54,G_1409,TMP_1414);
TMP_1416=lisp.callFunctionWithCallStack(G_56,G_1217,TMP_1408,TMP_1415,L_BODY__740);
}
}
}
}
}
return TMP_1416;
});
lisp.CL_put(G_517,G_1193,TMP_1372);
TMP_1417=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1454;
let TMP_1453;
let TMP_1452;
let TMP_1451;
let TMP_1450;
let TMP_1449;
let TMP_1447;
let TMP_1446;
let TMP_1445;
let TMP_1444;
let TMP_1442;
let TMP_1441;
let TMP_1439;
let TMP_1438;
let TMP_1437;
let TMP_1436;
let L_G_INTO__754;
let TMP_1435;
let L_G_KIND__753;
let TMP_1434;
let L_G_KINDSLASHACCUMULATOR__752;
let TMP_1433;
let L_BODY__751;
let L_G444__750;
let TMP_1432;
let L_G443__749;
let TMP_1431;
let L_INTO__748;
let TMP_1430;
let L_G442__747;
let TMP_1429;
let L_KIND__746;
let TMP_1428;
let L_G441__745;
let TMP_1427;
let TMP_1426;
let TMP_1425;
let TMP_1424;
let L_G440__744;
let TMP_1423;
let L_G439__743;
let TMP_1422;
let TMP_1420;
let TMP_1419;
let TMP_1418;
let L_G438__742;
let L_G258__741;
L_G258__741=lisp.jsArrayToList(arguments, 0);
{
L_G438__742=lisp.values1(L_G258__741);
{
TMP_1418=lisp.callFunctionWithCallStack(G_1196,L_G438__742);
TMP_1419=lisp.callFunctionWithCallStack(G_504,1,TMP_1418);
if(lisp.values1(TMP_1419) !== lisp.S_nil){
TMP_1420=lisp.values1(lisp.S_nil);
}else{
TMP_1422=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_1233, lisp.makeCons(G_1421, lisp.S_nil)), lisp.makeCons(G_1202, lisp.makeCons(G_1203, lisp.S_nil))),L_G438__742);
TMP_1420=lisp.values1(lisp.values1(TMP_1422));
}
L_G439__743=lisp.values1(TMP_1420);
TMP_1423=lisp.callFunctionWithCallStack(G_753,L_G438__742);
L_G440__744=lisp.values1(TMP_1423);
TMP_1424=lisp.callFunctionWithCallStack(G_1196,L_G440__744);
TMP_1425=lisp.callFunctionWithCallStack(G_504,2,TMP_1424,2);
if(lisp.values1(TMP_1425) !== lisp.S_nil){
TMP_1426=lisp.values1(lisp.S_nil);
}else{
TMP_1427=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1233, lisp.makeCons(G_1421, lisp.S_nil)),L_G440__744);
TMP_1426=lisp.values1(lisp.values1(TMP_1427));
}
L_G441__745=lisp.values1(TMP_1426);
TMP_1428=lisp.callFunctionWithCallStack(G_753,L_G440__744);
L_KIND__746=lisp.values1(TMP_1428);
TMP_1429=lisp.callFunctionWithCallStack(G_755,L_G440__744);
L_G442__747=lisp.values1(TMP_1429);
TMP_1430=lisp.callFunctionWithCallStack(G_753,L_G442__747);
L_INTO__748=lisp.values1(TMP_1430);
TMP_1431=lisp.callFunctionWithCallStack(G_755,L_G442__747);
L_G443__749=lisp.values1(TMP_1431);
TMP_1432=lisp.callFunctionWithCallStack(G_755,L_G438__742);
L_G444__750=lisp.values1(TMP_1432);
L_BODY__751=lisp.values1(L_G444__750);
{
TMP_1433=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([75, 73, 78, 68, 47, 65, 67, 67, 85, 77, 85, 76, 65, 84, 79, 82])));
L_G_KINDSLASHACCUMULATOR__752=lisp.values1(TMP_1433);
TMP_1434=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([75, 73, 78, 68])));
L_G_KIND__753=lisp.values1(TMP_1434);
TMP_1435=lisp.callFunctionWithCallStack(G_48,G_51.func(lisp.codeArrayToString([73, 78, 84, 79])));
L_G_INTO__754=lisp.values1(TMP_1435);
TMP_1436=lisp.CL_cons(L_G_KINDSLASHACCUMULATOR__752,lisp.makeCons(lisp.makeCons(G_850, lisp.makeCons(G_1421, lisp.makeCons(G_16, lisp.S_nil))), lisp.S_nil));
TMP_1437=lisp.callFunctionWithCallStack(G_54,L_G_KIND__753,L_KIND__746);
TMP_1438=lisp.callFunctionWithCallStack(G_54,L_G_INTO__754,L_INTO__748);
TMP_1439=lisp.callFunctionWithCallStack(G_54,TMP_1436,TMP_1437,TMP_1438);
TMP_1441=lisp.callFunctionWithCallStack(G_54,G_259,L_G_KINDSLASHACCUMULATOR__752);
TMP_1442=lisp.callFunctionWithCallStack(G_54,L_G_KINDSLASHACCUMULATOR__752,TMP_1441);
TMP_1444=lisp.CL_cons(G_808,L_BODY__751);
TMP_1445=lisp.callFunctionWithCallStack(G_54,G_1443,TMP_1444);
TMP_1446=lisp.callFunctionWithCallStack(G_54,TMP_1445);
TMP_1447=lisp.callFunctionWithCallStack(G_56,G_850,L_G_INTO__754,lisp.makeCons(G_16, lisp.S_nil));
TMP_1449=lisp.callFunctionWithCallStack(G_56,G_1448,L_G_KIND__753,lisp.makeCons(G_1443, lisp.S_nil));
TMP_1450=lisp.callFunctionWithCallStack(G_54,G_1245,TMP_1447,TMP_1449);
TMP_1451=lisp.callFunctionWithCallStack(G_56,G_1028,TMP_1446,TMP_1450,lisp.makeCons(G_1443, lisp.S_nil));
TMP_1452=lisp.callFunctionWithCallStack(G_54,G_4,TMP_1451);
TMP_1453=lisp.callFunctionWithCallStack(G_54,G_1440,TMP_1442,TMP_1452);
TMP_1454=lisp.callFunctionWithCallStack(G_54,G_1028,TMP_1439,TMP_1453);
}
}
}
return TMP_1454;
});
lisp.CL_put(G_844,G_1193,TMP_1417);
TMP_1455=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1465;
let TMP_1464;
let L_BODY__762;
let L_G448__761;
let TMP_1463;
let L_VALUE__760;
let TMP_1462;
let L_G447__759;
let TMP_1461;
let L_D_VAR__758;
let TMP_1460;
let L_G446__757;
let TMP_1459;
let TMP_1458;
let TMP_1457;
let TMP_1456;
let L_G445__756;
let L_G349__755;
L_G349__755=lisp.jsArrayToList(arguments, 0);
{
L_G445__756=lisp.values1(L_G349__755);
{
TMP_1456=lisp.callFunctionWithCallStack(G_1196,L_G445__756);
TMP_1457=lisp.callFunctionWithCallStack(G_504,2,TMP_1456);
if(lisp.values1(TMP_1457) !== lisp.S_nil){
TMP_1458=lisp.values1(lisp.S_nil);
}else{
TMP_1459=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1376, lisp.makeCons(G_1232, lisp.makeCons(G_1202, lisp.makeCons(G_1203, lisp.S_nil)))),L_G445__756);
TMP_1458=lisp.values1(lisp.values1(TMP_1459));
}
L_G446__757=lisp.values1(TMP_1458);
TMP_1460=lisp.callFunctionWithCallStack(G_753,L_G445__756);
L_D_VAR__758=lisp.values1(TMP_1460);
TMP_1461=lisp.callFunctionWithCallStack(G_755,L_G445__756);
L_G447__759=lisp.values1(TMP_1461);
TMP_1462=lisp.callFunctionWithCallStack(G_753,L_G447__759);
L_VALUE__760=lisp.values1(TMP_1462);
TMP_1463=lisp.callFunctionWithCallStack(G_755,L_G447__759);
L_G448__761=lisp.values1(TMP_1463);
L_BODY__762=lisp.values1(L_G448__761);
TMP_1464=G_1078.func(L_D_VAR__758,L_VALUE__760);
TMP_1465=lisp.callFunctionWithCallStack(G_56,G_1217,TMP_1464,L_BODY__762);
}
}
return TMP_1465;
});
lisp.CL_put(G_1106,G_1193,TMP_1455);
TMP_1466=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1472;
let L_FORMS__766;
let L_G450__765;
let TMP_1471;
let TMP_1469;
let TMP_1468;
let TMP_1467;
let L_G449__764;
let L_G371__763;
L_G371__763=lisp.jsArrayToList(arguments, 0);
{
L_G449__764=lisp.values1(L_G371__763);
{
TMP_1467=lisp.callFunctionWithCallStack(G_1196,L_G449__764);
TMP_1468=lisp.callFunctionWithCallStack(G_504,0,TMP_1467);
if(lisp.values1(TMP_1468) !== lisp.S_nil){
TMP_1469=lisp.values1(lisp.S_nil);
}else{
TMP_1471=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1202, lisp.makeCons(G_1470, lisp.S_nil)),L_G449__764);
TMP_1469=lisp.values1(lisp.values1(TMP_1471));
}
L_G450__765=lisp.values1(TMP_1469);
L_FORMS__766=lisp.values1(L_G449__764);
TMP_1472=G_1179.func(L_FORMS__766);
}
}
return TMP_1472;
});
lisp.CL_put(G_1191,G_1193,TMP_1466);
TMP_1473=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G452__769;
let TMP_1477;
let TMP_1476;
let TMP_1475;
let TMP_1474;
let L_G451__768;
let L_G372__767;
L_G372__767=lisp.jsArrayToList(arguments, 0);
{
L_G451__768=lisp.values1(L_G372__767);
{
TMP_1474=lisp.callFunctionWithCallStack(G_1196,L_G451__768);
TMP_1475=lisp.callFunctionWithCallStack(G_504,0,TMP_1474,0);
if(lisp.values1(TMP_1475) !== lisp.S_nil){
TMP_1476=lisp.values1(lisp.S_nil);
}else{
TMP_1477=lisp.callFunctionWithCallStack(G_231,G_51.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.S_nil,L_G451__768);
TMP_1476=lisp.values1(lisp.values1(TMP_1477));
}
L_G452__769=lisp.values1(TMP_1476);
}
}
return lisp.values1(lisp.makeCons(G_701, lisp.makeCons(G_702, lisp.S_nil)));
});
lisp.CL_put(G_1192,G_1193,TMP_1473);
}catch(TMP_1){G_1478.func();
console.log(TMP_1.message);
}


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
__webpack_require__(17);
__webpack_require__(23);
__webpack_require__(53);
__webpack_require__(54);
__webpack_require__(55);
__webpack_require__(56);
__webpack_require__(57);
__webpack_require__(58);
__webpack_require__(59);
__webpack_require__(60);
__webpack_require__(61);
__webpack_require__(62);
__webpack_require__(63);
__webpack_require__(64);


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let G_8;
let G_10;
let G_12;
let G_13;
let TMP_11;
let TMP_9;
let TMP_7;
let TMP_3;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('*IN-HOST-RUNTIME*', 'COMPILER');
G_4 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_5 = lisp.intern('T', 'COMMON-LISP');
G_6 = lisp.intern('*DEBUG*', 'COMPILER');
G_8 = lisp.intern('*KNOWN-TOPLEVEL-FUNCTIONS*', 'COMPILER');
G_10 = lisp.intern('*ENABLE-PROFILING*', 'COMPILER');
G_12 = lisp.intern('*HIR-OPTIMIZE*', 'COMPILER');
G_13 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');TMP_3=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_3) !== lisp.S_nil){
}else{
lisp.CL_set(G_2,lisp.S_nil);
}
lisp.CL_put(G_2,G_4,G_5);
TMP_7=lisp.CL_boundp(G_6);
if(lisp.values1(TMP_7) !== lisp.S_nil){
}else{
lisp.CL_set(G_6,lisp.S_nil);
}
lisp.CL_put(G_6,G_4,G_5);
TMP_9=lisp.CL_boundp(G_8);
if(lisp.values1(TMP_9) !== lisp.S_nil){
}else{
lisp.CL_set(G_8,lisp.S_nil);
}
lisp.CL_put(G_8,G_4,G_5);
TMP_11=lisp.CL_boundp(G_10);
if(lisp.values1(TMP_11) !== lisp.S_nil){
}else{
lisp.CL_set(G_10,lisp.S_nil);
}
lisp.CL_put(G_10,G_4,G_5);
lisp.CL_set(G_12,G_5);
lisp.CL_put(G_12,G_4,G_5);
}catch(TMP_1){G_13.func();
console.log(TMP_1.message);
}


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_8;
let G_11;
let G_15;
let G_17;
let G_19;
let G_25;
let CL_COMPILER_PARSE_BODY;
// toplevel defun
let F_PARSE_BODY_2;
F_PARSE_BODY_2=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_3, arguments.length);
}
let L_G10__13;
let TMP_24;
let TMP_23;
let L_G8__11;
let TMP_22;
let TMP_21;
let TMP_20;
let TMP_18;
let L_G7__10;
let TMP_16;
let TMP_14;
let L_G6__9;
let TMP_13;
let TMP_12;
let TMP_10;
let TMP_9;
let L_FORM__8;
let TMP_7;
let TMP_6;
let TMP_4;
let L_FORMS__7;
let BLOCK_RESULT_NIL__6;
let L_DOCSTRING__5;
let L_DECLARES__4;
let L_LOOK_DOCSTRING_P__2;
let L_BODY__1;
L_BODY__1=arguments[0];
L_LOOK_DOCSTRING_P__2=arguments[1];
{
L_DECLARES__4=lisp.values1(lisp.S_nil);
L_DOCSTRING__5=lisp.values1(lisp.S_nil);
BLOCK_NIL__6: for(;;){{
L_FORMS__7=lisp.values1(L_BODY__1);
for(;;){
TMP_4=lisp.callFunctionWithCallStack(G_5,L_FORMS__7);
if(lisp.values1(TMP_4) !== lisp.S_nil){
TMP_6=lisp.CL_values(lisp.S_nil,L_DECLARES__4,L_DOCSTRING__5);
BLOCK_RESULT_NIL__6=TMP_6;
break BLOCK_NIL__6;
}else{
{
TMP_7=lisp.callFunctionWithCallStack(G_8,L_FORMS__7);
L_FORM__8=lisp.values1(TMP_7);
{
TMP_9=lisp.CL_consp(L_FORM__8);
if(lisp.values1(TMP_9) !== lisp.S_nil){
TMP_12=lisp.callFunctionWithCallStack(G_8,L_FORM__8);
TMP_13=lisp.CL_eq(G_11,TMP_12);
TMP_10=lisp.values1(TMP_13);
}else{
TMP_10=lisp.values1(lisp.S_nil);
}
L_G6__9=lisp.values1(TMP_10);
if(lisp.values1(L_G6__9) !== lisp.S_nil){
{
TMP_14=lisp.callFunctionWithCallStack(G_15,L_FORM__8);
TMP_16=lisp.callFunctionWithCallStack(G_17,TMP_14,L_DECLARES__4);
L_G7__10=lisp.values1(TMP_16);
L_DECLARES__4=lisp.values1(L_G7__10);
}
}else{
{
TMP_18=lisp.callFunctionWithCallStack(G_19,L_FORM__8);
if(lisp.values1(TMP_18) !== lisp.S_nil){
if(lisp.values1(L_LOOK_DOCSTRING_P__2) !== lisp.S_nil){
TMP_22=lisp.callFunctionWithCallStack(G_15,L_FORMS__7);
TMP_21=lisp.values1(TMP_22);
}else{
TMP_21=lisp.values1(lisp.S_nil);
}
TMP_20=lisp.values1(TMP_21);
}else{
TMP_20=lisp.values1(lisp.S_nil);
}
L_G8__11=lisp.values1(TMP_20);
if(lisp.values1(L_G8__11) !== lisp.S_nil){
L_DOCSTRING__5=lisp.values1(L_FORM__8);
}else{
TMP_23=lisp.CL_values(L_FORMS__7,L_DECLARES__4,L_DOCSTRING__5);
BLOCK_RESULT_NIL__6=TMP_23;
break BLOCK_NIL__6;
}
}
}
}
}
{
TMP_24=lisp.callFunctionWithCallStack(G_15,L_FORMS__7);
L_G10__13=lisp.values1(TMP_24);
L_FORMS__7=lisp.values1(L_G10__13);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__6=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
return BLOCK_RESULT_NIL__6;
});
CL_COMPILER_PARSE_BODY=lisp.values1(F_PARSE_BODY_2);
// initialize symbols
G_3 = lisp.intern('PARSE-BODY', 'COMPILER');
G_5 = lisp.intern('NULL', 'COMMON-LISP');
G_8 = lisp.intern('FIRST', 'COMMON-LISP');
G_11 = lisp.intern('DECLARE', 'COMMON-LISP');
G_15 = lisp.intern('REST', 'COMMON-LISP');
G_17 = lisp.intern('APPEND', 'COMMON-LISP');
G_19 = lisp.intern('STRINGP', 'COMMON-LISP');
G_25 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');CL_COMPILER_PARSE_BODY.lisp_name = 'PARSE-BODY'
lisp.setSymbolFunction(G_3, CL_COMPILER_PARSE_BODY);
}catch(TMP_1){G_25.func();
console.log(TMP_1.message);
}


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_6;
let G_8;
let G_9;
let G_11;
let G_12;
let G_14;
let G_15;
let G_17;
let G_19;
let G_21;
let G_23;
let G_24;
let G_30;
let G_32;
let G_34;
let G_35;
let G_39;
let G_42;
let G_44;
let G_49;
let G_51;
let G_55;
let G_57;
let G_61;
let G_63;
let G_65;
let G_69;
let G_71;
let G_74;
let G_75;
let G_78;
let G_83;
let G_86;
let G_88;
let G_90;
let G_92;
let G_94;
let G_96;
let G_98;
let G_102;
let G_103;
let G_105;
let G_107;
let G_110;
let G_111;
let G_115;
let G_120;
let G_123;
let G_126;
let G_129;
let G_131;
let G_147;
let G_149;
let G_151;
let G_156;
let G_159;
let G_162;
let G_167;
let G_172;
let G_173;
let G_176;
let G_178;
let G_180;
let G_181;
let G_182;
let G_183;
let G_186;
let G_193;
let G_199;
let G_202;
let G_205;
let G_212;
let CL_COMPILER_HASH_TABLE_TO_ALIST;
let CL_COMPILER_LENGTHGREATER1;
let CL_COMPILER_LENGTHEQUALN;
let CL_COMPILER_LENGTHEQUAL1;
let CL_COMPILER_VECTOR_LAST;
let CL_COMPILER_VECTOR_FIRST;
let CL_COMPILER_PARSE_JS_NAME;
let CL_COMPILER_KEBAB_TO_LOWER_CAMEL_CASE;
let CL_COMPILER_CAPITALIZE;
let CL_COMPILER_JS_SYMBOL_P;
let CL_COMPILER_SPLIT_STRING;
let CL_COMPILER_GENVAR;
let CL_COMPILER_MAKE_KEYWORD;
let TMP_174;
let TMP_145;
let TMP_136;
let TMP_132;
let TMP_124;
let TMP_112;
let TMP_108;
let TMP_10;
// toplevel defun
let F_MAKE_KEYWORD_2;
F_MAKE_KEYWORD_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_7;
let TMP_4;
let L_X__1;
L_X__1=arguments[0];
TMP_4=lisp.callFunctionWithCallStack(G_5,L_X__1);
TMP_7=lisp.callFunctionWithCallStack(G_8,TMP_4,G_6);
return TMP_7;
});
CL_COMPILER_MAKE_KEYWORD=lisp.values1(F_MAKE_KEYWORD_2);
let F_GENVAR_13;
F_GENVAR_13=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_14, arguments.length);
}
let TMP_31;
let TMP_29;
let TMP_28;
let L_G4__10;
let TMP_27;
let TMP_26;
let L_G3__9;
let TMP_25;
let TMP_22;
let L_G2__8;
let TMP_20;
let TMP_18;
let L_G1__7;
let TMP_16;
let L_G0__6;
let L_KIND__4;
let L_PREFIX__3;
L_PREFIX__3=arguments[0];
L_KIND__4=arguments.length > 1 ? arguments[1] : (lisp.values1(G_15));
{
L_G0__6=lisp.values1(L_KIND__4);
{
TMP_16=lisp.callFunctionWithCallStack(G_17,L_G0__6,G_15);
L_G1__7=lisp.values1(TMP_16);
if(lisp.values1(L_G1__7) !== lisp.S_nil){
{
TMP_20=lisp.callFunctionWithCallStack(G_21,lisp.symbolValue(G_9),1);
L_G2__8=lisp.values1(TMP_20);
lisp.setSymbolValue(G_9, lisp.values1(L_G2__8));
}
TMP_22=lisp.callFunctionWithCallStack(G_23,lisp.S_nil,G_19.func(lisp.codeArrayToString([126, 65, 95, 126, 68])),L_PREFIX__3,lisp.values1(G_9.value));
TMP_18=TMP_22;
}else{
{
TMP_25=lisp.callFunctionWithCallStack(G_17,L_G0__6,G_24);
L_G3__9=lisp.values1(TMP_25);
if(lisp.values1(L_G3__9) !== lisp.S_nil){
{
TMP_27=lisp.callFunctionWithCallStack(G_21,lisp.symbolValue(G_9),1);
L_G4__10=lisp.values1(TMP_27);
lisp.setSymbolValue(G_9, lisp.values1(L_G4__10));
}
TMP_28=lisp.callFunctionWithCallStack(G_23,lisp.S_nil,G_19.func(lisp.codeArrayToString([126, 65, 95, 126, 68])),L_PREFIX__3,lisp.values1(G_9.value));
TMP_29=lisp.callFunctionWithCallStack(G_30,TMP_28);
TMP_26=TMP_29;
}else{
TMP_31=lisp.callFunctionWithCallStack(G_32,G_19.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G0__6,lisp.makeCons(G_15, lisp.makeCons(G_24, lisp.S_nil)));
TMP_26=TMP_31;
}
}
TMP_18=TMP_26;
}
}
}
return TMP_18;
});
CL_COMPILER_GENVAR=lisp.values1(F_GENVAR_13);
let F_SPLIT_STRING_33;
F_SPLIT_STRING_33=(function(){
if(arguments.length < 2 || 4 < arguments.length) {
lisp.argumentsError(G_34, arguments.length);
}
let TMP_48;
let TMP_47;
let TMP_46;
let TMP_45;
let TMP_43;
let TMP_41;
let TMP_40;
let L_POS__16;
let TMP_38;
let L_START__14;
let L_STRING__13;
let L_CHARACTER__12;
L_CHARACTER__12=arguments[0];
L_STRING__13=arguments[1];
let supplied_START__14;
for (let TMP_36 = 2; TMP_36 < arguments.length; TMP_36 += 2) {
if(arguments[TMP_36] === G_35){
supplied_START__14=arguments[TMP_36+1];
break;
}
}
L_START__14=supplied_START__14 !== undefined ? supplied_START__14 : (lisp.values1(0));
if((arguments.length-2)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_37 = 2; TMP_37 < arguments.length; TMP_37 += 2) {
if(arguments[TMP_37]!==G_35) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_37].name); }
}
{
TMP_38=lisp.callFunctionWithCallStack(G_39,L_CHARACTER__12,L_STRING__13,G_35,L_START__14);
L_POS__16=lisp.values1(TMP_38);
if(lisp.values1(L_POS__16) !== lisp.S_nil){
TMP_41=lisp.callFunctionWithCallStack(G_42,L_STRING__13,L_START__14,L_POS__16);
TMP_43=lisp.callFunctionWithCallStack(G_44,L_POS__16);
TMP_45=G_34.func(L_CHARACTER__12,L_STRING__13,G_35,TMP_43);
TMP_46=lisp.CL_cons(TMP_41,TMP_45);
TMP_40=TMP_46;
}else{
TMP_47=lisp.callFunctionWithCallStack(G_42,L_STRING__13,L_START__14);
TMP_48=lisp.callFunctionWithCallStack(G_49,TMP_47);
TMP_40=TMP_48;
}
}
return TMP_40;
});
CL_COMPILER_SPLIT_STRING=lisp.values1(F_SPLIT_STRING_33);
let F_JS_SYMBOL_P_50;
F_JS_SYMBOL_P_50=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_51, arguments.length);
}
let TMP_59;
let TMP_58;
let TMP_56;
let TMP_54;
let TMP_53;
let TMP_52;
let L_SYMBOL__17;
L_SYMBOL__17=arguments[0];
TMP_52=lisp.CL_symbolp(L_SYMBOL__17);
if(lisp.values1(TMP_52) !== lisp.S_nil){
TMP_54=lisp.callFunctionWithCallStack(G_55,L_SYMBOL__17);
TMP_56=lisp.callFunctionWithCallStack(G_57,TMP_54);
TMP_58=lisp.callFunctionWithCallStack(G_57,G_19.func(lisp.codeArrayToString([74, 83])));
TMP_59=lisp.CL_eq(TMP_56,TMP_58);
TMP_53=TMP_59;
}else{
TMP_53=lisp.values1(lisp.S_nil);
}
return TMP_53;
});
CL_COMPILER_JS_SYMBOL_P=lisp.values1(F_JS_SYMBOL_P_50);
let F_CAPITALIZE_60;
F_CAPITALIZE_60=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_61, arguments.length);
}
let L_G12__26;
let TMP_81;
let TMP_80;
let TMP_79;
let TMP_77;
let L_I__25;
let BLOCK_RESULT_NIL__24;
let L_LEN__23;
let TMP_76;
let TMP_73;
let TMP_72;
let TMP_70;
let TMP_68;
let TMP_67;
let TMP_66;
let TMP_64;
let TMP_62;
let L_OUT__21;
let L_FIRST__20;
let L_STRING__19;
L_STRING__19=arguments[0];
L_FIRST__20=arguments[1];
L_OUT__21=arguments[2];
TMP_62=lisp.callFunctionWithCallStack(G_63,L_STRING__19);
TMP_64=lisp.callFunctionWithCallStack(G_65,0,TMP_62);
if(lisp.values1(TMP_64) !== lisp.S_nil){
if(lisp.values1(L_FIRST__20) !== lisp.S_nil){
TMP_68=lisp.callFunctionWithCallStack(G_69,L_STRING__19,0);
TMP_70=lisp.callFunctionWithCallStack(G_71,TMP_68);
TMP_67=lisp.values1(TMP_70);
}else{
TMP_72=lisp.callFunctionWithCallStack(G_69,L_STRING__19,0);
TMP_73=lisp.callFunctionWithCallStack(G_74,TMP_72);
TMP_67=lisp.values1(TMP_73);
}
lisp.callFunctionWithCallStack(G_75,TMP_67,L_OUT__21);
{
TMP_76=lisp.callFunctionWithCallStack(G_63,L_STRING__19);
L_LEN__23=lisp.values1(TMP_76);
BLOCK_NIL__24: for(;;){{
L_I__25=lisp.values1(1);
for(;;){
TMP_77=lisp.callFunctionWithCallStack(G_78,L_I__25,L_LEN__23);
if(lisp.values1(TMP_77) !== lisp.S_nil){
BLOCK_RESULT_NIL__24=lisp.values1(lisp.S_nil);
break BLOCK_NIL__24;
}else{
TMP_79=lisp.callFunctionWithCallStack(G_69,L_STRING__19,L_I__25);
TMP_80=lisp.callFunctionWithCallStack(G_71,TMP_79);
lisp.callFunctionWithCallStack(G_75,TMP_80,L_OUT__21);
{
TMP_81=lisp.callFunctionWithCallStack(G_44,L_I__25);
L_G12__26=lisp.values1(TMP_81);
L_I__25=lisp.values1(L_G12__26);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__24=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_66=BLOCK_RESULT_NIL__24;
}else{
TMP_66=lisp.values1(lisp.S_nil);
}
return TMP_66;
});
CL_COMPILER_CAPITALIZE=lisp.values1(F_CAPITALIZE_60);
let F_KEBAB_TO_LOWER_CAMEL_CASE_82;
F_KEBAB_TO_LOWER_CAMEL_CASE_82=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_83, arguments.length);
}
let TMP_93;
let TMP_91;
let L_PART__34;
let TMP_89;
let TMP_87;
let L_G13__33;
let L_OUT__31;
let TMP_85;
let L_FIRST__30;
let L_PARTS__29;
let TMP_84;
let L_STRING__27;
L_STRING__27=arguments[0];
{
TMP_84=G_34.func(lisp.makeCharacter(45),L_STRING__27);
L_PARTS__29=lisp.values1(TMP_84);
L_FIRST__30=lisp.values1(G_12);
{
TMP_85=lisp.callFunctionWithCallStack(G_86);
L_OUT__31=lisp.values1(TMP_85);
{
L_G13__33=lisp.values1(L_PARTS__29);
for(;;){
TMP_87=lisp.callFunctionWithCallStack(G_88,L_G13__33);
if(lisp.values1(TMP_87) !== lisp.S_nil){
}else{
{
TMP_89=lisp.callFunctionWithCallStack(G_90,L_G13__33);
L_PART__34=lisp.values1(TMP_89);
TMP_91=lisp.callFunctionWithCallStack(G_92,L_G13__33);
L_G13__33=lisp.values1(TMP_91);
G_61.func(L_PART__34,L_FIRST__30,L_OUT__31);
L_FIRST__30=lisp.values1(lisp.S_nil);
}
continue;
}
break;
}
}
TMP_93=lisp.callFunctionWithCallStack(G_94,L_OUT__31);
}
}
return TMP_93;
});
CL_COMPILER_KEBAB_TO_LOWER_CAMEL_CASE=lisp.values1(F_KEBAB_TO_LOWER_CAMEL_CASE_82);
let F_PARSE_JS_NAME_95;
F_PARSE_JS_NAME_95=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_96, arguments.length);
}
let TMP_101;
let TMP_100;
let L_PARTS__38;
let TMP_99;
let TMP_97;
let L_SYMBOL__36;
L_SYMBOL__36=arguments[0];
{
TMP_97=lisp.callFunctionWithCallStack(G_98,L_SYMBOL__36);
TMP_99=G_34.func(lisp.makeCharacter(46),TMP_97);
L_PARTS__38=lisp.values1(TMP_99);
TMP_100=lisp.CL_symbolFunction(G_83);
TMP_101=lisp.callFunctionWithCallStack(G_102,TMP_100,L_PARTS__38);
}
return TMP_101;
});
CL_COMPILER_PARSE_JS_NAME=lisp.values1(F_PARSE_JS_NAME_95);
let F_VECTOR_FIRST_104;
F_VECTOR_FIRST_104=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_105, arguments.length);
}
let TMP_106;
let L_VECTOR__39;
L_VECTOR__39=arguments[0];
TMP_106=lisp.callFunctionWithCallStack(G_69,L_VECTOR__39,0);
return TMP_106;
});
CL_COMPILER_VECTOR_FIRST=lisp.values1(F_VECTOR_FIRST_104);
let F_VECTOR_LAST_125;
F_VECTOR_LAST_125=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_126, arguments.length);
}
let TMP_130;
let TMP_128;
let TMP_127;
let L_VECTOR__56;
L_VECTOR__56=arguments[0];
TMP_127=lisp.callFunctionWithCallStack(G_63,L_VECTOR__56);
TMP_128=lisp.callFunctionWithCallStack(G_129,TMP_127);
TMP_130=lisp.callFunctionWithCallStack(G_69,L_VECTOR__56,TMP_128);
return TMP_130;
});
CL_COMPILER_VECTOR_LAST=lisp.values1(F_VECTOR_LAST_125);
let F_LENGTHEQUAL1_146;
F_LENGTHEQUAL1_146=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_147, arguments.length);
}
let TMP_154;
let TMP_153;
let TMP_152;
let TMP_150;
let TMP_148;
let L_LIST__73;
L_LIST__73=arguments[0];
TMP_148=lisp.callFunctionWithCallStack(G_149,L_LIST__73);
TMP_150=lisp.callFunctionWithCallStack(G_151,TMP_148);
if(lisp.values1(TMP_150) !== lisp.S_nil){
TMP_153=lisp.callFunctionWithCallStack(G_92,L_LIST__73);
TMP_154=lisp.callFunctionWithCallStack(G_149,TMP_153);
TMP_152=TMP_154;
}else{
TMP_152=lisp.values1(lisp.S_nil);
}
return TMP_152;
});
CL_COMPILER_LENGTHEQUAL1=lisp.values1(F_LENGTHEQUAL1_146);
let F_LENGTHEQUALN_155;
F_LENGTHEQUALN_155=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_156, arguments.length);
}
let TMP_160;
let TMP_158;
let TMP_157;
let L_N__76;
let L_LIST__75;
L_LIST__75=arguments[0];
L_N__76=arguments[1];
TMP_157=lisp.callFunctionWithCallStack(G_129,L_N__76);
TMP_158=lisp.callFunctionWithCallStack(G_159,TMP_157,L_LIST__75);
TMP_160=G_147.func(TMP_158);
return TMP_160;
});
CL_COMPILER_LENGTHEQUALN=lisp.values1(F_LENGTHEQUALN_155);
let F_LENGTHGREATER1_161;
F_LENGTHGREATER1_161=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_162, arguments.length);
}
let TMP_165;
let TMP_164;
let TMP_163;
let L_LIST__78;
L_LIST__78=arguments[0];
TMP_163=lisp.callFunctionWithCallStack(G_92,L_LIST__78);
TMP_164=lisp.callFunctionWithCallStack(G_149,TMP_163);
TMP_165=lisp.callFunctionWithCallStack(G_151,TMP_164);
return TMP_165;
});
CL_COMPILER_LENGTHGREATER1=lisp.values1(F_LENGTHGREATER1_161);
let F_HASH_TABLE_TO_ALIST_166;
F_HASH_TABLE_TO_ALIST_166=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_167, arguments.length);
}
let TMP_168;
let L_ALIST__82;
let L_HASH_TABLE__80;
L_HASH_TABLE__80=arguments[0];
{
L_ALIST__82=lisp.values1(lisp.S_nil);
TMP_168=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_171;
let L_G43__85;
let TMP_170;
let TMP_169;
let L_DOMINATORS__84;
let L_N__83;
L_N__83=arguments[0];
L_DOMINATORS__84=arguments[1];
{
TMP_169=lisp.CL_cons(L_N__83,L_DOMINATORS__84);
TMP_170=lisp.CL_cons(TMP_169,L_ALIST__82);
L_G43__85=lisp.values1(TMP_170);
L_ALIST__82=(TMP_171=lisp.values1(L_G43__85));
}
return lisp.values1(TMP_171);
});
lisp.callFunctionWithCallStack(G_172,TMP_168,L_HASH_TABLE__80);
}
return lisp.values1(L_ALIST__82);
});
CL_COMPILER_HASH_TABLE_TO_ALIST=lisp.values1(F_HASH_TABLE_TO_ALIST_166);
// initialize symbols
G_3 = lisp.intern('MAKE-KEYWORD', 'COMPILER');
G_5 = lisp.intern('PRINC-TO-STRING', 'COMMON-LISP');
G_6 = lisp.intern('KEYWORD', 'KEYWORD');
G_8 = lisp.intern('INTERN', 'COMMON-LISP');
G_9 = lisp.intern('*GENVAR-COUNTER*', 'COMPILER');
G_11 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_12 = lisp.intern('T', 'COMMON-LISP');
G_14 = lisp.intern('GENVAR', 'COMPILER');
G_15 = lisp.intern('STRING', 'KEYWORD');
G_17 = lisp.intern('EQL', 'COMMON-LISP');
G_19 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_21 = lisp.intern('+', 'COMMON-LISP');
G_23 = lisp.intern('FORMAT', 'COMMON-LISP');
G_24 = lisp.intern('SYMBOL', 'KEYWORD');
G_30 = lisp.intern('MAKE-SYMBOL', 'COMMON-LISP');
G_32 = lisp.intern('ERROR', 'COMMON-LISP');
G_34 = lisp.intern('SPLIT-STRING', 'COMPILER');
G_35 = lisp.intern('START', 'KEYWORD');
G_39 = lisp.intern('POSITION', 'COMMON-LISP');
G_42 = lisp.intern('SUBSEQ', 'COMMON-LISP');
G_44 = lisp.intern('1+', 'COMMON-LISP');
G_49 = lisp.intern('LIST', 'COMMON-LISP');
G_51 = lisp.intern('JS-SYMBOL-P', 'COMPILER');
G_55 = lisp.intern('SYMBOL-PACKAGE', 'COMMON-LISP');
G_57 = lisp.intern('FIND-PACKAGE', 'COMMON-LISP');
G_61 = lisp.intern('CAPITALIZE', 'COMPILER');
G_63 = lisp.intern('LENGTH', 'COMMON-LISP');
G_65 = lisp.intern('<', 'COMMON-LISP');
G_69 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_71 = lisp.intern('CHAR-DOWNCASE', 'COMMON-LISP');
G_74 = lisp.intern('CHAR-UPCASE', 'COMMON-LISP');
G_75 = lisp.intern('WRITE-CHAR', 'COMMON-LISP');
G_78 = lisp.intern('=', 'COMMON-LISP');
G_83 = lisp.intern('KEBAB-TO-LOWER-CAMEL-CASE', 'COMPILER');
G_86 = lisp.intern('MAKE-STRING-OUTPUT-STREAM', 'COMMON-LISP');
G_88 = lisp.intern('ENDP', 'COMMON-LISP');
G_90 = lisp.intern('CAR', 'COMMON-LISP');
G_92 = lisp.intern('CDR', 'COMMON-LISP');
G_94 = lisp.intern('GET-OUTPUT-STREAM-STRING', 'COMMON-LISP');
G_96 = lisp.intern('PARSE-JS-NAME', 'COMPILER');
G_98 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_102 = lisp.intern('%MAPCAR', 'SYSTEM');
G_103 = lisp.intern('DO-VECTOR', 'COMPILER');
G_105 = lisp.intern('VECTOR-FIRST', 'COMPILER');
G_107 = lisp.intern('(SETF VECTOR-FIRST)', 'COMPILER');
G_110 = lisp.intern('(SETF AREF)', 'COMMON-LISP');
G_111 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_115 = lisp.intern('GENSYM', 'COMMON-LISP');
G_120 = lisp.intern('LIST*', 'COMMON-LISP');
G_123 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_126 = lisp.intern('VECTOR-LAST', 'COMPILER');
G_129 = lisp.intern('1-', 'COMMON-LISP');
G_131 = lisp.intern('(SETF VECTOR-LAST)', 'COMPILER');
G_147 = lisp.intern('LENGTH=1', 'COMPILER');
G_149 = lisp.intern('NULL', 'COMMON-LISP');
G_151 = lisp.intern('NOT', 'COMMON-LISP');
G_156 = lisp.intern('LENGTH=N', 'COMPILER');
G_159 = lisp.intern('NTHCDR', 'COMMON-LISP');
G_162 = lisp.intern('LENGTH>1', 'COMPILER');
G_167 = lisp.intern('HASH-TABLE-TO-ALIST', 'COMPILER');
G_172 = lisp.intern('MAPHASH', 'COMMON-LISP');
G_173 = lisp.intern('MACRO', 'COMPILER');
G_176 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_178 = lisp.intern('<=', 'COMMON-LISP');
G_180 = lisp.intern('VAR', 'COMPILER');
G_181 = lisp.intern('VECTOR', 'COMMON-LISP');
G_182 = lisp.intern('&BODY', 'COMMON-LISP');
G_183 = lisp.intern('BODY', 'COMPILER');
G_186 = lisp.intern('FIRST', 'COMMON-LISP');
G_193 = lisp.intern('REST', 'COMMON-LISP');
G_199 = lisp.intern('LET', 'COMMON-LISP');
G_202 = lisp.intern('DOTIMES', 'COMMON-LISP');
G_205 = lisp.intern('AREF', 'COMMON-LISP');
G_212 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');CL_COMPILER_MAKE_KEYWORD.lisp_name = 'MAKE-KEYWORD'
lisp.setSymbolFunction(G_3, CL_COMPILER_MAKE_KEYWORD);
TMP_10=lisp.CL_boundp(G_9);
if(lisp.values1(TMP_10) !== lisp.S_nil){
}else{
lisp.CL_set(G_9,0);
}
lisp.CL_put(G_9,G_11,G_12);
CL_COMPILER_GENVAR.lisp_name = 'GENVAR'
lisp.setSymbolFunction(G_14, CL_COMPILER_GENVAR);
CL_COMPILER_SPLIT_STRING.lisp_name = 'SPLIT-STRING'
lisp.setSymbolFunction(G_34, CL_COMPILER_SPLIT_STRING);
CL_COMPILER_JS_SYMBOL_P.lisp_name = 'JS-SYMBOL-P'
lisp.setSymbolFunction(G_51, CL_COMPILER_JS_SYMBOL_P);
CL_COMPILER_CAPITALIZE.lisp_name = 'CAPITALIZE'
lisp.setSymbolFunction(G_61, CL_COMPILER_CAPITALIZE);
CL_COMPILER_KEBAB_TO_LOWER_CAMEL_CASE.lisp_name = 'KEBAB-TO-LOWER-CAMEL-CASE'
lisp.setSymbolFunction(G_83, CL_COMPILER_KEBAB_TO_LOWER_CAMEL_CASE);
CL_COMPILER_PARSE_JS_NAME.lisp_name = 'PARSE-JS-NAME'
lisp.setSymbolFunction(G_96, CL_COMPILER_PARSE_JS_NAME);
CL_COMPILER_VECTOR_FIRST.lisp_name = 'VECTOR-FIRST'
lisp.setSymbolFunction(G_105, CL_COMPILER_VECTOR_FIRST);
TMP_108=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_109;
let L_G_STORE28__46;
let L_G26__44;
let L_VECTOR__42;
let L_VALUE__41;
L_VALUE__41=arguments[0];
L_VECTOR__42=arguments[1];
{
L_G26__44=lisp.values1(L_VECTOR__42);
L_G_STORE28__46=lisp.values1(L_VALUE__41);
TMP_109=lisp.callFunctionWithCallStack(G_110,L_G_STORE28__46,L_G26__44,0);
}
return TMP_109;
});
lisp.CL_setSymbolFunction(G_107,TMP_108);
TMP_112=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_122;
let TMP_121;
let TMP_119;
let TMP_118;
let L_STORE23__53;
let TMP_117;
let L_GENSYMS21__52;
let TMP_116;
let TMP_113;
let L_ARGS22__50;
let L_G30__48;
let L_G29__47;
L_G29__47=arguments[0];
{
L_G30__48=lisp.values1(L_G29__47);
{
L_ARGS22__50=lisp.values1(L_G30__48);
{
TMP_113=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_114;
let L_X__51;
L_X__51=arguments[0];
TMP_114=lisp.callFunctionWithCallStack(G_115);
return TMP_114;
});
TMP_116=lisp.callFunctionWithCallStack(G_102,TMP_113,L_ARGS22__50);
L_GENSYMS21__52=lisp.values1(TMP_116);
TMP_117=lisp.callFunctionWithCallStack(G_115,G_19.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE23__53=lisp.values1(TMP_117);
TMP_118=lisp.callFunctionWithCallStack(G_49,L_STORE23__53);
TMP_119=lisp.callFunctionWithCallStack(G_120,G_107,L_STORE23__53,L_GENSYMS21__52);
TMP_121=lisp.callFunctionWithCallStack(G_120,G_105,L_GENSYMS21__52);
TMP_122=lisp.CL_values(L_GENSYMS21__52,L_ARGS22__50,TMP_118,TMP_119,TMP_121);
}
}
}
return TMP_122;
});
lisp.CL_put(G_105,G_111,TMP_112);
TMP_124=lisp.CL_symbolFunction(G_107);
lisp.CL_put(G_105,G_123,TMP_124);
CL_COMPILER_VECTOR_LAST.lisp_name = 'VECTOR-LAST'
lisp.setSymbolFunction(G_126, CL_COMPILER_VECTOR_LAST);
TMP_132=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_135;
let L_G_STORE39__63;
let L_G38__62;
let TMP_134;
let TMP_133;
let L_G37__61;
let L_VECTOR__59;
let L_VALUE__58;
L_VALUE__58=arguments[0];
L_VECTOR__59=arguments[1];
{
L_G37__61=lisp.values1(L_VECTOR__59);
TMP_133=lisp.callFunctionWithCallStack(G_63,L_VECTOR__59);
TMP_134=lisp.callFunctionWithCallStack(G_129,TMP_133);
L_G38__62=lisp.values1(TMP_134);
L_G_STORE39__63=lisp.values1(L_VALUE__58);
TMP_135=lisp.callFunctionWithCallStack(G_110,L_G_STORE39__63,L_G37__61,L_G38__62);
}
return TMP_135;
});
lisp.CL_setSymbolFunction(G_131,TMP_132);
TMP_136=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_144;
let TMP_143;
let TMP_142;
let TMP_141;
let L_STORE34__70;
let TMP_140;
let L_GENSYMS32__69;
let TMP_139;
let TMP_137;
let L_ARGS33__67;
let L_G41__65;
let L_G40__64;
L_G40__64=arguments[0];
{
L_G41__65=lisp.values1(L_G40__64);
{
L_ARGS33__67=lisp.values1(L_G41__65);
{
TMP_137=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_138;
let L_X__68;
L_X__68=arguments[0];
TMP_138=lisp.callFunctionWithCallStack(G_115);
return TMP_138;
});
TMP_139=lisp.callFunctionWithCallStack(G_102,TMP_137,L_ARGS33__67);
L_GENSYMS32__69=lisp.values1(TMP_139);
TMP_140=lisp.callFunctionWithCallStack(G_115,G_19.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE34__70=lisp.values1(TMP_140);
TMP_141=lisp.callFunctionWithCallStack(G_49,L_STORE34__70);
TMP_142=lisp.callFunctionWithCallStack(G_120,G_131,L_STORE34__70,L_GENSYMS32__69);
TMP_143=lisp.callFunctionWithCallStack(G_120,G_126,L_GENSYMS32__69);
TMP_144=lisp.CL_values(L_GENSYMS32__69,L_ARGS33__67,TMP_141,TMP_142,TMP_143);
}
}
}
return TMP_144;
});
lisp.CL_put(G_126,G_111,TMP_136);
TMP_145=lisp.CL_symbolFunction(G_131);
lisp.CL_put(G_126,G_123,TMP_145);
CL_COMPILER_LENGTHEQUAL1.lisp_name = 'LENGTH=1'
lisp.setSymbolFunction(G_147, CL_COMPILER_LENGTHEQUAL1);
CL_COMPILER_LENGTHEQUALN.lisp_name = 'LENGTH=N'
lisp.setSymbolFunction(G_156, CL_COMPILER_LENGTHEQUALN);
CL_COMPILER_LENGTHGREATER1.lisp_name = 'LENGTH>1'
lisp.setSymbolFunction(G_162, CL_COMPILER_LENGTHGREATER1);
CL_COMPILER_HASH_TABLE_TO_ALIST.lisp_name = 'HASH-TABLE-TO-ALIST'
lisp.setSymbolFunction(G_167, CL_COMPILER_HASH_TABLE_TO_ALIST);
TMP_174=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_211;
let TMP_210;
let TMP_209;
let TMP_208;
let TMP_207;
let TMP_206;
let TMP_204;
let TMP_203;
let TMP_201;
let TMP_200;
let L_G_I__98;
let TMP_198;
let L_G_VECTOR__97;
let TMP_197;
let L_BODY__96;
let L_G50__95;
let TMP_196;
let L_G49__94;
let TMP_195;
let L_VECTOR__93;
let TMP_194;
let L_G48__92;
let TMP_192;
let L_VAR__91;
let TMP_191;
let L_G47__90;
let TMP_190;
let TMP_189;
let TMP_188;
let TMP_187;
let L_G46__89;
let TMP_185;
let L_G45__88;
let TMP_184;
let TMP_179;
let TMP_177;
let TMP_175;
let L_G44__87;
let L_G20__86;
L_G20__86=lisp.jsArrayToList(arguments, 0);
{
L_G44__87=lisp.values1(L_G20__86);
{
TMP_175=lisp.callFunctionWithCallStack(G_176,L_G44__87);
TMP_177=lisp.callFunctionWithCallStack(G_178,1,TMP_175);
if(lisp.values1(TMP_177) !== lisp.S_nil){
TMP_179=lisp.values1(lisp.S_nil);
}else{
TMP_184=lisp.callFunctionWithCallStack(G_32,G_19.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_180, lisp.makeCons(G_181, lisp.S_nil)), lisp.makeCons(G_182, lisp.makeCons(G_183, lisp.S_nil))),L_G44__87);
TMP_179=lisp.values1(lisp.values1(TMP_184));
}
L_G45__88=lisp.values1(TMP_179);
TMP_185=lisp.callFunctionWithCallStack(G_186,L_G44__87);
L_G46__89=lisp.values1(TMP_185);
TMP_187=lisp.callFunctionWithCallStack(G_176,L_G46__89);
TMP_188=lisp.callFunctionWithCallStack(G_178,2,TMP_187,2);
if(lisp.values1(TMP_188) !== lisp.S_nil){
TMP_189=lisp.values1(lisp.S_nil);
}else{
TMP_190=lisp.callFunctionWithCallStack(G_32,G_19.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_180, lisp.makeCons(G_181, lisp.S_nil)),L_G46__89);
TMP_189=lisp.values1(lisp.values1(TMP_190));
}
L_G47__90=lisp.values1(TMP_189);
TMP_191=lisp.callFunctionWithCallStack(G_186,L_G46__89);
L_VAR__91=lisp.values1(TMP_191);
TMP_192=lisp.callFunctionWithCallStack(G_193,L_G46__89);
L_G48__92=lisp.values1(TMP_192);
TMP_194=lisp.callFunctionWithCallStack(G_186,L_G48__92);
L_VECTOR__93=lisp.values1(TMP_194);
TMP_195=lisp.callFunctionWithCallStack(G_193,L_G48__92);
L_G49__94=lisp.values1(TMP_195);
TMP_196=lisp.callFunctionWithCallStack(G_193,L_G44__87);
L_G50__95=lisp.values1(TMP_196);
L_BODY__96=lisp.values1(L_G50__95);
{
TMP_197=lisp.callFunctionWithCallStack(G_115);
L_G_VECTOR__97=lisp.values1(TMP_197);
TMP_198=lisp.callFunctionWithCallStack(G_115);
L_G_I__98=lisp.values1(TMP_198);
TMP_200=lisp.callFunctionWithCallStack(G_49,L_G_VECTOR__97,L_VECTOR__93);
TMP_201=lisp.callFunctionWithCallStack(G_49,TMP_200);
TMP_203=lisp.callFunctionWithCallStack(G_49,G_63,L_G_VECTOR__97);
TMP_204=lisp.callFunctionWithCallStack(G_49,L_G_I__98,TMP_203);
TMP_206=lisp.callFunctionWithCallStack(G_49,G_205,L_G_VECTOR__97,L_G_I__98);
TMP_207=lisp.callFunctionWithCallStack(G_49,L_VAR__91,TMP_206);
TMP_208=lisp.callFunctionWithCallStack(G_49,TMP_207);
TMP_209=lisp.callFunctionWithCallStack(G_120,G_199,TMP_208,L_BODY__96);
TMP_210=lisp.callFunctionWithCallStack(G_49,G_202,TMP_204,TMP_209);
TMP_211=lisp.callFunctionWithCallStack(G_49,G_199,TMP_201,TMP_210);
}
}
}
return TMP_211;
});
lisp.CL_put(G_103,G_173,TMP_174);
}catch(TMP_1){G_212.func();
console.log(TMP_1.message);
}


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_4;
let G_7;
let G_8;
let CL_COMPILER_COMPILE_ERROR;
// toplevel defun
let F_COMPILE_ERROR_2;
F_COMPILE_ERROR_2=(function(){
if(arguments.length < 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_6;
let TMP_5;
let L_ARGS__2;
let L_MESSAGE__1;
L_MESSAGE__1=arguments[0];
L_ARGS__2=lisp.jsArrayToList(arguments, 1);
TMP_5=lisp.CL_symbolFunction(G_4);
TMP_6=lisp.callFunctionWithCallStack(G_7,TMP_5,L_MESSAGE__1,L_ARGS__2);
return TMP_6;
});
CL_COMPILER_COMPILE_ERROR=lisp.values1(F_COMPILE_ERROR_2);
// initialize symbols
G_3 = lisp.intern('COMPILE-ERROR', 'COMPILER');
G_4 = lisp.intern('ERROR', 'COMMON-LISP');
G_7 = lisp.intern('APPLY', 'COMMON-LISP');
G_8 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');CL_COMPILER_COMPILE_ERROR.lisp_name = 'COMPILE-ERROR'
lisp.setSymbolFunction(G_3, CL_COMPILER_COMPILE_ERROR);
}catch(TMP_1){G_8.func();
console.log(TMP_1.message);
}


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_6;
let G_7;
let G_8;
let G_10;
let G_12;
let G_16;
let G_18;
let G_19;
let G_21;
let G_28;
let G_30;
let G_33;
let CL_COMPILER_ADD_SOURCE_INFOSTAR;
let CL_COMPILER_ADD_SOURCE_INFO;
let CL_COMPILER_GET_FORM_POSITION;
let CL_COMPILER_MAKE_SOURCE_INFO;
// toplevel defun
let F_MAKE_SOURCE_INFO_5;
F_MAKE_SOURCE_INFO_5=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_6, arguments.length);
}
let TMP_9;
TMP_9=lisp.callFunctionWithCallStack(G_10,G_7,G_8);
return TMP_9;
});
CL_COMPILER_MAKE_SOURCE_INFO=lisp.values1(F_MAKE_SOURCE_INFO_5);
let F_GET_FORM_POSITION_11;
F_GET_FORM_POSITION_11=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_12, arguments.length);
}
let TMP_15;
let TMP_14;
let TMP_13;
let L_FORM__2;
L_FORM__2=arguments[0];
TMP_13=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_13) !== lisp.S_nil){
TMP_15=lisp.callFunctionWithCallStack(G_16,L_FORM__2,lisp.symbolValue(G_2));
TMP_14=TMP_15;
}else{
TMP_14=lisp.values1(lisp.S_nil);
}
return TMP_14;
});
CL_COMPILER_GET_FORM_POSITION=lisp.values1(F_GET_FORM_POSITION_11);
let F_ADD_SOURCE_INFO_17;
F_ADD_SOURCE_INFO_17=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_18, arguments.length);
}
let L_G_STORE2__9;
let L_G1__8;
let L_G0__7;
let L_POSITION__5;
let L_FORM__4;
L_FORM__4=arguments[0];
L_POSITION__5=arguments[1];
{
L_G0__7=lisp.values1(L_FORM__4);
L_G1__8=lisp.values1(lisp.symbolValue(G_2));
L_G_STORE2__9=lisp.values1(L_POSITION__5);
lisp.callFunctionWithCallStack(G_19,L_G_STORE2__9,L_G0__7,L_G1__8);
}
return lisp.values1(L_FORM__4);
});
CL_COMPILER_ADD_SOURCE_INFO=lisp.values1(F_ADD_SOURCE_INFO_17);
let F_ADD_SOURCE_INFOSTAR_20;
F_ADD_SOURCE_INFOSTAR_20=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_21, arguments.length);
}
let TMP_32;
let F_WALK__13;
let TMP_24;
let TMP_23;
let TMP_22;
let L_POSITION__11;
let L_FORM__10;
L_FORM__10=arguments[0];
L_POSITION__11=arguments[1];
TMP_22=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_22) !== lisp.S_nil){
{
TMP_24=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_31;
let TMP_29;
let TMP_27;
let L_G_STORE5__17;
let L_G4__16;
let L_G3__15;
let TMP_26;
let TMP_25;
let L_FORM__14;
L_FORM__14=arguments[0];
TMP_25=lisp.CL_consp(L_FORM__14);
if(lisp.values1(TMP_25) !== lisp.S_nil){
{
L_G3__15=lisp.values1(L_FORM__14);
L_G4__16=lisp.values1(lisp.symbolValue(G_2));
L_G_STORE5__17=lisp.values1(L_POSITION__11);
lisp.callFunctionWithCallStack(G_19,L_G_STORE5__17,L_G3__15,L_G4__16);
}
TMP_27=lisp.callFunctionWithCallStack(G_28,L_FORM__14);
F_WALK__13(TMP_27);
TMP_29=lisp.callFunctionWithCallStack(G_30,L_FORM__14);
TMP_31=F_WALK__13(TMP_29);
TMP_26=TMP_31;
}else{
TMP_26=lisp.values1(lisp.S_nil);
}
return TMP_26;
});
F_WALK__13=lisp.values1(TMP_24);
TMP_32=F_WALK__13(L_FORM__10);
}
TMP_23=TMP_32;
}else{
TMP_23=lisp.values1(lisp.S_nil);
}
return TMP_23;
});
CL_COMPILER_ADD_SOURCE_INFOSTAR=lisp.values1(F_ADD_SOURCE_INFOSTAR_20);
// initialize symbols
G_2 = lisp.intern('*SOURCE-INFO*', 'COMPILER');
G_3 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_4 = lisp.intern('T', 'COMMON-LISP');
G_6 = lisp.intern('MAKE-SOURCE-INFO', 'COMPILER');
G_7 = lisp.intern('TEST', 'KEYWORD');
G_8 = lisp.intern('EQ', 'COMMON-LISP');
G_10 = lisp.intern('MAKE-HASH-TABLE', 'COMMON-LISP');
G_12 = lisp.intern('GET-FORM-POSITION', 'COMPILER');
G_16 = lisp.intern('GETHASH', 'COMMON-LISP');
G_18 = lisp.intern('ADD-SOURCE-INFO', 'COMPILER');
G_19 = lisp.intern('(SETF GETHASH)', 'COMMON-LISP');
G_21 = lisp.intern('ADD-SOURCE-INFO*', 'COMPILER');
G_28 = lisp.intern('CAR', 'COMMON-LISP');
G_30 = lisp.intern('CDR', 'COMMON-LISP');
G_33 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');lisp.CL_put(G_2,G_3,G_4);
CL_COMPILER_MAKE_SOURCE_INFO.lisp_name = 'MAKE-SOURCE-INFO'
lisp.setSymbolFunction(G_6, CL_COMPILER_MAKE_SOURCE_INFO);
CL_COMPILER_GET_FORM_POSITION.lisp_name = 'GET-FORM-POSITION'
lisp.setSymbolFunction(G_12, CL_COMPILER_GET_FORM_POSITION);
CL_COMPILER_ADD_SOURCE_INFO.lisp_name = 'ADD-SOURCE-INFO'
lisp.setSymbolFunction(G_18, CL_COMPILER_ADD_SOURCE_INFO);
CL_COMPILER_ADD_SOURCE_INFOSTAR.lisp_name = 'ADD-SOURCE-INFO*'
lisp.setSymbolFunction(G_21, CL_COMPILER_ADD_SOURCE_INFOSTAR);
}catch(TMP_1){G_33.func();
console.log(TMP_1.message);
}


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let G_7;
let G_8;
let G_11;
let G_13;
let G_15;
let G_16;
let G_17;
let G_18;
let G_19;
let G_21;
let G_23;
let G_25;
let G_28;
let G_29;
let G_30;
let G_32;
let G_34;
let G_35;
let G_36;
let G_38;
let G_40;
let G_43;
let G_44;
let G_59;
let G_60;
let G_66;
let G_69;
let G_74;
let TMP_50;
let TMP_9;
let TMP_3;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('*COMPILER-INTERFACES*', 'COMPILER');
G_4 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_5 = lisp.intern('T', 'COMMON-LISP');
G_6 = lisp.intern('DEF-INTERFACE', 'COMPILER');
G_7 = lisp.intern('DEF-IMPLEMENTATION', 'COMPILER');
G_8 = lisp.intern('MACRO', 'COMPILER');
G_11 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_13 = lisp.intern('<=', 'COMMON-LISP');
G_15 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_16 = lisp.intern('NAME', 'COMPILER');
G_17 = lisp.intern('ARGS', 'COMPILER');
G_18 = lisp.intern('&BODY', 'COMMON-LISP');
G_19 = lisp.intern('BODY', 'COMPILER');
G_21 = lisp.intern('ERROR', 'COMMON-LISP');
G_23 = lisp.intern('FIRST', 'COMMON-LISP');
G_25 = lisp.intern('REST', 'COMMON-LISP');
G_28 = lisp.intern('PROGN', 'COMMON-LISP');
G_29 = lisp.intern('PUSHNEW', 'COMMON-LISP');
G_30 = lisp.intern('QUOTE', 'COMMON-LISP');
G_32 = lisp.intern('LIST', 'COMMON-LISP');
G_34 = lisp.intern('LIST*', 'COMMON-LISP');
G_35 = lisp.intern('SETF', 'COMMON-LISP');
G_36 = lisp.intern('GET', 'COMMON-LISP');
G_38 = lisp.intern('IMPLEMENTATION', 'COMPILER');
G_40 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_43 = lisp.intern('DEFUN', 'COMMON-LISP');
G_44 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_59 = lisp.intern('ASSERT', 'COMMON-LISP');
G_60 = lisp.intern('MEMBER', 'COMMON-LISP');
G_66 = lisp.intern('FLET', 'COMMON-LISP');
G_69 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_74 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');TMP_3=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_3) !== lisp.S_nil){
}else{
lisp.CL_set(G_2,lisp.S_nil);
}
lisp.CL_put(G_2,G_4,G_5);
TMP_9=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_49;
let TMP_48;
let TMP_47;
let TMP_46;
let TMP_45;
let TMP_42;
let TMP_41;
let TMP_39;
let TMP_37;
let TMP_33;
let TMP_31;
let L_BODY__8;
let L_G5__7;
let TMP_27;
let L_ARGS__6;
let TMP_26;
let L_G4__5;
let TMP_24;
let L_NAME__4;
let TMP_22;
let L_G3__3;
let TMP_20;
let TMP_14;
let TMP_12;
let TMP_10;
let L_G2__2;
let L_G0__1;
L_G0__1=lisp.jsArrayToList(arguments, 0);
{
L_G2__2=lisp.values1(L_G0__1);
{
TMP_10=lisp.callFunctionWithCallStack(G_11,L_G2__2);
TMP_12=lisp.callFunctionWithCallStack(G_13,2,TMP_10);
if(lisp.values1(TMP_12) !== lisp.S_nil){
TMP_14=lisp.values1(lisp.S_nil);
}else{
TMP_20=lisp.callFunctionWithCallStack(G_21,G_15.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_16, lisp.makeCons(G_17, lisp.makeCons(G_18, lisp.makeCons(G_19, lisp.S_nil)))),L_G2__2);
TMP_14=lisp.values1(lisp.values1(TMP_20));
}
L_G3__3=lisp.values1(TMP_14);
TMP_22=lisp.callFunctionWithCallStack(G_23,L_G2__2);
L_NAME__4=lisp.values1(TMP_22);
TMP_24=lisp.callFunctionWithCallStack(G_25,L_G2__2);
L_G4__5=lisp.values1(TMP_24);
TMP_26=lisp.callFunctionWithCallStack(G_23,L_G4__5);
L_ARGS__6=lisp.values1(TMP_26);
TMP_27=lisp.callFunctionWithCallStack(G_25,L_G4__5);
L_G5__7=lisp.values1(TMP_27);
L_BODY__8=lisp.values1(L_G5__7);
TMP_31=lisp.callFunctionWithCallStack(G_32,G_30,L_NAME__4);
TMP_33=lisp.callFunctionWithCallStack(G_34,G_29,TMP_31,lisp.makeCons(G_2, lisp.S_nil));
TMP_37=lisp.callFunctionWithCallStack(G_32,G_30,L_NAME__4);
TMP_39=lisp.callFunctionWithCallStack(G_34,G_36,TMP_37,lisp.makeCons(lisp.makeCons(G_30, lisp.makeCons(G_38, lisp.S_nil)), lisp.S_nil));
TMP_41=lisp.callFunctionWithCallStack(G_34,G_40,L_ARGS__6,L_BODY__8);
TMP_42=lisp.callFunctionWithCallStack(G_32,G_35,TMP_39,TMP_41);
TMP_45=lisp.callFunctionWithCallStack(G_32,G_30,L_NAME__4);
TMP_46=lisp.callFunctionWithCallStack(G_34,G_36,TMP_45,lisp.makeCons(lisp.makeCons(G_30, lisp.makeCons(G_38, lisp.S_nil)), lisp.S_nil));
TMP_47=lisp.callFunctionWithCallStack(G_34,G_44,TMP_46,L_ARGS__6);
TMP_48=lisp.callFunctionWithCallStack(G_32,G_43,L_NAME__4,L_ARGS__6,TMP_47);
TMP_49=lisp.callFunctionWithCallStack(G_32,G_28,TMP_33,TMP_42,TMP_48);
}
}
return TMP_49;
});
lisp.CL_put(G_6,G_8,TMP_9);
TMP_50=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_73;
let TMP_72;
let TMP_71;
let TMP_70;
let TMP_68;
let TMP_67;
let TMP_65;
let TMP_64;
let TMP_63;
let TMP_62;
let TMP_61;
let L_BODY__16;
let L_G9__15;
let TMP_58;
let L_ARGS__14;
let TMP_57;
let L_G8__13;
let TMP_56;
let L_NAME__12;
let TMP_55;
let L_G7__11;
let TMP_54;
let TMP_53;
let TMP_52;
let TMP_51;
let L_G6__10;
let L_G1__9;
L_G1__9=lisp.jsArrayToList(arguments, 0);
{
L_G6__10=lisp.values1(L_G1__9);
{
TMP_51=lisp.callFunctionWithCallStack(G_11,L_G6__10);
TMP_52=lisp.callFunctionWithCallStack(G_13,2,TMP_51);
if(lisp.values1(TMP_52) !== lisp.S_nil){
TMP_53=lisp.values1(lisp.S_nil);
}else{
TMP_54=lisp.callFunctionWithCallStack(G_21,G_15.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_16, lisp.makeCons(G_17, lisp.makeCons(G_18, lisp.makeCons(G_19, lisp.S_nil)))),L_G6__10);
TMP_53=lisp.values1(lisp.values1(TMP_54));
}
L_G7__11=lisp.values1(TMP_53);
TMP_55=lisp.callFunctionWithCallStack(G_23,L_G6__10);
L_NAME__12=lisp.values1(TMP_55);
TMP_56=lisp.callFunctionWithCallStack(G_25,L_G6__10);
L_G8__13=lisp.values1(TMP_56);
TMP_57=lisp.callFunctionWithCallStack(G_23,L_G8__13);
L_ARGS__14=lisp.values1(TMP_57);
TMP_58=lisp.callFunctionWithCallStack(G_25,L_G8__13);
L_G9__15=lisp.values1(TMP_58);
L_BODY__16=lisp.values1(L_G9__15);
TMP_61=lisp.callFunctionWithCallStack(G_32,G_30,L_NAME__12);
TMP_62=lisp.callFunctionWithCallStack(G_34,G_60,TMP_61,lisp.makeCons(G_2, lisp.S_nil));
TMP_63=lisp.callFunctionWithCallStack(G_32,G_59,TMP_62);
TMP_64=lisp.callFunctionWithCallStack(G_32,G_30,L_NAME__12);
TMP_65=lisp.callFunctionWithCallStack(G_34,G_36,TMP_64,lisp.makeCons(lisp.makeCons(G_30, lisp.makeCons(G_38, lisp.S_nil)), lisp.S_nil));
TMP_67=lisp.callFunctionWithCallStack(G_34,L_NAME__12,L_ARGS__14,L_BODY__16);
TMP_68=lisp.callFunctionWithCallStack(G_32,TMP_67);
TMP_70=lisp.callFunctionWithCallStack(G_32,G_69,L_NAME__12);
TMP_71=lisp.callFunctionWithCallStack(G_32,G_66,TMP_68,TMP_70);
TMP_72=lisp.callFunctionWithCallStack(G_32,G_35,TMP_65,TMP_71);
TMP_73=lisp.callFunctionWithCallStack(G_32,G_28,TMP_63,TMP_72);
}
}
return TMP_73;
});
lisp.CL_put(G_7,G_8,TMP_50);
}catch(TMP_1){G_74.func();
console.log(TMP_1.message);
}


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_7;
let G_8;
let G_10;
let G_12;
let G_13;
let G_15;
let G_17;
let G_19;
let G_21;
let G_22;
let G_24;
let G_29;
let G_31;
let G_32;
let G_34;
let G_38;
let G_42;
let G_44;
let G_45;
let G_48;
let G_50;
let G_53;
let G_56;
let G_59;
let G_74;
let G_77;
let G_92;
let G_95;
let G_110;
let G_113;
let G_128;
let G_131;
let G_146;
let G_147;
let G_155;
let G_157;
let G_160;
let G_162;
let G_165;
let G_167;
let G_170;
let G_171;
let G_175;
let G_186;
let G_200;
let G_215;
let G_217;
let G_219;
let G_224;
let G_226;
let G_229;
let G_232;
let G_235;
let G_238;
let G_239;
let G_242;
let G_243;
let G_245;
let G_247;
let G_249;
let G_251;
let G_253;
let G_255;
let G_260;
let G_263;
let G_278;
let G_281;
let G_296;
let G_299;
let G_314;
let G_317;
let G_332;
let G_335;
let G_350;
let G_353;
let G_368;
let G_371;
let G_395;
let G_408;
let G_417;
let G_419;
let G_422;
let G_423;
let G_426;
let G_427;
let G_429;
let G_431;
let G_433;
let G_435;
let G_437;
let G_439;
let G_441;
let G_446;
let G_449;
let G_464;
let G_467;
let G_482;
let G_485;
let G_500;
let G_503;
let G_518;
let G_521;
let G_536;
let G_539;
let G_554;
let G_557;
let G_572;
let G_575;
let G_600;
let G_603;
let G_604;
let G_607;
let G_608;
let G_614;
let G_617;
let G_632;
let G_635;
let G_653;
let G_654;
let G_656;
let G_658;
let G_661;
let G_668;
let G_673;
let G_677;
let G_682;
let G_684;
let G_689;
let G_692;
let G_696;
let G_698;
let G_701;
let G_703;
let G_709;
let G_715;
let G_734;
let G_752;
let G_754;
let G_756;
let G_758;
let G_759;
let G_760;
let G_767;
let G_773;
let G_782;
let G_790;
let G_800;
let G_807;
let G_810;
let G_816;
let G_823;
let G_834;
let G_843;
let G_853;
let G_861;
let G_870;
let G_878;
let G_885;
let G_893;
let G_900;
let G_907;
let G_910;
let G_913;
let G_916;
let G_919;
let G_922;
let G_925;
let G_928;
let G_931;
let G_934;
let G_937;
let G_944;
let G_947;
let G_949;
let G_951;
let G_957;
let CL_COMPILER_REDUCE_HIR;
let CL_COMPILER_EQUAL_BINDING;
let CL_COMPILER_EQUAL_HIR;
let CL_COMPILER_EQUAL_WITH_HIR;
let CL_COMPILER_MAYBE_EQUAL_ERROR;
let CL_COMPILER_TAGBODY_VALUE_ID;
let CL_COMPILER_TAGBODY_VALUE_INDEX;
let CL_COMPILER_MAKE_TAGBODY_VALUE;
let CL_COMPILER_TAGBODY_VALUE_P;
let CL_COMPILER_COPY_TAGBODY_VALUE;
let CL_COMPILER_BINDING_VAR_TYPE;
let CL_COMPILER_BINDING_ESCAPE_COUNT;
let CL_COMPILER_BINDING_SET_COUNT;
let CL_COMPILER_BINDING_USED_COUNT;
let CL_COMPILER_BINDING_INIT_VALUE;
let CL_COMPILER_BINDING_ID;
let CL_COMPILER_BINDING_KIND;
let CL_COMPILER_BINDING_NAME;
let CL_COMPILER_MAKE_BINDING;
let CL_COMPILER_BINDING_P;
let CL_COMPILER_COPY_BINDING;
let CL_COMPILER_COLLECT_VARIABLES;
let CL_COMPILER_PARSED_LAMBDA_LIST_ALLOW_OTHER_KEYS;
let CL_COMPILER_PARSED_LAMBDA_LIST_MAX;
let CL_COMPILER_PARSED_LAMBDA_LIST_MIN;
let CL_COMPILER_PARSED_LAMBDA_LIST_KEYS;
let CL_COMPILER_PARSED_LAMBDA_LIST_OPTIONALS;
let CL_COMPILER_PARSED_LAMBDA_LIST_REST_VAR;
let CL_COMPILER_PARSED_LAMBDA_LIST_VARS;
let CL_COMPILER_MAKE_PARSED_LAMBDA_LIST;
let CL_COMPILER_PARSED_LAMBDA_LIST_P;
let CL_COMPILER_COPY_PARSED_LAMBDA_LIST;
let CL_COMPILER_LAMBDA_HIR_BODY;
let CL_COMPILER_LAMBDA_HIR_PARSED_LAMBDA_LIST;
let CL_COMPILER_LAMBDA_HIR_NAME;
let CL_COMPILER_REMAKE_HIR;
let CL_COMPILER_MAKE_HIR;
let CL_COMPILER_HIR_ARG3;
let CL_COMPILER_HIR_ARG2;
let CL_COMPILER_HIR_ARG1;
let CL_COMPILER_HIR_ARGS;
let CL_COMPILER_HIR_POSITION;
let CL_COMPILER_HIR_RESULT_TYPE;
let CL_COMPILER_HIR_MULTIPLE_VALUES_P;
let CL_COMPILER_HIR_RETURN_VALUE_P;
let CL_COMPILER_HIR_OP;
let CL_COMPILER_PERCENTMAKE_HIR;
let CL_COMPILER_HIR_P;
let CL_COMPILER_COPY_HIR;
let TMP_945;
let L_G239__463;
let L_G238__462;
let TMP_649;
let TMP_648;
let TMP_639;
let TMP_636;
let TMP_630;
let TMP_621;
let TMP_618;
let L_G219__422;
let L_G218__421;
let TMP_589;
let TMP_588;
let TMP_579;
let TMP_576;
let TMP_570;
let TMP_561;
let TMP_558;
let TMP_552;
let TMP_543;
let TMP_540;
let TMP_534;
let TMP_525;
let TMP_522;
let TMP_516;
let TMP_507;
let TMP_504;
let TMP_498;
let TMP_489;
let TMP_486;
let TMP_480;
let TMP_471;
let TMP_468;
let TMP_462;
let TMP_453;
let TMP_450;
let L_G151__289;
let L_G150__288;
let TMP_385;
let TMP_384;
let TMP_375;
let TMP_372;
let TMP_366;
let TMP_357;
let TMP_354;
let TMP_348;
let TMP_339;
let TMP_336;
let TMP_330;
let TMP_321;
let TMP_318;
let TMP_312;
let TMP_303;
let TMP_300;
let TMP_294;
let TMP_285;
let TMP_282;
let TMP_276;
let TMP_267;
let TMP_264;
let TMP_213;
let TMP_204;
let TMP_201;
let TMP_199;
let TMP_190;
let TMP_187;
let TMP_185;
let TMP_176;
let TMP_172;
let L_G51__101;
let L_G50__100;
let TMP_145;
let TMP_144;
let TMP_135;
let TMP_132;
let TMP_126;
let TMP_117;
let TMP_114;
let TMP_108;
let TMP_99;
let TMP_96;
let TMP_90;
let TMP_81;
let TMP_78;
let TMP_72;
let TMP_63;
let TMP_60;
let TMP_54;
let TMP_39;
let TMP_35;
// toplevel defun
let F_COPY_HIR_2;
F_COPY_HIR_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_4;
let L_X__1;
L_X__1=arguments[0];
TMP_4=lisp.callFunctionWithCallStack(G_5,L_X__1);
return TMP_4;
});
CL_COMPILER_COPY_HIR=lisp.values1(F_COPY_HIR_2);
let F_HIR_P_6;
F_HIR_P_6=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_7, arguments.length);
}
let TMP_9;
let L_X__3;
L_X__3=arguments[0];
TMP_9=lisp.callFunctionWithCallStack(G_10,L_X__3,G_8);
return TMP_9;
});
CL_COMPILER_HIR_P=lisp.values1(F_HIR_P_6);
let F_PERCENTMAKE_HIR_11;
F_PERCENTMAKE_HIR_11=(function(){
if(arguments.length < 0 || 12 < arguments.length) {
lisp.argumentsError(G_12, arguments.length);
}
let TMP_27;
let L_ARGS__10;
let L_POSITION__9;
let L_RESULT_TYPE__8;
let L_MULTIPLE_VALUES_P__7;
let L_RETURN_VALUE_P__6;
let L_OP__5;
let supplied_OP__5;
for (let TMP_14 = 0; TMP_14 < arguments.length; TMP_14 += 2) {
if(arguments[TMP_14] === G_13){
supplied_OP__5=arguments[TMP_14+1];
break;
}
}
L_OP__5=supplied_OP__5 !== undefined ? supplied_OP__5 : (lisp.values1(lisp.S_nil));
let supplied_RETURN_VALUE_P__6;
for (let TMP_16 = 0; TMP_16 < arguments.length; TMP_16 += 2) {
if(arguments[TMP_16] === G_15){
supplied_RETURN_VALUE_P__6=arguments[TMP_16+1];
break;
}
}
L_RETURN_VALUE_P__6=supplied_RETURN_VALUE_P__6 !== undefined ? supplied_RETURN_VALUE_P__6 : (lisp.values1(lisp.S_nil));
let supplied_MULTIPLE_VALUES_P__7;
for (let TMP_18 = 0; TMP_18 < arguments.length; TMP_18 += 2) {
if(arguments[TMP_18] === G_17){
supplied_MULTIPLE_VALUES_P__7=arguments[TMP_18+1];
break;
}
}
L_MULTIPLE_VALUES_P__7=supplied_MULTIPLE_VALUES_P__7 !== undefined ? supplied_MULTIPLE_VALUES_P__7 : (lisp.values1(lisp.S_nil));
let supplied_RESULT_TYPE__8;
for (let TMP_20 = 0; TMP_20 < arguments.length; TMP_20 += 2) {
if(arguments[TMP_20] === G_19){
supplied_RESULT_TYPE__8=arguments[TMP_20+1];
break;
}
}
L_RESULT_TYPE__8=supplied_RESULT_TYPE__8 !== undefined ? supplied_RESULT_TYPE__8 : (lisp.values1(G_21));
let supplied_POSITION__9;
for (let TMP_23 = 0; TMP_23 < arguments.length; TMP_23 += 2) {
if(arguments[TMP_23] === G_22){
supplied_POSITION__9=arguments[TMP_23+1];
break;
}
}
L_POSITION__9=supplied_POSITION__9 !== undefined ? supplied_POSITION__9 : (lisp.values1(lisp.S_nil));
let supplied_ARGS__10;
for (let TMP_25 = 0; TMP_25 < arguments.length; TMP_25 += 2) {
if(arguments[TMP_25] === G_24){
supplied_ARGS__10=arguments[TMP_25+1];
break;
}
}
L_ARGS__10=supplied_ARGS__10 !== undefined ? supplied_ARGS__10 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_26 = 0; TMP_26 < arguments.length; TMP_26 += 2) {
if(arguments[TMP_26]!==G_24 && arguments[TMP_26]!==G_22 && arguments[TMP_26]!==G_19 && arguments[TMP_26]!==G_17 && arguments[TMP_26]!==G_15 && arguments[TMP_26]!==G_13) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_26].name); }
}
TMP_27=lisp.CL_makeStructure(G_8,L_OP__5,L_RETURN_VALUE_P__6,L_MULTIPLE_VALUES_P__7,L_RESULT_TYPE__8,L_POSITION__9,L_ARGS__10);
return TMP_27;
});
CL_COMPILER_PERCENTMAKE_HIR=lisp.values1(F_PERCENTMAKE_HIR_11);
let F_HIR_OP_28;
F_HIR_OP_28=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_29, arguments.length);
}
let TMP_33;
let TMP_30;
let L_STRUCTURE__12;
L_STRUCTURE__12=arguments[0];
TMP_30=lisp.CL_structurep(L_STRUCTURE__12);
if(lisp.values1(TMP_30) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__12,G_31);
}
TMP_33=lisp.CL_structureRef(L_STRUCTURE__12,0);
return TMP_33;
});
CL_COMPILER_HIR_OP=lisp.values1(F_HIR_OP_28);
let F_HIR_RETURN_VALUE_P_55;
F_HIR_RETURN_VALUE_P_55=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_56, arguments.length);
}
let TMP_58;
let TMP_57;
let L_STRUCTURE__26;
L_STRUCTURE__26=arguments[0];
TMP_57=lisp.CL_structurep(L_STRUCTURE__26);
if(lisp.values1(TMP_57) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__26,G_31);
}
TMP_58=lisp.CL_structureRef(L_STRUCTURE__26,1);
return TMP_58;
});
CL_COMPILER_HIR_RETURN_VALUE_P=lisp.values1(F_HIR_RETURN_VALUE_P_55);
let F_HIR_MULTIPLE_VALUES_P_73;
F_HIR_MULTIPLE_VALUES_P_73=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_74, arguments.length);
}
let TMP_76;
let TMP_75;
let L_STRUCTURE__40;
L_STRUCTURE__40=arguments[0];
TMP_75=lisp.CL_structurep(L_STRUCTURE__40);
if(lisp.values1(TMP_75) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__40,G_31);
}
TMP_76=lisp.CL_structureRef(L_STRUCTURE__40,2);
return TMP_76;
});
CL_COMPILER_HIR_MULTIPLE_VALUES_P=lisp.values1(F_HIR_MULTIPLE_VALUES_P_73);
let F_HIR_RESULT_TYPE_91;
F_HIR_RESULT_TYPE_91=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_92, arguments.length);
}
let TMP_94;
let TMP_93;
let L_STRUCTURE__54;
L_STRUCTURE__54=arguments[0];
TMP_93=lisp.CL_structurep(L_STRUCTURE__54);
if(lisp.values1(TMP_93) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__54,G_31);
}
TMP_94=lisp.CL_structureRef(L_STRUCTURE__54,3);
return TMP_94;
});
CL_COMPILER_HIR_RESULT_TYPE=lisp.values1(F_HIR_RESULT_TYPE_91);
let F_HIR_POSITION_109;
F_HIR_POSITION_109=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_110, arguments.length);
}
let TMP_112;
let TMP_111;
let L_STRUCTURE__68;
L_STRUCTURE__68=arguments[0];
TMP_111=lisp.CL_structurep(L_STRUCTURE__68);
if(lisp.values1(TMP_111) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__68,G_31);
}
TMP_112=lisp.CL_structureRef(L_STRUCTURE__68,4);
return TMP_112;
});
CL_COMPILER_HIR_POSITION=lisp.values1(F_HIR_POSITION_109);
let F_HIR_ARGS_127;
F_HIR_ARGS_127=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_128, arguments.length);
}
let TMP_130;
let TMP_129;
let L_STRUCTURE__82;
L_STRUCTURE__82=arguments[0];
TMP_129=lisp.CL_structurep(L_STRUCTURE__82);
if(lisp.values1(TMP_129) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__82,G_31);
}
TMP_130=lisp.CL_structureRef(L_STRUCTURE__82,5);
return TMP_130;
});
CL_COMPILER_HIR_ARGS=lisp.values1(F_HIR_ARGS_127);
let F_HIR_ARG1_156;
F_HIR_ARG1_156=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_157, arguments.length);
}
let TMP_159;
let TMP_158;
let L_HIR__102;
L_HIR__102=arguments[0];
TMP_158=G_128.func(L_HIR__102);
TMP_159=lisp.callFunctionWithCallStack(G_160,TMP_158);
return TMP_159;
});
CL_COMPILER_HIR_ARG1=lisp.values1(F_HIR_ARG1_156);
let F_HIR_ARG2_161;
F_HIR_ARG2_161=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_162, arguments.length);
}
let TMP_164;
let TMP_163;
let L_HIR__104;
L_HIR__104=arguments[0];
TMP_163=G_128.func(L_HIR__104);
TMP_164=lisp.callFunctionWithCallStack(G_165,TMP_163);
return TMP_164;
});
CL_COMPILER_HIR_ARG2=lisp.values1(F_HIR_ARG2_161);
let F_HIR_ARG3_166;
F_HIR_ARG3_166=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_167, arguments.length);
}
let TMP_169;
let TMP_168;
let L_HIR__106;
L_HIR__106=arguments[0];
TMP_168=G_128.func(L_HIR__106);
TMP_169=lisp.callFunctionWithCallStack(G_170,TMP_168);
return TMP_169;
});
CL_COMPILER_HIR_ARG3=lisp.values1(F_HIR_ARG3_166);
let F_MAKE_HIR_214;
F_MAKE_HIR_214=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_215, arguments.length);
}
let TMP_216;
let L_ARGS__162;
let L_MULTIPLE_VALUES_P__161;
let L_RETURN_VALUE_P__160;
let L_OP__159;
L_OP__159=arguments[0];
L_RETURN_VALUE_P__160=arguments[1];
L_MULTIPLE_VALUES_P__161=arguments[2];
L_ARGS__162=lisp.jsArrayToList(arguments, 3);
TMP_216=G_12.func(G_13,L_OP__159,G_15,L_RETURN_VALUE_P__160,G_17,L_MULTIPLE_VALUES_P__161,G_24,L_ARGS__162);
return TMP_216;
});
CL_COMPILER_MAKE_HIR=lisp.values1(F_MAKE_HIR_214);
let F_REMAKE_HIR_218;
F_REMAKE_HIR_218=(function(){
if(arguments.length < 2) {
lisp.argumentsError(G_219, arguments.length);
}
let TMP_223;
let TMP_222;
let TMP_221;
let TMP_220;
let L_ARGS__166;
let L_HIR__165;
let L_OP__164;
L_OP__164=arguments[0];
L_HIR__165=arguments[1];
L_ARGS__166=lisp.jsArrayToList(arguments, 2);
TMP_220=lisp.CL_symbolFunction(G_215);
TMP_221=G_56.func(L_HIR__165);
TMP_222=G_74.func(L_HIR__165);
TMP_223=lisp.callFunctionWithCallStack(G_224,TMP_220,L_OP__164,TMP_221,TMP_222,L_ARGS__166);
return TMP_223;
});
CL_COMPILER_REMAKE_HIR=lisp.values1(F_REMAKE_HIR_218);
let F_LAMBDA_HIR_NAME_225;
F_LAMBDA_HIR_NAME_225=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_226, arguments.length);
}
let TMP_227;
let L_HIR__168;
L_HIR__168=arguments[0];
TMP_227=G_157.func(L_HIR__168);
return TMP_227;
});
CL_COMPILER_LAMBDA_HIR_NAME=lisp.values1(F_LAMBDA_HIR_NAME_225);
let F_LAMBDA_HIR_PARSED_LAMBDA_LIST_228;
F_LAMBDA_HIR_PARSED_LAMBDA_LIST_228=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_229, arguments.length);
}
let TMP_230;
let L_HIR__170;
L_HIR__170=arguments[0];
TMP_230=G_162.func(L_HIR__170);
return TMP_230;
});
CL_COMPILER_LAMBDA_HIR_PARSED_LAMBDA_LIST=lisp.values1(F_LAMBDA_HIR_PARSED_LAMBDA_LIST_228);
let F_LAMBDA_HIR_BODY_231;
F_LAMBDA_HIR_BODY_231=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_232, arguments.length);
}
let TMP_233;
let L_HIR__172;
L_HIR__172=arguments[0];
TMP_233=G_167.func(L_HIR__172);
return TMP_233;
});
CL_COMPILER_LAMBDA_HIR_BODY=lisp.values1(F_LAMBDA_HIR_BODY_231);
let F_COPY_PARSED_LAMBDA_LIST_234;
F_COPY_PARSED_LAMBDA_LIST_234=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_235, arguments.length);
}
let TMP_236;
let L_X__174;
L_X__174=arguments[0];
TMP_236=lisp.callFunctionWithCallStack(G_5,L_X__174);
return TMP_236;
});
CL_COMPILER_COPY_PARSED_LAMBDA_LIST=lisp.values1(F_COPY_PARSED_LAMBDA_LIST_234);
let F_PARSED_LAMBDA_LIST_P_237;
F_PARSED_LAMBDA_LIST_P_237=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_238, arguments.length);
}
let TMP_240;
let L_X__176;
L_X__176=arguments[0];
TMP_240=lisp.callFunctionWithCallStack(G_10,L_X__176,G_239);
return TMP_240;
});
CL_COMPILER_PARSED_LAMBDA_LIST_P=lisp.values1(F_PARSED_LAMBDA_LIST_P_237);
let F_MAKE_PARSED_LAMBDA_LIST_241;
F_MAKE_PARSED_LAMBDA_LIST_241=(function(){
if(arguments.length < 0 || 14 < arguments.length) {
lisp.argumentsError(G_242, arguments.length);
}
let TMP_258;
let L_ALLOW_OTHER_KEYS__184;
let L_MAX__183;
let L_MIN__182;
let L_KEYS__181;
let L_OPTIONALS__180;
let L_REST_VAR__179;
let L_VARS__178;
let supplied_VARS__178;
for (let TMP_244 = 0; TMP_244 < arguments.length; TMP_244 += 2) {
if(arguments[TMP_244] === G_243){
supplied_VARS__178=arguments[TMP_244+1];
break;
}
}
L_VARS__178=supplied_VARS__178 !== undefined ? supplied_VARS__178 : (lisp.values1(lisp.S_nil));
let supplied_REST_VAR__179;
for (let TMP_246 = 0; TMP_246 < arguments.length; TMP_246 += 2) {
if(arguments[TMP_246] === G_245){
supplied_REST_VAR__179=arguments[TMP_246+1];
break;
}
}
L_REST_VAR__179=supplied_REST_VAR__179 !== undefined ? supplied_REST_VAR__179 : (lisp.values1(lisp.S_nil));
let supplied_OPTIONALS__180;
for (let TMP_248 = 0; TMP_248 < arguments.length; TMP_248 += 2) {
if(arguments[TMP_248] === G_247){
supplied_OPTIONALS__180=arguments[TMP_248+1];
break;
}
}
L_OPTIONALS__180=supplied_OPTIONALS__180 !== undefined ? supplied_OPTIONALS__180 : (lisp.values1(lisp.S_nil));
let supplied_KEYS__181;
for (let TMP_250 = 0; TMP_250 < arguments.length; TMP_250 += 2) {
if(arguments[TMP_250] === G_249){
supplied_KEYS__181=arguments[TMP_250+1];
break;
}
}
L_KEYS__181=supplied_KEYS__181 !== undefined ? supplied_KEYS__181 : (lisp.values1(lisp.S_nil));
let supplied_MIN__182;
for (let TMP_252 = 0; TMP_252 < arguments.length; TMP_252 += 2) {
if(arguments[TMP_252] === G_251){
supplied_MIN__182=arguments[TMP_252+1];
break;
}
}
L_MIN__182=supplied_MIN__182 !== undefined ? supplied_MIN__182 : (lisp.values1(lisp.S_nil));
let supplied_MAX__183;
for (let TMP_254 = 0; TMP_254 < arguments.length; TMP_254 += 2) {
if(arguments[TMP_254] === G_253){
supplied_MAX__183=arguments[TMP_254+1];
break;
}
}
L_MAX__183=supplied_MAX__183 !== undefined ? supplied_MAX__183 : (lisp.values1(lisp.S_nil));
let supplied_ALLOW_OTHER_KEYS__184;
for (let TMP_256 = 0; TMP_256 < arguments.length; TMP_256 += 2) {
if(arguments[TMP_256] === G_255){
supplied_ALLOW_OTHER_KEYS__184=arguments[TMP_256+1];
break;
}
}
L_ALLOW_OTHER_KEYS__184=supplied_ALLOW_OTHER_KEYS__184 !== undefined ? supplied_ALLOW_OTHER_KEYS__184 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_257 = 0; TMP_257 < arguments.length; TMP_257 += 2) {
if(arguments[TMP_257]!==G_255 && arguments[TMP_257]!==G_253 && arguments[TMP_257]!==G_251 && arguments[TMP_257]!==G_249 && arguments[TMP_257]!==G_247 && arguments[TMP_257]!==G_245 && arguments[TMP_257]!==G_243) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_257].name); }
}
TMP_258=lisp.CL_makeStructure(G_239,L_VARS__178,L_REST_VAR__179,L_OPTIONALS__180,L_KEYS__181,L_MIN__182,L_MAX__183,L_ALLOW_OTHER_KEYS__184);
return TMP_258;
});
CL_COMPILER_MAKE_PARSED_LAMBDA_LIST=lisp.values1(F_MAKE_PARSED_LAMBDA_LIST_241);
let F_PARSED_LAMBDA_LIST_VARS_259;
F_PARSED_LAMBDA_LIST_VARS_259=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_260, arguments.length);
}
let TMP_262;
let TMP_261;
let L_STRUCTURE__186;
L_STRUCTURE__186=arguments[0];
TMP_261=lisp.CL_structurep(L_STRUCTURE__186);
if(lisp.values1(TMP_261) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__186,G_31);
}
TMP_262=lisp.CL_structureRef(L_STRUCTURE__186,0);
return TMP_262;
});
CL_COMPILER_PARSED_LAMBDA_LIST_VARS=lisp.values1(F_PARSED_LAMBDA_LIST_VARS_259);
let F_PARSED_LAMBDA_LIST_REST_VAR_277;
F_PARSED_LAMBDA_LIST_REST_VAR_277=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_278, arguments.length);
}
let TMP_280;
let TMP_279;
let L_STRUCTURE__200;
L_STRUCTURE__200=arguments[0];
TMP_279=lisp.CL_structurep(L_STRUCTURE__200);
if(lisp.values1(TMP_279) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__200,G_31);
}
TMP_280=lisp.CL_structureRef(L_STRUCTURE__200,1);
return TMP_280;
});
CL_COMPILER_PARSED_LAMBDA_LIST_REST_VAR=lisp.values1(F_PARSED_LAMBDA_LIST_REST_VAR_277);
let F_PARSED_LAMBDA_LIST_OPTIONALS_295;
F_PARSED_LAMBDA_LIST_OPTIONALS_295=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_296, arguments.length);
}
let TMP_298;
let TMP_297;
let L_STRUCTURE__214;
L_STRUCTURE__214=arguments[0];
TMP_297=lisp.CL_structurep(L_STRUCTURE__214);
if(lisp.values1(TMP_297) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__214,G_31);
}
TMP_298=lisp.CL_structureRef(L_STRUCTURE__214,2);
return TMP_298;
});
CL_COMPILER_PARSED_LAMBDA_LIST_OPTIONALS=lisp.values1(F_PARSED_LAMBDA_LIST_OPTIONALS_295);
let F_PARSED_LAMBDA_LIST_KEYS_313;
F_PARSED_LAMBDA_LIST_KEYS_313=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_314, arguments.length);
}
let TMP_316;
let TMP_315;
let L_STRUCTURE__228;
L_STRUCTURE__228=arguments[0];
TMP_315=lisp.CL_structurep(L_STRUCTURE__228);
if(lisp.values1(TMP_315) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__228,G_31);
}
TMP_316=lisp.CL_structureRef(L_STRUCTURE__228,3);
return TMP_316;
});
CL_COMPILER_PARSED_LAMBDA_LIST_KEYS=lisp.values1(F_PARSED_LAMBDA_LIST_KEYS_313);
let F_PARSED_LAMBDA_LIST_MIN_331;
F_PARSED_LAMBDA_LIST_MIN_331=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_332, arguments.length);
}
let TMP_334;
let TMP_333;
let L_STRUCTURE__242;
L_STRUCTURE__242=arguments[0];
TMP_333=lisp.CL_structurep(L_STRUCTURE__242);
if(lisp.values1(TMP_333) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__242,G_31);
}
TMP_334=lisp.CL_structureRef(L_STRUCTURE__242,4);
return TMP_334;
});
CL_COMPILER_PARSED_LAMBDA_LIST_MIN=lisp.values1(F_PARSED_LAMBDA_LIST_MIN_331);
let F_PARSED_LAMBDA_LIST_MAX_349;
F_PARSED_LAMBDA_LIST_MAX_349=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_350, arguments.length);
}
let TMP_352;
let TMP_351;
let L_STRUCTURE__256;
L_STRUCTURE__256=arguments[0];
TMP_351=lisp.CL_structurep(L_STRUCTURE__256);
if(lisp.values1(TMP_351) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__256,G_31);
}
TMP_352=lisp.CL_structureRef(L_STRUCTURE__256,5);
return TMP_352;
});
CL_COMPILER_PARSED_LAMBDA_LIST_MAX=lisp.values1(F_PARSED_LAMBDA_LIST_MAX_349);
let F_PARSED_LAMBDA_LIST_ALLOW_OTHER_KEYS_367;
F_PARSED_LAMBDA_LIST_ALLOW_OTHER_KEYS_367=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_368, arguments.length);
}
let TMP_370;
let TMP_369;
let L_STRUCTURE__270;
L_STRUCTURE__270=arguments[0];
TMP_369=lisp.CL_structurep(L_STRUCTURE__270);
if(lisp.values1(TMP_369) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__270,G_31);
}
TMP_370=lisp.CL_structureRef(L_STRUCTURE__270,6);
return TMP_370;
});
CL_COMPILER_PARSED_LAMBDA_LIST_ALLOW_OTHER_KEYS=lisp.values1(F_PARSED_LAMBDA_LIST_ALLOW_OTHER_KEYS_367);
let F_COLLECT_VARIABLES_394;
F_COLLECT_VARIABLES_394=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_395, arguments.length);
}
let TMP_416;
let TMP_415;
let TMP_414;
let TMP_413;
let TMP_412;
let TMP_411;
let TMP_410;
let TMP_409;
let TMP_407;
let TMP_406;
let TMP_405;
let TMP_404;
let TMP_403;
let TMP_402;
let TMP_401;
let TMP_400;
let TMP_399;
let TMP_398;
let TMP_397;
let TMP_396;
let L_PARSED_LAMBDA_LIST__290;
L_PARSED_LAMBDA_LIST__290=arguments[0];
TMP_396=G_260.func(L_PARSED_LAMBDA_LIST__290);
TMP_397=G_278.func(L_PARSED_LAMBDA_LIST__290);
if(lisp.values1(TMP_397) !== lisp.S_nil){
TMP_399=G_278.func(L_PARSED_LAMBDA_LIST__290);
TMP_400=lisp.callFunctionWithCallStack(G_48,TMP_399);
TMP_398=lisp.values1(TMP_400);
}else{
TMP_398=lisp.values1(lisp.S_nil);
}
TMP_401=lisp.CL_symbolFunction(G_160);
TMP_402=G_296.func(L_PARSED_LAMBDA_LIST__290);
TMP_403=lisp.callFunctionWithCallStack(G_44,TMP_401,TMP_402);
TMP_404=lisp.CL_symbolFunction(G_170);
TMP_405=G_296.func(L_PARSED_LAMBDA_LIST__290);
TMP_406=lisp.callFunctionWithCallStack(G_44,TMP_404,TMP_405);
TMP_407=lisp.callFunctionWithCallStack(G_408,lisp.S_nil,TMP_406);
TMP_409=lisp.CL_symbolFunction(G_160);
TMP_410=G_314.func(L_PARSED_LAMBDA_LIST__290);
TMP_411=lisp.callFunctionWithCallStack(G_44,TMP_409,TMP_410);
TMP_412=lisp.CL_symbolFunction(G_170);
TMP_413=G_314.func(L_PARSED_LAMBDA_LIST__290);
TMP_414=lisp.callFunctionWithCallStack(G_44,TMP_412,TMP_413);
TMP_415=lisp.callFunctionWithCallStack(G_408,lisp.S_nil,TMP_414);
TMP_416=lisp.callFunctionWithCallStack(G_417,TMP_396,TMP_398,TMP_403,TMP_407,TMP_411,TMP_415);
return TMP_416;
});
CL_COMPILER_COLLECT_VARIABLES=lisp.values1(F_COLLECT_VARIABLES_394);
let F_COPY_BINDING_418;
F_COPY_BINDING_418=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_419, arguments.length);
}
let TMP_420;
let L_X__292;
L_X__292=arguments[0];
TMP_420=lisp.callFunctionWithCallStack(G_5,L_X__292);
return TMP_420;
});
CL_COMPILER_COPY_BINDING=lisp.values1(F_COPY_BINDING_418);
let F_BINDING_P_421;
F_BINDING_P_421=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_422, arguments.length);
}
let TMP_424;
let L_X__294;
L_X__294=arguments[0];
TMP_424=lisp.callFunctionWithCallStack(G_10,L_X__294,G_423);
return TMP_424;
});
CL_COMPILER_BINDING_P=lisp.values1(F_BINDING_P_421);
let F_MAKE_BINDING_425;
F_MAKE_BINDING_425=(function(){
if(arguments.length < 0 || 16 < arguments.length) {
lisp.argumentsError(G_426, arguments.length);
}
let TMP_444;
let L_VAR_TYPE__303;
let L_ESCAPE_COUNT__302;
let L_SET_COUNT__301;
let L_USED_COUNT__300;
let L_INIT_VALUE__299;
let L_ID__298;
let L_KIND__297;
let L_NAME__296;
let supplied_NAME__296;
for (let TMP_428 = 0; TMP_428 < arguments.length; TMP_428 += 2) {
if(arguments[TMP_428] === G_427){
supplied_NAME__296=arguments[TMP_428+1];
break;
}
}
L_NAME__296=supplied_NAME__296 !== undefined ? supplied_NAME__296 : (lisp.values1(lisp.S_nil));
let supplied_KIND__297;
for (let TMP_430 = 0; TMP_430 < arguments.length; TMP_430 += 2) {
if(arguments[TMP_430] === G_429){
supplied_KIND__297=arguments[TMP_430+1];
break;
}
}
L_KIND__297=supplied_KIND__297 !== undefined ? supplied_KIND__297 : (lisp.values1(lisp.S_nil));
let supplied_ID__298;
for (let TMP_432 = 0; TMP_432 < arguments.length; TMP_432 += 2) {
if(arguments[TMP_432] === G_431){
supplied_ID__298=arguments[TMP_432+1];
break;
}
}
L_ID__298=supplied_ID__298 !== undefined ? supplied_ID__298 : (lisp.values1(lisp.S_nil));
let supplied_INIT_VALUE__299;
for (let TMP_434 = 0; TMP_434 < arguments.length; TMP_434 += 2) {
if(arguments[TMP_434] === G_433){
supplied_INIT_VALUE__299=arguments[TMP_434+1];
break;
}
}
L_INIT_VALUE__299=supplied_INIT_VALUE__299 !== undefined ? supplied_INIT_VALUE__299 : (lisp.values1(lisp.S_nil));
let supplied_USED_COUNT__300;
for (let TMP_436 = 0; TMP_436 < arguments.length; TMP_436 += 2) {
if(arguments[TMP_436] === G_435){
supplied_USED_COUNT__300=arguments[TMP_436+1];
break;
}
}
L_USED_COUNT__300=supplied_USED_COUNT__300 !== undefined ? supplied_USED_COUNT__300 : (lisp.values1(0));
let supplied_SET_COUNT__301;
for (let TMP_438 = 0; TMP_438 < arguments.length; TMP_438 += 2) {
if(arguments[TMP_438] === G_437){
supplied_SET_COUNT__301=arguments[TMP_438+1];
break;
}
}
L_SET_COUNT__301=supplied_SET_COUNT__301 !== undefined ? supplied_SET_COUNT__301 : (lisp.values1(0));
let supplied_ESCAPE_COUNT__302;
for (let TMP_440 = 0; TMP_440 < arguments.length; TMP_440 += 2) {
if(arguments[TMP_440] === G_439){
supplied_ESCAPE_COUNT__302=arguments[TMP_440+1];
break;
}
}
L_ESCAPE_COUNT__302=supplied_ESCAPE_COUNT__302 !== undefined ? supplied_ESCAPE_COUNT__302 : (lisp.values1(lisp.S_nil));
let supplied_VAR_TYPE__303;
for (let TMP_442 = 0; TMP_442 < arguments.length; TMP_442 += 2) {
if(arguments[TMP_442] === G_441){
supplied_VAR_TYPE__303=arguments[TMP_442+1];
break;
}
}
L_VAR_TYPE__303=supplied_VAR_TYPE__303 !== undefined ? supplied_VAR_TYPE__303 : (lisp.values1(G_21));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_443 = 0; TMP_443 < arguments.length; TMP_443 += 2) {
if(arguments[TMP_443]!==G_441 && arguments[TMP_443]!==G_439 && arguments[TMP_443]!==G_437 && arguments[TMP_443]!==G_435 && arguments[TMP_443]!==G_433 && arguments[TMP_443]!==G_431 && arguments[TMP_443]!==G_429 && arguments[TMP_443]!==G_427) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_443].name); }
}
TMP_444=lisp.CL_makeStructure(G_423,L_NAME__296,L_KIND__297,L_ID__298,L_INIT_VALUE__299,L_USED_COUNT__300,L_SET_COUNT__301,L_ESCAPE_COUNT__302,L_VAR_TYPE__303);
return TMP_444;
});
CL_COMPILER_MAKE_BINDING=lisp.values1(F_MAKE_BINDING_425);
let F_BINDING_NAME_445;
F_BINDING_NAME_445=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_446, arguments.length);
}
let TMP_448;
let TMP_447;
let L_STRUCTURE__305;
L_STRUCTURE__305=arguments[0];
TMP_447=lisp.CL_structurep(L_STRUCTURE__305);
if(lisp.values1(TMP_447) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__305,G_31);
}
TMP_448=lisp.CL_structureRef(L_STRUCTURE__305,0);
return TMP_448;
});
CL_COMPILER_BINDING_NAME=lisp.values1(F_BINDING_NAME_445);
let F_BINDING_KIND_463;
F_BINDING_KIND_463=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_464, arguments.length);
}
let TMP_466;
let TMP_465;
let L_STRUCTURE__319;
L_STRUCTURE__319=arguments[0];
TMP_465=lisp.CL_structurep(L_STRUCTURE__319);
if(lisp.values1(TMP_465) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__319,G_31);
}
TMP_466=lisp.CL_structureRef(L_STRUCTURE__319,1);
return TMP_466;
});
CL_COMPILER_BINDING_KIND=lisp.values1(F_BINDING_KIND_463);
let F_BINDING_ID_481;
F_BINDING_ID_481=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_482, arguments.length);
}
let TMP_484;
let TMP_483;
let L_STRUCTURE__333;
L_STRUCTURE__333=arguments[0];
TMP_483=lisp.CL_structurep(L_STRUCTURE__333);
if(lisp.values1(TMP_483) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__333,G_31);
}
TMP_484=lisp.CL_structureRef(L_STRUCTURE__333,2);
return TMP_484;
});
CL_COMPILER_BINDING_ID=lisp.values1(F_BINDING_ID_481);
let F_BINDING_INIT_VALUE_499;
F_BINDING_INIT_VALUE_499=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_500, arguments.length);
}
let TMP_502;
let TMP_501;
let L_STRUCTURE__347;
L_STRUCTURE__347=arguments[0];
TMP_501=lisp.CL_structurep(L_STRUCTURE__347);
if(lisp.values1(TMP_501) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__347,G_31);
}
TMP_502=lisp.CL_structureRef(L_STRUCTURE__347,3);
return TMP_502;
});
CL_COMPILER_BINDING_INIT_VALUE=lisp.values1(F_BINDING_INIT_VALUE_499);
let F_BINDING_USED_COUNT_517;
F_BINDING_USED_COUNT_517=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_518, arguments.length);
}
let TMP_520;
let TMP_519;
let L_STRUCTURE__361;
L_STRUCTURE__361=arguments[0];
TMP_519=lisp.CL_structurep(L_STRUCTURE__361);
if(lisp.values1(TMP_519) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__361,G_31);
}
TMP_520=lisp.CL_structureRef(L_STRUCTURE__361,4);
return TMP_520;
});
CL_COMPILER_BINDING_USED_COUNT=lisp.values1(F_BINDING_USED_COUNT_517);
let F_BINDING_SET_COUNT_535;
F_BINDING_SET_COUNT_535=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_536, arguments.length);
}
let TMP_538;
let TMP_537;
let L_STRUCTURE__375;
L_STRUCTURE__375=arguments[0];
TMP_537=lisp.CL_structurep(L_STRUCTURE__375);
if(lisp.values1(TMP_537) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__375,G_31);
}
TMP_538=lisp.CL_structureRef(L_STRUCTURE__375,5);
return TMP_538;
});
CL_COMPILER_BINDING_SET_COUNT=lisp.values1(F_BINDING_SET_COUNT_535);
let F_BINDING_ESCAPE_COUNT_553;
F_BINDING_ESCAPE_COUNT_553=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_554, arguments.length);
}
let TMP_556;
let TMP_555;
let L_STRUCTURE__389;
L_STRUCTURE__389=arguments[0];
TMP_555=lisp.CL_structurep(L_STRUCTURE__389);
if(lisp.values1(TMP_555) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__389,G_31);
}
TMP_556=lisp.CL_structureRef(L_STRUCTURE__389,6);
return TMP_556;
});
CL_COMPILER_BINDING_ESCAPE_COUNT=lisp.values1(F_BINDING_ESCAPE_COUNT_553);
let F_BINDING_VAR_TYPE_571;
F_BINDING_VAR_TYPE_571=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_572, arguments.length);
}
let TMP_574;
let TMP_573;
let L_STRUCTURE__403;
L_STRUCTURE__403=arguments[0];
TMP_573=lisp.CL_structurep(L_STRUCTURE__403);
if(lisp.values1(TMP_573) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__403,G_31);
}
TMP_574=lisp.CL_structureRef(L_STRUCTURE__403,7);
return TMP_574;
});
CL_COMPILER_BINDING_VAR_TYPE=lisp.values1(F_BINDING_VAR_TYPE_571);
let F_COPY_TAGBODY_VALUE_599;
F_COPY_TAGBODY_VALUE_599=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_600, arguments.length);
}
let TMP_601;
let L_X__423;
L_X__423=arguments[0];
TMP_601=lisp.callFunctionWithCallStack(G_5,L_X__423);
return TMP_601;
});
CL_COMPILER_COPY_TAGBODY_VALUE=lisp.values1(F_COPY_TAGBODY_VALUE_599);
let F_TAGBODY_VALUE_P_602;
F_TAGBODY_VALUE_P_602=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_603, arguments.length);
}
let TMP_605;
let L_X__425;
L_X__425=arguments[0];
TMP_605=lisp.callFunctionWithCallStack(G_10,L_X__425,G_604);
return TMP_605;
});
CL_COMPILER_TAGBODY_VALUE_P=lisp.values1(F_TAGBODY_VALUE_P_602);
let F_MAKE_TAGBODY_VALUE_606;
F_MAKE_TAGBODY_VALUE_606=(function(){
if(arguments.length < 0 || 4 < arguments.length) {
lisp.argumentsError(G_607, arguments.length);
}
let TMP_612;
let L_ID__428;
let L_INDEX__427;
let supplied_INDEX__427;
for (let TMP_609 = 0; TMP_609 < arguments.length; TMP_609 += 2) {
if(arguments[TMP_609] === G_608){
supplied_INDEX__427=arguments[TMP_609+1];
break;
}
}
L_INDEX__427=supplied_INDEX__427 !== undefined ? supplied_INDEX__427 : (lisp.values1(lisp.S_nil));
let supplied_ID__428;
for (let TMP_610 = 0; TMP_610 < arguments.length; TMP_610 += 2) {
if(arguments[TMP_610] === G_431){
supplied_ID__428=arguments[TMP_610+1];
break;
}
}
L_ID__428=supplied_ID__428 !== undefined ? supplied_ID__428 : (lisp.values1(lisp.S_nil));
if((arguments.length-0)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_611 = 0; TMP_611 < arguments.length; TMP_611 += 2) {
if(arguments[TMP_611]!==G_431 && arguments[TMP_611]!==G_608) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_611].name); }
}
TMP_612=lisp.CL_makeStructure(G_604,L_INDEX__427,L_ID__428);
return TMP_612;
});
CL_COMPILER_MAKE_TAGBODY_VALUE=lisp.values1(F_MAKE_TAGBODY_VALUE_606);
let F_TAGBODY_VALUE_INDEX_613;
F_TAGBODY_VALUE_INDEX_613=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_614, arguments.length);
}
let TMP_616;
let TMP_615;
let L_STRUCTURE__430;
L_STRUCTURE__430=arguments[0];
TMP_615=lisp.CL_structurep(L_STRUCTURE__430);
if(lisp.values1(TMP_615) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__430,G_31);
}
TMP_616=lisp.CL_structureRef(L_STRUCTURE__430,0);
return TMP_616;
});
CL_COMPILER_TAGBODY_VALUE_INDEX=lisp.values1(F_TAGBODY_VALUE_INDEX_613);
let F_TAGBODY_VALUE_ID_631;
F_TAGBODY_VALUE_ID_631=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_632, arguments.length);
}
let TMP_634;
let TMP_633;
let L_STRUCTURE__444;
L_STRUCTURE__444=arguments[0];
TMP_633=lisp.CL_structurep(L_STRUCTURE__444);
if(lisp.values1(TMP_633) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__444,G_31);
}
TMP_634=lisp.CL_structureRef(L_STRUCTURE__444,1);
return TMP_634;
});
CL_COMPILER_TAGBODY_VALUE_ID=lisp.values1(F_TAGBODY_VALUE_ID_631);
let F_MAYBE_EQUAL_ERROR_655;
F_MAYBE_EQUAL_ERROR_655=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_656, arguments.length);
}
let TMP_660;
let TMP_659;
let TMP_657;
let L_Y__465;
let L_X__464;
L_X__464=arguments[0];
L_Y__465=arguments[1];
if(lisp.values1(lisp.symbolValue(G_653)) !== lisp.S_nil){
TMP_659=lisp.callFunctionWithCallStack(G_48,G_658,L_X__464,L_Y__465);
TMP_660=lisp.callFunctionWithCallStack(G_661,G_45.func(lisp.codeArrayToString([126, 58, 87, 32, 105, 115, 32, 102, 97, 108, 115, 101])),TMP_659);
TMP_657=TMP_660;
}else{
TMP_657=lisp.values1(lisp.S_nil);
}
return TMP_657;
});
CL_COMPILER_MAYBE_EQUAL_ERROR=lisp.values1(F_MAYBE_EQUAL_ERROR_655);
let F_EQUAL_WITH_HIR_662;
F_EQUAL_WITH_HIR_662=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_658, arguments.length);
}
let TMP_716;
let TMP_714;
let TMP_713;
let L_G252__478;
let TMP_712;
let TMP_711;
let TMP_710;
let TMP_708;
let TMP_707;
let L_G251__477;
let TMP_706;
let TMP_705;
let TMP_704;
let L_G250__476;
let TMP_702;
let TMP_700;
let TMP_699;
let TMP_697;
let TMP_695;
let L_I__475;
let BLOCK_RESULT_NIL__474;
let L_G243__473;
let TMP_694;
let TMP_693;
let TMP_691;
let TMP_690;
let TMP_688;
let TMP_687;
let L_G242__472;
let TMP_686;
let TMP_685;
let TMP_683;
let TMP_681;
let TMP_680;
let L_G241__471;
let TMP_679;
let TMP_678;
let TMP_676;
let TMP_675;
let TMP_674;
let TMP_672;
let TMP_671;
let TMP_670;
let TMP_669;
let TMP_667;
let TMP_666;
let L_G240__470;
let TMP_665;
let TMP_664;
let TMP_663;
let L_Y__468;
let L_X__467;
L_X__467=arguments[0];
L_Y__468=arguments[1];
{
TMP_663=lisp.CL_consp(L_X__467);
if(lisp.values1(TMP_663) !== lisp.S_nil){
TMP_665=lisp.CL_consp(L_Y__468);
TMP_664=lisp.values1(TMP_665);
}else{
TMP_664=lisp.values1(lisp.S_nil);
}
L_G240__470=lisp.values1(TMP_664);
if(lisp.values1(L_G240__470) !== lisp.S_nil){
TMP_667=lisp.callFunctionWithCallStack(G_668,L_X__467);
TMP_669=lisp.callFunctionWithCallStack(G_668,L_Y__468);
TMP_670=G_658.func(TMP_667,TMP_669);
if(lisp.values1(TMP_670) !== lisp.S_nil){
TMP_672=lisp.callFunctionWithCallStack(G_673,L_X__467);
TMP_674=lisp.callFunctionWithCallStack(G_673,L_Y__468);
TMP_675=G_658.func(TMP_672,TMP_674);
TMP_671=TMP_675;
}else{
TMP_671=lisp.values1(lisp.S_nil);
}
TMP_666=TMP_671;
}else{
{
TMP_676=lisp.callFunctionWithCallStack(G_677,L_X__467);
if(lisp.values1(TMP_676) !== lisp.S_nil){
TMP_679=lisp.callFunctionWithCallStack(G_677,L_Y__468);
TMP_678=lisp.values1(TMP_679);
}else{
TMP_678=lisp.values1(lisp.S_nil);
}
L_G241__471=lisp.values1(TMP_678);
if(lisp.values1(L_G241__471) !== lisp.S_nil){
TMP_681=lisp.callFunctionWithCallStack(G_682,L_X__467,L_Y__468);
TMP_680=TMP_681;
}else{
{
TMP_683=lisp.callFunctionWithCallStack(G_684,L_X__467);
if(lisp.values1(TMP_683) !== lisp.S_nil){
TMP_686=lisp.callFunctionWithCallStack(G_684,L_Y__468);
TMP_685=lisp.values1(TMP_686);
}else{
TMP_685=lisp.values1(lisp.S_nil);
}
L_G242__472=lisp.values1(TMP_685);
if(lisp.values1(L_G242__472) !== lisp.S_nil){
TMP_688=lisp.callFunctionWithCallStack(G_689,L_X__467);
TMP_690=lisp.callFunctionWithCallStack(G_689,L_Y__468);
TMP_691=lisp.callFunctionWithCallStack(G_692,TMP_688,TMP_690);
if(lisp.values1(TMP_691) !== lisp.S_nil){
{
TMP_694=lisp.callFunctionWithCallStack(G_689,L_X__467);
L_G243__473=lisp.values1(TMP_694);
BLOCK_NIL__474: for(;;){{
L_I__475=lisp.values1(0);
for(;;){
TMP_695=lisp.callFunctionWithCallStack(G_696,L_I__475,L_G243__473);
if(lisp.values1(TMP_695) !== lisp.S_nil){
BLOCK_RESULT_NIL__474=lisp.values1(G_21);
break BLOCK_NIL__474;
}else{
TMP_697=lisp.callFunctionWithCallStack(G_698,L_X__467,L_I__475);
TMP_699=lisp.callFunctionWithCallStack(G_698,L_Y__468,L_I__475);
TMP_700=lisp.callFunctionWithCallStack(G_701,TMP_697,TMP_699);
if(lisp.values1(TMP_700) !== lisp.S_nil){
}else{
BLOCK_RESULT_NIL__474=lisp.values1(lisp.S_nil);
break BLOCK_NIL__474;
}
{
TMP_702=lisp.callFunctionWithCallStack(G_703,L_I__475,1);
L_G250__476=lisp.values1(TMP_702);
L_I__475=lisp.values1(L_G250__476);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__474=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
}
TMP_693=BLOCK_RESULT_NIL__474;
}else{
TMP_693=lisp.values1(lisp.S_nil);
}
TMP_687=TMP_693;
}else{
{
TMP_704=G_7.func(L_X__467);
if(lisp.values1(TMP_704) !== lisp.S_nil){
TMP_706=G_7.func(L_Y__468);
TMP_705=lisp.values1(TMP_706);
}else{
TMP_705=lisp.values1(lisp.S_nil);
}
L_G251__477=lisp.values1(TMP_705);
if(lisp.values1(L_G251__477) !== lisp.S_nil){
TMP_708=G_709.func(L_X__467,L_Y__468);
TMP_707=TMP_708;
}else{
{
TMP_710=G_422.func(L_X__467);
if(lisp.values1(TMP_710) !== lisp.S_nil){
TMP_712=G_422.func(L_Y__468);
TMP_711=lisp.values1(TMP_712);
}else{
TMP_711=lisp.values1(lisp.S_nil);
}
L_G252__478=lisp.values1(TMP_711);
if(lisp.values1(L_G252__478) !== lisp.S_nil){
TMP_714=G_715.func(L_X__467,L_Y__468);
TMP_713=TMP_714;
}else{
TMP_716=lisp.callFunctionWithCallStack(G_701,L_X__467,L_Y__468);
TMP_713=TMP_716;
}
}
TMP_707=TMP_713;
}
}
TMP_687=TMP_707;
}
}
TMP_680=TMP_687;
}
}
TMP_666=TMP_680;
}
}
return TMP_666;
});
CL_COMPILER_EQUAL_WITH_HIR=lisp.values1(F_EQUAL_WITH_HIR_662);
let F_EQUAL_HIR_717;
F_EQUAL_HIR_717=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_709, arguments.length);
}
let TMP_736;
let TMP_735;
let TMP_733;
let TMP_732;
let TMP_731;
let TMP_730;
let TMP_729;
let TMP_728;
let TMP_727;
let TMP_726;
let TMP_725;
let TMP_724;
let TMP_723;
let TMP_722;
let TMP_721;
let TMP_720;
let TMP_719;
let TMP_718;
let L_HIR2__481;
let L_HIR1__480;
L_HIR1__480=arguments[0];
L_HIR2__481=arguments[1];
TMP_718=G_29.func(L_HIR1__480);
TMP_719=G_29.func(L_HIR2__481);
TMP_720=lisp.CL_eq(TMP_718,TMP_719);
if(lisp.values1(TMP_720) !== lisp.S_nil){
TMP_722=G_56.func(L_HIR1__480);
TMP_723=G_56.func(L_HIR2__481);
TMP_724=lisp.CL_eq(TMP_722,TMP_723);
if(lisp.values1(TMP_724) !== lisp.S_nil){
TMP_726=G_74.func(L_HIR1__480);
TMP_727=G_74.func(L_HIR2__481);
TMP_728=lisp.CL_eq(TMP_726,TMP_727);
if(lisp.values1(TMP_728) !== lisp.S_nil){
TMP_730=lisp.CL_symbolFunction(G_658);
TMP_731=G_128.func(L_HIR1__480);
TMP_732=G_128.func(L_HIR2__481);
TMP_733=lisp.callFunctionWithCallStack(G_734,TMP_730,TMP_731,TMP_732);
TMP_729=lisp.values1(TMP_733);
}else{
TMP_729=lisp.values1(lisp.S_nil);
}
TMP_725=lisp.values1(TMP_729);
}else{
TMP_725=lisp.values1(lisp.S_nil);
}
TMP_721=lisp.values1(TMP_725);
}else{
TMP_721=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_721) !== lisp.S_nil){
TMP_735=lisp.values1(G_21);
}else{
TMP_736=G_656.func(L_HIR1__480,L_HIR2__481);
TMP_735=TMP_736;
}
return TMP_735;
});
CL_COMPILER_EQUAL_HIR=lisp.values1(F_EQUAL_HIR_717);
let F_EQUAL_BINDING_737;
F_EQUAL_BINDING_737=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_715, arguments.length);
}
let TMP_750;
let TMP_749;
let TMP_748;
let TMP_747;
let TMP_746;
let TMP_745;
let TMP_744;
let TMP_743;
let TMP_742;
let TMP_741;
let TMP_740;
let TMP_739;
let TMP_738;
let L_B2__484;
let L_B1__483;
L_B1__483=arguments[0];
L_B2__484=arguments[1];
TMP_738=G_482.func(L_B1__483);
TMP_739=G_482.func(L_B2__484);
TMP_740=lisp.callFunctionWithCallStack(G_682,TMP_738,TMP_739);
if(lisp.values1(TMP_740) !== lisp.S_nil){
TMP_742=G_464.func(L_B1__483);
TMP_743=G_464.func(L_B2__484);
TMP_744=lisp.CL_eq(TMP_742,TMP_743);
if(lisp.values1(TMP_744) !== lisp.S_nil){
TMP_746=G_500.func(L_B1__483);
TMP_747=G_500.func(L_B2__484);
TMP_748=G_658.func(TMP_746,TMP_747);
TMP_745=lisp.values1(TMP_748);
}else{
TMP_745=lisp.values1(lisp.S_nil);
}
TMP_741=lisp.values1(TMP_745);
}else{
TMP_741=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_741) !== lisp.S_nil){
TMP_749=lisp.values1(G_21);
}else{
TMP_750=G_656.func(L_B1__483,L_B2__484);
TMP_749=TMP_750;
}
return TMP_749;
});
CL_COMPILER_EQUAL_BINDING=lisp.values1(F_EQUAL_BINDING_737);
let F_REDUCE_HIR_751;
F_REDUCE_HIR_751=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_752, arguments.length);
}
let TMP_943;
let TMP_942;
let TMP_941;
let TMP_940;
let TMP_939;
let L_G285__523;
let TMP_938;
let TMP_936;
let L_G284__522;
let TMP_935;
let TMP_933;
let L_G283__521;
let TMP_932;
let TMP_930;
let L_G282__520;
let TMP_929;
let TMP_927;
let L_G281__519;
let TMP_926;
let TMP_924;
let L_G280__518;
let TMP_923;
let TMP_921;
let L_G279__517;
let TMP_920;
let TMP_918;
let L_G278__516;
let TMP_917;
let TMP_915;
let L_G277__515;
let TMP_914;
let TMP_912;
let L_G276__514;
let TMP_911;
let TMP_909;
let L_G275__513;
let TMP_908;
let TMP_906;
let TMP_905;
let TMP_904;
let TMP_903;
let TMP_902;
let L_G274__512;
let TMP_901;
let TMP_899;
let TMP_898;
let TMP_897;
let TMP_896;
let TMP_895;
let L_G273__511;
let TMP_894;
let TMP_892;
let TMP_891;
let TMP_890;
let TMP_882;
let TMP_881;
let TMP_880;
let L_G269__504;
let TMP_879;
let TMP_877;
let TMP_876;
let TMP_875;
let TMP_874;
let TMP_873;
let TMP_872;
let L_G268__503;
let TMP_871;
let TMP_869;
let TMP_868;
let TMP_867;
let TMP_866;
let TMP_865;
let TMP_864;
let TMP_863;
let L_G267__502;
let TMP_862;
let TMP_860;
let TMP_859;
let TMP_858;
let TMP_857;
let TMP_856;
let TMP_855;
let L_G266__501;
let TMP_854;
let TMP_852;
let TMP_851;
let TMP_850;
let TMP_849;
let TMP_848;
let TMP_847;
let TMP_846;
let TMP_845;
let L_G265__500;
let TMP_844;
let TMP_842;
let TMP_841;
let TMP_840;
let TMP_839;
let TMP_838;
let TMP_837;
let TMP_836;
let L_G264__499;
let TMP_835;
let TMP_833;
let TMP_832;
let TMP_831;
let TMP_830;
let TMP_829;
let TMP_828;
let TMP_819;
let TMP_818;
let L_G263__497;
let TMP_817;
let TMP_815;
let TMP_814;
let TMP_813;
let TMP_812;
let TMP_811;
let TMP_809;
let L_G262__496;
let TMP_808;
let TMP_806;
let TMP_805;
let TMP_804;
let TMP_803;
let TMP_802;
let L_G261__495;
let TMP_801;
let TMP_799;
let TMP_798;
let TMP_797;
let TMP_796;
let TMP_795;
let TMP_794;
let TMP_793;
let TMP_792;
let L_G260__494;
let TMP_791;
let TMP_789;
let TMP_788;
let TMP_787;
let TMP_786;
let TMP_785;
let TMP_784;
let L_G259__493;
let TMP_783;
let TMP_781;
let TMP_780;
let TMP_779;
let TMP_778;
let TMP_777;
let TMP_776;
let TMP_775;
let L_G258__492;
let TMP_774;
let TMP_772;
let TMP_771;
let TMP_770;
let TMP_769;
let L_G257__491;
let TMP_768;
let TMP_766;
let TMP_765;
let TMP_764;
let TMP_763;
let TMP_762;
let L_G256__490;
let TMP_761;
let TMP_757;
let L_G255__489;
let TMP_755;
let L_G254__488;
let TMP_753;
let L_HIR__486;
L_HIR__486=arguments[0];
{
TMP_753=G_29.func(L_HIR__486);
L_G254__488=lisp.values1(TMP_753);
{
TMP_755=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_754, lisp.S_nil));
L_G255__489=lisp.values1(TMP_755);
if(lisp.values1(L_G255__489) !== lisp.S_nil){
TMP_757=lisp.values1(G_758.func(G_754,lisp.makeCons(G_759, lisp.makeCons(lisp.makeCons(G_157, lisp.makeCons(G_8, lisp.S_nil)), lisp.S_nil))));
}else{
{
TMP_761=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_760, lisp.S_nil));
L_G256__490=lisp.values1(TMP_761);
if(lisp.values1(L_G256__490) !== lisp.S_nil){
TMP_763=G_29.func(L_HIR__486);
TMP_764=G_157.func(L_HIR__486);
TMP_765=G_482.func(TMP_764);
TMP_766=lisp.callFunctionWithCallStack(G_48,TMP_763,TMP_765);
TMP_762=TMP_766;
}else{
{
TMP_768=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_767, lisp.S_nil));
L_G257__491=lisp.values1(TMP_768);
if(lisp.values1(L_G257__491) !== lisp.S_nil){
TMP_770=G_29.func(L_HIR__486);
TMP_771=G_157.func(L_HIR__486);
TMP_772=lisp.callFunctionWithCallStack(G_48,TMP_770,TMP_771);
TMP_769=TMP_772;
}else{
{
TMP_774=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_773, lisp.S_nil));
L_G258__492=lisp.values1(TMP_774);
if(lisp.values1(L_G258__492) !== lisp.S_nil){
TMP_776=G_29.func(L_HIR__486);
TMP_777=G_157.func(L_HIR__486);
TMP_778=G_482.func(TMP_777);
TMP_779=G_162.func(L_HIR__486);
TMP_780=G_752.func(TMP_779);
TMP_781=lisp.callFunctionWithCallStack(G_48,TMP_776,TMP_778,TMP_780);
TMP_775=TMP_781;
}else{
{
TMP_783=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_782, lisp.S_nil));
L_G259__493=lisp.values1(TMP_783);
if(lisp.values1(L_G259__493) !== lisp.S_nil){
TMP_785=G_29.func(L_HIR__486);
TMP_786=G_157.func(L_HIR__486);
TMP_787=G_162.func(L_HIR__486);
TMP_788=G_752.func(TMP_787);
TMP_789=lisp.callFunctionWithCallStack(G_48,TMP_785,TMP_786,TMP_788);
TMP_784=TMP_789;
}else{
{
TMP_791=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_790, lisp.S_nil));
L_G260__494=lisp.values1(TMP_791);
if(lisp.values1(L_G260__494) !== lisp.S_nil){
TMP_793=G_157.func(L_HIR__486);
TMP_794=G_752.func(TMP_793);
TMP_795=G_162.func(L_HIR__486);
TMP_796=G_752.func(TMP_795);
TMP_797=G_167.func(L_HIR__486);
TMP_798=G_752.func(TMP_797);
TMP_799=lisp.callFunctionWithCallStack(G_48,G_790,TMP_794,TMP_796,TMP_798);
TMP_792=TMP_799;
}else{
{
TMP_801=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_800, lisp.S_nil));
L_G261__495=lisp.values1(TMP_801);
if(lisp.values1(L_G261__495) !== lisp.S_nil){
TMP_803=lisp.CL_symbolFunction(G_752);
TMP_804=G_157.func(L_HIR__486);
TMP_805=lisp.callFunctionWithCallStack(G_44,TMP_803,TMP_804);
TMP_806=lisp.CL_cons(G_800,TMP_805);
TMP_802=TMP_806;
}else{
{
TMP_808=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_807, lisp.S_nil));
L_G262__496=lisp.values1(TMP_808);
if(lisp.values1(L_G262__496) !== lisp.S_nil){
TMP_811=G_157.func(L_HIR__486);
TMP_812=G_162.func(L_HIR__486);
TMP_813=G_167.func(L_HIR__486);
TMP_814=G_752.func(TMP_813);
TMP_815=lisp.callFunctionWithCallStack(G_48,G_810,TMP_811,TMP_812,TMP_814);
TMP_809=TMP_815;
}else{
{
TMP_817=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_816, lisp.S_nil));
L_G263__497=lisp.values1(TMP_817);
if(lisp.values1(L_G263__497) !== lisp.S_nil){
TMP_819=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_827;
let TMP_826;
let TMP_825;
let TMP_824;
let TMP_822;
let TMP_821;
let TMP_820;
let L_B__498;
L_B__498=arguments[0];
TMP_820=G_482.func(L_B__498);
TMP_821=G_500.func(L_B__498);
TMP_822=G_752.func(TMP_821);
TMP_824=G_464.func(L_B__498);
TMP_825=lisp.CL_eq(G_823,TMP_824);
if(lisp.values1(TMP_825) !== lisp.S_nil){
TMP_826=lisp.values1(lisp.makeCons(G_823, lisp.S_nil));
}else{
TMP_826=lisp.values1(lisp.S_nil);
}
TMP_827=lisp.callFunctionWithCallStack(G_50,TMP_820,TMP_822,TMP_826);
return TMP_827;
});
TMP_828=G_157.func(L_HIR__486);
TMP_829=lisp.callFunctionWithCallStack(G_44,TMP_819,TMP_828);
TMP_830=lisp.CL_symbolFunction(G_752);
TMP_831=G_162.func(L_HIR__486);
TMP_832=lisp.callFunctionWithCallStack(G_44,TMP_830,TMP_831);
TMP_833=lisp.callFunctionWithCallStack(G_50,G_816,TMP_829,TMP_832);
TMP_818=TMP_833;
}else{
{
TMP_835=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_834, lisp.S_nil));
L_G264__499=lisp.values1(TMP_835);
if(lisp.values1(L_G264__499) !== lisp.S_nil){
TMP_837=G_29.func(L_HIR__486);
TMP_838=G_157.func(L_HIR__486);
TMP_839=lisp.CL_symbolFunction(G_752);
TMP_840=G_162.func(L_HIR__486);
TMP_841=lisp.callFunctionWithCallStack(G_44,TMP_839,TMP_840);
TMP_842=lisp.callFunctionWithCallStack(G_50,TMP_837,TMP_838,TMP_841);
TMP_836=TMP_842;
}else{
{
TMP_844=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_843, lisp.S_nil));
L_G265__500=lisp.values1(TMP_844);
if(lisp.values1(L_G265__500) !== lisp.S_nil){
TMP_846=G_29.func(L_HIR__486);
TMP_847=G_157.func(L_HIR__486);
TMP_848=G_446.func(TMP_847);
TMP_849=lisp.CL_symbolFunction(G_752);
TMP_850=G_162.func(L_HIR__486);
TMP_851=lisp.callFunctionWithCallStack(G_44,TMP_849,TMP_850);
TMP_852=lisp.callFunctionWithCallStack(G_50,TMP_846,TMP_848,TMP_851);
TMP_845=TMP_852;
}else{
{
TMP_854=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_853, lisp.S_nil));
L_G266__501=lisp.values1(TMP_854);
if(lisp.values1(L_G266__501) !== lisp.S_nil){
TMP_856=G_157.func(L_HIR__486);
TMP_857=G_752.func(TMP_856);
TMP_858=G_162.func(L_HIR__486);
TMP_859=G_752.func(TMP_858);
TMP_860=lisp.callFunctionWithCallStack(G_48,G_853,TMP_857,TMP_859);
TMP_855=TMP_860;
}else{
{
TMP_862=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_861, lisp.S_nil));
L_G267__502=lisp.values1(TMP_862);
if(lisp.values1(L_G267__502) !== lisp.S_nil){
TMP_864=G_157.func(L_HIR__486);
TMP_865=G_482.func(TMP_864);
TMP_866=lisp.CL_symbolFunction(G_752);
TMP_867=G_162.func(L_HIR__486);
TMP_868=lisp.callFunctionWithCallStack(G_44,TMP_866,TMP_867);
TMP_869=lisp.callFunctionWithCallStack(G_50,G_861,TMP_865,TMP_868);
TMP_863=TMP_869;
}else{
{
TMP_871=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_870, lisp.S_nil));
L_G268__503=lisp.values1(TMP_871);
if(lisp.values1(L_G268__503) !== lisp.S_nil){
TMP_873=G_157.func(L_HIR__486);
TMP_874=G_482.func(TMP_873);
TMP_875=G_162.func(L_HIR__486);
TMP_876=G_752.func(TMP_875);
TMP_877=lisp.callFunctionWithCallStack(G_48,G_870,TMP_874,TMP_876);
TMP_872=TMP_877;
}else{
{
TMP_879=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_878, lisp.S_nil));
L_G269__504=lisp.values1(TMP_879);
if(lisp.values1(L_G269__504) !== lisp.S_nil){
TMP_881=G_157.func(L_HIR__486);
TMP_882=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_889;
let TMP_888;
let TMP_887;
let TMP_886;
let L_BODY__510;
let L_G272__509;
let TMP_884;
let L_BINDING__508;
let TMP_883;
let L_G270__506;
let L_X__505;
L_X__505=arguments[0];
{
L_G270__506=lisp.values1(L_X__505);
{
TMP_883=lisp.callFunctionWithCallStack(G_160,L_G270__506);
L_BINDING__508=lisp.values1(TMP_883);
TMP_884=lisp.callFunctionWithCallStack(G_885,L_G270__506);
L_G272__509=lisp.values1(TMP_884);
L_BODY__510=lisp.values1(L_G272__509);
TMP_886=G_482.func(L_BINDING__508);
TMP_887=G_614.func(TMP_886);
TMP_888=G_752.func(L_BODY__510);
TMP_889=lisp.callFunctionWithCallStack(G_48,TMP_887,TMP_888);
}
}
return TMP_889;
});
TMP_890=G_162.func(L_HIR__486);
TMP_891=lisp.callFunctionWithCallStack(G_44,TMP_882,TMP_890);
TMP_892=lisp.callFunctionWithCallStack(G_50,G_878,TMP_881,TMP_891);
TMP_880=TMP_892;
}else{
{
TMP_894=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_893, lisp.S_nil));
L_G273__511=lisp.values1(TMP_894);
if(lisp.values1(L_G273__511) !== lisp.S_nil){
TMP_896=G_157.func(L_HIR__486);
TMP_897=G_482.func(TMP_896);
TMP_898=G_614.func(TMP_897);
TMP_899=lisp.callFunctionWithCallStack(G_48,G_893,TMP_898);
TMP_895=TMP_899;
}else{
{
TMP_901=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_900, lisp.S_nil));
L_G274__512=lisp.values1(TMP_901);
if(lisp.values1(L_G274__512) !== lisp.S_nil){
TMP_903=G_157.func(L_HIR__486);
TMP_904=G_162.func(L_HIR__486);
TMP_905=G_752.func(TMP_904);
TMP_906=lisp.callFunctionWithCallStack(G_48,G_900,TMP_903,TMP_905);
TMP_902=TMP_906;
}else{
{
TMP_908=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_907, lisp.S_nil));
L_G275__513=lisp.values1(TMP_908);
if(lisp.values1(L_G275__513) !== lisp.S_nil){
TMP_909=lisp.values1(L_HIR__486);
}else{
{
TMP_911=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_910, lisp.S_nil));
L_G276__514=lisp.values1(TMP_911);
if(lisp.values1(L_G276__514) !== lisp.S_nil){
TMP_912=lisp.values1(L_HIR__486);
}else{
{
TMP_914=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_913, lisp.S_nil));
L_G277__515=lisp.values1(TMP_914);
if(lisp.values1(L_G277__515) !== lisp.S_nil){
TMP_915=lisp.values1(L_HIR__486);
}else{
{
TMP_917=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_916, lisp.S_nil));
L_G278__516=lisp.values1(TMP_917);
if(lisp.values1(L_G278__516) !== lisp.S_nil){
TMP_918=lisp.values1(L_HIR__486);
}else{
{
TMP_920=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_919, lisp.S_nil));
L_G279__517=lisp.values1(TMP_920);
if(lisp.values1(L_G279__517) !== lisp.S_nil){
TMP_921=lisp.values1(L_HIR__486);
}else{
{
TMP_923=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_922, lisp.S_nil));
L_G280__518=lisp.values1(TMP_923);
if(lisp.values1(L_G280__518) !== lisp.S_nil){
TMP_924=lisp.values1(L_HIR__486);
}else{
{
TMP_926=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_925, lisp.S_nil));
L_G281__519=lisp.values1(TMP_926);
if(lisp.values1(L_G281__519) !== lisp.S_nil){
TMP_927=lisp.values1(L_HIR__486);
}else{
{
TMP_929=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_928, lisp.S_nil));
L_G282__520=lisp.values1(TMP_929);
if(lisp.values1(L_G282__520) !== lisp.S_nil){
TMP_930=lisp.values1(L_HIR__486);
}else{
{
TMP_932=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_931, lisp.S_nil));
L_G283__521=lisp.values1(TMP_932);
if(lisp.values1(L_G283__521) !== lisp.S_nil){
TMP_933=lisp.values1(L_HIR__486);
}else{
{
TMP_935=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_934, lisp.S_nil));
L_G284__522=lisp.values1(TMP_935);
if(lisp.values1(L_G284__522) !== lisp.S_nil){
TMP_936=lisp.values1(lisp.makeCons(G_934, lisp.S_nil));
}else{
{
TMP_938=lisp.callFunctionWithCallStack(G_756,L_G254__488,lisp.makeCons(G_937, lisp.S_nil));
L_G285__523=lisp.values1(TMP_938);
if(lisp.values1(L_G285__523) !== lisp.S_nil){
TMP_940=G_157.func(L_HIR__486);
TMP_941=G_752.func(TMP_940);
TMP_942=lisp.callFunctionWithCallStack(G_48,G_937,TMP_941);
TMP_939=TMP_942;
}else{
TMP_943=lisp.callFunctionWithCallStack(G_661,G_45.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G254__488,lisp.makeCons(G_754, lisp.makeCons(G_760, lisp.makeCons(G_767, lisp.makeCons(G_773, lisp.makeCons(G_782, lisp.makeCons(G_790, lisp.makeCons(G_800, lisp.makeCons(G_807, lisp.makeCons(G_816, lisp.makeCons(G_834, lisp.makeCons(G_843, lisp.makeCons(G_853, lisp.makeCons(G_861, lisp.makeCons(G_870, lisp.makeCons(G_878, lisp.makeCons(G_893, lisp.makeCons(G_900, lisp.makeCons(G_907, lisp.makeCons(G_910, lisp.makeCons(G_913, lisp.makeCons(G_916, lisp.makeCons(G_919, lisp.makeCons(G_922, lisp.makeCons(G_925, lisp.makeCons(G_928, lisp.makeCons(G_931, lisp.makeCons(G_934, lisp.makeCons(G_937, lisp.S_nil)))))))))))))))))))))))))))));
TMP_939=TMP_943;
}
}
TMP_936=TMP_939;
}
}
TMP_933=TMP_936;
}
}
TMP_930=TMP_933;
}
}
TMP_927=TMP_930;
}
}
TMP_924=TMP_927;
}
}
TMP_921=TMP_924;
}
}
TMP_918=TMP_921;
}
}
TMP_915=TMP_918;
}
}
TMP_912=TMP_915;
}
}
TMP_909=TMP_912;
}
}
TMP_902=TMP_909;
}
}
TMP_895=TMP_902;
}
}
TMP_880=TMP_895;
}
}
TMP_872=TMP_880;
}
}
TMP_863=TMP_872;
}
}
TMP_855=TMP_863;
}
}
TMP_845=TMP_855;
}
}
TMP_836=TMP_845;
}
}
TMP_818=TMP_836;
}
}
TMP_809=TMP_818;
}
}
TMP_802=TMP_809;
}
}
TMP_792=TMP_802;
}
}
TMP_784=TMP_792;
}
}
TMP_775=TMP_784;
}
}
TMP_769=TMP_775;
}
}
TMP_762=TMP_769;
}
}
TMP_757=TMP_762;
}
}
}
return TMP_757;
});
CL_COMPILER_REDUCE_HIR=lisp.values1(F_REDUCE_HIR_751);
// initialize symbols
G_3 = lisp.intern('COPY-HIR', 'COMPILER');
G_5 = lisp.intern('COPY-STRUCTURE', 'COMMON-LISP');
G_7 = lisp.intern('HIR-P', 'COMPILER');
G_8 = lisp.intern('HIR', 'COMPILER');
G_10 = lisp.intern('TYPEP', 'COMMON-LISP');
G_12 = lisp.intern('%MAKE-HIR', 'COMPILER');
G_13 = lisp.intern('OP', 'KEYWORD');
G_15 = lisp.intern('RETURN-VALUE-P', 'KEYWORD');
G_17 = lisp.intern('MULTIPLE-VALUES-P', 'KEYWORD');
G_19 = lisp.intern('RESULT-TYPE', 'KEYWORD');
G_21 = lisp.intern('T', 'COMMON-LISP');
G_22 = lisp.intern('POSITION', 'KEYWORD');
G_24 = lisp.intern('ARGS', 'KEYWORD');
G_29 = lisp.intern('HIR-OP', 'COMPILER');
G_31 = lisp.intern('STRUCTURE-OBJECT', 'COMMON-LISP');
G_32 = lisp.intern('TYPE-ERROR', 'COMMON-LISP');
G_34 = lisp.intern('(SETF HIR-OP)', 'COMPILER');
G_38 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_42 = lisp.intern('GENSYM', 'COMMON-LISP');
G_44 = lisp.intern('%MAPCAR', 'SYSTEM');
G_45 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_48 = lisp.intern('LIST', 'COMMON-LISP');
G_50 = lisp.intern('LIST*', 'COMMON-LISP');
G_53 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_56 = lisp.intern('HIR-RETURN-VALUE-P', 'COMPILER');
G_59 = lisp.intern('(SETF HIR-RETURN-VALUE-P)', 'COMPILER');
G_74 = lisp.intern('HIR-MULTIPLE-VALUES-P', 'COMPILER');
G_77 = lisp.intern('(SETF HIR-MULTIPLE-VALUES-P)', 'COMPILER');
G_92 = lisp.intern('HIR-RESULT-TYPE', 'COMPILER');
G_95 = lisp.intern('(SETF HIR-RESULT-TYPE)', 'COMPILER');
G_110 = lisp.intern('HIR-POSITION', 'COMPILER');
G_113 = lisp.intern('(SETF HIR-POSITION)', 'COMPILER');
G_128 = lisp.intern('HIR-ARGS', 'COMPILER');
G_131 = lisp.intern('(SETF HIR-ARGS)', 'COMPILER');
G_146 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_147 = lisp.intern('PRIN1', 'COMMON-LISP');
G_155 = lisp.intern('STRUCTURE-PRINTER', 'COMMON-LISP');
G_157 = lisp.intern('HIR-ARG1', 'COMPILER');
G_160 = lisp.intern('FIRST', 'COMMON-LISP');
G_162 = lisp.intern('HIR-ARG2', 'COMPILER');
G_165 = lisp.intern('SECOND', 'COMMON-LISP');
G_167 = lisp.intern('HIR-ARG3', 'COMPILER');
G_170 = lisp.intern('THIRD', 'COMMON-LISP');
G_171 = lisp.intern('(SETF HIR-ARG1)', 'COMPILER');
G_175 = lisp.intern('SET-NTH', 'COMMON-LISP');
G_186 = lisp.intern('(SETF HIR-ARG2)', 'COMPILER');
G_200 = lisp.intern('(SETF HIR-ARG3)', 'COMPILER');
G_215 = lisp.intern('MAKE-HIR', 'COMPILER');
G_217 = lisp.intern('SET-HIR-POSITION', 'COMPILER');
G_219 = lisp.intern('REMAKE-HIR', 'COMPILER');
G_224 = lisp.intern('APPLY', 'COMMON-LISP');
G_226 = lisp.intern('LAMBDA-HIR-NAME', 'COMPILER');
G_229 = lisp.intern('LAMBDA-HIR-PARSED-LAMBDA-LIST', 'COMPILER');
G_232 = lisp.intern('LAMBDA-HIR-BODY', 'COMPILER');
G_235 = lisp.intern('COPY-PARSED-LAMBDA-LIST', 'COMPILER');
G_238 = lisp.intern('PARSED-LAMBDA-LIST-P', 'COMPILER');
G_239 = lisp.intern('PARSED-LAMBDA-LIST', 'COMPILER');
G_242 = lisp.intern('MAKE-PARSED-LAMBDA-LIST', 'COMPILER');
G_243 = lisp.intern('VARS', 'KEYWORD');
G_245 = lisp.intern('REST-VAR', 'KEYWORD');
G_247 = lisp.intern('OPTIONALS', 'KEYWORD');
G_249 = lisp.intern('KEYS', 'KEYWORD');
G_251 = lisp.intern('MIN', 'KEYWORD');
G_253 = lisp.intern('MAX', 'KEYWORD');
G_255 = lisp.intern('ALLOW-OTHER-KEYS', 'KEYWORD');
G_260 = lisp.intern('PARSED-LAMBDA-LIST-VARS', 'COMPILER');
G_263 = lisp.intern('(SETF PARSED-LAMBDA-LIST-VARS)', 'COMPILER');
G_278 = lisp.intern('PARSED-LAMBDA-LIST-REST-VAR', 'COMPILER');
G_281 = lisp.intern('(SETF PARSED-LAMBDA-LIST-REST-VAR)', 'COMPILER');
G_296 = lisp.intern('PARSED-LAMBDA-LIST-OPTIONALS', 'COMPILER');
G_299 = lisp.intern('(SETF PARSED-LAMBDA-LIST-OPTIONALS)', 'COMPILER');
G_314 = lisp.intern('PARSED-LAMBDA-LIST-KEYS', 'COMPILER');
G_317 = lisp.intern('(SETF PARSED-LAMBDA-LIST-KEYS)', 'COMPILER');
G_332 = lisp.intern('PARSED-LAMBDA-LIST-MIN', 'COMPILER');
G_335 = lisp.intern('(SETF PARSED-LAMBDA-LIST-MIN)', 'COMPILER');
G_350 = lisp.intern('PARSED-LAMBDA-LIST-MAX', 'COMPILER');
G_353 = lisp.intern('(SETF PARSED-LAMBDA-LIST-MAX)', 'COMPILER');
G_368 = lisp.intern('PARSED-LAMBDA-LIST-ALLOW-OTHER-KEYS', 'COMPILER');
G_371 = lisp.intern('(SETF PARSED-LAMBDA-LIST-ALLOW-OTHER-KEYS)', 'COMPILER');
G_395 = lisp.intern('COLLECT-VARIABLES', 'COMPILER');
G_408 = lisp.intern('REMOVE', 'COMMON-LISP');
G_417 = lisp.intern('APPEND', 'COMMON-LISP');
G_419 = lisp.intern('COPY-BINDING', 'COMPILER');
G_422 = lisp.intern('BINDING-P', 'COMPILER');
G_423 = lisp.intern('BINDING', 'COMPILER');
G_426 = lisp.intern('MAKE-BINDING', 'COMPILER');
G_427 = lisp.intern('NAME', 'KEYWORD');
G_429 = lisp.intern('KIND', 'KEYWORD');
G_431 = lisp.intern('ID', 'KEYWORD');
G_433 = lisp.intern('INIT-VALUE', 'KEYWORD');
G_435 = lisp.intern('USED-COUNT', 'KEYWORD');
G_437 = lisp.intern('SET-COUNT', 'KEYWORD');
G_439 = lisp.intern('ESCAPE-COUNT', 'KEYWORD');
G_441 = lisp.intern('VAR-TYPE', 'KEYWORD');
G_446 = lisp.intern('BINDING-NAME', 'COMPILER');
G_449 = lisp.intern('(SETF BINDING-NAME)', 'COMPILER');
G_464 = lisp.intern('BINDING-KIND', 'COMPILER');
G_467 = lisp.intern('(SETF BINDING-KIND)', 'COMPILER');
G_482 = lisp.intern('BINDING-ID', 'COMPILER');
G_485 = lisp.intern('(SETF BINDING-ID)', 'COMPILER');
G_500 = lisp.intern('BINDING-INIT-VALUE', 'COMPILER');
G_503 = lisp.intern('(SETF BINDING-INIT-VALUE)', 'COMPILER');
G_518 = lisp.intern('BINDING-USED-COUNT', 'COMPILER');
G_521 = lisp.intern('(SETF BINDING-USED-COUNT)', 'COMPILER');
G_536 = lisp.intern('BINDING-SET-COUNT', 'COMPILER');
G_539 = lisp.intern('(SETF BINDING-SET-COUNT)', 'COMPILER');
G_554 = lisp.intern('BINDING-ESCAPE-COUNT', 'COMPILER');
G_557 = lisp.intern('(SETF BINDING-ESCAPE-COUNT)', 'COMPILER');
G_572 = lisp.intern('BINDING-VAR-TYPE', 'COMPILER');
G_575 = lisp.intern('(SETF BINDING-VAR-TYPE)', 'COMPILER');
G_600 = lisp.intern('COPY-TAGBODY-VALUE', 'COMPILER');
G_603 = lisp.intern('TAGBODY-VALUE-P', 'COMPILER');
G_604 = lisp.intern('TAGBODY-VALUE', 'COMPILER');
G_607 = lisp.intern('MAKE-TAGBODY-VALUE', 'COMPILER');
G_608 = lisp.intern('INDEX', 'KEYWORD');
G_614 = lisp.intern('TAGBODY-VALUE-INDEX', 'COMPILER');
G_617 = lisp.intern('(SETF TAGBODY-VALUE-INDEX)', 'COMPILER');
G_632 = lisp.intern('TAGBODY-VALUE-ID', 'COMPILER');
G_635 = lisp.intern('(SETF TAGBODY-VALUE-ID)', 'COMPILER');
G_653 = lisp.intern('*EQUAL-ERROR*', 'COMPILER');
G_654 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_656 = lisp.intern('MAYBE-EQUAL-ERROR', 'COMPILER');
G_658 = lisp.intern('EQUAL-WITH-HIR', 'COMPILER');
G_661 = lisp.intern('ERROR', 'COMMON-LISP');
G_668 = lisp.intern('CAR', 'COMMON-LISP');
G_673 = lisp.intern('CDR', 'COMMON-LISP');
G_677 = lisp.intern('STRINGP', 'COMMON-LISP');
G_682 = lisp.intern('STRING=', 'COMMON-LISP');
G_684 = lisp.intern('SIMPLE-BIT-VECTOR-P', 'COMMON-LISP');
G_689 = lisp.intern('LENGTH', 'COMMON-LISP');
G_692 = lisp.intern('=', 'COMMON-LISP');
G_696 = lisp.intern('>=', 'COMMON-LISP');
G_698 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_701 = lisp.intern('EQL', 'COMMON-LISP');
G_703 = lisp.intern('+', 'COMMON-LISP');
G_709 = lisp.intern('EQUAL-HIR', 'COMPILER');
G_715 = lisp.intern('EQUAL-BINDING', 'COMPILER');
G_734 = lisp.intern('EVERY', 'COMMON-LISP');
G_752 = lisp.intern('REDUCE-HIR', 'COMPILER');
G_754 = lisp.intern('CONST', 'COMPILER');
G_756 = lisp.intern('MEMBER', 'COMMON-LISP');
G_758 = lisp.intern('VECTOR', 'COMMON-LISP');
G_759 = lisp.intern('UNQUOTE', 'SYSTEM');
G_760 = lisp.intern('LREF', 'COMPILER');
G_767 = lisp.intern('GREF', 'COMPILER');
G_773 = lisp.intern('LSET', 'COMPILER');
G_782 = lisp.intern('GSET', 'COMPILER');
G_790 = lisp.intern('IF', 'COMMON-LISP');
G_800 = lisp.intern('PROGN', 'COMMON-LISP');
G_807 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_810 = lisp.intern('NAMED-LAMBDA', 'COMPILER');
G_816 = lisp.intern('LET', 'COMMON-LISP');
G_823 = lisp.intern('SPECIAL', 'KEYWORD');
G_834 = lisp.intern('CALL', 'COMPILER');
G_843 = lisp.intern('LCALL', 'COMPILER');
G_853 = lisp.intern('UNWIND-PROTECT', 'COMMON-LISP');
G_861 = lisp.intern('BLOCK', 'COMMON-LISP');
G_870 = lisp.intern('RETURN-FROM', 'COMMON-LISP');
G_878 = lisp.intern('TAGBODY', 'COMMON-LISP');
G_885 = lisp.intern('REST', 'COMMON-LISP');
G_893 = lisp.intern('GO', 'COMMON-LISP');
G_900 = lisp.intern('%DEFUN', 'SYSTEM');
G_907 = lisp.intern('%DEFPACKAGE', 'SYSTEM');
G_910 = lisp.intern('%IN-PACKAGE', 'SYSTEM');
G_913 = lisp.intern('REF', 'FFI');
G_916 = lisp.intern('SET', 'FFI');
G_919 = lisp.intern('VAR', 'FFI');
G_922 = lisp.intern('TYPEOF', 'FFI');
G_925 = lisp.intern('NEW', 'FFI');
G_928 = lisp.intern('AGET', 'FFI');
G_931 = lisp.intern('JS-CALL', 'COMPILER');
G_934 = lisp.intern('RECUR', 'COMPILER');
G_937 = lisp.intern('LOOP', 'COMMON-LISP');
G_944 = lisp.intern('MACRO', 'COMPILER');
G_947 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_949 = lisp.intern('<=', 'COMMON-LISP');
G_951 = lisp.intern('FORM', 'COMPILER');
G_957 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');CL_COMPILER_COPY_HIR.lisp_name = 'COPY-HIR'
lisp.setSymbolFunction(G_3, CL_COMPILER_COPY_HIR);
CL_COMPILER_HIR_P.lisp_name = 'HIR-P'
lisp.setSymbolFunction(G_7, CL_COMPILER_HIR_P);
CL_COMPILER_PERCENTMAKE_HIR.lisp_name = '%MAKE-HIR'
lisp.setSymbolFunction(G_12, CL_COMPILER_PERCENTMAKE_HIR);
CL_COMPILER_HIR_OP.lisp_name = 'HIR-OP'
lisp.setSymbolFunction(G_29, CL_COMPILER_HIR_OP);
TMP_35=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_37;
let TMP_36;
let L_STRUCTURE__15;
let L_VALUE__14;
L_VALUE__14=arguments[0];
L_STRUCTURE__15=arguments[1];
TMP_36=lisp.CL_structurep(L_STRUCTURE__15);
if(lisp.values1(TMP_36) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__15,G_31);
}
TMP_37=lisp.CL_structureSet(L_STRUCTURE__15,0,L_VALUE__14);
return TMP_37;
});
lisp.CL_setSymbolFunction(G_34,TMP_35);
TMP_39=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_52;
let TMP_51;
let TMP_49;
let TMP_47;
let L_STORE2__23;
let TMP_46;
let L_GENSYMS0__22;
let TMP_43;
let TMP_40;
let L_ARGS1__20;
let L_G6__18;
let L_G5__17;
L_G5__17=arguments[0];
{
L_G6__18=lisp.values1(L_G5__17);
{
L_ARGS1__20=lisp.values1(L_G6__18);
{
TMP_40=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_41;
let L_X__21;
L_X__21=arguments[0];
TMP_41=lisp.callFunctionWithCallStack(G_42);
return TMP_41;
});
TMP_43=lisp.callFunctionWithCallStack(G_44,TMP_40,L_ARGS1__20);
L_GENSYMS0__22=lisp.values1(TMP_43);
TMP_46=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE2__23=lisp.values1(TMP_46);
TMP_47=lisp.callFunctionWithCallStack(G_48,L_STORE2__23);
TMP_49=lisp.callFunctionWithCallStack(G_50,G_34,L_STORE2__23,L_GENSYMS0__22);
TMP_51=lisp.callFunctionWithCallStack(G_50,G_29,L_GENSYMS0__22);
TMP_52=lisp.CL_values(L_GENSYMS0__22,L_ARGS1__20,TMP_47,TMP_49,TMP_51);
}
}
}
return TMP_52;
});
lisp.CL_put(G_29,G_38,TMP_39);
TMP_54=lisp.CL_symbolFunction(G_34);
lisp.CL_put(G_29,G_53,TMP_54);
CL_COMPILER_HIR_RETURN_VALUE_P.lisp_name = 'HIR-RETURN-VALUE-P'
lisp.setSymbolFunction(G_56, CL_COMPILER_HIR_RETURN_VALUE_P);
TMP_60=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_62;
let TMP_61;
let L_STRUCTURE__29;
let L_VALUE__28;
L_VALUE__28=arguments[0];
L_STRUCTURE__29=arguments[1];
TMP_61=lisp.CL_structurep(L_STRUCTURE__29);
if(lisp.values1(TMP_61) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__29,G_31);
}
TMP_62=lisp.CL_structureSet(L_STRUCTURE__29,1,L_VALUE__28);
return TMP_62;
});
lisp.CL_setSymbolFunction(G_59,TMP_60);
TMP_63=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_71;
let TMP_70;
let TMP_69;
let TMP_68;
let L_STORE10__37;
let TMP_67;
let L_GENSYMS8__36;
let TMP_66;
let TMP_64;
let L_ARGS9__34;
let L_G14__32;
let L_G13__31;
L_G13__31=arguments[0];
{
L_G14__32=lisp.values1(L_G13__31);
{
L_ARGS9__34=lisp.values1(L_G14__32);
{
TMP_64=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_65;
let L_X__35;
L_X__35=arguments[0];
TMP_65=lisp.callFunctionWithCallStack(G_42);
return TMP_65;
});
TMP_66=lisp.callFunctionWithCallStack(G_44,TMP_64,L_ARGS9__34);
L_GENSYMS8__36=lisp.values1(TMP_66);
TMP_67=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE10__37=lisp.values1(TMP_67);
TMP_68=lisp.callFunctionWithCallStack(G_48,L_STORE10__37);
TMP_69=lisp.callFunctionWithCallStack(G_50,G_59,L_STORE10__37,L_GENSYMS8__36);
TMP_70=lisp.callFunctionWithCallStack(G_50,G_56,L_GENSYMS8__36);
TMP_71=lisp.CL_values(L_GENSYMS8__36,L_ARGS9__34,TMP_68,TMP_69,TMP_70);
}
}
}
return TMP_71;
});
lisp.CL_put(G_56,G_38,TMP_63);
TMP_72=lisp.CL_symbolFunction(G_59);
lisp.CL_put(G_56,G_53,TMP_72);
CL_COMPILER_HIR_MULTIPLE_VALUES_P.lisp_name = 'HIR-MULTIPLE-VALUES-P'
lisp.setSymbolFunction(G_74, CL_COMPILER_HIR_MULTIPLE_VALUES_P);
TMP_78=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_80;
let TMP_79;
let L_STRUCTURE__43;
let L_VALUE__42;
L_VALUE__42=arguments[0];
L_STRUCTURE__43=arguments[1];
TMP_79=lisp.CL_structurep(L_STRUCTURE__43);
if(lisp.values1(TMP_79) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__43,G_31);
}
TMP_80=lisp.CL_structureSet(L_STRUCTURE__43,2,L_VALUE__42);
return TMP_80;
});
lisp.CL_setSymbolFunction(G_77,TMP_78);
TMP_81=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_89;
let TMP_88;
let TMP_87;
let TMP_86;
let L_STORE18__51;
let TMP_85;
let L_GENSYMS16__50;
let TMP_84;
let TMP_82;
let L_ARGS17__48;
let L_G22__46;
let L_G21__45;
L_G21__45=arguments[0];
{
L_G22__46=lisp.values1(L_G21__45);
{
L_ARGS17__48=lisp.values1(L_G22__46);
{
TMP_82=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_83;
let L_X__49;
L_X__49=arguments[0];
TMP_83=lisp.callFunctionWithCallStack(G_42);
return TMP_83;
});
TMP_84=lisp.callFunctionWithCallStack(G_44,TMP_82,L_ARGS17__48);
L_GENSYMS16__50=lisp.values1(TMP_84);
TMP_85=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE18__51=lisp.values1(TMP_85);
TMP_86=lisp.callFunctionWithCallStack(G_48,L_STORE18__51);
TMP_87=lisp.callFunctionWithCallStack(G_50,G_77,L_STORE18__51,L_GENSYMS16__50);
TMP_88=lisp.callFunctionWithCallStack(G_50,G_74,L_GENSYMS16__50);
TMP_89=lisp.CL_values(L_GENSYMS16__50,L_ARGS17__48,TMP_86,TMP_87,TMP_88);
}
}
}
return TMP_89;
});
lisp.CL_put(G_74,G_38,TMP_81);
TMP_90=lisp.CL_symbolFunction(G_77);
lisp.CL_put(G_74,G_53,TMP_90);
CL_COMPILER_HIR_RESULT_TYPE.lisp_name = 'HIR-RESULT-TYPE'
lisp.setSymbolFunction(G_92, CL_COMPILER_HIR_RESULT_TYPE);
TMP_96=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_98;
let TMP_97;
let L_STRUCTURE__57;
let L_VALUE__56;
L_VALUE__56=arguments[0];
L_STRUCTURE__57=arguments[1];
TMP_97=lisp.CL_structurep(L_STRUCTURE__57);
if(lisp.values1(TMP_97) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__57,G_31);
}
TMP_98=lisp.CL_structureSet(L_STRUCTURE__57,3,L_VALUE__56);
return TMP_98;
});
lisp.CL_setSymbolFunction(G_95,TMP_96);
TMP_99=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_107;
let TMP_106;
let TMP_105;
let TMP_104;
let L_STORE26__65;
let TMP_103;
let L_GENSYMS24__64;
let TMP_102;
let TMP_100;
let L_ARGS25__62;
let L_G30__60;
let L_G29__59;
L_G29__59=arguments[0];
{
L_G30__60=lisp.values1(L_G29__59);
{
L_ARGS25__62=lisp.values1(L_G30__60);
{
TMP_100=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_101;
let L_X__63;
L_X__63=arguments[0];
TMP_101=lisp.callFunctionWithCallStack(G_42);
return TMP_101;
});
TMP_102=lisp.callFunctionWithCallStack(G_44,TMP_100,L_ARGS25__62);
L_GENSYMS24__64=lisp.values1(TMP_102);
TMP_103=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE26__65=lisp.values1(TMP_103);
TMP_104=lisp.callFunctionWithCallStack(G_48,L_STORE26__65);
TMP_105=lisp.callFunctionWithCallStack(G_50,G_95,L_STORE26__65,L_GENSYMS24__64);
TMP_106=lisp.callFunctionWithCallStack(G_50,G_92,L_GENSYMS24__64);
TMP_107=lisp.CL_values(L_GENSYMS24__64,L_ARGS25__62,TMP_104,TMP_105,TMP_106);
}
}
}
return TMP_107;
});
lisp.CL_put(G_92,G_38,TMP_99);
TMP_108=lisp.CL_symbolFunction(G_95);
lisp.CL_put(G_92,G_53,TMP_108);
CL_COMPILER_HIR_POSITION.lisp_name = 'HIR-POSITION'
lisp.setSymbolFunction(G_110, CL_COMPILER_HIR_POSITION);
TMP_114=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_116;
let TMP_115;
let L_STRUCTURE__71;
let L_VALUE__70;
L_VALUE__70=arguments[0];
L_STRUCTURE__71=arguments[1];
TMP_115=lisp.CL_structurep(L_STRUCTURE__71);
if(lisp.values1(TMP_115) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__71,G_31);
}
TMP_116=lisp.CL_structureSet(L_STRUCTURE__71,4,L_VALUE__70);
return TMP_116;
});
lisp.CL_setSymbolFunction(G_113,TMP_114);
TMP_117=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_125;
let TMP_124;
let TMP_123;
let TMP_122;
let L_STORE34__79;
let TMP_121;
let L_GENSYMS32__78;
let TMP_120;
let TMP_118;
let L_ARGS33__76;
let L_G38__74;
let L_G37__73;
L_G37__73=arguments[0];
{
L_G38__74=lisp.values1(L_G37__73);
{
L_ARGS33__76=lisp.values1(L_G38__74);
{
TMP_118=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_119;
let L_X__77;
L_X__77=arguments[0];
TMP_119=lisp.callFunctionWithCallStack(G_42);
return TMP_119;
});
TMP_120=lisp.callFunctionWithCallStack(G_44,TMP_118,L_ARGS33__76);
L_GENSYMS32__78=lisp.values1(TMP_120);
TMP_121=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE34__79=lisp.values1(TMP_121);
TMP_122=lisp.callFunctionWithCallStack(G_48,L_STORE34__79);
TMP_123=lisp.callFunctionWithCallStack(G_50,G_113,L_STORE34__79,L_GENSYMS32__78);
TMP_124=lisp.callFunctionWithCallStack(G_50,G_110,L_GENSYMS32__78);
TMP_125=lisp.CL_values(L_GENSYMS32__78,L_ARGS33__76,TMP_122,TMP_123,TMP_124);
}
}
}
return TMP_125;
});
lisp.CL_put(G_110,G_38,TMP_117);
TMP_126=lisp.CL_symbolFunction(G_113);
lisp.CL_put(G_110,G_53,TMP_126);
CL_COMPILER_HIR_ARGS.lisp_name = 'HIR-ARGS'
lisp.setSymbolFunction(G_128, CL_COMPILER_HIR_ARGS);
TMP_132=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_134;
let TMP_133;
let L_STRUCTURE__85;
let L_VALUE__84;
L_VALUE__84=arguments[0];
L_STRUCTURE__85=arguments[1];
TMP_133=lisp.CL_structurep(L_STRUCTURE__85);
if(lisp.values1(TMP_133) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__85,G_31);
}
TMP_134=lisp.CL_structureSet(L_STRUCTURE__85,5,L_VALUE__84);
return TMP_134;
});
lisp.CL_setSymbolFunction(G_131,TMP_132);
TMP_135=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_143;
let TMP_142;
let TMP_141;
let TMP_140;
let L_STORE42__93;
let TMP_139;
let L_GENSYMS40__92;
let TMP_138;
let TMP_136;
let L_ARGS41__90;
let L_G46__88;
let L_G45__87;
L_G45__87=arguments[0];
{
L_G46__88=lisp.values1(L_G45__87);
{
L_ARGS41__90=lisp.values1(L_G46__88);
{
TMP_136=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_137;
let L_X__91;
L_X__91=arguments[0];
TMP_137=lisp.callFunctionWithCallStack(G_42);
return TMP_137;
});
TMP_138=lisp.callFunctionWithCallStack(G_44,TMP_136,L_ARGS41__90);
L_GENSYMS40__92=lisp.values1(TMP_138);
TMP_139=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE42__93=lisp.values1(TMP_139);
TMP_140=lisp.callFunctionWithCallStack(G_48,L_STORE42__93);
TMP_141=lisp.callFunctionWithCallStack(G_50,G_131,L_STORE42__93,L_GENSYMS40__92);
TMP_142=lisp.callFunctionWithCallStack(G_50,G_128,L_GENSYMS40__92);
TMP_143=lisp.CL_values(L_GENSYMS40__92,L_ARGS41__90,TMP_140,TMP_141,TMP_142);
}
}
}
return TMP_143;
});
lisp.CL_put(G_128,G_38,TMP_135);
TMP_144=lisp.CL_symbolFunction(G_131);
lisp.CL_put(G_128,G_53,TMP_144);
{
TMP_145=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_154;
let TMP_153;
let TMP_152;
let TMP_151;
let TMP_150;
let TMP_149;
let TMP_148;
let L_STREAM__99;
let L_STRUCTURE__98;
L_STRUCTURE__98=arguments[0];
L_STREAM__99=arguments[1];
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([72, 73, 82])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_147,G_13,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_148=lisp.CL_structureRef(L_STRUCTURE__98,0);
lisp.callFunctionWithCallStack(G_147,TMP_148,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_147,G_15,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_149=lisp.CL_structureRef(L_STRUCTURE__98,1);
lisp.callFunctionWithCallStack(G_147,TMP_149,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_147,G_17,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_150=lisp.CL_structureRef(L_STRUCTURE__98,2);
lisp.callFunctionWithCallStack(G_147,TMP_150,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_147,G_19,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_151=lisp.CL_structureRef(L_STRUCTURE__98,3);
lisp.callFunctionWithCallStack(G_147,TMP_151,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_147,G_22,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_152=lisp.CL_structureRef(L_STRUCTURE__98,4);
lisp.callFunctionWithCallStack(G_147,TMP_152,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
lisp.callFunctionWithCallStack(G_147,G_24,L_STREAM__99);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__99);
TMP_153=lisp.CL_structureRef(L_STRUCTURE__98,5);
lisp.callFunctionWithCallStack(G_147,TMP_153,L_STREAM__99);
TMP_154=lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([41])),L_STREAM__99);
return TMP_154;
});
L_G50__100=lisp.values1(TMP_145);
{
L_G51__101=lisp.values1(L_G50__100);
lisp.CL_put(G_8,G_155,L_G51__101);
}
}
CL_COMPILER_HIR_ARG1.lisp_name = 'HIR-ARG1'
lisp.setSymbolFunction(G_157, CL_COMPILER_HIR_ARG1);
CL_COMPILER_HIR_ARG2.lisp_name = 'HIR-ARG2'
lisp.setSymbolFunction(G_162, CL_COMPILER_HIR_ARG2);
CL_COMPILER_HIR_ARG3.lisp_name = 'HIR-ARG3'
lisp.setSymbolFunction(G_167, CL_COMPILER_HIR_ARG3);
TMP_172=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_174;
let L_G61__115;
let L_G60__114;
let L_G58__112;
let L_G57__111;
let TMP_173;
let L_HIR__109;
let L_VALUE__108;
L_VALUE__108=arguments[0];
L_HIR__109=arguments[1];
{
TMP_173=G_128.func(L_HIR__109);
L_G57__111=lisp.values1(TMP_173);
L_G58__112=lisp.values1(L_VALUE__108);
{
L_G60__114=lisp.values1(L_G57__111);
L_G61__115=lisp.values1(L_G58__112);
TMP_174=lisp.callFunctionWithCallStack(G_175,0,L_G60__114,L_G61__115);
}
}
return TMP_174;
});
lisp.CL_setSymbolFunction(G_171,TMP_172);
TMP_176=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_184;
let TMP_183;
let TMP_182;
let TMP_181;
let L_STORE54__122;
let TMP_180;
let L_GENSYMS52__121;
let TMP_179;
let TMP_177;
let L_ARGS53__119;
let L_G63__117;
let L_G62__116;
L_G62__116=arguments[0];
{
L_G63__117=lisp.values1(L_G62__116);
{
L_ARGS53__119=lisp.values1(L_G63__117);
{
TMP_177=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_178;
let L_X__120;
L_X__120=arguments[0];
TMP_178=lisp.callFunctionWithCallStack(G_42);
return TMP_178;
});
TMP_179=lisp.callFunctionWithCallStack(G_44,TMP_177,L_ARGS53__119);
L_GENSYMS52__121=lisp.values1(TMP_179);
TMP_180=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE54__122=lisp.values1(TMP_180);
TMP_181=lisp.callFunctionWithCallStack(G_48,L_STORE54__122);
TMP_182=lisp.callFunctionWithCallStack(G_50,G_171,L_STORE54__122,L_GENSYMS52__121);
TMP_183=lisp.callFunctionWithCallStack(G_50,G_157,L_GENSYMS52__121);
TMP_184=lisp.CL_values(L_GENSYMS52__121,L_ARGS53__119,TMP_181,TMP_182,TMP_183);
}
}
}
return TMP_184;
});
lisp.CL_put(G_157,G_38,TMP_176);
TMP_185=lisp.CL_symbolFunction(G_171);
lisp.CL_put(G_157,G_53,TMP_185);
TMP_187=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_189;
let L_G74__132;
let L_G73__131;
let L_G71__129;
let L_G70__128;
let TMP_188;
let L_HIR__126;
let L_VALUE__125;
L_VALUE__125=arguments[0];
L_HIR__126=arguments[1];
{
TMP_188=G_128.func(L_HIR__126);
L_G70__128=lisp.values1(TMP_188);
L_G71__129=lisp.values1(L_VALUE__125);
{
L_G73__131=lisp.values1(L_G70__128);
L_G74__132=lisp.values1(L_G71__129);
TMP_189=lisp.callFunctionWithCallStack(G_175,1,L_G73__131,L_G74__132);
}
}
return TMP_189;
});
lisp.CL_setSymbolFunction(G_186,TMP_187);
TMP_190=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_198;
let TMP_197;
let TMP_196;
let TMP_195;
let L_STORE67__139;
let TMP_194;
let L_GENSYMS65__138;
let TMP_193;
let TMP_191;
let L_ARGS66__136;
let L_G76__134;
let L_G75__133;
L_G75__133=arguments[0];
{
L_G76__134=lisp.values1(L_G75__133);
{
L_ARGS66__136=lisp.values1(L_G76__134);
{
TMP_191=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_192;
let L_X__137;
L_X__137=arguments[0];
TMP_192=lisp.callFunctionWithCallStack(G_42);
return TMP_192;
});
TMP_193=lisp.callFunctionWithCallStack(G_44,TMP_191,L_ARGS66__136);
L_GENSYMS65__138=lisp.values1(TMP_193);
TMP_194=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE67__139=lisp.values1(TMP_194);
TMP_195=lisp.callFunctionWithCallStack(G_48,L_STORE67__139);
TMP_196=lisp.callFunctionWithCallStack(G_50,G_186,L_STORE67__139,L_GENSYMS65__138);
TMP_197=lisp.callFunctionWithCallStack(G_50,G_162,L_GENSYMS65__138);
TMP_198=lisp.CL_values(L_GENSYMS65__138,L_ARGS66__136,TMP_195,TMP_196,TMP_197);
}
}
}
return TMP_198;
});
lisp.CL_put(G_162,G_38,TMP_190);
TMP_199=lisp.CL_symbolFunction(G_186);
lisp.CL_put(G_162,G_53,TMP_199);
TMP_201=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_203;
let L_G87__149;
let L_G86__148;
let L_G84__146;
let L_G83__145;
let TMP_202;
let L_HIR__143;
let L_VALUE__142;
L_VALUE__142=arguments[0];
L_HIR__143=arguments[1];
{
TMP_202=G_128.func(L_HIR__143);
L_G83__145=lisp.values1(TMP_202);
L_G84__146=lisp.values1(L_VALUE__142);
{
L_G86__148=lisp.values1(L_G83__145);
L_G87__149=lisp.values1(L_G84__146);
TMP_203=lisp.callFunctionWithCallStack(G_175,2,L_G86__148,L_G87__149);
}
}
return TMP_203;
});
lisp.CL_setSymbolFunction(G_200,TMP_201);
TMP_204=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_212;
let TMP_211;
let TMP_210;
let TMP_209;
let L_STORE80__156;
let TMP_208;
let L_GENSYMS78__155;
let TMP_207;
let TMP_205;
let L_ARGS79__153;
let L_G89__151;
let L_G88__150;
L_G88__150=arguments[0];
{
L_G89__151=lisp.values1(L_G88__150);
{
L_ARGS79__153=lisp.values1(L_G89__151);
{
TMP_205=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_206;
let L_X__154;
L_X__154=arguments[0];
TMP_206=lisp.callFunctionWithCallStack(G_42);
return TMP_206;
});
TMP_207=lisp.callFunctionWithCallStack(G_44,TMP_205,L_ARGS79__153);
L_GENSYMS78__155=lisp.values1(TMP_207);
TMP_208=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE80__156=lisp.values1(TMP_208);
TMP_209=lisp.callFunctionWithCallStack(G_48,L_STORE80__156);
TMP_210=lisp.callFunctionWithCallStack(G_50,G_200,L_STORE80__156,L_GENSYMS78__155);
TMP_211=lisp.callFunctionWithCallStack(G_50,G_167,L_GENSYMS78__155);
TMP_212=lisp.CL_values(L_GENSYMS78__155,L_ARGS79__153,TMP_209,TMP_210,TMP_211);
}
}
}
return TMP_212;
});
lisp.CL_put(G_167,G_38,TMP_204);
TMP_213=lisp.CL_symbolFunction(G_200);
lisp.CL_put(G_167,G_53,TMP_213);
CL_COMPILER_MAKE_HIR.lisp_name = 'MAKE-HIR'
lisp.setSymbolFunction(G_215, CL_COMPILER_MAKE_HIR);
CL_COMPILER_REMAKE_HIR.lisp_name = 'REMAKE-HIR'
lisp.setSymbolFunction(G_219, CL_COMPILER_REMAKE_HIR);
CL_COMPILER_LAMBDA_HIR_NAME.lisp_name = 'LAMBDA-HIR-NAME'
lisp.setSymbolFunction(G_226, CL_COMPILER_LAMBDA_HIR_NAME);
CL_COMPILER_LAMBDA_HIR_PARSED_LAMBDA_LIST.lisp_name = 'LAMBDA-HIR-PARSED-LAMBDA-LIST'
lisp.setSymbolFunction(G_229, CL_COMPILER_LAMBDA_HIR_PARSED_LAMBDA_LIST);
CL_COMPILER_LAMBDA_HIR_BODY.lisp_name = 'LAMBDA-HIR-BODY'
lisp.setSymbolFunction(G_232, CL_COMPILER_LAMBDA_HIR_BODY);
CL_COMPILER_COPY_PARSED_LAMBDA_LIST.lisp_name = 'COPY-PARSED-LAMBDA-LIST'
lisp.setSymbolFunction(G_235, CL_COMPILER_COPY_PARSED_LAMBDA_LIST);
CL_COMPILER_PARSED_LAMBDA_LIST_P.lisp_name = 'PARSED-LAMBDA-LIST-P'
lisp.setSymbolFunction(G_238, CL_COMPILER_PARSED_LAMBDA_LIST_P);
CL_COMPILER_MAKE_PARSED_LAMBDA_LIST.lisp_name = 'MAKE-PARSED-LAMBDA-LIST'
lisp.setSymbolFunction(G_242, CL_COMPILER_MAKE_PARSED_LAMBDA_LIST);
CL_COMPILER_PARSED_LAMBDA_LIST_VARS.lisp_name = 'PARSED-LAMBDA-LIST-VARS'
lisp.setSymbolFunction(G_260, CL_COMPILER_PARSED_LAMBDA_LIST_VARS);
TMP_264=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_266;
let TMP_265;
let L_STRUCTURE__189;
let L_VALUE__188;
L_VALUE__188=arguments[0];
L_STRUCTURE__189=arguments[1];
TMP_265=lisp.CL_structurep(L_STRUCTURE__189);
if(lisp.values1(TMP_265) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__189,G_31);
}
TMP_266=lisp.CL_structureSet(L_STRUCTURE__189,0,L_VALUE__188);
return TMP_266;
});
lisp.CL_setSymbolFunction(G_263,TMP_264);
TMP_267=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_275;
let TMP_274;
let TMP_273;
let TMP_272;
let L_STORE94__197;
let TMP_271;
let L_GENSYMS92__196;
let TMP_270;
let TMP_268;
let L_ARGS93__194;
let L_G98__192;
let L_G97__191;
L_G97__191=arguments[0];
{
L_G98__192=lisp.values1(L_G97__191);
{
L_ARGS93__194=lisp.values1(L_G98__192);
{
TMP_268=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_269;
let L_X__195;
L_X__195=arguments[0];
TMP_269=lisp.callFunctionWithCallStack(G_42);
return TMP_269;
});
TMP_270=lisp.callFunctionWithCallStack(G_44,TMP_268,L_ARGS93__194);
L_GENSYMS92__196=lisp.values1(TMP_270);
TMP_271=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE94__197=lisp.values1(TMP_271);
TMP_272=lisp.callFunctionWithCallStack(G_48,L_STORE94__197);
TMP_273=lisp.callFunctionWithCallStack(G_50,G_263,L_STORE94__197,L_GENSYMS92__196);
TMP_274=lisp.callFunctionWithCallStack(G_50,G_260,L_GENSYMS92__196);
TMP_275=lisp.CL_values(L_GENSYMS92__196,L_ARGS93__194,TMP_272,TMP_273,TMP_274);
}
}
}
return TMP_275;
});
lisp.CL_put(G_260,G_38,TMP_267);
TMP_276=lisp.CL_symbolFunction(G_263);
lisp.CL_put(G_260,G_53,TMP_276);
CL_COMPILER_PARSED_LAMBDA_LIST_REST_VAR.lisp_name = 'PARSED-LAMBDA-LIST-REST-VAR'
lisp.setSymbolFunction(G_278, CL_COMPILER_PARSED_LAMBDA_LIST_REST_VAR);
TMP_282=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_284;
let TMP_283;
let L_STRUCTURE__203;
let L_VALUE__202;
L_VALUE__202=arguments[0];
L_STRUCTURE__203=arguments[1];
TMP_283=lisp.CL_structurep(L_STRUCTURE__203);
if(lisp.values1(TMP_283) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__203,G_31);
}
TMP_284=lisp.CL_structureSet(L_STRUCTURE__203,1,L_VALUE__202);
return TMP_284;
});
lisp.CL_setSymbolFunction(G_281,TMP_282);
TMP_285=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_293;
let TMP_292;
let TMP_291;
let TMP_290;
let L_STORE102__211;
let TMP_289;
let L_GENSYMS100__210;
let TMP_288;
let TMP_286;
let L_ARGS101__208;
let L_G106__206;
let L_G105__205;
L_G105__205=arguments[0];
{
L_G106__206=lisp.values1(L_G105__205);
{
L_ARGS101__208=lisp.values1(L_G106__206);
{
TMP_286=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_287;
let L_X__209;
L_X__209=arguments[0];
TMP_287=lisp.callFunctionWithCallStack(G_42);
return TMP_287;
});
TMP_288=lisp.callFunctionWithCallStack(G_44,TMP_286,L_ARGS101__208);
L_GENSYMS100__210=lisp.values1(TMP_288);
TMP_289=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE102__211=lisp.values1(TMP_289);
TMP_290=lisp.callFunctionWithCallStack(G_48,L_STORE102__211);
TMP_291=lisp.callFunctionWithCallStack(G_50,G_281,L_STORE102__211,L_GENSYMS100__210);
TMP_292=lisp.callFunctionWithCallStack(G_50,G_278,L_GENSYMS100__210);
TMP_293=lisp.CL_values(L_GENSYMS100__210,L_ARGS101__208,TMP_290,TMP_291,TMP_292);
}
}
}
return TMP_293;
});
lisp.CL_put(G_278,G_38,TMP_285);
TMP_294=lisp.CL_symbolFunction(G_281);
lisp.CL_put(G_278,G_53,TMP_294);
CL_COMPILER_PARSED_LAMBDA_LIST_OPTIONALS.lisp_name = 'PARSED-LAMBDA-LIST-OPTIONALS'
lisp.setSymbolFunction(G_296, CL_COMPILER_PARSED_LAMBDA_LIST_OPTIONALS);
TMP_300=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_302;
let TMP_301;
let L_STRUCTURE__217;
let L_VALUE__216;
L_VALUE__216=arguments[0];
L_STRUCTURE__217=arguments[1];
TMP_301=lisp.CL_structurep(L_STRUCTURE__217);
if(lisp.values1(TMP_301) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__217,G_31);
}
TMP_302=lisp.CL_structureSet(L_STRUCTURE__217,2,L_VALUE__216);
return TMP_302;
});
lisp.CL_setSymbolFunction(G_299,TMP_300);
TMP_303=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_311;
let TMP_310;
let TMP_309;
let TMP_308;
let L_STORE110__225;
let TMP_307;
let L_GENSYMS108__224;
let TMP_306;
let TMP_304;
let L_ARGS109__222;
let L_G114__220;
let L_G113__219;
L_G113__219=arguments[0];
{
L_G114__220=lisp.values1(L_G113__219);
{
L_ARGS109__222=lisp.values1(L_G114__220);
{
TMP_304=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_305;
let L_X__223;
L_X__223=arguments[0];
TMP_305=lisp.callFunctionWithCallStack(G_42);
return TMP_305;
});
TMP_306=lisp.callFunctionWithCallStack(G_44,TMP_304,L_ARGS109__222);
L_GENSYMS108__224=lisp.values1(TMP_306);
TMP_307=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE110__225=lisp.values1(TMP_307);
TMP_308=lisp.callFunctionWithCallStack(G_48,L_STORE110__225);
TMP_309=lisp.callFunctionWithCallStack(G_50,G_299,L_STORE110__225,L_GENSYMS108__224);
TMP_310=lisp.callFunctionWithCallStack(G_50,G_296,L_GENSYMS108__224);
TMP_311=lisp.CL_values(L_GENSYMS108__224,L_ARGS109__222,TMP_308,TMP_309,TMP_310);
}
}
}
return TMP_311;
});
lisp.CL_put(G_296,G_38,TMP_303);
TMP_312=lisp.CL_symbolFunction(G_299);
lisp.CL_put(G_296,G_53,TMP_312);
CL_COMPILER_PARSED_LAMBDA_LIST_KEYS.lisp_name = 'PARSED-LAMBDA-LIST-KEYS'
lisp.setSymbolFunction(G_314, CL_COMPILER_PARSED_LAMBDA_LIST_KEYS);
TMP_318=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_320;
let TMP_319;
let L_STRUCTURE__231;
let L_VALUE__230;
L_VALUE__230=arguments[0];
L_STRUCTURE__231=arguments[1];
TMP_319=lisp.CL_structurep(L_STRUCTURE__231);
if(lisp.values1(TMP_319) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__231,G_31);
}
TMP_320=lisp.CL_structureSet(L_STRUCTURE__231,3,L_VALUE__230);
return TMP_320;
});
lisp.CL_setSymbolFunction(G_317,TMP_318);
TMP_321=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_329;
let TMP_328;
let TMP_327;
let TMP_326;
let L_STORE118__239;
let TMP_325;
let L_GENSYMS116__238;
let TMP_324;
let TMP_322;
let L_ARGS117__236;
let L_G122__234;
let L_G121__233;
L_G121__233=arguments[0];
{
L_G122__234=lisp.values1(L_G121__233);
{
L_ARGS117__236=lisp.values1(L_G122__234);
{
TMP_322=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_323;
let L_X__237;
L_X__237=arguments[0];
TMP_323=lisp.callFunctionWithCallStack(G_42);
return TMP_323;
});
TMP_324=lisp.callFunctionWithCallStack(G_44,TMP_322,L_ARGS117__236);
L_GENSYMS116__238=lisp.values1(TMP_324);
TMP_325=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE118__239=lisp.values1(TMP_325);
TMP_326=lisp.callFunctionWithCallStack(G_48,L_STORE118__239);
TMP_327=lisp.callFunctionWithCallStack(G_50,G_317,L_STORE118__239,L_GENSYMS116__238);
TMP_328=lisp.callFunctionWithCallStack(G_50,G_314,L_GENSYMS116__238);
TMP_329=lisp.CL_values(L_GENSYMS116__238,L_ARGS117__236,TMP_326,TMP_327,TMP_328);
}
}
}
return TMP_329;
});
lisp.CL_put(G_314,G_38,TMP_321);
TMP_330=lisp.CL_symbolFunction(G_317);
lisp.CL_put(G_314,G_53,TMP_330);
CL_COMPILER_PARSED_LAMBDA_LIST_MIN.lisp_name = 'PARSED-LAMBDA-LIST-MIN'
lisp.setSymbolFunction(G_332, CL_COMPILER_PARSED_LAMBDA_LIST_MIN);
TMP_336=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_338;
let TMP_337;
let L_STRUCTURE__245;
let L_VALUE__244;
L_VALUE__244=arguments[0];
L_STRUCTURE__245=arguments[1];
TMP_337=lisp.CL_structurep(L_STRUCTURE__245);
if(lisp.values1(TMP_337) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__245,G_31);
}
TMP_338=lisp.CL_structureSet(L_STRUCTURE__245,4,L_VALUE__244);
return TMP_338;
});
lisp.CL_setSymbolFunction(G_335,TMP_336);
TMP_339=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_347;
let TMP_346;
let TMP_345;
let TMP_344;
let L_STORE126__253;
let TMP_343;
let L_GENSYMS124__252;
let TMP_342;
let TMP_340;
let L_ARGS125__250;
let L_G130__248;
let L_G129__247;
L_G129__247=arguments[0];
{
L_G130__248=lisp.values1(L_G129__247);
{
L_ARGS125__250=lisp.values1(L_G130__248);
{
TMP_340=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_341;
let L_X__251;
L_X__251=arguments[0];
TMP_341=lisp.callFunctionWithCallStack(G_42);
return TMP_341;
});
TMP_342=lisp.callFunctionWithCallStack(G_44,TMP_340,L_ARGS125__250);
L_GENSYMS124__252=lisp.values1(TMP_342);
TMP_343=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE126__253=lisp.values1(TMP_343);
TMP_344=lisp.callFunctionWithCallStack(G_48,L_STORE126__253);
TMP_345=lisp.callFunctionWithCallStack(G_50,G_335,L_STORE126__253,L_GENSYMS124__252);
TMP_346=lisp.callFunctionWithCallStack(G_50,G_332,L_GENSYMS124__252);
TMP_347=lisp.CL_values(L_GENSYMS124__252,L_ARGS125__250,TMP_344,TMP_345,TMP_346);
}
}
}
return TMP_347;
});
lisp.CL_put(G_332,G_38,TMP_339);
TMP_348=lisp.CL_symbolFunction(G_335);
lisp.CL_put(G_332,G_53,TMP_348);
CL_COMPILER_PARSED_LAMBDA_LIST_MAX.lisp_name = 'PARSED-LAMBDA-LIST-MAX'
lisp.setSymbolFunction(G_350, CL_COMPILER_PARSED_LAMBDA_LIST_MAX);
TMP_354=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_356;
let TMP_355;
let L_STRUCTURE__259;
let L_VALUE__258;
L_VALUE__258=arguments[0];
L_STRUCTURE__259=arguments[1];
TMP_355=lisp.CL_structurep(L_STRUCTURE__259);
if(lisp.values1(TMP_355) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__259,G_31);
}
TMP_356=lisp.CL_structureSet(L_STRUCTURE__259,5,L_VALUE__258);
return TMP_356;
});
lisp.CL_setSymbolFunction(G_353,TMP_354);
TMP_357=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_365;
let TMP_364;
let TMP_363;
let TMP_362;
let L_STORE134__267;
let TMP_361;
let L_GENSYMS132__266;
let TMP_360;
let TMP_358;
let L_ARGS133__264;
let L_G138__262;
let L_G137__261;
L_G137__261=arguments[0];
{
L_G138__262=lisp.values1(L_G137__261);
{
L_ARGS133__264=lisp.values1(L_G138__262);
{
TMP_358=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_359;
let L_X__265;
L_X__265=arguments[0];
TMP_359=lisp.callFunctionWithCallStack(G_42);
return TMP_359;
});
TMP_360=lisp.callFunctionWithCallStack(G_44,TMP_358,L_ARGS133__264);
L_GENSYMS132__266=lisp.values1(TMP_360);
TMP_361=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE134__267=lisp.values1(TMP_361);
TMP_362=lisp.callFunctionWithCallStack(G_48,L_STORE134__267);
TMP_363=lisp.callFunctionWithCallStack(G_50,G_353,L_STORE134__267,L_GENSYMS132__266);
TMP_364=lisp.callFunctionWithCallStack(G_50,G_350,L_GENSYMS132__266);
TMP_365=lisp.CL_values(L_GENSYMS132__266,L_ARGS133__264,TMP_362,TMP_363,TMP_364);
}
}
}
return TMP_365;
});
lisp.CL_put(G_350,G_38,TMP_357);
TMP_366=lisp.CL_symbolFunction(G_353);
lisp.CL_put(G_350,G_53,TMP_366);
CL_COMPILER_PARSED_LAMBDA_LIST_ALLOW_OTHER_KEYS.lisp_name = 'PARSED-LAMBDA-LIST-ALLOW-OTHER-KEYS'
lisp.setSymbolFunction(G_368, CL_COMPILER_PARSED_LAMBDA_LIST_ALLOW_OTHER_KEYS);
TMP_372=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_374;
let TMP_373;
let L_STRUCTURE__273;
let L_VALUE__272;
L_VALUE__272=arguments[0];
L_STRUCTURE__273=arguments[1];
TMP_373=lisp.CL_structurep(L_STRUCTURE__273);
if(lisp.values1(TMP_373) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__273,G_31);
}
TMP_374=lisp.CL_structureSet(L_STRUCTURE__273,6,L_VALUE__272);
return TMP_374;
});
lisp.CL_setSymbolFunction(G_371,TMP_372);
TMP_375=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_383;
let TMP_382;
let TMP_381;
let TMP_380;
let L_STORE142__281;
let TMP_379;
let L_GENSYMS140__280;
let TMP_378;
let TMP_376;
let L_ARGS141__278;
let L_G146__276;
let L_G145__275;
L_G145__275=arguments[0];
{
L_G146__276=lisp.values1(L_G145__275);
{
L_ARGS141__278=lisp.values1(L_G146__276);
{
TMP_376=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_377;
let L_X__279;
L_X__279=arguments[0];
TMP_377=lisp.callFunctionWithCallStack(G_42);
return TMP_377;
});
TMP_378=lisp.callFunctionWithCallStack(G_44,TMP_376,L_ARGS141__278);
L_GENSYMS140__280=lisp.values1(TMP_378);
TMP_379=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE142__281=lisp.values1(TMP_379);
TMP_380=lisp.callFunctionWithCallStack(G_48,L_STORE142__281);
TMP_381=lisp.callFunctionWithCallStack(G_50,G_371,L_STORE142__281,L_GENSYMS140__280);
TMP_382=lisp.callFunctionWithCallStack(G_50,G_368,L_GENSYMS140__280);
TMP_383=lisp.CL_values(L_GENSYMS140__280,L_ARGS141__278,TMP_380,TMP_381,TMP_382);
}
}
}
return TMP_383;
});
lisp.CL_put(G_368,G_38,TMP_375);
TMP_384=lisp.CL_symbolFunction(G_371);
lisp.CL_put(G_368,G_53,TMP_384);
{
TMP_385=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_393;
let TMP_392;
let TMP_391;
let TMP_390;
let TMP_389;
let TMP_388;
let TMP_387;
let TMP_386;
let L_STREAM__287;
let L_STRUCTURE__286;
L_STRUCTURE__286=arguments[0];
L_STREAM__287=arguments[1];
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([80, 65, 82, 83, 69, 68, 45, 76, 65, 77, 66, 68, 65, 45, 76, 73, 83, 84])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_147,G_243,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
TMP_386=lisp.CL_structureRef(L_STRUCTURE__286,0);
lisp.callFunctionWithCallStack(G_147,TMP_386,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_147,G_245,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
TMP_387=lisp.CL_structureRef(L_STRUCTURE__286,1);
lisp.callFunctionWithCallStack(G_147,TMP_387,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_147,G_247,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
TMP_388=lisp.CL_structureRef(L_STRUCTURE__286,2);
lisp.callFunctionWithCallStack(G_147,TMP_388,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_147,G_249,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
TMP_389=lisp.CL_structureRef(L_STRUCTURE__286,3);
lisp.callFunctionWithCallStack(G_147,TMP_389,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_147,G_251,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
TMP_390=lisp.CL_structureRef(L_STRUCTURE__286,4);
lisp.callFunctionWithCallStack(G_147,TMP_390,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_147,G_253,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
TMP_391=lisp.CL_structureRef(L_STRUCTURE__286,5);
lisp.callFunctionWithCallStack(G_147,TMP_391,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
lisp.callFunctionWithCallStack(G_147,G_255,L_STREAM__287);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__287);
TMP_392=lisp.CL_structureRef(L_STRUCTURE__286,6);
lisp.callFunctionWithCallStack(G_147,TMP_392,L_STREAM__287);
TMP_393=lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([41])),L_STREAM__287);
return TMP_393;
});
L_G150__288=lisp.values1(TMP_385);
{
L_G151__289=lisp.values1(L_G150__288);
lisp.CL_put(G_239,G_155,L_G151__289);
}
}
CL_COMPILER_COLLECT_VARIABLES.lisp_name = 'COLLECT-VARIABLES'
lisp.setSymbolFunction(G_395, CL_COMPILER_COLLECT_VARIABLES);
CL_COMPILER_COPY_BINDING.lisp_name = 'COPY-BINDING'
lisp.setSymbolFunction(G_419, CL_COMPILER_COPY_BINDING);
CL_COMPILER_BINDING_P.lisp_name = 'BINDING-P'
lisp.setSymbolFunction(G_422, CL_COMPILER_BINDING_P);
CL_COMPILER_MAKE_BINDING.lisp_name = 'MAKE-BINDING'
lisp.setSymbolFunction(G_426, CL_COMPILER_MAKE_BINDING);
CL_COMPILER_BINDING_NAME.lisp_name = 'BINDING-NAME'
lisp.setSymbolFunction(G_446, CL_COMPILER_BINDING_NAME);
TMP_450=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_452;
let TMP_451;
let L_STRUCTURE__308;
let L_VALUE__307;
L_VALUE__307=arguments[0];
L_STRUCTURE__308=arguments[1];
TMP_451=lisp.CL_structurep(L_STRUCTURE__308);
if(lisp.values1(TMP_451) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__308,G_31);
}
TMP_452=lisp.CL_structureSet(L_STRUCTURE__308,0,L_VALUE__307);
return TMP_452;
});
lisp.CL_setSymbolFunction(G_449,TMP_450);
TMP_453=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_461;
let TMP_460;
let TMP_459;
let TMP_458;
let L_STORE154__316;
let TMP_457;
let L_GENSYMS152__315;
let TMP_456;
let TMP_454;
let L_ARGS153__313;
let L_G158__311;
let L_G157__310;
L_G157__310=arguments[0];
{
L_G158__311=lisp.values1(L_G157__310);
{
L_ARGS153__313=lisp.values1(L_G158__311);
{
TMP_454=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_455;
let L_X__314;
L_X__314=arguments[0];
TMP_455=lisp.callFunctionWithCallStack(G_42);
return TMP_455;
});
TMP_456=lisp.callFunctionWithCallStack(G_44,TMP_454,L_ARGS153__313);
L_GENSYMS152__315=lisp.values1(TMP_456);
TMP_457=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE154__316=lisp.values1(TMP_457);
TMP_458=lisp.callFunctionWithCallStack(G_48,L_STORE154__316);
TMP_459=lisp.callFunctionWithCallStack(G_50,G_449,L_STORE154__316,L_GENSYMS152__315);
TMP_460=lisp.callFunctionWithCallStack(G_50,G_446,L_GENSYMS152__315);
TMP_461=lisp.CL_values(L_GENSYMS152__315,L_ARGS153__313,TMP_458,TMP_459,TMP_460);
}
}
}
return TMP_461;
});
lisp.CL_put(G_446,G_38,TMP_453);
TMP_462=lisp.CL_symbolFunction(G_449);
lisp.CL_put(G_446,G_53,TMP_462);
CL_COMPILER_BINDING_KIND.lisp_name = 'BINDING-KIND'
lisp.setSymbolFunction(G_464, CL_COMPILER_BINDING_KIND);
TMP_468=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_470;
let TMP_469;
let L_STRUCTURE__322;
let L_VALUE__321;
L_VALUE__321=arguments[0];
L_STRUCTURE__322=arguments[1];
TMP_469=lisp.CL_structurep(L_STRUCTURE__322);
if(lisp.values1(TMP_469) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__322,G_31);
}
TMP_470=lisp.CL_structureSet(L_STRUCTURE__322,1,L_VALUE__321);
return TMP_470;
});
lisp.CL_setSymbolFunction(G_467,TMP_468);
TMP_471=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_479;
let TMP_478;
let TMP_477;
let TMP_476;
let L_STORE162__330;
let TMP_475;
let L_GENSYMS160__329;
let TMP_474;
let TMP_472;
let L_ARGS161__327;
let L_G166__325;
let L_G165__324;
L_G165__324=arguments[0];
{
L_G166__325=lisp.values1(L_G165__324);
{
L_ARGS161__327=lisp.values1(L_G166__325);
{
TMP_472=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_473;
let L_X__328;
L_X__328=arguments[0];
TMP_473=lisp.callFunctionWithCallStack(G_42);
return TMP_473;
});
TMP_474=lisp.callFunctionWithCallStack(G_44,TMP_472,L_ARGS161__327);
L_GENSYMS160__329=lisp.values1(TMP_474);
TMP_475=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE162__330=lisp.values1(TMP_475);
TMP_476=lisp.callFunctionWithCallStack(G_48,L_STORE162__330);
TMP_477=lisp.callFunctionWithCallStack(G_50,G_467,L_STORE162__330,L_GENSYMS160__329);
TMP_478=lisp.callFunctionWithCallStack(G_50,G_464,L_GENSYMS160__329);
TMP_479=lisp.CL_values(L_GENSYMS160__329,L_ARGS161__327,TMP_476,TMP_477,TMP_478);
}
}
}
return TMP_479;
});
lisp.CL_put(G_464,G_38,TMP_471);
TMP_480=lisp.CL_symbolFunction(G_467);
lisp.CL_put(G_464,G_53,TMP_480);
CL_COMPILER_BINDING_ID.lisp_name = 'BINDING-ID'
lisp.setSymbolFunction(G_482, CL_COMPILER_BINDING_ID);
TMP_486=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_488;
let TMP_487;
let L_STRUCTURE__336;
let L_VALUE__335;
L_VALUE__335=arguments[0];
L_STRUCTURE__336=arguments[1];
TMP_487=lisp.CL_structurep(L_STRUCTURE__336);
if(lisp.values1(TMP_487) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__336,G_31);
}
TMP_488=lisp.CL_structureSet(L_STRUCTURE__336,2,L_VALUE__335);
return TMP_488;
});
lisp.CL_setSymbolFunction(G_485,TMP_486);
TMP_489=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_497;
let TMP_496;
let TMP_495;
let TMP_494;
let L_STORE170__344;
let TMP_493;
let L_GENSYMS168__343;
let TMP_492;
let TMP_490;
let L_ARGS169__341;
let L_G174__339;
let L_G173__338;
L_G173__338=arguments[0];
{
L_G174__339=lisp.values1(L_G173__338);
{
L_ARGS169__341=lisp.values1(L_G174__339);
{
TMP_490=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_491;
let L_X__342;
L_X__342=arguments[0];
TMP_491=lisp.callFunctionWithCallStack(G_42);
return TMP_491;
});
TMP_492=lisp.callFunctionWithCallStack(G_44,TMP_490,L_ARGS169__341);
L_GENSYMS168__343=lisp.values1(TMP_492);
TMP_493=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE170__344=lisp.values1(TMP_493);
TMP_494=lisp.callFunctionWithCallStack(G_48,L_STORE170__344);
TMP_495=lisp.callFunctionWithCallStack(G_50,G_485,L_STORE170__344,L_GENSYMS168__343);
TMP_496=lisp.callFunctionWithCallStack(G_50,G_482,L_GENSYMS168__343);
TMP_497=lisp.CL_values(L_GENSYMS168__343,L_ARGS169__341,TMP_494,TMP_495,TMP_496);
}
}
}
return TMP_497;
});
lisp.CL_put(G_482,G_38,TMP_489);
TMP_498=lisp.CL_symbolFunction(G_485);
lisp.CL_put(G_482,G_53,TMP_498);
CL_COMPILER_BINDING_INIT_VALUE.lisp_name = 'BINDING-INIT-VALUE'
lisp.setSymbolFunction(G_500, CL_COMPILER_BINDING_INIT_VALUE);
TMP_504=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_506;
let TMP_505;
let L_STRUCTURE__350;
let L_VALUE__349;
L_VALUE__349=arguments[0];
L_STRUCTURE__350=arguments[1];
TMP_505=lisp.CL_structurep(L_STRUCTURE__350);
if(lisp.values1(TMP_505) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__350,G_31);
}
TMP_506=lisp.CL_structureSet(L_STRUCTURE__350,3,L_VALUE__349);
return TMP_506;
});
lisp.CL_setSymbolFunction(G_503,TMP_504);
TMP_507=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_515;
let TMP_514;
let TMP_513;
let TMP_512;
let L_STORE178__358;
let TMP_511;
let L_GENSYMS176__357;
let TMP_510;
let TMP_508;
let L_ARGS177__355;
let L_G182__353;
let L_G181__352;
L_G181__352=arguments[0];
{
L_G182__353=lisp.values1(L_G181__352);
{
L_ARGS177__355=lisp.values1(L_G182__353);
{
TMP_508=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_509;
let L_X__356;
L_X__356=arguments[0];
TMP_509=lisp.callFunctionWithCallStack(G_42);
return TMP_509;
});
TMP_510=lisp.callFunctionWithCallStack(G_44,TMP_508,L_ARGS177__355);
L_GENSYMS176__357=lisp.values1(TMP_510);
TMP_511=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE178__358=lisp.values1(TMP_511);
TMP_512=lisp.callFunctionWithCallStack(G_48,L_STORE178__358);
TMP_513=lisp.callFunctionWithCallStack(G_50,G_503,L_STORE178__358,L_GENSYMS176__357);
TMP_514=lisp.callFunctionWithCallStack(G_50,G_500,L_GENSYMS176__357);
TMP_515=lisp.CL_values(L_GENSYMS176__357,L_ARGS177__355,TMP_512,TMP_513,TMP_514);
}
}
}
return TMP_515;
});
lisp.CL_put(G_500,G_38,TMP_507);
TMP_516=lisp.CL_symbolFunction(G_503);
lisp.CL_put(G_500,G_53,TMP_516);
CL_COMPILER_BINDING_USED_COUNT.lisp_name = 'BINDING-USED-COUNT'
lisp.setSymbolFunction(G_518, CL_COMPILER_BINDING_USED_COUNT);
TMP_522=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_524;
let TMP_523;
let L_STRUCTURE__364;
let L_VALUE__363;
L_VALUE__363=arguments[0];
L_STRUCTURE__364=arguments[1];
TMP_523=lisp.CL_structurep(L_STRUCTURE__364);
if(lisp.values1(TMP_523) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__364,G_31);
}
TMP_524=lisp.CL_structureSet(L_STRUCTURE__364,4,L_VALUE__363);
return TMP_524;
});
lisp.CL_setSymbolFunction(G_521,TMP_522);
TMP_525=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_533;
let TMP_532;
let TMP_531;
let TMP_530;
let L_STORE186__372;
let TMP_529;
let L_GENSYMS184__371;
let TMP_528;
let TMP_526;
let L_ARGS185__369;
let L_G190__367;
let L_G189__366;
L_G189__366=arguments[0];
{
L_G190__367=lisp.values1(L_G189__366);
{
L_ARGS185__369=lisp.values1(L_G190__367);
{
TMP_526=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_527;
let L_X__370;
L_X__370=arguments[0];
TMP_527=lisp.callFunctionWithCallStack(G_42);
return TMP_527;
});
TMP_528=lisp.callFunctionWithCallStack(G_44,TMP_526,L_ARGS185__369);
L_GENSYMS184__371=lisp.values1(TMP_528);
TMP_529=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE186__372=lisp.values1(TMP_529);
TMP_530=lisp.callFunctionWithCallStack(G_48,L_STORE186__372);
TMP_531=lisp.callFunctionWithCallStack(G_50,G_521,L_STORE186__372,L_GENSYMS184__371);
TMP_532=lisp.callFunctionWithCallStack(G_50,G_518,L_GENSYMS184__371);
TMP_533=lisp.CL_values(L_GENSYMS184__371,L_ARGS185__369,TMP_530,TMP_531,TMP_532);
}
}
}
return TMP_533;
});
lisp.CL_put(G_518,G_38,TMP_525);
TMP_534=lisp.CL_symbolFunction(G_521);
lisp.CL_put(G_518,G_53,TMP_534);
CL_COMPILER_BINDING_SET_COUNT.lisp_name = 'BINDING-SET-COUNT'
lisp.setSymbolFunction(G_536, CL_COMPILER_BINDING_SET_COUNT);
TMP_540=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_542;
let TMP_541;
let L_STRUCTURE__378;
let L_VALUE__377;
L_VALUE__377=arguments[0];
L_STRUCTURE__378=arguments[1];
TMP_541=lisp.CL_structurep(L_STRUCTURE__378);
if(lisp.values1(TMP_541) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__378,G_31);
}
TMP_542=lisp.CL_structureSet(L_STRUCTURE__378,5,L_VALUE__377);
return TMP_542;
});
lisp.CL_setSymbolFunction(G_539,TMP_540);
TMP_543=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_551;
let TMP_550;
let TMP_549;
let TMP_548;
let L_STORE194__386;
let TMP_547;
let L_GENSYMS192__385;
let TMP_546;
let TMP_544;
let L_ARGS193__383;
let L_G198__381;
let L_G197__380;
L_G197__380=arguments[0];
{
L_G198__381=lisp.values1(L_G197__380);
{
L_ARGS193__383=lisp.values1(L_G198__381);
{
TMP_544=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_545;
let L_X__384;
L_X__384=arguments[0];
TMP_545=lisp.callFunctionWithCallStack(G_42);
return TMP_545;
});
TMP_546=lisp.callFunctionWithCallStack(G_44,TMP_544,L_ARGS193__383);
L_GENSYMS192__385=lisp.values1(TMP_546);
TMP_547=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE194__386=lisp.values1(TMP_547);
TMP_548=lisp.callFunctionWithCallStack(G_48,L_STORE194__386);
TMP_549=lisp.callFunctionWithCallStack(G_50,G_539,L_STORE194__386,L_GENSYMS192__385);
TMP_550=lisp.callFunctionWithCallStack(G_50,G_536,L_GENSYMS192__385);
TMP_551=lisp.CL_values(L_GENSYMS192__385,L_ARGS193__383,TMP_548,TMP_549,TMP_550);
}
}
}
return TMP_551;
});
lisp.CL_put(G_536,G_38,TMP_543);
TMP_552=lisp.CL_symbolFunction(G_539);
lisp.CL_put(G_536,G_53,TMP_552);
CL_COMPILER_BINDING_ESCAPE_COUNT.lisp_name = 'BINDING-ESCAPE-COUNT'
lisp.setSymbolFunction(G_554, CL_COMPILER_BINDING_ESCAPE_COUNT);
TMP_558=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_560;
let TMP_559;
let L_STRUCTURE__392;
let L_VALUE__391;
L_VALUE__391=arguments[0];
L_STRUCTURE__392=arguments[1];
TMP_559=lisp.CL_structurep(L_STRUCTURE__392);
if(lisp.values1(TMP_559) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__392,G_31);
}
TMP_560=lisp.CL_structureSet(L_STRUCTURE__392,6,L_VALUE__391);
return TMP_560;
});
lisp.CL_setSymbolFunction(G_557,TMP_558);
TMP_561=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_569;
let TMP_568;
let TMP_567;
let TMP_566;
let L_STORE202__400;
let TMP_565;
let L_GENSYMS200__399;
let TMP_564;
let TMP_562;
let L_ARGS201__397;
let L_G206__395;
let L_G205__394;
L_G205__394=arguments[0];
{
L_G206__395=lisp.values1(L_G205__394);
{
L_ARGS201__397=lisp.values1(L_G206__395);
{
TMP_562=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_563;
let L_X__398;
L_X__398=arguments[0];
TMP_563=lisp.callFunctionWithCallStack(G_42);
return TMP_563;
});
TMP_564=lisp.callFunctionWithCallStack(G_44,TMP_562,L_ARGS201__397);
L_GENSYMS200__399=lisp.values1(TMP_564);
TMP_565=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE202__400=lisp.values1(TMP_565);
TMP_566=lisp.callFunctionWithCallStack(G_48,L_STORE202__400);
TMP_567=lisp.callFunctionWithCallStack(G_50,G_557,L_STORE202__400,L_GENSYMS200__399);
TMP_568=lisp.callFunctionWithCallStack(G_50,G_554,L_GENSYMS200__399);
TMP_569=lisp.CL_values(L_GENSYMS200__399,L_ARGS201__397,TMP_566,TMP_567,TMP_568);
}
}
}
return TMP_569;
});
lisp.CL_put(G_554,G_38,TMP_561);
TMP_570=lisp.CL_symbolFunction(G_557);
lisp.CL_put(G_554,G_53,TMP_570);
CL_COMPILER_BINDING_VAR_TYPE.lisp_name = 'BINDING-VAR-TYPE'
lisp.setSymbolFunction(G_572, CL_COMPILER_BINDING_VAR_TYPE);
TMP_576=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_578;
let TMP_577;
let L_STRUCTURE__406;
let L_VALUE__405;
L_VALUE__405=arguments[0];
L_STRUCTURE__406=arguments[1];
TMP_577=lisp.CL_structurep(L_STRUCTURE__406);
if(lisp.values1(TMP_577) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__406,G_31);
}
TMP_578=lisp.CL_structureSet(L_STRUCTURE__406,7,L_VALUE__405);
return TMP_578;
});
lisp.CL_setSymbolFunction(G_575,TMP_576);
TMP_579=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_587;
let TMP_586;
let TMP_585;
let TMP_584;
let L_STORE210__414;
let TMP_583;
let L_GENSYMS208__413;
let TMP_582;
let TMP_580;
let L_ARGS209__411;
let L_G214__409;
let L_G213__408;
L_G213__408=arguments[0];
{
L_G214__409=lisp.values1(L_G213__408);
{
L_ARGS209__411=lisp.values1(L_G214__409);
{
TMP_580=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_581;
let L_X__412;
L_X__412=arguments[0];
TMP_581=lisp.callFunctionWithCallStack(G_42);
return TMP_581;
});
TMP_582=lisp.callFunctionWithCallStack(G_44,TMP_580,L_ARGS209__411);
L_GENSYMS208__413=lisp.values1(TMP_582);
TMP_583=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE210__414=lisp.values1(TMP_583);
TMP_584=lisp.callFunctionWithCallStack(G_48,L_STORE210__414);
TMP_585=lisp.callFunctionWithCallStack(G_50,G_575,L_STORE210__414,L_GENSYMS208__413);
TMP_586=lisp.callFunctionWithCallStack(G_50,G_572,L_GENSYMS208__413);
TMP_587=lisp.CL_values(L_GENSYMS208__413,L_ARGS209__411,TMP_584,TMP_585,TMP_586);
}
}
}
return TMP_587;
});
lisp.CL_put(G_572,G_38,TMP_579);
TMP_588=lisp.CL_symbolFunction(G_575);
lisp.CL_put(G_572,G_53,TMP_588);
{
TMP_589=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_598;
let TMP_597;
let TMP_596;
let TMP_595;
let TMP_594;
let TMP_593;
let TMP_592;
let TMP_591;
let TMP_590;
let L_STREAM__420;
let L_STRUCTURE__419;
L_STRUCTURE__419=arguments[0];
L_STREAM__420=arguments[1];
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([66, 73, 78, 68, 73, 78, 71])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_147,G_427,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
TMP_590=lisp.CL_structureRef(L_STRUCTURE__419,0);
lisp.callFunctionWithCallStack(G_147,TMP_590,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_147,G_429,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
TMP_591=lisp.CL_structureRef(L_STRUCTURE__419,1);
lisp.callFunctionWithCallStack(G_147,TMP_591,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_147,G_431,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
TMP_592=lisp.CL_structureRef(L_STRUCTURE__419,2);
lisp.callFunctionWithCallStack(G_147,TMP_592,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_147,G_433,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
TMP_593=lisp.CL_structureRef(L_STRUCTURE__419,3);
lisp.callFunctionWithCallStack(G_147,TMP_593,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_147,G_435,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
TMP_594=lisp.CL_structureRef(L_STRUCTURE__419,4);
lisp.callFunctionWithCallStack(G_147,TMP_594,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_147,G_437,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
TMP_595=lisp.CL_structureRef(L_STRUCTURE__419,5);
lisp.callFunctionWithCallStack(G_147,TMP_595,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_147,G_439,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
TMP_596=lisp.CL_structureRef(L_STRUCTURE__419,6);
lisp.callFunctionWithCallStack(G_147,TMP_596,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
lisp.callFunctionWithCallStack(G_147,G_441,L_STREAM__420);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__420);
TMP_597=lisp.CL_structureRef(L_STRUCTURE__419,7);
lisp.callFunctionWithCallStack(G_147,TMP_597,L_STREAM__420);
TMP_598=lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([41])),L_STREAM__420);
return TMP_598;
});
L_G218__421=lisp.values1(TMP_589);
{
L_G219__422=lisp.values1(L_G218__421);
lisp.CL_put(G_423,G_155,L_G219__422);
}
}
CL_COMPILER_COPY_TAGBODY_VALUE.lisp_name = 'COPY-TAGBODY-VALUE'
lisp.setSymbolFunction(G_600, CL_COMPILER_COPY_TAGBODY_VALUE);
CL_COMPILER_TAGBODY_VALUE_P.lisp_name = 'TAGBODY-VALUE-P'
lisp.setSymbolFunction(G_603, CL_COMPILER_TAGBODY_VALUE_P);
CL_COMPILER_MAKE_TAGBODY_VALUE.lisp_name = 'MAKE-TAGBODY-VALUE'
lisp.setSymbolFunction(G_607, CL_COMPILER_MAKE_TAGBODY_VALUE);
CL_COMPILER_TAGBODY_VALUE_INDEX.lisp_name = 'TAGBODY-VALUE-INDEX'
lisp.setSymbolFunction(G_614, CL_COMPILER_TAGBODY_VALUE_INDEX);
TMP_618=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_620;
let TMP_619;
let L_STRUCTURE__433;
let L_VALUE__432;
L_VALUE__432=arguments[0];
L_STRUCTURE__433=arguments[1];
TMP_619=lisp.CL_structurep(L_STRUCTURE__433);
if(lisp.values1(TMP_619) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__433,G_31);
}
TMP_620=lisp.CL_structureSet(L_STRUCTURE__433,0,L_VALUE__432);
return TMP_620;
});
lisp.CL_setSymbolFunction(G_617,TMP_618);
TMP_621=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_629;
let TMP_628;
let TMP_627;
let TMP_626;
let L_STORE222__441;
let TMP_625;
let L_GENSYMS220__440;
let TMP_624;
let TMP_622;
let L_ARGS221__438;
let L_G226__436;
let L_G225__435;
L_G225__435=arguments[0];
{
L_G226__436=lisp.values1(L_G225__435);
{
L_ARGS221__438=lisp.values1(L_G226__436);
{
TMP_622=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_623;
let L_X__439;
L_X__439=arguments[0];
TMP_623=lisp.callFunctionWithCallStack(G_42);
return TMP_623;
});
TMP_624=lisp.callFunctionWithCallStack(G_44,TMP_622,L_ARGS221__438);
L_GENSYMS220__440=lisp.values1(TMP_624);
TMP_625=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE222__441=lisp.values1(TMP_625);
TMP_626=lisp.callFunctionWithCallStack(G_48,L_STORE222__441);
TMP_627=lisp.callFunctionWithCallStack(G_50,G_617,L_STORE222__441,L_GENSYMS220__440);
TMP_628=lisp.callFunctionWithCallStack(G_50,G_614,L_GENSYMS220__440);
TMP_629=lisp.CL_values(L_GENSYMS220__440,L_ARGS221__438,TMP_626,TMP_627,TMP_628);
}
}
}
return TMP_629;
});
lisp.CL_put(G_614,G_38,TMP_621);
TMP_630=lisp.CL_symbolFunction(G_617);
lisp.CL_put(G_614,G_53,TMP_630);
CL_COMPILER_TAGBODY_VALUE_ID.lisp_name = 'TAGBODY-VALUE-ID'
lisp.setSymbolFunction(G_632, CL_COMPILER_TAGBODY_VALUE_ID);
TMP_636=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_638;
let TMP_637;
let L_STRUCTURE__447;
let L_VALUE__446;
L_VALUE__446=arguments[0];
L_STRUCTURE__447=arguments[1];
TMP_637=lisp.CL_structurep(L_STRUCTURE__447);
if(lisp.values1(TMP_637) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_32,L_STRUCTURE__447,G_31);
}
TMP_638=lisp.CL_structureSet(L_STRUCTURE__447,1,L_VALUE__446);
return TMP_638;
});
lisp.CL_setSymbolFunction(G_635,TMP_636);
TMP_639=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_647;
let TMP_646;
let TMP_645;
let TMP_644;
let L_STORE230__455;
let TMP_643;
let L_GENSYMS228__454;
let TMP_642;
let TMP_640;
let L_ARGS229__452;
let L_G234__450;
let L_G233__449;
L_G233__449=arguments[0];
{
L_G234__450=lisp.values1(L_G233__449);
{
L_ARGS229__452=lisp.values1(L_G234__450);
{
TMP_640=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_641;
let L_X__453;
L_X__453=arguments[0];
TMP_641=lisp.callFunctionWithCallStack(G_42);
return TMP_641;
});
TMP_642=lisp.callFunctionWithCallStack(G_44,TMP_640,L_ARGS229__452);
L_GENSYMS228__454=lisp.values1(TMP_642);
TMP_643=lisp.callFunctionWithCallStack(G_42,G_45.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE230__455=lisp.values1(TMP_643);
TMP_644=lisp.callFunctionWithCallStack(G_48,L_STORE230__455);
TMP_645=lisp.callFunctionWithCallStack(G_50,G_635,L_STORE230__455,L_GENSYMS228__454);
TMP_646=lisp.callFunctionWithCallStack(G_50,G_632,L_GENSYMS228__454);
TMP_647=lisp.CL_values(L_GENSYMS228__454,L_ARGS229__452,TMP_644,TMP_645,TMP_646);
}
}
}
return TMP_647;
});
lisp.CL_put(G_632,G_38,TMP_639);
TMP_648=lisp.CL_symbolFunction(G_635);
lisp.CL_put(G_632,G_53,TMP_648);
{
TMP_649=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_652;
let TMP_651;
let TMP_650;
let L_STREAM__461;
let L_STRUCTURE__460;
L_STRUCTURE__460=arguments[0];
L_STREAM__461=arguments[1];
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([35, 83, 40])),L_STREAM__461);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([84, 65, 71, 66, 79, 68, 89, 45, 86, 65, 76, 85, 69])),L_STREAM__461);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__461);
lisp.callFunctionWithCallStack(G_147,G_608,L_STREAM__461);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__461);
TMP_650=lisp.CL_structureRef(L_STRUCTURE__460,0);
lisp.callFunctionWithCallStack(G_147,TMP_650,L_STREAM__461);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__461);
lisp.callFunctionWithCallStack(G_147,G_431,L_STREAM__461);
lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([32])),L_STREAM__461);
TMP_651=lisp.CL_structureRef(L_STRUCTURE__460,1);
lisp.callFunctionWithCallStack(G_147,TMP_651,L_STREAM__461);
TMP_652=lisp.callFunctionWithCallStack(G_146,G_45.func(lisp.codeArrayToString([41])),L_STREAM__461);
return TMP_652;
});
L_G238__462=lisp.values1(TMP_649);
{
L_G239__463=lisp.values1(L_G238__462);
lisp.CL_put(G_604,G_155,L_G239__463);
}
}
lisp.CL_set(G_653,G_21);
lisp.CL_put(G_653,G_654,G_21);
CL_COMPILER_MAYBE_EQUAL_ERROR.lisp_name = 'MAYBE-EQUAL-ERROR'
lisp.setSymbolFunction(G_656, CL_COMPILER_MAYBE_EQUAL_ERROR);
CL_COMPILER_EQUAL_WITH_HIR.lisp_name = 'EQUAL-WITH-HIR'
lisp.setSymbolFunction(G_658, CL_COMPILER_EQUAL_WITH_HIR);
CL_COMPILER_EQUAL_HIR.lisp_name = 'EQUAL-HIR'
lisp.setSymbolFunction(G_709, CL_COMPILER_EQUAL_HIR);
CL_COMPILER_EQUAL_BINDING.lisp_name = 'EQUAL-BINDING'
lisp.setSymbolFunction(G_715, CL_COMPILER_EQUAL_BINDING);
CL_COMPILER_REDUCE_HIR.lisp_name = 'REDUCE-HIR'
lisp.setSymbolFunction(G_752, CL_COMPILER_REDUCE_HIR);
TMP_945=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G290__531;
let TMP_956;
let L_HIR__530;
let TMP_955;
let L_G289__529;
let TMP_954;
let L_FORM__528;
let TMP_953;
let L_G288__527;
let TMP_952;
let TMP_950;
let TMP_948;
let TMP_946;
let L_G287__526;
let L_G91__525;
L_G91__525=lisp.jsArrayToList(arguments, 0);
{
L_G287__526=lisp.values1(L_G91__525);
{
TMP_946=lisp.callFunctionWithCallStack(G_947,L_G287__526);
TMP_948=lisp.callFunctionWithCallStack(G_949,2,TMP_946,2);
if(lisp.values1(TMP_948) !== lisp.S_nil){
TMP_950=lisp.values1(lisp.S_nil);
}else{
TMP_952=lisp.callFunctionWithCallStack(G_661,G_45.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_951, lisp.makeCons(G_8, lisp.S_nil)),L_G287__526);
TMP_950=lisp.values1(lisp.values1(TMP_952));
}
L_G288__527=lisp.values1(TMP_950);
TMP_953=lisp.callFunctionWithCallStack(G_160,L_G287__526);
L_FORM__528=lisp.values1(TMP_953);
TMP_954=lisp.callFunctionWithCallStack(G_885,L_G287__526);
L_G289__529=lisp.values1(TMP_954);
TMP_955=lisp.callFunctionWithCallStack(G_160,L_G289__529);
L_HIR__530=lisp.values1(TMP_955);
TMP_956=lisp.callFunctionWithCallStack(G_885,L_G289__529);
L_G290__531=lisp.values1(TMP_956);
}
}
return lisp.values1(L_HIR__530);
});
lisp.CL_put(G_217,G_944,TMP_945);
}catch(TMP_1){G_957.func();
console.log(TMP_1.message);
}


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let G_7;
let G_9;
let G_10;
let G_12;
let G_13;
let G_15;
let G_17;
let G_18;
let G_21;
let G_24;
let G_27;
let G_30;
let G_33;
let G_36;
let G_37;
let G_40;
let G_42;
let G_45;
let G_48;
let G_50;
let G_53;
let G_57;
let G_58;
let G_62;
let G_74;
let G_84;
let G_89;
let G_91;
let G_101;
let G_104;
let G_128;
let G_138;
let G_145;
let G_155;
let G_178;
let G_181;
let G_185;
let G_193;
let G_195;
let G_200;
let G_202;
let G_206;
let G_220;
let G_228;
let G_236;
let G_240;
let G_252;
let G_268;
let G_273;
let G_287;
let G_292;
let G_298;
let G_331;
let G_336;
let G_351;
let G_354;
let G_361;
let CL_COMPILER_BQ_REMOVE_TOKENS;
let CL_COMPILER_BQ_ATTACH_CONSES;
let CL_COMPILER_BQ_ATTACH_APPEND;
let CL_COMPILER_NULL_OR_QUOTED;
let CL_COMPILER_BQ_SIMPLIFY_ARGS;
let CL_COMPILER_BQ_SIMPLIFY;
let CL_COMPILER_BQ_FROB;
let CL_COMPILER_BQ_SPLICING_FROB;
let CL_COMPILER_MAPTREE;
let CL_COMPILER_BRACKET;
let CL_COMPILER_BQ_PROCESS;
let CL_COMPILER_BQ_COMPLETELY_PROCESS;
let CL_COMPILER_EXPAND_BACKQUOTE;
let TMP_38;
let TMP_35;
let TMP_34;
let TMP_32;
let TMP_31;
let TMP_29;
let TMP_28;
let TMP_26;
let TMP_25;
let TMP_23;
let TMP_22;
let TMP_20;
let TMP_19;
let TMP_16;
let TMP_14;
let TMP_11;
let TMP_8;
let TMP_3;
// toplevel defun
let F_EXPAND_BACKQUOTE_39;
F_EXPAND_BACKQUOTE_39=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_40, arguments.length);
}
let TMP_41;
let L_X__1;
L_X__1=arguments[0];
TMP_41=G_42.func(L_X__1);
return TMP_41;
});
CL_COMPILER_EXPAND_BACKQUOTE=lisp.values1(F_EXPAND_BACKQUOTE_39);
let F_BQ_COMPLETELY_PROCESS_43;
F_BQ_COMPLETELY_PROCESS_43=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_42, arguments.length);
}
let TMP_49;
let TMP_47;
let TMP_46;
let L_RAW_RESULT__5;
let TMP_44;
let L_X__3;
L_X__3=arguments[0];
{
TMP_44=G_45.func(L_X__3);
L_RAW_RESULT__5=lisp.values1(TMP_44);
if(lisp.values1(lisp.symbolValue(G_37)) !== lisp.S_nil){
TMP_47=G_48.func(L_RAW_RESULT__5);
TMP_46=lisp.values1(TMP_47);
}else{
TMP_46=lisp.values1(L_RAW_RESULT__5);
}
TMP_49=G_50.func(TMP_46);
}
return TMP_49;
});
CL_COMPILER_BQ_COMPLETELY_PROCESS=lisp.values1(F_BQ_COMPLETELY_PROCESS_43);
let F_BQ_PROCESS_51;
F_BQ_PROCESS_51=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_45, arguments.length);
}
let L_G13__18;
let TMP_105;
let TMP_103;
let TMP_102;
let L_G12__17;
let TMP_100;
let TMP_99;
let TMP_98;
let TMP_97;
let TMP_96;
let TMP_95;
let TMP_94;
let TMP_93;
let TMP_92;
let TMP_90;
let TMP_88;
let TMP_87;
let TMP_86;
let TMP_85;
let TMP_83;
let TMP_82;
let TMP_81;
let TMP_80;
let L_Q__16;
let L_P__15;
let BLOCK_RESULT_NIL__14;
let TMP_79;
let TMP_78;
let TMP_77;
let L_G4__12;
let TMP_76;
let TMP_75;
let TMP_73;
let TMP_72;
let TMP_71;
let L_G3__11;
let TMP_70;
let TMP_69;
let TMP_68;
let TMP_67;
let L_G2__10;
let TMP_66;
let TMP_65;
let TMP_64;
let TMP_63;
let TMP_61;
let TMP_60;
let L_G1__9;
let TMP_59;
let TMP_56;
let TMP_55;
let TMP_54;
let L_G0__8;
let TMP_52;
let L_X__6;
L_X__6=arguments[0];
{
TMP_52=lisp.callFunctionWithCallStack(G_53,L_X__6);
L_G0__8=lisp.values1(TMP_52);
if(lisp.values1(L_G0__8) !== lisp.S_nil){
TMP_55=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_30),L_X__6);
TMP_54=TMP_55;
}else{
{
TMP_56=lisp.callFunctionWithCallStack(G_57,L_X__6);
TMP_59=lisp.CL_eq(TMP_56,G_58);
L_G1__9=lisp.values1(TMP_59);
if(lisp.values1(L_G1__9) !== lisp.S_nil){
TMP_61=lisp.callFunctionWithCallStack(G_62,L_X__6);
TMP_63=G_42.func(TMP_61);
TMP_64=G_45.func(TMP_63);
TMP_60=TMP_64;
}else{
{
TMP_65=lisp.callFunctionWithCallStack(G_57,L_X__6);
TMP_66=lisp.CL_eq(TMP_65,lisp.symbolValue(G_2));
L_G2__10=lisp.values1(TMP_66);
if(lisp.values1(L_G2__10) !== lisp.S_nil){
TMP_68=lisp.callFunctionWithCallStack(G_62,L_X__6);
TMP_67=TMP_68;
}else{
{
TMP_69=lisp.callFunctionWithCallStack(G_57,L_X__6);
TMP_70=lisp.CL_eq(TMP_69,lisp.symbolValue(G_7));
L_G3__11=lisp.values1(TMP_70);
if(lisp.values1(L_G3__11) !== lisp.S_nil){
TMP_72=lisp.callFunctionWithCallStack(G_62,L_X__6);
TMP_73=lisp.callFunctionWithCallStack(G_74,G_15.func(lisp.codeArrayToString([44, 64, 126, 83, 32, 97, 102, 116, 101, 114, 32, 96])),TMP_72);
TMP_71=TMP_73;
}else{
{
TMP_75=lisp.callFunctionWithCallStack(G_57,L_X__6);
TMP_76=lisp.CL_eq(TMP_75,lisp.symbolValue(G_10));
L_G4__12=lisp.values1(TMP_76);
if(lisp.values1(L_G4__12) !== lisp.S_nil){
TMP_78=lisp.callFunctionWithCallStack(G_62,L_X__6);
TMP_79=lisp.callFunctionWithCallStack(G_74,G_15.func(lisp.codeArrayToString([44, 46, 126, 83, 32, 97, 102, 116, 101, 114, 32, 96])),TMP_78);
TMP_77=TMP_79;
}else{
BLOCK_NIL__14: for(;;){{
L_P__15=lisp.values1(L_X__6);
L_Q__16=lisp.values1(lisp.S_nil);
for(;;){
TMP_80=lisp.callFunctionWithCallStack(G_53,L_P__15);
if(lisp.values1(TMP_80) !== lisp.S_nil){
TMP_81=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_30),L_P__15);
TMP_82=lisp.callFunctionWithCallStack(G_36,TMP_81);
TMP_83=lisp.callFunctionWithCallStack(G_84,L_Q__16,TMP_82);
TMP_85=lisp.CL_cons(lisp.symbolValue(G_18),TMP_83);
BLOCK_RESULT_NIL__14=TMP_85;
break BLOCK_NIL__14;
}else{
TMP_86=lisp.callFunctionWithCallStack(G_57,L_P__15);
TMP_87=lisp.CL_eq(TMP_86,lisp.symbolValue(G_2));
if(lisp.values1(TMP_87) !== lisp.S_nil){
TMP_88=lisp.callFunctionWithCallStack(G_89,L_P__15);
TMP_90=lisp.callFunctionWithCallStack(G_91,TMP_88);
if(lisp.values1(TMP_90) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_74,G_15.func(lisp.codeArrayToString([77, 97, 108, 102, 111, 114, 109, 101, 100, 32, 44, 126, 83])),L_P__15);
}
TMP_92=lisp.callFunctionWithCallStack(G_62,L_P__15);
TMP_93=lisp.callFunctionWithCallStack(G_36,TMP_92);
TMP_94=lisp.callFunctionWithCallStack(G_84,L_Q__16,TMP_93);
TMP_95=lisp.CL_cons(lisp.symbolValue(G_18),TMP_94);
BLOCK_RESULT_NIL__14=TMP_95;
break BLOCK_NIL__14;
}else{
}
TMP_96=lisp.callFunctionWithCallStack(G_57,L_P__15);
TMP_97=lisp.CL_eq(TMP_96,lisp.symbolValue(G_7));
if(lisp.values1(TMP_97) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_74,G_15.func(lisp.codeArrayToString([68, 111, 116, 116, 101, 100, 32, 44, 64, 126, 83])),L_P__15);
}else{
}
TMP_98=lisp.callFunctionWithCallStack(G_57,L_P__15);
TMP_99=lisp.CL_eq(TMP_98,lisp.symbolValue(G_10));
if(lisp.values1(TMP_99) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_74,G_15.func(lisp.codeArrayToString([68, 111, 116, 116, 101, 100, 32, 44, 46, 126, 83])),L_P__15);
}else{
}
{
TMP_100=lisp.callFunctionWithCallStack(G_101,L_P__15);
L_G12__17=lisp.values1(TMP_100);
TMP_102=lisp.callFunctionWithCallStack(G_57,L_P__15);
TMP_103=G_104.func(TMP_102);
TMP_105=lisp.CL_cons(TMP_103,L_Q__16);
L_G13__18=lisp.values1(TMP_105);
L_P__15=lisp.values1(L_G12__17);
L_Q__16=lisp.values1(L_G13__18);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__14=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
TMP_77=BLOCK_RESULT_NIL__14;
}
}
TMP_71=TMP_77;
}
}
TMP_67=TMP_71;
}
}
TMP_60=TMP_67;
}
}
TMP_54=TMP_60;
}
}
return TMP_54;
});
CL_COMPILER_BQ_PROCESS=lisp.values1(F_BQ_PROCESS_51);
let F_BRACKET_106;
F_BRACKET_106=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_104, arguments.length);
}
let TMP_126;
let TMP_125;
let TMP_124;
let TMP_123;
let TMP_122;
let L_G17__24;
let TMP_121;
let TMP_120;
let TMP_119;
let TMP_118;
let L_G16__23;
let TMP_117;
let TMP_116;
let TMP_115;
let TMP_114;
let TMP_113;
let L_G15__22;
let TMP_112;
let TMP_111;
let TMP_110;
let TMP_109;
let TMP_108;
let L_G14__21;
let TMP_107;
let L_X__19;
L_X__19=arguments[0];
{
TMP_107=lisp.callFunctionWithCallStack(G_53,L_X__19);
L_G14__21=lisp.values1(TMP_107);
if(lisp.values1(L_G14__21) !== lisp.S_nil){
TMP_109=G_45.func(L_X__19);
TMP_110=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_13),TMP_109);
TMP_108=TMP_110;
}else{
{
TMP_111=lisp.callFunctionWithCallStack(G_57,L_X__19);
TMP_112=lisp.CL_eq(TMP_111,lisp.symbolValue(G_2));
L_G15__22=lisp.values1(TMP_112);
if(lisp.values1(L_G15__22) !== lisp.S_nil){
TMP_114=lisp.callFunctionWithCallStack(G_62,L_X__19);
TMP_115=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_13),TMP_114);
TMP_113=TMP_115;
}else{
{
TMP_116=lisp.callFunctionWithCallStack(G_57,L_X__19);
TMP_117=lisp.CL_eq(TMP_116,lisp.symbolValue(G_7));
L_G16__23=lisp.values1(TMP_117);
if(lisp.values1(L_G16__23) !== lisp.S_nil){
TMP_119=lisp.callFunctionWithCallStack(G_62,L_X__19);
TMP_118=TMP_119;
}else{
{
TMP_120=lisp.callFunctionWithCallStack(G_57,L_X__19);
TMP_121=lisp.CL_eq(TMP_120,lisp.symbolValue(G_10));
L_G17__24=lisp.values1(TMP_121);
if(lisp.values1(L_G17__24) !== lisp.S_nil){
TMP_123=lisp.callFunctionWithCallStack(G_62,L_X__19);
TMP_124=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_27),TMP_123);
TMP_122=TMP_124;
}else{
TMP_125=G_45.func(L_X__19);
TMP_126=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_13),TMP_125);
TMP_122=TMP_126;
}
}
TMP_118=TMP_122;
}
}
TMP_113=TMP_118;
}
}
TMP_108=TMP_113;
}
}
return TMP_108;
});
CL_COMPILER_BRACKET=lisp.values1(F_BRACKET_106);
let F_MAPTREE_127;
F_MAPTREE_127=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_128, arguments.length);
}
let TMP_143;
let TMP_142;
let TMP_141;
let TMP_140;
let TMP_139;
let TMP_137;
let TMP_136;
let L_D__30;
let TMP_135;
let TMP_134;
let L_A__29;
let TMP_133;
let TMP_132;
let TMP_131;
let TMP_130;
let TMP_129;
let L_X__27;
let L_FN__26;
L_FN__26=arguments[0];
L_X__27=arguments[1];
TMP_129=lisp.callFunctionWithCallStack(G_53,L_X__27);
if(lisp.values1(TMP_129) !== lisp.S_nil){
TMP_131=lisp.CL_funcall(lisp.values1(L_FN__26),L_X__27);
TMP_130=TMP_131;
}else{
{
TMP_132=lisp.callFunctionWithCallStack(G_57,L_X__27);
TMP_133=lisp.CL_funcall(lisp.values1(L_FN__26),TMP_132);
L_A__29=lisp.values1(TMP_133);
TMP_134=lisp.callFunctionWithCallStack(G_101,L_X__27);
TMP_135=lisp.CL_funcall(lisp.values1(L_FN__26),TMP_134);
L_D__30=lisp.values1(TMP_135);
TMP_136=lisp.callFunctionWithCallStack(G_57,L_X__27);
TMP_137=lisp.callFunctionWithCallStack(G_138,L_A__29,TMP_136);
if(lisp.values1(TMP_137) !== lisp.S_nil){
TMP_140=lisp.callFunctionWithCallStack(G_101,L_X__27);
TMP_141=lisp.callFunctionWithCallStack(G_138,L_D__30,TMP_140);
TMP_139=lisp.values1(TMP_141);
}else{
TMP_139=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_139) !== lisp.S_nil){
TMP_142=lisp.values1(L_X__27);
}else{
TMP_143=lisp.CL_cons(L_A__29,L_D__30);
TMP_142=TMP_143;
}
}
TMP_130=TMP_142;
}
return TMP_130;
});
CL_COMPILER_MAPTREE=lisp.values1(F_MAPTREE_127);
let F_BQ_SPLICING_FROB_144;
F_BQ_SPLICING_FROB_144=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_145, arguments.length);
}
let TMP_153;
let L_G20__34;
let TMP_152;
let TMP_151;
let TMP_150;
let L_G19__33;
let TMP_149;
let TMP_148;
let TMP_147;
let TMP_146;
let L_X__31;
L_X__31=arguments[0];
TMP_146=lisp.CL_consp(L_X__31);
if(lisp.values1(TMP_146) !== lisp.S_nil){
{
TMP_148=lisp.callFunctionWithCallStack(G_57,L_X__31);
TMP_149=lisp.CL_eq(TMP_148,lisp.symbolValue(G_7));
L_G19__33=lisp.values1(TMP_149);
if(lisp.values1(L_G19__33) !== lisp.S_nil){
TMP_150=lisp.values1(L_G19__33);
}else{
{
TMP_151=lisp.callFunctionWithCallStack(G_57,L_X__31);
TMP_152=lisp.CL_eq(TMP_151,lisp.symbolValue(G_10));
L_G20__34=lisp.values1(TMP_152);
if(lisp.values1(L_G20__34) !== lisp.S_nil){
TMP_153=lisp.values1(L_G20__34);
}else{
TMP_153=lisp.values1(lisp.S_nil);
}
}
TMP_150=TMP_153;
}
}
TMP_147=TMP_150;
}else{
TMP_147=lisp.values1(lisp.S_nil);
}
return TMP_147;
});
CL_COMPILER_BQ_SPLICING_FROB=lisp.values1(F_BQ_SPLICING_FROB_144);
let F_BQ_FROB_154;
F_BQ_FROB_154=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_155, arguments.length);
}
let TMP_166;
let L_G23__39;
let TMP_165;
let TMP_164;
let TMP_163;
let L_G22__38;
let TMP_162;
let TMP_161;
let TMP_160;
let L_G21__37;
let TMP_159;
let TMP_158;
let TMP_157;
let TMP_156;
let L_X__35;
L_X__35=arguments[0];
TMP_156=lisp.CL_consp(L_X__35);
if(lisp.values1(TMP_156) !== lisp.S_nil){
{
TMP_158=lisp.callFunctionWithCallStack(G_57,L_X__35);
TMP_159=lisp.CL_eq(TMP_158,lisp.symbolValue(G_2));
L_G21__37=lisp.values1(TMP_159);
if(lisp.values1(L_G21__37) !== lisp.S_nil){
TMP_160=lisp.values1(L_G21__37);
}else{
{
TMP_161=lisp.callFunctionWithCallStack(G_57,L_X__35);
TMP_162=lisp.CL_eq(TMP_161,lisp.symbolValue(G_7));
L_G22__38=lisp.values1(TMP_162);
if(lisp.values1(L_G22__38) !== lisp.S_nil){
TMP_163=lisp.values1(L_G22__38);
}else{
{
TMP_164=lisp.callFunctionWithCallStack(G_57,L_X__35);
TMP_165=lisp.CL_eq(TMP_164,lisp.symbolValue(G_10));
L_G23__39=lisp.values1(TMP_165);
if(lisp.values1(L_G23__39) !== lisp.S_nil){
TMP_166=lisp.values1(L_G23__39);
}else{
TMP_166=lisp.values1(lisp.S_nil);
}
}
TMP_163=TMP_166;
}
}
TMP_160=TMP_163;
}
}
TMP_157=TMP_160;
}else{
TMP_157=lisp.values1(lisp.S_nil);
}
return TMP_157;
});
CL_COMPILER_BQ_FROB=lisp.values1(F_BQ_FROB_154);
let F_BQ_SIMPLIFY_167;
F_BQ_SIMPLIFY_167=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_48, arguments.length);
}
let TMP_180;
let TMP_179;
let TMP_177;
let TMP_176;
let TMP_175;
let L_X__42;
let TMP_174;
let TMP_173;
let TMP_172;
let TMP_171;
let TMP_170;
let TMP_169;
let TMP_168;
let L_X__40;
L_X__40=arguments[0];
TMP_168=lisp.callFunctionWithCallStack(G_53,L_X__40);
if(lisp.values1(TMP_168) !== lisp.S_nil){
TMP_169=lisp.values1(L_X__40);
}else{
{
TMP_170=lisp.callFunctionWithCallStack(G_57,L_X__40);
TMP_171=lisp.CL_eq(TMP_170,lisp.symbolValue(G_30));
if(lisp.values1(TMP_171) !== lisp.S_nil){
TMP_172=lisp.values1(L_X__40);
}else{
TMP_173=lisp.CL_symbolFunction(G_48);
TMP_174=G_128.func(TMP_173,L_X__40);
TMP_172=lisp.values1(TMP_174);
}
L_X__42=lisp.values1(TMP_172);
TMP_175=lisp.callFunctionWithCallStack(G_57,L_X__42);
TMP_176=lisp.CL_eq(TMP_175,lisp.symbolValue(G_18));
TMP_177=lisp.callFunctionWithCallStack(G_178,TMP_176);
if(lisp.values1(TMP_177) !== lisp.S_nil){
TMP_179=lisp.values1(L_X__42);
}else{
TMP_180=G_181.func(L_X__42);
TMP_179=TMP_180;
}
}
TMP_169=TMP_179;
}
return TMP_169;
});
CL_COMPILER_BQ_SIMPLIFY=lisp.values1(F_BQ_SIMPLIFY_167);
let F_BQ_SIMPLIFY_ARGS_182;
F_BQ_SIMPLIFY_ARGS_182=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_181, arguments.length);
}
let L_G31__55;
let TMP_250;
let TMP_249;
let TMP_248;
let TMP_247;
let TMP_246;
let L_G36__53;
let TMP_245;
let TMP_244;
let TMP_243;
let TMP_242;
let TMP_241;
let TMP_239;
let TMP_238;
let L_G35__52;
let TMP_237;
let TMP_235;
let TMP_234;
let TMP_233;
let TMP_232;
let TMP_231;
let TMP_230;
let TMP_229;
let TMP_227;
let TMP_226;
let TMP_225;
let TMP_224;
let TMP_223;
let TMP_222;
let TMP_221;
let TMP_219;
let TMP_218;
let TMP_217;
let TMP_216;
let TMP_215;
let TMP_214;
let TMP_213;
let L_G34__51;
let TMP_212;
let TMP_211;
let TMP_210;
let TMP_209;
let TMP_208;
let TMP_207;
let TMP_205;
let TMP_204;
let TMP_203;
let L_G33__50;
let TMP_201;
let TMP_199;
let TMP_198;
let TMP_197;
let TMP_196;
let TMP_194;
let TMP_192;
let TMP_191;
let TMP_190;
let L_G32__49;
let TMP_189;
let TMP_188;
let L_G30__48;
let TMP_187;
let TMP_186;
let L_RESULT__47;
let L_ARGS__46;
let TMP_184;
let TMP_183;
let BLOCK_RESULT_NIL__45;
let L_X__43;
L_X__43=arguments[0];
BLOCK_NIL__45: for(;;){{
TMP_183=lisp.callFunctionWithCallStack(G_101,L_X__43);
TMP_184=lisp.callFunctionWithCallStack(G_185,TMP_183);
L_ARGS__46=lisp.values1(TMP_184);
L_RESULT__47=lisp.values1(lisp.S_nil);
for(;;){
TMP_186=lisp.callFunctionWithCallStack(G_91,L_ARGS__46);
if(lisp.values1(TMP_186) !== lisp.S_nil){
BLOCK_RESULT_NIL__45=lisp.values1(L_RESULT__47);
break BLOCK_NIL__45;
}else{
{
TMP_187=lisp.callFunctionWithCallStack(G_101,L_ARGS__46);
L_G30__48=lisp.values1(TMP_187);
{
TMP_188=lisp.callFunctionWithCallStack(G_57,L_ARGS__46);
TMP_189=lisp.callFunctionWithCallStack(G_53,TMP_188);
L_G32__49=lisp.values1(TMP_189);
if(lisp.values1(L_G32__49) !== lisp.S_nil){
TMP_191=lisp.callFunctionWithCallStack(G_57,L_ARGS__46);
TMP_192=G_193.func(lisp.symbolValue(G_18),TMP_191,L_RESULT__47);
TMP_190=lisp.values1(TMP_192);
}else{
{
TMP_194=lisp.callFunctionWithCallStack(G_195,L_ARGS__46);
TMP_196=lisp.CL_eq(TMP_194,lisp.symbolValue(G_13));
if(lisp.values1(TMP_196) !== lisp.S_nil){
TMP_198=lisp.CL_symbolFunction(G_145);
TMP_199=lisp.callFunctionWithCallStack(G_200,L_ARGS__46);
TMP_201=lisp.callFunctionWithCallStack(G_202,TMP_198,TMP_199);
TMP_197=lisp.values1(TMP_201);
}else{
TMP_197=lisp.values1(lisp.S_nil);
}
L_G33__50=lisp.values1(TMP_197);
if(lisp.values1(L_G33__50) !== lisp.S_nil){
TMP_204=lisp.callFunctionWithCallStack(G_200,L_ARGS__46);
TMP_205=G_206.func(TMP_204,L_RESULT__47);
TMP_203=lisp.values1(TMP_205);
}else{
{
TMP_207=lisp.callFunctionWithCallStack(G_195,L_ARGS__46);
TMP_208=lisp.CL_eq(TMP_207,lisp.symbolValue(G_21));
if(lisp.values1(TMP_208) !== lisp.S_nil){
TMP_210=lisp.CL_symbolFunction(G_145);
TMP_211=lisp.callFunctionWithCallStack(G_200,L_ARGS__46);
TMP_212=lisp.callFunctionWithCallStack(G_202,TMP_210,TMP_211);
TMP_209=lisp.values1(TMP_212);
}else{
TMP_209=lisp.values1(lisp.S_nil);
}
L_G34__51=lisp.values1(TMP_209);
if(lisp.values1(L_G34__51) !== lisp.S_nil){
TMP_214=lisp.callFunctionWithCallStack(G_200,L_ARGS__46);
TMP_215=lisp.callFunctionWithCallStack(G_185,TMP_214);
TMP_216=lisp.callFunctionWithCallStack(G_101,TMP_215);
TMP_217=lisp.callFunctionWithCallStack(G_185,TMP_216);
TMP_218=lisp.callFunctionWithCallStack(G_57,L_ARGS__46);
TMP_219=lisp.callFunctionWithCallStack(G_220,TMP_218);
TMP_221=lisp.callFunctionWithCallStack(G_57,TMP_219);
TMP_222=G_193.func(lisp.symbolValue(G_18),TMP_221,L_RESULT__47);
TMP_223=G_206.func(TMP_217,TMP_222);
TMP_213=lisp.values1(TMP_223);
}else{
{
TMP_224=lisp.callFunctionWithCallStack(G_195,L_ARGS__46);
TMP_225=lisp.CL_eq(TMP_224,lisp.symbolValue(G_30));
if(lisp.values1(TMP_225) !== lisp.S_nil){
TMP_227=lisp.callFunctionWithCallStack(G_228,L_ARGS__46);
TMP_229=lisp.CL_consp(TMP_227);
if(lisp.values1(TMP_229) !== lisp.S_nil){
TMP_231=lisp.callFunctionWithCallStack(G_228,L_ARGS__46);
TMP_232=G_155.func(TMP_231);
TMP_233=lisp.callFunctionWithCallStack(G_178,TMP_232);
if(lisp.values1(TMP_233) !== lisp.S_nil){
TMP_235=lisp.callFunctionWithCallStack(G_236,L_ARGS__46);
TMP_237=lisp.callFunctionWithCallStack(G_91,TMP_235);
TMP_234=lisp.values1(TMP_237);
}else{
TMP_234=lisp.values1(lisp.S_nil);
}
TMP_230=lisp.values1(TMP_234);
}else{
TMP_230=lisp.values1(lisp.S_nil);
}
TMP_226=lisp.values1(TMP_230);
}else{
TMP_226=lisp.values1(lisp.S_nil);
}
L_G35__52=lisp.values1(TMP_226);
if(lisp.values1(L_G35__52) !== lisp.S_nil){
TMP_239=lisp.callFunctionWithCallStack(G_240,L_ARGS__46);
TMP_241=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_30),TMP_239);
TMP_242=lisp.callFunctionWithCallStack(G_36,TMP_241);
TMP_243=G_206.func(TMP_242,L_RESULT__47);
TMP_238=lisp.values1(TMP_243);
}else{
{
TMP_244=lisp.callFunctionWithCallStack(G_195,L_ARGS__46);
TMP_245=lisp.CL_eq(TMP_244,lisp.symbolValue(G_27));
L_G36__53=lisp.values1(TMP_245);
if(lisp.values1(L_G36__53) !== lisp.S_nil){
TMP_247=lisp.callFunctionWithCallStack(G_228,L_ARGS__46);
TMP_248=G_193.func(lisp.symbolValue(G_24),TMP_247,L_RESULT__47);
TMP_246=lisp.values1(TMP_248);
}else{
TMP_249=lisp.callFunctionWithCallStack(G_57,L_ARGS__46);
TMP_250=G_193.func(lisp.symbolValue(G_18),TMP_249,L_RESULT__47);
TMP_246=lisp.values1(TMP_250);
}
}
TMP_238=lisp.values1(lisp.values1(TMP_246));
}
}
TMP_213=lisp.values1(lisp.values1(TMP_238));
}
}
TMP_203=lisp.values1(lisp.values1(TMP_213));
}
}
TMP_190=lisp.values1(lisp.values1(TMP_203));
}
}
L_G31__55=lisp.values1(lisp.values1(TMP_190));
L_ARGS__46=lisp.values1(L_G30__48);
L_RESULT__47=lisp.values1(L_G31__55);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__45=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__45;
});
CL_COMPILER_BQ_SIMPLIFY_ARGS=lisp.values1(F_BQ_SIMPLIFY_ARGS_182);
let F_NULL_OR_QUOTED_251;
F_NULL_OR_QUOTED_251=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_252, arguments.length);
}
let TMP_259;
let L_G39__59;
let TMP_258;
let TMP_257;
let TMP_256;
let TMP_255;
let TMP_254;
let L_G38__58;
let TMP_253;
let L_X__56;
L_X__56=arguments[0];
{
TMP_253=lisp.callFunctionWithCallStack(G_91,L_X__56);
L_G38__58=lisp.values1(TMP_253);
if(lisp.values1(L_G38__58) !== lisp.S_nil){
TMP_254=lisp.values1(L_G38__58);
}else{
{
TMP_255=lisp.CL_consp(L_X__56);
if(lisp.values1(TMP_255) !== lisp.S_nil){
TMP_257=lisp.callFunctionWithCallStack(G_57,L_X__56);
TMP_258=lisp.CL_eq(TMP_257,lisp.symbolValue(G_30));
TMP_256=lisp.values1(TMP_258);
}else{
TMP_256=lisp.values1(lisp.S_nil);
}
L_G39__59=lisp.values1(TMP_256);
if(lisp.values1(L_G39__59) !== lisp.S_nil){
TMP_259=lisp.values1(L_G39__59);
}else{
TMP_259=lisp.values1(lisp.S_nil);
}
}
TMP_254=TMP_259;
}
}
return TMP_254;
});
CL_COMPILER_NULL_OR_QUOTED=lisp.values1(F_NULL_OR_QUOTED_251);
let F_BQ_ATTACH_APPEND_260;
F_BQ_ATTACH_APPEND_260=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_193, arguments.length);
}
let TMP_288;
let TMP_286;
let TMP_285;
let TMP_284;
let TMP_283;
let L_G44__68;
let TMP_282;
let TMP_281;
let TMP_280;
let TMP_279;
let TMP_278;
let TMP_277;
let TMP_276;
let TMP_275;
let L_G41__67;
let TMP_274;
let L_G43__66;
let TMP_272;
let TMP_271;
let L_G42__65;
let TMP_270;
let TMP_269;
let TMP_267;
let TMP_266;
let TMP_265;
let TMP_264;
let L_G40__64;
let TMP_263;
let TMP_262;
let TMP_261;
let L_RESULT__62;
let L_ITEM__61;
let L_OP__60;
L_OP__60=arguments[0];
L_ITEM__61=arguments[1];
L_RESULT__62=arguments[2];
{
TMP_261=G_252.func(L_ITEM__61);
if(lisp.values1(TMP_261) !== lisp.S_nil){
TMP_263=G_252.func(L_RESULT__62);
TMP_262=lisp.values1(TMP_263);
}else{
TMP_262=lisp.values1(lisp.S_nil);
}
L_G40__64=lisp.values1(TMP_262);
if(lisp.values1(L_G40__64) !== lisp.S_nil){
TMP_265=lisp.callFunctionWithCallStack(G_62,L_ITEM__61);
TMP_266=lisp.callFunctionWithCallStack(G_62,L_RESULT__62);
TMP_267=lisp.callFunctionWithCallStack(G_268,TMP_265,TMP_266);
TMP_269=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_30),TMP_267);
TMP_264=TMP_269;
}else{
{
{
TMP_270=lisp.callFunctionWithCallStack(G_91,L_RESULT__62);
L_G42__65=lisp.values1(TMP_270);
if(lisp.values1(L_G42__65) !== lisp.S_nil){
TMP_271=lisp.values1(L_G42__65);
}else{
{
TMP_272=lisp.callFunctionWithCallStack(G_273,L_RESULT__62,lisp.symbolValue(G_33));
L_G43__66=lisp.values1(TMP_272);
if(lisp.values1(L_G43__66) !== lisp.S_nil){
TMP_274=lisp.values1(L_G43__66);
}else{
TMP_274=lisp.values1(lisp.S_nil);
}
}
TMP_271=lisp.values1(lisp.values1(TMP_274));
}
}
L_G41__67=lisp.values1(lisp.values1(TMP_271));
if(lisp.values1(L_G41__67) !== lisp.S_nil){
TMP_276=G_145.func(L_ITEM__61);
if(lisp.values1(TMP_276) !== lisp.S_nil){
TMP_278=lisp.callFunctionWithCallStack(G_36,L_OP__60,L_ITEM__61);
TMP_277=TMP_278;
}else{
TMP_277=lisp.values1(L_ITEM__61);
}
TMP_275=TMP_277;
}else{
{
TMP_279=lisp.CL_consp(L_RESULT__62);
if(lisp.values1(TMP_279) !== lisp.S_nil){
TMP_281=lisp.callFunctionWithCallStack(G_57,L_RESULT__62);
TMP_282=lisp.CL_eq(TMP_281,L_OP__60);
TMP_280=lisp.values1(TMP_282);
}else{
TMP_280=lisp.values1(lisp.S_nil);
}
L_G44__68=lisp.values1(TMP_280);
if(lisp.values1(L_G44__68) !== lisp.S_nil){
TMP_284=lisp.callFunctionWithCallStack(G_57,L_RESULT__62);
TMP_285=lisp.callFunctionWithCallStack(G_101,L_RESULT__62);
TMP_286=lisp.callFunctionWithCallStack(G_287,TMP_284,L_ITEM__61,TMP_285);
TMP_283=TMP_286;
}else{
TMP_288=lisp.callFunctionWithCallStack(G_36,L_OP__60,L_ITEM__61,L_RESULT__62);
TMP_283=TMP_288;
}
}
TMP_275=TMP_283;
}
}
TMP_264=TMP_275;
}
}
return TMP_264;
});
CL_COMPILER_BQ_ATTACH_APPEND=lisp.values1(F_BQ_ATTACH_APPEND_260);
let F_BQ_ATTACH_CONSES_289;
F_BQ_ATTACH_CONSES_289=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_206, arguments.length);
}
let TMP_323;
let TMP_322;
let TMP_321;
let TMP_320;
let TMP_319;
let TMP_318;
let TMP_317;
let TMP_316;
let L_G50__79;
let TMP_315;
let L_G52__78;
let TMP_314;
let TMP_313;
let TMP_312;
let L_G51__77;
let TMP_311;
let TMP_310;
let TMP_309;
let TMP_308;
let TMP_307;
let TMP_306;
let L_G47__76;
let TMP_305;
let L_G49__75;
let TMP_304;
let TMP_303;
let L_G48__74;
let TMP_302;
let TMP_301;
let TMP_300;
let TMP_299;
let TMP_297;
let TMP_296;
let TMP_295;
let L_G46__73;
let TMP_294;
let TMP_293;
let TMP_291;
let TMP_290;
let L_RESULT__71;
let L_ITEMS__70;
L_ITEMS__70=arguments[0];
L_RESULT__71=arguments[1];
{
TMP_290=lisp.CL_symbolFunction(G_252);
TMP_291=lisp.callFunctionWithCallStack(G_292,TMP_290,L_ITEMS__70);
if(lisp.values1(TMP_291) !== lisp.S_nil){
TMP_294=G_252.func(L_RESULT__71);
TMP_293=lisp.values1(TMP_294);
}else{
TMP_293=lisp.values1(lisp.S_nil);
}
L_G46__73=lisp.values1(TMP_293);
if(lisp.values1(L_G46__73) !== lisp.S_nil){
TMP_296=lisp.CL_symbolFunction(G_62);
TMP_297=lisp.callFunctionWithCallStack(G_298,TMP_296,L_ITEMS__70);
TMP_299=lisp.callFunctionWithCallStack(G_62,L_RESULT__71);
TMP_300=lisp.callFunctionWithCallStack(G_268,TMP_297,TMP_299);
TMP_301=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_30),TMP_300);
TMP_295=TMP_301;
}else{
{
{
TMP_302=lisp.callFunctionWithCallStack(G_91,L_RESULT__71);
L_G48__74=lisp.values1(TMP_302);
if(lisp.values1(L_G48__74) !== lisp.S_nil){
TMP_303=lisp.values1(L_G48__74);
}else{
{
TMP_304=lisp.callFunctionWithCallStack(G_273,L_RESULT__71,lisp.symbolValue(G_33));
L_G49__75=lisp.values1(TMP_304);
if(lisp.values1(L_G49__75) !== lisp.S_nil){
TMP_305=lisp.values1(L_G49__75);
}else{
TMP_305=lisp.values1(lisp.S_nil);
}
}
TMP_303=lisp.values1(lisp.values1(TMP_305));
}
}
L_G47__76=lisp.values1(lisp.values1(TMP_303));
if(lisp.values1(L_G47__76) !== lisp.S_nil){
TMP_307=lisp.CL_cons(lisp.symbolValue(G_13),L_ITEMS__70);
TMP_306=TMP_307;
}else{
{
TMP_308=lisp.CL_consp(L_RESULT__71);
if(lisp.values1(TMP_308) !== lisp.S_nil){
{
TMP_310=lisp.callFunctionWithCallStack(G_57,L_RESULT__71);
TMP_311=lisp.CL_eq(TMP_310,lisp.symbolValue(G_13));
L_G51__77=lisp.values1(TMP_311);
if(lisp.values1(L_G51__77) !== lisp.S_nil){
TMP_312=lisp.values1(L_G51__77);
}else{
{
TMP_313=lisp.callFunctionWithCallStack(G_57,L_RESULT__71);
TMP_314=lisp.CL_eq(TMP_313,lisp.symbolValue(G_21));
L_G52__78=lisp.values1(TMP_314);
if(lisp.values1(L_G52__78) !== lisp.S_nil){
TMP_315=lisp.values1(L_G52__78);
}else{
TMP_315=lisp.values1(lisp.S_nil);
}
}
TMP_312=lisp.values1(lisp.values1(TMP_315));
}
}
TMP_309=lisp.values1(lisp.values1(TMP_312));
}else{
TMP_309=lisp.values1(lisp.S_nil);
}
L_G50__79=lisp.values1(TMP_309);
if(lisp.values1(L_G50__79) !== lisp.S_nil){
TMP_317=lisp.callFunctionWithCallStack(G_57,L_RESULT__71);
TMP_318=lisp.callFunctionWithCallStack(G_101,L_RESULT__71);
TMP_319=lisp.callFunctionWithCallStack(G_268,L_ITEMS__70,TMP_318);
TMP_320=lisp.CL_cons(TMP_317,TMP_319);
TMP_316=TMP_320;
}else{
TMP_321=lisp.callFunctionWithCallStack(G_36,L_RESULT__71);
TMP_322=lisp.callFunctionWithCallStack(G_268,L_ITEMS__70,TMP_321);
TMP_323=lisp.CL_cons(lisp.symbolValue(G_21),TMP_322);
TMP_316=TMP_323;
}
}
TMP_306=TMP_316;
}
}
TMP_295=TMP_306;
}
}
return TMP_295;
});
CL_COMPILER_BQ_ATTACH_CONSES=lisp.values1(F_BQ_ATTACH_CONSES_289);
let F_BQ_REMOVE_TOKENS_324;
F_BQ_REMOVE_TOKENS_324=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_50, arguments.length);
}
let TMP_360;
let TMP_359;
let TMP_358;
let TMP_357;
let TMP_356;
let TMP_355;
let TMP_353;
let L_G61__90;
let TMP_352;
let TMP_350;
let TMP_349;
let TMP_348;
let TMP_347;
let TMP_346;
let TMP_345;
let TMP_344;
let TMP_343;
let TMP_342;
let TMP_341;
let L_G60__89;
let TMP_340;
let TMP_339;
let TMP_338;
let L_G59__88;
let TMP_337;
let TMP_335;
let L_G58__87;
let TMP_334;
let TMP_333;
let L_G57__86;
let TMP_332;
let TMP_330;
let L_G56__85;
let TMP_329;
let TMP_328;
let L_G55__84;
let TMP_327;
let TMP_326;
let L_G54__83;
let TMP_325;
let L_X__81;
L_X__81=arguments[0];
{
TMP_325=lisp.CL_eq(L_X__81,lisp.symbolValue(G_13));
L_G54__83=lisp.values1(TMP_325);
if(lisp.values1(L_G54__83) !== lisp.S_nil){
TMP_326=lisp.values1(G_36);
}else{
{
TMP_327=lisp.CL_eq(L_X__81,lisp.symbolValue(G_18));
L_G55__84=lisp.values1(TMP_327);
if(lisp.values1(L_G55__84) !== lisp.S_nil){
TMP_328=lisp.values1(G_268);
}else{
{
TMP_329=lisp.CL_eq(L_X__81,lisp.symbolValue(G_24));
L_G56__85=lisp.values1(TMP_329);
if(lisp.values1(L_G56__85) !== lisp.S_nil){
TMP_330=lisp.values1(G_331);
}else{
{
TMP_332=lisp.CL_eq(L_X__81,lisp.symbolValue(G_21));
L_G57__86=lisp.values1(TMP_332);
if(lisp.values1(L_G57__86) !== lisp.S_nil){
TMP_333=lisp.values1(G_287);
}else{
{
TMP_334=lisp.CL_eq(L_X__81,lisp.symbolValue(G_30));
L_G58__87=lisp.values1(TMP_334);
if(lisp.values1(L_G58__87) !== lisp.S_nil){
TMP_335=lisp.values1(G_336);
}else{
{
TMP_337=lisp.callFunctionWithCallStack(G_53,L_X__81);
L_G59__88=lisp.values1(TMP_337);
if(lisp.values1(L_G59__88) !== lisp.S_nil){
TMP_338=lisp.values1(L_X__81);
}else{
{
TMP_339=lisp.callFunctionWithCallStack(G_57,L_X__81);
TMP_340=lisp.CL_eq(TMP_339,lisp.symbolValue(G_27));
L_G60__89=lisp.values1(TMP_340);
if(lisp.values1(L_G60__89) !== lisp.S_nil){
TMP_342=lisp.callFunctionWithCallStack(G_62,L_X__81);
TMP_343=G_50.func(TMP_342);
TMP_341=TMP_343;
}else{
{
TMP_344=lisp.callFunctionWithCallStack(G_57,L_X__81);
TMP_345=lisp.CL_eq(TMP_344,lisp.symbolValue(G_21));
if(lisp.values1(TMP_345) !== lisp.S_nil){
TMP_347=lisp.callFunctionWithCallStack(G_89,L_X__81);
TMP_348=lisp.CL_consp(TMP_347);
if(lisp.values1(TMP_348) !== lisp.S_nil){
TMP_350=lisp.callFunctionWithCallStack(G_351,L_X__81);
TMP_352=lisp.callFunctionWithCallStack(G_91,TMP_350);
TMP_349=lisp.values1(TMP_352);
}else{
TMP_349=lisp.values1(lisp.S_nil);
}
TMP_346=lisp.values1(TMP_349);
}else{
TMP_346=lisp.values1(lisp.S_nil);
}
L_G61__90=lisp.values1(TMP_346);
if(lisp.values1(L_G61__90) !== lisp.S_nil){
TMP_355=lisp.CL_symbolFunction(G_50);
TMP_356=lisp.callFunctionWithCallStack(G_101,L_X__81);
TMP_357=G_128.func(TMP_355,TMP_356);
TMP_358=lisp.CL_cons(G_354,TMP_357);
TMP_353=TMP_358;
}else{
TMP_359=lisp.CL_symbolFunction(G_50);
TMP_360=G_128.func(TMP_359,L_X__81);
TMP_353=TMP_360;
}
}
TMP_341=TMP_353;
}
}
TMP_338=TMP_341;
}
}
TMP_335=TMP_338;
}
}
TMP_333=TMP_335;
}
}
TMP_330=TMP_333;
}
}
TMP_328=TMP_330;
}
}
TMP_326=TMP_328;
}
}
return TMP_326;
});
CL_COMPILER_BQ_REMOVE_TOKENS=lisp.values1(F_BQ_REMOVE_TOKENS_324);
// initialize symbols
G_2 = lisp.intern('*COMMA*', 'COMPILER');
G_4 = lisp.intern('UNQUOTE', 'SYSTEM');
G_5 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_6 = lisp.intern('T', 'COMMON-LISP');
G_7 = lisp.intern('*COMMA-ATSIGN*', 'COMPILER');
G_9 = lisp.intern('UNQUOTE-SPLICING', 'SYSTEM');
G_10 = lisp.intern('*COMMA-DOT*', 'COMPILER');
G_12 = lisp.intern('UNQUOTE-NSPLICING', 'SYSTEM');
G_13 = lisp.intern('*BQ-LIST*', 'COMPILER');
G_15 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_17 = lisp.intern('MAKE-SYMBOL', 'COMMON-LISP');
G_18 = lisp.intern('*BQ-APPEND*', 'COMPILER');
G_21 = lisp.intern('*BQ-LIST**', 'COMPILER');
G_24 = lisp.intern('*BQ-NCONC*', 'COMPILER');
G_27 = lisp.intern('*BQ-CLOBBERABLE*', 'COMPILER');
G_30 = lisp.intern('*BQ-QUOTE*', 'COMPILER');
G_33 = lisp.intern('*BQ-QUOTE-NIL*', 'COMPILER');
G_36 = lisp.intern('LIST', 'COMMON-LISP');
G_37 = lisp.intern('*BQ-SIMPLIFY*', 'COMPILER');
G_40 = lisp.intern('EXPAND-BACKQUOTE', 'COMPILER');
G_42 = lisp.intern('BQ-COMPLETELY-PROCESS', 'COMPILER');
G_45 = lisp.intern('BQ-PROCESS', 'COMPILER');
G_48 = lisp.intern('BQ-SIMPLIFY', 'COMPILER');
G_50 = lisp.intern('BQ-REMOVE-TOKENS', 'COMPILER');
G_53 = lisp.intern('ATOM', 'COMMON-LISP');
G_57 = lisp.intern('CAR', 'COMMON-LISP');
G_58 = lisp.intern('BACKQUOTE', 'SYSTEM');
G_62 = lisp.intern('CADR', 'COMMON-LISP');
G_74 = lisp.intern('ERROR', 'COMMON-LISP');
G_84 = lisp.intern('NRECONC', 'COMMON-LISP');
G_89 = lisp.intern('CDDR', 'COMMON-LISP');
G_91 = lisp.intern('NULL', 'COMMON-LISP');
G_101 = lisp.intern('CDR', 'COMMON-LISP');
G_104 = lisp.intern('BRACKET', 'COMPILER');
G_128 = lisp.intern('MAPTREE', 'COMPILER');
G_138 = lisp.intern('EQL', 'COMMON-LISP');
G_145 = lisp.intern('BQ-SPLICING-FROB', 'COMPILER');
G_155 = lisp.intern('BQ-FROB', 'COMPILER');
G_178 = lisp.intern('NOT', 'COMMON-LISP');
G_181 = lisp.intern('BQ-SIMPLIFY-ARGS', 'COMPILER');
G_185 = lisp.intern('REVERSE', 'COMMON-LISP');
G_193 = lisp.intern('BQ-ATTACH-APPEND', 'COMPILER');
G_195 = lisp.intern('CAAR', 'COMMON-LISP');
G_200 = lisp.intern('CDAR', 'COMMON-LISP');
G_202 = lisp.intern('NOTANY', 'COMMON-LISP');
G_206 = lisp.intern('BQ-ATTACH-CONSES', 'COMPILER');
G_220 = lisp.intern('LAST', 'COMMON-LISP');
G_228 = lisp.intern('CADAR', 'COMMON-LISP');
G_236 = lisp.intern('CDDAR', 'COMMON-LISP');
G_240 = lisp.intern('CAADAR', 'COMMON-LISP');
G_252 = lisp.intern('NULL-OR-QUOTED', 'COMPILER');
G_268 = lisp.intern('APPEND', 'COMMON-LISP');
G_273 = lisp.intern('EQUAL', 'COMMON-LISP');
G_287 = lisp.intern('LIST*', 'COMMON-LISP');
G_292 = lisp.intern('EVERY', 'COMMON-LISP');
G_298 = lisp.intern('%MAPCAR', 'SYSTEM');
G_331 = lisp.intern('NCONC', 'COMMON-LISP');
G_336 = lisp.intern('QUOTE', 'COMMON-LISP');
G_351 = lisp.intern('CDDDR', 'COMMON-LISP');
G_354 = lisp.intern('CONS', 'COMMON-LISP');
G_361 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');TMP_3=lisp.CL_boundp(G_2);
if(lisp.values1(TMP_3) !== lisp.S_nil){
}else{
lisp.CL_set(G_2,G_4);
}
lisp.CL_put(G_2,G_5,G_6);
TMP_8=lisp.CL_boundp(G_7);
if(lisp.values1(TMP_8) !== lisp.S_nil){
}else{
lisp.CL_set(G_7,G_9);
}
lisp.CL_put(G_7,G_5,G_6);
TMP_11=lisp.CL_boundp(G_10);
if(lisp.values1(TMP_11) !== lisp.S_nil){
}else{
lisp.CL_set(G_10,G_12);
}
lisp.CL_put(G_10,G_5,G_6);
TMP_14=lisp.CL_boundp(G_13);
if(lisp.values1(TMP_14) !== lisp.S_nil){
}else{
TMP_16=lisp.callFunctionWithCallStack(G_17,G_15.func(lisp.codeArrayToString([66, 81, 45, 76, 73, 83, 84])));
lisp.CL_set(G_13,TMP_16);
}
lisp.CL_put(G_13,G_5,G_6);
TMP_19=lisp.CL_boundp(G_18);
if(lisp.values1(TMP_19) !== lisp.S_nil){
}else{
TMP_20=lisp.callFunctionWithCallStack(G_17,G_15.func(lisp.codeArrayToString([66, 81, 45, 65, 80, 80, 69, 78, 68])));
lisp.CL_set(G_18,TMP_20);
}
lisp.CL_put(G_18,G_5,G_6);
TMP_22=lisp.CL_boundp(G_21);
if(lisp.values1(TMP_22) !== lisp.S_nil){
}else{
TMP_23=lisp.callFunctionWithCallStack(G_17,G_15.func(lisp.codeArrayToString([66, 81, 45, 76, 73, 83, 84, 42])));
lisp.CL_set(G_21,TMP_23);
}
lisp.CL_put(G_21,G_5,G_6);
TMP_25=lisp.CL_boundp(G_24);
if(lisp.values1(TMP_25) !== lisp.S_nil){
}else{
TMP_26=lisp.callFunctionWithCallStack(G_17,G_15.func(lisp.codeArrayToString([66, 81, 45, 78, 67, 79, 78, 67])));
lisp.CL_set(G_24,TMP_26);
}
lisp.CL_put(G_24,G_5,G_6);
TMP_28=lisp.CL_boundp(G_27);
if(lisp.values1(TMP_28) !== lisp.S_nil){
}else{
TMP_29=lisp.callFunctionWithCallStack(G_17,G_15.func(lisp.codeArrayToString([66, 81, 45, 67, 76, 79, 66, 66, 69, 82, 65, 66, 76, 69])));
lisp.CL_set(G_27,TMP_29);
}
lisp.CL_put(G_27,G_5,G_6);
TMP_31=lisp.CL_boundp(G_30);
if(lisp.values1(TMP_31) !== lisp.S_nil){
}else{
TMP_32=lisp.callFunctionWithCallStack(G_17,G_15.func(lisp.codeArrayToString([66, 81, 45, 81, 85, 79, 84, 69])));
lisp.CL_set(G_30,TMP_32);
}
lisp.CL_put(G_30,G_5,G_6);
TMP_34=lisp.CL_boundp(G_33);
if(lisp.values1(TMP_34) !== lisp.S_nil){
}else{
TMP_35=lisp.callFunctionWithCallStack(G_36,lisp.symbolValue(G_30),lisp.S_nil);
lisp.CL_set(G_33,TMP_35);
}
lisp.CL_put(G_33,G_5,G_6);
TMP_38=lisp.CL_boundp(G_37);
if(lisp.values1(TMP_38) !== lisp.S_nil){
}else{
lisp.CL_set(G_37,G_6);
}
lisp.CL_put(G_37,G_5,G_6);
CL_COMPILER_EXPAND_BACKQUOTE.lisp_name = 'EXPAND-BACKQUOTE'
lisp.setSymbolFunction(G_40, CL_COMPILER_EXPAND_BACKQUOTE);
CL_COMPILER_BQ_COMPLETELY_PROCESS.lisp_name = 'BQ-COMPLETELY-PROCESS'
lisp.setSymbolFunction(G_42, CL_COMPILER_BQ_COMPLETELY_PROCESS);
CL_COMPILER_BQ_PROCESS.lisp_name = 'BQ-PROCESS'
lisp.setSymbolFunction(G_45, CL_COMPILER_BQ_PROCESS);
CL_COMPILER_BRACKET.lisp_name = 'BRACKET'
lisp.setSymbolFunction(G_104, CL_COMPILER_BRACKET);
CL_COMPILER_MAPTREE.lisp_name = 'MAPTREE'
lisp.setSymbolFunction(G_128, CL_COMPILER_MAPTREE);
CL_COMPILER_BQ_SPLICING_FROB.lisp_name = 'BQ-SPLICING-FROB'
lisp.setSymbolFunction(G_145, CL_COMPILER_BQ_SPLICING_FROB);
CL_COMPILER_BQ_FROB.lisp_name = 'BQ-FROB'
lisp.setSymbolFunction(G_155, CL_COMPILER_BQ_FROB);
CL_COMPILER_BQ_SIMPLIFY.lisp_name = 'BQ-SIMPLIFY'
lisp.setSymbolFunction(G_48, CL_COMPILER_BQ_SIMPLIFY);
CL_COMPILER_BQ_SIMPLIFY_ARGS.lisp_name = 'BQ-SIMPLIFY-ARGS'
lisp.setSymbolFunction(G_181, CL_COMPILER_BQ_SIMPLIFY_ARGS);
CL_COMPILER_NULL_OR_QUOTED.lisp_name = 'NULL-OR-QUOTED'
lisp.setSymbolFunction(G_252, CL_COMPILER_NULL_OR_QUOTED);
CL_COMPILER_BQ_ATTACH_APPEND.lisp_name = 'BQ-ATTACH-APPEND'
lisp.setSymbolFunction(G_193, CL_COMPILER_BQ_ATTACH_APPEND);
CL_COMPILER_BQ_ATTACH_CONSES.lisp_name = 'BQ-ATTACH-CONSES'
lisp.setSymbolFunction(G_206, CL_COMPILER_BQ_ATTACH_CONSES);
CL_COMPILER_BQ_REMOVE_TOKENS.lisp_name = 'BQ-REMOVE-TOKENS'
lisp.setSymbolFunction(G_50, CL_COMPILER_BQ_REMOVE_TOKENS);
}catch(TMP_1){G_361.func();
console.log(TMP_1.message);
}


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let G_7;
let G_9;
let G_11;
let G_13;
let G_15;
let G_18;
let G_20;
let G_22;
let G_23;
let G_26;
let G_27;
let G_30;
let G_32;
let G_33;
let G_34;
let G_35;
let G_37;
let G_39;
let G_41;
let G_44;
let G_48;
let G_49;
let G_52;
let G_53;
let G_56;
let G_57;
let G_59;
let G_60;
let G_64;
let G_65;
let G_68;
let G_72;
let G_74;
let G_76;
let G_78;
let G_81;
let G_82;
let G_84;
let G_85;
let G_87;
let G_88;
let G_90;
let G_94;
let G_96;
let G_97;
let G_100;
let G_102;
let G_105;
let G_108;
let G_109;
let G_111;
let G_125;
let G_138;
let G_139;
let G_141;
let G_154;
let G_156;
let G_158;
let G_160;
let G_164;
let G_166;
let G_171;
let G_174;
let G_176;
let G_178;
let G_182;
let G_184;
let G_187;
let G_191;
let G_194;
let G_196;
let G_199;
let G_203;
let G_206;
let G_208;
let G_213;
let G_216;
let G_221;
let G_222;
let G_223;
let G_231;
let G_233;
let G_237;
let G_241;
let G_245;
let G_250;
let G_254;
let G_256;
let G_265;
let G_275;
let G_306;
let G_308;
let G_333;
let G_337;
let G_338;
let G_339;
let G_340;
let G_341;
let G_343;
let G_348;
let G_350;
let G_352;
let G_354;
let G_357;
let G_358;
let G_361;
let G_363;
let G_367;
let G_386;
let G_389;
let G_391;
let G_392;
let G_393;
let G_395;
let G_398;
let G_399;
let G_400;
let G_401;
let G_402;
let G_403;
let G_407;
let G_414;
let G_421;
let G_424;
let G_433;
let G_435;
let G_437;
let G_439;
let G_448;
let G_454;
let G_459;
let G_470;
let G_475;
let G_480;
let G_484;
let G_488;
let G_489;
let G_492;
let G_497;
let G_499;
let G_506;
let G_520;
let G_523;
let G_535;
let G_538;
let G_539;
let G_541;
let G_542;
let G_544;
let G_546;
let G_548;
let G_549;
let G_552;
let G_560;
let G_567;
let G_569;
let G_572;
let G_586;
let G_591;
let G_610;
let G_621;
let G_624;
let G_626;
let G_628;
let G_635;
let G_637;
let G_643;
let G_649;
let G_651;
let G_653;
let G_658;
let G_662;
let G_674;
let G_675;
let G_677;
let G_680;
let G_682;
let G_685;
let G_713;
let G_717;
let G_718;
let G_730;
let G_747;
let G_753;
let G_754;
let G_759;
let G_766;
let G_776;
let G_786;
let G_792;
let G_796;
let G_807;
let G_833;
let G_835;
let G_836;
let G_837;
let G_841;
let G_850;
let G_852;
let G_854;
let G_857;
let G_873;
let G_874;
let G_888;
let G_893;
let G_895;
let G_901;
let G_905;
let G_911;
let G_923;
let G_933;
let G_942;
let G_952;
let G_962;
let G_972;
let G_974;
let G_984;
let G_994;
let G_1004;
let G_1006;
let G_1016;
let G_1022;
let G_1024;
let G_1035;
let G_1037;
let G_1047;
let G_1048;
let G_1054;
let G_1061;
let G_1065;
let G_1069;
let G_1072;
let G_1074;
let G_1075;
let G_1078;
let G_1084;
let G_1088;
let G_1090;
let G_1094;
let G_1102;
let G_1113;
let G_1128;
let G_1133;
let G_1136;
let G_1139;
let G_1148;
let G_1160;
let G_1163;
let G_1166;
let G_1170;
let G_1173;
let G_1179;
let G_1181;
let G_1191;
let G_1201;
let G_1203;
let G_1209;
let G_1210;
let G_1218;
let G_1219;
let G_1221;
let G_1223;
let G_1231;
let G_1235;
let G_1236;
let G_1238;
let G_1239;
let G_1242;
let G_1244;
let G_1246;
let G_1252;
let G_1254;
let G_1277;
let G_1281;
let G_1282;
let G_1287;
let G_1296;
let G_1301;
let G_1306;
let G_1321;
let G_1323;
let G_1324;
let G_1334;
let G_1336;
let G_1337;
let G_1341;
let G_1364;
let G_1371;
let G_1372;
let G_1381;
let G_1382;
let G_1388;
let G_1389;
let G_1392;
let G_1406;
let G_1409;
let G_1410;
let G_1411;
let G_1412;
let G_1413;
let G_1414;
let G_1434;
let G_1444;
let G_1451;
let G_1467;
let CL_COMPILER_PASS1_DUMP_MACROS;
let CL_COMPILER_PASS1_MODULE;
let CL_COMPILER_PASS1_TOPLEVEL;
let CL_COMPILER_PASS1_FORM_TIME;
let CL_COMPILER_PASS1_AGET;
let CL_COMPILER_PASS1_NEW;
let CL_COMPILER_PASS1_TYPEOF;
let CL_COMPILER_PASS1_EXPORT;
let CL_COMPILER_PASS1_REQUIRE;
let CL_COMPILER_PASS1_VAR;
let CL_COMPILER_CONVERT_VAR;
let CL_COMPILER_PASS1_SET;
let CL_COMPILER_PASS1_REF;
let CL_COMPILER_PASS1_REF_NAMES;
let CL_COMPILER_IDENT_PLACE_P;
let CL_COMPILER_REF_FORM_P;
let CL_COMPILER_PASS1_IN_PACKAGE;
let CL_COMPILER_PASS1_PERCENTDEFPACKAGE;
let CL_COMPILER_PASS1_MULTIPLE_VALUE_CALL;
let CL_COMPILER_PASS1_PERCENTDEFUN;
let CL_COMPILER_PASS1_EVAL_WHEN;
let CL_COMPILER_PASS1_DECLAIM;
let CL_COMPILER_PASS1_LOCALLY;
let CL_COMPILER_PASS1_GO;
let CL_COMPILER_PASS1_TAGBODY;
let CL_COMPILER_TAG_LITERAL_P;
let CL_COMPILER_MAKE_TAGBODY_ID;
let CL_COMPILER_PASS1_RETURN_FROM;
let CL_COMPILER_PASS1_BLOCK;
let CL_COMPILER_PASS1_UNWIND_PROTECT;
let CL_COMPILER_PASS1_SYMBOL_MACROLET;
let CL_COMPILER_PASS1_MACROLET;
let CL_COMPILER_PASS1_LABELS;
let CL_COMPILER_PASS1_FLET;
let CL_COMPILER_PARSE_FLET_DEFINITIONS;
let CL_COMPILER_CHECK_FLET_DEFINITIONS;
let CL_COMPILER_PASS1_LETSTAR;
let CL_COMPILER_PASS1_LET;
let CL_COMPILER_PASS1_LET_BODY;
let CL_COMPILER_CHECK_LET_FORM;
let CL_COMPILER_PASS1_FUNCTION;
let CL_COMPILER_PASS1_PROGN;
let CL_COMPILER_PASS1_IF;
let CL_COMPILER_PASS1_SETQ;
let CL_COMPILER_PASS1_QUOTE;
let CL_COMPILER_PASS1;
let CL_COMPILER_PASS1_CALL;
let CL_COMPILER_PERCENTMACROEXPAND_1;
let CL_COMPILER_PERCENTMACRO_FUNCTION;
let CL_COMPILER_PASS1_LAMBDA;
let CL_COMPILER_PASS1_LAMBDA_LIST;
let CL_COMPILER_PASS1_DECLARES;
let CL_COMPILER_PRE_PROCESS_DECLARATION_SPECIFIER;
let CL_COMPILER_PASS1_FORMS;
let CL_COMPILER_PASS1_REFVAR;
let CL_COMPILER_JS_SYMBOL_TO_REF_FORM;
let CL_COMPILER_PASS1_CONST;
let CL_COMPILER_TRANSFORM_SYMBOL_P;
let CL_COMPILER_GET_TRANSFORM;
let CL_COMPILER_PARSE_LAMBDA_LIST;
let CL_COMPILER_DUPLICATE_VAR_P;
let CL_COMPILER_PROPER_LIST_P;
let CL_COMPILER_VARIABLE_SYMBOL_P;
let CL_COMPILER_EXTEND_LEXENV;
let CL_COMPILER_LOOKUP;
let CL_COMPILER_CONSTANT_P;
let CL_COMPILER_SPECIAL_P;
let CL_COMPILER_GET_SYMBOL_MACRO;
let CL_COMPILER_GET_MACRO;
let CL_COMPILER_COUNT_IF_USED;
let CL_COMPILER_MAKE_TAG_BINDING;
let CL_COMPILER_MAKE_BLOCK_BINDING;
let CL_COMPILER_MAKE_SYMBOL_MACRO_BINDING;
let CL_COMPILER_MAKE_MACRO_BINDING;
let CL_COMPILER_MAKE_FUNCTION_BINDING;
let CL_COMPILER_MAKE_VARIABLE_BINDING;
let CL_COMPILER_TOPLEVEL_P;
let TMP_1454;
let TMP_1404;
let L_G496__949;
let L_G493__941;
let L_G490__930;
let L_G483__914;
let L_G480__906;
let L_G476__896;
let L_G468__881;
let L_G455__864;
let L_G452__855;
let L_G435__826;
let L_G432__817;
let L_G429__803;
let L_G426__793;
let L_G421__776;
let L_G409__758;
let L_G388__738;
let L_G384__726;
let L_G381__717;
let TMP_1070;
let L_G360__680;
let L_G357__670;
let L_G354__658;
let L_G351__649;
let L_G348__638;
let L_G345__627;
let L_G332__605;
let L_G321__578;
let L_G316__563;
let L_G309__532;
let L_G303__520;
let L_G300__512;
let L_G297__502;
let L_G281__481;
let L_G166__292;
let L_G165__291;
let TMP_536;
let L_G160__287;
let L_G159__286;
let TMP_521;
let L_G156__277;
let L_G155__276;
let TMP_507;
let L_G152__269;
let L_G151__268;
let TMP_483;
let L_G148__260;
let L_G147__259;
let TMP_479;
let L_G144__253;
let L_G143__252;
let TMP_476;
let L_G137__247;
let L_G136__246;
let TMP_471;
let L_G129__238;
let L_G128__237;
let TMP_460;
let L_G121__223;
let L_G120__222;
let TMP_444;
let L_G114__207;
let L_G113__206;
let TMP_364;
let TMP_152;
let TMP_143;
let TMP_142;
let TMP_136;
let TMP_127;
let TMP_126;
let TMP_122;
let TMP_113;
let TMP_112;
let TMP_106;
let TMP_91;
let TMP_89;
let TMP_16;
let TMP_14;
let TMP_12;
let TMP_10;
let TMP_8;
let TMP_3;
// toplevel defun
let F_TOPLEVEL_P_17;
F_TOPLEVEL_P_17=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_18, arguments.length);
}
let TMP_19;
let L_LEVEL__1;
L_LEVEL__1=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_13)));
TMP_19=lisp.callFunctionWithCallStack(G_20,0,L_LEVEL__1);
return TMP_19;
});
CL_COMPILER_TOPLEVEL_P=lisp.values1(F_TOPLEVEL_P_17);
let F_MAKE_VARIABLE_BINDING_21;
F_MAKE_VARIABLE_BINDING_21=(function(){
if(arguments.length < 1 || 5 < arguments.length) {
lisp.argumentsError(G_22, arguments.length);
}
let TMP_38;
let TMP_36;
let TMP_31;
let L_INIT_VALUE__5;
let L_SPECIAL_P__4;
let TMP_25;
let L_SYMBOL__3;
L_SYMBOL__3=arguments[0];
let supplied_SPECIAL_P__4;
for (let TMP_24 = 1; TMP_24 < arguments.length; TMP_24 += 2) {
if(arguments[TMP_24] === G_23){
supplied_SPECIAL_P__4=arguments[TMP_24+1];
break;
}
}
TMP_25=G_26.func(L_SYMBOL__3);
L_SPECIAL_P__4=supplied_SPECIAL_P__4 !== undefined ? supplied_SPECIAL_P__4 : (lisp.values1(TMP_25));
let supplied_INIT_VALUE__5;
for (let TMP_28 = 1; TMP_28 < arguments.length; TMP_28 += 2) {
if(arguments[TMP_28] === G_27){
supplied_INIT_VALUE__5=arguments[TMP_28+1];
break;
}
}
L_INIT_VALUE__5=supplied_INIT_VALUE__5 !== undefined ? supplied_INIT_VALUE__5 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_29 = 1; TMP_29 < arguments.length; TMP_29 += 2) {
if(arguments[TMP_29]!==G_27 && arguments[TMP_29]!==G_23) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_29].name); }
}
if(lisp.values1(L_SPECIAL_P__4) !== lisp.S_nil){
TMP_31=lisp.values1(G_32);
}else{
TMP_31=lisp.values1(G_33);
}
TMP_36=lisp.callFunctionWithCallStack(G_37,L_SYMBOL__3);
TMP_38=lisp.callFunctionWithCallStack(G_39,G_30,TMP_31,G_34,L_SYMBOL__3,G_27,L_INIT_VALUE__5,G_35,TMP_36);
return TMP_38;
});
CL_COMPILER_MAKE_VARIABLE_BINDING=lisp.values1(F_MAKE_VARIABLE_BINDING_21);
let F_MAKE_FUNCTION_BINDING_40;
F_MAKE_FUNCTION_BINDING_40=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(G_41, arguments.length);
}
let TMP_46;
let TMP_45;
let L_INIT_VALUE__8;
let L_SYMBOL__7;
L_SYMBOL__7=arguments[0];
let supplied_INIT_VALUE__8;
for (let TMP_42 = 1; TMP_42 < arguments.length; TMP_42 += 2) {
if(arguments[TMP_42] === G_27){
supplied_INIT_VALUE__8=arguments[TMP_42+1];
break;
}
}
L_INIT_VALUE__8=supplied_INIT_VALUE__8 !== undefined ? supplied_INIT_VALUE__8 : (lisp.values1(lisp.S_nil));
if((arguments.length-1)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_43 = 1; TMP_43 < arguments.length; TMP_43 += 2) {
if(arguments[TMP_43]!==G_27) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_43].name); }
}
TMP_45=lisp.callFunctionWithCallStack(G_37,L_SYMBOL__7);
TMP_46=lisp.callFunctionWithCallStack(G_39,G_30,G_44,G_34,L_SYMBOL__7,G_27,L_INIT_VALUE__8,G_35,TMP_45);
return TMP_46;
});
CL_COMPILER_MAKE_FUNCTION_BINDING=lisp.values1(F_MAKE_FUNCTION_BINDING_40);
let F_MAKE_MACRO_BINDING_47;
F_MAKE_MACRO_BINDING_47=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_48, arguments.length);
}
let TMP_50;
let L_VALUE__11;
let L_NAME__10;
L_NAME__10=arguments[0];
L_VALUE__11=arguments[1];
TMP_50=lisp.callFunctionWithCallStack(G_39,G_30,G_49,G_34,L_NAME__10,G_35,L_VALUE__11);
return TMP_50;
});
CL_COMPILER_MAKE_MACRO_BINDING=lisp.values1(F_MAKE_MACRO_BINDING_47);
let F_MAKE_SYMBOL_MACRO_BINDING_51;
F_MAKE_SYMBOL_MACRO_BINDING_51=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_52, arguments.length);
}
let TMP_54;
let L_VALUE__14;
let L_NAME__13;
L_NAME__13=arguments[0];
L_VALUE__14=arguments[1];
TMP_54=lisp.callFunctionWithCallStack(G_39,G_30,G_53,G_34,L_NAME__13,G_35,L_VALUE__14);
return TMP_54;
});
CL_COMPILER_MAKE_SYMBOL_MACRO_BINDING=lisp.values1(F_MAKE_SYMBOL_MACRO_BINDING_51);
let F_MAKE_BLOCK_BINDING_55;
F_MAKE_BLOCK_BINDING_55=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_56, arguments.length);
}
let TMP_62;
let TMP_61;
let TMP_58;
let L_NAME__16;
L_NAME__16=arguments[0];
TMP_58=lisp.callFunctionWithCallStack(G_59,L_NAME__16);
TMP_61=lisp.callFunctionWithCallStack(G_37,TMP_58,G_60);
TMP_62=lisp.callFunctionWithCallStack(G_39,G_30,G_57,G_34,L_NAME__16,G_35,TMP_61);
return TMP_62;
});
CL_COMPILER_MAKE_BLOCK_BINDING=lisp.values1(F_MAKE_BLOCK_BINDING_55);
let F_MAKE_TAG_BINDING_63;
F_MAKE_TAG_BINDING_63=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_64, arguments.length);
}
let TMP_66;
let L_VALUE__19;
let L_NAME__18;
L_NAME__18=arguments[0];
L_VALUE__19=arguments[1];
TMP_66=lisp.callFunctionWithCallStack(G_39,G_30,G_65,G_34,L_NAME__18,G_35,L_VALUE__19);
return TMP_66;
});
CL_COMPILER_MAKE_TAG_BINDING=lisp.values1(F_MAKE_TAG_BINDING_63);
let F_COUNT_IF_USED_67;
F_COUNT_IF_USED_67=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_68, arguments.length);
}
let TMP_80;
let L_G_STORE3__27;
let TMP_79;
let TMP_77;
let L_G2__26;
let TMP_75;
let L_G_STORE1__25;
let TMP_73;
let TMP_71;
let L_G0__24;
let TMP_70;
let TMP_69;
let L_SET_P__22;
let L_BINDING__21;
L_BINDING__21=arguments[0];
L_SET_P__22=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
if(lisp.values1(L_BINDING__21) !== lisp.S_nil){
if(lisp.values1(L_SET_P__22) !== lisp.S_nil){
{
L_G0__24=lisp.values1(L_BINDING__21);
TMP_71=lisp.callFunctionWithCallStack(G_72,L_G0__24);
TMP_73=lisp.callFunctionWithCallStack(G_74,TMP_71,1);
L_G_STORE1__25=lisp.values1(TMP_73);
TMP_75=lisp.callFunctionWithCallStack(G_76,L_G_STORE1__25,L_G0__24);
}
TMP_70=TMP_75;
}else{
{
L_G2__26=lisp.values1(L_BINDING__21);
TMP_77=lisp.callFunctionWithCallStack(G_78,L_G2__26);
TMP_79=lisp.callFunctionWithCallStack(G_74,TMP_77,1);
L_G_STORE3__27=lisp.values1(TMP_79);
TMP_80=lisp.callFunctionWithCallStack(G_81,L_G_STORE3__27,L_G2__26);
}
TMP_70=TMP_80;
}
TMP_69=TMP_70;
}else{
TMP_69=lisp.values1(lisp.S_nil);
}
return TMP_69;
});
CL_COMPILER_COUNT_IF_USED=lisp.values1(F_COUNT_IF_USED_67);
let F_GET_MACRO_83;
F_GET_MACRO_83=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_84, arguments.length);
}
let TMP_86;
let L_SYMBOL__28;
L_SYMBOL__28=arguments[0];
TMP_86=lisp.callFunctionWithCallStack(G_87,L_SYMBOL__28,G_85);
return TMP_86;
});
CL_COMPILER_GET_MACRO=lisp.values1(F_GET_MACRO_83);
let F_GET_SYMBOL_MACRO_107;
F_GET_SYMBOL_MACRO_107=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_108, arguments.length);
}
let TMP_110;
let L_SYMBOL__46;
L_SYMBOL__46=arguments[0];
TMP_110=lisp.callFunctionWithCallStack(G_87,L_SYMBOL__46,G_109);
return TMP_110;
});
CL_COMPILER_GET_SYMBOL_MACRO=lisp.values1(F_GET_SYMBOL_MACRO_107);
let F_SPECIAL_P_123;
F_SPECIAL_P_123=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_26, arguments.length);
}
let TMP_124;
let L_SYMBOL__64;
L_SYMBOL__64=arguments[0];
TMP_124=lisp.callFunctionWithCallStack(G_87,L_SYMBOL__64,G_5);
return TMP_124;
});
CL_COMPILER_SPECIAL_P=lisp.values1(F_SPECIAL_P_123);
let F_CONSTANT_P_137;
F_CONSTANT_P_137=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_138, arguments.length);
}
let TMP_140;
let L_SYMBOL__82;
L_SYMBOL__82=arguments[0];
TMP_140=lisp.callFunctionWithCallStack(G_87,L_SYMBOL__82,G_139);
return TMP_140;
});
CL_COMPILER_CONSTANT_P=lisp.values1(F_CONSTANT_P_137);
let F_LOOKUP_153;
F_LOOKUP_153=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(G_154, arguments.length);
}
let TMP_172;
let TMP_170;
let TMP_169;
let TMP_168;
let TMP_167;
let TMP_165;
let TMP_163;
let TMP_162;
let TMP_161;
let TMP_159;
let L_BINDING__106;
let TMP_157;
let TMP_155;
let L_G53__105;
let BLOCK_RESULT_NIL__104;
let L_BINDINGS__102;
let L_TYPES__101;
let L_SYMBOL__100;
L_SYMBOL__100=arguments[0];
L_TYPES__101=arguments[1];
L_BINDINGS__102=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.symbolValue(G_11)));
BLOCK_NIL__104: for(;;){{
L_G53__105=lisp.values1(L_BINDINGS__102);
for(;;){
TMP_155=lisp.callFunctionWithCallStack(G_156,L_G53__105);
if(lisp.values1(TMP_155) !== lisp.S_nil){
}else{
{
TMP_157=lisp.callFunctionWithCallStack(G_158,L_G53__105);
L_BINDING__106=lisp.values1(TMP_157);
TMP_159=lisp.callFunctionWithCallStack(G_160,L_G53__105);
L_G53__105=lisp.values1(TMP_159);
TMP_161=lisp.CL_consp(L_TYPES__101);
if(lisp.values1(TMP_161) !== lisp.S_nil){
TMP_163=lisp.callFunctionWithCallStack(G_164,L_BINDING__106);
TMP_165=lisp.callFunctionWithCallStack(G_166,TMP_163,L_TYPES__101);
TMP_162=lisp.values1(TMP_165);
}else{
TMP_167=lisp.callFunctionWithCallStack(G_164,L_BINDING__106);
TMP_168=lisp.CL_eq(L_TYPES__101,TMP_167);
TMP_162=lisp.values1(TMP_168);
}
if(lisp.values1(TMP_162) !== lisp.S_nil){
TMP_170=lisp.callFunctionWithCallStack(G_171,L_BINDING__106);
TMP_172=lisp.CL_eq(L_SYMBOL__100,TMP_170);
TMP_169=lisp.values1(TMP_172);
}else{
TMP_169=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_169) !== lisp.S_nil){
BLOCK_RESULT_NIL__104=lisp.values1(L_BINDING__106);
break BLOCK_NIL__104;
}else{
}
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__104=lisp.values1(lisp.S_nil);
break;
}
return BLOCK_RESULT_NIL__104;
});
CL_COMPILER_LOOKUP=lisp.values1(F_LOOKUP_153);
let F_EXTEND_LEXENV_173;
F_EXTEND_LEXENV_173=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_174, arguments.length);
}
let TMP_175;
let L_LEXENV__109;
let L_BINDINGS__108;
L_BINDINGS__108=arguments[0];
L_LEXENV__109=arguments[1];
TMP_175=lisp.callFunctionWithCallStack(G_176,L_BINDINGS__108,L_LEXENV__109);
return TMP_175;
});
CL_COMPILER_EXTEND_LEXENV=lisp.values1(F_EXTEND_LEXENV_173);
let F_VARIABLE_SYMBOL_P_177;
F_VARIABLE_SYMBOL_P_177=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_178, arguments.length);
}
let TMP_192;
let TMP_190;
let TMP_189;
let TMP_188;
let TMP_186;
let TMP_185;
let TMP_183;
let TMP_181;
let TMP_180;
let TMP_179;
let L_X__111;
L_X__111=arguments[0];
TMP_179=lisp.CL_symbolp(L_X__111);
if(lisp.values1(TMP_179) !== lisp.S_nil){
TMP_181=lisp.callFunctionWithCallStack(G_182,L_X__111);
TMP_183=lisp.callFunctionWithCallStack(G_184,TMP_181);
if(lisp.values1(TMP_183) !== lisp.S_nil){
TMP_186=lisp.callFunctionWithCallStack(G_187,L_X__111);
TMP_188=lisp.callFunctionWithCallStack(G_184,TMP_186);
if(lisp.values1(TMP_188) !== lisp.S_nil){
TMP_190=lisp.callFunctionWithCallStack(G_191,L_X__111);
TMP_192=lisp.callFunctionWithCallStack(G_184,TMP_190);
TMP_189=TMP_192;
}else{
TMP_189=lisp.values1(lisp.S_nil);
}
TMP_185=TMP_189;
}else{
TMP_185=lisp.values1(lisp.S_nil);
}
TMP_180=TMP_185;
}else{
TMP_180=lisp.values1(lisp.S_nil);
}
return TMP_180;
});
CL_COMPILER_VARIABLE_SYMBOL_P=lisp.values1(F_VARIABLE_SYMBOL_P_177);
let F_PROPER_LIST_P_193;
F_PROPER_LIST_P_193=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_194, arguments.length);
}
let TMP_201;
let TMP_200;
let TMP_198;
let TMP_197;
let TMP_195;
let L_X__113;
L_X__113=arguments[0];
TMP_195=lisp.callFunctionWithCallStack(G_196,L_X__113);
if(lisp.values1(TMP_195) !== lisp.S_nil){
TMP_198=lisp.callFunctionWithCallStack(G_199,L_X__113);
TMP_200=lisp.callFunctionWithCallStack(G_160,TMP_198);
TMP_201=lisp.callFunctionWithCallStack(G_182,TMP_200);
TMP_197=TMP_201;
}else{
TMP_197=lisp.values1(lisp.S_nil);
}
return TMP_197;
});
CL_COMPILER_PROPER_LIST_P=lisp.values1(F_PROPER_LIST_P_193);
let F_DUPLICATE_VAR_P_202;
F_DUPLICATE_VAR_P_202=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_203, arguments.length);
}
let L_G66__119;
let TMP_211;
let TMP_210;
let TMP_209;
let TMP_207;
let TMP_205;
let TMP_204;
let L_VARSTAR__118;
let BLOCK_RESULT_NIL__117;
let L_VARS__115;
L_VARS__115=arguments[0];
BLOCK_NIL__117: for(;;){{
L_VARSTAR__118=lisp.values1(L_VARS__115);
for(;;){
TMP_204=lisp.callFunctionWithCallStack(G_182,L_VARSTAR__118);
if(lisp.values1(TMP_204) !== lisp.S_nil){
BLOCK_RESULT_NIL__117=lisp.values1(lisp.S_nil);
break BLOCK_NIL__117;
}else{
TMP_205=lisp.callFunctionWithCallStack(G_206,L_VARSTAR__118);
TMP_207=lisp.callFunctionWithCallStack(G_208,L_VARSTAR__118);
TMP_209=lisp.callFunctionWithCallStack(G_166,TMP_205,TMP_207);
if(lisp.values1(TMP_209) !== lisp.S_nil){
TMP_210=lisp.callFunctionWithCallStack(G_206,L_VARSTAR__118);
BLOCK_RESULT_NIL__117=TMP_210;
break BLOCK_NIL__117;
}else{
}
{
TMP_211=lisp.callFunctionWithCallStack(G_208,L_VARSTAR__118);
L_G66__119=lisp.values1(TMP_211);
L_VARSTAR__118=lisp.values1(L_G66__119);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__117=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__117;
});
CL_COMPILER_DUPLICATE_VAR_P=lisp.values1(F_DUPLICATE_VAR_P_202);
let F_PARSE_LAMBDA_LIST_212;
F_PARSE_LAMBDA_LIST_212=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_213, arguments.length);
}
let TMP_355;
let L_ALL_VARS__187;
let TMP_353;
let L_PARSED_LAMBDA_LIST__186;
let TMP_351;
let TMP_349;
let TMP_347;
let TMP_346;
let TMP_345;
let TMP_344;
let L_G108__184;
let TMP_342;
let L_MIN__183;
let TMP_336;
let TMP_335;
let TMP_334;
let TMP_332;
let L_G107__182;
let TMP_331;
let L_G106__181;
let TMP_330;
let TMP_327;
let L_G103__177;
let TMP_326;
let TMP_325;
let L_G101__175;
let TMP_324;
let TMP_323;
let TMP_322;
let TMP_321;
let TMP_320;
let TMP_319;
let L_G100__174;
let TMP_318;
let L_G99__173;
let TMP_315;
let L_G97__170;
let TMP_314;
let L_G94__167;
let TMP_313;
let TMP_312;
let TMP_311;
let TMP_310;
let L_G92__165;
let TMP_309;
let L_ARG__164;
let TMP_307;
let TMP_305;
let TMP_304;
let L_ARGSTAR__163;
let BLOCK_RESULT_NIL__162;
let L_ALLOW_OTHER_KEYS__161;
let L_KEY_P__160;
let L_OPTIONAL_P__159;
let L_KEYS__158;
let L_OPTIONALS__157;
let L_STATE__156;
let L_REST_VAR__155;
let L_VARS__154;
let F_ADD_OPTIONAL_VARS__124;
let TMP_228;
let F_CHECK_VARIABLE__123;
let TMP_217;
let F_LAMBDA_LIST_ERROR__122;
let TMP_214;
let L_LAMBDA_LIST__120;
L_LAMBDA_LIST__120=arguments[0];
{
TMP_214=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_215;
TMP_215=lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([66, 97, 100, 32, 108, 97, 109, 98, 100, 97, 32, 108, 105, 115, 116, 58, 32, 126, 83])),L_LAMBDA_LIST__120);
return TMP_215;
});
F_LAMBDA_LIST_ERROR__122=lisp.values1(TMP_214);
TMP_217=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_227;
let TMP_226;
let TMP_225;
let L_G68__127;
let TMP_224;
let TMP_220;
let L_G67__126;
let TMP_219;
let TMP_218;
let L_X__125;
L_X__125=arguments[0];
{
TMP_218=G_178.func(L_X__125);
TMP_219=lisp.callFunctionWithCallStack(G_184,TMP_218);
L_G67__126=lisp.values1(TMP_219);
if(lisp.values1(L_G67__126) !== lisp.S_nil){
TMP_220=lisp.values1(L_G67__126);
}else{
{
TMP_224=lisp.callFunctionWithCallStack(G_166,L_X__125,lisp.makeCons(G_221, lisp.makeCons(G_222, lisp.makeCons(G_223, lisp.S_nil))));
L_G68__127=lisp.values1(TMP_224);
if(lisp.values1(L_G68__127) !== lisp.S_nil){
TMP_225=lisp.values1(L_G68__127);
}else{
TMP_225=lisp.values1(lisp.S_nil);
}
}
TMP_220=lisp.values1(lisp.values1(TMP_225));
}
}
if(lisp.values1(lisp.values1(TMP_220)) !== lisp.S_nil){
TMP_227=F_LAMBDA_LIST_ERROR__122();
TMP_226=TMP_227;
}else{
TMP_226=lisp.values1(lisp.S_nil);
}
return TMP_226;
});
F_CHECK_VARIABLE__123=lisp.values1(TMP_217);
TMP_228=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_303;
let TMP_302;
let TMP_301;
let L_G84__152;
let TMP_300;
let TMP_299;
let TMP_298;
let TMP_297;
let TMP_296;
let TMP_295;
let TMP_294;
let TMP_293;
let TMP_292;
let TMP_291;
let TMP_290;
let TMP_289;
let TMP_288;
let TMP_287;
let TMP_286;
let TMP_285;
let TMP_284;
let TMP_283;
let TMP_282;
let TMP_281;
let TMP_280;
let L_ARG1__149;
let TMP_279;
let TMP_278;
let L_G81__148;
let TMP_277;
let TMP_276;
let TMP_274;
let TMP_271;
let TMP_270;
let L_G79__142;
let TMP_269;
let TMP_268;
let TMP_267;
let TMP_266;
let TMP_264;
let TMP_263;
let TMP_262;
let TMP_261;
let L_G78__141;
let TMP_260;
let L_G77__140;
let TMP_259;
let TMP_258;
let TMP_257;
let TMP_255;
let TMP_253;
let TMP_252;
let L_G76__139;
let TMP_251;
let L_G75__138;
let L_LEN__137;
let TMP_249;
let TMP_248;
let TMP_247;
let L_G74__136;
let TMP_246;
let TMP_244;
let TMP_243;
let TMP_242;
let TMP_240;
let TMP_239;
let L_G72__134;
let TMP_238;
let TMP_236;
let TMP_235;
let TMP_234;
let L_G71__133;
let TMP_232;
let L_G70__132;
let TMP_230;
let L_G69__131;
let TMP_229;
let L_ADD_FN__130;
let L_ARG__129;
let L_KIND__128;
L_KIND__128=arguments[0];
L_ARG__129=arguments[1];
L_ADD_FN__130=arguments[2];
{
TMP_229=lisp.CL_symbolp(L_ARG__129);
L_G69__131=lisp.values1(TMP_229);
if(lisp.values1(L_G69__131) !== lisp.S_nil){
F_CHECK_VARIABLE__123(L_ARG__129);
{
L_G70__132=lisp.values1(L_KIND__128);
{
TMP_232=lisp.callFunctionWithCallStack(G_233,L_G70__132,G_231);
L_G71__133=lisp.values1(TMP_232);
if(lisp.values1(L_G71__133) !== lisp.S_nil){
TMP_235=lisp.callFunctionWithCallStack(G_100,L_ARG__129,lisp.S_nil,lisp.S_nil);
TMP_236=lisp.CL_funcall(lisp.values1(L_ADD_FN__130),TMP_235);
TMP_234=TMP_236;
}else{
{
TMP_238=lisp.callFunctionWithCallStack(G_233,L_G70__132,G_237);
L_G72__134=lisp.values1(TMP_238);
if(lisp.values1(L_G72__134) !== lisp.S_nil){
TMP_240=lisp.callFunctionWithCallStack(G_241,L_ARG__129);
TMP_242=lisp.callFunctionWithCallStack(G_100,L_ARG__129,lisp.S_nil,lisp.S_nil,TMP_240);
TMP_243=lisp.CL_funcall(lisp.values1(L_ADD_FN__130),TMP_242);
TMP_239=TMP_243;
}else{
TMP_244=lisp.callFunctionWithCallStack(G_245,G_97.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G70__132,lisp.makeCons(G_231, lisp.makeCons(G_237, lisp.S_nil)));
TMP_239=TMP_244;
}
}
TMP_234=TMP_239;
}
}
}
TMP_230=TMP_234;
}else{
{
TMP_246=lisp.CL_consp(L_ARG__129);
L_G74__136=lisp.values1(TMP_246);
if(lisp.values1(L_G74__136) !== lisp.S_nil){
TMP_248=G_194.func(L_ARG__129);
if(lisp.values1(TMP_248) !== lisp.S_nil){
}else{
F_LAMBDA_LIST_ERROR__122();
}
{
TMP_249=lisp.callFunctionWithCallStack(G_250,L_ARG__129);
L_LEN__137=lisp.values1(TMP_249);
{
L_G75__138=lisp.values1(L_LEN__137);
{
TMP_251=lisp.callFunctionWithCallStack(G_166,L_G75__138,lisp.makeCons(1, lisp.makeCons(2, lisp.makeCons(3, lisp.S_nil))));
L_G76__139=lisp.values1(TMP_251);
if(lisp.values1(L_G76__139) !== lisp.S_nil){
TMP_253=lisp.callFunctionWithCallStack(G_254,L_LEN__137,3);
if(lisp.values1(TMP_253) !== lisp.S_nil){
TMP_255=lisp.callFunctionWithCallStack(G_256,L_ARG__129);
F_CHECK_VARIABLE__123(TMP_255);
TMP_257=lisp.callFunctionWithCallStack(G_206,L_ARG__129);
TMP_258=lisp.callFunctionWithCallStack(G_256,L_ARG__129);
TMP_259=lisp.CL_eq(TMP_257,TMP_258);
if(lisp.values1(TMP_259) !== lisp.S_nil){
F_LAMBDA_LIST_ERROR__122();
}else{
}
}else{
}
{
L_G77__140=lisp.values1(L_KIND__128);
{
TMP_260=lisp.callFunctionWithCallStack(G_233,L_G77__140,G_231);
L_G78__141=lisp.values1(TMP_260);
if(lisp.values1(L_G78__141) !== lisp.S_nil){
TMP_262=lisp.callFunctionWithCallStack(G_206,L_ARG__129);
F_CHECK_VARIABLE__123(TMP_262);
TMP_263=lisp.callFunctionWithCallStack(G_206,L_ARG__129);
TMP_264=lisp.callFunctionWithCallStack(G_265,L_ARG__129);
TMP_266=lisp.callFunctionWithCallStack(G_256,L_ARG__129);
TMP_267=lisp.callFunctionWithCallStack(G_100,TMP_263,TMP_264,TMP_266);
TMP_268=lisp.CL_funcall(lisp.values1(L_ADD_FN__130),TMP_267);
TMP_261=TMP_268;
}else{
{
TMP_269=lisp.callFunctionWithCallStack(G_233,L_G77__140,G_237);
L_G79__142=lisp.values1(TMP_269);
if(lisp.values1(L_G79__142) !== lisp.S_nil){
TMP_271=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_273;
let TMP_272;
let L_G80__147;
let L_KEYWORD__146;
let L_SUPPLIED_VAR__145;
let L_VALUE__144;
let L_VAR__143;
L_VAR__143=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VALUE__144=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_SUPPLIED_VAR__145=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_KEYWORD__146=arguments.length > 3 ? arguments[3] : (lisp.values1(lisp.S_nil));
L_G80__147=lisp.jsArrayToList(arguments, 4);
TMP_272=lisp.callFunctionWithCallStack(G_100,L_VAR__143,L_VALUE__144,L_SUPPLIED_VAR__145,L_KEYWORD__146);
TMP_273=lisp.CL_funcall(lisp.values1(L_ADD_FN__130),TMP_272);
return TMP_273;
});
TMP_274=lisp.callFunctionWithCallStack(G_275,TMP_271);
{
TMP_276=lisp.callFunctionWithCallStack(G_206,L_ARG__129);
TMP_277=lisp.CL_consp(TMP_276);
L_G81__148=lisp.values1(TMP_277);
if(lisp.values1(L_G81__148) !== lisp.S_nil){
{
TMP_279=lisp.callFunctionWithCallStack(G_206,L_ARG__129);
L_ARG1__149=lisp.values1(TMP_279);
TMP_280=G_194.func(L_ARG1__149);
if(lisp.values1(TMP_280) !== lisp.S_nil){
}else{
F_LAMBDA_LIST_ERROR__122();
}
TMP_281=lisp.callFunctionWithCallStack(G_250,L_ARG1__149);
TMP_282=lisp.callFunctionWithCallStack(G_254,2,TMP_281);
if(lisp.values1(TMP_282) !== lisp.S_nil){
}else{
F_LAMBDA_LIST_ERROR__122();
}
TMP_283=lisp.callFunctionWithCallStack(G_206,L_ARG1__149);
TMP_284=lisp.CL_symbolp(TMP_283);
if(lisp.values1(TMP_284) !== lisp.S_nil){
}else{
F_LAMBDA_LIST_ERROR__122();
}
TMP_285=lisp.callFunctionWithCallStack(G_265,L_ARG1__149);
F_CHECK_VARIABLE__123(TMP_285);
TMP_286=lisp.callFunctionWithCallStack(G_265,L_ARG1__149);
TMP_287=lisp.callFunctionWithCallStack(G_265,L_ARG__129);
TMP_288=lisp.callFunctionWithCallStack(G_256,L_ARG__129);
TMP_289=lisp.callFunctionWithCallStack(G_206,L_ARG1__149);
TMP_290=lisp.CL_values(TMP_286,TMP_287,TMP_288,TMP_289);
}
TMP_278=TMP_290;
}else{
TMP_291=lisp.callFunctionWithCallStack(G_206,L_ARG__129);
F_CHECK_VARIABLE__123(TMP_291);
TMP_292=lisp.callFunctionWithCallStack(G_206,L_ARG__129);
TMP_293=lisp.callFunctionWithCallStack(G_265,L_ARG__129);
TMP_294=lisp.callFunctionWithCallStack(G_256,L_ARG__129);
TMP_295=lisp.callFunctionWithCallStack(G_206,L_ARG__129);
TMP_296=lisp.callFunctionWithCallStack(G_241,TMP_295);
TMP_297=lisp.CL_values(TMP_292,TMP_293,TMP_294,TMP_296);
TMP_278=TMP_297;
}
}
TMP_298=lisp.CL_multipleValueCall(TMP_274,TMP_278);
TMP_270=TMP_298;
}else{
TMP_299=lisp.callFunctionWithCallStack(G_245,G_97.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G77__140,lisp.makeCons(G_231, lisp.makeCons(G_237, lisp.S_nil)));
TMP_270=TMP_299;
}
}
TMP_261=TMP_270;
}
}
}
TMP_252=TMP_261;
}else{
{
TMP_300=lisp.callFunctionWithCallStack(G_233,L_G75__138,G_6);
L_G84__152=lisp.values1(TMP_300);
if(lisp.values1(L_G84__152) !== lisp.S_nil){
TMP_302=F_LAMBDA_LIST_ERROR__122();
TMP_301=TMP_302;
}else{
TMP_301=lisp.values1(lisp.S_nil);
}
}
TMP_252=TMP_301;
}
}
}
}
TMP_247=TMP_252;
}else{
TMP_303=F_LAMBDA_LIST_ERROR__122();
TMP_247=TMP_303;
}
}
TMP_230=TMP_247;
}
}
return TMP_230;
});
F_ADD_OPTIONAL_VARS__124=lisp.values1(TMP_228);
{
L_VARS__154=lisp.values1(lisp.S_nil);
L_REST_VAR__155=lisp.values1(lisp.S_nil);
L_STATE__156=lisp.values1(lisp.S_nil);
L_OPTIONALS__157=lisp.values1(lisp.S_nil);
L_KEYS__158=lisp.values1(lisp.S_nil);
L_OPTIONAL_P__159=lisp.values1(lisp.S_nil);
L_KEY_P__160=lisp.values1(lisp.S_nil);
L_ALLOW_OTHER_KEYS__161=lisp.values1(lisp.S_nil);
BLOCK_NIL__162: for(;;){{
L_ARGSTAR__163=lisp.values1(L_LAMBDA_LIST__120);
for(;;){
TMP_304=lisp.callFunctionWithCallStack(G_182,L_ARGSTAR__163);
if(lisp.values1(TMP_304) !== lisp.S_nil){
BLOCK_RESULT_NIL__162=lisp.values1(lisp.S_nil);
break BLOCK_NIL__162;
}else{
TMP_305=lisp.callFunctionWithCallStack(G_306,L_ARGSTAR__163);
if(lisp.values1(TMP_305) !== lisp.S_nil){
F_LAMBDA_LIST_ERROR__122();
}else{
}
{
TMP_307=lisp.callFunctionWithCallStack(G_158,L_ARGSTAR__163);
L_ARG__164=lisp.values1(TMP_307);
{
TMP_309=lisp.CL_eq(L_ARG__164,G_308);
L_G92__165=lisp.values1(TMP_309);
if(lisp.values1(L_G92__165) !== lisp.S_nil){
TMP_310=lisp.CL_eq(L_STATE__156,G_237);
if(lisp.values1(TMP_310) !== lisp.S_nil){
}else{
F_LAMBDA_LIST_ERROR__122();
}
TMP_311=lisp.callFunctionWithCallStack(G_160,L_ARGSTAR__163);
TMP_312=lisp.callFunctionWithCallStack(G_182,TMP_311);
if(lisp.values1(TMP_312) !== lisp.S_nil){
}else{
F_LAMBDA_LIST_ERROR__122();
}
L_ALLOW_OTHER_KEYS__161=lisp.values1(G_6);
}else{
{
TMP_313=lisp.CL_eq(L_ARG__164,G_223);
L_G94__167=lisp.values1(TMP_313);
if(lisp.values1(L_G94__167) !== lisp.S_nil){
if(lisp.values1(L_KEY_P__160) !== lisp.S_nil){
F_LAMBDA_LIST_ERROR__122();
}else{
}
L_KEY_P__160=lisp.values1(G_6);
L_STATE__156=lisp.values1(G_237);
}else{
{
TMP_314=lisp.CL_eq(L_STATE__156,G_237);
L_G97__170=lisp.values1(TMP_314);
if(lisp.values1(L_G97__170) !== lisp.S_nil){
TMP_315=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_317;
let L_G98__172;
let TMP_316;
let L_X__171;
L_X__171=arguments[0];
{
TMP_316=lisp.CL_cons(L_X__171,L_KEYS__158);
L_G98__172=lisp.values1(TMP_316);
L_KEYS__158=(TMP_317=lisp.values1(L_G98__172));
}
return lisp.values1(TMP_317);
});
F_ADD_OPTIONAL_VARS__124(G_237,L_ARG__164,TMP_315);
}else{
{
L_G99__173=lisp.values1(L_REST_VAR__155);
if(lisp.values1(L_G99__173) !== lisp.S_nil){
F_LAMBDA_LIST_ERROR__122();
}else{
{
TMP_318=lisp.CL_eq(L_ARG__164,G_221);
L_G100__174=lisp.values1(TMP_318);
if(lisp.values1(L_G100__174) !== lisp.S_nil){
TMP_319=lisp.callFunctionWithCallStack(G_160,L_ARGSTAR__163);
TMP_320=lisp.CL_consp(TMP_319);
if(lisp.values1(TMP_320) !== lisp.S_nil){
}else{
F_LAMBDA_LIST_ERROR__122();
}
TMP_321=lisp.callFunctionWithCallStack(G_265,L_ARGSTAR__163);
F_CHECK_VARIABLE__123(TMP_321);
TMP_322=lisp.callFunctionWithCallStack(G_265,L_ARGSTAR__163);
L_REST_VAR__155=lisp.values1(TMP_322);
TMP_323=lisp.callFunctionWithCallStack(G_160,L_ARGSTAR__163);
L_ARGSTAR__163=lisp.values1(TMP_323);
}else{
{
TMP_324=lisp.CL_eq(L_ARG__164,G_222);
L_G101__175=lisp.values1(TMP_324);
if(lisp.values1(L_G101__175) !== lisp.S_nil){
if(lisp.values1(L_OPTIONAL_P__159) !== lisp.S_nil){
F_LAMBDA_LIST_ERROR__122();
}else{
}
L_OPTIONAL_P__159=lisp.values1(G_6);
TMP_325=lisp.CL_eq(L_STATE__156,G_231);
if(lisp.values1(TMP_325) !== lisp.S_nil){
F_LAMBDA_LIST_ERROR__122();
}else{
}
L_STATE__156=lisp.values1(G_231);
}else{
{
TMP_326=lisp.CL_eq(L_STATE__156,G_231);
L_G103__177=lisp.values1(TMP_326);
if(lisp.values1(L_G103__177) !== lisp.S_nil){
TMP_327=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_329;
let L_G104__179;
let TMP_328;
let L_X__178;
L_X__178=arguments[0];
{
TMP_328=lisp.CL_cons(L_X__178,L_OPTIONALS__157);
L_G104__179=lisp.values1(TMP_328);
L_OPTIONALS__157=(TMP_329=lisp.values1(L_G104__179));
}
return lisp.values1(TMP_329);
});
F_ADD_OPTIONAL_VARS__124(G_231,L_ARG__164,TMP_327);
}else{
F_CHECK_VARIABLE__123(L_ARG__164);
{
TMP_330=lisp.CL_cons(L_ARG__164,L_VARS__154);
L_G106__181=lisp.values1(TMP_330);
L_VARS__154=lisp.values1(L_G106__181);
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
{
TMP_331=lisp.callFunctionWithCallStack(G_160,L_ARGSTAR__163);
L_G107__182=lisp.values1(TMP_331);
L_ARGSTAR__163=lisp.values1(L_G107__182);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__162=lisp.values1(lisp.S_nil);
break;
}
TMP_332=lisp.callFunctionWithCallStack(G_333,L_VARS__154);
L_VARS__154=lisp.values1(TMP_332);
TMP_334=lisp.callFunctionWithCallStack(G_333,L_OPTIONALS__157);
L_OPTIONALS__157=lisp.values1(TMP_334);
TMP_335=lisp.callFunctionWithCallStack(G_333,L_KEYS__158);
L_KEYS__158=lisp.values1(TMP_335);
{
TMP_336=lisp.callFunctionWithCallStack(G_250,L_VARS__154);
L_MIN__183=lisp.values1(TMP_336);
TMP_342=lisp.callFunctionWithCallStack(G_250,L_VARS__154);
{
L_G108__184=lisp.values1(L_REST_VAR__155);
if(lisp.values1(L_G108__184) !== lisp.S_nil){
TMP_344=lisp.values1(lisp.S_nil);
}else{
TMP_345=lisp.callFunctionWithCallStack(G_250,L_OPTIONALS__157);
TMP_346=lisp.callFunctionWithCallStack(G_250,L_KEYS__158);
TMP_347=lisp.callFunctionWithCallStack(G_348,2,TMP_346);
TMP_349=lisp.callFunctionWithCallStack(G_74,L_MIN__183,TMP_345,TMP_347);
TMP_344=lisp.values1(TMP_349);
}
}
TMP_351=lisp.callFunctionWithCallStack(G_352,G_337,L_VARS__154,G_338,L_OPTIONALS__157,G_339,L_REST_VAR__155,G_340,L_KEYS__158,G_341,TMP_342,G_343,lisp.values1(TMP_344),G_350,L_ALLOW_OTHER_KEYS__161);
L_PARSED_LAMBDA_LIST__186=lisp.values1(TMP_351);
{
TMP_353=lisp.callFunctionWithCallStack(G_354,L_PARSED_LAMBDA_LIST__186);
L_ALL_VARS__187=lisp.values1(TMP_353);
TMP_355=G_203.func(L_ALL_VARS__187);
if(lisp.values1(TMP_355) !== lisp.S_nil){
F_LAMBDA_LIST_ERROR__122();
}else{
}
}
}
}
}
return lisp.values1(L_PARSED_LAMBDA_LIST__186);
});
CL_COMPILER_PARSE_LAMBDA_LIST=lisp.values1(F_PARSE_LAMBDA_LIST_212);
let F_GET_TRANSFORM_356;
F_GET_TRANSFORM_356=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_357, arguments.length);
}
let TMP_359;
let L_SYMBOL__188;
L_SYMBOL__188=arguments[0];
TMP_359=lisp.callFunctionWithCallStack(G_87,L_SYMBOL__188,G_358);
return TMP_359;
});
CL_COMPILER_GET_TRANSFORM=lisp.values1(F_GET_TRANSFORM_356);
let F_TRANSFORM_SYMBOL_P_360;
F_TRANSFORM_SYMBOL_P_360=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_361, arguments.length);
}
let TMP_362;
let L_SYMBOL__190;
L_SYMBOL__190=arguments[0];
TMP_362=G_357.func(L_SYMBOL__190);
return TMP_362;
});
CL_COMPILER_TRANSFORM_SYMBOL_P=lisp.values1(F_TRANSFORM_SYMBOL_P_360);
let F_PASS1_CONST_540;
F_PASS1_CONST_540=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_541, arguments.length);
}
let TMP_543;
let L_RETURN_VALUE_P__294;
let L_X__293;
L_X__293=arguments[0];
L_RETURN_VALUE_P__294=arguments[1];
TMP_543=lisp.callFunctionWithCallStack(G_544,G_542,L_RETURN_VALUE_P__294,lisp.S_nil,L_X__293);
return TMP_543;
});
CL_COMPILER_PASS1_CONST=lisp.values1(F_PASS1_CONST_540);
let F_JS_SYMBOL_TO_REF_FORM_545;
F_JS_SYMBOL_TO_REF_FORM_545=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_546, arguments.length);
}
let TMP_550;
let L_NAMES__299;
let TMP_547;
let L_RETURN_VALUE_P__297;
let L_SYMBOL__296;
L_SYMBOL__296=arguments[0];
L_RETURN_VALUE_P__297=arguments[1];
{
TMP_547=lisp.callFunctionWithCallStack(G_548,L_SYMBOL__296);
L_NAMES__299=lisp.values1(TMP_547);
TMP_550=lisp.callFunctionWithCallStack(G_544,G_549,L_RETURN_VALUE_P__297,lisp.S_nil,L_NAMES__299);
}
return TMP_550;
});
CL_COMPILER_JS_SYMBOL_TO_REF_FORM=lisp.values1(F_JS_SYMBOL_TO_REF_FORM_545);
let F_PASS1_REFVAR_551;
F_PASS1_REFVAR_551=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_552, arguments.length);
}
let TMP_570;
let TMP_568;
let TMP_566;
let TMP_565;
let TMP_564;
let TMP_563;
let L_BINDING__307;
let TMP_562;
let TMP_561;
let TMP_559;
let TMP_558;
let L_G168__305;
let TMP_557;
let TMP_556;
let TMP_555;
let TMP_554;
let L_G167__304;
let TMP_553;
let L_BINDING__303;
let L_RETURN_VALUE_P__301;
let L_SYMBOL__300;
L_SYMBOL__300=arguments[0];
L_RETURN_VALUE_P__301=arguments[1];
{
L_BINDING__303=lisp.values1(lisp.S_nil);
{
TMP_553=lisp.callFunctionWithCallStack(G_191,L_SYMBOL__300);
L_G167__304=lisp.values1(TMP_553);
if(lisp.values1(L_G167__304) !== lisp.S_nil){
TMP_555=G_546.func(L_SYMBOL__300,L_RETURN_VALUE_P__301);
TMP_554=TMP_555;
}else{
{
TMP_556=G_138.func(L_SYMBOL__300);
L_BINDING__303=(TMP_557=lisp.values1(TMP_556));
L_G168__305=lisp.values1(TMP_557);
if(lisp.values1(L_G168__305) !== lisp.S_nil){
TMP_559=lisp.callFunctionWithCallStack(G_560,L_BINDING__303);
TMP_561=G_541.func(TMP_559,L_RETURN_VALUE_P__301);
TMP_558=TMP_561;
}else{
{
TMP_562=G_154.func(L_SYMBOL__300,lisp.makeCons(G_33, lisp.makeCons(G_32, lisp.S_nil)));
L_BINDING__307=lisp.values1(TMP_562);
G_68.func(L_BINDING__307);
if(lisp.values1(L_BINDING__307) !== lisp.S_nil){
TMP_564=lisp.callFunctionWithCallStack(G_164,L_BINDING__307);
TMP_565=lisp.CL_eq(TMP_564,G_33);
TMP_563=lisp.values1(TMP_565);
}else{
TMP_563=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_563) !== lisp.S_nil){
TMP_568=lisp.callFunctionWithCallStack(G_544,G_567,L_RETURN_VALUE_P__301,lisp.S_nil,L_BINDING__307);
TMP_566=TMP_568;
}else{
TMP_570=lisp.callFunctionWithCallStack(G_544,G_569,L_RETURN_VALUE_P__301,lisp.S_nil,L_SYMBOL__300);
TMP_566=TMP_570;
}
}
TMP_558=TMP_566;
}
}
TMP_554=TMP_558;
}
}
}
return TMP_554;
});
CL_COMPILER_PASS1_REFVAR=lisp.values1(F_PASS1_REFVAR_551);
let F_PASS1_FORMS_571;
F_PASS1_FORMS_571=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_572, arguments.length);
}
let TMP_589;
let L_G177__316;
let TMP_588;
let L_G176__315;
let TMP_587;
let TMP_585;
let TMP_584;
let TMP_583;
let TMP_582;
let TMP_581;
let TMP_580;
let TMP_579;
let TMP_578;
let TMP_577;
let L_FORMSTAR__314;
let BLOCK_RESULT_NIL__313;
let L_NEW_FORMS__312;
let TMP_576;
let TMP_575;
let TMP_574;
let TMP_573;
let L_MULTIPLE_VALUES_P__310;
let L_RETURN_VALUE_P__309;
let L_FORMS__308;
L_FORMS__308=arguments[0];
L_RETURN_VALUE_P__309=arguments[1];
L_MULTIPLE_VALUES_P__310=arguments[2];
TMP_573=lisp.callFunctionWithCallStack(G_182,L_FORMS__308);
if(lisp.values1(TMP_573) !== lisp.S_nil){
TMP_575=G_541.func(lisp.S_nil,L_RETURN_VALUE_P__309);
TMP_576=lisp.callFunctionWithCallStack(G_100,TMP_575);
TMP_574=TMP_576;
}else{
{
L_NEW_FORMS__312=lisp.values1(lisp.S_nil);
BLOCK_NIL__313: for(;;){{
L_FORMSTAR__314=lisp.values1(L_FORMS__308);
for(;;){
TMP_577=lisp.callFunctionWithCallStack(G_182,L_FORMSTAR__314);
if(lisp.values1(TMP_577) !== lisp.S_nil){
BLOCK_RESULT_NIL__313=lisp.values1(lisp.S_nil);
break BLOCK_NIL__313;
}else{
{
TMP_578=lisp.callFunctionWithCallStack(G_206,L_FORMSTAR__314);
TMP_579=lisp.callFunctionWithCallStack(G_208,L_FORMSTAR__314);
TMP_580=lisp.callFunctionWithCallStack(G_182,TMP_579);
if(lisp.values1(TMP_580) !== lisp.S_nil){
TMP_581=lisp.values1(L_RETURN_VALUE_P__309);
}else{
TMP_581=lisp.values1(lisp.S_nil);
}
TMP_582=lisp.callFunctionWithCallStack(G_208,L_FORMSTAR__314);
TMP_583=lisp.callFunctionWithCallStack(G_182,TMP_582);
if(lisp.values1(TMP_583) !== lisp.S_nil){
TMP_584=lisp.values1(L_MULTIPLE_VALUES_P__310);
}else{
TMP_584=lisp.values1(lisp.S_nil);
}
TMP_585=G_586.func(TMP_578,TMP_581,TMP_584);
TMP_587=lisp.CL_cons(TMP_585,L_NEW_FORMS__312);
L_G176__315=lisp.values1(TMP_587);
L_NEW_FORMS__312=lisp.values1(L_G176__315);
}
{
TMP_588=lisp.callFunctionWithCallStack(G_208,L_FORMSTAR__314);
L_G177__316=lisp.values1(TMP_588);
L_FORMSTAR__314=lisp.values1(L_G177__316);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__313=lisp.values1(lisp.S_nil);
break;
}
TMP_589=lisp.callFunctionWithCallStack(G_333,L_NEW_FORMS__312);
}
TMP_574=TMP_589;
}
return TMP_574;
});
CL_COMPILER_PASS1_FORMS=lisp.values1(F_PASS1_FORMS_571);
let F_PRE_PROCESS_DECLARATION_SPECIFIER_590;
F_PRE_PROCESS_DECLARATION_SPECIFIER_590=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_591, arguments.length);
}
let L_G193__329;
let TMP_608;
let TMP_607;
let TMP_606;
let TMP_605;
let TMP_604;
let TMP_603;
let TMP_602;
let L_VARSTAR__328;
let BLOCK_RESULT_NIL__327;
let L_VARS__326;
let TMP_601;
let TMP_600;
let L_G186__325;
let TMP_599;
let L_G185__324;
let TMP_598;
let TMP_597;
let TMP_596;
let L_SPEC__323;
let TMP_595;
let TMP_594;
let L_G178__322;
let F_INVALID_DECLARATION_SPECIFIER__319;
let TMP_592;
let L_SPECS__317;
L_SPECS__317=arguments[0];
{
TMP_592=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_593;
let L_SPEC__320;
L_SPEC__320=arguments[0];
TMP_593=lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 100, 101, 99, 108, 97, 114, 97, 116, 105, 111, 110, 32, 115, 112, 101, 99, 105, 102, 105, 101, 114, 58, 32, 126, 83])),L_SPEC__320);
return TMP_593;
});
F_INVALID_DECLARATION_SPECIFIER__319=lisp.values1(TMP_592);
{
L_G178__322=lisp.values1(L_SPECS__317);
for(;;){
TMP_594=lisp.callFunctionWithCallStack(G_156,L_G178__322);
if(lisp.values1(TMP_594) !== lisp.S_nil){
}else{
{
TMP_595=lisp.callFunctionWithCallStack(G_158,L_G178__322);
L_SPEC__323=lisp.values1(TMP_595);
TMP_596=lisp.callFunctionWithCallStack(G_160,L_G178__322);
L_G178__322=lisp.values1(TMP_596);
TMP_597=lisp.CL_consp(L_SPEC__323);
if(lisp.values1(TMP_597) !== lisp.S_nil){
}else{
F_INVALID_DECLARATION_SPECIFIER__319(L_SPEC__323);
}
{
TMP_598=lisp.callFunctionWithCallStack(G_206,L_SPEC__323);
L_G185__324=lisp.values1(TMP_598);
{
TMP_599=lisp.callFunctionWithCallStack(G_166,L_G185__324,lisp.makeCons(G_5, lisp.S_nil));
L_G186__325=lisp.values1(TMP_599);
if(lisp.values1(L_G186__325) !== lisp.S_nil){
TMP_600=G_194.func(L_SPEC__323);
if(lisp.values1(TMP_600) !== lisp.S_nil){
}else{
F_INVALID_DECLARATION_SPECIFIER__319(L_SPEC__323);
}
{
TMP_601=lisp.callFunctionWithCallStack(G_208,L_SPEC__323);
L_VARS__326=lisp.values1(TMP_601);
BLOCK_NIL__327: for(;;){{
L_VARSTAR__328=lisp.values1(L_VARS__326);
for(;;){
TMP_602=lisp.callFunctionWithCallStack(G_182,L_VARSTAR__328);
if(lisp.values1(TMP_602) !== lisp.S_nil){
BLOCK_RESULT_NIL__327=lisp.values1(lisp.S_nil);
break BLOCK_NIL__327;
}else{
TMP_603=lisp.callFunctionWithCallStack(G_206,L_VARSTAR__328);
TMP_604=G_178.func(TMP_603);
if(lisp.values1(TMP_604) !== lisp.S_nil){
}else{
F_INVALID_DECLARATION_SPECIFIER__319(L_SPEC__323);
}
TMP_605=lisp.callFunctionWithCallStack(G_206,L_VARSTAR__328);
TMP_606=lisp.callFunctionWithCallStack(G_208,L_VARSTAR__328);
TMP_607=lisp.callFunctionWithCallStack(G_166,TMP_605,TMP_606);
if(lisp.values1(TMP_607) !== lisp.S_nil){
F_INVALID_DECLARATION_SPECIFIER__319(L_SPEC__323);
}else{
}
{
TMP_608=lisp.callFunctionWithCallStack(G_208,L_VARSTAR__328);
L_G193__329=lisp.values1(TMP_608);
L_VARSTAR__328=lisp.values1(L_G193__329);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__327=lisp.values1(lisp.S_nil);
break;
}
}
}else{
}
}
}
}
continue;
}
break;
}
}
}
return lisp.values1(lisp.S_nil);
});
CL_COMPILER_PRE_PROCESS_DECLARATION_SPECIFIER=lisp.values1(F_PRE_PROCESS_DECLARATION_SPECIFIER_590);
let F_PASS1_DECLARES_609;
F_PASS1_DECLARES_609=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_610, arguments.length);
}
let TMP_647;
let TMP_646;
let TMP_645;
let TMP_644;
let TMP_642;
let TMP_641;
let TMP_640;
let TMP_639;
let TMP_638;
let TMP_636;
let TMP_630;
let L_G215__350;
let TMP_629;
let L_G214__349;
let TMP_627;
let L_G213__348;
let TMP_625;
let L_G212__346;
let TMP_623;
let TMP_622;
let L_G210__344;
let L_BINDING__343;
let TMP_620;
let TMP_619;
let L_SYMBOL__342;
let TMP_618;
let TMP_617;
let L_G203__341;
let TMP_616;
let L_G202__339;
let TMP_615;
let L_G201__338;
let TMP_614;
let TMP_613;
let L_SPEC__337;
let TMP_612;
let TMP_611;
let L_G194__336;
let save_STARLEXENVSTAR__333;
let L_INNER_LEXENV__332;
let L_SPECS__331;
L_SPECS__331=arguments[0];
L_INNER_LEXENV__332=arguments[1];
save_STARLEXENVSTAR__333=G_11.value;
G_11.value=arguments[2];
try{
G_591.func(L_SPECS__331);
{
L_G194__336=lisp.values1(L_SPECS__331);
for(;;){
TMP_611=lisp.callFunctionWithCallStack(G_156,L_G194__336);
if(lisp.values1(TMP_611) !== lisp.S_nil){
}else{
{
TMP_612=lisp.callFunctionWithCallStack(G_158,L_G194__336);
L_SPEC__337=lisp.values1(TMP_612);
TMP_613=lisp.callFunctionWithCallStack(G_160,L_G194__336);
L_G194__336=lisp.values1(TMP_613);
{
TMP_614=lisp.callFunctionWithCallStack(G_206,L_SPEC__337);
L_G201__338=lisp.values1(TMP_614);
{
TMP_615=lisp.callFunctionWithCallStack(G_166,L_G201__338,lisp.makeCons(G_5, lisp.S_nil));
L_G202__339=lisp.values1(TMP_615);
if(lisp.values1(L_G202__339) !== lisp.S_nil){
{
TMP_616=lisp.callFunctionWithCallStack(G_208,L_SPEC__337);
L_G203__341=lisp.values1(TMP_616);
for(;;){
TMP_617=lisp.callFunctionWithCallStack(G_156,L_G203__341);
if(lisp.values1(TMP_617) !== lisp.S_nil){
}else{
{
TMP_618=lisp.callFunctionWithCallStack(G_158,L_G203__341);
L_SYMBOL__342=lisp.values1(TMP_618);
TMP_619=lisp.callFunctionWithCallStack(G_160,L_G203__341);
L_G203__341=lisp.values1(TMP_619);
{
TMP_620=G_154.func(L_SYMBOL__342,lisp.makeCons(G_33, lisp.makeCons(G_32, lisp.S_nil)),L_INNER_LEXENV__332);
L_BINDING__343=lisp.values1(TMP_620);
if(lisp.values1(L_BINDING__343) !== lisp.S_nil){
{
L_G210__344=lisp.values1(L_BINDING__343);
lisp.callFunctionWithCallStack(G_621,G_32,L_G210__344);
}
}else{
{
TMP_622=G_22.func(L_SYMBOL__342,G_23,G_6);
TMP_623=lisp.CL_cons(TMP_622,lisp.symbolValue(G_11));
L_G212__346=lisp.values1(TMP_623);
lisp.setSymbolValue(G_11, lisp.values1(L_G212__346));
}
}
}
}
continue;
}
break;
}
}
}else{
{
TMP_625=lisp.callFunctionWithCallStack(G_166,L_G201__338,lisp.makeCons(G_624, lisp.S_nil));
L_G213__348=lisp.values1(TMP_625);
if(lisp.values1(L_G213__348) !== lisp.S_nil){
}else{
{
TMP_627=lisp.callFunctionWithCallStack(G_166,L_G201__338,lisp.makeCons(G_626, lisp.S_nil));
L_G214__349=lisp.values1(TMP_627);
if(lisp.values1(L_G214__349) !== lisp.S_nil){
}else{
{
TMP_629=lisp.callFunctionWithCallStack(G_166,L_G201__338,lisp.makeCons(G_628, lisp.S_nil));
L_G215__350=lisp.values1(TMP_629);
if(lisp.values1(L_G215__350) !== lisp.S_nil){
}else{
TMP_630=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G_STORE226__360;
let L_G225__359;
let L_BINDING__358;
let TMP_634;
let TMP_633;
let L_VAR__357;
let TMP_632;
let TMP_631;
let L_G218__356;
let L_G217__354;
let L_VARS__353;
let L_TYPE__352;
L_TYPE__352=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_VARS__353=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G217__354=lisp.jsArrayToList(arguments, 2);
{
L_G218__356=lisp.values1(L_VARS__353);
for(;;){
TMP_631=lisp.callFunctionWithCallStack(G_156,L_G218__356);
if(lisp.values1(TMP_631) !== lisp.S_nil){
}else{
{
TMP_632=lisp.callFunctionWithCallStack(G_158,L_G218__356);
L_VAR__357=lisp.values1(TMP_632);
TMP_633=lisp.callFunctionWithCallStack(G_160,L_G218__356);
L_G218__356=lisp.values1(TMP_633);
{
TMP_634=G_154.func(L_VAR__357,lisp.makeCons(G_33, lisp.makeCons(G_32, lisp.S_nil)),lisp.symbolValue(G_11));
L_BINDING__358=lisp.values1(TMP_634);
if(lisp.values1(L_BINDING__358) !== lisp.S_nil){
{
L_G225__359=lisp.values1(L_BINDING__358);
L_G_STORE226__360=lisp.values1(L_TYPE__352);
lisp.callFunctionWithCallStack(G_635,L_G_STORE226__360,L_G225__359);
}
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([105, 110, 118, 97, 108, 105, 100, 32, 100, 101, 99, 108, 97, 114, 97, 116, 105, 111, 110, 32, 115, 112, 101, 99, 105, 102, 105, 101, 114, 58, 32, 126, 83])),L_SPEC__337);
}
}
}
continue;
}
break;
}
}
return lisp.values1(lisp.S_nil);
});
TMP_636=lisp.callFunctionWithCallStack(G_275,TMP_630);
TMP_638=lisp.callFunctionWithCallStack(G_206,L_SPEC__337);
TMP_639=lisp.CL_eq(G_637,TMP_638);
if(lisp.values1(TMP_639) !== lisp.S_nil){
TMP_641=lisp.callFunctionWithCallStack(G_265,L_SPEC__337);
TMP_642=lisp.callFunctionWithCallStack(G_643,L_SPEC__337);
TMP_644=lisp.CL_values(TMP_641,TMP_642);
TMP_640=TMP_644;
}else{
TMP_645=lisp.callFunctionWithCallStack(G_206,L_SPEC__337);
TMP_646=lisp.callFunctionWithCallStack(G_160,L_SPEC__337);
TMP_647=lisp.CL_values(TMP_645,TMP_646);
TMP_640=TMP_647;
}
lisp.CL_multipleValueCall(TMP_636,TMP_640);
}
}
}
}
}
}
}
}
}
}
continue;
}
break;
}
}
return lisp.values1(lisp.symbolValue(G_11));
}finally{
G_11.value=save_STARLEXENVSTAR__333;
}
});
CL_COMPILER_PASS1_DECLARES=lisp.values1(F_PASS1_DECLARES_609);
let F_PASS1_LAMBDA_LIST_648;
F_PASS1_LAMBDA_LIST_648=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_649, arguments.length);
}
let L_G_STORE249__398;
let L_G248__397;
let L_G247__396;
let TMP_679;
let L_BINDING__395;
let TMP_678;
let TMP_676;
let TMP_673;
let F_F__394;
let TMP_659;
let L_G_STORE228__372;
let TMP_657;
let TMP_654;
let L_G227__368;
let L_INNER_LEXENV__367;
let L_REST_VAR__366;
let TMP_652;
let L_VARS__365;
let TMP_650;
let L_PARSED_LAMBDA_LIST__363;
L_PARSED_LAMBDA_LIST__363=arguments[0];
{
TMP_650=lisp.callFunctionWithCallStack(G_651,L_PARSED_LAMBDA_LIST__363);
L_VARS__365=lisp.values1(TMP_650);
TMP_652=lisp.callFunctionWithCallStack(G_653,L_PARSED_LAMBDA_LIST__363);
L_REST_VAR__366=lisp.values1(TMP_652);
L_INNER_LEXENV__367=lisp.values1(lisp.S_nil);
{
L_G227__368=lisp.values1(L_PARSED_LAMBDA_LIST__363);
TMP_654=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G229__371;
let TMP_656;
let L_BINDING__370;
let TMP_655;
let L_VAR__369;
L_VAR__369=arguments[0];
{
TMP_655=G_22.func(L_VAR__369);
L_BINDING__370=lisp.values1(TMP_655);
{
TMP_656=lisp.CL_cons(L_BINDING__370,L_INNER_LEXENV__367);
L_G229__371=lisp.values1(TMP_656);
L_INNER_LEXENV__367=lisp.values1(L_G229__371);
}
}
return lisp.values1(L_BINDING__370);
});
TMP_657=lisp.callFunctionWithCallStack(G_96,TMP_654,L_VARS__365);
L_G_STORE228__372=lisp.values1(TMP_657);
lisp.callFunctionWithCallStack(G_658,L_G_STORE228__372,L_G227__368);
}
{
TMP_659=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_672;
let L_G246__393;
let TMP_671;
let L_G245__392;
let L_G244__391;
let L_G242__389;
let L_G241__388;
let L_BINDING__387;
let TMP_670;
let TMP_669;
let TMP_668;
let TMP_667;
let L_G240__386;
let TMP_666;
let L_G239__385;
let L_G238__384;
let L_G236__382;
let TMP_665;
let TMP_664;
let save_STARLEXENVSTAR__381;
let TMP_663;
let L_G235__380;
let L_G234__379;
let L_G233__378;
let L_G231__376;
let L_G230__375;
let L_BINDING__374;
let TMP_661;
let TMP_660;
let L_OPT__373;
L_OPT__373=arguments[0];
{
TMP_660=lisp.callFunctionWithCallStack(G_206,L_OPT__373);
TMP_661=G_22.func(TMP_660);
L_BINDING__374=lisp.values1(TMP_661);
{
L_G230__375=lisp.values1(L_OPT__373);
L_G231__376=lisp.values1(L_BINDING__374);
{
L_G233__378=lisp.values1(L_G230__375);
L_G234__379=lisp.values1(L_G231__376);
lisp.callFunctionWithCallStack(G_662,0,L_G233__378,L_G234__379);
}
}
{
L_G235__380=lisp.values1(L_OPT__373);
{
TMP_663=G_174.func(L_INNER_LEXENV__367,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__381=G_11.value;
G_11.value=lisp.values1(TMP_663);
try{
TMP_664=lisp.callFunctionWithCallStack(G_265,L_OPT__373);
TMP_665=G_586.func(TMP_664,G_6,lisp.S_nil);
}finally{
G_11.value=save_STARLEXENVSTAR__381;
}
}
L_G236__382=lisp.values1(lisp.values1(TMP_665));
{
L_G238__384=lisp.values1(L_G235__380);
L_G239__385=lisp.values1(L_G236__382);
lisp.callFunctionWithCallStack(G_662,1,L_G238__384,L_G239__385);
}
}
{
TMP_666=lisp.CL_cons(L_BINDING__374,L_INNER_LEXENV__367);
L_G240__386=lisp.values1(TMP_666);
L_INNER_LEXENV__367=lisp.values1(L_G240__386);
}
}
TMP_667=lisp.callFunctionWithCallStack(G_256,L_OPT__373);
if(lisp.values1(TMP_667) !== lisp.S_nil){
{
TMP_669=lisp.callFunctionWithCallStack(G_256,L_OPT__373);
TMP_670=G_22.func(TMP_669);
L_BINDING__387=lisp.values1(TMP_670);
{
L_G241__388=lisp.values1(L_OPT__373);
L_G242__389=lisp.values1(L_BINDING__387);
{
L_G244__391=lisp.values1(L_G241__388);
L_G245__392=lisp.values1(L_G242__389);
lisp.callFunctionWithCallStack(G_662,2,L_G244__391,L_G245__392);
}
}
{
TMP_671=lisp.CL_cons(L_BINDING__387,L_INNER_LEXENV__367);
L_G246__393=lisp.values1(TMP_671);
L_INNER_LEXENV__367=(TMP_672=lisp.values1(L_G246__393));
}
}
TMP_668=lisp.values1(TMP_672);
}else{
TMP_668=lisp.values1(lisp.S_nil);
}
return TMP_668;
});
F_F__394=lisp.values1(TMP_659);
TMP_673=lisp.callFunctionWithCallStack(G_674,L_PARSED_LAMBDA_LIST__363);
lisp.callFunctionWithCallStack(G_675,F_F__394,TMP_673);
TMP_676=lisp.callFunctionWithCallStack(G_677,L_PARSED_LAMBDA_LIST__363);
lisp.callFunctionWithCallStack(G_675,F_F__394,TMP_676);
}
if(lisp.values1(L_REST_VAR__366) !== lisp.S_nil){
{
TMP_678=G_22.func(L_REST_VAR__366);
L_BINDING__395=lisp.values1(TMP_678);
{
TMP_679=lisp.CL_cons(L_BINDING__395,L_INNER_LEXENV__367);
L_G247__396=lisp.values1(TMP_679);
L_INNER_LEXENV__367=lisp.values1(L_G247__396);
}
{
L_G248__397=lisp.values1(L_PARSED_LAMBDA_LIST__363);
L_G_STORE249__398=lisp.values1(L_BINDING__395);
lisp.callFunctionWithCallStack(G_680,L_G_STORE249__398,L_G248__397);
}
}
}else{
}
}
return lisp.values1(L_INNER_LEXENV__367);
});
CL_COMPILER_PASS1_LAMBDA_LIST=lisp.values1(F_PASS1_LAMBDA_LIST_648);
let F_PASS1_LAMBDA_681;
F_PASS1_LAMBDA_681=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_682, arguments.length);
}
let TMP_711;
let TMP_710;
let TMP_709;
let TMP_708;
let TMP_707;
let TMP_706;
let TMP_705;
let TMP_704;
let TMP_703;
let TMP_702;
let TMP_701;
let TMP_686;
let TMP_684;
let TMP_683;
let L_RETURN_VALUE_P__400;
let L_FORM__399;
L_FORM__399=arguments[0];
L_RETURN_VALUE_P__400=arguments[1];
TMP_683=lisp.callFunctionWithCallStack(G_206,L_FORM__399);
TMP_684=lisp.callFunctionWithCallStack(G_166,TMP_683,lisp.makeCons(G_400, lisp.makeCons(G_480, lisp.S_nil)));
if(lisp.values1(TMP_684) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_245,G_97.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),lisp.makeCons(G_166, lisp.makeCons(lisp.makeCons(G_206, lisp.makeCons(G_685, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_407, lisp.makeCons(lisp.makeCons(G_400, lisp.makeCons(G_480, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))));
}
TMP_686=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_700;
let TMP_699;
let TMP_698;
let TMP_691;
let L_PARSED_LAMBDA_LIST__410;
let TMP_690;
let L_BODY__409;
let L_G253__408;
let TMP_689;
let L_LAMBDA_LIST__407;
let TMP_688;
let L_G251__405;
let TMP_687;
let L_G250__404;
let L_ARGS__403;
let L_NAME__402;
L_NAME__402=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_ARGS__403=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G250__404=lisp.jsArrayToList(arguments, 2);
TMP_687=lisp.callFunctionWithCallStack(G_306,L_ARGS__403);
if(lisp.values1(TMP_687) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118, 97, 108, 105, 100, 32, 108, 97, 109, 98, 100, 97, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110])),L_FORM__399);
}else{
}
{
L_G251__405=lisp.values1(L_ARGS__403);
{
TMP_688=lisp.callFunctionWithCallStack(G_206,L_G251__405);
L_LAMBDA_LIST__407=lisp.values1(TMP_688);
TMP_689=lisp.callFunctionWithCallStack(G_208,L_G251__405);
L_G253__408=lisp.values1(TMP_689);
L_BODY__409=lisp.values1(L_G253__408);
{
TMP_690=G_213.func(L_LAMBDA_LIST__407);
L_PARSED_LAMBDA_LIST__410=lisp.values1(TMP_690);
TMP_691=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_697;
let TMP_696;
let TMP_695;
let save_STARLEXENVSTAR__417;
let TMP_694;
let save_STARLEXENVSTAR__416;
let TMP_693;
let L_INNER_LEXENV__415;
let TMP_692;
let L_G254__414;
let L_DOCSTRING__413;
let L_DECLARES__412;
let L_BODY__411;
L_BODY__411=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__412=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_DOCSTRING__413=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_G254__414=lisp.jsArrayToList(arguments, 3);
{
TMP_692=G_649.func(L_PARSED_LAMBDA_LIST__410);
L_INNER_LEXENV__415=lisp.values1(TMP_692);
TMP_693=G_174.func(L_INNER_LEXENV__415,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__416=G_11.value;
G_11.value=lisp.values1(TMP_693);
TMP_694=G_610.func(L_DECLARES__412,L_INNER_LEXENV__415,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__417=G_11.value;
G_11.value=lisp.values1(TMP_694);
try{
TMP_695=G_572.func(L_BODY__411,G_6,G_6);
TMP_696=lisp.callFunctionWithCallStack(G_544,G_392,G_6,G_6,TMP_695);
TMP_697=lisp.callFunctionWithCallStack(G_544,G_400,L_RETURN_VALUE_P__400,lisp.S_nil,L_NAME__402,L_PARSED_LAMBDA_LIST__410,TMP_696);
}finally{
G_11.value=save_STARLEXENVSTAR__417;
G_11.value=save_STARLEXENVSTAR__416;
}
}
return TMP_697;
});
TMP_698=lisp.callFunctionWithCallStack(G_275,TMP_691);
TMP_699=lisp.callFunctionWithCallStack(G_439,L_BODY__409,G_6);
TMP_700=lisp.CL_multipleValueCall(TMP_698,TMP_699);
}
}
}
return TMP_700;
});
TMP_701=lisp.callFunctionWithCallStack(G_275,TMP_686);
TMP_702=lisp.callFunctionWithCallStack(G_206,L_FORM__399);
TMP_703=lisp.CL_eq(TMP_702,G_400);
if(lisp.values1(TMP_703) !== lisp.S_nil){
TMP_705=lisp.callFunctionWithCallStack(G_208,L_FORM__399);
TMP_706=lisp.CL_values(lisp.S_nil,TMP_705);
TMP_704=TMP_706;
}else{
TMP_707=lisp.callFunctionWithCallStack(G_265,L_FORM__399);
TMP_708=lisp.callFunctionWithCallStack(G_208,L_FORM__399);
TMP_709=lisp.callFunctionWithCallStack(G_208,TMP_708);
TMP_710=lisp.CL_values(TMP_707,TMP_709);
TMP_704=TMP_710;
}
TMP_711=lisp.CL_multipleValueCall(TMP_701,TMP_704);
return TMP_711;
});
CL_COMPILER_PASS1_LAMBDA=lisp.values1(F_PASS1_LAMBDA_681);
let F_PERCENTMACRO_FUNCTION_712;
F_PERCENTMACRO_FUNCTION_712=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_713, arguments.length);
}
let TMP_728;
let L_G_STORE260__428;
let TMP_727;
let L_G259__427;
let TMP_726;
let L_G258__426;
let TMP_725;
let L_G257__425;
let TMP_724;
let L_FN__424;
let TMP_723;
let TMP_722;
let TMP_721;
let L_FN__423;
let TMP_720;
let TMP_719;
let TMP_716;
let TMP_715;
let L_G255__421;
let L_BINDING__420;
let TMP_714;
let L_SYMBOL__418;
L_SYMBOL__418=arguments[0];
{
TMP_714=G_154.func(L_SYMBOL__418,G_49);
L_BINDING__420=lisp.values1(TMP_714);
{
L_G255__421=lisp.values1(L_BINDING__420);
if(lisp.values1(L_G255__421) !== lisp.S_nil){
TMP_716=lisp.callFunctionWithCallStack(G_717,L_BINDING__420);
TMP_715=TMP_716;
}else{
if(lisp.values1(lisp.symbolValue(G_718)) !== lisp.S_nil){
{
TMP_720=G_84.func(L_SYMBOL__418);
L_FN__423=lisp.values1(TMP_720);
if(lisp.values1(L_FN__423) !== lisp.S_nil){
TMP_722=lisp.callFunctionWithCallStack(G_523,L_FN__423);
TMP_721=TMP_722;
}else{
TMP_721=lisp.values1(lisp.S_nil);
}
}
TMP_719=TMP_721;
}else{
{
TMP_723=G_84.func(L_SYMBOL__418);
L_FN__424=lisp.values1(TMP_723);
{
TMP_724=lisp.CL_functionp(L_FN__424);
L_G257__425=lisp.values1(TMP_724);
if(lisp.values1(L_G257__425) !== lisp.S_nil){
TMP_725=lisp.values1(L_FN__424);
}else{
{
L_G258__426=lisp.values1(L_FN__424);
if(lisp.values1(L_G258__426) !== lisp.S_nil){
{
L_G259__427=lisp.values1(L_SYMBOL__418);
TMP_727=lisp.callFunctionWithCallStack(G_523,L_FN__424);
L_G_STORE260__428=lisp.values1(TMP_727);
TMP_728=lisp.callFunctionWithCallStack(G_88,L_G_STORE260__428,L_G259__427);
}
TMP_726=TMP_728;
}else{
TMP_726=lisp.values1(lisp.S_nil);
}
}
TMP_725=TMP_726;
}
}
}
TMP_719=TMP_725;
}
TMP_715=TMP_719;
}
}
}
return TMP_715;
});
CL_COMPILER_PERCENTMACRO_FUNCTION=lisp.values1(F_PERCENTMACRO_FUNCTION_712);
let F_PERCENTMACROEXPAND_1_729;
F_PERCENTMACROEXPAND_1_729=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_730, arguments.length);
}
let TMP_757;
let TMP_756;
let TMP_755;
let L_EXPANDED_FORM__438;
let TMP_752;
let TMP_751;
let TMP_750;
let L_FUNCTION__437;
let TMP_749;
let TMP_748;
let L_POSITION__436;
let TMP_746;
let TMP_745;
let L_G263__435;
let TMP_744;
let TMP_743;
let TMP_742;
let TMP_741;
let TMP_740;
let TMP_739;
let TMP_738;
let L_EXPANSION__434;
let TMP_737;
let TMP_736;
let TMP_735;
let TMP_734;
let L_BINDING__433;
let TMP_733;
let TMP_732;
let L_G262__432;
let TMP_731;
let L_FORM__430;
L_FORM__430=arguments[0];
{
TMP_731=lisp.CL_symbolp(L_FORM__430);
L_G262__432=lisp.values1(TMP_731);
if(lisp.values1(L_G262__432) !== lisp.S_nil){
{
TMP_733=G_154.func(L_FORM__430,G_53);
L_BINDING__433=lisp.values1(TMP_733);
G_68.func(L_BINDING__433);
if(lisp.values1(L_BINDING__433) !== lisp.S_nil){
TMP_735=lisp.callFunctionWithCallStack(G_717,L_BINDING__433);
TMP_736=lisp.CL_values(TMP_735,G_6);
TMP_734=TMP_736;
}else{
{
TMP_737=G_108.func(L_FORM__430);
L_EXPANSION__434=lisp.values1(TMP_737);
if(lisp.values1(L_EXPANSION__434) !== lisp.S_nil){
TMP_739=lisp.CL_values(L_EXPANSION__434,G_6);
TMP_738=TMP_739;
}else{
TMP_740=lisp.CL_values(L_FORM__430,lisp.S_nil);
TMP_738=TMP_740;
}
}
TMP_734=TMP_738;
}
}
TMP_732=TMP_734;
}else{
{
TMP_741=lisp.CL_consp(L_FORM__430);
if(lisp.values1(TMP_741) !== lisp.S_nil){
TMP_743=lisp.callFunctionWithCallStack(G_206,L_FORM__430);
TMP_744=lisp.CL_symbolp(TMP_743);
TMP_742=lisp.values1(TMP_744);
}else{
TMP_742=lisp.values1(lisp.S_nil);
}
L_G263__435=lisp.values1(TMP_742);
if(lisp.values1(L_G263__435) !== lisp.S_nil){
{
TMP_746=lisp.callFunctionWithCallStack(G_747,L_FORM__430);
L_POSITION__436=lisp.values1(TMP_746);
TMP_748=lisp.callFunctionWithCallStack(G_206,L_FORM__430);
TMP_749=G_713.func(TMP_748);
L_FUNCTION__437=lisp.values1(TMP_749);
if(lisp.values1(L_FUNCTION__437) !== lisp.S_nil){
{
TMP_751=lisp.callFunctionWithCallStack(G_208,L_FORM__430);
TMP_752=lisp.callFunctionWithCallStack(G_753,L_FUNCTION__437,TMP_751);
L_EXPANDED_FORM__438=lisp.values1(TMP_752);
lisp.callFunctionWithCallStack(G_754,L_EXPANDED_FORM__438,L_POSITION__436);
TMP_755=lisp.CL_values(L_EXPANDED_FORM__438,G_6);
}
TMP_750=TMP_755;
}else{
TMP_756=lisp.CL_values(L_FORM__430,lisp.S_nil);
TMP_750=TMP_756;
}
}
TMP_745=TMP_750;
}else{
TMP_757=lisp.CL_values(L_FORM__430,lisp.S_nil);
TMP_745=TMP_757;
}
}
TMP_732=TMP_745;
}
}
return TMP_732;
});
CL_COMPILER_PERCENTMACROEXPAND_1=lisp.values1(F_PERCENTMACROEXPAND_1_729);
let F_PASS1_CALL_758;
F_PASS1_CALL_758=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_759, arguments.length);
}
let TMP_814;
let TMP_813;
let TMP_812;
let TMP_810;
let TMP_809;
let TMP_808;
let TMP_806;
let TMP_805;
let L_G271__457;
let TMP_804;
let TMP_803;
let TMP_802;
let TMP_801;
let TMP_800;
let TMP_799;
let TMP_797;
let TMP_795;
let TMP_794;
let TMP_793;
let L_NAMES__455;
let TMP_791;
let TMP_790;
let L_G270__454;
let TMP_789;
let TMP_788;
let TMP_787;
let TMP_785;
let L_G269__453;
let TMP_784;
let TMP_783;
let TMP_782;
let TMP_781;
let TMP_780;
let TMP_779;
let TMP_777;
let TMP_775;
let TMP_774;
let TMP_773;
let TMP_772;
let L_G267__450;
let TMP_771;
let TMP_770;
let TMP_769;
let TMP_767;
let TMP_765;
let L_G266__448;
let L_BINDING__447;
let TMP_764;
let TMP_763;
let L_G265__446;
let TMP_762;
let L_ARGS__445;
let TMP_761;
let L_FN__444;
let TMP_760;
let L_MULTIPLE_VALUES_P__442;
let L_RETURN_VALUE_P__441;
let L_FORM__440;
L_FORM__440=arguments[0];
L_RETURN_VALUE_P__441=arguments[1];
L_MULTIPLE_VALUES_P__442=arguments[2];
{
TMP_760=lisp.callFunctionWithCallStack(G_206,L_FORM__440);
L_FN__444=lisp.values1(TMP_760);
TMP_761=lisp.callFunctionWithCallStack(G_208,L_FORM__440);
L_ARGS__445=lisp.values1(TMP_761);
{
TMP_762=G_178.func(L_FN__444);
L_G265__446=lisp.values1(TMP_762);
if(lisp.values1(L_G265__446) !== lisp.S_nil){
{
TMP_764=G_154.func(L_FN__444,G_44);
L_BINDING__447=lisp.values1(TMP_764);
G_68.func(L_BINDING__447);
{
L_G266__448=lisp.values1(L_BINDING__447);
if(lisp.values1(L_G266__448) !== lisp.S_nil){
TMP_767=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_768;
let L_ARG__449;
L_ARG__449=arguments[0];
TMP_768=G_586.func(L_ARG__449,G_6,lisp.S_nil);
return TMP_768;
});
TMP_769=lisp.callFunctionWithCallStack(G_96,TMP_767,L_ARGS__445);
TMP_770=lisp.callFunctionWithCallStack(G_544,G_766,L_RETURN_VALUE_P__441,L_MULTIPLE_VALUES_P__442,L_BINDING__447,TMP_769);
TMP_765=TMP_770;
}else{
{
TMP_771=G_361.func(L_FN__444);
L_G267__450=lisp.values1(TMP_771);
if(lisp.values1(L_G267__450) !== lisp.S_nil){
TMP_773=G_357.func(L_FN__444);
TMP_774=lisp.callFunctionWithCallStack(G_753,TMP_773,L_ARGS__445);
TMP_775=G_586.func(TMP_774,L_RETURN_VALUE_P__441,L_MULTIPLE_VALUES_P__442);
TMP_772=TMP_775;
}else{
TMP_777=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_778;
let L_ARG__452;
L_ARG__452=arguments[0];
TMP_778=G_586.func(L_ARG__452,G_6,lisp.S_nil);
return TMP_778;
});
TMP_779=lisp.callFunctionWithCallStack(G_96,TMP_777,L_ARGS__445);
TMP_780=lisp.callFunctionWithCallStack(G_544,G_776,L_RETURN_VALUE_P__441,L_MULTIPLE_VALUES_P__442,L_FN__444,TMP_779);
TMP_772=TMP_780;
}
}
TMP_765=TMP_772;
}
}
}
TMP_763=TMP_765;
}else{
{
TMP_781=lisp.CL_consp(L_FN__444);
if(lisp.values1(TMP_781) !== lisp.S_nil){
TMP_783=lisp.callFunctionWithCallStack(G_206,L_FN__444);
TMP_784=lisp.CL_eq(G_400,TMP_783);
TMP_782=lisp.values1(TMP_784);
}else{
TMP_782=lisp.values1(lisp.S_nil);
}
L_G269__453=lisp.values1(TMP_782);
if(lisp.values1(L_G269__453) !== lisp.S_nil){
TMP_787=lisp.callFunctionWithCallStack(G_102,G_786,L_FN__444,L_ARGS__445);
TMP_788=G_586.func(TMP_787,L_RETURN_VALUE_P__441,L_MULTIPLE_VALUES_P__442);
TMP_785=TMP_788;
}else{
{
TMP_789=lisp.callFunctionWithCallStack(G_191,L_FN__444);
L_G270__454=lisp.values1(TMP_789);
if(lisp.values1(L_G270__454) !== lisp.S_nil){
{
TMP_791=lisp.callFunctionWithCallStack(G_548,L_FN__444);
L_NAMES__455=lisp.values1(TMP_791);
TMP_793=lisp.callFunctionWithCallStack(G_206,L_NAMES__455);
TMP_794=lisp.callFunctionWithCallStack(G_208,L_NAMES__455);
TMP_795=G_796.func(TMP_793,TMP_794);
TMP_797=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_798;
let L_ARG__456;
L_ARG__456=arguments[0];
TMP_798=G_586.func(L_ARG__456,G_6,lisp.S_nil);
return TMP_798;
});
TMP_799=lisp.callFunctionWithCallStack(G_96,TMP_797,L_ARGS__445);
TMP_800=lisp.callFunctionWithCallStack(G_544,G_792,L_RETURN_VALUE_P__441,L_MULTIPLE_VALUES_P__442,TMP_795,TMP_799);
}
TMP_790=TMP_800;
}else{
{
TMP_801=lisp.CL_consp(L_FN__444);
if(lisp.values1(TMP_801) !== lisp.S_nil){
TMP_803=lisp.callFunctionWithCallStack(G_206,L_FN__444);
TMP_804=lisp.CL_eq(G_549,TMP_803);
TMP_802=lisp.values1(TMP_804);
}else{
TMP_802=lisp.values1(lisp.S_nil);
}
L_G271__457=lisp.values1(TMP_802);
if(lisp.values1(L_G271__457) !== lisp.S_nil){
TMP_806=lisp.callFunctionWithCallStack(G_807,L_FN__444);
TMP_808=lisp.callFunctionWithCallStack(G_643,L_FN__444);
TMP_809=G_796.func(TMP_806,TMP_808);
TMP_810=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_811;
let L_ARG__458;
L_ARG__458=arguments[0];
TMP_811=G_586.func(L_ARG__458,G_6,lisp.S_nil);
return TMP_811;
});
TMP_812=lisp.callFunctionWithCallStack(G_96,TMP_810,L_ARGS__445);
TMP_813=lisp.callFunctionWithCallStack(G_544,G_792,L_RETURN_VALUE_P__441,L_MULTIPLE_VALUES_P__442,TMP_809,TMP_812);
TMP_805=TMP_813;
}else{
TMP_814=lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([73, 108, 108, 101, 103, 97, 108, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 99, 97, 108, 108, 58, 32, 126, 83])),L_FORM__440);
TMP_805=TMP_814;
}
}
TMP_790=TMP_805;
}
}
TMP_785=TMP_790;
}
}
TMP_763=TMP_785;
}
}
}
return TMP_763;
});
CL_COMPILER_PASS1_CALL=lisp.values1(F_PASS1_CALL_758);
let F_PASS1_815;
F_PASS1_815=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_586, arguments.length);
}
let TMP_848;
let TMP_847;
let TMP_846;
let TMP_816;
let L_MULTIPLE_VALUES_P__462;
let L_RETURN_VALUE_P__461;
let L_FORM__460;
L_FORM__460=arguments[0];
L_RETURN_VALUE_P__461=arguments[1];
L_MULTIPLE_VALUES_P__462=arguments[2];
TMP_816=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_845;
let TMP_844;
let TMP_843;
let TMP_842;
let save_STARCOMPILE_LEVELSTAR__474;
let TMP_840;
let TMP_839;
let TMP_838;
let TMP_834;
let L_FN__473;
let TMP_832;
let TMP_831;
let TMP_830;
let TMP_829;
let L_G278__471;
let TMP_828;
let TMP_827;
let TMP_826;
let L_G277__470;
let TMP_825;
let TMP_824;
let TMP_823;
let L_G276__469;
let TMP_822;
let TMP_821;
let TMP_820;
let L_G275__468;
let TMP_819;
let TMP_818;
let TMP_817;
let L_G274__467;
let L_G273__466;
let L_EXPANDED_P__465;
let L_FORM__464;
L_FORM__464=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_EXPANDED_P__465=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G273__466=lisp.jsArrayToList(arguments, 2);
{
L_G274__467=lisp.values1(L_EXPANDED_P__465);
if(lisp.values1(L_G274__467) !== lisp.S_nil){
TMP_818=G_586.func(L_FORM__464,L_RETURN_VALUE_P__461,L_MULTIPLE_VALUES_P__462);
TMP_817=TMP_818;
}else{
{
TMP_819=lisp.callFunctionWithCallStack(G_166,L_FORM__464,lisp.makeCons(G_6, lisp.makeCons(lisp.S_nil, lisp.S_nil)));
L_G275__468=lisp.values1(TMP_819);
if(lisp.values1(L_G275__468) !== lisp.S_nil){
TMP_821=G_541.func(L_FORM__464,L_RETURN_VALUE_P__461);
TMP_820=TMP_821;
}else{
{
TMP_822=lisp.callFunctionWithCallStack(G_187,L_FORM__464);
L_G276__469=lisp.values1(TMP_822);
if(lisp.values1(L_G276__469) !== lisp.S_nil){
TMP_824=G_541.func(L_FORM__464,L_RETURN_VALUE_P__461);
TMP_823=TMP_824;
}else{
{
TMP_825=lisp.CL_symbolp(L_FORM__464);
L_G277__470=lisp.values1(TMP_825);
if(lisp.values1(L_G277__470) !== lisp.S_nil){
TMP_827=G_552.func(L_FORM__464,L_RETURN_VALUE_P__461);
TMP_826=TMP_827;
}else{
{
TMP_828=lisp.callFunctionWithCallStack(G_306,L_FORM__464);
L_G278__471=lisp.values1(TMP_828);
if(lisp.values1(L_G278__471) !== lisp.S_nil){
TMP_830=G_541.func(L_FORM__464,L_RETURN_VALUE_P__461);
TMP_829=TMP_830;
}else{
{
TMP_831=lisp.callFunctionWithCallStack(G_206,L_FORM__464);
TMP_832=lisp.callFunctionWithCallStack(G_833,TMP_831,lisp.symbolValue(G_2));
L_FN__473=lisp.values1(TMP_832);
TMP_834=lisp.callFunctionWithCallStack(G_206,L_FORM__464);
TMP_838=lisp.callFunctionWithCallStack(G_166,TMP_834,lisp.makeCons(G_392, lisp.makeCons(G_835, lisp.makeCons(G_836, lisp.makeCons(G_837, lisp.S_nil)))));
if(lisp.values1(TMP_838) !== lisp.S_nil){
TMP_839=lisp.values1(lisp.symbolValue(G_13));
}else{
TMP_840=lisp.callFunctionWithCallStack(G_841,lisp.symbolValue(G_13));
TMP_839=lisp.values1(TMP_840);
}
save_STARCOMPILE_LEVELSTAR__474=G_13.value;
G_13.value=lisp.values1(TMP_839);
try{
if(lisp.values1(L_FN__473) !== lisp.S_nil){
TMP_843=lisp.callFunctionWithCallStack(G_208,L_FORM__464);
TMP_844=lisp.callFunctionWithCallStack(G_753,L_FN__473,L_RETURN_VALUE_P__461,L_MULTIPLE_VALUES_P__462,L_FORM__464,TMP_843);
TMP_842=TMP_844;
}else{
TMP_845=G_759.func(L_FORM__464,L_RETURN_VALUE_P__461,L_MULTIPLE_VALUES_P__462);
TMP_842=TMP_845;
}
}finally{
G_13.value=save_STARCOMPILE_LEVELSTAR__474;
}
}
TMP_829=TMP_842;
}
}
TMP_826=TMP_829;
}
}
TMP_823=TMP_826;
}
}
TMP_820=TMP_823;
}
}
TMP_817=TMP_820;
}
}
return TMP_817;
});
TMP_846=lisp.callFunctionWithCallStack(G_275,TMP_816);
TMP_847=G_730.func(L_FORM__460);
TMP_848=lisp.CL_multipleValueCall(TMP_846,TMP_847);
return TMP_848;
});
CL_COMPILER_PASS1=lisp.values1(F_PASS1_815);
let F_PASS1_QUOTE_849;
F_PASS1_QUOTE_849=(function(){
if(arguments.length !== 4) {
lisp.argumentsError(G_850, arguments.length);
}
let TMP_851;
let L_X__478;
let L_WHOLE__477;
let L_MULTIPLE_VALUES_P__476;
let L_RETURN_VALUE_P__475;
L_RETURN_VALUE_P__475=arguments[0];
L_MULTIPLE_VALUES_P__476=arguments[1];
L_WHOLE__477=arguments[2];
L_X__478=arguments[3];
TMP_851=G_541.func(L_X__478,L_RETURN_VALUE_P__475);
return TMP_851;
});
CL_COMPILER_PASS1_QUOTE=lisp.values1(F_PASS1_QUOTE_849);
let F_PASS1_SETQ_853;
F_PASS1_SETQ_853=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_854, arguments.length);
}
let TMP_892;
let TMP_891;
let TMP_890;
let TMP_889;
let L_G294__499;
let TMP_887;
let TMP_886;
let TMP_885;
let L_G293__498;
let TMP_884;
let L_G292__497;
let TMP_883;
let TMP_882;
let L_G289__496;
let TMP_881;
let TMP_880;
let TMP_879;
let L_G291__495;
let TMP_878;
let L_G290__494;
let TMP_877;
let TMP_876;
let TMP_875;
let TMP_872;
let L_VALUE__493;
let TMP_871;
let TMP_870;
let L_BINDING__492;
let TMP_869;
let L_SYMBOL__491;
let TMP_868;
let TMP_867;
let TMP_866;
let TMP_865;
let TMP_864;
let TMP_863;
let TMP_862;
let TMP_861;
let L_ARGS__490;
let BLOCK_RESULT_NIL__489;
let L_FORMS__488;
let TMP_860;
let TMP_859;
let TMP_858;
let TMP_856;
let TMP_855;
let L_ARGS__486;
let L_SETQ_FORM__485;
let L_MULTIPLE_VALUES_P__484;
let L_RETURN_VALUE_P__483;
L_RETURN_VALUE_P__483=arguments[0];
L_MULTIPLE_VALUES_P__484=arguments[1];
L_SETQ_FORM__485=arguments[2];
L_ARGS__486=lisp.jsArrayToList(arguments, 3);
TMP_855=lisp.callFunctionWithCallStack(G_250,L_ARGS__486);
TMP_856=lisp.callFunctionWithCallStack(G_857,TMP_855);
TMP_858=lisp.callFunctionWithCallStack(G_184,TMP_856);
if(lisp.values1(TMP_858) !== lisp.S_nil){
TMP_860=lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([83, 101, 116, 113, 32, 119, 105, 116, 104, 32, 111, 100, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 115])));
TMP_859=TMP_860;
}else{
{
L_FORMS__488=lisp.values1(lisp.S_nil);
BLOCK_NIL__489: for(;;){{
L_ARGS__490=lisp.values1(L_ARGS__486);
for(;;){
TMP_861=lisp.callFunctionWithCallStack(G_182,L_ARGS__490);
if(lisp.values1(TMP_861) !== lisp.S_nil){
BLOCK_RESULT_NIL__489=lisp.values1(lisp.S_nil);
break BLOCK_NIL__489;
}else{
TMP_862=lisp.callFunctionWithCallStack(G_206,L_ARGS__490);
TMP_863=G_138.func(TMP_862);
if(lisp.values1(TMP_863) !== lisp.S_nil){
TMP_864=lisp.callFunctionWithCallStack(G_206,L_ARGS__490);
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 97, 32, 99, 111, 110, 115, 116, 97, 110, 116])),TMP_864);
}else{
}
TMP_865=lisp.callFunctionWithCallStack(G_206,L_ARGS__490);
TMP_866=G_178.func(TMP_865);
if(lisp.values1(TMP_866) !== lisp.S_nil){
}else{
TMP_867=lisp.callFunctionWithCallStack(G_206,L_ARGS__490);
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118, 97, 114, 105, 97, 98, 108, 101])),TMP_867);
}
{
TMP_868=lisp.callFunctionWithCallStack(G_206,L_ARGS__490);
L_SYMBOL__491=lisp.values1(TMP_868);
TMP_869=G_154.func(L_SYMBOL__491,G_33);
L_BINDING__492=lisp.values1(TMP_869);
TMP_870=lisp.callFunctionWithCallStack(G_265,L_ARGS__490);
TMP_871=G_586.func(TMP_870,G_6,lisp.S_nil);
L_VALUE__493=lisp.values1(TMP_871);
G_68.func(L_BINDING__492);
G_68.func(L_BINDING__492,G_6);
{
if(lisp.values1(L_BINDING__492) !== lisp.S_nil){
TMP_872=lisp.values1(G_873);
}else{
TMP_872=lisp.values1(G_874);
}
TMP_875=lisp.callFunctionWithCallStack(G_643,L_ARGS__490);
TMP_876=lisp.callFunctionWithCallStack(G_182,TMP_875);
if(lisp.values1(TMP_876) !== lisp.S_nil){
TMP_877=lisp.values1(L_RETURN_VALUE_P__483);
}else{
TMP_877=lisp.values1(lisp.S_nil);
}
{
L_G290__494=lisp.values1(L_BINDING__492);
if(lisp.values1(L_G290__494) !== lisp.S_nil){
TMP_878=lisp.values1(L_G290__494);
}else{
{
L_G291__495=lisp.values1(L_SYMBOL__491);
if(lisp.values1(L_G291__495) !== lisp.S_nil){
TMP_879=lisp.values1(L_G291__495);
}else{
TMP_879=lisp.values1(lisp.S_nil);
}
}
TMP_878=lisp.values1(lisp.values1(TMP_879));
}
}
TMP_880=lisp.callFunctionWithCallStack(G_544,TMP_872,TMP_877,lisp.S_nil,lisp.values1(TMP_878),L_VALUE__493);
TMP_881=lisp.CL_cons(TMP_880,L_FORMS__488);
L_G289__496=lisp.values1(TMP_881);
L_FORMS__488=lisp.values1(L_G289__496);
}
}
{
TMP_882=lisp.callFunctionWithCallStack(G_208,L_ARGS__490);
TMP_883=lisp.callFunctionWithCallStack(G_208,TMP_882);
L_G292__497=lisp.values1(TMP_883);
L_ARGS__490=lisp.values1(L_G292__497);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__489=lisp.values1(lisp.S_nil);
break;
}
{
TMP_884=lisp.callFunctionWithCallStack(G_182,L_FORMS__488);
L_G293__498=lisp.values1(TMP_884);
if(lisp.values1(L_G293__498) !== lisp.S_nil){
TMP_886=G_541.func(lisp.S_nil,L_RETURN_VALUE_P__483);
TMP_885=TMP_886;
}else{
{
TMP_887=lisp.callFunctionWithCallStack(G_888,L_FORMS__488);
L_G294__499=lisp.values1(TMP_887);
if(lisp.values1(L_G294__499) !== lisp.S_nil){
TMP_890=lisp.callFunctionWithCallStack(G_206,L_FORMS__488);
TMP_889=TMP_890;
}else{
TMP_891=lisp.callFunctionWithCallStack(G_333,L_FORMS__488);
TMP_892=lisp.callFunctionWithCallStack(G_544,G_392,L_RETURN_VALUE_P__483,lisp.S_nil,TMP_891);
TMP_889=TMP_892;
}
}
TMP_885=TMP_889;
}
}
}
TMP_859=TMP_885;
}
return TMP_859;
});
CL_COMPILER_PASS1_SETQ=lisp.values1(F_PASS1_SETQ_853);
let F_PASS1_IF_894;
F_PASS1_IF_894=(function(){
if(arguments.length < 5 || 6 < arguments.length) {
lisp.argumentsError(G_895, arguments.length);
}
let TMP_899;
let TMP_898;
let TMP_897;
let TMP_896;
let L_ELSE__509;
let L_THEN__508;
let L_TEST__507;
let L_IF_FORM__506;
let L_MULTIPLE_VALUES_P__505;
let L_RETURN_VALUE_P__504;
L_RETURN_VALUE_P__504=arguments[0];
L_MULTIPLE_VALUES_P__505=arguments[1];
L_IF_FORM__506=arguments[2];
L_TEST__507=arguments[3];
L_THEN__508=arguments[4];
L_ELSE__509=arguments.length > 5 ? arguments[5] : (lisp.values1(lisp.S_nil));
TMP_896=G_586.func(L_TEST__507,G_6,lisp.S_nil);
TMP_897=G_586.func(L_THEN__508,L_RETURN_VALUE_P__504,L_MULTIPLE_VALUES_P__505);
TMP_898=G_586.func(L_ELSE__509,L_RETURN_VALUE_P__504,L_MULTIPLE_VALUES_P__505);
TMP_899=lisp.callFunctionWithCallStack(G_544,G_488,L_RETURN_VALUE_P__504,L_MULTIPLE_VALUES_P__505,TMP_896,TMP_897,TMP_898);
return TMP_899;
});
CL_COMPILER_PASS1_IF=lisp.values1(F_PASS1_IF_894);
let F_PASS1_PROGN_900;
F_PASS1_PROGN_900=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_901, arguments.length);
}
let TMP_903;
let TMP_902;
let L_FORMS__517;
let L_PROGN_FORM__516;
let L_MULTIPLE_VALUES_P__515;
let L_RETURN_VALUE_P__514;
L_RETURN_VALUE_P__514=arguments[0];
L_MULTIPLE_VALUES_P__515=arguments[1];
L_PROGN_FORM__516=arguments[2];
L_FORMS__517=lisp.jsArrayToList(arguments, 3);
TMP_902=G_572.func(L_FORMS__517,L_RETURN_VALUE_P__514,L_MULTIPLE_VALUES_P__515);
TMP_903=lisp.callFunctionWithCallStack(G_544,G_392,L_RETURN_VALUE_P__514,L_MULTIPLE_VALUES_P__515,TMP_902);
return TMP_903;
});
CL_COMPILER_PASS1_PROGN=lisp.values1(F_PASS1_PROGN_900);
let F_PASS1_FUNCTION_904;
F_PASS1_FUNCTION_904=(function(){
if(arguments.length !== 4) {
lisp.argumentsError(G_905, arguments.length);
}
let TMP_921;
let TMP_920;
let TMP_919;
let L_G306__529;
let TMP_918;
let TMP_917;
let TMP_916;
let TMP_915;
let TMP_914;
let TMP_913;
let TMP_912;
let TMP_910;
let TMP_909;
let L_BINDING__528;
let TMP_908;
let TMP_907;
let L_G305__527;
let TMP_906;
let L_THING__525;
let L_FUNCTION_FORM__524;
let L_MULTIPLE_VALUES_P__523;
let L_RETURN_VALUE_P__522;
L_RETURN_VALUE_P__522=arguments[0];
L_MULTIPLE_VALUES_P__523=arguments[1];
L_FUNCTION_FORM__524=arguments[2];
L_THING__525=arguments[3];
{
TMP_906=lisp.CL_symbolp(L_THING__525);
L_G305__527=lisp.values1(TMP_906);
if(lisp.values1(L_G305__527) !== lisp.S_nil){
{
TMP_908=G_154.func(L_THING__525,G_44);
L_BINDING__528=lisp.values1(TMP_908);
G_68.func(L_BINDING__528);
if(lisp.values1(L_BINDING__528) !== lisp.S_nil){
TMP_910=lisp.callFunctionWithCallStack(G_544,G_567,L_RETURN_VALUE_P__522,lisp.S_nil,L_BINDING__528);
TMP_909=TMP_910;
}else{
TMP_912=lisp.callFunctionWithCallStack(G_100,G_407,L_THING__525);
TMP_913=lisp.callFunctionWithCallStack(G_100,G_911,TMP_912);
TMP_914=G_586.func(TMP_913,L_RETURN_VALUE_P__522,lisp.S_nil);
TMP_909=TMP_914;
}
}
TMP_907=TMP_909;
}else{
{
TMP_915=lisp.CL_consp(L_THING__525);
if(lisp.values1(TMP_915) !== lisp.S_nil){
TMP_917=lisp.callFunctionWithCallStack(G_206,L_THING__525);
TMP_918=lisp.callFunctionWithCallStack(G_166,TMP_917,lisp.makeCons(G_400, lisp.makeCons(G_480, lisp.S_nil)));
TMP_916=lisp.values1(TMP_918);
}else{
TMP_916=lisp.values1(lisp.S_nil);
}
L_G306__529=lisp.values1(TMP_916);
if(lisp.values1(L_G306__529) !== lisp.S_nil){
TMP_920=G_682.func(L_THING__525,L_RETURN_VALUE_P__522);
TMP_919=TMP_920;
}else{
TMP_921=lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 108, 101, 103, 97, 108, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 110, 97, 109, 101])),L_THING__525);
TMP_919=TMP_921;
}
}
TMP_907=TMP_919;
}
}
return TMP_907;
});
CL_COMPILER_PASS1_FUNCTION=lisp.values1(F_PASS1_FUNCTION_904);
let F_CHECK_LET_FORM_922;
F_CHECK_LET_FORM_922=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_923, arguments.length);
}
let TMP_940;
let TMP_925;
let TMP_924;
let L_BINDINGS__534;
L_BINDINGS__534=arguments[0];
TMP_924=lisp.callFunctionWithCallStack(G_196,L_BINDINGS__534);
if(lisp.values1(TMP_924) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([77, 97, 108, 102, 111, 114, 109, 101, 100, 32, 76, 69, 84, 32, 98, 105, 110, 100, 105, 110, 103, 115, 58, 32, 126, 83])),L_BINDINGS__534);
}
TMP_925=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_939;
let TMP_938;
let L_VAR__540;
let TMP_937;
let TMP_936;
let L_G312__539;
let TMP_935;
let TMP_934;
let L_G311__538;
let TMP_932;
let TMP_931;
let TMP_930;
let TMP_929;
let L_B__537;
let TMP_928;
let TMP_927;
let TMP_926;
let L_B__536;
L_B__536=arguments[0];
{
TMP_926=lisp.callFunctionWithCallStack(G_196,L_B__536);
if(lisp.values1(TMP_926) !== lisp.S_nil){
TMP_927=lisp.values1(L_B__536);
}else{
TMP_928=lisp.callFunctionWithCallStack(G_100,L_B__536);
TMP_927=lisp.values1(TMP_928);
}
L_B__537=lisp.values1(TMP_927);
{
TMP_929=lisp.CL_consp(L_B__537);
if(lisp.values1(TMP_929) !== lisp.S_nil){
TMP_931=lisp.callFunctionWithCallStack(G_250,L_B__537);
TMP_932=lisp.callFunctionWithCallStack(G_933,1,TMP_931,2);
TMP_930=lisp.values1(TMP_932);
}else{
TMP_930=lisp.values1(lisp.S_nil);
}
L_G311__538=lisp.values1(TMP_930);
if(lisp.values1(L_G311__538) !== lisp.S_nil){
TMP_934=lisp.values1(L_G311__538);
}else{
{
TMP_935=lisp.CL_symbolp(L_B__537);
L_G312__539=lisp.values1(TMP_935);
if(lisp.values1(L_G312__539) !== lisp.S_nil){
TMP_936=lisp.values1(L_G312__539);
}else{
TMP_936=lisp.values1(lisp.S_nil);
}
}
TMP_934=lisp.values1(lisp.values1(TMP_936));
}
}
if(lisp.values1(lisp.values1(TMP_934)) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([77, 97, 108, 102, 111, 114, 109, 101, 100, 32, 76, 69, 84, 32, 98, 105, 110, 100, 105, 110, 103, 58, 32, 126, 83])),L_B__537);
}
{
TMP_937=lisp.callFunctionWithCallStack(G_206,L_B__537);
L_VAR__540=lisp.values1(TMP_937);
TMP_938=G_138.func(L_VAR__540);
if(lisp.values1(TMP_938) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 97, 32, 99, 111, 110, 115, 116, 97, 110, 116])),L_VAR__540);
}else{
}
TMP_939=G_178.func(L_VAR__540);
if(lisp.values1(TMP_939) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118, 97, 114, 105, 97, 98, 108, 101])),L_VAR__540);
}
}
}
return lisp.values1(L_B__537);
});
TMP_940=lisp.callFunctionWithCallStack(G_96,TMP_925,L_BINDINGS__534);
return TMP_940;
});
CL_COMPILER_CHECK_LET_FORM=lisp.values1(F_CHECK_LET_FORM_922);
let F_PASS1_LET_BODY_941;
F_PASS1_LET_BODY_941=(function(){
if(arguments.length !== 5) {
lisp.argumentsError(G_942, arguments.length);
}
let TMP_950;
let TMP_949;
let TMP_948;
let TMP_943;
let L_MULTIPLE_VALUES_P__545;
let L_RETURN_VALUE_P__544;
let L_BODY__543;
let L_BINDINGS__542;
let L_LET_FORM__541;
L_LET_FORM__541=arguments[0];
L_BINDINGS__542=arguments[1];
L_BODY__543=arguments[2];
L_RETURN_VALUE_P__544=arguments[3];
L_MULTIPLE_VALUES_P__545=arguments[4];
TMP_943=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_947;
let TMP_946;
let save_STARLEXENVSTAR__552;
let TMP_945;
let save_STARLEXENVSTAR__551;
let TMP_944;
let L_INNER_LEXENV__550;
let L_G313__549;
let L_DECLARES__548;
let L_BODY__547;
L_BODY__547=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__548=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G313__549=lisp.jsArrayToList(arguments, 2);
{
L_INNER_LEXENV__550=lisp.values1(L_BINDINGS__542);
TMP_944=G_174.func(L_INNER_LEXENV__550,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__551=G_11.value;
G_11.value=lisp.values1(TMP_944);
TMP_945=G_610.func(L_DECLARES__548,L_INNER_LEXENV__550,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__552=G_11.value;
G_11.value=lisp.values1(TMP_945);
try{
TMP_946=G_572.func(L_BODY__547,L_RETURN_VALUE_P__544,L_MULTIPLE_VALUES_P__545);
TMP_947=lisp.callFunctionWithCallStack(G_544,G_398,L_RETURN_VALUE_P__544,L_MULTIPLE_VALUES_P__545,L_BINDINGS__542,TMP_946);
}finally{
G_11.value=save_STARLEXENVSTAR__552;
G_11.value=save_STARLEXENVSTAR__551;
}
}
return TMP_947;
});
TMP_948=lisp.callFunctionWithCallStack(G_275,TMP_943);
TMP_949=lisp.callFunctionWithCallStack(G_439,L_BODY__543,lisp.S_nil);
TMP_950=lisp.CL_multipleValueCall(TMP_948,TMP_949);
return TMP_950;
});
CL_COMPILER_PASS1_LET_BODY=lisp.values1(F_PASS1_LET_BODY_941);
let F_PASS1_LET_951;
F_PASS1_LET_951=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_952, arguments.length);
}
let TMP_960;
let L_BINDINGS__561;
let TMP_959;
let TMP_954;
let L_G314__559;
let TMP_953;
let L_BODY__557;
let L_BINDINGS__556;
let L_LET_FORM__555;
let L_MULTIPLE_VALUES_P__554;
let L_RETURN_VALUE_P__553;
L_RETURN_VALUE_P__553=arguments[0];
L_MULTIPLE_VALUES_P__554=arguments[1];
L_LET_FORM__555=arguments[2];
L_BINDINGS__556=arguments[3];
L_BODY__557=lisp.jsArrayToList(arguments, 4);
{
TMP_953=G_923.func(L_BINDINGS__556);
L_G314__559=lisp.values1(TMP_953);
L_BINDINGS__556=lisp.values1(L_G314__559);
}
{
TMP_954=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_958;
let TMP_957;
let TMP_956;
let TMP_955;
let L_B__560;
L_B__560=arguments[0];
TMP_955=lisp.callFunctionWithCallStack(G_206,L_B__560);
TMP_956=lisp.callFunctionWithCallStack(G_265,L_B__560);
TMP_957=G_586.func(TMP_956,G_6,lisp.S_nil);
TMP_958=G_22.func(TMP_955,G_27,TMP_957);
return TMP_958;
});
TMP_959=lisp.callFunctionWithCallStack(G_96,TMP_954,L_BINDINGS__556);
L_BINDINGS__561=lisp.values1(TMP_959);
TMP_960=G_942.func(L_LET_FORM__555,L_BINDINGS__561,L_BODY__557,L_RETURN_VALUE_P__553,L_MULTIPLE_VALUES_P__554);
}
return TMP_960;
});
CL_COMPILER_PASS1_LET=lisp.values1(F_PASS1_LET_951);
let F_PASS1_LETSTAR_961;
F_PASS1_LETSTAR_961=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_962, arguments.length);
}
let TMP_971;
let L_BINDINGS__576;
let TMP_970;
let TMP_964;
let save_STARLEXENVSTAR__572;
let L_G318__571;
let TMP_963;
let L_BODY__569;
let L_BINDINGS__568;
let L_LET_FORM__567;
let L_MULTIPLE_VALUES_P__566;
let L_RETURN_VALUE_P__565;
L_RETURN_VALUE_P__565=arguments[0];
L_MULTIPLE_VALUES_P__566=arguments[1];
L_LET_FORM__567=arguments[2];
L_BINDINGS__568=arguments[3];
L_BODY__569=lisp.jsArrayToList(arguments, 4);
{
TMP_963=G_923.func(L_BINDINGS__568);
L_G318__571=lisp.values1(TMP_963);
L_BINDINGS__568=lisp.values1(L_G318__571);
}
{
save_STARLEXENVSTAR__572=G_11.value;
G_11.value=lisp.values1(lisp.symbolValue(G_11));
try{
{
TMP_964=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G319__575;
let TMP_969;
let L_B__574;
let TMP_968;
let TMP_967;
let TMP_966;
let TMP_965;
let L_B__573;
L_B__573=arguments[0];
{
TMP_965=lisp.callFunctionWithCallStack(G_206,L_B__573);
TMP_966=lisp.callFunctionWithCallStack(G_265,L_B__573);
TMP_967=G_586.func(TMP_966,G_6,lisp.S_nil);
TMP_968=G_22.func(TMP_965,G_27,TMP_967);
L_B__574=lisp.values1(TMP_968);
{
TMP_969=lisp.CL_cons(L_B__574,lisp.symbolValue(G_11));
L_G319__575=lisp.values1(TMP_969);
lisp.setSymbolValue(G_11, lisp.values1(L_G319__575));
}
}
return lisp.values1(L_B__574);
});
TMP_970=lisp.callFunctionWithCallStack(G_96,TMP_964,L_BINDINGS__568);
L_BINDINGS__576=lisp.values1(TMP_970);
TMP_971=G_942.func(L_LET_FORM__567,L_BINDINGS__576,L_BODY__569,L_RETURN_VALUE_P__565,L_MULTIPLE_VALUES_P__566);
}
}finally{
G_11.value=save_STARLEXENVSTAR__572;
}
}
return TMP_971;
});
CL_COMPILER_PASS1_LETSTAR=lisp.values1(F_PASS1_LETSTAR_961);
let F_CHECK_FLET_DEFINITIONS_973;
F_CHECK_FLET_DEFINITIONS_973=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_974, arguments.length);
}
let TMP_982;
let TMP_981;
let TMP_980;
let TMP_979;
let TMP_978;
let L_DEFINITION__584;
let TMP_977;
let TMP_976;
let L_G323__583;
let TMP_975;
let L_DEFINITIONS__580;
L_DEFINITIONS__580=arguments[0];
TMP_975=lisp.callFunctionWithCallStack(G_196,L_DEFINITIONS__580);
if(lisp.values1(TMP_975) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([77, 97, 108, 102, 111, 114, 109, 101, 100, 32, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 115, 58, 32, 126, 83])),L_DEFINITIONS__580);
}
{
L_G323__583=lisp.values1(L_DEFINITIONS__580);
for(;;){
TMP_976=lisp.callFunctionWithCallStack(G_156,L_G323__583);
if(lisp.values1(TMP_976) !== lisp.S_nil){
}else{
{
TMP_977=lisp.callFunctionWithCallStack(G_158,L_G323__583);
L_DEFINITION__584=lisp.values1(TMP_977);
TMP_978=lisp.callFunctionWithCallStack(G_160,L_G323__583);
L_G323__583=lisp.values1(TMP_978);
TMP_979=lisp.CL_consp(L_DEFINITION__584);
if(lisp.values1(TMP_979) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 32, 102, 111, 114, 109, 58, 32, 126, 83])),L_DEFINITION__584);
}
TMP_980=lisp.callFunctionWithCallStack(G_206,L_DEFINITION__584);
TMP_981=G_178.func(TMP_980);
if(lisp.values1(TMP_981) !== lisp.S_nil){
}else{
TMP_982=lisp.callFunctionWithCallStack(G_206,L_DEFINITION__584);
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([73, 108, 108, 101, 103, 97, 108, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 110, 97, 109, 101, 58, 32, 126, 83])),TMP_982);
}
}
continue;
}
break;
}
}
return lisp.values1(lisp.S_nil);
});
CL_COMPILER_CHECK_FLET_DEFINITIONS=lisp.values1(F_CHECK_FLET_DEFINITIONS_973);
let F_PARSE_FLET_DEFINITIONS_983;
F_PARSE_FLET_DEFINITIONS_983=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_984, arguments.length);
}
let TMP_992;
let TMP_985;
let L_COMPILE_LAMBDA_P__587;
let L_DEFINITIONS__586;
L_DEFINITIONS__586=arguments[0];
L_COMPILE_LAMBDA_P__587=arguments[1];
TMP_985=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_991;
let TMP_990;
let TMP_989;
let L_FN__590;
let TMP_988;
let TMP_987;
let TMP_986;
let L_DEFINITION__589;
L_DEFINITION__589=arguments[0];
TMP_986=lisp.callFunctionWithCallStack(G_206,L_DEFINITION__589);
{
TMP_987=lisp.callFunctionWithCallStack(G_208,L_DEFINITION__589);
TMP_988=lisp.CL_cons(G_400,TMP_987);
L_FN__590=lisp.values1(TMP_988);
if(lisp.values1(L_COMPILE_LAMBDA_P__587) !== lisp.S_nil){
TMP_990=G_682.func(L_FN__590,G_6);
TMP_989=lisp.values1(TMP_990);
}else{
TMP_989=lisp.values1(L_FN__590);
}
}
TMP_991=G_41.func(TMP_986,G_27,lisp.values1(TMP_989));
return TMP_991;
});
TMP_992=lisp.callFunctionWithCallStack(G_96,TMP_985,L_DEFINITIONS__586);
return TMP_992;
});
CL_COMPILER_PARSE_FLET_DEFINITIONS=lisp.values1(F_PARSE_FLET_DEFINITIONS_983);
let F_PASS1_FLET_993;
F_PASS1_FLET_993=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_994, arguments.length);
}
let TMP_1003;
let TMP_1002;
let TMP_1001;
let TMP_996;
let L_BINDINGS__597;
let TMP_995;
let L_BODY__595;
let L_DEFINITIONS__594;
let L_FLET_FORM__593;
let L_MULTIPLE_VALUES_P__592;
let L_RETURN_VALUE_P__591;
L_RETURN_VALUE_P__591=arguments[0];
L_MULTIPLE_VALUES_P__592=arguments[1];
L_FLET_FORM__593=arguments[2];
L_DEFINITIONS__594=arguments[3];
L_BODY__595=lisp.jsArrayToList(arguments, 4);
G_974.func(L_DEFINITIONS__594);
{
TMP_995=G_984.func(L_DEFINITIONS__594,G_6);
L_BINDINGS__597=lisp.values1(TMP_995);
TMP_996=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1000;
let TMP_999;
let save_STARLEXENVSTAR__603;
let TMP_998;
let save_STARLEXENVSTAR__602;
let TMP_997;
let L_INNER_LEXENV__601;
let L_G330__600;
let L_DECLARES__599;
let L_BODY__598;
L_BODY__598=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__599=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G330__600=lisp.jsArrayToList(arguments, 2);
{
L_INNER_LEXENV__601=lisp.values1(L_BINDINGS__597);
TMP_997=G_174.func(L_INNER_LEXENV__601,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__602=G_11.value;
G_11.value=lisp.values1(TMP_997);
TMP_998=G_610.func(L_DECLARES__599,L_INNER_LEXENV__601,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__603=G_11.value;
G_11.value=lisp.values1(TMP_998);
try{
TMP_999=G_572.func(L_BODY__598,L_RETURN_VALUE_P__591,L_MULTIPLE_VALUES_P__592);
TMP_1000=lisp.callFunctionWithCallStack(G_544,G_398,L_RETURN_VALUE_P__591,L_MULTIPLE_VALUES_P__592,L_BINDINGS__597,TMP_999);
}finally{
G_11.value=save_STARLEXENVSTAR__603;
G_11.value=save_STARLEXENVSTAR__602;
}
}
return TMP_1000;
});
TMP_1001=lisp.callFunctionWithCallStack(G_275,TMP_996);
TMP_1002=lisp.callFunctionWithCallStack(G_439,L_BODY__595,lisp.S_nil);
TMP_1003=lisp.CL_multipleValueCall(TMP_1001,TMP_1002);
}
return TMP_1003;
});
CL_COMPILER_PASS1_FLET=lisp.values1(F_PASS1_FLET_993);
let F_PASS1_LABELS_1005;
F_PASS1_LABELS_1005=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1006, arguments.length);
}
let TMP_1021;
let TMP_1020;
let TMP_1019;
let TMP_1008;
let L_BINDINGS__613;
let TMP_1007;
let L_BODY__611;
let L_DEFINITIONS__610;
let L_LABELS_FORM__609;
let L_MULTIPLE_VALUES_P__608;
let L_RETURN_VALUE_P__607;
L_RETURN_VALUE_P__607=arguments[0];
L_MULTIPLE_VALUES_P__608=arguments[1];
L_LABELS_FORM__609=arguments[2];
L_DEFINITIONS__610=arguments[3];
L_BODY__611=lisp.jsArrayToList(arguments, 4);
G_974.func(L_DEFINITIONS__610);
{
TMP_1007=G_984.func(L_DEFINITIONS__610,lisp.S_nil);
L_BINDINGS__613=lisp.values1(TMP_1007);
TMP_1008=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1018;
let TMP_1017;
let L_G_STORE343__624;
let TMP_1015;
let TMP_1014;
let L_G342__623;
let TMP_1013;
let L_B__622;
let TMP_1012;
let TMP_1011;
let L_G335__621;
let save_STARLEXENVSTAR__619;
let TMP_1010;
let save_STARLEXENVSTAR__618;
let TMP_1009;
let L_INNER_LEXENV__617;
let L_G334__616;
let L_DECLARES__615;
let L_BODY__614;
L_BODY__614=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__615=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G334__616=lisp.jsArrayToList(arguments, 2);
{
L_INNER_LEXENV__617=lisp.values1(L_BINDINGS__613);
TMP_1009=G_174.func(L_INNER_LEXENV__617,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__618=G_11.value;
G_11.value=lisp.values1(TMP_1009);
TMP_1010=G_610.func(L_DECLARES__615,L_INNER_LEXENV__617,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__619=G_11.value;
G_11.value=lisp.values1(TMP_1010);
try{
{
L_G335__621=lisp.values1(L_BINDINGS__613);
for(;;){
TMP_1011=lisp.callFunctionWithCallStack(G_156,L_G335__621);
if(lisp.values1(TMP_1011) !== lisp.S_nil){
}else{
{
TMP_1012=lisp.callFunctionWithCallStack(G_158,L_G335__621);
L_B__622=lisp.values1(TMP_1012);
TMP_1013=lisp.callFunctionWithCallStack(G_160,L_G335__621);
L_G335__621=lisp.values1(TMP_1013);
{
L_G342__623=lisp.values1(L_B__622);
TMP_1014=lisp.callFunctionWithCallStack(G_560,L_B__622);
TMP_1015=G_586.func(TMP_1014,G_6,lisp.S_nil);
L_G_STORE343__624=lisp.values1(TMP_1015);
lisp.callFunctionWithCallStack(G_1016,L_G_STORE343__624,L_G342__623);
}
}
continue;
}
break;
}
}
TMP_1017=G_572.func(L_BODY__614,L_RETURN_VALUE_P__607,L_MULTIPLE_VALUES_P__608);
TMP_1018=lisp.callFunctionWithCallStack(G_544,G_398,L_RETURN_VALUE_P__607,L_MULTIPLE_VALUES_P__608,L_BINDINGS__613,TMP_1017);
}finally{
G_11.value=save_STARLEXENVSTAR__619;
G_11.value=save_STARLEXENVSTAR__618;
}
}
return TMP_1018;
});
TMP_1019=lisp.callFunctionWithCallStack(G_275,TMP_1008);
TMP_1020=lisp.callFunctionWithCallStack(G_439,L_BODY__611,lisp.S_nil);
TMP_1021=lisp.CL_multipleValueCall(TMP_1019,TMP_1020);
}
return TMP_1021;
});
CL_COMPILER_PASS1_LABELS=lisp.values1(F_PASS1_LABELS_1005);
let F_PASS1_MACROLET_1023;
F_PASS1_MACROLET_1023=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1024, arguments.length);
}
let TMP_1034;
let TMP_1033;
let save_STARLEXENVSTAR__636;
let TMP_1032;
let TMP_1031;
let TMP_1025;
let L_BODY__633;
let L_DEFINITIONS__632;
let L_WHOLE__631;
let L_MULTIPLE_VALUES_P__630;
let L_RETURN_VALUE_P__629;
L_RETURN_VALUE_P__629=arguments[0];
L_MULTIPLE_VALUES_P__630=arguments[1];
L_WHOLE__631=arguments[2];
L_DEFINITIONS__632=arguments[3];
L_BODY__633=lisp.jsArrayToList(arguments, 4);
G_974.func(L_DEFINITIONS__632);
{
TMP_1025=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1030;
let TMP_1029;
let TMP_1028;
let TMP_1027;
let TMP_1026;
let L_DEFINITION__635;
L_DEFINITION__635=arguments[0];
TMP_1026=lisp.callFunctionWithCallStack(G_206,L_DEFINITION__635);
TMP_1027=lisp.callFunctionWithCallStack(G_208,L_DEFINITION__635);
TMP_1028=lisp.CL_cons(G_400,TMP_1027);
TMP_1029=lisp.callFunctionWithCallStack(G_523,TMP_1028);
TMP_1030=G_48.func(TMP_1026,TMP_1029);
return TMP_1030;
});
TMP_1031=lisp.callFunctionWithCallStack(G_96,TMP_1025,L_DEFINITIONS__632);
TMP_1032=G_174.func(TMP_1031,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__636=G_11.value;
G_11.value=lisp.values1(TMP_1032);
try{
TMP_1033=lisp.CL_symbolFunction(G_901);
TMP_1034=lisp.callFunctionWithCallStack(G_753,TMP_1033,L_RETURN_VALUE_P__629,L_MULTIPLE_VALUES_P__630,lisp.S_nil,L_BODY__633);
}finally{
G_11.value=save_STARLEXENVSTAR__636;
}
}
return TMP_1034;
});
CL_COMPILER_PASS1_MACROLET=lisp.values1(F_PASS1_MACROLET_1023);
let F_PASS1_SYMBOL_MACROLET_1036;
F_PASS1_SYMBOL_MACROLET_1036=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1037, arguments.length);
}
let TMP_1045;
let TMP_1044;
let save_STARLEXENVSTAR__647;
let TMP_1043;
let TMP_1042;
let TMP_1038;
let L_BODY__644;
let L_DEFINITIONS__643;
let L_WHOLE__642;
let L_MULTIPLE_VALUES_P__641;
let L_RETURN_VALUE_P__640;
L_RETURN_VALUE_P__640=arguments[0];
L_MULTIPLE_VALUES_P__641=arguments[1];
L_WHOLE__642=arguments[2];
L_DEFINITIONS__643=arguments[3];
L_BODY__644=lisp.jsArrayToList(arguments, 4);
G_974.func(L_DEFINITIONS__643);
{
TMP_1038=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1041;
let TMP_1040;
let TMP_1039;
let L_DEFINITION__646;
L_DEFINITION__646=arguments[0];
TMP_1039=lisp.callFunctionWithCallStack(G_206,L_DEFINITION__646);
TMP_1040=lisp.callFunctionWithCallStack(G_265,L_DEFINITION__646);
TMP_1041=G_52.func(TMP_1039,TMP_1040);
return TMP_1041;
});
TMP_1042=lisp.callFunctionWithCallStack(G_96,TMP_1038,L_DEFINITIONS__643);
TMP_1043=G_174.func(TMP_1042,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__647=G_11.value;
G_11.value=lisp.values1(TMP_1043);
try{
TMP_1044=lisp.CL_symbolFunction(G_901);
TMP_1045=lisp.callFunctionWithCallStack(G_753,TMP_1044,L_RETURN_VALUE_P__640,L_MULTIPLE_VALUES_P__641,lisp.S_nil,L_BODY__644);
}finally{
G_11.value=save_STARLEXENVSTAR__647;
}
}
return TMP_1045;
});
CL_COMPILER_PASS1_SYMBOL_MACROLET=lisp.values1(F_PASS1_SYMBOL_MACROLET_1036);
let F_PASS1_UNWIND_PROTECT_1046;
F_PASS1_UNWIND_PROTECT_1046=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1047, arguments.length);
}
let TMP_1052;
let TMP_1051;
let TMP_1050;
let TMP_1049;
let L_CLEANUP__655;
let L_PROTECTED__654;
let L_UNWIND_PROTECTED_FORM__653;
let L_MULTIPLE_VALUES_P__652;
let L_RETURN_VALUE_P__651;
L_RETURN_VALUE_P__651=arguments[0];
L_MULTIPLE_VALUES_P__652=arguments[1];
L_UNWIND_PROTECTED_FORM__653=arguments[2];
L_PROTECTED__654=arguments[3];
L_CLEANUP__655=lisp.jsArrayToList(arguments, 4);
TMP_1049=G_586.func(L_PROTECTED__654,L_RETURN_VALUE_P__651,L_MULTIPLE_VALUES_P__652);
TMP_1050=lisp.CL_symbolFunction(G_901);
TMP_1051=lisp.callFunctionWithCallStack(G_753,TMP_1050,lisp.S_nil,lisp.S_nil,lisp.S_nil,L_CLEANUP__655);
TMP_1052=lisp.callFunctionWithCallStack(G_544,G_1048,L_RETURN_VALUE_P__651,L_MULTIPLE_VALUES_P__652,TMP_1049,TMP_1051);
return TMP_1052;
});
CL_COMPILER_PASS1_UNWIND_PROTECT=lisp.values1(F_PASS1_UNWIND_PROTECT_1046);
let F_PASS1_BLOCK_1053;
F_PASS1_BLOCK_1053=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1054, arguments.length);
}
let TMP_1059;
let L_BODY__668;
let TMP_1058;
let save_STARLEXENVSTAR__667;
let TMP_1057;
let L_BINDING__666;
let TMP_1056;
let TMP_1055;
let L_FORMS__664;
let L_NAME__663;
let L_BLOCK_FORM__662;
let L_MULTIPLE_VALUES_P__661;
let L_RETURN_VALUE_P__660;
L_RETURN_VALUE_P__660=arguments[0];
L_MULTIPLE_VALUES_P__661=arguments[1];
L_BLOCK_FORM__662=arguments[2];
L_NAME__663=arguments[3];
L_FORMS__664=lisp.jsArrayToList(arguments, 4);
TMP_1055=lisp.CL_symbolp(L_NAME__663);
if(lisp.values1(TMP_1055) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([84, 104, 101, 32, 98, 108, 111, 99, 107, 32, 110, 97, 109, 101, 32, 126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 115, 121, 109, 98, 111, 108, 46])),L_NAME__663);
}
{
TMP_1056=G_56.func(L_NAME__663);
L_BINDING__666=lisp.values1(TMP_1056);
TMP_1057=lisp.CL_cons(L_BINDING__666,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__667=G_11.value;
G_11.value=lisp.values1(TMP_1057);
try{
{
TMP_1058=G_572.func(L_FORMS__664,L_RETURN_VALUE_P__660,L_MULTIPLE_VALUES_P__661);
L_BODY__668=lisp.values1(TMP_1058);
TMP_1059=lisp.callFunctionWithCallStack(G_544,G_437,L_RETURN_VALUE_P__660,L_MULTIPLE_VALUES_P__661,L_BINDING__666,L_BODY__668);
}
}finally{
G_11.value=save_STARLEXENVSTAR__667;
}
}
return TMP_1059;
});
CL_COMPILER_PASS1_BLOCK=lisp.values1(F_PASS1_BLOCK_1053);
let F_PASS1_RETURN_FROM_1060;
F_PASS1_RETURN_FROM_1060=(function(){
if(arguments.length < 4 || 5 < arguments.length) {
lisp.argumentsError(G_1061, arguments.length);
}
let TMP_1068;
let TMP_1067;
let TMP_1066;
let TMP_1064;
let L_BINDING__678;
let TMP_1063;
let TMP_1062;
let L_VALUE__676;
let L_NAME__675;
let L_RETURN_FROM_FORM__674;
let L_MULTIPLE_VALUES_P__673;
let L_RETURN_VALUE_P__672;
L_RETURN_VALUE_P__672=arguments[0];
L_MULTIPLE_VALUES_P__673=arguments[1];
L_RETURN_FROM_FORM__674=arguments[2];
L_NAME__675=arguments[3];
L_VALUE__676=arguments.length > 4 ? arguments[4] : (lisp.values1(lisp.S_nil));
TMP_1062=lisp.CL_symbolp(L_NAME__675);
if(lisp.values1(TMP_1062) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 115, 121, 109, 98, 111, 108])),L_NAME__675);
}
{
TMP_1063=G_154.func(L_NAME__675,G_57);
L_BINDING__678=lisp.values1(TMP_1063);
G_68.func(L_BINDING__678);
if(lisp.values1(L_BINDING__678) !== lisp.S_nil){
TMP_1066=G_586.func(L_VALUE__676,G_6,G_6);
TMP_1067=lisp.callFunctionWithCallStack(G_544,G_1065,L_RETURN_VALUE_P__672,lisp.S_nil,L_BINDING__678,TMP_1066);
TMP_1064=TMP_1067;
}else{
TMP_1068=lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([114, 101, 116, 117, 114, 110, 32, 102, 111, 114, 32, 117, 110, 107, 110, 111, 119, 110, 32, 98, 108, 111, 99, 107, 58, 32, 126, 83])),L_NAME__675);
TMP_1064=TMP_1068;
}
}
return TMP_1064;
});
CL_COMPILER_PASS1_RETURN_FROM=lisp.values1(F_PASS1_RETURN_FROM_1060);
let F_MAKE_TAGBODY_ID_1071;
F_MAKE_TAGBODY_ID_1071=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_1072, arguments.length);
}
let TMP_1076;
let TMP_1073;
if(lisp.values1(lisp.symbolValue(G_718)) !== lisp.S_nil){
TMP_1073=lisp.values1(G_1074);
}else{
TMP_1073=lisp.values1(G_1075);
}
TMP_1076=lisp.callFunctionWithCallStack(G_386,lisp.S_nil,G_97.func(lisp.codeArrayToString([126, 65, 95, 126, 65])),TMP_1073,lisp.symbolValue(G_1069));
return TMP_1076;
});
CL_COMPILER_MAKE_TAGBODY_ID=lisp.values1(F_MAKE_TAGBODY_ID_1071);
let F_TAG_LITERAL_P_1077;
F_TAG_LITERAL_P_1077=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1078, arguments.length);
}
let TMP_1082;
let L_G363__686;
let TMP_1081;
let TMP_1080;
let L_G362__685;
let TMP_1079;
let L_X__683;
L_X__683=arguments[0];
{
TMP_1079=lisp.CL_symbolp(L_X__683);
L_G362__685=lisp.values1(TMP_1079);
if(lisp.values1(L_G362__685) !== lisp.S_nil){
TMP_1080=lisp.values1(L_G362__685);
}else{
{
TMP_1081=lisp.CL_integerp(L_X__683);
L_G363__686=lisp.values1(TMP_1081);
if(lisp.values1(L_G363__686) !== lisp.S_nil){
TMP_1082=lisp.values1(L_G363__686);
}else{
TMP_1082=lisp.values1(lisp.S_nil);
}
}
TMP_1080=TMP_1082;
}
}
return TMP_1080;
});
CL_COMPILER_TAG_LITERAL_P=lisp.values1(F_TAG_LITERAL_P_1077);
let F_PASS1_TAGBODY_1083;
F_PASS1_TAGBODY_1083=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_1084, arguments.length);
}
let TMP_1131;
let TMP_1130;
let TMP_1129;
let L_G379__715;
let TMP_1127;
let L_G378__714;
let TMP_1126;
let TMP_1125;
let TMP_1124;
let L_G376__712;
let L_G375__711;
let TMP_1123;
let L_G374__710;
let TMP_1122;
let TMP_1121;
let TMP_1120;
let TMP_1119;
let L_STATEMENTSSTAR__709;
let BLOCK_RESULT_NIL__708;
let F_ADD_STATEMENTS__707;
let TMP_1104;
let L_LAST_TAG_FORM__701;
let TMP_1103;
let L_LAST_TAG__700;
let L_TAG_STATEMENTS_PAIRS__698;
let L_PART_STATEMENTS__697;
let L_ENTRY_TAGBODY_VALUE__696;
let TMP_1101;
let TMP_1100;
let TMP_1099;
let TMP_1098;
let save_STARLEXENVSTAR__695;
let TMP_1097;
let TMP_1096;
let TMP_1089;
let L_TAGS__693;
let TMP_1087;
let TMP_1086;
let save_STARTAGBODY_IDSTAR__692;
let TMP_1085;
let L_STATEMENTS__690;
let L_TAGBODY_FORM__689;
let L_MULTIPLE_VALUES_P__688;
let L_RETURN_VALUE_P__687;
L_RETURN_VALUE_P__687=arguments[0];
L_MULTIPLE_VALUES_P__688=arguments[1];
L_TAGBODY_FORM__689=arguments[2];
L_STATEMENTS__690=lisp.jsArrayToList(arguments, 3);
{
TMP_1085=lisp.callFunctionWithCallStack(G_94);
save_STARTAGBODY_IDSTAR__692=G_1069.value;
G_1069.value=lisp.values1(TMP_1085);
try{
{
TMP_1086=lisp.CL_symbolFunction(G_1078);
TMP_1087=lisp.callFunctionWithCallStack(G_1088,TMP_1086,L_STATEMENTS__690);
L_TAGS__693=lisp.values1(TMP_1087);
TMP_1089=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1095;
let TMP_1093;
let TMP_1092;
let TMP_1091;
let L_TAG__694;
L_TAG__694=arguments[0];
TMP_1091=lisp.callFunctionWithCallStack(G_94);
TMP_1092=G_1072.func();
TMP_1093=lisp.callFunctionWithCallStack(G_1094,G_1090,TMP_1091,G_35,TMP_1092);
TMP_1095=G_64.func(L_TAG__694,TMP_1093);
return TMP_1095;
});
TMP_1096=lisp.callFunctionWithCallStack(G_96,TMP_1089,L_TAGS__693);
TMP_1097=G_174.func(TMP_1096,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__695=G_11.value;
G_11.value=lisp.values1(TMP_1097);
TMP_1098=lisp.callFunctionWithCallStack(G_94);
TMP_1099=G_1072.func();
TMP_1100=lisp.callFunctionWithCallStack(G_1094,G_1090,TMP_1098,G_35,TMP_1099);
TMP_1101=G_64.func(lisp.S_nil,TMP_1100);
L_ENTRY_TAGBODY_VALUE__696=lisp.values1(TMP_1101);
L_PART_STATEMENTS__697=lisp.values1(lisp.S_nil);
L_TAG_STATEMENTS_PAIRS__698=lisp.values1(lisp.S_nil);
L_LAST_TAG__700=lisp.values1(G_1102);
TMP_1103=lisp.callFunctionWithCallStack(G_747,L_STATEMENTS__690);
L_LAST_TAG_FORM__701=lisp.values1(TMP_1103);
try{
{
TMP_1104=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1118;
let L_G366__705;
let TMP_1117;
let TMP_1116;
let TMP_1115;
let TMP_1114;
let L_BINDING__704;
let TMP_1112;
let L_G365__703;
let TMP_1111;
let TMP_1110;
let TMP_1109;
let TMP_1108;
let TMP_1107;
let L_G364__702;
let TMP_1106;
let TMP_1105;
if(lisp.values1(L_PART_STATEMENTS__697) !== lisp.S_nil){
}else{
{
TMP_1105=G_541.func(lisp.S_nil,lisp.S_nil);
TMP_1106=lisp.callFunctionWithCallStack(G_100,TMP_1105);
L_G364__702=lisp.values1(TMP_1106);
L_PART_STATEMENTS__697=lisp.values1(L_G364__702);
}
}
TMP_1107=lisp.CL_eq(L_LAST_TAG__700,G_1102);
if(lisp.values1(TMP_1107) !== lisp.S_nil){
{
TMP_1108=lisp.callFunctionWithCallStack(G_333,L_PART_STATEMENTS__697);
TMP_1109=lisp.callFunctionWithCallStack(G_544,G_392,lisp.S_nil,lisp.S_nil,TMP_1108);
TMP_1110=lisp.CL_cons(L_ENTRY_TAGBODY_VALUE__696,TMP_1109);
TMP_1111=lisp.CL_cons(TMP_1110,L_TAG_STATEMENTS_PAIRS__698);
L_G365__703=lisp.values1(TMP_1111);
L_TAG_STATEMENTS_PAIRS__698=lisp.values1(L_G365__703);
}
}else{
{
{
TMP_1112=G_154.func(L_LAST_TAG__700,G_65);
L_BINDING__704=lisp.values1(TMP_1112);
if(lisp.values1(L_BINDING__704) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_245,G_97.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),G_1113);
}
TMP_1114=lisp.callFunctionWithCallStack(G_333,L_PART_STATEMENTS__697);
TMP_1115=lisp.callFunctionWithCallStack(G_544,G_392,lisp.S_nil,lisp.S_nil,TMP_1114);
TMP_1116=lisp.CL_cons(L_BINDING__704,TMP_1115);
}
TMP_1117=lisp.CL_cons(lisp.values1(lisp.values1(TMP_1116)),L_TAG_STATEMENTS_PAIRS__698);
L_G366__705=lisp.values1(TMP_1117);
L_TAG_STATEMENTS_PAIRS__698=lisp.values1(L_G366__705);
}
}
L_PART_STATEMENTS__697=(TMP_1118=lisp.values1(lisp.S_nil));
return lisp.values1(TMP_1118);
});
F_ADD_STATEMENTS__707=lisp.values1(TMP_1104);
BLOCK_NIL__708: for(;;){{
L_STATEMENTSSTAR__709=lisp.values1(L_STATEMENTS__690);
for(;;){
TMP_1119=lisp.callFunctionWithCallStack(G_182,L_STATEMENTSSTAR__709);
if(lisp.values1(TMP_1119) !== lisp.S_nil){
TMP_1120=F_ADD_STATEMENTS__707();
BLOCK_RESULT_NIL__708=TMP_1120;
break BLOCK_NIL__708;
}else{
{
TMP_1121=lisp.callFunctionWithCallStack(G_206,L_STATEMENTSSTAR__709);
TMP_1122=G_1078.func(TMP_1121);
L_G374__710=lisp.values1(TMP_1122);
if(lisp.values1(L_G374__710) !== lisp.S_nil){
F_ADD_STATEMENTS__707();
{
TMP_1123=lisp.callFunctionWithCallStack(G_206,L_STATEMENTSSTAR__709);
L_G375__711=lisp.values1(TMP_1123);
L_LAST_TAG__700=lisp.values1(L_G375__711);
}
{
L_G376__712=lisp.values1(L_STATEMENTSSTAR__709);
L_LAST_TAG_FORM__701=lisp.values1(L_G376__712);
}
}else{
{
TMP_1124=lisp.callFunctionWithCallStack(G_206,L_STATEMENTSSTAR__709);
TMP_1125=G_586.func(TMP_1124,lisp.S_nil,lisp.S_nil);
TMP_1126=lisp.CL_cons(TMP_1125,L_PART_STATEMENTS__697);
L_G378__714=lisp.values1(TMP_1126);
L_PART_STATEMENTS__697=lisp.values1(L_G378__714);
}
}
}
{
TMP_1127=lisp.callFunctionWithCallStack(G_208,L_STATEMENTSSTAR__709);
L_G379__715=lisp.values1(TMP_1127);
L_STATEMENTSSTAR__709=lisp.values1(L_G379__715);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__708=lisp.values1(lisp.S_nil);
break;
}
TMP_1129=G_1072.func();
TMP_1130=lisp.callFunctionWithCallStack(G_333,L_TAG_STATEMENTS_PAIRS__698);
TMP_1131=lisp.callFunctionWithCallStack(G_544,G_1128,L_RETURN_VALUE_P__687,lisp.S_nil,TMP_1129,TMP_1130,lisp.S_nil);
}
}finally{
G_11.value=save_STARLEXENVSTAR__695;
}
}
}finally{
G_1069.value=save_STARTAGBODY_IDSTAR__692;
}
}
return TMP_1131;
});
CL_COMPILER_PASS1_TAGBODY=lisp.values1(F_PASS1_TAGBODY_1083);
let F_PASS1_GO_1132;
F_PASS1_GO_1132=(function(){
if(arguments.length !== 4) {
lisp.argumentsError(G_1133, arguments.length);
}
let TMP_1137;
let L_BINDING__724;
let TMP_1135;
let TMP_1134;
let L_TAG__722;
let L_GO_FORM__721;
let L_MULTIPLE_VALUES_P__720;
let L_RETURN_VALUE_P__719;
L_RETURN_VALUE_P__719=arguments[0];
L_MULTIPLE_VALUES_P__720=arguments[1];
L_GO_FORM__721=arguments[2];
L_TAG__722=arguments[3];
TMP_1134=G_1078.func(L_TAG__722);
if(lisp.values1(TMP_1134) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 115, 121, 109, 98, 111, 108])),L_TAG__722);
}
{
TMP_1135=G_154.func(L_TAG__722,G_65);
L_BINDING__724=lisp.values1(TMP_1135);
if(lisp.values1(L_BINDING__724) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([97, 116, 116, 101, 109, 112, 116, 32, 116, 111, 32, 71, 79, 32, 116, 111, 32, 110, 111, 110, 101, 120, 105, 115, 116, 101, 110, 116, 32, 116, 97, 103, 58, 32, 126, 65])),L_TAG__722);
}
G_68.func(L_BINDING__724);
TMP_1137=lisp.callFunctionWithCallStack(G_544,G_1136,lisp.S_nil,lisp.S_nil,L_BINDING__724);
}
return TMP_1137;
});
CL_COMPILER_PASS1_GO=lisp.values1(F_PASS1_GO_1132);
let F_PASS1_LOCALLY_1138;
F_PASS1_LOCALLY_1138=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_1139, arguments.length);
}
let TMP_1146;
let TMP_1145;
let TMP_1144;
let TMP_1140;
let L_BODY__731;
let L_WHOLE__730;
let L_MULTIPLE_VALUES_P__729;
let L_RETURN_VALUE_P__728;
L_RETURN_VALUE_P__728=arguments[0];
L_MULTIPLE_VALUES_P__729=arguments[1];
L_WHOLE__730=arguments[2];
L_BODY__731=lisp.jsArrayToList(arguments, 3);
TMP_1140=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1143;
let TMP_1142;
let save_STARLEXENVSTAR__736;
let TMP_1141;
let L_G386__735;
let L_DECLARES__734;
let L_BODY__733;
L_BODY__733=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__734=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G386__735=lisp.jsArrayToList(arguments, 2);
{
TMP_1141=G_610.func(L_DECLARES__734,lisp.S_nil,lisp.symbolValue(G_11));
save_STARLEXENVSTAR__736=G_11.value;
G_11.value=lisp.values1(TMP_1141);
try{
TMP_1142=lisp.CL_symbolFunction(G_901);
TMP_1143=lisp.callFunctionWithCallStack(G_753,TMP_1142,L_RETURN_VALUE_P__728,L_MULTIPLE_VALUES_P__729,lisp.S_nil,L_BODY__733);
}finally{
G_11.value=save_STARLEXENVSTAR__736;
}
}
return TMP_1143;
});
TMP_1144=lisp.callFunctionWithCallStack(G_275,TMP_1140);
TMP_1145=lisp.callFunctionWithCallStack(G_439,L_BODY__731,lisp.S_nil);
TMP_1146=lisp.CL_multipleValueCall(TMP_1144,TMP_1145);
return TMP_1146;
});
CL_COMPILER_PASS1_LOCALLY=lisp.values1(F_PASS1_LOCALLY_1138);
let F_PASS1_DECLAIM_1147;
F_PASS1_DECLAIM_1147=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_1148, arguments.length);
}
let TMP_1158;
let L_G406__753;
let TMP_1157;
let L_SYMBOL__752;
let TMP_1156;
let TMP_1155;
let L_G399__751;
let TMP_1154;
let L_G398__749;
let TMP_1153;
let L_G397__748;
let TMP_1152;
let TMP_1151;
let L_SPEC__747;
let TMP_1150;
let TMP_1149;
let L_G390__746;
let L_SPECS__743;
let L_WHOLE__742;
let L_MULTIPLE_VALUES_P__741;
let L_RETURN_VALUE_P__740;
L_RETURN_VALUE_P__740=arguments[0];
L_MULTIPLE_VALUES_P__741=arguments[1];
L_WHOLE__742=arguments[2];
L_SPECS__743=lisp.jsArrayToList(arguments, 3);
G_591.func(L_SPECS__743);
{
L_G390__746=lisp.values1(L_SPECS__743);
for(;;){
TMP_1149=lisp.callFunctionWithCallStack(G_156,L_G390__746);
if(lisp.values1(TMP_1149) !== lisp.S_nil){
}else{
{
TMP_1150=lisp.callFunctionWithCallStack(G_158,L_G390__746);
L_SPEC__747=lisp.values1(TMP_1150);
TMP_1151=lisp.callFunctionWithCallStack(G_160,L_G390__746);
L_G390__746=lisp.values1(TMP_1151);
{
TMP_1152=lisp.callFunctionWithCallStack(G_206,L_SPEC__747);
L_G397__748=lisp.values1(TMP_1152);
{
TMP_1153=lisp.callFunctionWithCallStack(G_166,L_G397__748,lisp.makeCons(G_5, lisp.S_nil));
L_G398__749=lisp.values1(TMP_1153);
if(lisp.values1(L_G398__749) !== lisp.S_nil){
{
TMP_1154=lisp.callFunctionWithCallStack(G_208,L_SPEC__747);
L_G399__751=lisp.values1(TMP_1154);
for(;;){
TMP_1155=lisp.callFunctionWithCallStack(G_156,L_G399__751);
if(lisp.values1(TMP_1155) !== lisp.S_nil){
}else{
{
TMP_1156=lisp.callFunctionWithCallStack(G_158,L_G399__751);
L_SYMBOL__752=lisp.values1(TMP_1156);
TMP_1157=lisp.callFunctionWithCallStack(G_160,L_G399__751);
L_G399__751=lisp.values1(TMP_1157);
{
L_G406__753=lisp.values1(L_SYMBOL__752);
lisp.callFunctionWithCallStack(G_125,G_6,L_G406__753);
}
}
continue;
}
break;
}
}
}else{
}
}
}
}
continue;
}
break;
}
}
TMP_1158=G_541.func(lisp.S_nil,L_RETURN_VALUE_P__740);
return TMP_1158;
});
CL_COMPILER_PASS1_DECLAIM=lisp.values1(F_PASS1_DECLAIM_1147);
let F_PASS1_EVAL_WHEN_1159;
F_PASS1_EVAL_WHEN_1159=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1160, arguments.length);
}
let TMP_1189;
let TMP_1188;
let TMP_1187;
let TMP_1186;
let L_G416__773;
let TMP_1185;
let L_G418__772;
let TMP_1184;
let TMP_1183;
let L_G417__771;
let TMP_1182;
let TMP_1180;
let TMP_1178;
let TMP_1177;
let TMP_1176;
let TMP_1175;
let L_G415__770;
let TMP_1174;
let TMP_1172;
let L_G414__769;
let TMP_1171;
let TMP_1169;
let TMP_1168;
let L_G413__768;
let TMP_1167;
let TMP_1165;
let L_G412__767;
let TMP_1164;
let TMP_1162;
let L_G411__766;
let TMP_1161;
let L_BODY__764;
let L_SITUATIONS__763;
let L_WHOLE__762;
let L_MULTIPLE_VALUES_P__761;
let L_RETURN_VALUE_P__760;
L_RETURN_VALUE_P__760=arguments[0];
L_MULTIPLE_VALUES_P__761=arguments[1];
L_WHOLE__762=arguments[2];
L_SITUATIONS__763=arguments[3];
L_BODY__764=lisp.jsArrayToList(arguments, 4);
{
TMP_1161=G_18.func();
L_G411__766=lisp.values1(TMP_1161);
if(lisp.values1(L_G411__766) !== lisp.S_nil){
{
TMP_1164=lisp.callFunctionWithCallStack(G_166,G_1163,L_SITUATIONS__763);
L_G412__767=lisp.values1(TMP_1164);
if(lisp.values1(L_G412__767) !== lisp.S_nil){
TMP_1165=lisp.values1(L_G412__767);
}else{
{
TMP_1167=lisp.callFunctionWithCallStack(G_166,G_1166,L_SITUATIONS__763);
L_G413__768=lisp.values1(TMP_1167);
if(lisp.values1(L_G413__768) !== lisp.S_nil){
TMP_1168=lisp.values1(L_G413__768);
}else{
TMP_1168=lisp.values1(lisp.S_nil);
}
}
TMP_1165=lisp.values1(lisp.values1(TMP_1168));
}
}
if(lisp.values1(lisp.values1(TMP_1165)) !== lisp.S_nil){
TMP_1169=lisp.CL_cons(G_392,L_BODY__764);
lisp.callFunctionWithCallStack(G_523,TMP_1169);
}else{
}
{
TMP_1171=lisp.callFunctionWithCallStack(G_166,G_1170,L_SITUATIONS__763);
L_G414__769=lisp.values1(TMP_1171);
if(lisp.values1(L_G414__769) !== lisp.S_nil){
TMP_1172=lisp.values1(L_G414__769);
}else{
{
TMP_1174=lisp.callFunctionWithCallStack(G_166,G_1173,L_SITUATIONS__763);
L_G415__770=lisp.values1(TMP_1174);
if(lisp.values1(L_G415__770) !== lisp.S_nil){
TMP_1175=lisp.values1(L_G415__770);
}else{
TMP_1175=lisp.values1(lisp.S_nil);
}
}
TMP_1172=lisp.values1(lisp.values1(TMP_1175));
}
}
if(lisp.values1(lisp.values1(TMP_1172)) !== lisp.S_nil){
TMP_1177=lisp.CL_cons(G_392,L_BODY__764);
TMP_1178=G_1179.func(TMP_1177);
TMP_1176=TMP_1178;
}else{
TMP_1180=G_541.func(lisp.S_nil,L_RETURN_VALUE_P__760);
TMP_1176=TMP_1180;
}
TMP_1162=TMP_1176;
}else{
{
{
TMP_1182=lisp.callFunctionWithCallStack(G_166,G_1181,L_SITUATIONS__763);
L_G417__771=lisp.values1(TMP_1182);
if(lisp.values1(L_G417__771) !== lisp.S_nil){
TMP_1183=lisp.values1(L_G417__771);
}else{
{
TMP_1184=lisp.callFunctionWithCallStack(G_166,G_523,L_SITUATIONS__763);
L_G418__772=lisp.values1(TMP_1184);
if(lisp.values1(L_G418__772) !== lisp.S_nil){
TMP_1185=lisp.values1(L_G418__772);
}else{
TMP_1185=lisp.values1(lisp.S_nil);
}
}
TMP_1183=lisp.values1(lisp.values1(TMP_1185));
}
}
L_G416__773=lisp.values1(lisp.values1(TMP_1183));
if(lisp.values1(L_G416__773) !== lisp.S_nil){
TMP_1187=lisp.CL_cons(G_392,L_BODY__764);
TMP_1188=G_586.func(TMP_1187,L_RETURN_VALUE_P__760,L_MULTIPLE_VALUES_P__761);
TMP_1186=TMP_1188;
}else{
TMP_1189=G_541.func(lisp.S_nil,L_RETURN_VALUE_P__760);
TMP_1186=TMP_1189;
}
}
TMP_1162=TMP_1186;
}
}
return TMP_1162;
});
CL_COMPILER_PASS1_EVAL_WHEN=lisp.values1(F_PASS1_EVAL_WHEN_1159);
let F_PASS1_PERCENTDEFUN_1190;
F_PASS1_PERCENTDEFUN_1190=(function(){
if(arguments.length < 5) {
lisp.argumentsError(G_1191, arguments.length);
}
let TMP_1207;
let TMP_1206;
let TMP_1205;
let TMP_1192;
let L_BODY__783;
let L_LAMBDA_LIST__782;
let L_NAME__781;
let L_DEFUN_FORM__780;
let L_MULTIPLE_VALUES_P__779;
let L_RETURN_VALUE_P__778;
L_RETURN_VALUE_P__778=arguments[0];
L_MULTIPLE_VALUES_P__779=arguments[1];
L_DEFUN_FORM__780=arguments[2];
L_NAME__781=arguments[3];
L_LAMBDA_LIST__782=arguments[4];
L_BODY__783=lisp.jsArrayToList(arguments, 5);
TMP_1192=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1204;
let L_G424__791;
let TMP_1202;
let TMP_1200;
let L_FN__790;
let TMP_1199;
let TMP_1198;
let TMP_1197;
let TMP_1196;
let TMP_1195;
let TMP_1194;
let L_BODY__789;
let TMP_1193;
let L_G423__788;
let L_DOCSTRING__787;
let L_DECLARES__786;
let L_BODY__785;
L_BODY__785=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__786=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_DOCSTRING__787=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_G423__788=lisp.jsArrayToList(arguments, 3);
{
TMP_1193=lisp.callFunctionWithCallStack(G_102,G_437,L_NAME__781,L_BODY__785);
L_BODY__789=lisp.values1(TMP_1193);
TMP_1194=lisp.callFunctionWithCallStack(G_182,L_DECLARES__786);
if(lisp.values1(TMP_1194) !== lisp.S_nil){
TMP_1196=lisp.callFunctionWithCallStack(G_100,G_480,L_NAME__781,L_LAMBDA_LIST__782,L_BODY__789);
TMP_1195=lisp.values1(TMP_1196);
}else{
TMP_1197=lisp.CL_cons(G_402,L_DECLARES__786);
TMP_1198=lisp.callFunctionWithCallStack(G_100,G_480,L_NAME__781,L_LAMBDA_LIST__782,TMP_1197,L_BODY__789);
TMP_1195=lisp.values1(TMP_1198);
}
TMP_1199=G_586.func(TMP_1195,G_6,lisp.S_nil);
L_FN__790=lisp.values1(TMP_1199);
{
TMP_1200=lisp.CL_cons(L_NAME__781,L_FN__790);
TMP_1202=lisp.callFunctionWithCallStack(G_1203,TMP_1200,lisp.symbolValue(G_1201));
L_G424__791=lisp.values1(TMP_1202);
lisp.setSymbolValue(G_1201, lisp.values1(L_G424__791));
}
TMP_1204=lisp.callFunctionWithCallStack(G_544,G_433,L_RETURN_VALUE_P__778,lisp.S_nil,L_NAME__781,L_FN__790);
}
return TMP_1204;
});
TMP_1205=lisp.callFunctionWithCallStack(G_275,TMP_1192);
TMP_1206=lisp.callFunctionWithCallStack(G_439,L_BODY__783,G_6);
TMP_1207=lisp.CL_multipleValueCall(TMP_1205,TMP_1206);
return TMP_1207;
});
CL_COMPILER_PASS1_PERCENTDEFUN=lisp.values1(F_PASS1_PERCENTDEFUN_1190);
let F_PASS1_MULTIPLE_VALUE_CALL_1208;
F_PASS1_MULTIPLE_VALUE_CALL_1208=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1209, arguments.length);
}
let TMP_1216;
let TMP_1215;
let TMP_1214;
let TMP_1212;
let TMP_1211;
let L_ARGS__799;
let L_FUNCTION__798;
let L_FORM__797;
let L_MULTIPLE_VALUES_P__796;
let L_RETURN_VALUE_P__795;
L_RETURN_VALUE_P__795=arguments[0];
L_MULTIPLE_VALUES_P__796=arguments[1];
L_FORM__797=arguments[2];
L_FUNCTION__798=arguments[3];
L_ARGS__799=lisp.jsArrayToList(arguments, 4);
TMP_1211=G_586.func(L_FUNCTION__798,G_6,lisp.S_nil);
TMP_1212=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1213;
let L_ARG__801;
L_ARG__801=arguments[0];
TMP_1213=G_586.func(L_ARG__801,G_6,G_6);
return TMP_1213;
});
TMP_1214=lisp.callFunctionWithCallStack(G_96,TMP_1212,L_ARGS__799);
TMP_1215=lisp.CL_cons(TMP_1211,TMP_1214);
TMP_1216=lisp.callFunctionWithCallStack(G_544,G_776,L_RETURN_VALUE_P__795,L_MULTIPLE_VALUES_P__796,G_1210,TMP_1215);
return TMP_1216;
});
CL_COMPILER_PASS1_MULTIPLE_VALUE_CALL=lisp.values1(F_PASS1_MULTIPLE_VALUE_CALL_1208);
let F_PASS1_PERCENTDEFPACKAGE_1217;
F_PASS1_PERCENTDEFPACKAGE_1217=(function(){
if(arguments.length < 4 || 10 < arguments.length) {
lisp.argumentsError(G_1218, arguments.length);
}
let TMP_1233;
let TMP_1232;
let L_USE_PACKAGE_NAMES__815;
let TMP_1230;
let TMP_1229;
let L_EXPORT_NAMES__814;
let TMP_1228;
let TMP_1227;
let L_NAME__813;
let TMP_1226;
let L_NICKNAMES__811;
let L_USE__810;
let L_EXPORT__809;
let L_NAME__808;
let L_FORM__807;
let L_MULTIPLE_VALUES_P__806;
let L_RETURN_VALUE_P__805;
L_RETURN_VALUE_P__805=arguments[0];
L_MULTIPLE_VALUES_P__806=arguments[1];
L_FORM__807=arguments[2];
L_NAME__808=arguments[3];
let supplied_EXPORT__809;
for (let TMP_1220 = 4; TMP_1220 < arguments.length; TMP_1220 += 2) {
if(arguments[TMP_1220] === G_1219){
supplied_EXPORT__809=arguments[TMP_1220+1];
break;
}
}
L_EXPORT__809=supplied_EXPORT__809 !== undefined ? supplied_EXPORT__809 : (lisp.values1(lisp.S_nil));
let supplied_USE__810;
for (let TMP_1222 = 4; TMP_1222 < arguments.length; TMP_1222 += 2) {
if(arguments[TMP_1222] === G_1221){
supplied_USE__810=arguments[TMP_1222+1];
break;
}
}
L_USE__810=supplied_USE__810 !== undefined ? supplied_USE__810 : (lisp.values1(lisp.S_nil));
let supplied_NICKNAMES__811;
for (let TMP_1224 = 4; TMP_1224 < arguments.length; TMP_1224 += 2) {
if(arguments[TMP_1224] === G_1223){
supplied_NICKNAMES__811=arguments[TMP_1224+1];
break;
}
}
L_NICKNAMES__811=supplied_NICKNAMES__811 !== undefined ? supplied_NICKNAMES__811 : (lisp.values1(lisp.S_nil));
if((arguments.length-4)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1225 = 4; TMP_1225 < arguments.length; TMP_1225 += 2) {
if(arguments[TMP_1225]!==G_1223 && arguments[TMP_1225]!==G_1221 && arguments[TMP_1225]!==G_1219) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1225].name); }
}
{
TMP_1226=lisp.callFunctionWithCallStack(G_59,L_NAME__808);
L_NAME__813=lisp.values1(TMP_1226);
TMP_1227=lisp.CL_symbolFunction(G_59);
TMP_1228=lisp.callFunctionWithCallStack(G_96,TMP_1227,L_EXPORT__809);
L_EXPORT_NAMES__814=lisp.values1(TMP_1228);
TMP_1229=lisp.CL_symbolFunction(G_59);
TMP_1230=lisp.callFunctionWithCallStack(G_96,TMP_1229,L_USE__810);
L_USE_PACKAGE_NAMES__815=lisp.values1(TMP_1230);
TMP_1232=lisp.callFunctionWithCallStack(G_100,L_EXPORT_NAMES__814,L_USE_PACKAGE_NAMES__815,L_NICKNAMES__811);
TMP_1233=lisp.callFunctionWithCallStack(G_544,G_1231,L_RETURN_VALUE_P__805,lisp.S_nil,L_NAME__813,TMP_1232);
}
return TMP_1233;
});
CL_COMPILER_PASS1_PERCENTDEFPACKAGE=lisp.values1(F_PASS1_PERCENTDEFPACKAGE_1217);
let F_PASS1_IN_PACKAGE_1234;
F_PASS1_IN_PACKAGE_1234=(function(){
if(arguments.length !== 4) {
lisp.argumentsError(G_1235, arguments.length);
}
let TMP_1243;
let L_NAME__824;
let TMP_1241;
let TMP_1240;
let TMP_1237;
let L_NAME__822;
let L_FORM__821;
let L_MULTIPLE_VALUES_P__820;
let L_RETURN_VALUE_P__819;
L_RETURN_VALUE_P__819=arguments[0];
L_MULTIPLE_VALUES_P__820=arguments[1];
L_FORM__821=arguments[2];
L_NAME__822=arguments[3];
TMP_1237=lisp.callFunctionWithCallStack(G_1238,L_NAME__822);
lisp.setSymbolValue(G_1236, lisp.values1(TMP_1237));
TMP_1240=lisp.callFunctionWithCallStack(G_1238,L_NAME__822);
lisp.setSymbolValue(G_1239, lisp.values1(TMP_1240));
{
TMP_1241=lisp.callFunctionWithCallStack(G_59,L_NAME__822);
L_NAME__824=lisp.values1(TMP_1241);
TMP_1243=lisp.callFunctionWithCallStack(G_544,G_1242,L_RETURN_VALUE_P__819,lisp.S_nil,L_NAME__824);
}
return TMP_1243;
});
CL_COMPILER_PASS1_IN_PACKAGE=lisp.values1(F_PASS1_IN_PACKAGE_1234);
let F_REF_FORM_P_1245;
F_REF_FORM_P_1245=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1246, arguments.length);
}
let TMP_1250;
let TMP_1249;
let TMP_1248;
let TMP_1247;
let L_X__828;
L_X__828=arguments[0];
TMP_1247=lisp.CL_consp(L_X__828);
if(lisp.values1(TMP_1247) !== lisp.S_nil){
TMP_1249=lisp.callFunctionWithCallStack(G_158,L_X__828);
TMP_1250=lisp.CL_eq(G_549,TMP_1249);
TMP_1248=TMP_1250;
}else{
TMP_1248=lisp.values1(lisp.S_nil);
}
return TMP_1248;
});
CL_COMPILER_REF_FORM_P=lisp.values1(F_REF_FORM_P_1245);
let F_IDENT_PLACE_P_1251;
F_IDENT_PLACE_P_1251=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1252, arguments.length);
}
let TMP_1259;
let L_G439__834;
let TMP_1258;
let TMP_1257;
let L_G438__833;
let TMP_1256;
let TMP_1255;
let L_G437__832;
let TMP_1253;
let L_X__830;
L_X__830=arguments[0];
{
TMP_1253=lisp.callFunctionWithCallStack(G_1254,L_X__830);
L_G437__832=lisp.values1(TMP_1253);
if(lisp.values1(L_G437__832) !== lisp.S_nil){
TMP_1255=lisp.values1(L_G437__832);
}else{
{
TMP_1256=lisp.CL_symbolp(L_X__830);
L_G438__833=lisp.values1(TMP_1256);
if(lisp.values1(L_G438__833) !== lisp.S_nil){
TMP_1257=lisp.values1(L_G438__833);
}else{
{
TMP_1258=G_1246.func(L_X__830);
L_G439__834=lisp.values1(TMP_1258);
if(lisp.values1(L_G439__834) !== lisp.S_nil){
TMP_1259=lisp.values1(L_G439__834);
}else{
TMP_1259=lisp.values1(lisp.S_nil);
}
}
TMP_1257=TMP_1259;
}
}
TMP_1255=TMP_1257;
}
}
return TMP_1255;
});
CL_COMPILER_IDENT_PLACE_P=lisp.values1(F_IDENT_PLACE_P_1251);
let F_PASS1_REF_NAMES_1260;
F_PASS1_REF_NAMES_1260=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_796, arguments.length);
}
let TMP_1275;
let TMP_1274;
let TMP_1273;
let TMP_1272;
let L_G449__844;
let TMP_1271;
let TMP_1270;
let TMP_1269;
let L_G448__843;
let TMP_1268;
let TMP_1267;
let L_KEY__842;
let TMP_1266;
let TMP_1265;
let L_G441__841;
let L_G440__839;
let TMP_1264;
let TMP_1263;
let TMP_1262;
let TMP_1261;
let L_ARGUMENTS__838;
let L_KEYS__836;
let L_OBJECT__835;
L_OBJECT__835=arguments[0];
L_KEYS__836=arguments[1];
{
L_ARGUMENTS__838=lisp.values1(lisp.S_nil);
{
TMP_1261=lisp.callFunctionWithCallStack(G_1254,L_OBJECT__835);
if(lisp.values1(TMP_1261) !== lisp.S_nil){
TMP_1262=lisp.values1(L_OBJECT__835);
}else{
TMP_1263=G_586.func(L_OBJECT__835,G_6,lisp.S_nil);
TMP_1262=lisp.values1(TMP_1263);
}
TMP_1264=lisp.CL_cons(TMP_1262,L_ARGUMENTS__838);
L_G440__839=lisp.values1(TMP_1264);
L_ARGUMENTS__838=lisp.values1(L_G440__839);
}
{
L_G441__841=lisp.values1(L_KEYS__836);
for(;;){
TMP_1265=lisp.callFunctionWithCallStack(G_156,L_G441__841);
if(lisp.values1(TMP_1265) !== lisp.S_nil){
}else{
{
TMP_1266=lisp.callFunctionWithCallStack(G_158,L_G441__841);
L_KEY__842=lisp.values1(TMP_1266);
TMP_1267=lisp.callFunctionWithCallStack(G_160,L_G441__841);
L_G441__841=lisp.values1(TMP_1267);
{
TMP_1268=lisp.callFunctionWithCallStack(G_1254,L_KEY__842);
L_G448__843=lisp.values1(TMP_1268);
if(lisp.values1(L_G448__843) !== lisp.S_nil){
TMP_1270=lisp.callFunctionWithCallStack(G_100,L_KEY__842);
TMP_1269=lisp.values1(TMP_1270);
}else{
{
TMP_1271=lisp.CL_symbolp(L_KEY__842);
L_G449__844=lisp.values1(TMP_1271);
if(lisp.values1(L_G449__844) !== lisp.S_nil){
TMP_1273=lisp.callFunctionWithCallStack(G_548,L_KEY__842);
TMP_1272=lisp.values1(TMP_1273);
}else{
TMP_1274=lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 105, 110, 103, 32, 111, 114, 32, 115, 121, 109, 98, 111, 108])),L_KEY__842);
TMP_1272=lisp.values1(TMP_1274);
}
}
TMP_1269=lisp.values1(lisp.values1(TMP_1272));
}
}
TMP_1275=lisp.callFunctionWithCallStack(G_454,L_ARGUMENTS__838,lisp.values1(TMP_1269));
L_ARGUMENTS__838=lisp.values1(TMP_1275);
}
continue;
}
break;
}
}
}
return lisp.values1(L_ARGUMENTS__838);
});
CL_COMPILER_PASS1_REF_NAMES=lisp.values1(F_PASS1_REF_NAMES_1260);
let F_PASS1_REF_1276;
F_PASS1_REF_1276=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1277, arguments.length);
}
let TMP_1279;
let L_ARGUMENTS__853;
let TMP_1278;
let L_KEYS__851;
let L_OBJECT__850;
let L_FORM__849;
let L_MULTIPLE_VALUES_P__848;
let L_RETURN_VALUE_P__847;
L_RETURN_VALUE_P__847=arguments[0];
L_MULTIPLE_VALUES_P__848=arguments[1];
L_FORM__849=arguments[2];
L_OBJECT__850=arguments[3];
L_KEYS__851=lisp.jsArrayToList(arguments, 4);
{
TMP_1278=G_796.func(L_OBJECT__850,L_KEYS__851);
L_ARGUMENTS__853=lisp.values1(TMP_1278);
TMP_1279=lisp.callFunctionWithCallStack(G_544,G_549,L_RETURN_VALUE_P__847,lisp.S_nil,L_ARGUMENTS__853);
}
return TMP_1279;
});
CL_COMPILER_PASS1_REF=lisp.values1(F_PASS1_REF_1276);
let F_PASS1_SET_1280;
F_PASS1_SET_1280=(function(){
if(arguments.length !== 5) {
lisp.argumentsError(G_1281, arguments.length);
}
let TMP_1285;
let TMP_1284;
let TMP_1283;
let L_RHS__861;
let L_LHS__860;
let L_FORM__859;
let L_MULTIPLE_VALUES_P__858;
let L_RETURN_VALUE_P__857;
L_RETURN_VALUE_P__857=arguments[0];
L_MULTIPLE_VALUES_P__858=arguments[1];
L_FORM__859=arguments[2];
L_LHS__860=arguments[3];
L_RHS__861=arguments[4];
TMP_1283=G_586.func(L_LHS__860,G_6,lisp.S_nil);
TMP_1284=G_586.func(L_RHS__861,G_6,lisp.S_nil);
TMP_1285=lisp.callFunctionWithCallStack(G_544,G_1282,L_RETURN_VALUE_P__857,lisp.S_nil,TMP_1283,TMP_1284);
return TMP_1285;
});
CL_COMPILER_PASS1_SET=lisp.values1(F_PASS1_SET_1280);
let F_CONVERT_VAR_1286;
F_CONVERT_VAR_1286=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_1287, arguments.length);
}
let TMP_1294;
let TMP_1293;
let TMP_1292;
let L_G458__869;
let TMP_1291;
let TMP_1290;
let TMP_1289;
let L_G457__868;
let TMP_1288;
let L_VAR__866;
L_VAR__866=arguments[0];
{
TMP_1288=G_1246.func(L_VAR__866);
L_G457__868=lisp.values1(TMP_1288);
if(lisp.values1(L_G457__868) !== lisp.S_nil){
TMP_1290=G_586.func(L_VAR__866,lisp.S_nil,lisp.S_nil);
TMP_1289=TMP_1290;
}else{
{
TMP_1291=lisp.callFunctionWithCallStack(G_191,L_VAR__866);
L_G458__869=lisp.values1(TMP_1291);
if(lisp.values1(L_G458__869) !== lisp.S_nil){
TMP_1293=G_546.func(L_VAR__866,lisp.S_nil);
TMP_1292=TMP_1293;
}else{
TMP_1294=lisp.callFunctionWithCallStack(G_59,L_VAR__866);
TMP_1292=TMP_1294;
}
}
TMP_1289=TMP_1292;
}
}
return TMP_1289;
});
CL_COMPILER_CONVERT_VAR=lisp.values1(F_CONVERT_VAR_1286);
let F_PASS1_VAR_1295;
F_PASS1_VAR_1295=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_1296, arguments.length);
}
let TMP_1304;
let TMP_1303;
let TMP_1302;
let TMP_1300;
let TMP_1299;
let L_VAR__878;
let TMP_1298;
let TMP_1297;
let L_G460__877;
let L_VARS__874;
let L_FORM__873;
let L_MULTIPLE_VALUES_P__872;
let L_RETURN_VALUE_P__871;
L_RETURN_VALUE_P__871=arguments[0];
L_MULTIPLE_VALUES_P__872=arguments[1];
L_FORM__873=arguments[2];
L_VARS__874=lisp.jsArrayToList(arguments, 3);
{
L_G460__877=lisp.values1(L_VARS__874);
for(;;){
TMP_1297=lisp.callFunctionWithCallStack(G_156,L_G460__877);
if(lisp.values1(TMP_1297) !== lisp.S_nil){
}else{
{
TMP_1298=lisp.callFunctionWithCallStack(G_158,L_G460__877);
L_VAR__878=lisp.values1(TMP_1298);
TMP_1299=lisp.callFunctionWithCallStack(G_160,L_G460__877);
L_G460__877=lisp.values1(TMP_1299);
TMP_1300=G_1252.func(L_VAR__878);
if(lisp.values1(TMP_1300) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 105, 100, 101, 110, 116, 105, 102, 105, 101, 114])),L_VAR__878);
}
}
continue;
}
break;
}
}
TMP_1302=lisp.CL_symbolFunction(G_1287);
TMP_1303=lisp.callFunctionWithCallStack(G_96,TMP_1302,L_VARS__874);
TMP_1304=lisp.callFunctionWithCallStack(G_544,G_1301,L_RETURN_VALUE_P__871,L_MULTIPLE_VALUES_P__872,TMP_1303);
return TMP_1304;
});
CL_COMPILER_PASS1_VAR=lisp.values1(F_PASS1_VAR_1295);
let F_PASS1_REQUIRE_1305;
F_PASS1_REQUIRE_1305=(function(){
if(arguments.length < 3) {
lisp.argumentsError(G_1306, arguments.length);
}
let TMP_1320;
let L_G474__894;
let TMP_1319;
let TMP_1318;
let TMP_1317;
let TMP_1316;
let TMP_1315;
let TMP_1314;
let L_MODULE_NAME__892;
let TMP_1313;
let L_G472__891;
let TMP_1312;
let L_VAR__890;
let TMP_1311;
let L_G470__888;
let TMP_1310;
let TMP_1309;
let TMP_1308;
let TMP_1307;
let L_ARGS__886;
let L_WHOLE__885;
let L_MULTIPLE_VALUES_P__884;
let L_RETURN_VALUE_P__883;
L_RETURN_VALUE_P__883=arguments[0];
L_MULTIPLE_VALUES_P__884=arguments[1];
L_WHOLE__885=arguments[2];
L_ARGS__886=lisp.jsArrayToList(arguments, 3);
{
TMP_1307=lisp.callFunctionWithCallStack(G_888,L_ARGS__886);
if(lisp.values1(TMP_1307) !== lisp.S_nil){
TMP_1309=lisp.callFunctionWithCallStack(G_206,L_ARGS__886);
TMP_1310=lisp.callFunctionWithCallStack(G_100,lisp.S_nil,TMP_1309);
TMP_1308=lisp.values1(TMP_1310);
}else{
TMP_1308=lisp.values1(L_ARGS__886);
}
L_G470__888=lisp.values1(TMP_1308);
{
TMP_1311=lisp.callFunctionWithCallStack(G_206,L_G470__888);
L_VAR__890=lisp.values1(TMP_1311);
TMP_1312=lisp.callFunctionWithCallStack(G_208,L_G470__888);
L_G472__891=lisp.values1(TMP_1312);
TMP_1313=lisp.callFunctionWithCallStack(G_206,L_G472__891);
L_MODULE_NAME__892=lisp.values1(TMP_1313);
if(lisp.values1(L_VAR__890) !== lisp.S_nil){
TMP_1314=G_1252.func(L_VAR__890);
if(lisp.values1(TMP_1314) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 105, 100, 101, 110, 116, 105, 102, 101, 114])),L_VAR__890);
}
}else{
}
TMP_1315=lisp.callFunctionWithCallStack(G_1254,L_MODULE_NAME__892);
if(lisp.values1(TMP_1315) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 105, 110, 103])),L_MODULE_NAME__892);
}
{
if(lisp.values1(L_VAR__890) !== lisp.S_nil){
TMP_1317=G_1287.func(L_VAR__890);
TMP_1316=lisp.values1(TMP_1317);
}else{
TMP_1316=lisp.values1(lisp.S_nil);
}
TMP_1318=lisp.CL_cons(TMP_1316,L_MODULE_NAME__892);
TMP_1319=lisp.CL_cons(TMP_1318,lisp.symbolValue(G_7));
L_G474__894=lisp.values1(TMP_1319);
lisp.setSymbolValue(G_7, lisp.values1(L_G474__894));
}
TMP_1320=G_541.func(lisp.S_nil,L_RETURN_VALUE_P__883);
}
}
return TMP_1320;
});
CL_COMPILER_PASS1_REQUIRE=lisp.values1(F_PASS1_REQUIRE_1305);
let F_PASS1_EXPORT_1322;
F_PASS1_EXPORT_1322=(function(){
if(arguments.length < 4 || 6 < arguments.length) {
lisp.argumentsError(G_1323, arguments.length);
}
let TMP_1333;
let L_G478__904;
let TMP_1332;
let TMP_1331;
let TMP_1330;
let TMP_1329;
let TMP_1328;
let TMP_1327;
let L_AS__902;
let L_NAME__901;
let L_WHOLE__900;
let L_PMULTIPLE_VALUES_P__899;
let L_RETURN_VALUE_P__898;
L_RETURN_VALUE_P__898=arguments[0];
L_PMULTIPLE_VALUES_P__899=arguments[1];
L_WHOLE__900=arguments[2];
L_NAME__901=arguments[3];
let supplied_AS__902;
for (let TMP_1325 = 4; TMP_1325 < arguments.length; TMP_1325 += 2) {
if(arguments[TMP_1325] === G_1324){
supplied_AS__902=arguments[TMP_1325+1];
break;
}
}
L_AS__902=supplied_AS__902 !== undefined ? supplied_AS__902 : (lisp.values1(lisp.S_nil));
if((arguments.length-4)%2===1){lisp.programError('odd number of &KEY arguments');}
for (let TMP_1326 = 4; TMP_1326 < arguments.length; TMP_1326 += 2) {
if(arguments[TMP_1326]!==G_1324) { lisp.programError('Unknown &KEY argument: ' + arguments[TMP_1326].name); }
}
TMP_1327=G_1252.func(L_NAME__901);
if(lisp.values1(TMP_1327) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([126, 83, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 105, 100, 101, 110, 116, 105, 102, 101, 114])),L_NAME__901);
}
{
TMP_1328=G_1287.func(L_NAME__901);
if(lisp.values1(L_AS__902) !== lisp.S_nil){
TMP_1330=G_1287.func(L_AS__902);
TMP_1329=lisp.values1(TMP_1330);
}else{
TMP_1329=lisp.values1(lisp.S_nil);
}
TMP_1331=lisp.CL_cons(TMP_1328,TMP_1329);
TMP_1332=lisp.CL_cons(TMP_1331,lisp.symbolValue(G_9));
L_G478__904=lisp.values1(TMP_1332);
lisp.setSymbolValue(G_9, lisp.values1(L_G478__904));
}
TMP_1333=G_541.func(lisp.S_nil,L_RETURN_VALUE_P__898);
return TMP_1333;
});
CL_COMPILER_PASS1_EXPORT=lisp.values1(F_PASS1_EXPORT_1322);
let F_PASS1_TYPEOF_1335;
F_PASS1_TYPEOF_1335=(function(){
if(arguments.length !== 4) {
lisp.argumentsError(G_1336, arguments.length);
}
let TMP_1339;
let TMP_1338;
let L_X__911;
let L_FORM__910;
let L_MULTIPLE_VALUES_P__909;
let L_RETURN_VALUE_P__908;
L_RETURN_VALUE_P__908=arguments[0];
L_MULTIPLE_VALUES_P__909=arguments[1];
L_FORM__910=arguments[2];
L_X__911=arguments[3];
TMP_1338=G_586.func(L_X__911,G_6,lisp.S_nil);
TMP_1339=lisp.callFunctionWithCallStack(G_544,G_1337,L_RETURN_VALUE_P__908,lisp.S_nil,TMP_1338);
return TMP_1339;
});
CL_COMPILER_PASS1_TYPEOF=lisp.values1(F_PASS1_TYPEOF_1335);
let F_PASS1_NEW_1340;
F_PASS1_NEW_1340=(function(){
if(arguments.length < 4) {
lisp.argumentsError(G_1341, arguments.length);
}
let TMP_1369;
let TMP_1368;
let TMP_1366;
let TMP_1365;
let TMP_1363;
let TMP_1362;
let TMP_1361;
let F_SIMPLE_REF_FORM_P__927;
let TMP_1342;
let L_ARGS__920;
let L_CONSTRUCTOR__919;
let L_FORM__918;
let L_MULTIPLE_VALUES_P__917;
let L_RETURN_VALUE_P__916;
L_RETURN_VALUE_P__916=arguments[0];
L_MULTIPLE_VALUES_P__917=arguments[1];
L_FORM__918=arguments[2];
L_CONSTRUCTOR__919=arguments[3];
L_ARGS__920=lisp.jsArrayToList(arguments, 4);
{
TMP_1342=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1360;
let L_G486__926;
let TMP_1359;
let L_G488__925;
let TMP_1358;
let TMP_1357;
let TMP_1356;
let L_G487__924;
let TMP_1355;
let TMP_1354;
let TMP_1353;
let TMP_1352;
let TMP_1351;
let TMP_1350;
let TMP_1349;
let TMP_1348;
let TMP_1347;
let TMP_1346;
let TMP_1345;
let TMP_1344;
let L_G485__923;
let TMP_1343;
let L_FORM__922;
L_FORM__922=arguments[0];
{
TMP_1343=lisp.callFunctionWithCallStack(G_191,L_FORM__922);
L_G485__923=lisp.values1(TMP_1343);
if(lisp.values1(L_G485__923) !== lisp.S_nil){
TMP_1344=lisp.values1(L_G485__923);
}else{
{
TMP_1345=lisp.CL_consp(L_FORM__922);
if(lisp.values1(TMP_1345) !== lisp.S_nil){
TMP_1347=lisp.callFunctionWithCallStack(G_206,L_FORM__922);
TMP_1348=lisp.CL_eq(G_549,TMP_1347);
if(lisp.values1(TMP_1348) !== lisp.S_nil){
TMP_1350=lisp.callFunctionWithCallStack(G_265,L_FORM__922);
TMP_1351=lisp.callFunctionWithCallStack(G_191,TMP_1350);
TMP_1352=lisp.callFunctionWithCallStack(G_184,TMP_1351);
if(lisp.values1(TMP_1352) !== lisp.S_nil){
{
TMP_1354=lisp.callFunctionWithCallStack(G_265,L_FORM__922);
TMP_1355=lisp.callFunctionWithCallStack(G_1254,TMP_1354);
L_G487__924=lisp.values1(TMP_1355);
if(lisp.values1(L_G487__924) !== lisp.S_nil){
TMP_1356=lisp.values1(L_G487__924);
}else{
{
TMP_1357=lisp.callFunctionWithCallStack(G_265,L_FORM__922);
TMP_1358=lisp.CL_symbolp(TMP_1357);
L_G488__925=lisp.values1(TMP_1358);
if(lisp.values1(L_G488__925) !== lisp.S_nil){
TMP_1359=lisp.values1(L_G488__925);
}else{
TMP_1359=lisp.values1(lisp.S_nil);
}
}
TMP_1356=lisp.values1(lisp.values1(TMP_1359));
}
}
TMP_1353=lisp.values1(lisp.values1(TMP_1356));
}else{
TMP_1353=lisp.values1(lisp.S_nil);
}
TMP_1349=lisp.values1(TMP_1353);
}else{
TMP_1349=lisp.values1(lisp.S_nil);
}
TMP_1346=lisp.values1(TMP_1349);
}else{
TMP_1346=lisp.values1(lisp.S_nil);
}
L_G486__926=lisp.values1(TMP_1346);
if(lisp.values1(L_G486__926) !== lisp.S_nil){
TMP_1360=lisp.values1(L_G486__926);
}else{
TMP_1360=lisp.values1(lisp.S_nil);
}
}
TMP_1344=TMP_1360;
}
}
return TMP_1344;
});
F_SIMPLE_REF_FORM_P__927=lisp.values1(TMP_1342);
if(lisp.values1(L_ARGS__920) !== lisp.S_nil){
TMP_1362=F_SIMPLE_REF_FORM_P__927(L_CONSTRUCTOR__919);
TMP_1363=lisp.callFunctionWithCallStack(G_184,TMP_1362);
TMP_1361=lisp.values1(TMP_1363);
}else{
TMP_1361=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_1361) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([105, 110, 118, 97, 108, 105, 100, 32, 110, 101, 119, 32, 102, 111, 114, 109, 58, 32, 126, 83])),L_FORM__918);
}else{
}
TMP_1365=G_586.func(L_CONSTRUCTOR__919,G_6,lisp.S_nil);
TMP_1366=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1367;
let L_ARG__928;
L_ARG__928=arguments[0];
TMP_1367=G_586.func(L_ARG__928,G_6,lisp.S_nil);
return TMP_1367;
});
TMP_1368=lisp.callFunctionWithCallStack(G_96,TMP_1366,L_ARGS__920);
TMP_1369=lisp.callFunctionWithCallStack(G_544,G_1364,L_RETURN_VALUE_P__916,lisp.S_nil,TMP_1365,TMP_1368);
}
return TMP_1369;
});
CL_COMPILER_PASS1_NEW=lisp.values1(F_PASS1_NEW_1340);
let F_PASS1_AGET_1370;
F_PASS1_AGET_1370=(function(){
if(arguments.length < 5) {
lisp.argumentsError(G_1371, arguments.length);
}
let TMP_1379;
let TMP_1378;
let TMP_1377;
let TMP_1375;
let TMP_1374;
let TMP_1373;
let L_OTHER_INDEXES__937;
let L_INDEX__936;
let L_ARRAY__935;
let L_FORM__934;
let L_MULTIPLE_VALUE_P__933;
let L_RETURN_VALUE_P__932;
L_RETURN_VALUE_P__932=arguments[0];
L_MULTIPLE_VALUE_P__933=arguments[1];
L_FORM__934=arguments[2];
L_ARRAY__935=arguments[3];
L_INDEX__936=arguments[4];
L_OTHER_INDEXES__937=lisp.jsArrayToList(arguments, 5);
TMP_1373=G_586.func(L_ARRAY__935,G_6,lisp.S_nil);
TMP_1374=G_586.func(L_INDEX__936,G_6,lisp.S_nil);
TMP_1375=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1376;
let L_X__939;
L_X__939=arguments[0];
TMP_1376=G_586.func(L_X__939,G_6,lisp.S_nil);
return TMP_1376;
});
TMP_1377=lisp.callFunctionWithCallStack(G_96,TMP_1375,L_OTHER_INDEXES__937);
TMP_1378=lisp.CL_cons(TMP_1374,TMP_1377);
TMP_1379=lisp.callFunctionWithCallStack(G_544,G_1372,L_RETURN_VALUE_P__932,lisp.S_nil,TMP_1373,TMP_1378);
return TMP_1379;
});
CL_COMPILER_PASS1_AGET=lisp.values1(F_PASS1_AGET_1370);
let F_PASS1_FORM_TIME_1380;
F_PASS1_FORM_TIME_1380=(function(){
if(arguments.length !== 4) {
lisp.argumentsError(G_1381, arguments.length);
}
let TMP_1384;
let TMP_1383;
let L_FORM__946;
let L_WHOLE__945;
let L_MULTIPLE_VALUE_P__944;
let L_RETURN_VALUE_P__943;
L_RETURN_VALUE_P__943=arguments[0];
L_MULTIPLE_VALUE_P__944=arguments[1];
L_WHOLE__945=arguments[2];
L_FORM__946=arguments[3];
TMP_1383=G_586.func(L_FORM__946,L_RETURN_VALUE_P__943,L_MULTIPLE_VALUE_P__944);
TMP_1384=lisp.callFunctionWithCallStack(G_544,G_1382,lisp.S_nil,lisp.S_nil,TMP_1383,L_FORM__946);
return TMP_1384;
});
CL_COMPILER_PASS1_FORM_TIME=lisp.values1(F_PASS1_FORM_TIME_1380);
let F_PASS1_TOPLEVEL_1385;
F_PASS1_TOPLEVEL_1385=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(G_1179, arguments.length);
}
let TMP_1386;
let save_STARCOMPILE_LEVELSTAR__956;
let save_STARLEXENVSTAR__955;
let L_MULTIPLE_VALUES_P__953;
let L_RETURN_VALUE_P__952;
let L_FORM__951;
L_FORM__951=arguments[0];
L_RETURN_VALUE_P__952=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_MULTIPLE_VALUES_P__953=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
{
save_STARLEXENVSTAR__955=G_11.value;
G_11.value=lisp.values1(lisp.S_nil);
save_STARCOMPILE_LEVELSTAR__956=G_13.value;
G_13.value=lisp.values1(-1);
try{
TMP_1386=G_586.func(L_FORM__951,L_RETURN_VALUE_P__952,L_MULTIPLE_VALUES_P__953);
}finally{
G_13.value=save_STARCOMPILE_LEVELSTAR__956;
G_11.value=save_STARLEXENVSTAR__955;
}
}
return TMP_1386;
});
CL_COMPILER_PASS1_TOPLEVEL=lisp.values1(F_PASS1_TOPLEVEL_1385);
let F_PASS1_MODULE_1387;
F_PASS1_MODULE_1387=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_1388, arguments.length);
}
let TMP_1390;
let L_EXPORT_MODULES__959;
let L_HIR_FORMS__958;
let L_FILE__957;
L_FILE__957=arguments[0];
L_HIR_FORMS__958=arguments[1];
L_EXPORT_MODULES__959=arguments[2];
TMP_1390=lisp.callFunctionWithCallStack(G_544,G_1389,lisp.S_nil,lisp.S_nil,L_FILE__957,L_HIR_FORMS__958,L_EXPORT_MODULES__959);
return TMP_1390;
});
CL_COMPILER_PASS1_MODULE=lisp.values1(F_PASS1_MODULE_1387);
let F_PASS1_DUMP_MACROS_1391;
F_PASS1_DUMP_MACROS_1391=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_1392, arguments.length);
}
let TMP_1403;
let TMP_1393;
let L_MACRO_DEFINITIONS__961;
L_MACRO_DEFINITIONS__961=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.symbolValue(G_15)));
TMP_1393=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1402;
let TMP_1401;
let TMP_1400;
let TMP_1399;
let TMP_1398;
let TMP_1397;
let TMP_1396;
let TMP_1395;
let TMP_1394;
let L_NAME__963;
L_NAME__963=arguments[0];
TMP_1394=G_108.func(L_NAME__963);
if(lisp.values1(TMP_1394) !== lisp.S_nil){
TMP_1396=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__963);
TMP_1397=G_108.func(L_NAME__963);
TMP_1398=lisp.callFunctionWithCallStack(G_100,G_421,TMP_1396,lisp.makeCons(G_407, lisp.makeCons(G_109, lisp.S_nil)),TMP_1397);
TMP_1395=lisp.values1(TMP_1398);
}else{
TMP_1399=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__963);
TMP_1400=G_84.func(L_NAME__963);
TMP_1401=lisp.callFunctionWithCallStack(G_100,G_421,TMP_1399,lisp.makeCons(G_407, lisp.makeCons(G_85, lisp.S_nil)),TMP_1400);
TMP_1395=lisp.values1(TMP_1401);
}
TMP_1402=G_1179.func(TMP_1395);
return TMP_1402;
});
TMP_1403=lisp.callFunctionWithCallStack(G_96,TMP_1393,L_MACRO_DEFINITIONS__961);
return TMP_1403;
});
CL_COMPILER_PASS1_DUMP_MACROS=lisp.values1(F_PASS1_DUMP_MACROS_1391);
// initialize symbols
G_2 = lisp.intern('*PASS1-FORM-TABLE*', 'COMPILER');
G_4 = lisp.intern('MAKE-HASH-TABLE', 'COMMON-LISP');
G_5 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_6 = lisp.intern('T', 'COMMON-LISP');
G_7 = lisp.intern('*REQUIRE-MODULES*', 'COMPILER');
G_9 = lisp.intern('*EXPORT-MODULES*', 'COMPILER');
G_11 = lisp.intern('*LEXENV*', 'COMPILER');
G_13 = lisp.intern('*COMPILE-LEVEL*', 'COMPILER');
G_15 = lisp.intern('*MACRO-DEFINITIONS*', 'COMPILER');
G_18 = lisp.intern('TOPLEVEL-P', 'COMPILER');
G_20 = lisp.intern('>=', 'COMMON-LISP');
G_22 = lisp.intern('MAKE-VARIABLE-BINDING', 'COMPILER');
G_23 = lisp.intern('SPECIAL-P', 'KEYWORD');
G_26 = lisp.intern('SPECIAL-P', 'COMPILER');
G_27 = lisp.intern('INIT-VALUE', 'KEYWORD');
G_30 = lisp.intern('KIND', 'KEYWORD');
G_32 = lisp.intern('SPECIAL', 'KEYWORD');
G_33 = lisp.intern('VARIABLE', 'KEYWORD');
G_34 = lisp.intern('NAME', 'KEYWORD');
G_35 = lisp.intern('ID', 'KEYWORD');
G_37 = lisp.intern('GENVAR', 'COMPILER');
G_39 = lisp.intern('MAKE-BINDING', 'COMPILER');
G_41 = lisp.intern('MAKE-FUNCTION-BINDING', 'COMPILER');
G_44 = lisp.intern('FUNCTION', 'KEYWORD');
G_48 = lisp.intern('MAKE-MACRO-BINDING', 'COMPILER');
G_49 = lisp.intern('MACRO', 'KEYWORD');
G_52 = lisp.intern('MAKE-SYMBOL-MACRO-BINDING', 'COMPILER');
G_53 = lisp.intern('SYMBOL-MACRO', 'KEYWORD');
G_56 = lisp.intern('MAKE-BLOCK-BINDING', 'COMPILER');
G_57 = lisp.intern('BLOCK', 'KEYWORD');
G_59 = lisp.intern('STRING', 'COMMON-LISP');
G_60 = lisp.intern('SYMBOL', 'KEYWORD');
G_64 = lisp.intern('MAKE-TAG-BINDING', 'COMPILER');
G_65 = lisp.intern('TAG', 'KEYWORD');
G_68 = lisp.intern('COUNT-IF-USED', 'COMPILER');
G_72 = lisp.intern('BINDING-SET-COUNT', 'COMPILER');
G_74 = lisp.intern('+', 'COMMON-LISP');
G_76 = lisp.intern('(SETF BINDING-SET-COUNT)', 'COMPILER');
G_78 = lisp.intern('BINDING-USED-COUNT', 'COMPILER');
G_81 = lisp.intern('(SETF BINDING-USED-COUNT)', 'COMPILER');
G_82 = lisp.intern('DEF-PASS1-FORM', 'COMPILER');
G_84 = lisp.intern('GET-MACRO', 'COMPILER');
G_85 = lisp.intern('MACRO', 'COMPILER');
G_87 = lisp.intern('GET', 'COMMON-LISP');
G_88 = lisp.intern('(SETF GET-MACRO)', 'COMPILER');
G_90 = lisp.intern('SETF-EXPANDER', 'COMMON-LISP');
G_94 = lisp.intern('GENSYM', 'COMMON-LISP');
G_96 = lisp.intern('%MAPCAR', 'SYSTEM');
G_97 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_100 = lisp.intern('LIST', 'COMMON-LISP');
G_102 = lisp.intern('LIST*', 'COMMON-LISP');
G_105 = lisp.intern('FDEFINITION-SETF', 'SYSTEM');
G_108 = lisp.intern('GET-SYMBOL-MACRO', 'COMPILER');
G_109 = lisp.intern('SYMBOL-MACRO', 'COMPILER');
G_111 = lisp.intern('(SETF GET-SYMBOL-MACRO)', 'COMPILER');
G_125 = lisp.intern('(SETF SPECIAL-P)', 'COMPILER');
G_138 = lisp.intern('CONSTANT-P', 'COMPILER');
G_139 = lisp.intern('CONSTANT', 'COMPILER');
G_141 = lisp.intern('(SETF CONSTANT-P)', 'COMPILER');
G_154 = lisp.intern('LOOKUP', 'COMPILER');
G_156 = lisp.intern('ENDP', 'COMMON-LISP');
G_158 = lisp.intern('CAR', 'COMMON-LISP');
G_160 = lisp.intern('CDR', 'COMMON-LISP');
G_164 = lisp.intern('BINDING-KIND', 'COMPILER');
G_166 = lisp.intern('MEMBER', 'COMMON-LISP');
G_171 = lisp.intern('BINDING-NAME', 'COMPILER');
G_174 = lisp.intern('EXTEND-LEXENV', 'COMPILER');
G_176 = lisp.intern('APPEND', 'COMMON-LISP');
G_178 = lisp.intern('VARIABLE-SYMBOL-P', 'COMPILER');
G_182 = lisp.intern('NULL', 'COMMON-LISP');
G_184 = lisp.intern('NOT', 'COMMON-LISP');
G_187 = lisp.intern('KEYWORDP', 'COMMON-LISP');
G_191 = lisp.intern('JS-SYMBOL-P', 'COMPILER');
G_194 = lisp.intern('PROPER-LIST-P', 'COMPILER');
G_196 = lisp.intern('LISTP', 'COMMON-LISP');
G_199 = lisp.intern('LAST', 'COMMON-LISP');
G_203 = lisp.intern('DUPLICATE-VAR-P', 'COMPILER');
G_206 = lisp.intern('FIRST', 'COMMON-LISP');
G_208 = lisp.intern('REST', 'COMMON-LISP');
G_213 = lisp.intern('PARSE-LAMBDA-LIST', 'COMPILER');
G_216 = lisp.intern('COMPILE-ERROR', 'COMPILER');
G_221 = lisp.intern('&REST', 'COMMON-LISP');
G_222 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_223 = lisp.intern('&KEY', 'COMMON-LISP');
G_231 = lisp.intern('OPTIONAL', 'KEYWORD');
G_233 = lisp.intern('EQL', 'COMMON-LISP');
G_237 = lisp.intern('KEY', 'KEYWORD');
G_241 = lisp.intern('MAKE-KEYWORD', 'COMPILER');
G_245 = lisp.intern('ERROR', 'COMMON-LISP');
G_250 = lisp.intern('LENGTH', 'COMMON-LISP');
G_254 = lisp.intern('=', 'COMMON-LISP');
G_256 = lisp.intern('THIRD', 'COMMON-LISP');
G_265 = lisp.intern('SECOND', 'COMMON-LISP');
G_275 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_306 = lisp.intern('ATOM', 'COMMON-LISP');
G_308 = lisp.intern('&ALLOW-OTHER-KEYS', 'COMMON-LISP');
G_333 = lisp.intern('NREVERSE', 'COMMON-LISP');
G_337 = lisp.intern('VARS', 'KEYWORD');
G_338 = lisp.intern('OPTIONALS', 'KEYWORD');
G_339 = lisp.intern('REST-VAR', 'KEYWORD');
G_340 = lisp.intern('KEYS', 'KEYWORD');
G_341 = lisp.intern('MIN', 'KEYWORD');
G_343 = lisp.intern('MAX', 'KEYWORD');
G_348 = lisp.intern('*', 'COMMON-LISP');
G_350 = lisp.intern('ALLOW-OTHER-KEYS', 'KEYWORD');
G_352 = lisp.intern('MAKE-PARSED-LAMBDA-LIST', 'COMPILER');
G_354 = lisp.intern('COLLECT-VARIABLES', 'COMPILER');
G_357 = lisp.intern('GET-TRANSFORM', 'COMPILER');
G_358 = lisp.intern('TRANSFORM', 'COMPILER');
G_361 = lisp.intern('TRANSFORM-SYMBOL-P', 'COMPILER');
G_363 = lisp.intern('DEF-TRANSFORM', 'COMPILER');
G_367 = lisp.intern('SETF', 'COMMON-LISP');
G_386 = lisp.intern('FORMAT', 'COMMON-LISP');
G_389 = lisp.intern('SYMBOL-PACKAGE', 'COMMON-LISP');
G_391 = lisp.intern('INTERN', 'COMMON-LISP');
G_392 = lisp.intern('PROGN', 'COMMON-LISP');
G_393 = lisp.intern('DEFUN', 'COMMON-LISP');
G_395 = lisp.intern('DEFINE-SETF-EXPANDER', 'COMMON-LISP');
G_398 = lisp.intern('LET', 'COMMON-LISP');
G_399 = lisp.intern('MAPCAR', 'COMMON-LISP');
G_400 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_401 = lisp.intern('X', 'COMPILER');
G_402 = lisp.intern('DECLARE', 'COMMON-LISP');
G_403 = lisp.intern('IGNORE', 'COMMON-LISP');
G_407 = lisp.intern('QUOTE', 'COMMON-LISP');
G_414 = lisp.intern('VALUES', 'COMMON-LISP');
G_421 = lisp.intern('PUT', 'SYSTEM');
G_424 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_433 = lisp.intern('%DEFUN', 'SYSTEM');
G_435 = lisp.intern('FSET', 'SYSTEM');
G_437 = lisp.intern('BLOCK', 'COMMON-LISP');
G_439 = lisp.intern('PARSE-BODY', 'COMPILER');
G_448 = lisp.intern('DESTRUCTURING-BIND', 'COMMON-LISP');
G_454 = lisp.intern('NCONC', 'COMMON-LISP');
G_459 = lisp.intern('DEFMACRO', 'COMMON-LISP');
G_470 = lisp.intern('DEFMACRO*', 'SYSTEM');
G_475 = lisp.intern('DEFINE-SYMBOL-MACRO', 'COMMON-LISP');
G_480 = lisp.intern('NAMED-LAMBDA', 'SYSTEM');
G_484 = lisp.intern('DECLAIM', 'COMMON-LISP');
G_488 = lisp.intern('IF', 'COMMON-LISP');
G_489 = lisp.intern('BOUNDP', 'COMMON-LISP');
G_492 = lisp.intern('%SET', 'SYSTEM');
G_497 = lisp.intern('DOCUMENTATION', 'COMMON-LISP');
G_499 = lisp.intern('VARIABLE', 'COMMON-LISP');
G_506 = lisp.intern('DEFVAR', 'COMMON-LISP');
G_520 = lisp.intern('DEFPARAMETER', 'COMMON-LISP');
G_523 = lisp.intern('EVAL', 'COMMON-LISP');
G_535 = lisp.intern('DEFCONSTANT', 'COMMON-LISP');
G_538 = lisp.intern('EXPAND-BACKQUOTE', 'COMPILER');
G_539 = lisp.intern('BACKQUOTE', 'SYSTEM');
G_541 = lisp.intern('PASS1-CONST', 'COMPILER');
G_542 = lisp.intern('CONST', 'COMPILER');
G_544 = lisp.intern('MAKE-HIR', 'COMPILER');
G_546 = lisp.intern('JS-SYMBOL-TO-REF-FORM', 'COMPILER');
G_548 = lisp.intern('PARSE-JS-NAME', 'COMPILER');
G_549 = lisp.intern('REF', 'FFI');
G_552 = lisp.intern('PASS1-REFVAR', 'COMPILER');
G_560 = lisp.intern('BINDING-INIT-VALUE', 'COMPILER');
G_567 = lisp.intern('LREF', 'COMPILER');
G_569 = lisp.intern('GREF', 'COMPILER');
G_572 = lisp.intern('PASS1-FORMS', 'COMPILER');
G_586 = lisp.intern('PASS1', 'COMPILER');
G_591 = lisp.intern('PRE-PROCESS-DECLARATION-SPECIFIER', 'COMPILER');
G_610 = lisp.intern('PASS1-DECLARES', 'COMPILER');
G_621 = lisp.intern('(SETF BINDING-KIND)', 'COMPILER');
G_624 = lisp.intern('OPTIMIZE', 'COMMON-LISP');
G_626 = lisp.intern('INLINE', 'COMMON-LISP');
G_628 = lisp.intern('DYNAMIC-EXTENT', 'COMMON-LISP');
G_635 = lisp.intern('(SETF BINDING-VAR-TYPE)', 'COMPILER');
G_637 = lisp.intern('TYPE', 'COMMON-LISP');
G_643 = lisp.intern('CDDR', 'COMMON-LISP');
G_649 = lisp.intern('PASS1-LAMBDA-LIST', 'COMPILER');
G_651 = lisp.intern('PARSED-LAMBDA-LIST-VARS', 'COMPILER');
G_653 = lisp.intern('PARSED-LAMBDA-LIST-REST-VAR', 'COMPILER');
G_658 = lisp.intern('(SETF PARSED-LAMBDA-LIST-VARS)', 'COMPILER');
G_662 = lisp.intern('SET-NTH', 'COMMON-LISP');
G_674 = lisp.intern('PARSED-LAMBDA-LIST-OPTIONALS', 'COMPILER');
G_675 = lisp.intern('MAPC', 'COMMON-LISP');
G_677 = lisp.intern('PARSED-LAMBDA-LIST-KEYS', 'COMPILER');
G_680 = lisp.intern('(SETF PARSED-LAMBDA-LIST-REST-VAR)', 'COMPILER');
G_682 = lisp.intern('PASS1-LAMBDA', 'COMPILER');
G_685 = lisp.intern('FORM', 'COMPILER');
G_713 = lisp.intern('%MACRO-FUNCTION', 'COMPILER');
G_717 = lisp.intern('BINDING-ID', 'COMPILER');
G_718 = lisp.intern('*IN-HOST-RUNTIME*', 'COMPILER');
G_730 = lisp.intern('%MACROEXPAND-1', 'COMPILER');
G_747 = lisp.intern('GET-FORM-POSITION', 'COMPILER');
G_753 = lisp.intern('APPLY', 'COMMON-LISP');
G_754 = lisp.intern('ADD-SOURCE-INFO*', 'COMPILER');
G_759 = lisp.intern('PASS1-CALL', 'COMPILER');
G_766 = lisp.intern('LCALL', 'COMPILER');
G_776 = lisp.intern('CALL', 'COMPILER');
G_786 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_792 = lisp.intern('JS-CALL', 'COMPILER');
G_796 = lisp.intern('PASS1-REF-NAMES', 'COMPILER');
G_807 = lisp.intern('CADR', 'COMMON-LISP');
G_833 = lisp.intern('GETHASH', 'COMMON-LISP');
G_835 = lisp.intern('SYMBOL-MACROLET', 'COMMON-LISP');
G_836 = lisp.intern('LOCALLY', 'COMMON-LISP');
G_837 = lisp.intern('EVAL-WHEN', 'COMMON-LISP');
G_841 = lisp.intern('1+', 'COMMON-LISP');
G_850 = lisp.intern('PASS1-QUOTE', 'COMPILER');
G_852 = lisp.intern('(SETF GETHASH)', 'COMMON-LISP');
G_854 = lisp.intern('PASS1-SETQ', 'COMPILER');
G_857 = lisp.intern('EVENP', 'COMMON-LISP');
G_873 = lisp.intern('LSET', 'COMPILER');
G_874 = lisp.intern('GSET', 'COMPILER');
G_888 = lisp.intern('LENGTH=1', 'COMPILER');
G_893 = lisp.intern('SETQ', 'COMMON-LISP');
G_895 = lisp.intern('PASS1-IF', 'COMPILER');
G_901 = lisp.intern('PASS1-PROGN', 'COMPILER');
G_905 = lisp.intern('PASS1-FUNCTION', 'COMPILER');
G_911 = lisp.intern('SYMBOL-FUNCTION', 'COMMON-LISP');
G_923 = lisp.intern('CHECK-LET-FORM', 'COMPILER');
G_933 = lisp.intern('<=', 'COMMON-LISP');
G_942 = lisp.intern('PASS1-LET-BODY', 'COMPILER');
G_952 = lisp.intern('PASS1-LET', 'COMPILER');
G_962 = lisp.intern('PASS1-LET*', 'COMPILER');
G_972 = lisp.intern('LET*', 'COMMON-LISP');
G_974 = lisp.intern('CHECK-FLET-DEFINITIONS', 'COMPILER');
G_984 = lisp.intern('PARSE-FLET-DEFINITIONS', 'COMPILER');
G_994 = lisp.intern('PASS1-FLET', 'COMPILER');
G_1004 = lisp.intern('FLET', 'COMMON-LISP');
G_1006 = lisp.intern('PASS1-LABELS', 'COMPILER');
G_1016 = lisp.intern('(SETF BINDING-INIT-VALUE)', 'COMPILER');
G_1022 = lisp.intern('LABELS', 'COMMON-LISP');
G_1024 = lisp.intern('PASS1-MACROLET', 'COMPILER');
G_1035 = lisp.intern('MACROLET', 'COMMON-LISP');
G_1037 = lisp.intern('PASS1-SYMBOL-MACROLET', 'COMPILER');
G_1047 = lisp.intern('PASS1-UNWIND-PROTECT', 'COMPILER');
G_1048 = lisp.intern('UNWIND-PROTECT', 'COMMON-LISP');
G_1054 = lisp.intern('PASS1-BLOCK', 'COMPILER');
G_1061 = lisp.intern('PASS1-RETURN-FROM', 'COMPILER');
G_1065 = lisp.intern('RETURN-FROM', 'COMMON-LISP');
G_1069 = lisp.intern('*TAGBODY-ID*', 'COMPILER');
G_1072 = lisp.intern('MAKE-TAGBODY-ID', 'COMPILER');
G_1074 = lisp.intern('HOST', 'KEYWORD');
G_1075 = lisp.intern('TARGET', 'KEYWORD');
G_1078 = lisp.intern('TAG-LITERAL-P', 'COMPILER');
G_1084 = lisp.intern('PASS1-TAGBODY', 'COMPILER');
G_1088 = lisp.intern('REMOVE-IF-NOT', 'COMMON-LISP');
G_1090 = lisp.intern('INDEX', 'KEYWORD');
G_1094 = lisp.intern('MAKE-TAGBODY-VALUE', 'COMPILER');
G_1102 = lisp.makeSymbol("NONE");G_1113 = lisp.intern('BINDING', 'COMPILER');
G_1128 = lisp.intern('TAGBODY', 'COMMON-LISP');
G_1133 = lisp.intern('PASS1-GO', 'COMPILER');
G_1136 = lisp.intern('GO', 'COMMON-LISP');
G_1139 = lisp.intern('PASS1-LOCALLY', 'COMPILER');
G_1148 = lisp.intern('PASS1-DECLAIM', 'COMPILER');
G_1160 = lisp.intern('PASS1-EVAL-WHEN', 'COMPILER');
G_1163 = lisp.intern('COMPILE-TOPLEVEL', 'KEYWORD');
G_1166 = lisp.intern('COMPILE', 'COMMON-LISP');
G_1170 = lisp.intern('LOAD-TOPLEVEL', 'KEYWORD');
G_1173 = lisp.intern('LOAD', 'COMMON-LISP');
G_1179 = lisp.intern('PASS1-TOPLEVEL', 'COMPILER');
G_1181 = lisp.intern('EXECUTE', 'KEYWORD');
G_1191 = lisp.intern('PASS1-%DEFUN', 'COMPILER');
G_1201 = lisp.intern('*KNOWN-TOPLEVEL-FUNCTIONS*', 'COMPILER');
G_1203 = lisp.intern('ADJOIN', 'COMMON-LISP');
G_1209 = lisp.intern('PASS1-MULTIPLE-VALUE-CALL', 'COMPILER');
G_1210 = lisp.intern('MULTIPLE-VALUE-CALL', 'SYSTEM');
G_1218 = lisp.intern('PASS1-%DEFPACKAGE', 'COMPILER');
G_1219 = lisp.intern('EXPORT', 'KEYWORD');
G_1221 = lisp.intern('USE', 'KEYWORD');
G_1223 = lisp.intern('NICKNAMES', 'KEYWORD');
G_1231 = lisp.intern('%DEFPACKAGE', 'SYSTEM');
G_1235 = lisp.intern('PASS1-IN-PACKAGE', 'COMPILER');
G_1236 = lisp.intern('*PACKAGE*', 'COMMON-LISP');
G_1238 = lisp.intern('FIND-PACKAGE', 'COMMON-LISP');
G_1239 = lisp.intern('*PACKAGE*', 'VALTAN-CORE');
G_1242 = lisp.intern('%IN-PACKAGE', 'SYSTEM');
G_1244 = lisp.intern('IN-PACKAGE', 'COMMON-LISP');
G_1246 = lisp.intern('REF-FORM-P', 'COMPILER');
G_1252 = lisp.intern('IDENT-PLACE-P', 'COMPILER');
G_1254 = lisp.intern('STRINGP', 'COMMON-LISP');
G_1277 = lisp.intern('PASS1-REF', 'COMPILER');
G_1281 = lisp.intern('PASS1-SET', 'COMPILER');
G_1282 = lisp.intern('SET', 'FFI');
G_1287 = lisp.intern('CONVERT-VAR', 'COMPILER');
G_1296 = lisp.intern('PASS1-VAR', 'COMPILER');
G_1301 = lisp.intern('VAR', 'FFI');
G_1306 = lisp.intern('PASS1-REQUIRE', 'COMPILER');
G_1321 = lisp.intern('REQUIRE', 'FFI');
G_1323 = lisp.intern('PASS1-EXPORT', 'COMPILER');
G_1324 = lisp.intern('AS', 'KEYWORD');
G_1334 = lisp.intern('EXPORT', 'FFI');
G_1336 = lisp.intern('PASS1-TYPEOF', 'COMPILER');
G_1337 = lisp.intern('TYPEOF', 'FFI');
G_1341 = lisp.intern('PASS1-NEW', 'COMPILER');
G_1364 = lisp.intern('NEW', 'FFI');
G_1371 = lisp.intern('PASS1-AGET', 'COMPILER');
G_1372 = lisp.intern('AGET', 'FFI');
G_1381 = lisp.intern('PASS1-FORM-TIME', 'COMPILER');
G_1382 = lisp.intern('FORM-TIME', 'SYSTEM');
G_1388 = lisp.intern('PASS1-MODULE', 'COMPILER');
G_1389 = lisp.intern('MODULE', 'COMPILER');
G_1392 = lisp.intern('PASS1-DUMP-MACROS', 'COMPILER');
G_1406 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_1409 = lisp.intern('NAME', 'COMPILER');
G_1410 = lisp.intern('LAMBDA-LIST', 'COMPILER');
G_1411 = lisp.intern('RETURN-VALUE-P', 'COMPILER');
G_1412 = lisp.intern('MULTIPLE-VALUES-P', 'COMPILER');
G_1413 = lisp.intern('&BODY', 'COMMON-LISP');
G_1414 = lisp.intern('BODY', 'COMPILER');
G_1434 = lisp.intern('IGNORABLE', 'COMMON-LISP');
G_1444 = lisp.intern('&WHOLE', 'COMMON-LISP');
G_1451 = lisp.makeSymbol("WHOLE");G_1467 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');TMP_3=lisp.callFunctionWithCallStack(G_4);
lisp.CL_set(G_2,TMP_3);
lisp.CL_put(G_2,G_5,G_6);
TMP_8=lisp.CL_boundp(G_7);
if(lisp.values1(TMP_8) !== lisp.S_nil){
}else{
lisp.CL_set(G_7,lisp.S_nil);
}
lisp.CL_put(G_7,G_5,G_6);
TMP_10=lisp.CL_boundp(G_9);
if(lisp.values1(TMP_10) !== lisp.S_nil){
}else{
lisp.CL_set(G_9,lisp.S_nil);
}
lisp.CL_put(G_9,G_5,G_6);
TMP_12=lisp.CL_boundp(G_11);
if(lisp.values1(TMP_12) !== lisp.S_nil){
}else{
lisp.CL_set(G_11,lisp.S_nil);
}
lisp.CL_put(G_11,G_5,G_6);
TMP_14=lisp.CL_boundp(G_13);
if(lisp.values1(TMP_14) !== lisp.S_nil){
}else{
lisp.CL_set(G_13,-1);
}
lisp.CL_put(G_13,G_5,G_6);
TMP_16=lisp.CL_boundp(G_15);
if(lisp.values1(TMP_16) !== lisp.S_nil){
}else{
lisp.CL_set(G_15,lisp.S_nil);
}
lisp.CL_put(G_15,G_5,G_6);
CL_COMPILER_TOPLEVEL_P.lisp_name = 'TOPLEVEL-P'
lisp.setSymbolFunction(G_18, CL_COMPILER_TOPLEVEL_P);
CL_COMPILER_MAKE_VARIABLE_BINDING.lisp_name = 'MAKE-VARIABLE-BINDING'
lisp.setSymbolFunction(G_22, CL_COMPILER_MAKE_VARIABLE_BINDING);
CL_COMPILER_MAKE_FUNCTION_BINDING.lisp_name = 'MAKE-FUNCTION-BINDING'
lisp.setSymbolFunction(G_41, CL_COMPILER_MAKE_FUNCTION_BINDING);
CL_COMPILER_MAKE_MACRO_BINDING.lisp_name = 'MAKE-MACRO-BINDING'
lisp.setSymbolFunction(G_48, CL_COMPILER_MAKE_MACRO_BINDING);
CL_COMPILER_MAKE_SYMBOL_MACRO_BINDING.lisp_name = 'MAKE-SYMBOL-MACRO-BINDING'
lisp.setSymbolFunction(G_52, CL_COMPILER_MAKE_SYMBOL_MACRO_BINDING);
CL_COMPILER_MAKE_BLOCK_BINDING.lisp_name = 'MAKE-BLOCK-BINDING'
lisp.setSymbolFunction(G_56, CL_COMPILER_MAKE_BLOCK_BINDING);
CL_COMPILER_MAKE_TAG_BINDING.lisp_name = 'MAKE-TAG-BINDING'
lisp.setSymbolFunction(G_64, CL_COMPILER_MAKE_TAG_BINDING);
CL_COMPILER_COUNT_IF_USED.lisp_name = 'COUNT-IF-USED'
lisp.setSymbolFunction(G_68, CL_COMPILER_COUNT_IF_USED);
CL_COMPILER_GET_MACRO.lisp_name = 'GET-MACRO'
lisp.setSymbolFunction(G_84, CL_COMPILER_GET_MACRO);
TMP_89=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G13__36;
let L_G12__35;
let L_G10__33;
let L_SYMBOL__31;
let L_FORM__30;
L_FORM__30=arguments[0];
L_SYMBOL__31=arguments[1];
{
L_G10__33=lisp.values1(L_SYMBOL__31);
L_G12__35=lisp.values1(L_FORM__30);
{
L_G13__36=lisp.values1(L_G12__35);
lisp.CL_put(L_G10__33,G_85,L_G13__36);
}
}
return lisp.values1(L_G13__36);
});
lisp.CL_setSymbolFunction(G_88,TMP_89);
TMP_91=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_104;
let TMP_103;
let TMP_101;
let TMP_99;
let L_STORE7__43;
let TMP_98;
let L_GENSYMS5__42;
let TMP_95;
let TMP_92;
let L_ARGS6__40;
let L_G15__38;
let L_G14__37;
L_G14__37=arguments[0];
{
L_G15__38=lisp.values1(L_G14__37);
{
L_ARGS6__40=lisp.values1(L_G15__38);
{
TMP_92=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_93;
let L_X__41;
L_X__41=arguments[0];
TMP_93=lisp.callFunctionWithCallStack(G_94);
return TMP_93;
});
TMP_95=lisp.callFunctionWithCallStack(G_96,TMP_92,L_ARGS6__40);
L_GENSYMS5__42=lisp.values1(TMP_95);
TMP_98=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE7__43=lisp.values1(TMP_98);
TMP_99=lisp.callFunctionWithCallStack(G_100,L_STORE7__43);
TMP_101=lisp.callFunctionWithCallStack(G_102,G_88,L_STORE7__43,L_GENSYMS5__42);
TMP_103=lisp.callFunctionWithCallStack(G_102,G_84,L_GENSYMS5__42);
TMP_104=lisp.CL_values(L_GENSYMS5__42,L_ARGS6__40,TMP_99,TMP_101,TMP_103);
}
}
}
return TMP_104;
});
lisp.CL_put(G_84,G_90,TMP_91);
TMP_106=lisp.CL_symbolFunction(G_88);
lisp.CL_put(G_84,G_105,TMP_106);
CL_COMPILER_GET_SYMBOL_MACRO.lisp_name = 'GET-SYMBOL-MACRO'
lisp.setSymbolFunction(G_108, CL_COMPILER_GET_SYMBOL_MACRO);
TMP_112=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G25__54;
let L_G24__53;
let L_G22__51;
let L_SYMBOL__49;
let L_VALUE__48;
L_VALUE__48=arguments[0];
L_SYMBOL__49=arguments[1];
{
L_G22__51=lisp.values1(L_SYMBOL__49);
L_G24__53=lisp.values1(L_VALUE__48);
{
L_G25__54=lisp.values1(L_G24__53);
lisp.CL_put(L_G22__51,G_109,L_G25__54);
}
}
return lisp.values1(L_G25__54);
});
lisp.CL_setSymbolFunction(G_111,TMP_112);
TMP_113=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_121;
let TMP_120;
let TMP_119;
let TMP_118;
let L_STORE19__61;
let TMP_117;
let L_GENSYMS17__60;
let TMP_116;
let TMP_114;
let L_ARGS18__58;
let L_G27__56;
let L_G26__55;
L_G26__55=arguments[0];
{
L_G27__56=lisp.values1(L_G26__55);
{
L_ARGS18__58=lisp.values1(L_G27__56);
{
TMP_114=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_115;
let L_X__59;
L_X__59=arguments[0];
TMP_115=lisp.callFunctionWithCallStack(G_94);
return TMP_115;
});
TMP_116=lisp.callFunctionWithCallStack(G_96,TMP_114,L_ARGS18__58);
L_GENSYMS17__60=lisp.values1(TMP_116);
TMP_117=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE19__61=lisp.values1(TMP_117);
TMP_118=lisp.callFunctionWithCallStack(G_100,L_STORE19__61);
TMP_119=lisp.callFunctionWithCallStack(G_102,G_111,L_STORE19__61,L_GENSYMS17__60);
TMP_120=lisp.callFunctionWithCallStack(G_102,G_108,L_GENSYMS17__60);
TMP_121=lisp.CL_values(L_GENSYMS17__60,L_ARGS18__58,TMP_118,TMP_119,TMP_120);
}
}
}
return TMP_121;
});
lisp.CL_put(G_108,G_90,TMP_113);
TMP_122=lisp.CL_symbolFunction(G_111);
lisp.CL_put(G_108,G_105,TMP_122);
CL_COMPILER_SPECIAL_P.lisp_name = 'SPECIAL-P'
lisp.setSymbolFunction(G_26, CL_COMPILER_SPECIAL_P);
TMP_126=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G37__72;
let L_G36__71;
let L_G34__69;
let L_SYMBOL__67;
let L_VALUE__66;
L_VALUE__66=arguments[0];
L_SYMBOL__67=arguments[1];
{
L_G34__69=lisp.values1(L_SYMBOL__67);
L_G36__71=lisp.values1(L_VALUE__66);
{
L_G37__72=lisp.values1(L_G36__71);
lisp.CL_put(L_G34__69,G_5,L_G37__72);
}
}
return lisp.values1(L_G37__72);
});
lisp.CL_setSymbolFunction(G_125,TMP_126);
TMP_127=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_135;
let TMP_134;
let TMP_133;
let TMP_132;
let L_STORE31__79;
let TMP_131;
let L_GENSYMS29__78;
let TMP_130;
let TMP_128;
let L_ARGS30__76;
let L_G39__74;
let L_G38__73;
L_G38__73=arguments[0];
{
L_G39__74=lisp.values1(L_G38__73);
{
L_ARGS30__76=lisp.values1(L_G39__74);
{
TMP_128=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_129;
let L_X__77;
L_X__77=arguments[0];
TMP_129=lisp.callFunctionWithCallStack(G_94);
return TMP_129;
});
TMP_130=lisp.callFunctionWithCallStack(G_96,TMP_128,L_ARGS30__76);
L_GENSYMS29__78=lisp.values1(TMP_130);
TMP_131=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE31__79=lisp.values1(TMP_131);
TMP_132=lisp.callFunctionWithCallStack(G_100,L_STORE31__79);
TMP_133=lisp.callFunctionWithCallStack(G_102,G_125,L_STORE31__79,L_GENSYMS29__78);
TMP_134=lisp.callFunctionWithCallStack(G_102,G_26,L_GENSYMS29__78);
TMP_135=lisp.CL_values(L_GENSYMS29__78,L_ARGS30__76,TMP_132,TMP_133,TMP_134);
}
}
}
return TMP_135;
});
lisp.CL_put(G_26,G_90,TMP_127);
TMP_136=lisp.CL_symbolFunction(G_125);
lisp.CL_put(G_26,G_105,TMP_136);
CL_COMPILER_CONSTANT_P.lisp_name = 'CONSTANT-P'
lisp.setSymbolFunction(G_138, CL_COMPILER_CONSTANT_P);
TMP_142=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G49__90;
let L_G48__89;
let L_G46__87;
let L_SYMBOL__85;
let L_VALUE__84;
L_VALUE__84=arguments[0];
L_SYMBOL__85=arguments[1];
{
L_G46__87=lisp.values1(L_SYMBOL__85);
L_G48__89=lisp.values1(L_VALUE__84);
{
L_G49__90=lisp.values1(L_G48__89);
lisp.CL_put(L_G46__87,G_139,L_G49__90);
}
}
return lisp.values1(L_G49__90);
});
lisp.CL_setSymbolFunction(G_141,TMP_142);
TMP_143=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_151;
let TMP_150;
let TMP_149;
let TMP_148;
let L_STORE43__97;
let TMP_147;
let L_GENSYMS41__96;
let TMP_146;
let TMP_144;
let L_ARGS42__94;
let L_G51__92;
let L_G50__91;
L_G50__91=arguments[0];
{
L_G51__92=lisp.values1(L_G50__91);
{
L_ARGS42__94=lisp.values1(L_G51__92);
{
TMP_144=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_145;
let L_X__95;
L_X__95=arguments[0];
TMP_145=lisp.callFunctionWithCallStack(G_94);
return TMP_145;
});
TMP_146=lisp.callFunctionWithCallStack(G_96,TMP_144,L_ARGS42__94);
L_GENSYMS41__96=lisp.values1(TMP_146);
TMP_147=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])));
L_STORE43__97=lisp.values1(TMP_147);
TMP_148=lisp.callFunctionWithCallStack(G_100,L_STORE43__97);
TMP_149=lisp.callFunctionWithCallStack(G_102,G_141,L_STORE43__97,L_GENSYMS41__96);
TMP_150=lisp.callFunctionWithCallStack(G_102,G_138,L_GENSYMS41__96);
TMP_151=lisp.CL_values(L_GENSYMS41__96,L_ARGS42__94,TMP_148,TMP_149,TMP_150);
}
}
}
return TMP_151;
});
lisp.CL_put(G_138,G_90,TMP_143);
TMP_152=lisp.CL_symbolFunction(G_141);
lisp.CL_put(G_138,G_105,TMP_152);
CL_COMPILER_LOOKUP.lisp_name = 'LOOKUP'
lisp.setSymbolFunction(G_154, CL_COMPILER_LOOKUP);
CL_COMPILER_EXTEND_LEXENV.lisp_name = 'EXTEND-LEXENV'
lisp.setSymbolFunction(G_174, CL_COMPILER_EXTEND_LEXENV);
CL_COMPILER_VARIABLE_SYMBOL_P.lisp_name = 'VARIABLE-SYMBOL-P'
lisp.setSymbolFunction(G_178, CL_COMPILER_VARIABLE_SYMBOL_P);
CL_COMPILER_PROPER_LIST_P.lisp_name = 'PROPER-LIST-P'
lisp.setSymbolFunction(G_194, CL_COMPILER_PROPER_LIST_P);
CL_COMPILER_DUPLICATE_VAR_P.lisp_name = 'DUPLICATE-VAR-P'
lisp.setSymbolFunction(G_203, CL_COMPILER_DUPLICATE_VAR_P);
CL_COMPILER_PARSE_LAMBDA_LIST.lisp_name = 'PARSE-LAMBDA-LIST'
lisp.setSymbolFunction(G_213, CL_COMPILER_PARSE_LAMBDA_LIST);
CL_COMPILER_GET_TRANSFORM.lisp_name = 'GET-TRANSFORM'
lisp.setSymbolFunction(G_357, CL_COMPILER_GET_TRANSFORM);
CL_COMPILER_TRANSFORM_SYMBOL_P.lisp_name = 'TRANSFORM-SYMBOL-P'
lisp.setSymbolFunction(G_361, CL_COMPILER_TRANSFORM_SYMBOL_P);
{
TMP_364=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_443;
let TMP_442;
let TMP_441;
let TMP_440;
let TMP_438;
let TMP_436;
let TMP_434;
let TMP_432;
let TMP_431;
let TMP_430;
let L_G116__204;
let TMP_429;
let TMP_428;
let TMP_427;
let TMP_426;
let TMP_425;
let TMP_423;
let TMP_422;
let TMP_420;
let TMP_419;
let TMP_418;
let TMP_417;
let TMP_416;
let TMP_415;
let TMP_413;
let TMP_412;
let TMP_411;
let TMP_410;
let TMP_409;
let TMP_408;
let TMP_406;
let TMP_405;
let TMP_404;
let TMP_397;
let TMP_396;
let TMP_394;
let L_SETF_FN__203;
let TMP_390;
let TMP_388;
let TMP_387;
let TMP_385;
let TMP_384;
let L_G_GETTER__202;
let TMP_383;
let L_G_SETTER__201;
let TMP_382;
let L_G_STORE__200;
let TMP_381;
let L_G_ARGS__199;
let TMP_380;
let L_GENSYMS__198;
let TMP_379;
let TMP_378;
let L_G115__197;
let TMP_377;
let TMP_376;
let TMP_375;
let TMP_374;
let TMP_373;
let TMP_372;
let TMP_371;
let TMP_370;
let TMP_369;
let TMP_368;
let TMP_366;
let TMP_365;
let L_BODY__196;
let L_LAMBDA_LIST__195;
let L_NAME__194;
L_NAME__194=arguments[0];
L_LAMBDA_LIST__195=arguments[1];
L_BODY__196=lisp.jsArrayToList(arguments, 2);
{
TMP_365=lisp.CL_consp(L_NAME__194);
if(lisp.values1(TMP_365) !== lisp.S_nil){
TMP_368=lisp.callFunctionWithCallStack(G_206,L_NAME__194);
TMP_369=lisp.CL_eq(G_367,TMP_368);
if(lisp.values1(TMP_369) !== lisp.S_nil){
TMP_371=lisp.callFunctionWithCallStack(G_250,L_NAME__194);
TMP_372=lisp.callFunctionWithCallStack(G_254,2,TMP_371);
if(lisp.values1(TMP_372) !== lisp.S_nil){
TMP_374=G_194.func(L_NAME__194);
if(lisp.values1(TMP_374) !== lisp.S_nil){
TMP_376=lisp.callFunctionWithCallStack(G_265,L_NAME__194);
TMP_377=G_178.func(TMP_376);
TMP_375=lisp.values1(TMP_377);
}else{
TMP_375=lisp.values1(lisp.S_nil);
}
TMP_373=lisp.values1(TMP_375);
}else{
TMP_373=lisp.values1(lisp.S_nil);
}
TMP_370=lisp.values1(TMP_373);
}else{
TMP_370=lisp.values1(lisp.S_nil);
}
TMP_366=lisp.values1(TMP_370);
}else{
TMP_366=lisp.values1(lisp.S_nil);
}
L_G115__197=lisp.values1(TMP_366);
if(lisp.values1(L_G115__197) !== lisp.S_nil){
{
TMP_379=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([71, 69, 78, 83, 89, 77, 83])));
L_GENSYMS__198=lisp.values1(TMP_379);
TMP_380=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([65, 82, 71, 83])));
L_G_ARGS__199=lisp.values1(TMP_380);
TMP_381=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([83, 84, 79, 82, 69])));
L_G_STORE__200=lisp.values1(TMP_381);
TMP_382=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([83, 69, 84, 84, 69, 82])));
L_G_SETTER__201=lisp.values1(TMP_382);
TMP_383=lisp.callFunctionWithCallStack(G_94,G_97.func(lisp.codeArrayToString([71, 69, 84, 84, 69, 82])));
L_G_GETTER__202=lisp.values1(TMP_383);
TMP_384=lisp.callFunctionWithCallStack(G_265,L_NAME__194);
TMP_385=lisp.callFunctionWithCallStack(G_386,lisp.S_nil,G_97.func(lisp.codeArrayToString([40, 83, 69, 84, 70, 32, 126, 65, 41])),TMP_384);
TMP_387=lisp.callFunctionWithCallStack(G_265,L_NAME__194);
TMP_388=lisp.callFunctionWithCallStack(G_389,TMP_387);
TMP_390=lisp.callFunctionWithCallStack(G_391,TMP_385,TMP_388);
L_SETF_FN__203=lisp.values1(TMP_390);
TMP_394=lisp.callFunctionWithCallStack(G_102,G_393,L_SETF_FN__203,L_LAMBDA_LIST__195,L_BODY__196);
TMP_396=lisp.callFunctionWithCallStack(G_265,L_NAME__194);
TMP_397=lisp.callFunctionWithCallStack(G_100,G_221,L_G_ARGS__199);
TMP_404=lisp.callFunctionWithCallStack(G_100,G_399,lisp.makeCons(G_400, lisp.makeCons(lisp.makeCons(G_401, lisp.S_nil), lisp.makeCons(lisp.makeCons(G_402, lisp.makeCons(lisp.makeCons(G_403, lisp.makeCons(G_401, lisp.S_nil)), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_94, lisp.S_nil), lisp.S_nil)))),L_G_ARGS__199);
TMP_405=lisp.callFunctionWithCallStack(G_100,L_GENSYMS__198,TMP_404);
TMP_406=lisp.CL_cons(L_G_STORE__200,lisp.makeCons(lisp.makeCons(G_94, lisp.makeCons(G_97.func(lisp.codeArrayToString([71, 45, 83, 84, 79, 82, 69])), lisp.S_nil)), lisp.S_nil));
TMP_408=lisp.callFunctionWithCallStack(G_100,G_407,L_SETF_FN__203);
TMP_409=lisp.callFunctionWithCallStack(G_100,L_G_SETTER__201,TMP_408);
TMP_410=lisp.callFunctionWithCallStack(G_265,L_NAME__194);
TMP_411=lisp.callFunctionWithCallStack(G_100,G_407,TMP_410);
TMP_412=lisp.callFunctionWithCallStack(G_100,L_G_GETTER__202,TMP_411);
TMP_413=lisp.callFunctionWithCallStack(G_100,TMP_405,TMP_406,TMP_409,TMP_412);
TMP_415=lisp.callFunctionWithCallStack(G_100,G_100,L_G_STORE__200);
TMP_416=lisp.callFunctionWithCallStack(G_100,G_102,L_G_SETTER__201,L_G_STORE__200,L_GENSYMS__198);
TMP_417=lisp.callFunctionWithCallStack(G_100,G_102,L_G_GETTER__202,L_GENSYMS__198);
TMP_418=lisp.callFunctionWithCallStack(G_100,G_414,L_GENSYMS__198,L_G_ARGS__199,TMP_415,TMP_416,TMP_417);
TMP_419=lisp.callFunctionWithCallStack(G_100,G_398,TMP_413,TMP_418);
TMP_420=lisp.callFunctionWithCallStack(G_100,G_395,TMP_396,TMP_397,TMP_419);
TMP_422=lisp.callFunctionWithCallStack(G_265,L_NAME__194);
TMP_423=lisp.callFunctionWithCallStack(G_100,G_407,TMP_422);
TMP_425=lisp.callFunctionWithCallStack(G_100,G_424,L_SETF_FN__203);
TMP_426=lisp.callFunctionWithCallStack(G_100,G_421,TMP_423,lisp.makeCons(G_407, lisp.makeCons(G_105, lisp.S_nil)),TMP_425);
TMP_427=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__194);
TMP_428=lisp.callFunctionWithCallStack(G_100,G_392,TMP_394,TMP_420,TMP_426,TMP_427);
}
TMP_378=TMP_428;
}else{
{
TMP_429=G_178.func(L_NAME__194);
L_G116__204=lisp.values1(TMP_429);
if(lisp.values1(L_G116__204) !== lisp.S_nil){
TMP_431=G_18.func();
if(lisp.values1(TMP_431) !== lisp.S_nil){
TMP_434=lisp.callFunctionWithCallStack(G_102,G_433,L_NAME__194,L_LAMBDA_LIST__195,L_BODY__196);
TMP_432=TMP_434;
}else{
TMP_436=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__194);
TMP_438=lisp.callFunctionWithCallStack(G_439,L_BODY__196,G_6);
TMP_440=lisp.callFunctionWithCallStack(G_102,G_437,L_NAME__194,TMP_438);
TMP_441=lisp.callFunctionWithCallStack(G_100,G_400,L_LAMBDA_LIST__195,TMP_440);
TMP_442=lisp.callFunctionWithCallStack(G_100,G_435,TMP_436,TMP_441);
TMP_432=TMP_442;
}
TMP_430=TMP_432;
}else{
TMP_443=lisp.callFunctionWithCallStack(G_216,G_97.func(lisp.codeArrayToString([84, 104, 101, 32, 78, 65, 77, 69, 32, 97, 114, 103, 117, 109, 101, 110, 116, 32, 116, 111, 32, 68, 69, 70, 85, 78, 44, 32, 126, 83, 44, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 110, 97, 109, 101, 46])),L_NAME__194);
TMP_430=TMP_443;
}
}
TMP_378=TMP_430;
}
}
return TMP_378;
});
L_G113__206=lisp.values1(TMP_364);
{
L_G114__207=lisp.values1(L_G113__206);
lisp.CL_put(G_393,G_358,L_G114__207);
}
}
{
TMP_444=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_458;
let TMP_457;
let TMP_456;
let TMP_445;
let L_BODY__212;
let L_LAMBDA_LIST__211;
let L_NAME__210;
L_NAME__210=arguments[0];
L_LAMBDA_LIST__211=arguments[1];
L_BODY__212=lisp.jsArrayToList(arguments, 2);
TMP_445=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_455;
let L_G125__221;
let TMP_453;
let TMP_452;
let L_G_STORE124__220;
let L_G123__219;
let L_FN__218;
let TMP_451;
let TMP_450;
let TMP_449;
let TMP_447;
let L_ARGS__217;
let TMP_446;
let L_G122__216;
let L_DOCSTRING__215;
let L_DECLARES__214;
let L_BODY__213;
L_BODY__213=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__214=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_DOCSTRING__215=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_G122__216=lisp.jsArrayToList(arguments, 3);
{
TMP_446=lisp.callFunctionWithCallStack(G_94);
L_ARGS__217=lisp.values1(TMP_446);
TMP_447=lisp.callFunctionWithCallStack(G_100,G_221,L_ARGS__217);
TMP_449=lisp.CL_cons(G_402,L_DECLARES__214);
TMP_450=lisp.callFunctionWithCallStack(G_102,G_448,L_LAMBDA_LIST__211,L_ARGS__217,TMP_449,L_BODY__213);
TMP_451=lisp.callFunctionWithCallStack(G_100,G_400,TMP_447,TMP_450);
L_FN__218=lisp.values1(TMP_451);
{
L_G123__219=lisp.values1(L_NAME__210);
L_G_STORE124__220=lisp.values1(L_FN__218);
lisp.callFunctionWithCallStack(G_88,L_G_STORE124__220,L_G123__219);
}
{
TMP_452=lisp.callFunctionWithCallStack(G_100,L_NAME__210);
TMP_453=lisp.callFunctionWithCallStack(G_454,lisp.symbolValue(G_15),TMP_452);
L_G125__221=lisp.values1(TMP_453);
lisp.setSymbolValue(G_15, lisp.values1(L_G125__221));
}
TMP_455=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__210);
}
return TMP_455;
});
TMP_456=lisp.callFunctionWithCallStack(G_275,TMP_445);
TMP_457=lisp.callFunctionWithCallStack(G_439,L_BODY__212,G_6);
TMP_458=lisp.CL_multipleValueCall(TMP_456,TMP_457);
return TMP_458;
});
L_G120__222=lisp.values1(TMP_444);
{
L_G121__223=lisp.values1(L_G120__222);
lisp.CL_put(G_459,G_358,L_G121__223);
}
}
{
TMP_460=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_469;
let TMP_468;
let TMP_467;
let TMP_461;
let L_BODY__228;
let L_LAMBDA_LIST__227;
let L_NAME__226;
L_NAME__226=arguments[0];
L_LAMBDA_LIST__227=arguments[1];
L_BODY__228=lisp.jsArrayToList(arguments, 2);
TMP_461=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_466;
let L_G133__236;
let TMP_465;
let TMP_464;
let L_G_STORE132__235;
let L_G131__234;
let L_FN__233;
let TMP_463;
let TMP_462;
let L_G130__232;
let L_DOCSTRING__231;
let L_DECLARES__230;
let L_BODY__229;
L_BODY__229=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_DECLARES__230=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_DOCSTRING__231=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_G130__232=lisp.jsArrayToList(arguments, 3);
{
TMP_462=lisp.CL_cons(G_402,L_DECLARES__230);
TMP_463=lisp.callFunctionWithCallStack(G_102,G_400,L_LAMBDA_LIST__227,TMP_462,L_BODY__229);
L_FN__233=lisp.values1(TMP_463);
{
L_G131__234=lisp.values1(L_NAME__226);
L_G_STORE132__235=lisp.values1(L_FN__233);
lisp.callFunctionWithCallStack(G_88,L_G_STORE132__235,L_G131__234);
}
{
TMP_464=lisp.callFunctionWithCallStack(G_100,L_NAME__226);
TMP_465=lisp.callFunctionWithCallStack(G_454,lisp.symbolValue(G_15),TMP_464);
L_G133__236=lisp.values1(TMP_465);
lisp.setSymbolValue(G_15, lisp.values1(L_G133__236));
}
TMP_466=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__226);
}
return TMP_466;
});
TMP_467=lisp.callFunctionWithCallStack(G_275,TMP_461);
TMP_468=lisp.callFunctionWithCallStack(G_439,L_BODY__228,G_6);
TMP_469=lisp.CL_multipleValueCall(TMP_467,TMP_468);
return TMP_469;
});
L_G128__237=lisp.values1(TMP_460);
{
L_G129__238=lisp.values1(L_G128__237);
lisp.CL_put(G_470,G_358,L_G129__238);
}
}
{
TMP_471=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_474;
let L_G140__245;
let TMP_473;
let TMP_472;
let L_G_STORE139__244;
let L_G138__243;
let L_EXPANSION__242;
let L_NAME__241;
L_NAME__241=arguments[0];
L_EXPANSION__242=arguments[1];
{
L_G138__243=lisp.values1(L_NAME__241);
L_G_STORE139__244=lisp.values1(L_EXPANSION__242);
lisp.callFunctionWithCallStack(G_111,L_G_STORE139__244,L_G138__243);
}
{
TMP_472=lisp.callFunctionWithCallStack(G_100,L_NAME__241);
TMP_473=lisp.callFunctionWithCallStack(G_454,lisp.symbolValue(G_15),TMP_472);
L_G140__245=lisp.values1(TMP_473);
lisp.setSymbolValue(G_15, lisp.values1(L_G140__245));
}
TMP_474=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__241);
return TMP_474;
});
L_G136__246=lisp.values1(TMP_471);
{
L_G137__247=lisp.values1(L_G136__246);
lisp.CL_put(G_475,G_358,L_G137__247);
}
}
{
TMP_476=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_478;
let TMP_477;
let L_BODY__251;
let L_ARGS__250;
L_ARGS__250=arguments[0];
L_BODY__251=lisp.jsArrayToList(arguments, 1);
TMP_477=lisp.callFunctionWithCallStack(G_102,G_400,L_ARGS__250,L_BODY__251);
TMP_478=lisp.callFunctionWithCallStack(G_100,G_424,TMP_477);
return TMP_478;
});
L_G143__252=lisp.values1(TMP_476);
{
L_G144__253=lisp.values1(L_G143__252);
lisp.CL_put(G_400,G_358,L_G144__253);
}
}
{
TMP_479=(function(){
if(arguments.length < 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_482;
let TMP_481;
let L_BODY__258;
let L_ARGS__257;
let L_NAME__256;
L_NAME__256=arguments[0];
L_ARGS__257=arguments[1];
L_BODY__258=lisp.jsArrayToList(arguments, 2);
TMP_481=lisp.callFunctionWithCallStack(G_102,G_480,L_NAME__256,L_ARGS__257,L_BODY__258);
TMP_482=lisp.callFunctionWithCallStack(G_100,G_424,TMP_481);
return TMP_482;
});
L_G147__259=lisp.values1(TMP_479);
{
L_G148__260=lisp.values1(L_G147__259);
lisp.CL_put(G_480,G_358,L_G148__260);
}
}
{
TMP_483=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_505;
let TMP_504;
let TMP_503;
let TMP_502;
let TMP_501;
let TMP_500;
let TMP_498;
let TMP_496;
let TMP_495;
let TMP_494;
let TMP_493;
let TMP_491;
let TMP_490;
let TMP_487;
let TMP_486;
let TMP_485;
let L_DOCP__267;
let L_DOC__266;
let L_VALUE_P__265;
let L_VALUE__264;
let L_VAR__263;
L_VAR__263=arguments[0];
L_VALUE__264=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_VALUE_P__265=(arguments.length > 1 ? lisp.S_t : lisp.S_nil);
L_DOC__266=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_DOCP__267=(arguments.length > 2 ? lisp.S_t : lisp.S_nil);
TMP_485=lisp.callFunctionWithCallStack(G_100,G_5,L_VAR__263);
TMP_486=lisp.callFunctionWithCallStack(G_100,G_484,TMP_485);
if(lisp.values1(L_VALUE_P__265) !== lisp.S_nil){
TMP_490=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__263);
TMP_491=lisp.callFunctionWithCallStack(G_100,G_489,TMP_490);
TMP_493=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__263);
TMP_494=lisp.callFunctionWithCallStack(G_100,G_492,TMP_493,L_VALUE__264);
TMP_495=lisp.callFunctionWithCallStack(G_100,G_488,TMP_491,lisp.S_nil,TMP_494);
TMP_487=lisp.values1(TMP_495);
}else{
TMP_487=lisp.values1(lisp.S_nil);
}
if(lisp.values1(L_DOCP__267) !== lisp.S_nil){
TMP_498=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__263);
TMP_500=lisp.callFunctionWithCallStack(G_102,G_497,TMP_498,lisp.makeCons(lisp.makeCons(G_407, lisp.makeCons(G_499, lisp.S_nil)), lisp.S_nil));
TMP_501=lisp.callFunctionWithCallStack(G_100,G_367,TMP_500,L_DOC__266);
TMP_496=lisp.values1(TMP_501);
}else{
TMP_496=lisp.values1(lisp.S_nil);
}
TMP_502=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__263);
TMP_503=lisp.callFunctionWithCallStack(G_102,G_421,TMP_502,lisp.makeCons(lisp.makeCons(G_407, lisp.makeCons(G_5, lisp.S_nil)), lisp.makeCons(G_6, lisp.S_nil)));
TMP_504=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__263);
TMP_505=lisp.callFunctionWithCallStack(G_100,G_392,TMP_486,TMP_487,TMP_496,TMP_503,TMP_504);
return TMP_505;
});
L_G151__268=lisp.values1(TMP_483);
{
L_G152__269=lisp.values1(L_G151__268);
lisp.CL_put(G_506,G_358,L_G152__269);
}
}
{
TMP_507=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_519;
let TMP_518;
let TMP_517;
let TMP_516;
let TMP_515;
let TMP_514;
let TMP_513;
let TMP_512;
let TMP_511;
let TMP_510;
let TMP_509;
let TMP_508;
let L_DOCP__275;
let L_DOC__274;
let L_VALUE__273;
let L_VAR__272;
L_VAR__272=arguments[0];
L_VALUE__273=arguments[1];
L_DOC__274=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_DOCP__275=(arguments.length > 2 ? lisp.S_t : lisp.S_nil);
TMP_508=lisp.callFunctionWithCallStack(G_100,G_5,L_VAR__272);
TMP_509=lisp.callFunctionWithCallStack(G_100,G_484,TMP_508);
TMP_510=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__272);
TMP_511=lisp.callFunctionWithCallStack(G_100,G_492,TMP_510,L_VALUE__273);
if(lisp.values1(L_DOCP__275) !== lisp.S_nil){
TMP_513=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__272);
TMP_514=lisp.callFunctionWithCallStack(G_102,G_497,TMP_513,lisp.makeCons(lisp.makeCons(G_407, lisp.makeCons(G_499, lisp.S_nil)), lisp.S_nil));
TMP_515=lisp.callFunctionWithCallStack(G_100,G_367,TMP_514,L_DOC__274);
TMP_512=lisp.values1(TMP_515);
}else{
TMP_512=lisp.values1(lisp.S_nil);
}
TMP_516=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__272);
TMP_517=lisp.callFunctionWithCallStack(G_102,G_421,TMP_516,lisp.makeCons(lisp.makeCons(G_407, lisp.makeCons(G_5, lisp.S_nil)), lisp.makeCons(G_6, lisp.S_nil)));
TMP_518=lisp.callFunctionWithCallStack(G_100,G_407,L_VAR__272);
TMP_519=lisp.callFunctionWithCallStack(G_100,G_392,TMP_509,TMP_511,TMP_512,TMP_517,TMP_518);
return TMP_519;
});
L_G155__276=lisp.values1(TMP_507);
{
L_G156__277=lisp.values1(L_G155__276);
lisp.CL_put(G_520,G_358,L_G156__277);
}
}
{
TMP_521=(function(){
if(arguments.length < 2 || 3 < arguments.length) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_534;
let TMP_533;
let TMP_532;
let TMP_531;
let TMP_530;
let TMP_529;
let TMP_528;
let TMP_527;
let TMP_526;
let TMP_525;
let L_G_STORE162__285;
let TMP_524;
let TMP_522;
let L_G161__284;
let L_DOCP__283;
let L_DOC__282;
let L_VALUE__281;
let L_NAME__280;
L_NAME__280=arguments[0];
L_VALUE__281=arguments[1];
L_DOC__282=arguments.length > 2 ? arguments[2] : (lisp.values1(lisp.S_nil));
L_DOCP__283=(arguments.length > 2 ? lisp.S_t : lisp.S_nil);
{
L_G161__284=lisp.values1(L_NAME__280);
TMP_522=lisp.callFunctionWithCallStack(G_523,L_VALUE__281);
TMP_524=G_22.func(L_NAME__280,G_27,TMP_522);
L_G_STORE162__285=lisp.values1(TMP_524);
lisp.callFunctionWithCallStack(G_141,L_G_STORE162__285,L_G161__284);
}
TMP_525=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__280);
TMP_526=lisp.callFunctionWithCallStack(G_100,G_492,TMP_525,L_VALUE__281);
if(lisp.values1(L_DOCP__283) !== lisp.S_nil){
TMP_528=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__280);
TMP_529=lisp.callFunctionWithCallStack(G_102,G_497,TMP_528,lisp.makeCons(lisp.makeCons(G_407, lisp.makeCons(G_499, lisp.S_nil)), lisp.S_nil));
TMP_530=lisp.callFunctionWithCallStack(G_100,G_367,TMP_529,L_DOC__282);
TMP_527=lisp.values1(TMP_530);
}else{
TMP_527=lisp.values1(lisp.S_nil);
}
TMP_531=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__280);
TMP_532=lisp.callFunctionWithCallStack(G_102,G_421,TMP_531,lisp.makeCons(lisp.makeCons(G_407, lisp.makeCons(G_139, lisp.S_nil)), lisp.makeCons(G_6, lisp.S_nil)));
TMP_533=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__280);
TMP_534=lisp.callFunctionWithCallStack(G_100,G_392,TMP_526,TMP_527,TMP_532,TMP_533);
return TMP_534;
});
L_G159__286=lisp.values1(TMP_521);
{
L_G160__287=lisp.values1(L_G159__286);
lisp.CL_put(G_535,G_358,L_G160__287);
}
}
{
TMP_536=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_537;
let L_X__290;
L_X__290=arguments[0];
TMP_537=lisp.callFunctionWithCallStack(G_538,L_X__290);
return TMP_537;
});
L_G165__291=lisp.values1(TMP_536);
{
L_G166__292=lisp.values1(L_G165__291);
lisp.CL_put(G_539,G_358,L_G166__292);
}
}
CL_COMPILER_PASS1_CONST.lisp_name = 'PASS1-CONST'
lisp.setSymbolFunction(G_541, CL_COMPILER_PASS1_CONST);
CL_COMPILER_JS_SYMBOL_TO_REF_FORM.lisp_name = 'JS-SYMBOL-TO-REF-FORM'
lisp.setSymbolFunction(G_546, CL_COMPILER_JS_SYMBOL_TO_REF_FORM);
CL_COMPILER_PASS1_REFVAR.lisp_name = 'PASS1-REFVAR'
lisp.setSymbolFunction(G_552, CL_COMPILER_PASS1_REFVAR);
CL_COMPILER_PASS1_FORMS.lisp_name = 'PASS1-FORMS'
lisp.setSymbolFunction(G_572, CL_COMPILER_PASS1_FORMS);
CL_COMPILER_PRE_PROCESS_DECLARATION_SPECIFIER.lisp_name = 'PRE-PROCESS-DECLARATION-SPECIFIER'
lisp.setSymbolFunction(G_591, CL_COMPILER_PRE_PROCESS_DECLARATION_SPECIFIER);
CL_COMPILER_PASS1_DECLARES.lisp_name = 'PASS1-DECLARES'
lisp.setSymbolFunction(G_610, CL_COMPILER_PASS1_DECLARES);
CL_COMPILER_PASS1_LAMBDA_LIST.lisp_name = 'PASS1-LAMBDA-LIST'
lisp.setSymbolFunction(G_649, CL_COMPILER_PASS1_LAMBDA_LIST);
CL_COMPILER_PASS1_LAMBDA.lisp_name = 'PASS1-LAMBDA'
lisp.setSymbolFunction(G_682, CL_COMPILER_PASS1_LAMBDA);
CL_COMPILER_PERCENTMACRO_FUNCTION.lisp_name = '%MACRO-FUNCTION'
lisp.setSymbolFunction(G_713, CL_COMPILER_PERCENTMACRO_FUNCTION);
CL_COMPILER_PERCENTMACROEXPAND_1.lisp_name = '%MACROEXPAND-1'
lisp.setSymbolFunction(G_730, CL_COMPILER_PERCENTMACROEXPAND_1);
CL_COMPILER_PASS1_CALL.lisp_name = 'PASS1-CALL'
lisp.setSymbolFunction(G_759, CL_COMPILER_PASS1_CALL);
CL_COMPILER_PASS1.lisp_name = 'PASS1'
lisp.setSymbolFunction(G_586, CL_COMPILER_PASS1);
CL_COMPILER_PASS1_QUOTE.lisp_name = 'PASS1-QUOTE'
lisp.setSymbolFunction(G_850, CL_COMPILER_PASS1_QUOTE);
{
L_G281__481=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_850,G_407,L_G281__481);
}
CL_COMPILER_PASS1_SETQ.lisp_name = 'PASS1-SETQ'
lisp.setSymbolFunction(G_854, CL_COMPILER_PASS1_SETQ);
{
L_G297__502=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_854,G_893,L_G297__502);
}
CL_COMPILER_PASS1_IF.lisp_name = 'PASS1-IF'
lisp.setSymbolFunction(G_895, CL_COMPILER_PASS1_IF);
{
L_G300__512=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_895,G_488,L_G300__512);
}
CL_COMPILER_PASS1_PROGN.lisp_name = 'PASS1-PROGN'
lisp.setSymbolFunction(G_901, CL_COMPILER_PASS1_PROGN);
{
L_G303__520=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_901,G_392,L_G303__520);
}
CL_COMPILER_PASS1_FUNCTION.lisp_name = 'PASS1-FUNCTION'
lisp.setSymbolFunction(G_905, CL_COMPILER_PASS1_FUNCTION);
{
L_G309__532=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_905,G_424,L_G309__532);
}
CL_COMPILER_CHECK_LET_FORM.lisp_name = 'CHECK-LET-FORM'
lisp.setSymbolFunction(G_923, CL_COMPILER_CHECK_LET_FORM);
CL_COMPILER_PASS1_LET_BODY.lisp_name = 'PASS1-LET-BODY'
lisp.setSymbolFunction(G_942, CL_COMPILER_PASS1_LET_BODY);
CL_COMPILER_PASS1_LET.lisp_name = 'PASS1-LET'
lisp.setSymbolFunction(G_952, CL_COMPILER_PASS1_LET);
{
L_G316__563=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_952,G_398,L_G316__563);
}
CL_COMPILER_PASS1_LETSTAR.lisp_name = 'PASS1-LET*'
lisp.setSymbolFunction(G_962, CL_COMPILER_PASS1_LETSTAR);
{
L_G321__578=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_962,G_972,L_G321__578);
}
CL_COMPILER_CHECK_FLET_DEFINITIONS.lisp_name = 'CHECK-FLET-DEFINITIONS'
lisp.setSymbolFunction(G_974, CL_COMPILER_CHECK_FLET_DEFINITIONS);
CL_COMPILER_PARSE_FLET_DEFINITIONS.lisp_name = 'PARSE-FLET-DEFINITIONS'
lisp.setSymbolFunction(G_984, CL_COMPILER_PARSE_FLET_DEFINITIONS);
CL_COMPILER_PASS1_FLET.lisp_name = 'PASS1-FLET'
lisp.setSymbolFunction(G_994, CL_COMPILER_PASS1_FLET);
{
L_G332__605=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_994,G_1004,L_G332__605);
}
CL_COMPILER_PASS1_LABELS.lisp_name = 'PASS1-LABELS'
lisp.setSymbolFunction(G_1006, CL_COMPILER_PASS1_LABELS);
{
L_G345__627=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1006,G_1022,L_G345__627);
}
CL_COMPILER_PASS1_MACROLET.lisp_name = 'PASS1-MACROLET'
lisp.setSymbolFunction(G_1024, CL_COMPILER_PASS1_MACROLET);
{
L_G348__638=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1024,G_1035,L_G348__638);
}
CL_COMPILER_PASS1_SYMBOL_MACROLET.lisp_name = 'PASS1-SYMBOL-MACROLET'
lisp.setSymbolFunction(G_1037, CL_COMPILER_PASS1_SYMBOL_MACROLET);
{
L_G351__649=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1037,G_835,L_G351__649);
}
CL_COMPILER_PASS1_UNWIND_PROTECT.lisp_name = 'PASS1-UNWIND-PROTECT'
lisp.setSymbolFunction(G_1047, CL_COMPILER_PASS1_UNWIND_PROTECT);
{
L_G354__658=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1047,G_1048,L_G354__658);
}
CL_COMPILER_PASS1_BLOCK.lisp_name = 'PASS1-BLOCK'
lisp.setSymbolFunction(G_1054, CL_COMPILER_PASS1_BLOCK);
{
L_G357__670=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1054,G_437,L_G357__670);
}
CL_COMPILER_PASS1_RETURN_FROM.lisp_name = 'PASS1-RETURN-FROM'
lisp.setSymbolFunction(G_1061, CL_COMPILER_PASS1_RETURN_FROM);
{
L_G360__680=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1061,G_1065,L_G360__680);
}
TMP_1070=lisp.CL_boundp(G_1069);
if(lisp.values1(TMP_1070) !== lisp.S_nil){
}else{
lisp.CL_set(G_1069,0);
}
lisp.CL_put(G_1069,G_5,G_6);
CL_COMPILER_MAKE_TAGBODY_ID.lisp_name = 'MAKE-TAGBODY-ID'
lisp.setSymbolFunction(G_1072, CL_COMPILER_MAKE_TAGBODY_ID);
CL_COMPILER_TAG_LITERAL_P.lisp_name = 'TAG-LITERAL-P'
lisp.setSymbolFunction(G_1078, CL_COMPILER_TAG_LITERAL_P);
CL_COMPILER_PASS1_TAGBODY.lisp_name = 'PASS1-TAGBODY'
lisp.setSymbolFunction(G_1084, CL_COMPILER_PASS1_TAGBODY);
{
L_G381__717=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1084,G_1128,L_G381__717);
}
CL_COMPILER_PASS1_GO.lisp_name = 'PASS1-GO'
lisp.setSymbolFunction(G_1133, CL_COMPILER_PASS1_GO);
{
L_G384__726=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1133,G_1136,L_G384__726);
}
CL_COMPILER_PASS1_LOCALLY.lisp_name = 'PASS1-LOCALLY'
lisp.setSymbolFunction(G_1139, CL_COMPILER_PASS1_LOCALLY);
{
L_G388__738=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1139,G_836,L_G388__738);
}
CL_COMPILER_PASS1_DECLAIM.lisp_name = 'PASS1-DECLAIM'
lisp.setSymbolFunction(G_1148, CL_COMPILER_PASS1_DECLAIM);
{
L_G409__758=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1148,G_484,L_G409__758);
}
CL_COMPILER_PASS1_EVAL_WHEN.lisp_name = 'PASS1-EVAL-WHEN'
lisp.setSymbolFunction(G_1160, CL_COMPILER_PASS1_EVAL_WHEN);
{
L_G421__776=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1160,G_837,L_G421__776);
}
CL_COMPILER_PASS1_PERCENTDEFUN.lisp_name = 'PASS1-%DEFUN'
lisp.setSymbolFunction(G_1191, CL_COMPILER_PASS1_PERCENTDEFUN);
{
L_G426__793=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1191,G_433,L_G426__793);
}
CL_COMPILER_PASS1_MULTIPLE_VALUE_CALL.lisp_name = 'PASS1-MULTIPLE-VALUE-CALL'
lisp.setSymbolFunction(G_1209, CL_COMPILER_PASS1_MULTIPLE_VALUE_CALL);
{
L_G429__803=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1209,G_1210,L_G429__803);
}
CL_COMPILER_PASS1_PERCENTDEFPACKAGE.lisp_name = 'PASS1-%DEFPACKAGE'
lisp.setSymbolFunction(G_1218, CL_COMPILER_PASS1_PERCENTDEFPACKAGE);
{
L_G432__817=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1218,G_1231,L_G432__817);
}
CL_COMPILER_PASS1_IN_PACKAGE.lisp_name = 'PASS1-IN-PACKAGE'
lisp.setSymbolFunction(G_1235, CL_COMPILER_PASS1_IN_PACKAGE);
{
L_G435__826=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1235,G_1244,L_G435__826);
}
CL_COMPILER_REF_FORM_P.lisp_name = 'REF-FORM-P'
lisp.setSymbolFunction(G_1246, CL_COMPILER_REF_FORM_P);
CL_COMPILER_IDENT_PLACE_P.lisp_name = 'IDENT-PLACE-P'
lisp.setSymbolFunction(G_1252, CL_COMPILER_IDENT_PLACE_P);
CL_COMPILER_PASS1_REF_NAMES.lisp_name = 'PASS1-REF-NAMES'
lisp.setSymbolFunction(G_796, CL_COMPILER_PASS1_REF_NAMES);
CL_COMPILER_PASS1_REF.lisp_name = 'PASS1-REF'
lisp.setSymbolFunction(G_1277, CL_COMPILER_PASS1_REF);
{
L_G452__855=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1277,G_549,L_G452__855);
}
CL_COMPILER_PASS1_SET.lisp_name = 'PASS1-SET'
lisp.setSymbolFunction(G_1281, CL_COMPILER_PASS1_SET);
{
L_G455__864=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1281,G_1282,L_G455__864);
}
CL_COMPILER_CONVERT_VAR.lisp_name = 'CONVERT-VAR'
lisp.setSymbolFunction(G_1287, CL_COMPILER_CONVERT_VAR);
CL_COMPILER_PASS1_VAR.lisp_name = 'PASS1-VAR'
lisp.setSymbolFunction(G_1296, CL_COMPILER_PASS1_VAR);
{
L_G468__881=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1296,G_1301,L_G468__881);
}
CL_COMPILER_PASS1_REQUIRE.lisp_name = 'PASS1-REQUIRE'
lisp.setSymbolFunction(G_1306, CL_COMPILER_PASS1_REQUIRE);
{
L_G476__896=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1306,G_1321,L_G476__896);
}
CL_COMPILER_PASS1_EXPORT.lisp_name = 'PASS1-EXPORT'
lisp.setSymbolFunction(G_1323, CL_COMPILER_PASS1_EXPORT);
{
L_G480__906=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1323,G_1334,L_G480__906);
}
CL_COMPILER_PASS1_TYPEOF.lisp_name = 'PASS1-TYPEOF'
lisp.setSymbolFunction(G_1336, CL_COMPILER_PASS1_TYPEOF);
{
L_G483__914=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1336,G_1337,L_G483__914);
}
CL_COMPILER_PASS1_NEW.lisp_name = 'PASS1-NEW'
lisp.setSymbolFunction(G_1341, CL_COMPILER_PASS1_NEW);
{
L_G490__930=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1341,G_1364,L_G490__930);
}
CL_COMPILER_PASS1_AGET.lisp_name = 'PASS1-AGET'
lisp.setSymbolFunction(G_1371, CL_COMPILER_PASS1_AGET);
{
L_G493__941=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1371,G_1372,L_G493__941);
}
CL_COMPILER_PASS1_FORM_TIME.lisp_name = 'PASS1-FORM-TIME'
lisp.setSymbolFunction(G_1381, CL_COMPILER_PASS1_FORM_TIME);
{
L_G496__949=lisp.values1(lisp.symbolValue(G_2));
lisp.callFunctionWithCallStack(G_852,G_1381,G_1382,L_G496__949);
}
CL_COMPILER_PASS1_TOPLEVEL.lisp_name = 'PASS1-TOPLEVEL'
lisp.setSymbolFunction(G_1179, CL_COMPILER_PASS1_TOPLEVEL);
CL_COMPILER_PASS1_MODULE.lisp_name = 'PASS1-MODULE'
lisp.setSymbolFunction(G_1388, CL_COMPILER_PASS1_MODULE);
CL_COMPILER_PASS1_DUMP_MACROS.lisp_name = 'PASS1-DUMP-MACROS'
lisp.setSymbolFunction(G_1392, CL_COMPILER_PASS1_DUMP_MACROS);
TMP_1404=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1453;
let TMP_1452;
let TMP_1450;
let TMP_1449;
let TMP_1448;
let TMP_1447;
let TMP_1446;
let TMP_1445;
let TMP_1443;
let TMP_1432;
let L_FN_NAME__979;
let TMP_1431;
let TMP_1430;
let L_BODY__978;
let L_G506__977;
let TMP_1429;
let L_G505__976;
let TMP_1428;
let L_MULTIPLE_VALUES_P__975;
let TMP_1427;
let L_G504__974;
let TMP_1426;
let L_RETURN_VALUE_P__973;
let TMP_1425;
let L_G503__972;
let TMP_1424;
let L_LAMBDA_LIST__971;
let TMP_1423;
let L_G502__970;
let TMP_1422;
let TMP_1421;
let TMP_1420;
let TMP_1419;
let L_G501__969;
let TMP_1418;
let L_G500__968;
let TMP_1417;
let L_NAME__967;
let TMP_1416;
let L_G499__966;
let TMP_1415;
let TMP_1408;
let TMP_1407;
let TMP_1405;
let L_G498__965;
let L_G4__964;
L_G4__964=lisp.jsArrayToList(arguments, 0);
{
L_G498__965=lisp.values1(L_G4__964);
{
TMP_1405=lisp.callFunctionWithCallStack(G_1406,L_G498__965);
TMP_1407=lisp.callFunctionWithCallStack(G_933,2,TMP_1405);
if(lisp.values1(TMP_1407) !== lisp.S_nil){
TMP_1408=lisp.values1(lisp.S_nil);
}else{
TMP_1415=lisp.callFunctionWithCallStack(G_245,G_97.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1409, lisp.makeCons(lisp.makeCons(G_1410, lisp.makeCons(G_1411, lisp.makeCons(G_1412, lisp.S_nil))), lisp.makeCons(G_1413, lisp.makeCons(G_1414, lisp.S_nil)))),L_G498__965);
TMP_1408=lisp.values1(lisp.values1(TMP_1415));
}
L_G499__966=lisp.values1(TMP_1408);
TMP_1416=lisp.callFunctionWithCallStack(G_206,L_G498__965);
L_NAME__967=lisp.values1(TMP_1416);
TMP_1417=lisp.callFunctionWithCallStack(G_208,L_G498__965);
L_G500__968=lisp.values1(TMP_1417);
TMP_1418=lisp.callFunctionWithCallStack(G_206,L_G500__968);
L_G501__969=lisp.values1(TMP_1418);
TMP_1419=lisp.callFunctionWithCallStack(G_1406,L_G501__969);
TMP_1420=lisp.callFunctionWithCallStack(G_933,3,TMP_1419,3);
if(lisp.values1(TMP_1420) !== lisp.S_nil){
TMP_1421=lisp.values1(lisp.S_nil);
}else{
TMP_1422=lisp.callFunctionWithCallStack(G_245,G_97.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1410, lisp.makeCons(G_1411, lisp.makeCons(G_1412, lisp.S_nil))),L_G501__969);
TMP_1421=lisp.values1(lisp.values1(TMP_1422));
}
L_G502__970=lisp.values1(TMP_1421);
TMP_1423=lisp.callFunctionWithCallStack(G_206,L_G501__969);
L_LAMBDA_LIST__971=lisp.values1(TMP_1423);
TMP_1424=lisp.callFunctionWithCallStack(G_208,L_G501__969);
L_G503__972=lisp.values1(TMP_1424);
TMP_1425=lisp.callFunctionWithCallStack(G_206,L_G503__972);
L_RETURN_VALUE_P__973=lisp.values1(TMP_1425);
TMP_1426=lisp.callFunctionWithCallStack(G_208,L_G503__972);
L_G504__974=lisp.values1(TMP_1426);
TMP_1427=lisp.callFunctionWithCallStack(G_206,L_G504__974);
L_MULTIPLE_VALUES_P__975=lisp.values1(TMP_1427);
TMP_1428=lisp.callFunctionWithCallStack(G_208,L_G504__974);
L_G505__976=lisp.values1(TMP_1428);
TMP_1429=lisp.callFunctionWithCallStack(G_208,L_G500__968);
L_G506__977=lisp.values1(TMP_1429);
L_BODY__978=lisp.values1(L_G506__977);
{
TMP_1430=lisp.callFunctionWithCallStack(G_386,lisp.S_nil,G_97.func(lisp.codeArrayToString([80, 65, 83, 83, 49, 45, 126, 65])),L_NAME__967);
TMP_1431=lisp.callFunctionWithCallStack(G_391,TMP_1430);
L_FN_NAME__979=lisp.values1(TMP_1431);
TMP_1432=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1442;
let TMP_1441;
let TMP_1440;
let TMP_1439;
let TMP_1438;
let TMP_1437;
let TMP_1436;
let TMP_1435;
let TMP_1433;
let L_G507__982;
let L_LAMBDA_LIST__981;
let L_WHOLE__980;
L_WHOLE__980=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_LAMBDA_LIST__981=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G507__982=lisp.jsArrayToList(arguments, 2);
TMP_1433=lisp.callFunctionWithCallStack(G_102,L_RETURN_VALUE_P__973,L_MULTIPLE_VALUES_P__975,L_WHOLE__980,L_LAMBDA_LIST__981);
TMP_1435=lisp.callFunctionWithCallStack(G_100,G_1434,L_RETURN_VALUE_P__973,L_MULTIPLE_VALUES_P__975,L_WHOLE__980);
TMP_1436=lisp.callFunctionWithCallStack(G_100,G_402,TMP_1435);
TMP_1437=lisp.callFunctionWithCallStack(G_102,G_393,L_FN_NAME__979,TMP_1433,TMP_1436,L_BODY__978);
TMP_1438=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__967);
TMP_1439=lisp.callFunctionWithCallStack(G_102,G_833,TMP_1438,lisp.makeCons(G_2, lisp.S_nil));
TMP_1440=lisp.callFunctionWithCallStack(G_100,G_407,L_FN_NAME__979);
TMP_1441=lisp.callFunctionWithCallStack(G_100,G_367,TMP_1439,TMP_1440);
TMP_1442=lisp.callFunctionWithCallStack(G_100,G_392,TMP_1437,TMP_1441);
return TMP_1442;
});
TMP_1443=lisp.callFunctionWithCallStack(G_275,TMP_1432);
TMP_1445=lisp.callFunctionWithCallStack(G_158,L_LAMBDA_LIST__971);
TMP_1446=lisp.CL_eq(G_1444,TMP_1445);
if(lisp.values1(TMP_1446) !== lisp.S_nil){
TMP_1448=lisp.callFunctionWithCallStack(G_807,L_LAMBDA_LIST__971);
TMP_1449=lisp.callFunctionWithCallStack(G_643,L_LAMBDA_LIST__971);
TMP_1450=lisp.CL_values(TMP_1448,TMP_1449);
TMP_1447=TMP_1450;
}else{
TMP_1452=lisp.CL_values(G_1451,L_LAMBDA_LIST__971);
TMP_1447=TMP_1452;
}
TMP_1453=lisp.CL_multipleValueCall(TMP_1443,TMP_1447);
}
}
}
return TMP_1453;
});
lisp.CL_put(G_82,G_85,TMP_1404);
TMP_1454=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1466;
let TMP_1465;
let TMP_1464;
let TMP_1463;
let L_BODY__990;
let L_G511__989;
let TMP_1462;
let L_LAMBDA_LIST__988;
let TMP_1461;
let L_G510__987;
let TMP_1460;
let L_NAME__986;
let TMP_1459;
let L_G509__985;
let TMP_1458;
let TMP_1457;
let TMP_1456;
let TMP_1455;
let L_G508__984;
let L_G110__983;
L_G110__983=lisp.jsArrayToList(arguments, 0);
{
L_G508__984=lisp.values1(L_G110__983);
{
TMP_1455=lisp.callFunctionWithCallStack(G_1406,L_G508__984);
TMP_1456=lisp.callFunctionWithCallStack(G_933,2,TMP_1455);
if(lisp.values1(TMP_1456) !== lisp.S_nil){
TMP_1457=lisp.values1(lisp.S_nil);
}else{
TMP_1458=lisp.callFunctionWithCallStack(G_245,G_97.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1409, lisp.makeCons(G_1410, lisp.makeCons(G_1413, lisp.makeCons(G_1414, lisp.S_nil)))),L_G508__984);
TMP_1457=lisp.values1(lisp.values1(TMP_1458));
}
L_G509__985=lisp.values1(TMP_1457);
TMP_1459=lisp.callFunctionWithCallStack(G_206,L_G508__984);
L_NAME__986=lisp.values1(TMP_1459);
TMP_1460=lisp.callFunctionWithCallStack(G_208,L_G508__984);
L_G510__987=lisp.values1(TMP_1460);
TMP_1461=lisp.callFunctionWithCallStack(G_206,L_G510__987);
L_LAMBDA_LIST__988=lisp.values1(TMP_1461);
TMP_1462=lisp.callFunctionWithCallStack(G_208,L_G510__987);
L_G511__989=lisp.values1(TMP_1462);
L_BODY__990=lisp.values1(L_G511__989);
TMP_1463=lisp.callFunctionWithCallStack(G_100,G_407,L_NAME__986);
TMP_1464=lisp.callFunctionWithCallStack(G_102,G_87,TMP_1463,lisp.makeCons(lisp.makeCons(G_407, lisp.makeCons(G_358, lisp.S_nil)), lisp.S_nil));
TMP_1465=lisp.callFunctionWithCallStack(G_102,G_400,L_LAMBDA_LIST__988,L_BODY__990);
TMP_1466=lisp.callFunctionWithCallStack(G_100,G_367,TMP_1464,TMP_1465);
}
}
return TMP_1466;
});
lisp.CL_put(G_363,G_85,TMP_1454);
}catch(TMP_1){G_1467.func();
console.log(TMP_1.message);
}


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_5;
let G_6;
let G_8;
let G_10;
let G_12;
let G_14;
let G_16;
let G_18;
let G_20;
let G_25;
let G_27;
let G_32;
let G_34;
let G_36;
let G_37;
let G_39;
let G_40;
let G_43;
let G_44;
let G_45;
let G_46;
let G_47;
let G_49;
let G_52;
let G_53;
let G_56;
let G_58;
let G_62;
let G_64;
let G_68;
let G_74;
let G_75;
let G_76;
let G_78;
let G_79;
let G_81;
let G_82;
let G_84;
let G_85;
let G_86;
let G_87;
let G_89;
let G_90;
let G_91;
let G_93;
let G_94;
let G_95;
let G_96;
let G_98;
let G_101;
let G_102;
let G_103;
let G_105;
let G_107;
let G_110;
let G_111;
let G_112;
let G_115;
let G_117;
let G_119;
let G_121;
let G_123;
let G_125;
let G_127;
let G_131;
let G_133;
let G_136;
let G_145;
let G_148;
let G_151;
let G_154;
let G_156;
let G_160;
let G_163;
let G_167;
let G_169;
let G_173;
let G_179;
let G_181;
let G_183;
let G_185;
let G_187;
let G_189;
let G_191;
let G_195;
let G_207;
let G_209;
let G_222;
let G_237;
let G_249;
let G_252;
let G_256;
let G_263;
let G_267;
let G_271;
let G_276;
let G_278;
let G_286;
let G_288;
let G_296;
let G_299;
let G_303;
let G_306;
let G_307;
let G_311;
let G_313;
let G_320;
let G_322;
let G_326;
let G_328;
let G_338;
let G_340;
let G_349;
let G_351;
let G_355;
let G_365;
let G_368;
let G_370;
let G_372;
let G_374;
let G_380;
let G_384;
let G_386;
let G_390;
let G_395;
let G_419;
let G_421;
let G_427;
let G_433;
let G_435;
let G_439;
let G_448;
let G_459;
let G_466;
let G_470;
let G_474;
let G_487;
let G_493;
let G_495;
let G_502;
let G_506;
let G_514;
let G_516;
let G_519;
let G_521;
let G_528;
let G_536;
let G_543;
let G_545;
let G_547;
let G_549;
let G_555;
let G_566;
let G_572;
let G_596;
let G_616;
let G_632;
let G_634;
let G_644;
let G_646;
let G_650;
let G_652;
let G_657;
let G_661;
let G_673;
let G_675;
let G_687;
let G_689;
let G_692;
let G_694;
let G_696;
let G_698;
let G_701;
let G_704;
let G_706;
let G_724;
let G_726;
let G_732;
let G_739;
let G_741;
let G_750;
let G_752;
let G_776;
let G_778;
let G_787;
let G_789;
let G_794;
let G_802;
let G_805;
let G_807;
let G_812;
let G_814;
let G_821;
let G_831;
let G_833;
let G_843;
let G_845;
let G_855;
let G_857;
let G_868;
let G_870;
let G_877;
let G_879;
let G_890;
let G_892;
let G_895;
let G_910;
let G_915;
let G_917;
let G_925;
let G_938;
let G_943;
let G_946;
let G_952;
let G_962;
let G_963;
let G_967;
let G_971;
let G_973;
let G_977;
let G_986;
let G_989;
let G_999;
let G_1000;
let G_1007;
let G_1012;
let G_1013;
let G_1014;
let G_1015;
let G_1035;
let G_1041;
let G_1042;
let G_1043;
let G_1044;
let G_1045;
let G_1067;
let G_1068;
let G_1075;
let G_1094;
let G_1109;
let G_1112;
let G_1113;
let G_1115;
let G_1116;
let G_1118;
let CL_COMPILER_P2_TOPLEVEL_FORMS;
let CL_COMPILER_P2_TOPLEVEL;
let CL_COMPILER_P2_FINISH_OUTPUT;
let CL_COMPILER_P2_EMIT_INITIALIZE_SYMBOLS;
let CL_COMPILER_P2_EMIT_INITIALIZE_VARS;
let CL_COMPILER_P2_TOPLEVEL_1;
let CL_COMPILER_P2_FUNCALL;
let CL_COMPILER_P2_LOGAND;
let CL_SYSTEMCOLONFORM_TIME;
let CL_COMPILER_ESCAPE;
let CL_COMPILERCOLONMODULE;
let CL_COMPILERCOLONJS_CALL;
let CL_FFICOLONAGET;
let CL_FFICOLONNEW;
let CL_FFICOLONTYPEOF;
let CL_FFICOLONVAR;
let CL_COMPILER_P2_CONVERT_VAR;
let CL_FFICOLONSET;
let CL_FFICOLONREF;
let CL_COMPILER_P2_EMIT_REF;
let CL_SYSTEMCOLONPERCENTIN_PACKAGE;
let CL_SYSTEMCOLONPERCENTDEFPACKAGE;
let CL_SYSTEMCOLONPERCENTDEFUN;
let CL_COMMON_LISPCOLONGO;
let CL_COMMON_LISPCOLONTAGBODY;
let CL_COMPILER_TAGBODY_TAG_NAME;
let CL_COMPILER_TAGBODY_STATE_NAME;
let CL_COMPILERCOLONRECUR;
let CL_COMMON_LISPCOLONLOOP;
let CL_COMMON_LISPCOLONRETURN_FROM;
let CL_COMMON_LISPCOLONBLOCK;
let CL_COMPILER_P2_ESCAPE_BLOCK_NAME;
let CL_COMPILER_P2_BLOCK_RESULT_VAR_NAME;
let CL_COMMON_LISPCOLONUNWIND_PROTECT;
let CL_COMPILERCOLONCALL;
let CL_COMPILER_P2_CALL_BUILTIN_USING_LIST_SPEC;
let CL_COMPILER_P2_CALL_DEFAULT;
let CL_COMPILERCOLONLCALL;
let CL_COMPILER_P2_EMIT_ARGS;
let CL_COMPILER_P2_PREPARE_ARGS;
let CL_COMMON_LISPCOLONLET;
let CL_COMMON_LISPCOLONLAMBDA;
let CL_COMPILER_P2_EMIT_LAMBDA_LIST;
let CL_COMPILER_P2_EMIT_DECLVAR;
let CL_COMPILER_P2_EMIT_UNWIND_VAR;
let CL_COMPILER_P2_MAKE_SAVE_VAR;
let CL_COMPILER_P2_EMIT_CHECK_ARGUMENTS;
let CL_COMMON_LISPCOLONPROGN;
let CL_COMMON_LISPCOLONIF;
let CL_COMPILERCOLONGSET;
let CL_COMPILERCOLONLSET;
let CL_COMPILERCOLONGREF;
let CL_COMPILERCOLONLREF;
let CL_COMPILERCOLONCONST;
let CL_COMPILER_P2_NO_RETURN;
let CL_COMPILER_P2_FORMS;
let CL_COMPILER_P2_FORM;
let CL_COMPILER_PERCENTP2_FORM;
let CL_COMPILER_P2_LITERAL;
let CL_COMPILER_P2_LITERAL_1;
let CL_COMPILER_MAKE_CIRCLE_TABLE;
let CL_COMPILER_P2_ENCODE_STRING;
let CL_COMPILER_P2_SYMBOL_TO_JS_FUNCTION_NAME;
let CL_COMPILER_P2_SYMBOL_TO_CALL_VALUE;
let CL_COMPILER_P2_SYMBOL_TO_JS_VALUE;
let CL_COMPILER_P2_LOCAL_FUNCTION;
let CL_COMPILER_P2_LOCAL_VAR;
let CL_COMPILER_P2_ESCAPE_STRING;
let CL_COMPILER_P2_TEMPORARY_VAR;
let CL_COMPILER_P2_GENVAR;
let CL_COMPILER_P2_EMIT_DECLARE_TEMPORARY_VARIABLES;
let CL_COMPILER_P2;
let CL_COMPILER_P2_EMIT_FOR_AUX;
let CL_COMPILER_SET_SOURCE_MAP;
let CL_COMPILER_JOIN_EMITTER_STREAM;
let CL_COMPILER_MAKE_EMITTER_STREAM;
let CL_COMPILER_P2_CL_GREATERJS;
let TMP_1090;
let TMP_1083;
let TMP_1063;
let TMP_1037;
let TMP_1008;
let TMP_995;
let TMP_987;
let L_G16__29;
let L_G15__28;
let TMP_70;
let L_G12__24;
let TMP_69;
let L_G11__20;
let L_G10__19;
let TMP_60;
let L_G7__14;
let TMP_59;
let L_G6__11;
let L_G5__10;
let TMP_50;
let L_G2__6;
let TMP_48;
let TMP_42;
let TMP_41;
let TMP_38;
let TMP_7;
// toplevel defun
let F_P2_CL_GREATERJS_9;
F_P2_CL_GREATERJS_9=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_10, arguments.length);
}
let TMP_35;
let TMP_33;
let TMP_31;
let TMP_30;
let TMP_29;
let TMP_28;
let L_G0__4;
let TMP_26;
let TMP_24;
let TMP_23;
let TMP_22;
let TMP_21;
let TMP_19;
let TMP_17;
let TMP_15;
let TMP_13;
let L_ARGS__3;
let TMP_11;
let L_HIR__1;
L_HIR__1=arguments[0];
{
TMP_11=lisp.callFunctionWithCallStack(G_12,L_HIR__1);
L_ARGS__3=lisp.values1(TMP_11);
{
TMP_13=lisp.callFunctionWithCallStack(G_14,L_ARGS__3);
if(lisp.values1(TMP_13) !== lisp.S_nil){
TMP_17=lisp.callFunctionWithCallStack(G_18,L_ARGS__3);
TMP_19=lisp.callFunctionWithCallStack(G_20,TMP_17);
TMP_21=lisp.CL_eq(G_16,TMP_19);
if(lisp.values1(TMP_21) !== lisp.S_nil){
TMP_23=lisp.callFunctionWithCallStack(G_18,L_ARGS__3);
TMP_24=lisp.callFunctionWithCallStack(G_25,TMP_23);
TMP_26=lisp.callFunctionWithCallStack(G_27,TMP_24);
TMP_22=lisp.values1(TMP_26);
}else{
TMP_22=lisp.values1(lisp.S_nil);
}
TMP_15=lisp.values1(TMP_22);
}else{
TMP_15=lisp.values1(lisp.S_nil);
}
L_G0__4=lisp.values1(TMP_15);
if(lisp.values1(L_G0__4) !== lisp.S_nil){
TMP_29=lisp.callFunctionWithCallStack(G_18,L_ARGS__3);
TMP_30=lisp.callFunctionWithCallStack(G_25,TMP_29);
TMP_31=G_32.func(TMP_30);
TMP_33=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 99, 111, 100, 101, 65, 114, 114, 97, 121, 84, 111, 83, 116, 114, 105, 110, 103, 40, 126, 65, 41])),TMP_31);
TMP_28=TMP_33;
}else{
TMP_35=G_36.func(L_HIR__1);
TMP_28=TMP_35;
}
}
}
return TMP_28;
});
CL_COMPILER_P2_CL_GREATERJS=lisp.values1(F_P2_CL_GREATERJS_9);
let F_MAKE_EMITTER_STREAM_54;
F_MAKE_EMITTER_STREAM_54=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_46, arguments.length);
}
let TMP_57;
let TMP_55;
let L_BASE_STREAM__12;
L_BASE_STREAM__12=arguments[0];
TMP_55=lisp.callFunctionWithCallStack(G_56,G_46,G_53);
TMP_57=lisp.CL_funcall(lisp.values1(TMP_55),L_BASE_STREAM__12);
return TMP_57;
});
CL_COMPILER_MAKE_EMITTER_STREAM=lisp.values1(F_MAKE_EMITTER_STREAM_54);
let F_JOIN_EMITTER_STREAM_65;
F_JOIN_EMITTER_STREAM_65=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_58, arguments.length);
}
let TMP_67;
let TMP_66;
let L_FORKED_STREAM__22;
let L_BASE_STREAM__21;
L_BASE_STREAM__21=arguments[0];
L_FORKED_STREAM__22=arguments[1];
TMP_66=lisp.callFunctionWithCallStack(G_56,G_58,G_53);
TMP_67=lisp.CL_funcall(lisp.values1(TMP_66),L_BASE_STREAM__21,L_FORKED_STREAM__22);
return TMP_67;
});
CL_COMPILER_JOIN_EMITTER_STREAM=lisp.values1(F_JOIN_EMITTER_STREAM_65);
let F_SET_SOURCE_MAP_71;
F_SET_SOURCE_MAP_71=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_68, arguments.length);
}
let TMP_73;
let TMP_72;
let L_HIR__30;
L_HIR__30=arguments[0];
TMP_72=lisp.callFunctionWithCallStack(G_56,G_68,G_53);
TMP_73=lisp.CL_funcall(lisp.values1(TMP_72),L_HIR__30);
return TMP_73;
});
CL_COMPILER_SET_SOURCE_MAP=lisp.values1(F_SET_SOURCE_MAP_71);
let F_P2_EMIT_FOR_AUX_77;
F_P2_EMIT_FOR_AUX_77=(function(){
if(arguments.length !== 5) {
lisp.argumentsError(G_78, arguments.length);
}
let TMP_83;
let TMP_80;
let L_FUNCTION__36;
let L_STEP__35;
let L_END__34;
let L_START__33;
let L_LOOP_VAR__32;
L_LOOP_VAR__32=arguments[0];
L_START__33=arguments[1];
L_END__34=arguments[2];
L_STEP__35=arguments[3];
L_FUNCTION__36=arguments[4];
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([102, 111, 114, 32, 40, 108, 101, 116, 32])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,L_LOOP_VAR__32,lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([32, 61, 32])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_79,L_START__33,lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([59, 32])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,L_LOOP_VAR__32,lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([32, 60, 32])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,L_END__34,lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([59, 32])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,L_LOOP_VAR__32,lisp.symbolValue(G_37));
TMP_80=lisp.callFunctionWithCallStack(G_81,L_STEP__35,1);
if(lisp.values1(TMP_80) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([32, 43, 43])),lisp.symbolValue(G_37));
}else{
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([32, 43, 61, 32])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_79,L_STEP__35,lisp.symbolValue(G_37));
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([41, 32, 123])),lisp.symbolValue(G_37));
lisp.CL_funcall(lisp.values1(L_FUNCTION__36));
TMP_83=lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
return TMP_83;
});
CL_COMPILER_P2_EMIT_FOR_AUX=lisp.values1(F_P2_EMIT_FOR_AUX_77);
let F_P2_88;
F_P2_88=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_89, arguments.length);
}
let TMP_108;
let L_FN__41;
let TMP_106;
let TMP_104;
let TMP_100;
let TMP_99;
let TMP_97;
let TMP_92;
let L_CONTEXT__39;
let L_HIR__38;
L_HIR__38=arguments[0];
L_CONTEXT__39=arguments[1];
TMP_92=lisp.callFunctionWithCallStack(G_93,L_CONTEXT__39,lisp.makeCons(G_90, lisp.makeCons(G_91, lisp.S_nil)));
if(lisp.values1(TMP_92) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),lisp.makeCons(G_93, lisp.makeCons(G_94, lisp.makeCons(lisp.makeCons(G_95, lisp.makeCons(lisp.makeCons(G_90, lisp.makeCons(G_91, lisp.S_nil)), lisp.S_nil)), lisp.S_nil))));
}
TMP_97=lisp.callFunctionWithCallStack(G_98,L_HIR__38);
if(lisp.values1(TMP_97) !== lisp.S_nil){
TMP_99=lisp.values1(G_90);
}else{
TMP_99=lisp.values1(G_91);
}
TMP_100=lisp.CL_eq(TMP_99,L_CONTEXT__39);
if(lisp.values1(TMP_100) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),lisp.makeCons(G_101, lisp.makeCons(lisp.makeCons(G_102, lisp.makeCons(lisp.makeCons(G_98, lisp.makeCons(G_103, lisp.S_nil)), lisp.makeCons(G_90, lisp.makeCons(G_91, lisp.S_nil)))), lisp.makeCons(G_94, lisp.S_nil))));
}
{
TMP_104=lisp.callFunctionWithCallStack(G_20,L_HIR__38);
TMP_106=lisp.callFunctionWithCallStack(G_56,TMP_104,G_105);
L_FN__41=lisp.values1(TMP_106);
if(lisp.values1(L_FN__41) !== lisp.S_nil){
}else{
lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([84, 104, 101, 32, 97, 115, 115, 101, 114, 116, 105, 111, 110, 32, 126, 83, 32, 102, 97, 105, 108, 101, 100, 46])),G_107);
}
TMP_108=lisp.CL_funcall(lisp.values1(L_FN__41),L_HIR__38);
}
return TMP_108;
});
CL_COMPILER_P2=lisp.values1(F_P2_88);
let F_P2_EMIT_DECLARE_TEMPORARY_VARIABLES_109;
F_P2_EMIT_DECLARE_TEMPORARY_VARIABLES_109=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_110, arguments.length);
}
let TMP_120;
let L_VAR__45;
let TMP_118;
let TMP_116;
let L_G24__44;
let TMP_114;
let TMP_113;
{
TMP_113=lisp.CL_symbolFunction(G_112);
TMP_114=lisp.callFunctionWithCallStack(G_115,lisp.symbolValue(G_45),G_111,TMP_113);
L_G24__44=lisp.values1(TMP_114);
for(;;){
TMP_116=lisp.callFunctionWithCallStack(G_117,L_G24__44);
if(lisp.values1(TMP_116) !== lisp.S_nil){
}else{
{
TMP_118=lisp.callFunctionWithCallStack(G_119,L_G24__44);
L_VAR__45=lisp.values1(TMP_118);
TMP_120=lisp.callFunctionWithCallStack(G_121,L_G24__44);
L_G24__44=lisp.values1(TMP_120);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 101, 116, 32, 126, 65, 59, 126, 37])),L_VAR__45);
}
continue;
}
break;
}
}
return lisp.values1(lisp.S_nil);
});
CL_COMPILER_P2_EMIT_DECLARE_TEMPORARY_VARIABLES=lisp.values1(F_P2_EMIT_DECLARE_TEMPORARY_VARIABLES_109);
let F_P2_GENVAR_122;
F_P2_GENVAR_122=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_123, arguments.length);
}
let TMP_124;
let L_PREFIX__47;
L_PREFIX__47=arguments.length > 0 ? arguments[0] : (lisp.values1(G_3.func(lisp.codeArrayToString([84, 77, 80]))));
TMP_124=lisp.callFunctionWithCallStack(G_125,L_PREFIX__47);
return TMP_124;
});
CL_COMPILER_P2_GENVAR=lisp.values1(F_P2_GENVAR_122);
let F_P2_TEMPORARY_VAR_126;
F_P2_TEMPORARY_VAR_126=(function(){
if(arguments.length < 0 || 1 < arguments.length) {
lisp.argumentsError(G_127, arguments.length);
}
let L_G31__52;
let TMP_129;
let L_VAR__51;
let TMP_128;
let L_PREFIX__49;
L_PREFIX__49=arguments.length > 0 ? arguments[0] : (lisp.values1(G_3.func(lisp.codeArrayToString([84, 77, 80]))));
{
TMP_128=G_123.func(L_PREFIX__49);
L_VAR__51=lisp.values1(TMP_128);
{
TMP_129=lisp.CL_cons(L_VAR__51,lisp.symbolValue(G_45));
L_G31__52=lisp.values1(TMP_129);
lisp.setSymbolValue(G_45, lisp.values1(L_G31__52));
}
}
return lisp.values1(L_VAR__51);
});
CL_COMPILER_P2_TEMPORARY_VAR=lisp.values1(F_P2_TEMPORARY_VAR_126);
let F_P2_ESCAPE_STRING_130;
F_P2_ESCAPE_STRING_130=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_131, arguments.length);
}
let TMP_146;
let TMP_142;
let L_OUT__60;
let TMP_141;
let F_F__59;
let TMP_134;
let TMP_132;
let L_PREFIX__54;
let L_STRING__53;
L_STRING__53=arguments[0];
L_PREFIX__54=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
TMP_132=lisp.callFunctionWithCallStack(G_133,L_STRING__53);
L_STRING__53=lisp.values1(TMP_132);
{
TMP_134=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_140;
let L_G33__58;
let TMP_139;
let TMP_138;
let L_G32__57;
let TMP_137;
let TMP_135;
let L_C__56;
L_C__56=arguments[0];
{
TMP_135=lisp.callFunctionWithCallStack(G_136,L_C__56,lisp.symbolValue(G_2));
TMP_137=lisp.callFunctionWithCallStack(G_121,TMP_135);
L_G32__57=lisp.values1(TMP_137);
if(lisp.values1(L_G32__57) !== lisp.S_nil){
TMP_138=lisp.values1(L_G32__57);
}else{
{
TMP_139=lisp.callFunctionWithCallStack(G_133,L_C__56);
L_G33__58=lisp.values1(TMP_139);
if(lisp.values1(L_G33__58) !== lisp.S_nil){
TMP_140=lisp.values1(L_G33__58);
}else{
TMP_140=lisp.values1(lisp.S_nil);
}
}
TMP_138=TMP_140;
}
}
return TMP_138;
});
F_F__59=lisp.values1(TMP_134);
{
TMP_141=lisp.callFunctionWithCallStack(G_52);
L_OUT__60=lisp.values1(TMP_141);
if(lisp.values1(L_PREFIX__54) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,L_PREFIX__54,L_OUT__60);
}else{
}
TMP_142=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_144;
let TMP_143;
let L_C__61;
L_C__61=arguments[0];
TMP_143=F_F__59(L_C__61);
TMP_144=lisp.callFunctionWithCallStack(G_64,TMP_143,L_OUT__60);
return TMP_144;
});
lisp.callFunctionWithCallStack(G_145,lisp.S_nil,TMP_142,L_STRING__53);
TMP_146=lisp.callFunctionWithCallStack(G_62,L_OUT__60);
}
}
return TMP_146;
});
CL_COMPILER_P2_ESCAPE_STRING=lisp.values1(F_P2_ESCAPE_STRING_130);
let F_P2_LOCAL_VAR_147;
F_P2_LOCAL_VAR_147=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_148, arguments.length);
}
let TMP_149;
let L_PREFIX__63;
let L_SYMBOL__62;
L_SYMBOL__62=arguments[0];
L_PREFIX__63=arguments.length > 1 ? arguments[1] : (lisp.values1(G_3.func(lisp.codeArrayToString([76, 95]))));
TMP_149=G_131.func(L_SYMBOL__62,L_PREFIX__63);
return TMP_149;
});
CL_COMPILER_P2_LOCAL_VAR=lisp.values1(F_P2_LOCAL_VAR_147);
let F_P2_LOCAL_FUNCTION_150;
F_P2_LOCAL_FUNCTION_150=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_151, arguments.length);
}
let TMP_152;
let L_PREFIX__66;
let L_SYMBOL__65;
L_SYMBOL__65=arguments[0];
L_PREFIX__66=arguments.length > 1 ? arguments[1] : (lisp.values1(G_3.func(lisp.codeArrayToString([70, 95]))));
TMP_152=G_131.func(L_SYMBOL__65,L_PREFIX__66);
return TMP_152;
});
CL_COMPILER_P2_LOCAL_FUNCTION=lisp.values1(F_P2_LOCAL_FUNCTION_150);
let F_P2_SYMBOL_TO_JS_VALUE_153;
F_P2_SYMBOL_TO_JS_VALUE_153=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_154, arguments.length);
}
let TMP_161;
let L_G35__74;
let TMP_159;
let L_G_STORE38__73;
let TMP_158;
let L_G37__72;
let L_G36__71;
let TMP_157;
let L_G34__70;
let TMP_155;
let L_SYMBOL__68;
L_SYMBOL__68=arguments[0];
{
TMP_155=lisp.callFunctionWithCallStack(G_156,L_SYMBOL__68,lisp.symbolValue(G_40));
L_G34__70=lisp.values1(TMP_155);
if(lisp.values1(L_G34__70) !== lisp.S_nil){
TMP_157=lisp.values1(L_G34__70);
}else{
{
{
L_G36__71=lisp.values1(L_SYMBOL__68);
L_G37__72=lisp.values1(lisp.symbolValue(G_40));
TMP_158=lisp.callFunctionWithCallStack(G_125,G_3.func(lisp.codeArrayToString([71])));
L_G_STORE38__73=lisp.values1(TMP_158);
TMP_159=lisp.callFunctionWithCallStack(G_160,L_G_STORE38__73,L_G36__71,L_G37__72);
}
L_G35__74=lisp.values1(lisp.values1(TMP_159));
if(lisp.values1(L_G35__74) !== lisp.S_nil){
TMP_161=lisp.values1(L_G35__74);
}else{
TMP_161=lisp.values1(lisp.S_nil);
}
}
TMP_157=TMP_161;
}
}
return TMP_157;
});
CL_COMPILER_P2_SYMBOL_TO_JS_VALUE=lisp.values1(F_P2_SYMBOL_TO_JS_VALUE_153);
let F_P2_SYMBOL_TO_CALL_VALUE_162;
F_P2_SYMBOL_TO_CALL_VALUE_162=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_163, arguments.length);
}
let TMP_165;
let L_VALUE__77;
let TMP_164;
let L_SYMBOL__75;
L_SYMBOL__75=arguments[0];
{
TMP_164=G_154.func(L_SYMBOL__75);
L_VALUE__77=lisp.values1(TMP_164);
TMP_165=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([126, 65, 46, 102, 117, 110, 99])),L_VALUE__77);
}
return TMP_165;
});
CL_COMPILER_P2_SYMBOL_TO_CALL_VALUE=lisp.values1(F_P2_SYMBOL_TO_CALL_VALUE_162);
let F_P2_SYMBOL_TO_JS_FUNCTION_NAME_166;
F_P2_SYMBOL_TO_JS_FUNCTION_NAME_166=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_167, arguments.length);
}
let TMP_176;
let TMP_175;
let TMP_174;
let TMP_172;
let TMP_171;
let TMP_170;
let TMP_168;
let L_SYMBOL__78;
L_SYMBOL__78=arguments[0];
TMP_168=lisp.callFunctionWithCallStack(G_169,L_SYMBOL__78);
if(lisp.values1(TMP_168) !== lisp.S_nil){
TMP_171=lisp.callFunctionWithCallStack(G_169,L_SYMBOL__78);
TMP_172=lisp.callFunctionWithCallStack(G_173,TMP_171);
TMP_174=G_131.func(TMP_172);
TMP_175=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([67, 76, 95, 126, 65, 95])),TMP_174);
TMP_170=lisp.values1(TMP_175);
}else{
TMP_170=lisp.values1(G_3.func(lisp.codeArrayToString([67, 76, 95])));
}
TMP_176=G_151.func(L_SYMBOL__78,TMP_170);
return TMP_176;
});
CL_COMPILER_P2_SYMBOL_TO_JS_FUNCTION_NAME=lisp.values1(F_P2_SYMBOL_TO_JS_FUNCTION_NAME_166);
let F_P2_ENCODE_STRING_177;
F_P2_ENCODE_STRING_177=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_32, arguments.length);
}
let TMP_193;
let L_G45__86;
let TMP_192;
let TMP_190;
let TMP_188;
let TMP_186;
let TMP_184;
let TMP_182;
let L_I__85;
let BLOCK_RESULT_NIL__84;
let L_LEN__83;
let TMP_180;
let L_S__82;
let TMP_178;
let L_STRING__80;
L_STRING__80=arguments[0];
{
TMP_178=lisp.callFunctionWithCallStack(G_52);
L_S__82=lisp.values1(TMP_178);
lisp.callFunctionWithCallStack(G_179,lisp.makeCharacter(91),L_S__82);
{
TMP_180=lisp.callFunctionWithCallStack(G_181,L_STRING__80);
L_LEN__83=lisp.values1(TMP_180);
BLOCK_NIL__84: for(;;){{
L_I__85=lisp.values1(0);
for(;;){
TMP_182=lisp.callFunctionWithCallStack(G_183,L_I__85,L_LEN__83);
if(lisp.values1(TMP_182) !== lisp.S_nil){
BLOCK_RESULT_NIL__84=lisp.values1(lisp.S_nil);
break BLOCK_NIL__84;
}else{
TMP_184=lisp.callFunctionWithCallStack(G_185,L_STRING__80,L_I__85);
TMP_186=lisp.callFunctionWithCallStack(G_187,TMP_184);
lisp.callFunctionWithCallStack(G_79,TMP_186,L_S__82);
TMP_188=lisp.callFunctionWithCallStack(G_189,L_I__85);
TMP_190=lisp.callFunctionWithCallStack(G_191,TMP_188,L_LEN__83);
if(lisp.values1(TMP_190) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44, 32])),L_S__82);
}else{
}
{
TMP_192=lisp.callFunctionWithCallStack(G_189,L_I__85);
L_G45__86=lisp.values1(TMP_192);
L_I__85=lisp.values1(L_G45__86);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__84=lisp.values1(lisp.S_nil);
break;
}
}
lisp.callFunctionWithCallStack(G_179,lisp.makeCharacter(93),L_S__82);
TMP_193=lisp.callFunctionWithCallStack(G_62,L_S__82);
}
return TMP_193;
});
CL_COMPILER_P2_ENCODE_STRING=lisp.values1(F_P2_ENCODE_STRING_177);
let F_MAKE_CIRCLE_TABLE_194;
F_MAKE_CIRCLE_TABLE_194=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_195, arguments.length);
}
let F_F__91;
let TMP_198;
let L_CIRCLE__90;
let TMP_197;
let L_VISITED__89;
let TMP_196;
let L_X__87;
L_X__87=arguments[0];
{
TMP_196=lisp.callFunctionWithCallStack(G_8);
L_VISITED__89=lisp.values1(TMP_196);
TMP_197=lisp.callFunctionWithCallStack(G_8);
L_CIRCLE__90=lisp.values1(TMP_197);
{
TMP_198=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_205;
let TMP_204;
let TMP_203;
let L_G51__98;
let L_G50__97;
let TMP_202;
let L_G49__96;
let TMP_201;
let L_G47__94;
let L_G46__93;
let TMP_200;
let TMP_199;
let L_X__92;
L_X__92=arguments[0];
TMP_199=lisp.callFunctionWithCallStack(G_156,L_X__92,L_VISITED__89);
if(lisp.values1(TMP_199) !== lisp.S_nil){
{
L_G46__93=lisp.values1(L_X__92);
L_G47__94=lisp.values1(L_CIRCLE__90);
lisp.callFunctionWithCallStack(G_160,G_5,L_G46__93,L_G47__94);
}
TMP_200=lisp.values1(L_X__92);
}else{
{
TMP_201=lisp.CL_consp(L_X__92);
L_G49__96=lisp.values1(TMP_201);
if(lisp.values1(L_G49__96) !== lisp.S_nil){
{
L_G50__97=lisp.values1(L_X__92);
L_G51__98=lisp.values1(L_VISITED__89);
lisp.callFunctionWithCallStack(G_160,G_5,L_G50__97,L_G51__98);
}
TMP_203=lisp.callFunctionWithCallStack(G_119,L_X__92);
F_F__91(TMP_203);
TMP_204=lisp.callFunctionWithCallStack(G_121,L_X__92);
TMP_205=F_F__91(TMP_204);
TMP_202=TMP_205;
}else{
TMP_202=lisp.values1(L_X__92);
}
}
TMP_200=TMP_202;
}
return TMP_200;
});
F_F__91=lisp.values1(TMP_198);
F_F__91(L_X__87);
}
}
return lisp.values1(L_CIRCLE__90);
});
CL_COMPILER_MAKE_CIRCLE_TABLE=lisp.values1(F_MAKE_CIRCLE_TABLE_194);
let F_P2_LITERAL_1_206;
F_P2_LITERAL_1_206=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_207, arguments.length);
}
let TMP_265;
let TMP_264;
let L_G70__122;
let TMP_262;
let TMP_261;
let TMP_260;
let TMP_259;
let TMP_258;
let L_I__121;
let BLOCK_RESULT_NIL__120;
let L_G63__119;
let TMP_257;
let TMP_255;
let TMP_254;
let TMP_253;
let L_OUT__118;
let TMP_251;
let TMP_250;
let L_G62__117;
let TMP_248;
let TMP_247;
let TMP_246;
let TMP_245;
let TMP_244;
let TMP_243;
let TMP_242;
let TMP_241;
let TMP_240;
let TMP_239;
let TMP_238;
let L_SEEN__115;
let TMP_236;
let L_VAR__114;
let TMP_235;
let L_OUT__113;
let TMP_234;
let TMP_233;
let TMP_232;
let L_ELT__112;
let TMP_231;
let TMP_230;
let L_G60__111;
let TMP_229;
let TMP_228;
let L_G59__110;
let TMP_227;
let TMP_226;
let TMP_225;
let TMP_224;
let L_G58__109;
let TMP_223;
let TMP_221;
let TMP_220;
let L_G57__108;
let TMP_219;
let TMP_218;
let TMP_217;
let TMP_216;
let TMP_215;
let L_G56__107;
let TMP_214;
let TMP_213;
let TMP_212;
let L_G55__106;
let TMP_211;
let TMP_210;
let L_G54__105;
let TMP_208;
let L_SEEN__103;
let L_CIRCLE__102;
let L_X__101;
L_X__101=arguments[0];
L_CIRCLE__102=arguments[1];
L_SEEN__103=arguments[2];
{
TMP_208=lisp.callFunctionWithCallStack(G_209,L_X__101);
L_G54__105=lisp.values1(TMP_208);
if(lisp.values1(L_G54__105) !== lisp.S_nil){
TMP_210=lisp.values1(G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 83, 95, 110, 105, 108])));
}else{
{
TMP_211=lisp.CL_symbolp(L_X__101);
L_G55__106=lisp.values1(TMP_211);
if(lisp.values1(L_G55__106) !== lisp.S_nil){
TMP_213=G_154.func(L_X__101);
TMP_212=TMP_213;
}else{
{
TMP_214=lisp.callFunctionWithCallStack(G_27,L_X__101);
L_G56__107=lisp.values1(TMP_214);
if(lisp.values1(L_G56__107) !== lisp.S_nil){
TMP_216=G_163.func(G_3);
TMP_217=G_32.func(L_X__101);
TMP_218=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([126, 65, 40, 108, 105, 115, 112, 46, 99, 111, 100, 101, 65, 114, 114, 97, 121, 84, 111, 83, 116, 114, 105, 110, 103, 40, 126, 65, 41, 41])),TMP_216,TMP_217);
TMP_215=TMP_218;
}else{
{
TMP_219=lisp.CL_numberp(L_X__101);
L_G57__108=lisp.values1(TMP_219);
if(lisp.values1(L_G57__108) !== lisp.S_nil){
TMP_221=lisp.callFunctionWithCallStack(G_222,L_X__101);
TMP_220=TMP_221;
}else{
{
TMP_223=lisp.CL_characterp(L_X__101);
L_G58__109=lisp.values1(TMP_223);
if(lisp.values1(L_G58__109) !== lisp.S_nil){
TMP_225=lisp.callFunctionWithCallStack(G_187,L_X__101);
TMP_226=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 109, 97, 107, 101, 67, 104, 97, 114, 97, 99, 116, 101, 114, 40, 126, 68, 41])),TMP_225);
TMP_224=TMP_226;
}else{
{
TMP_227=lisp.CL_consp(L_X__101);
L_G59__110=lisp.values1(TMP_227);
if(lisp.values1(L_G59__110) !== lisp.S_nil){
{
TMP_229=lisp.callFunctionWithCallStack(G_156,L_X__101,L_CIRCLE__102);
L_G60__111=lisp.values1(TMP_229);
if(lisp.values1(L_G60__111) !== lisp.S_nil){
{
TMP_231=lisp.callFunctionWithCallStack(G_136,L_X__101,L_SEEN__103);
L_ELT__112=lisp.values1(TMP_231);
if(lisp.values1(L_ELT__112) !== lisp.S_nil){
TMP_233=lisp.callFunctionWithCallStack(G_121,L_ELT__112);
TMP_232=TMP_233;
}else{
{
TMP_234=lisp.callFunctionWithCallStack(G_52);
L_OUT__113=lisp.values1(TMP_234);
{
TMP_235=lisp.callFunctionWithCallStack(G_125,G_3.func(lisp.codeArrayToString([76, 73, 84, 69, 82, 65, 76])));
L_VAR__114=lisp.values1(TMP_235);
TMP_236=lisp.callFunctionWithCallStack(G_237,L_X__101,L_VAR__114,L_SEEN__103);
L_SEEN__115=lisp.values1(TMP_236);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([40, 102, 117, 110, 99, 116, 105, 111, 110, 32, 40, 41, 32, 123])),L_OUT__113);
lisp.callFunctionWithCallStack(G_34,L_OUT__113,G_3.func(lisp.codeArrayToString([99, 111, 110, 115, 116, 32, 126, 65, 32, 61, 32, 108, 105, 115, 112, 46, 109, 97, 107, 101, 67, 111, 110, 115, 40, 110, 117, 108, 108, 44, 110, 117, 108, 108, 41, 59, 126, 37])),L_VAR__114);
TMP_238=lisp.callFunctionWithCallStack(G_119,L_X__101);
TMP_239=G_207.func(TMP_238,L_CIRCLE__102,L_SEEN__115);
lisp.callFunctionWithCallStack(G_34,L_OUT__113,G_3.func(lisp.codeArrayToString([126, 65, 46, 99, 97, 114, 32, 61, 32, 126, 65, 126, 37])),L_VAR__114,TMP_239);
TMP_240=lisp.callFunctionWithCallStack(G_121,L_X__101);
TMP_241=G_207.func(TMP_240,L_CIRCLE__102,L_SEEN__115);
lisp.callFunctionWithCallStack(G_34,L_OUT__113,G_3.func(lisp.codeArrayToString([126, 65, 46, 99, 100, 114, 32, 61, 32, 126, 65, 126, 37])),L_VAR__114,TMP_241);
lisp.callFunctionWithCallStack(G_34,L_OUT__113,G_3.func(lisp.codeArrayToString([114, 101, 116, 117, 114, 110, 32, 126, 65, 59, 126, 37])),L_VAR__114);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125, 41, 40, 41])),L_OUT__113);
}
TMP_242=lisp.callFunctionWithCallStack(G_62,L_OUT__113);
}
TMP_232=TMP_242;
}
}
TMP_230=TMP_232;
}else{
TMP_243=lisp.callFunctionWithCallStack(G_119,L_X__101);
TMP_244=G_207.func(TMP_243,L_CIRCLE__102,L_SEEN__103);
TMP_245=lisp.callFunctionWithCallStack(G_121,L_X__101);
TMP_246=G_207.func(TMP_245,L_CIRCLE__102,L_SEEN__103);
TMP_247=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 109, 97, 107, 101, 67, 111, 110, 115, 40, 126, 65, 44, 32, 126, 65, 41])),TMP_244,TMP_246);
TMP_230=TMP_247;
}
}
TMP_228=TMP_230;
}else{
{
TMP_248=lisp.callFunctionWithCallStack(G_249,L_X__101);
L_G62__117=lisp.values1(TMP_248);
if(lisp.values1(L_G62__117) !== lisp.S_nil){
{
TMP_251=lisp.callFunctionWithCallStack(G_52);
L_OUT__118=lisp.values1(TMP_251);
TMP_253=G_163.func(G_252);
lisp.callFunctionWithCallStack(G_64,TMP_253,L_OUT__118);
TMP_254=lisp.callFunctionWithCallStack(G_181,L_X__101);
TMP_255=lisp.callFunctionWithCallStack(G_256,TMP_254);
if(lisp.values1(TMP_255) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([40])),L_OUT__118);
}else{
{
TMP_257=lisp.callFunctionWithCallStack(G_181,L_X__101);
L_G63__119=lisp.values1(TMP_257);
BLOCK_NIL__120: for(;;){{
L_I__121=lisp.values1(0);
for(;;){
TMP_258=lisp.callFunctionWithCallStack(G_183,L_I__121,L_G63__119);
if(lisp.values1(TMP_258) !== lisp.S_nil){
BLOCK_RESULT_NIL__120=lisp.values1(lisp.S_nil);
break BLOCK_NIL__120;
}else{
TMP_259=lisp.callFunctionWithCallStack(G_256,L_I__121);
if(lisp.values1(TMP_259) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([40])),L_OUT__118);
}else{
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44])),L_OUT__118);
}
TMP_260=lisp.callFunctionWithCallStack(G_185,L_X__101,L_I__121);
TMP_261=G_207.func(TMP_260,L_CIRCLE__102,L_SEEN__103);
lisp.callFunctionWithCallStack(G_64,TMP_261,L_OUT__118);
{
TMP_262=lisp.callFunctionWithCallStack(G_263,L_I__121,1);
L_G70__122=lisp.values1(TMP_262);
L_I__121=lisp.values1(L_G70__122);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__120=lisp.values1(lisp.S_nil);
break;
}
}
}
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([41])),L_OUT__118);
TMP_264=lisp.callFunctionWithCallStack(G_62,L_OUT__118);
}
TMP_250=TMP_264;
}else{
TMP_265=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 108, 105, 116, 101, 114, 97, 108, 58, 32, 126, 83])),L_X__101);
TMP_250=TMP_265;
}
}
TMP_228=TMP_250;
}
}
TMP_224=TMP_228;
}
}
TMP_220=TMP_224;
}
}
TMP_215=TMP_220;
}
}
TMP_212=TMP_215;
}
}
TMP_210=TMP_212;
}
}
return TMP_210;
});
CL_COMPILER_P2_LITERAL_1=lisp.values1(F_P2_LITERAL_1_206);
let F_P2_LITERAL_266;
F_P2_LITERAL_266=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_267, arguments.length);
}
let TMP_269;
let TMP_268;
let L_X__124;
L_X__124=arguments[0];
TMP_268=G_195.func(L_X__124);
TMP_269=G_207.func(L_X__124,TMP_268,lisp.S_nil);
return TMP_269;
});
CL_COMPILER_P2_LITERAL=lisp.values1(F_P2_LITERAL_266);
let F_PERCENTP2_FORM_270;
F_PERCENTP2_FORM_270=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_271, arguments.length);
}
let TMP_274;
let TMP_273;
let TMP_272;
let L_FORM__126;
L_FORM__126=arguments[0];
TMP_272=lisp.callFunctionWithCallStack(G_98,L_FORM__126);
if(lisp.values1(TMP_272) !== lisp.S_nil){
TMP_273=lisp.values1(G_90);
}else{
TMP_273=lisp.values1(G_91);
}
TMP_274=G_89.func(L_FORM__126,TMP_273);
return TMP_274;
});
CL_COMPILER_PERCENTP2_FORM=lisp.values1(F_PERCENTP2_FORM_270);
let F_P2_FORM_275;
F_P2_FORM_275=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_276, arguments.length);
}
let TMP_285;
let TMP_284;
let TMP_283;
let TMP_282;
let L_G73__131;
let TMP_281;
let TMP_280;
let TMP_279;
let L_G72__130;
let TMP_277;
let L_FORM__128;
L_FORM__128=arguments[0];
{
TMP_277=lisp.callFunctionWithCallStack(G_278,L_FORM__128);
L_G72__130=lisp.values1(TMP_277);
if(lisp.values1(L_G72__130) !== lisp.S_nil){
TMP_280=G_89.func(L_FORM__128,G_90);
TMP_279=TMP_280;
}else{
{
TMP_281=lisp.callFunctionWithCallStack(G_98,L_FORM__128);
L_G73__131=lisp.values1(TMP_281);
if(lisp.values1(L_G73__131) !== lisp.S_nil){
TMP_283=G_271.func(L_FORM__128);
TMP_284=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 118, 97, 108, 117, 101, 115, 49, 40, 126, 65, 41])),TMP_283);
TMP_282=TMP_284;
}else{
G_271.func(L_FORM__128);
TMP_285=G_286.func();
TMP_282=TMP_285;
}
}
TMP_279=TMP_282;
}
}
return TMP_279;
});
CL_COMPILER_P2_FORM=lisp.values1(F_P2_FORM_275);
let F_P2_FORMS_287;
F_P2_FORMS_287=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_288, arguments.length);
}
let L_G81__137;
let TMP_293;
let TMP_292;
let TMP_291;
let TMP_290;
let TMP_289;
let L_FORMS__136;
let BLOCK_RESULT_NIL__135;
let L_FORMS__133;
L_FORMS__133=arguments[0];
BLOCK_NIL__135: for(;;){{
L_FORMS__136=lisp.values1(L_FORMS__133);
for(;;){
TMP_289=lisp.callFunctionWithCallStack(G_14,L_FORMS__136);
if(lisp.values1(TMP_289) !== lisp.S_nil){
TMP_290=lisp.callFunctionWithCallStack(G_119,L_FORMS__136);
TMP_291=G_276.func(TMP_290);
BLOCK_RESULT_NIL__135=TMP_291;
break BLOCK_NIL__135;
}else{
TMP_292=lisp.callFunctionWithCallStack(G_119,L_FORMS__136);
G_89.func(TMP_292,G_91);
{
TMP_293=lisp.callFunctionWithCallStack(G_121,L_FORMS__136);
L_G81__137=lisp.values1(TMP_293);
L_FORMS__136=lisp.values1(L_G81__137);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__135=lisp.values1(lisp.values1(lisp.S_nil));
break;
}
return BLOCK_RESULT_NIL__135;
});
CL_COMPILER_P2_FORMS=lisp.values1(F_P2_FORMS_287);
let F_P2_NO_RETURN_294;
F_P2_NO_RETURN_294=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_286, arguments.length);
}
let TMP_297;
let TMP_295;
TMP_295=lisp.callFunctionWithCallStack(G_296,G_16,G_5,lisp.S_nil,lisp.S_nil);
TMP_297=G_276.func(TMP_295);
return TMP_297;
});
CL_COMPILER_P2_NO_RETURN=lisp.values1(F_P2_NO_RETURN_294);
let F_COMPILERCOLONCONST_298;
F_COMPILERCOLONCONST_298=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_299, arguments.length);
}
let TMP_301;
let TMP_300;
let L_HIR__139;
L_HIR__139=arguments[0];
TMP_300=lisp.callFunctionWithCallStack(G_25,L_HIR__139);
TMP_301=G_267.func(TMP_300);
return TMP_301;
});
CL_COMPILERCOLONCONST=lisp.values1(F_COMPILERCOLONCONST_298);
let F_COMPILERCOLONLREF_302;
F_COMPILERCOLONLREF_302=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_303, arguments.length);
}
let TMP_319;
let TMP_318;
let TMP_317;
let TMP_316;
let TMP_315;
let L_G88__150;
let TMP_314;
let TMP_312;
let TMP_310;
let TMP_309;
let L_G87__149;
let TMP_308;
let L_G86__148;
let TMP_305;
let L_BINDING__147;
let TMP_304;
let L_HIR__145;
L_HIR__145=arguments[0];
{
TMP_304=lisp.callFunctionWithCallStack(G_25,L_HIR__145);
L_BINDING__147=lisp.values1(TMP_304);
{
TMP_305=lisp.callFunctionWithCallStack(G_306,L_BINDING__147);
L_G86__148=lisp.values1(TMP_305);
{
TMP_308=lisp.callFunctionWithCallStack(G_93,L_G86__148,lisp.makeCons(G_307, lisp.S_nil));
L_G87__149=lisp.values1(TMP_308);
if(lisp.values1(L_G87__149) !== lisp.S_nil){
TMP_310=lisp.callFunctionWithCallStack(G_311,L_BINDING__147);
TMP_312=G_151.func(TMP_310);
TMP_309=TMP_312;
}else{
{
TMP_314=lisp.callFunctionWithCallStack(G_93,L_G86__148,lisp.makeCons(G_313, lisp.S_nil));
L_G88__150=lisp.values1(TMP_314);
if(lisp.values1(L_G88__150) !== lisp.S_nil){
TMP_316=lisp.callFunctionWithCallStack(G_25,L_HIR__145);
TMP_317=lisp.callFunctionWithCallStack(G_311,TMP_316);
TMP_318=G_148.func(TMP_317);
TMP_315=TMP_318;
}else{
TMP_319=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G86__148,lisp.makeCons(G_307, lisp.makeCons(G_313, lisp.S_nil)));
TMP_315=TMP_319;
}
}
TMP_309=TMP_315;
}
}
}
}
return TMP_309;
});
CL_COMPILERCOLONLREF=lisp.values1(F_COMPILERCOLONLREF_302);
let F_COMPILERCOLONGREF_321;
F_COMPILERCOLONGREF_321=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_322, arguments.length);
}
let TMP_325;
let L_IDENT__158;
let TMP_324;
let TMP_323;
let L_HIR__156;
L_HIR__156=arguments[0];
{
TMP_323=lisp.callFunctionWithCallStack(G_25,L_HIR__156);
TMP_324=G_154.func(TMP_323);
L_IDENT__158=lisp.values1(TMP_324);
TMP_325=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 115, 121, 109, 98, 111, 108, 86, 97, 108, 117, 101, 40, 126, 65, 41])),L_IDENT__158);
}
return TMP_325;
});
CL_COMPILERCOLONGREF=lisp.values1(F_COMPILERCOLONGREF_321);
let F_COMPILERCOLONLSET_327;
F_COMPILERCOLONLSET_327=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_328, arguments.length);
}
let TMP_337;
let L_TMP_VAR__170;
let TMP_336;
let TMP_335;
let L_G98__169;
let TMP_334;
let L_VALUE__168;
let TMP_333;
let L_RESULT__167;
let TMP_332;
let TMP_331;
let L_RHS__166;
let TMP_330;
let L_LHS__165;
let TMP_329;
let L_HIR__163;
L_HIR__163=arguments[0];
{
TMP_329=lisp.callFunctionWithCallStack(G_25,L_HIR__163);
L_LHS__165=lisp.values1(TMP_329);
TMP_330=lisp.callFunctionWithCallStack(G_12,L_HIR__163);
L_RHS__166=lisp.values1(TMP_330);
{
TMP_331=lisp.callFunctionWithCallStack(G_311,L_LHS__165);
TMP_332=G_148.func(TMP_331);
L_RESULT__167=lisp.values1(TMP_332);
TMP_333=G_276.func(L_RHS__166);
L_VALUE__168=lisp.values1(TMP_333);
{
TMP_334=lisp.callFunctionWithCallStack(G_98,L_HIR__163);
L_G98__169=lisp.values1(TMP_334);
if(lisp.values1(L_G98__169) !== lisp.S_nil){
{
TMP_336=G_127.func();
L_TMP_VAR__170=lisp.values1(TMP_336);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 40, 126, 65, 61, 126, 65, 41, 59, 126, 37])),L_RESULT__167,L_TMP_VAR__170,L_VALUE__168);
}
TMP_335=lisp.values1(L_TMP_VAR__170);
}else{
TMP_337=lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 59, 126, 37])),L_RESULT__167,L_VALUE__168);
TMP_335=TMP_337;
}
}
}
}
return TMP_335;
});
CL_COMPILERCOLONLSET=lisp.values1(F_COMPILERCOLONLSET_327);
let F_COMPILERCOLONGSET_339;
F_COMPILERCOLONGSET_339=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_340, arguments.length);
}
let TMP_348;
let TMP_347;
let TMP_346;
let L_G104__182;
let TMP_345;
let L_VALUE__181;
let TMP_344;
let L_IDENT__180;
let TMP_343;
let L_RHS__179;
let TMP_342;
let L_LHS__178;
let TMP_341;
let L_HIR__176;
L_HIR__176=arguments[0];
{
TMP_341=lisp.callFunctionWithCallStack(G_25,L_HIR__176);
L_LHS__178=lisp.values1(TMP_341);
TMP_342=lisp.callFunctionWithCallStack(G_12,L_HIR__176);
L_RHS__179=lisp.values1(TMP_342);
{
TMP_343=G_154.func(L_LHS__178);
L_IDENT__180=lisp.values1(TMP_343);
TMP_344=G_276.func(L_RHS__179);
L_VALUE__181=lisp.values1(TMP_344);
{
TMP_345=lisp.callFunctionWithCallStack(G_98,L_HIR__176);
L_G104__182=lisp.values1(TMP_345);
if(lisp.values1(L_G104__182) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 115, 101, 116, 83, 121, 109, 98, 111, 108, 86, 97, 108, 117, 101, 40, 126, 65, 44, 32, 126, 65, 41, 59, 126, 37])),L_IDENT__180,L_VALUE__181);
TMP_347=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([126, 65, 46, 118, 97, 108, 117, 101])),L_IDENT__180);
TMP_346=TMP_347;
}else{
TMP_348=lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 115, 101, 116, 83, 121, 109, 98, 111, 108, 86, 97, 108, 117, 101, 40, 126, 65, 44, 32, 126, 65, 41, 59, 126, 37])),L_IDENT__180,L_VALUE__181);
TMP_346=TMP_348;
}
}
}
}
return TMP_346;
});
CL_COMPILERCOLONGSET=lisp.values1(F_COMPILERCOLONGSET_339);
let F_COMMON_LISPCOLONIF_350;
F_COMMON_LISPCOLONIF_350=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_351, arguments.length);
}
let TMP_363;
let L_TEST_RESULT__195;
let TMP_362;
let TMP_361;
let TMP_360;
let L_IF_RESULT__194;
let TMP_359;
let L_TEST_RESULT__193;
let TMP_358;
let TMP_357;
let TMP_356;
let L_ELSE__192;
let TMP_354;
let L_THEN__191;
let TMP_353;
let L_TEST__190;
let TMP_352;
let L_HIR__188;
L_HIR__188=arguments[0];
{
TMP_352=lisp.callFunctionWithCallStack(G_25,L_HIR__188);
L_TEST__190=lisp.values1(TMP_352);
TMP_353=lisp.callFunctionWithCallStack(G_12,L_HIR__188);
L_THEN__191=lisp.values1(TMP_353);
TMP_354=lisp.callFunctionWithCallStack(G_355,L_HIR__188);
L_ELSE__192=lisp.values1(TMP_354);
TMP_356=lisp.callFunctionWithCallStack(G_98,L_HIR__188);
if(lisp.values1(TMP_356) !== lisp.S_nil){
{
TMP_358=G_276.func(L_TEST__190);
L_TEST_RESULT__193=lisp.values1(TMP_358);
TMP_359=G_127.func();
L_IF_RESULT__194=lisp.values1(TMP_359);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 126, 65, 32, 33, 61, 61, 32, 108, 105, 115, 112, 46, 83, 95, 110, 105, 108, 41, 123, 126, 37])),L_TEST_RESULT__193);
TMP_360=G_276.func(L_THEN__191);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 59, 126, 37])),L_IF_RESULT__194,TMP_360);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([125, 101, 108, 115, 101, 123, 126, 37])));
TMP_361=G_276.func(L_ELSE__192);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 59, 126, 37])),L_IF_RESULT__194,TMP_361);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([125, 126, 37])));
}
TMP_357=lisp.values1(L_IF_RESULT__194);
}else{
{
TMP_362=G_276.func(L_TEST__190);
L_TEST_RESULT__195=lisp.values1(TMP_362);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 126, 65, 32, 33, 61, 61, 32, 108, 105, 115, 112, 46, 83, 95, 110, 105, 108, 41, 123, 126, 37])),L_TEST_RESULT__195);
G_89.func(L_THEN__191,G_91);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([125, 101, 108, 115, 101, 123, 126, 37])));
G_89.func(L_ELSE__192,G_91);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([125, 126, 37])));
TMP_363=lisp.CL_values();
}
TMP_357=TMP_363;
}
}
return TMP_357;
});
CL_COMMON_LISPCOLONIF=lisp.values1(F_COMMON_LISPCOLONIF_350);
let F_COMMON_LISPCOLONPROGN_364;
F_COMMON_LISPCOLONPROGN_364=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_365, arguments.length);
}
let TMP_367;
let TMP_366;
let L_HIR__200;
L_HIR__200=arguments[0];
TMP_366=lisp.callFunctionWithCallStack(G_25,L_HIR__200);
TMP_367=G_288.func(TMP_366);
return TMP_367;
});
CL_COMMON_LISPCOLONPROGN=lisp.values1(F_COMMON_LISPCOLONPROGN_364);
let F_P2_EMIT_CHECK_ARGUMENTS_369;
F_P2_EMIT_CHECK_ARGUMENTS_369=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(G_370, arguments.length);
}
let TMP_378;
let L_SYMBOL_VAR__215;
let TMP_377;
let L_G119__213;
let TMP_376;
let L_G118__212;
let TMP_375;
let L_MAX__211;
let TMP_373;
let L_MIN__210;
let TMP_371;
let L_PARSED_LAMBDA_LIST__208;
let L_NAME__207;
let L_HIR__206;
L_HIR__206=arguments[0];
L_NAME__207=arguments[1];
L_PARSED_LAMBDA_LIST__208=arguments[2];
{
TMP_371=lisp.callFunctionWithCallStack(G_372,L_PARSED_LAMBDA_LIST__208);
L_MIN__210=lisp.values1(TMP_371);
TMP_373=lisp.callFunctionWithCallStack(G_374,L_PARSED_LAMBDA_LIST__208);
L_MAX__211=lisp.values1(TMP_373);
{
TMP_375=lisp.callFunctionWithCallStack(G_209,L_MAX__211);
L_G118__212=lisp.values1(TMP_375);
if(lisp.values1(L_G118__212) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 32, 60, 32, 126, 68, 41, 32, 123, 126, 37])),L_MIN__210);
}else{
{
TMP_376=lisp.callFunctionWithCallStack(G_81,L_MIN__210,L_MAX__211);
L_G119__213=lisp.values1(TMP_376);
if(lisp.values1(L_G119__213) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 32, 33, 61, 61, 32, 126, 68, 41, 32, 123, 126, 37])),L_MIN__210);
}else{
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 32, 60, 32, 126, 68, 32, 124, 124, 32, 126, 68, 32, 60, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 41, 32, 123, 126, 37])),L_MIN__210,L_MAX__211);
}
}
}
}
{
TMP_377=G_267.func(L_NAME__207);
L_SYMBOL_VAR__215=lisp.values1(TMP_377);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 97, 114, 103, 117, 109, 101, 110, 116, 115, 69, 114, 114, 111, 114, 40, 126, 65, 44, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 41, 59, 126, 37])),L_SYMBOL_VAR__215);
}
TMP_378=lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}
return TMP_378;
});
CL_COMPILER_P2_EMIT_CHECK_ARGUMENTS=lisp.values1(F_P2_EMIT_CHECK_ARGUMENTS_369);
let F_P2_MAKE_SAVE_VAR_379;
F_P2_MAKE_SAVE_VAR_379=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_380, arguments.length);
}
let TMP_382;
let TMP_381;
let L_VAR__216;
L_VAR__216=arguments[0];
TMP_381=lisp.callFunctionWithCallStack(G_311,L_VAR__216);
TMP_382=G_148.func(TMP_381,G_3.func(lisp.codeArrayToString([115, 97, 118, 101, 95])));
return TMP_382;
});
CL_COMPILER_P2_MAKE_SAVE_VAR=lisp.values1(F_P2_MAKE_SAVE_VAR_379);
let F_P2_EMIT_UNWIND_VAR_383;
F_P2_EMIT_UNWIND_VAR_383=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_384, arguments.length);
}
let TMP_393;
let L_SAVE_VAR__222;
let TMP_392;
let L_JS_VAR__221;
let TMP_391;
let TMP_389;
let TMP_388;
let TMP_387;
let TMP_385;
let L_FINALLY_STREAM__219;
let L_VAR__218;
L_VAR__218=arguments[0];
L_FINALLY_STREAM__219=arguments[1];
TMP_385=lisp.callFunctionWithCallStack(G_306,L_VAR__218);
TMP_387=lisp.CL_eq(TMP_385,G_386);
if(lisp.values1(TMP_387) !== lisp.S_nil){
{
TMP_389=lisp.callFunctionWithCallStack(G_390,L_VAR__218);
TMP_391=G_154.func(TMP_389);
L_JS_VAR__221=lisp.values1(TMP_391);
TMP_392=G_380.func(L_VAR__218);
L_SAVE_VAR__222=lisp.values1(TMP_392);
TMP_393=lisp.callFunctionWithCallStack(G_34,L_FINALLY_STREAM__219,G_3.func(lisp.codeArrayToString([126, 65, 46, 118, 97, 108, 117, 101, 61, 126, 65, 59, 126, 37])),L_JS_VAR__221,L_SAVE_VAR__222);
}
TMP_388=TMP_393;
}else{
TMP_388=lisp.values1(lisp.S_nil);
}
return TMP_388;
});
CL_COMPILER_P2_EMIT_UNWIND_VAR=lisp.values1(F_P2_EMIT_UNWIND_VAR_383);
let F_P2_EMIT_DECLVAR_394;
F_P2_EMIT_DECLVAR_394=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_395, arguments.length);
}
let TMP_417;
let TMP_416;
let L_G127__236;
let TMP_415;
let L_VAR__235;
let TMP_414;
let TMP_413;
let TMP_412;
let L_G126__234;
let TMP_411;
let TMP_410;
let L_G125__233;
let TMP_409;
let L_VAR__232;
let TMP_408;
let TMP_407;
let TMP_406;
let L_G124__231;
let TMP_405;
let TMP_404;
let TMP_403;
let L_G123__230;
let TMP_402;
let L_SAVE_VAR__229;
let TMP_401;
let L_JS_VAR__228;
let TMP_400;
let TMP_399;
let TMP_398;
let L_G122__227;
let TMP_397;
let L_G121__226;
let TMP_396;
let L_FINALLY_STREAM__224;
let L_VAR__223;
L_VAR__223=arguments[0];
L_FINALLY_STREAM__224=arguments[1];
{
TMP_396=lisp.callFunctionWithCallStack(G_306,L_VAR__223);
L_G121__226=lisp.values1(TMP_396);
{
TMP_397=lisp.callFunctionWithCallStack(G_93,L_G121__226,lisp.makeCons(G_386, lisp.S_nil));
L_G122__227=lisp.values1(TMP_397);
if(lisp.values1(L_G122__227) !== lisp.S_nil){
{
TMP_399=lisp.callFunctionWithCallStack(G_390,L_VAR__223);
TMP_400=G_154.func(TMP_399);
L_JS_VAR__228=lisp.values1(TMP_400);
TMP_401=G_380.func(L_VAR__223);
L_SAVE_VAR__229=lisp.values1(TMP_401);
{
TMP_402=lisp.CL_cons(L_SAVE_VAR__229,lisp.symbolValue(G_45));
L_G123__230=lisp.values1(TMP_402);
lisp.setSymbolValue(G_45, lisp.values1(L_G123__230));
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 46, 118, 97, 108, 117, 101, 59, 126, 37])),L_SAVE_VAR__229,L_JS_VAR__228);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 46, 118, 97, 108, 117, 101, 61])),L_JS_VAR__228);
}
if(lisp.values1(L_FINALLY_STREAM__224) !== lisp.S_nil){
TMP_404=G_384.func(L_VAR__223,L_FINALLY_STREAM__224);
TMP_403=TMP_404;
}else{
TMP_403=lisp.values1(lisp.S_nil);
}
TMP_398=TMP_403;
}else{
{
TMP_405=lisp.callFunctionWithCallStack(G_93,L_G121__226,lisp.makeCons(G_313, lisp.S_nil));
L_G124__231=lisp.values1(TMP_405);
if(lisp.values1(L_G124__231) !== lisp.S_nil){
{
TMP_407=lisp.callFunctionWithCallStack(G_311,L_VAR__223);
TMP_408=G_148.func(TMP_407);
L_VAR__232=lisp.values1(TMP_408);
{
TMP_409=lisp.CL_cons(L_VAR__232,lisp.symbolValue(G_45));
L_G125__233=lisp.values1(TMP_409);
lisp.setSymbolValue(G_45, lisp.values1(L_G125__233));
}
TMP_410=lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_VAR__232);
}
TMP_406=TMP_410;
}else{
{
TMP_411=lisp.callFunctionWithCallStack(G_93,L_G121__226,lisp.makeCons(G_307, lisp.S_nil));
L_G126__234=lisp.values1(TMP_411);
if(lisp.values1(L_G126__234) !== lisp.S_nil){
{
TMP_413=lisp.callFunctionWithCallStack(G_311,L_VAR__223);
TMP_414=G_151.func(TMP_413);
L_VAR__235=lisp.values1(TMP_414);
{
TMP_415=lisp.CL_cons(L_VAR__235,lisp.symbolValue(G_45));
L_G127__236=lisp.values1(TMP_415);
lisp.setSymbolValue(G_45, lisp.values1(L_G127__236));
}
TMP_416=lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_VAR__235);
}
TMP_412=TMP_416;
}else{
TMP_417=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([126, 83, 32, 102, 101, 108, 108, 32, 116, 104, 114, 111, 117, 103, 104, 32, 69, 67, 65, 83, 69, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 46, 32, 87, 97, 110, 116, 101, 100, 32, 111, 110, 101, 32, 111, 102, 32, 126, 83, 46])),L_G121__226,lisp.makeCons(G_386, lisp.makeCons(G_313, lisp.makeCons(G_307, lisp.S_nil))));
TMP_412=TMP_417;
}
}
TMP_406=TMP_412;
}
}
TMP_398=TMP_406;
}
}
}
return TMP_398;
});
CL_COMPILER_P2_EMIT_DECLVAR=lisp.values1(F_P2_EMIT_DECLVAR_394);
let F_P2_EMIT_LAMBDA_LIST_418;
F_P2_EMIT_LAMBDA_LIST_418=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_419, arguments.length);
}
let TMP_472;
let TMP_471;
let L_REST_VAR__273;
let TMP_469;
let TMP_462;
let L_LOOP_VAR__269;
let TMP_461;
let TMP_460;
let TMP_458;
let TMP_457;
let L_RESULT__267;
let TMP_456;
let TMP_454;
let L_LOOP_VAR__266;
let TMP_453;
let L_G152__265;
let TMP_452;
let L_SUPPLIED_VAR__264;
let TMP_451;
let TMP_450;
let L_KEYWORD_VAR__263;
let TMP_449;
let TMP_447;
let L_SUPPLIED_BINDING__262;
let TMP_446;
let L_VALUE__261;
let TMP_445;
let L_VAR__260;
let TMP_444;
let TMP_443;
let L_OPT__259;
let TMP_442;
let TMP_441;
let L_G145__258;
let TMP_440;
let L_KEYWORD_VARS__256;
let TMP_438;
let L_G144__254;
let TMP_437;
let L_RESULT__253;
let TMP_436;
let L_SUPPLIED_BINDING__252;
let TMP_434;
let L_VALUE__251;
let TMP_432;
let L_VAR__250;
let TMP_431;
let TMP_430;
let L_OPT__249;
let TMP_429;
let TMP_428;
let L_G137__248;
let TMP_426;
let L_G136__245;
let TMP_425;
let TMP_424;
let L_VAR__244;
let TMP_423;
let TMP_422;
let L_G129__243;
let TMP_420;
let L_I__241;
let L_FINALLY_STREAM__239;
let L_PARSED_LAMBDA_LIST__238;
L_PARSED_LAMBDA_LIST__238=arguments[0];
L_FINALLY_STREAM__239=arguments[1];
{
L_I__241=lisp.values1(0);
{
TMP_420=lisp.callFunctionWithCallStack(G_421,L_PARSED_LAMBDA_LIST__238);
L_G129__243=lisp.values1(TMP_420);
for(;;){
TMP_422=lisp.callFunctionWithCallStack(G_117,L_G129__243);
if(lisp.values1(TMP_422) !== lisp.S_nil){
}else{
{
TMP_423=lisp.callFunctionWithCallStack(G_119,L_G129__243);
L_VAR__244=lisp.values1(TMP_423);
TMP_424=lisp.callFunctionWithCallStack(G_121,L_G129__243);
L_G129__243=lisp.values1(TMP_424);
G_395.func(L_VAR__244,L_FINALLY_STREAM__239);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([97, 114, 103, 117, 109, 101, 110, 116, 115, 91, 126, 68, 93, 59, 126, 37])),L_I__241);
{
TMP_425=lisp.callFunctionWithCallStack(G_263,L_I__241,1);
L_G136__245=lisp.values1(TMP_425);
L_I__241=lisp.values1(L_G136__245);
}
}
continue;
}
break;
}
}
{
TMP_426=lisp.callFunctionWithCallStack(G_427,L_PARSED_LAMBDA_LIST__238);
L_G137__248=lisp.values1(TMP_426);
for(;;){
TMP_428=lisp.callFunctionWithCallStack(G_117,L_G137__248);
if(lisp.values1(TMP_428) !== lisp.S_nil){
}else{
{
TMP_429=lisp.callFunctionWithCallStack(G_119,L_G137__248);
L_OPT__249=lisp.values1(TMP_429);
TMP_430=lisp.callFunctionWithCallStack(G_121,L_G137__248);
L_G137__248=lisp.values1(TMP_430);
{
TMP_431=lisp.callFunctionWithCallStack(G_18,L_OPT__249);
L_VAR__250=lisp.values1(TMP_431);
TMP_432=lisp.callFunctionWithCallStack(G_433,L_OPT__249);
L_VALUE__251=lisp.values1(TMP_432);
TMP_434=lisp.callFunctionWithCallStack(G_435,L_OPT__249);
L_SUPPLIED_BINDING__252=lisp.values1(TMP_434);
{
TMP_436=G_276.func(L_VALUE__251);
L_RESULT__253=lisp.values1(TMP_436);
G_395.func(L_VAR__250,L_FINALLY_STREAM__239);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 32, 62, 32, 126, 68, 32, 63, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 91, 126, 68, 93, 32, 58, 32])),L_I__241,L_I__241);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([40, 126, 65, 41, 59, 126, 37])),L_RESULT__253);
}
if(lisp.values1(L_SUPPLIED_BINDING__252) !== lisp.S_nil){
G_395.func(L_SUPPLIED_BINDING__252,L_FINALLY_STREAM__239);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([40, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 32, 62, 32, 126, 68, 32, 63, 32, 108, 105, 115, 112, 46, 83, 95, 116, 32, 58, 32, 108, 105, 115, 112, 46, 83, 95, 110, 105, 108, 41, 59, 126, 37])),L_I__241);
}else{
}
{
TMP_437=lisp.callFunctionWithCallStack(G_263,L_I__241,1);
L_G144__254=lisp.values1(TMP_437);
L_I__241=lisp.values1(L_G144__254);
}
}
}
continue;
}
break;
}
}
TMP_438=lisp.callFunctionWithCallStack(G_439,L_PARSED_LAMBDA_LIST__238);
if(lisp.values1(TMP_438) !== lisp.S_nil){
{
L_KEYWORD_VARS__256=lisp.values1(lisp.S_nil);
{
TMP_440=lisp.callFunctionWithCallStack(G_439,L_PARSED_LAMBDA_LIST__238);
L_G145__258=lisp.values1(TMP_440);
for(;;){
TMP_441=lisp.callFunctionWithCallStack(G_117,L_G145__258);
if(lisp.values1(TMP_441) !== lisp.S_nil){
}else{
{
TMP_442=lisp.callFunctionWithCallStack(G_119,L_G145__258);
L_OPT__259=lisp.values1(TMP_442);
TMP_443=lisp.callFunctionWithCallStack(G_121,L_G145__258);
L_G145__258=lisp.values1(TMP_443);
{
TMP_444=lisp.callFunctionWithCallStack(G_18,L_OPT__259);
L_VAR__260=lisp.values1(TMP_444);
TMP_445=lisp.callFunctionWithCallStack(G_433,L_OPT__259);
L_VALUE__261=lisp.values1(TMP_445);
TMP_446=lisp.callFunctionWithCallStack(G_435,L_OPT__259);
L_SUPPLIED_BINDING__262=lisp.values1(TMP_446);
TMP_447=lisp.callFunctionWithCallStack(G_448,L_OPT__259);
TMP_449=G_154.func(TMP_447);
L_KEYWORD_VAR__263=lisp.values1(TMP_449);
TMP_450=lisp.callFunctionWithCallStack(G_311,L_VAR__260);
TMP_451=G_148.func(TMP_450,G_3.func(lisp.codeArrayToString([115, 117, 112, 112, 108, 105, 101, 100, 95])));
L_SUPPLIED_VAR__264=lisp.values1(TMP_451);
{
TMP_452=lisp.CL_cons(L_KEYWORD_VAR__263,L_KEYWORD_VARS__256);
L_G152__265=lisp.values1(TMP_452);
L_KEYWORD_VARS__256=lisp.values1(L_G152__265);
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 101, 116, 32, 126, 65, 59, 126, 37])),L_SUPPLIED_VAR__264);
{
TMP_453=G_123.func();
L_LOOP_VAR__266=lisp.values1(TMP_453);
TMP_454=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_455;
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 97, 114, 103, 117, 109, 101, 110, 116, 115, 91, 126, 68, 93, 32, 61, 61, 61, 32, 126, 65, 41, 123, 126, 37])),L_LOOP_VAR__266,L_KEYWORD_VAR__263);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 97, 114, 103, 117, 109, 101, 110, 116, 115, 91, 126, 68, 43, 49, 93, 59, 126, 37])),L_SUPPLIED_VAR__264,L_LOOP_VAR__266);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([98, 114, 101, 97, 107, 59])),lisp.symbolValue(G_37));
TMP_455=lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
return TMP_455;
});
G_78.func(L_LOOP_VAR__266,L_I__241,G_3.func(lisp.codeArrayToString([97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104])),2,TMP_454);
}
{
TMP_456=G_276.func(L_VALUE__261);
L_RESULT__267=lisp.values1(TMP_456);
G_395.func(L_VAR__260,L_FINALLY_STREAM__239);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 32, 33, 61, 61, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 32, 63, 32, 126, 65, 32, 58, 32, 40, 126, 65, 41, 59, 126, 37])),L_SUPPLIED_VAR__264,L_SUPPLIED_VAR__264,L_RESULT__267);
}
if(lisp.values1(L_SUPPLIED_BINDING__262) !== lisp.S_nil){
G_395.func(L_SUPPLIED_BINDING__262,L_FINALLY_STREAM__239);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([40, 126, 65, 32, 33, 61, 61, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 32, 63, 32, 108, 105, 115, 112, 46, 83, 95, 116, 32, 58, 32, 108, 105, 115, 112, 46, 83, 95, 110, 105, 108, 41, 59, 126, 37])),L_SUPPLIED_VAR__264);
}else{
}
}
}
continue;
}
break;
}
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 40, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 45, 126, 68, 41, 37, 50, 61, 61, 61, 49, 41])),L_I__241);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([123, 108, 105, 115, 112, 46, 112, 114, 111, 103, 114, 97, 109, 69, 114, 114, 111, 114, 40, 39, 111, 100, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 38, 75, 69, 89, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 39, 41, 59, 125])),lisp.symbolValue(G_37));
if(lisp.values1(L_KEYWORD_VARS__256) !== lisp.S_nil){
TMP_458=lisp.callFunctionWithCallStack(G_459,L_PARSED_LAMBDA_LIST__238);
TMP_460=lisp.callFunctionWithCallStack(G_209,TMP_458);
TMP_457=lisp.values1(TMP_460);
}else{
TMP_457=lisp.values1(lisp.S_nil);
}
if(lisp.values1(TMP_457) !== lisp.S_nil){
{
TMP_461=G_123.func();
L_LOOP_VAR__269=lisp.values1(TMP_461);
TMP_462=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_468;
let L_G159__272;
let TMP_467;
let TMP_465;
let TMP_464;
let TMP_463;
let L_KEYWORD_VARS__271;
let BLOCK_RESULT_NIL__270;
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([105, 102, 40])),lisp.symbolValue(G_37));
BLOCK_NIL__270: for(;;){{
L_KEYWORD_VARS__271=lisp.values1(L_KEYWORD_VARS__256);
for(;;){
TMP_463=lisp.callFunctionWithCallStack(G_209,L_KEYWORD_VARS__271);
if(lisp.values1(TMP_463) !== lisp.S_nil){
BLOCK_RESULT_NIL__270=lisp.values1(lisp.S_nil);
break BLOCK_NIL__270;
}else{
TMP_464=lisp.callFunctionWithCallStack(G_18,L_KEYWORD_VARS__271);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([97, 114, 103, 117, 109, 101, 110, 116, 115, 91, 126, 68, 93, 33, 61, 61, 126, 65])),L_LOOP_VAR__269,TMP_464);
TMP_465=lisp.callFunctionWithCallStack(G_466,L_KEYWORD_VARS__271);
if(lisp.values1(TMP_465) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([32, 38, 38, 32])),lisp.symbolValue(G_37));
}else{
}
{
TMP_467=lisp.callFunctionWithCallStack(G_466,L_KEYWORD_VARS__271);
L_G159__272=lisp.values1(TMP_467);
L_KEYWORD_VARS__271=lisp.values1(L_G159__272);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__270=lisp.values1(lisp.S_nil);
break;
}
TMP_468=lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([41, 32, 123, 32, 108, 105, 115, 112, 46, 112, 114, 111, 103, 114, 97, 109, 69, 114, 114, 111, 114, 40, 39, 85, 110, 107, 110, 111, 119, 110, 32, 38, 75, 69, 89, 32, 97, 114, 103, 117, 109, 101, 110, 116, 58, 32, 39, 32, 43, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 91, 126, 65, 93, 46, 110, 97, 109, 101, 41, 59, 32, 125, 126, 37])),L_LOOP_VAR__269);
return TMP_468;
});
G_78.func(L_LOOP_VAR__269,L_I__241,G_3.func(lisp.codeArrayToString([97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104])),2,TMP_462);
}
}else{
}
}
}else{
}
{
TMP_469=lisp.callFunctionWithCallStack(G_470,L_PARSED_LAMBDA_LIST__238);
L_REST_VAR__273=lisp.values1(TMP_469);
if(lisp.values1(L_REST_VAR__273) !== lisp.S_nil){
G_395.func(L_REST_VAR__273,L_FINALLY_STREAM__239);
TMP_472=lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 106, 115, 65, 114, 114, 97, 121, 84, 111, 76, 105, 115, 116, 40, 97, 114, 103, 117, 109, 101, 110, 116, 115, 44, 32, 126, 68, 41, 59, 126, 37])),L_I__241);
TMP_471=TMP_472;
}else{
TMP_471=lisp.values1(lisp.S_nil);
}
}
}
return TMP_471;
});
CL_COMPILER_P2_EMIT_LAMBDA_LIST=lisp.values1(F_P2_EMIT_LAMBDA_LIST_418);
let F_COMMON_LISPCOLONLAMBDA_473;
F_COMMON_LISPCOLONLAMBDA_473=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_474, arguments.length);
}
let TMP_492;
let L_G162__290;
let TMP_491;
let TMP_490;
let L_G161__289;
let L_RESULT__288;
let TMP_489;
let L_RESULT__287;
let TMP_488;
let TMP_486;
let L_G160__286;
let L_FINALLY_CODE__285;
let TMP_485;
let L_FINALLY_STREAM__284;
let TMP_484;
let save_STARP2_EMIT_STREAMSTAR__283;
let L_EMITTER_STREAM__282;
let TMP_483;
let L_BASE_STREAM__281;
let save_STARP2_TEMPORARY_VARIABLESSTAR__280;
let TMP_482;
let TMP_481;
let TMP_480;
let TMP_479;
let TMP_478;
let L_LAMBDA_RESULT__279;
let L_BODY__278;
let TMP_477;
let L_PARSED_LAMBDA_LIST__277;
let TMP_476;
let L_NAME__276;
let TMP_475;
let L_HIR__274;
L_HIR__274=arguments[0];
{
TMP_475=lisp.callFunctionWithCallStack(G_25,L_HIR__274);
L_NAME__276=lisp.values1(TMP_475);
TMP_476=lisp.callFunctionWithCallStack(G_12,L_HIR__274);
L_PARSED_LAMBDA_LIST__277=lisp.values1(TMP_476);
TMP_477=lisp.callFunctionWithCallStack(G_355,L_HIR__274);
L_BODY__278=lisp.values1(TMP_477);
L_LAMBDA_RESULT__279=lisp.values1(lisp.S_nil);
TMP_478=lisp.callFunctionWithCallStack(G_98,L_HIR__274);
if(lisp.values1(TMP_478) !== lisp.S_nil){
if(lisp.values1(L_NAME__276) !== lisp.S_nil){
TMP_480=G_151.func(L_NAME__276);
TMP_481=G_127.func(TMP_480);
TMP_479=lisp.values1(TMP_481);
}else{
TMP_482=G_127.func();
TMP_479=lisp.values1(TMP_482);
}
L_LAMBDA_RESULT__279=lisp.values1(TMP_479);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_LAMBDA_RESULT__279);
}else{
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 123])),lisp.symbolValue(G_37));
G_370.func(L_HIR__274,L_NAME__276,L_PARSED_LAMBDA_LIST__277);
{
save_STARP2_TEMPORARY_VARIABLESSTAR__280=G_45.value;
G_45.value=lisp.values1(lisp.S_nil);
try{
{
L_BASE_STREAM__281=lisp.values1(lisp.symbolValue(G_37));
TMP_483=G_46.func(L_BASE_STREAM__281);
L_EMITTER_STREAM__282=lisp.values1(TMP_483);
{
save_STARP2_EMIT_STREAMSTAR__283=G_37.value;
G_37.value=lisp.values1(L_EMITTER_STREAM__282);
try{
{
{
TMP_484=lisp.callFunctionWithCallStack(G_52);
L_FINALLY_STREAM__284=lisp.values1(TMP_484);
G_419.func(L_PARSED_LAMBDA_LIST__277,L_FINALLY_STREAM__284);
TMP_485=lisp.callFunctionWithCallStack(G_62,L_FINALLY_STREAM__284);
}
L_FINALLY_CODE__285=lisp.values1(lisp.values1(lisp.values1(TMP_485)));
{
L_G160__286=lisp.values1(L_FINALLY_CODE__285);
TMP_486=lisp.callFunctionWithCallStack(G_487,L_G160__286,G_3.func(lisp.codeArrayToString([])));
if(lisp.values1(TMP_486) !== lisp.S_nil){
{
TMP_488=G_276.func(L_BODY__278);
L_RESULT__287=lisp.values1(TMP_488);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([114, 101, 116, 117, 114, 110, 32, 126, 65, 59, 126, 37])),L_RESULT__287);
}
}else{
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([116, 114, 121, 123])),lisp.symbolValue(G_37));
{
TMP_489=G_276.func(L_BODY__278);
L_RESULT__288=lisp.values1(TMP_489);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([114, 101, 116, 117, 114, 110, 32, 126, 65, 59, 126, 37])),L_RESULT__288);
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125, 102, 105, 110, 97, 108, 108, 121, 123])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,L_G160__286,lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}
}
}
}finally{
G_37.value=save_STARP2_EMIT_STREAMSTAR__283;
}
}
G_110.func();
G_58.func(L_BASE_STREAM__281,L_EMITTER_STREAM__282);
}
}finally{
G_45.value=save_STARP2_TEMPORARY_VARIABLESSTAR__280;
}
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125, 41, 59])),lisp.symbolValue(G_37));
{
L_G161__289=lisp.values1(L_LAMBDA_RESULT__279);
if(lisp.values1(L_G161__289) !== lisp.S_nil){
TMP_490=lisp.values1(L_G161__289);
}else{
{
TMP_491=lisp.CL_values();
L_G162__290=lisp.values1(TMP_491);
if(lisp.values1(L_G162__290) !== lisp.S_nil){
TMP_492=lisp.values1(L_G162__290);
}else{
TMP_492=lisp.values1(lisp.S_nil);
}
}
TMP_490=TMP_492;
}
}
}
return TMP_490;
});
CL_COMMON_LISPCOLONLAMBDA=lisp.values1(F_COMMON_LISPCOLONLAMBDA_473);
let F_COMMON_LISPCOLONLET_494;
F_COMMON_LISPCOLONLET_494=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_495, arguments.length);
}
let TMP_513;
let TMP_512;
let TMP_511;
let L_G174__310;
let TMP_510;
let TMP_509;
let L_BINDING__308;
let TMP_508;
let TMP_507;
let L_G175__307;
let TMP_505;
let L_OUTPUT__305;
let TMP_504;
let L_RESULT__304;
let L_VALUE__302;
let TMP_503;
let TMP_501;
let TMP_500;
let L_BINDING__301;
let TMP_499;
let TMP_498;
let L_G167__300;
let L_BODY__298;
let TMP_497;
let L_BINDINGS__297;
let TMP_496;
let L_HIR__295;
L_HIR__295=arguments[0];
{
TMP_496=lisp.callFunctionWithCallStack(G_25,L_HIR__295);
L_BINDINGS__297=lisp.values1(TMP_496);
TMP_497=lisp.callFunctionWithCallStack(G_12,L_HIR__295);
L_BODY__298=lisp.values1(TMP_497);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([123])),lisp.symbolValue(G_37));
{
L_G167__300=lisp.values1(L_BINDINGS__297);
for(;;){
TMP_498=lisp.callFunctionWithCallStack(G_117,L_G167__300);
if(lisp.values1(TMP_498) !== lisp.S_nil){
}else{
{
TMP_499=lisp.callFunctionWithCallStack(G_119,L_G167__300);
L_BINDING__301=lisp.values1(TMP_499);
TMP_500=lisp.callFunctionWithCallStack(G_121,L_G167__300);
L_G167__300=lisp.values1(TMP_500);
{
TMP_501=lisp.callFunctionWithCallStack(G_502,L_BINDING__301);
TMP_503=G_276.func(TMP_501);
L_VALUE__302=lisp.values1(TMP_503);
G_395.func(L_BINDING__301,lisp.S_nil);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 59, 126, 37])),L_VALUE__302);
}
}
continue;
}
break;
}
}
{
L_RESULT__304=lisp.values1(lisp.S_nil);
{
{
TMP_504=lisp.callFunctionWithCallStack(G_52);
L_OUTPUT__305=lisp.values1(TMP_504);
{
TMP_505=lisp.callFunctionWithCallStack(G_506,L_BINDINGS__297);
L_G175__307=lisp.values1(TMP_505);
for(;;){
TMP_507=lisp.callFunctionWithCallStack(G_117,L_G175__307);
if(lisp.values1(TMP_507) !== lisp.S_nil){
}else{
{
TMP_508=lisp.callFunctionWithCallStack(G_119,L_G175__307);
L_BINDING__308=lisp.values1(TMP_508);
TMP_509=lisp.callFunctionWithCallStack(G_121,L_G175__307);
L_G175__307=lisp.values1(TMP_509);
G_384.func(L_BINDING__308,L_OUTPUT__305);
}
continue;
}
break;
}
}
TMP_510=lisp.callFunctionWithCallStack(G_62,L_OUTPUT__305);
}
L_G174__310=lisp.values1(lisp.values1(lisp.values1(TMP_510)));
TMP_511=lisp.callFunctionWithCallStack(G_487,L_G174__310,G_3.func(lisp.codeArrayToString([])));
if(lisp.values1(TMP_511) !== lisp.S_nil){
TMP_512=G_288.func(L_BODY__298);
L_RESULT__304=lisp.values1(TMP_512);
}else{
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([116, 114, 121, 123])),lisp.symbolValue(G_37));
TMP_513=G_288.func(L_BODY__298);
L_RESULT__304=lisp.values1(TMP_513);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125, 102, 105, 110, 97, 108, 108, 121, 123])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_64,L_G174__310,lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}
}
return lisp.values1(L_RESULT__304);
});
CL_COMMON_LISPCOLONLET=lisp.values1(F_COMMON_LISPCOLONLET_494);
let F_P2_PREPARE_ARGS_515;
F_P2_PREPARE_ARGS_515=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_516, arguments.length);
}
let TMP_518;
let TMP_517;
let L_ARGS__315;
L_ARGS__315=arguments[0];
TMP_517=lisp.CL_symbolFunction(G_271);
TMP_518=lisp.callFunctionWithCallStack(G_519,TMP_517,L_ARGS__315);
return TMP_518;
});
CL_COMPILER_P2_PREPARE_ARGS=lisp.values1(F_P2_PREPARE_ARGS_515);
let F_P2_EMIT_ARGS_520;
F_P2_EMIT_ARGS_520=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_521, arguments.length);
}
let TMP_526;
let L_G192__321;
let TMP_525;
let TMP_524;
let TMP_523;
let TMP_522;
let L_ARGS__320;
let BLOCK_RESULT_NIL__319;
let L_ARGS__317;
L_ARGS__317=arguments[0];
BLOCK_NIL__319: for(;;){{
L_ARGS__320=lisp.values1(L_ARGS__317);
for(;;){
TMP_522=lisp.callFunctionWithCallStack(G_209,L_ARGS__320);
if(lisp.values1(TMP_522) !== lisp.S_nil){
BLOCK_RESULT_NIL__319=lisp.values1(lisp.S_nil);
break BLOCK_NIL__319;
}else{
TMP_523=lisp.callFunctionWithCallStack(G_119,L_ARGS__320);
lisp.callFunctionWithCallStack(G_79,TMP_523,lisp.symbolValue(G_37));
TMP_524=lisp.callFunctionWithCallStack(G_121,L_ARGS__320);
if(lisp.values1(TMP_524) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44])),lisp.symbolValue(G_37));
}else{
}
{
TMP_525=lisp.callFunctionWithCallStack(G_121,L_ARGS__320);
L_G192__321=lisp.values1(TMP_525);
L_ARGS__320=lisp.values1(L_G192__321);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__319=lisp.values1(lisp.S_nil);
break;
}
TMP_526=lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([41, 59])),lisp.symbolValue(G_37));
return TMP_526;
});
CL_COMPILER_P2_EMIT_ARGS=lisp.values1(F_P2_EMIT_ARGS_520);
let F_COMPILERCOLONLCALL_527;
F_COMPILERCOLONLCALL_527=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_528, arguments.length);
}
let TMP_535;
let TMP_534;
let TMP_533;
let TMP_532;
let TMP_531;
let L_RESULT__325;
let L_ARGS__324;
let TMP_530;
let TMP_529;
let L_HIR__322;
L_HIR__322=arguments[0];
{
TMP_529=lisp.callFunctionWithCallStack(G_12,L_HIR__322);
TMP_530=G_516.func(TMP_529);
L_ARGS__324=lisp.values1(TMP_530);
L_RESULT__325=lisp.values1(lisp.S_nil);
TMP_531=lisp.callFunctionWithCallStack(G_98,L_HIR__322);
if(lisp.values1(TMP_531) !== lisp.S_nil){
TMP_532=G_127.func();
L_RESULT__325=lisp.values1(TMP_532);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__325);
}else{
}
TMP_533=lisp.callFunctionWithCallStack(G_25,L_HIR__322);
TMP_534=lisp.callFunctionWithCallStack(G_311,TMP_533);
TMP_535=G_151.func(TMP_534);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 40])),TMP_535);
G_521.func(L_ARGS__324);
}
return lisp.values1(L_RESULT__325);
});
CL_COMPILERCOLONLCALL=lisp.values1(F_COMPILERCOLONLCALL_527);
let F_P2_CALL_DEFAULT_537;
F_P2_CALL_DEFAULT_537=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_36, arguments.length);
}
let TMP_570;
let TMP_569;
let L_G197__338;
let TMP_568;
let TMP_567;
let TMP_565;
let TMP_564;
let TMP_563;
let TMP_562;
let TMP_561;
let TMP_560;
let L_MAX__337;
let TMP_559;
let TMP_558;
let TMP_557;
let L_MIN__336;
let TMP_556;
let TMP_554;
let TMP_553;
let TMP_552;
let TMP_551;
let TMP_550;
let TMP_548;
let TMP_546;
let TMP_544;
let L_ELT__335;
let TMP_542;
let TMP_541;
let L_RESULT__334;
let L_ARGS__333;
let TMP_540;
let TMP_539;
let L_SYMBOL__332;
let TMP_538;
let L_HIR__330;
L_HIR__330=arguments[0];
{
TMP_538=lisp.callFunctionWithCallStack(G_25,L_HIR__330);
L_SYMBOL__332=lisp.values1(TMP_538);
TMP_539=lisp.callFunctionWithCallStack(G_12,L_HIR__330);
TMP_540=G_516.func(TMP_539);
L_ARGS__333=lisp.values1(TMP_540);
L_RESULT__334=lisp.values1(lisp.S_nil);
TMP_541=lisp.callFunctionWithCallStack(G_98,L_HIR__330);
if(lisp.values1(TMP_541) !== lisp.S_nil){
TMP_542=G_127.func();
L_RESULT__334=lisp.values1(TMP_542);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__334);
}else{
}
{
L_ELT__335=lisp.values1(lisp.S_nil);
{
TMP_544=lisp.callFunctionWithCallStack(G_545,lisp.symbolValue(G_543));
if(lisp.values1(TMP_544) !== lisp.S_nil){
if(lisp.values1(lisp.symbolValue(G_547)) !== lisp.S_nil){
TMP_550=lisp.callFunctionWithCallStack(G_136,L_SYMBOL__332,lisp.symbolValue(G_549));
L_ELT__335=(TMP_551=lisp.values1(TMP_550));
if(lisp.values1(TMP_551) !== lisp.S_nil){
{
TMP_553=lisp.callFunctionWithCallStack(G_121,L_ELT__335);
TMP_554=lisp.callFunctionWithCallStack(G_555,TMP_553);
TMP_556=lisp.callFunctionWithCallStack(G_372,TMP_554);
L_MIN__336=lisp.values1(TMP_556);
TMP_557=lisp.callFunctionWithCallStack(G_121,L_ELT__335);
TMP_558=lisp.callFunctionWithCallStack(G_555,TMP_557);
TMP_559=lisp.callFunctionWithCallStack(G_374,TMP_558);
L_MAX__337=lisp.values1(TMP_559);
TMP_560=lisp.callFunctionWithCallStack(G_121,L_ELT__335);
TMP_561=lisp.callFunctionWithCallStack(G_555,TMP_560);
TMP_562=lisp.callFunctionWithCallStack(G_374,TMP_561);
if(lisp.values1(TMP_562) !== lisp.S_nil){
TMP_564=lisp.callFunctionWithCallStack(G_181,L_ARGS__333);
TMP_565=lisp.callFunctionWithCallStack(G_566,L_MIN__336,TMP_564,L_MAX__337);
TMP_563=lisp.values1(TMP_565);
}else{
TMP_567=lisp.callFunctionWithCallStack(G_181,L_ARGS__333);
TMP_568=lisp.callFunctionWithCallStack(G_566,L_MIN__336,TMP_567);
TMP_563=lisp.values1(TMP_568);
}
}
TMP_552=lisp.values1(lisp.values1(TMP_563));
}else{
TMP_552=lisp.values1(lisp.S_nil);
}
TMP_548=lisp.values1(TMP_552);
}else{
TMP_548=lisp.values1(lisp.S_nil);
}
TMP_546=lisp.values1(TMP_548);
}else{
TMP_546=lisp.values1(lisp.S_nil);
}
L_G197__338=lisp.values1(TMP_546);
if(lisp.values1(L_G197__338) !== lisp.S_nil){
TMP_569=G_163.func(L_SYMBOL__332);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 40])),TMP_569);
}else{
TMP_570=G_154.func(L_SYMBOL__332);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 99, 97, 108, 108, 70, 117, 110, 99, 116, 105, 111, 110, 87, 105, 116, 104, 67, 97, 108, 108, 83, 116, 97, 99, 107, 40, 126, 65])),TMP_570);
if(lisp.values1(L_ARGS__333) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44])),lisp.symbolValue(G_37));
}else{
}
}
}
}
G_521.func(L_ARGS__333);
}
return lisp.values1(L_RESULT__334);
});
CL_COMPILER_P2_CALL_DEFAULT=lisp.values1(F_P2_CALL_DEFAULT_537);
let F_P2_CALL_BUILTIN_USING_LIST_SPEC_571;
F_P2_CALL_BUILTIN_USING_LIST_SPEC_571=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_572, arguments.length);
}
let TMP_614;
let TMP_613;
let TMP_612;
let TMP_611;
let TMP_610;
let TMP_609;
let TMP_608;
let TMP_607;
let TMP_606;
let L_G212__366;
let TMP_605;
let L_G214__365;
let TMP_604;
let TMP_603;
let L_G213__364;
let TMP_602;
let TMP_601;
let TMP_600;
let TMP_599;
let TMP_598;
let TMP_597;
let L_G211__363;
let TMP_595;
let TMP_594;
let TMP_593;
let L_G207__362;
let TMP_592;
let L_G210__361;
let TMP_591;
let TMP_590;
let L_G209__360;
let TMP_589;
let TMP_588;
let L_G208__359;
let TMP_587;
let L_MAX__356;
let TMP_586;
let TMP_585;
let L_G204__355;
let TMP_584;
let L_MIN__354;
let TMP_583;
let L_G202__352;
let TMP_582;
let L_G201__351;
let TMP_581;
let L_NAME__350;
let TMP_580;
let L_G199__348;
let L_NARGS__347;
let TMP_579;
let TMP_578;
let F_GEN__346;
let TMP_573;
let L_BUILTIN__341;
let L_HIR__340;
L_HIR__340=arguments[0];
L_BUILTIN__341=arguments[1];
{
TMP_573=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_577;
let TMP_576;
let L_RESULT__345;
let L_ARGS__344;
let TMP_575;
let TMP_574;
let L_NAME__343;
L_NAME__343=arguments[0];
{
TMP_574=lisp.callFunctionWithCallStack(G_12,L_HIR__340);
TMP_575=G_516.func(TMP_574);
L_ARGS__344=lisp.values1(TMP_575);
L_RESULT__345=lisp.values1(lisp.S_nil);
TMP_576=lisp.callFunctionWithCallStack(G_98,L_HIR__340);
if(lisp.values1(TMP_576) !== lisp.S_nil){
TMP_577=G_127.func();
L_RESULT__345=lisp.values1(TMP_577);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__345);
}else{
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 40])),L_NAME__343);
G_521.func(L_ARGS__344);
}
return lisp.values1(L_RESULT__345);
});
F_GEN__346=lisp.values1(TMP_573);
{
TMP_578=lisp.callFunctionWithCallStack(G_12,L_HIR__340);
TMP_579=lisp.callFunctionWithCallStack(G_181,TMP_578);
L_NARGS__347=lisp.values1(TMP_579);
{
L_G199__348=lisp.values1(L_BUILTIN__341);
{
TMP_580=lisp.callFunctionWithCallStack(G_18,L_G199__348);
L_NAME__350=lisp.values1(TMP_580);
TMP_581=lisp.callFunctionWithCallStack(G_466,L_G199__348);
L_G201__351=lisp.values1(TMP_581);
TMP_582=lisp.callFunctionWithCallStack(G_18,L_G201__351);
L_G202__352=lisp.values1(TMP_582);
TMP_583=lisp.callFunctionWithCallStack(G_18,L_G202__352);
L_MIN__354=lisp.values1(TMP_583);
TMP_584=lisp.callFunctionWithCallStack(G_466,L_G202__352);
L_G204__355=lisp.values1(TMP_584);
if(lisp.values1(L_G204__355) !== lisp.S_nil){
TMP_586=lisp.callFunctionWithCallStack(G_18,L_G204__355);
TMP_585=lisp.values1(TMP_586);
}else{
TMP_585=lisp.values1(L_MIN__354);
}
L_MAX__356=lisp.values1(TMP_585);
{
{
TMP_587=lisp.callFunctionWithCallStack(G_209,L_MIN__354);
L_G208__359=lisp.values1(TMP_587);
if(lisp.values1(L_G208__359) !== lisp.S_nil){
TMP_588=lisp.values1(L_G208__359);
}else{
{
TMP_589=lisp.callFunctionWithCallStack(G_81,L_MIN__354,0);
L_G209__360=lisp.values1(TMP_589);
if(lisp.values1(L_G209__360) !== lisp.S_nil){
TMP_590=lisp.values1(L_G209__360);
}else{
{
TMP_591=lisp.callFunctionWithCallStack(G_209,L_MAX__356);
L_G210__361=lisp.values1(TMP_591);
if(lisp.values1(L_G210__361) !== lisp.S_nil){
TMP_592=lisp.values1(L_G210__361);
}else{
TMP_592=lisp.values1(lisp.S_nil);
}
}
TMP_590=lisp.values1(lisp.values1(TMP_592));
}
}
TMP_588=lisp.values1(lisp.values1(TMP_590));
}
}
L_G207__362=lisp.values1(lisp.values1(TMP_588));
if(lisp.values1(L_G207__362) !== lisp.S_nil){
TMP_594=F_GEN__346(L_NAME__350);
TMP_593=TMP_594;
}else{
{
TMP_595=lisp.callFunctionWithCallStack(G_596,L_MIN__354,L_MAX__356);
L_G211__363=lisp.values1(TMP_595);
if(lisp.values1(L_G211__363) !== lisp.S_nil){
TMP_598=lisp.callFunctionWithCallStack(G_81,L_NARGS__347,L_MIN__354);
if(lisp.values1(TMP_598) !== lisp.S_nil){
TMP_600=F_GEN__346(L_NAME__350);
TMP_599=TMP_600;
}else{
TMP_601=G_36.func(L_HIR__340);
TMP_599=TMP_601;
}
TMP_597=TMP_599;
}else{
{
{
TMP_602=lisp.callFunctionWithCallStack(G_209,L_MAX__356);
L_G213__364=lisp.values1(TMP_602);
if(lisp.values1(L_G213__364) !== lisp.S_nil){
TMP_603=lisp.values1(L_G213__364);
}else{
{
TMP_604=lisp.callFunctionWithCallStack(G_81,L_MAX__356,0);
L_G214__365=lisp.values1(TMP_604);
if(lisp.values1(L_G214__365) !== lisp.S_nil){
TMP_605=lisp.values1(L_G214__365);
}else{
TMP_605=lisp.values1(lisp.S_nil);
}
}
TMP_603=lisp.values1(lisp.values1(TMP_605));
}
}
L_G212__366=lisp.values1(lisp.values1(TMP_603));
if(lisp.values1(L_G212__366) !== lisp.S_nil){
TMP_607=lisp.callFunctionWithCallStack(G_566,L_MIN__354,L_NARGS__347);
if(lisp.values1(TMP_607) !== lisp.S_nil){
TMP_609=F_GEN__346(L_NAME__350);
TMP_608=TMP_609;
}else{
TMP_610=G_36.func(L_HIR__340);
TMP_608=TMP_610;
}
TMP_606=TMP_608;
}else{
TMP_611=lisp.callFunctionWithCallStack(G_566,L_MIN__354,L_NARGS__347,L_MAX__356);
if(lisp.values1(TMP_611) !== lisp.S_nil){
TMP_613=F_GEN__346(L_NAME__350);
TMP_612=TMP_613;
}else{
TMP_614=G_36.func(L_HIR__340);
TMP_612=TMP_614;
}
TMP_606=TMP_612;
}
}
TMP_597=TMP_606;
}
}
TMP_593=TMP_597;
}
}
}
}
}
}
return TMP_593;
});
CL_COMPILER_P2_CALL_BUILTIN_USING_LIST_SPEC=lisp.values1(F_P2_CALL_BUILTIN_USING_LIST_SPEC_571);
let F_COMPILERCOLONCALL_615;
F_COMPILERCOLONCALL_615=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_616, arguments.length);
}
let TMP_631;
let TMP_630;
let TMP_629;
let L_G218__376;
let TMP_628;
let L_G220__375;
let TMP_627;
let TMP_626;
let L_G219__374;
let TMP_625;
let TMP_624;
let TMP_623;
let L_G217__373;
let TMP_622;
let TMP_621;
let TMP_620;
let L_G216__372;
let TMP_619;
let L_BUILTIN__371;
let TMP_618;
let L_SYMBOL__370;
let TMP_617;
let L_HIR__368;
L_HIR__368=arguments[0];
{
TMP_617=lisp.callFunctionWithCallStack(G_25,L_HIR__368);
L_SYMBOL__370=lisp.values1(TMP_617);
TMP_618=lisp.callFunctionWithCallStack(G_156,L_SYMBOL__370,lisp.symbolValue(G_6));
L_BUILTIN__371=lisp.values1(TMP_618);
{
TMP_619=lisp.callFunctionWithCallStack(G_209,L_BUILTIN__371);
L_G216__372=lisp.values1(TMP_619);
if(lisp.values1(L_G216__372) !== lisp.S_nil){
TMP_621=G_36.func(L_HIR__368);
TMP_620=TMP_621;
}else{
{
TMP_622=lisp.CL_consp(L_BUILTIN__371);
L_G217__373=lisp.values1(TMP_622);
if(lisp.values1(L_G217__373) !== lisp.S_nil){
TMP_624=G_572.func(L_HIR__368,L_BUILTIN__371);
TMP_623=TMP_624;
}else{
{
{
TMP_625=lisp.CL_symbolp(L_BUILTIN__371);
L_G219__374=lisp.values1(TMP_625);
if(lisp.values1(L_G219__374) !== lisp.S_nil){
TMP_626=lisp.values1(L_G219__374);
}else{
{
TMP_627=lisp.CL_functionp(L_BUILTIN__371);
L_G220__375=lisp.values1(TMP_627);
if(lisp.values1(L_G220__375) !== lisp.S_nil){
TMP_628=lisp.values1(L_G220__375);
}else{
TMP_628=lisp.values1(lisp.S_nil);
}
}
TMP_626=lisp.values1(lisp.values1(TMP_628));
}
}
L_G218__376=lisp.values1(lisp.values1(TMP_626));
if(lisp.values1(L_G218__376) !== lisp.S_nil){
TMP_630=lisp.CL_funcall(lisp.values1(L_BUILTIN__371),L_HIR__368);
TMP_629=TMP_630;
}else{
TMP_631=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([105, 110, 116, 101, 114, 110, 97, 108, 32, 101, 114, 114, 111, 114])));
TMP_629=TMP_631;
}
}
TMP_623=TMP_629;
}
}
TMP_620=TMP_623;
}
}
}
return TMP_620;
});
CL_COMPILERCOLONCALL=lisp.values1(F_COMPILERCOLONCALL_615);
let F_COMMON_LISPCOLONUNWIND_PROTECT_633;
F_COMMON_LISPCOLONUNWIND_PROTECT_633=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_634, arguments.length);
}
let TMP_643;
let L_PROTECT_FORM_RESULT__389;
let TMP_642;
let TMP_641;
let L_G226__388;
let TMP_640;
let L_RESULT__387;
let L_SAVED_RETURN_VAR__386;
let TMP_639;
let TMP_638;
let TMP_637;
let L_CLEANUP_FORM__385;
let TMP_636;
let L_PROTECTED_FORM__384;
let TMP_635;
let L_HIR__382;
L_HIR__382=arguments[0];
{
TMP_635=lisp.callFunctionWithCallStack(G_25,L_HIR__382);
L_PROTECTED_FORM__384=lisp.values1(TMP_635);
TMP_636=lisp.callFunctionWithCallStack(G_12,L_HIR__382);
L_CLEANUP_FORM__385=lisp.values1(TMP_636);
TMP_637=lisp.callFunctionWithCallStack(G_98,L_HIR__382);
if(lisp.values1(TMP_637) !== lisp.S_nil){
TMP_639=G_123.func(G_3.func(lisp.codeArrayToString([115, 97, 118, 101, 100])));
TMP_638=lisp.values1(TMP_639);
}else{
TMP_638=lisp.values1(lisp.S_nil);
}
L_SAVED_RETURN_VAR__386=lisp.values1(TMP_638);
L_RESULT__387=lisp.values1(lisp.S_nil);
if(lisp.values1(L_SAVED_RETURN_VAR__386) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 101, 116, 32, 126, 65, 59, 126, 37])),L_SAVED_RETURN_VAR__386);
}else{
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([116, 114, 121, 123])),lisp.symbolValue(G_37));
{
TMP_640=lisp.callFunctionWithCallStack(G_98,L_HIR__382);
L_G226__388=lisp.values1(TMP_640);
if(lisp.values1(L_G226__388) !== lisp.S_nil){
{
TMP_642=G_276.func(L_PROTECTED_FORM__384);
L_PROTECT_FORM_RESULT__389=lisp.values1(TMP_642);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 108, 105, 115, 112, 46, 99, 117, 114, 114, 101, 110, 116, 86, 97, 108, 117, 101, 115, 40, 41, 59, 126, 37])),L_SAVED_RETURN_VAR__386);
}
TMP_641=lisp.values1(lisp.values1(lisp.values1(L_PROTECT_FORM_RESULT__389)));
}else{
G_89.func(L_PROTECTED_FORM__384,G_91);
TMP_641=lisp.values1(lisp.values1(lisp.S_nil));
}
}
L_RESULT__387=lisp.values1(lisp.values1(TMP_641));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125, 102, 105, 110, 97, 108, 108, 121, 123])),lisp.symbolValue(G_37));
G_89.func(L_CLEANUP_FORM__385,G_91);
TMP_643=lisp.callFunctionWithCallStack(G_98,L_HIR__382);
if(lisp.values1(TMP_643) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 114, 101, 115, 116, 111, 114, 101, 86, 97, 108, 117, 101, 115, 40, 126, 65, 41, 59, 126, 37])),L_SAVED_RETURN_VAR__386);
}else{
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}
return lisp.values1(L_RESULT__387);
});
CL_COMMON_LISPCOLONUNWIND_PROTECT=lisp.values1(F_COMMON_LISPCOLONUNWIND_PROTECT_633);
let F_P2_BLOCK_RESULT_VAR_NAME_645;
F_P2_BLOCK_RESULT_VAR_NAME_645=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_646, arguments.length);
}
let TMP_649;
let TMP_648;
let TMP_647;
let L_NAME__395;
L_NAME__395=arguments[0];
TMP_647=lisp.callFunctionWithCallStack(G_311,L_NAME__395);
TMP_648=G_131.func(TMP_647);
TMP_649=lisp.callFunctionWithCallStack(G_650,G_133,G_3.func(lisp.codeArrayToString([66, 76, 79, 67, 75, 95, 82, 69, 83, 85, 76, 84, 95])),TMP_648);
return TMP_649;
});
CL_COMPILER_P2_BLOCK_RESULT_VAR_NAME=lisp.values1(F_P2_BLOCK_RESULT_VAR_NAME_645);
let F_P2_ESCAPE_BLOCK_NAME_651;
F_P2_ESCAPE_BLOCK_NAME_651=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_652, arguments.length);
}
let TMP_655;
let TMP_654;
let TMP_653;
let L_NAME__397;
L_NAME__397=arguments[0];
TMP_653=lisp.callFunctionWithCallStack(G_311,L_NAME__397);
TMP_654=G_131.func(TMP_653);
TMP_655=lisp.callFunctionWithCallStack(G_650,G_133,G_3.func(lisp.codeArrayToString([66, 76, 79, 67, 75, 95])),TMP_654);
return TMP_655;
});
CL_COMPILER_P2_ESCAPE_BLOCK_NAME=lisp.values1(F_P2_ESCAPE_BLOCK_NAME_651);
let F_COMMON_LISPCOLONBLOCK_656;
F_COMMON_LISPCOLONBLOCK_656=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_657, arguments.length);
}
let TMP_672;
let TMP_671;
let TMP_670;
let L_RESULT_VAR__409;
let TMP_669;
let L_ERROR_VAR__408;
let TMP_668;
let L_RESULT__406;
let TMP_667;
let TMP_666;
let L_G233__405;
let TMP_665;
let L_BLOCK_RESULT__404;
let TMP_664;
let TMP_663;
let L_G232__403;
let TMP_662;
let TMP_660;
let L_BODY__402;
let TMP_659;
let L_NAME__401;
let TMP_658;
let L_HIR__399;
L_HIR__399=arguments[0];
{
TMP_658=lisp.callFunctionWithCallStack(G_25,L_HIR__399);
L_NAME__401=lisp.values1(TMP_658);
TMP_659=lisp.callFunctionWithCallStack(G_12,L_HIR__399);
L_BODY__402=lisp.values1(TMP_659);
{
TMP_660=lisp.callFunctionWithCallStack(G_661,L_NAME__401);
TMP_662=lisp.callFunctionWithCallStack(G_596,0,TMP_660);
L_G232__403=lisp.values1(TMP_662);
if(lisp.values1(L_G232__403) !== lisp.S_nil){
{
TMP_664=G_646.func(L_NAME__401);
L_BLOCK_RESULT__404=lisp.values1(TMP_664);
{
TMP_665=lisp.CL_cons(L_BLOCK_RESULT__404,lisp.symbolValue(G_45));
L_G233__405=lisp.values1(TMP_665);
lisp.setSymbolValue(G_45, lisp.values1(L_G233__405));
}
TMP_666=G_652.func(L_NAME__401);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 58, 32, 102, 111, 114, 40, 59, 59, 41, 123])),TMP_666);
{
TMP_667=G_288.func(L_BODY__402);
L_RESULT__406=lisp.values1(TMP_667);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 59, 126, 37])),L_BLOCK_RESULT__404,L_RESULT__406);
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([98, 114, 101, 97, 107, 59])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}
TMP_663=lisp.values1(L_BLOCK_RESULT__404);
}else{
{
TMP_668=G_123.func(G_3.func(lisp.codeArrayToString([69, 95])));
L_ERROR_VAR__408=lisp.values1(TMP_668);
TMP_669=G_127.func();
L_RESULT_VAR__409=lisp.values1(TMP_669);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([116, 114, 121, 32, 123])),lisp.symbolValue(G_37));
TMP_670=G_288.func(L_BODY__402);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 126, 37])),L_RESULT_VAR__409,TMP_670);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([125, 99, 97, 116, 99, 104, 40, 126, 65, 41, 123])),L_ERROR_VAR__408);
TMP_671=lisp.callFunctionWithCallStack(G_390,L_NAME__401);
TMP_672=G_154.func(TMP_671);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 126, 65, 32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 108, 105, 115, 112, 46, 66, 108, 111, 99, 107, 86, 97, 108, 117, 101, 32, 38, 38, 32, 126, 65, 46, 110, 97, 109, 101, 32, 61, 61, 61, 32, 126, 65, 41, 123, 126, 65, 61, 126, 65, 46, 118, 97, 108, 117, 101, 59, 125, 126, 37])),L_ERROR_VAR__408,L_ERROR_VAR__408,TMP_672,L_RESULT_VAR__409,L_ERROR_VAR__408);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([101, 108, 115, 101, 123, 116, 104, 114, 111, 119, 32, 126, 65, 59, 125, 126, 37])),L_ERROR_VAR__408);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}
TMP_663=lisp.values1(L_RESULT_VAR__409);
}
}
}
return TMP_663;
});
CL_COMMON_LISPCOLONBLOCK=lisp.values1(F_COMMON_LISPCOLONBLOCK_656);
let F_COMMON_LISPCOLONRETURN_FROM_674;
F_COMMON_LISPCOLONRETURN_FROM_674=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_675, arguments.length);
}
let TMP_686;
let TMP_685;
let TMP_684;
let L_RESULT__421;
let TMP_683;
let TMP_682;
let TMP_681;
let L_RESULT__419;
let TMP_680;
let L_G239__418;
let TMP_679;
let TMP_678;
let L_FORM__417;
let TMP_677;
let L_NAME__416;
let TMP_676;
let L_HIR__414;
L_HIR__414=arguments[0];
{
TMP_676=lisp.callFunctionWithCallStack(G_25,L_HIR__414);
L_NAME__416=lisp.values1(TMP_676);
TMP_677=lisp.callFunctionWithCallStack(G_12,L_HIR__414);
L_FORM__417=lisp.values1(TMP_677);
{
TMP_678=lisp.callFunctionWithCallStack(G_661,L_NAME__416);
TMP_679=lisp.callFunctionWithCallStack(G_596,0,TMP_678);
L_G239__418=lisp.values1(TMP_679);
if(lisp.values1(L_G239__418) !== lisp.S_nil){
{
TMP_680=G_276.func(L_FORM__417);
L_RESULT__419=lisp.values1(TMP_680);
TMP_681=G_646.func(L_NAME__416);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 59, 126, 37])),TMP_681,L_RESULT__419);
}
TMP_682=G_652.func(L_NAME__416);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([98, 114, 101, 97, 107, 32, 126, 65, 59, 126, 37])),TMP_682);
}else{
{
TMP_683=G_276.func(L_FORM__417);
L_RESULT__421=lisp.values1(TMP_683);
TMP_684=lisp.callFunctionWithCallStack(G_390,L_NAME__416);
TMP_685=G_154.func(TMP_684);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 108, 105, 115, 112, 46, 66, 108, 111, 99, 107, 86, 97, 108, 117, 101, 40, 126, 65, 44, 126, 65, 41, 59])),TMP_685,L_RESULT__421);
}
}
}
TMP_686=G_286.func();
}
return TMP_686;
});
CL_COMMON_LISPCOLONRETURN_FROM=lisp.values1(F_COMMON_LISPCOLONRETURN_FROM_674);
let F_COMMON_LISPCOLONLOOP_688;
F_COMMON_LISPCOLONLOOP_688=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_689, arguments.length);
}
let TMP_691;
let L_BODY__428;
let TMP_690;
let L_HIR__426;
L_HIR__426=arguments[0];
{
TMP_690=lisp.callFunctionWithCallStack(G_25,L_HIR__426);
L_BODY__428=lisp.values1(TMP_690);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([102, 111, 114, 40, 59, 59, 41, 123])),lisp.symbolValue(G_37));
G_89.func(L_BODY__428,G_91);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([98, 114, 101, 97, 107, 59])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
TMP_691=G_286.func();
}
return TMP_691;
});
CL_COMMON_LISPCOLONLOOP=lisp.values1(F_COMMON_LISPCOLONLOOP_688);
let F_COMPILERCOLONRECUR_693;
F_COMPILERCOLONRECUR_693=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_694, arguments.length);
}
let TMP_695;
let L_HIR__433;
L_HIR__433=arguments[0];
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([99, 111, 110, 116, 105, 110, 117, 101, 59])),lisp.symbolValue(G_37));
TMP_695=G_286.func();
return TMP_695;
});
CL_COMPILERCOLONRECUR=lisp.values1(F_COMPILERCOLONRECUR_693);
let F_TAGBODY_STATE_NAME_697;
F_TAGBODY_STATE_NAME_697=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_698, arguments.length);
}
let TMP_699;
let L_TAGBODY_NAME__439;
L_TAGBODY_NAME__439=arguments[0];
TMP_699=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([126, 65, 95, 83, 84, 65, 84, 69])),L_TAGBODY_NAME__439);
return TMP_699;
});
CL_COMPILER_TAGBODY_STATE_NAME=lisp.values1(F_TAGBODY_STATE_NAME_697);
let F_TAGBODY_TAG_NAME_700;
F_TAGBODY_TAG_NAME_700=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_701, arguments.length);
}
let TMP_703;
let TMP_702;
let L_TAG__441;
L_TAG__441=arguments[0];
TMP_702=lisp.callFunctionWithCallStack(G_311,L_TAG__441);
TMP_703=lisp.callFunctionWithCallStack(G_704,TMP_702);
return TMP_703;
});
CL_COMPILER_TAGBODY_TAG_NAME=lisp.values1(F_TAGBODY_TAG_NAME_700);
let F_COMMON_LISPCOLONTAGBODY_705;
F_COMMON_LISPCOLONTAGBODY_705=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_706, arguments.length);
}
let TMP_723;
let TMP_722;
let L_BODY__457;
let L_G262__456;
let TMP_721;
let L_TAG__455;
let TMP_720;
let L_G260__453;
let TMP_719;
let L_PAIR__452;
let TMP_718;
let TMP_717;
let L_G253__451;
let TMP_716;
let TMP_715;
let TMP_714;
let L_STATE_VAR__449;
let TMP_713;
let L_ERROR_VAR__448;
let TMP_712;
let TMP_711;
let L_EXIST_ESCAPE_P__447;
let TMP_710;
let TMP_709;
let L_TAG_BODY_PAIRS__446;
let TMP_708;
let L_TAGBODY_NAME__445;
let TMP_707;
let L_HIR__443;
L_HIR__443=arguments[0];
{
TMP_707=lisp.callFunctionWithCallStack(G_25,L_HIR__443);
L_TAGBODY_NAME__445=lisp.values1(TMP_707);
TMP_708=lisp.callFunctionWithCallStack(G_12,L_HIR__443);
L_TAG_BODY_PAIRS__446=lisp.values1(TMP_708);
TMP_709=lisp.callFunctionWithCallStack(G_355,L_HIR__443);
TMP_710=lisp.callFunctionWithCallStack(G_545,TMP_709);
L_EXIST_ESCAPE_P__447=lisp.values1(TMP_710);
if(lisp.values1(L_EXIST_ESCAPE_P__447) !== lisp.S_nil){
TMP_712=G_123.func(G_3.func(lisp.codeArrayToString([69, 82, 82])));
TMP_711=lisp.values1(TMP_712);
}else{
TMP_711=lisp.values1(lisp.S_nil);
}
L_ERROR_VAR__448=lisp.values1(TMP_711);
{
TMP_713=G_698.func(L_TAGBODY_NAME__445);
L_STATE_VAR__449=lisp.values1(TMP_713);
TMP_714=lisp.callFunctionWithCallStack(G_18,L_TAG_BODY_PAIRS__446);
TMP_715=lisp.callFunctionWithCallStack(G_119,TMP_714);
TMP_716=G_701.func(TMP_715);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 101, 116, 32, 126, 65, 32, 61, 32, 39, 126, 65, 39, 59, 126, 37])),L_STATE_VAR__449,TMP_716);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 58, 32, 102, 111, 114, 40, 59, 59, 41, 123, 126, 37])),L_TAGBODY_NAME__445);
if(lisp.values1(L_EXIST_ESCAPE_P__447) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([116, 114, 121, 123])),lisp.symbolValue(G_37));
}else{
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([115, 119, 105, 116, 99, 104, 40, 126, 65, 41, 123, 126, 37])),L_STATE_VAR__449);
{
L_G253__451=lisp.values1(L_TAG_BODY_PAIRS__446);
for(;;){
TMP_717=lisp.callFunctionWithCallStack(G_117,L_G253__451);
if(lisp.values1(TMP_717) !== lisp.S_nil){
}else{
{
TMP_718=lisp.callFunctionWithCallStack(G_119,L_G253__451);
L_PAIR__452=lisp.values1(TMP_718);
TMP_719=lisp.callFunctionWithCallStack(G_121,L_G253__451);
L_G253__451=lisp.values1(TMP_719);
{
L_G260__453=lisp.values1(L_PAIR__452);
{
TMP_720=lisp.callFunctionWithCallStack(G_18,L_G260__453);
L_TAG__455=lisp.values1(TMP_720);
TMP_721=lisp.callFunctionWithCallStack(G_466,L_G260__453);
L_G262__456=lisp.values1(TMP_721);
L_BODY__457=lisp.values1(L_G262__456);
TMP_722=G_701.func(L_TAG__455);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([99, 97, 115, 101, 32, 39, 126, 65, 39, 58, 126, 37])),TMP_722);
G_89.func(L_BODY__457,G_91);
}
}
}
continue;
}
break;
}
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([98, 114, 101, 97, 107, 59])),lisp.symbolValue(G_37));
if(lisp.values1(L_EXIST_ESCAPE_P__447) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([125, 99, 97, 116, 99, 104, 40, 126, 65, 41, 123, 126, 37])),L_ERROR_VAR__448);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 40, 126, 65, 32, 105, 110, 115, 116, 97, 110, 99, 101, 111, 102, 32, 108, 105, 115, 112, 46, 84, 97, 103, 86, 97, 108, 117, 101, 32, 38, 38, 32, 126, 65, 46, 105, 100, 61, 61, 61, 39, 126, 65, 39, 41, 123, 126, 65, 61, 126, 65, 46, 105, 110, 100, 101, 120, 59, 125, 126, 37])),L_ERROR_VAR__448,L_ERROR_VAR__448,L_TAGBODY_NAME__445,L_STATE_VAR__449,L_ERROR_VAR__448);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([101, 108, 115, 101, 123, 116, 104, 114, 111, 119, 32, 126, 65, 59, 125])),L_ERROR_VAR__448);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}else{
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
TMP_723=G_286.func();
}
}
return TMP_723;
});
CL_COMMON_LISPCOLONTAGBODY=lisp.values1(F_COMMON_LISPCOLONTAGBODY_705);
let F_COMMON_LISPCOLONGO_725;
F_COMMON_LISPCOLONGO_725=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_726, arguments.length);
}
let TMP_738;
let TMP_737;
let TMP_736;
let L_TAGBODY_VALUE__470;
let TMP_735;
let TMP_734;
let L_STATE_VAR__468;
let TMP_733;
let L_NAME__467;
let TMP_731;
let TMP_730;
let L_G267__466;
let TMP_729;
let TMP_728;
let L_TAG__465;
let TMP_727;
let L_HIR__463;
L_HIR__463=arguments[0];
{
TMP_727=lisp.callFunctionWithCallStack(G_25,L_HIR__463);
L_TAG__465=lisp.values1(TMP_727);
{
TMP_728=lisp.callFunctionWithCallStack(G_661,L_TAG__465);
TMP_729=lisp.callFunctionWithCallStack(G_596,0,TMP_728);
L_G267__466=lisp.values1(TMP_729);
if(lisp.values1(L_G267__466) !== lisp.S_nil){
{
TMP_730=lisp.callFunctionWithCallStack(G_311,L_TAG__465);
TMP_731=lisp.callFunctionWithCallStack(G_732,TMP_730);
L_NAME__467=lisp.values1(TMP_731);
TMP_733=G_698.func(L_NAME__467);
L_STATE_VAR__468=lisp.values1(TMP_733);
TMP_734=G_701.func(L_TAG__465);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 39, 126, 65, 39, 59, 126, 37])),L_STATE_VAR__468,TMP_734);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([99, 111, 110, 116, 105, 110, 117, 101, 32, 126, 65, 59, 126, 37])),L_NAME__467);
lisp.CL_values();
}
}else{
{
TMP_735=lisp.callFunctionWithCallStack(G_311,L_TAG__465);
L_TAGBODY_VALUE__470=lisp.values1(TMP_735);
TMP_736=lisp.callFunctionWithCallStack(G_732,L_TAGBODY_VALUE__470);
TMP_737=lisp.callFunctionWithCallStack(G_704,L_TAGBODY_VALUE__470);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 108, 105, 115, 112, 46, 84, 97, 103, 86, 97, 108, 117, 101, 40, 39, 126, 65, 39, 44, 32, 39, 126, 65, 39, 41, 59, 126, 37])),TMP_736,TMP_737);
}
}
}
}
TMP_738=G_286.func();
return TMP_738;
});
CL_COMMON_LISPCOLONGO=lisp.values1(F_COMMON_LISPCOLONGO_725);
let F_SYSTEMCOLONPERCENTDEFUN_740;
F_SYSTEMCOLONPERCENTDEFUN_740=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_741, arguments.length);
}
let L_NAME_VAR__485;
let TMP_749;
let save_STARP2_EMIT_STREAMSTAR__484;
let TMP_748;
let save_STARP2_EMIT_STREAMSTAR__483;
let L_EMITTER_STREAM__482;
let TMP_747;
let save_STARP2_TEMPORARY_VARIABLESSTAR__481;
let L_G273__480;
let TMP_746;
let TMP_745;
let L_VAR__479;
let TMP_744;
let L_FUNCTION__478;
let TMP_743;
let L_NAME__477;
let TMP_742;
let L_HIR__475;
L_HIR__475=arguments[0];
{
TMP_742=lisp.callFunctionWithCallStack(G_25,L_HIR__475);
L_NAME__477=lisp.values1(TMP_742);
TMP_743=lisp.callFunctionWithCallStack(G_12,L_HIR__475);
L_FUNCTION__478=lisp.values1(TMP_743);
{
TMP_744=G_167.func(L_NAME__477);
L_VAR__479=lisp.values1(TMP_744);
{
TMP_745=lisp.CL_symbolFunction(G_112);
TMP_746=lisp.callFunctionWithCallStack(G_49,L_VAR__479,lisp.symbolValue(G_44),G_111,TMP_745);
L_G273__480=lisp.values1(TMP_746);
lisp.setSymbolValue(G_44, lisp.values1(L_G273__480));
}
{
save_STARP2_TEMPORARY_VARIABLESSTAR__481=G_45.value;
G_45.value=lisp.values1(lisp.S_nil);
try{
{
TMP_747=G_46.func(lisp.symbolValue(G_37));
L_EMITTER_STREAM__482=lisp.values1(TMP_747);
{
save_STARP2_EMIT_STREAMSTAR__483=G_37.value;
G_37.value=lisp.values1(L_EMITTER_STREAM__482);
try{
TMP_748=G_276.func(L_FUNCTION__478);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 59, 126, 37])),L_VAR__479,TMP_748);
}finally{
G_37.value=save_STARP2_EMIT_STREAMSTAR__483;
}
}
{
save_STARP2_EMIT_STREAMSTAR__484=G_37.value;
G_37.value=lisp.values1(lisp.symbolValue(G_43));
try{
G_110.func();
}finally{
G_37.value=save_STARP2_EMIT_STREAMSTAR__484;
}
}
G_58.func(lisp.symbolValue(G_43),L_EMITTER_STREAM__482);
}
}finally{
G_45.value=save_STARP2_TEMPORARY_VARIABLESSTAR__481;
}
}
{
TMP_749=G_154.func(L_NAME__477);
L_NAME_VAR__485=lisp.values1(TMP_749);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 46, 108, 105, 115, 112, 95, 110, 97, 109, 101, 32, 61, 32, 39, 126, 65, 39, 126, 37])),L_VAR__479,L_NAME__477);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 115, 101, 116, 83, 121, 109, 98, 111, 108, 70, 117, 110, 99, 116, 105, 111, 110, 40, 126, 65, 44, 32, 126, 65, 41, 59, 126, 37])),L_NAME_VAR__485,L_VAR__479);
}
}
}
return lisp.values1(L_NAME_VAR__485);
});
CL_SYSTEMCOLONPERCENTDEFUN=lisp.values1(F_SYSTEMCOLONPERCENTDEFUN_740);
let F_SYSTEMCOLONPERCENTDEFPACKAGE_751;
F_SYSTEMCOLONPERCENTDEFPACKAGE_751=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_752, arguments.length);
}
let TMP_775;
let TMP_774;
let TMP_773;
let TMP_772;
let L_RESULT__517;
let TMP_771;
let TMP_770;
let TMP_769;
let TMP_768;
let L_NAME__515;
let TMP_767;
let TMP_766;
let L_G297__514;
let L_FIRST__512;
let TMP_765;
let L_NAME__510;
let TMP_764;
let TMP_763;
let L_G290__509;
let L_FIRST__507;
let TMP_762;
let L_NAME__505;
let TMP_761;
let TMP_760;
let L_G283__504;
let L_FIRST__502;
let L_NICKNAMES__500;
let TMP_759;
let L_G281__499;
let TMP_758;
let L_USE_PACKAGE_NAMES__498;
let TMP_757;
let L_G280__497;
let TMP_756;
let L_EXPORT_NAMES__496;
let TMP_755;
let L_G278__494;
let L_SPECS__493;
let TMP_754;
let L_NAME__492;
let TMP_753;
let L_HIR__490;
L_HIR__490=arguments[0];
{
TMP_753=lisp.callFunctionWithCallStack(G_25,L_HIR__490);
L_NAME__492=lisp.values1(TMP_753);
TMP_754=lisp.callFunctionWithCallStack(G_12,L_HIR__490);
L_SPECS__493=lisp.values1(TMP_754);
{
L_G278__494=lisp.values1(L_SPECS__493);
{
TMP_755=lisp.callFunctionWithCallStack(G_18,L_G278__494);
L_EXPORT_NAMES__496=lisp.values1(TMP_755);
TMP_756=lisp.callFunctionWithCallStack(G_466,L_G278__494);
L_G280__497=lisp.values1(TMP_756);
TMP_757=lisp.callFunctionWithCallStack(G_18,L_G280__497);
L_USE_PACKAGE_NAMES__498=lisp.values1(TMP_757);
TMP_758=lisp.callFunctionWithCallStack(G_466,L_G280__497);
L_G281__499=lisp.values1(TMP_758);
TMP_759=lisp.callFunctionWithCallStack(G_18,L_G281__499);
L_NICKNAMES__500=lisp.values1(TMP_759);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_43),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 100, 101, 102, 112, 97, 99, 107, 97, 103, 101, 40, 39, 126, 65, 39, 44, 32, 123])),L_NAME__492);
{
L_FIRST__502=lisp.values1(G_5);
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([101, 120, 112, 111, 114, 116, 78, 97, 109, 101, 115, 58, 32, 91])),lisp.symbolValue(G_43));
{
L_G283__504=lisp.values1(L_EXPORT_NAMES__496);
for(;;){
TMP_760=lisp.callFunctionWithCallStack(G_117,L_G283__504);
if(lisp.values1(TMP_760) !== lisp.S_nil){
}else{
{
TMP_761=lisp.callFunctionWithCallStack(G_119,L_G283__504);
L_NAME__505=lisp.values1(TMP_761);
TMP_762=lisp.callFunctionWithCallStack(G_121,L_G283__504);
L_G283__504=lisp.values1(TMP_762);
if(lisp.values1(L_FIRST__502) !== lisp.S_nil){
L_FIRST__502=lisp.values1(lisp.S_nil);
}else{
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44, 32])),lisp.symbolValue(G_43));
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_43),G_3.func(lisp.codeArrayToString([39, 126, 65, 39])),L_NAME__505);
}
continue;
}
break;
}
}
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([93])),lisp.symbolValue(G_43));
}
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44, 32])),lisp.symbolValue(G_43));
{
L_FIRST__507=lisp.values1(G_5);
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([117, 115, 101, 80, 97, 99, 107, 97, 103, 101, 78, 97, 109, 101, 115, 58, 32, 91])),lisp.symbolValue(G_43));
{
L_G290__509=lisp.values1(L_USE_PACKAGE_NAMES__498);
for(;;){
TMP_763=lisp.callFunctionWithCallStack(G_117,L_G290__509);
if(lisp.values1(TMP_763) !== lisp.S_nil){
}else{
{
TMP_764=lisp.callFunctionWithCallStack(G_119,L_G290__509);
L_NAME__510=lisp.values1(TMP_764);
TMP_765=lisp.callFunctionWithCallStack(G_121,L_G290__509);
L_G290__509=lisp.values1(TMP_765);
if(lisp.values1(L_FIRST__507) !== lisp.S_nil){
L_FIRST__507=lisp.values1(lisp.S_nil);
}else{
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44, 32])),lisp.symbolValue(G_43));
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_43),G_3.func(lisp.codeArrayToString([39, 126, 65, 39])),L_NAME__510);
}
continue;
}
break;
}
}
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([93])),lisp.symbolValue(G_43));
}
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44, 32])),lisp.symbolValue(G_43));
{
L_FIRST__512=lisp.values1(G_5);
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([110, 105, 99, 107, 110, 97, 109, 101, 115, 58, 32, 91])),lisp.symbolValue(G_43));
{
L_G297__514=lisp.values1(L_NICKNAMES__500);
for(;;){
TMP_766=lisp.callFunctionWithCallStack(G_117,L_G297__514);
if(lisp.values1(TMP_766) !== lisp.S_nil){
}else{
{
TMP_767=lisp.callFunctionWithCallStack(G_119,L_G297__514);
L_NAME__515=lisp.values1(TMP_767);
TMP_768=lisp.callFunctionWithCallStack(G_121,L_G297__514);
L_G297__514=lisp.values1(TMP_768);
if(lisp.values1(L_FIRST__512) !== lisp.S_nil){
L_FIRST__512=lisp.values1(lisp.S_nil);
}else{
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44, 32])),lisp.symbolValue(G_43));
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_43),G_3.func(lisp.codeArrayToString([39, 126, 65, 39])),L_NAME__515);
}
continue;
}
break;
}
}
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([93])),lisp.symbolValue(G_43));
}
}
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125, 41, 59])),lisp.symbolValue(G_43));
{
TMP_769=lisp.callFunctionWithCallStack(G_98,L_HIR__490);
if(lisp.values1(TMP_769) !== lisp.S_nil){
TMP_771=G_127.func();
TMP_770=lisp.values1(TMP_771);
}else{
TMP_770=lisp.values1(lisp.S_nil);
}
L_RESULT__517=lisp.values1(TMP_770);
TMP_772=lisp.callFunctionWithCallStack(G_98,L_HIR__490);
if(lisp.values1(TMP_772) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__517);
}else{
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 101, 110, 115, 117, 114, 101, 80, 97, 99, 107, 97, 103, 101, 40, 39, 126, 65, 39, 41, 59])),L_NAME__492);
TMP_773=lisp.callFunctionWithCallStack(G_98,L_HIR__490);
if(lisp.values1(TMP_773) !== lisp.S_nil){
TMP_774=lisp.values1(L_RESULT__517);
}else{
TMP_775=G_286.func();
TMP_774=TMP_775;
}
}
}
return TMP_774;
});
CL_SYSTEMCOLONPERCENTDEFPACKAGE=lisp.values1(F_SYSTEMCOLONPERCENTDEFPACKAGE_751);
let F_SYSTEMCOLONPERCENTIN_PACKAGE_777;
F_SYSTEMCOLONPERCENTIN_PACKAGE_777=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_778, arguments.length);
}
let TMP_786;
let TMP_785;
let TMP_784;
let TMP_783;
let L_RESULT__525;
let TMP_782;
let TMP_781;
let TMP_780;
let L_NAME__524;
let TMP_779;
let L_HIR__522;
L_HIR__522=arguments[0];
{
TMP_779=lisp.callFunctionWithCallStack(G_25,L_HIR__522);
L_NAME__524=lisp.values1(TMP_779);
{
TMP_780=lisp.callFunctionWithCallStack(G_98,L_HIR__522);
if(lisp.values1(TMP_780) !== lisp.S_nil){
TMP_782=G_127.func();
TMP_781=lisp.values1(TMP_782);
}else{
TMP_781=lisp.values1(lisp.S_nil);
}
L_RESULT__525=lisp.values1(TMP_781);
TMP_783=lisp.callFunctionWithCallStack(G_98,L_HIR__522);
if(lisp.values1(TMP_783) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__525);
}else{
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 99, 104, 97, 110, 103, 101, 67, 117, 114, 114, 101, 110, 116, 80, 97, 99, 107, 97, 103, 101, 40, 39, 126, 65, 39, 41, 59])),L_NAME__524);
TMP_784=lisp.callFunctionWithCallStack(G_98,L_HIR__522);
if(lisp.values1(TMP_784) !== lisp.S_nil){
TMP_785=lisp.values1(L_RESULT__525);
}else{
TMP_786=G_286.func();
TMP_785=TMP_786;
}
}
}
return TMP_785;
});
CL_SYSTEMCOLONPERCENTIN_PACKAGE=lisp.values1(F_SYSTEMCOLONPERCENTIN_PACKAGE_777);
let F_P2_EMIT_REF_788;
F_P2_EMIT_REF_788=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_789, arguments.length);
}
let L_CODE__542;
let TMP_800;
let L_G321__541;
let TMP_799;
let TMP_798;
let TMP_797;
let TMP_796;
let L_KEYS__540;
let BLOCK_RESULT_NIL__539;
let L_RESULT__538;
let TMP_795;
let TMP_793;
let L_KEYS__537;
let L_G314__536;
let TMP_792;
let L_OBJECT__535;
let TMP_791;
let L_G312__533;
let L_OUT__532;
let TMP_790;
let L_ARGS__530;
L_ARGS__530=arguments[0];
{
{
TMP_790=lisp.callFunctionWithCallStack(G_52);
L_OUT__532=lisp.values1(TMP_790);
{
L_G312__533=lisp.values1(L_ARGS__530);
{
TMP_791=lisp.callFunctionWithCallStack(G_18,L_G312__533);
L_OBJECT__535=lisp.values1(TMP_791);
TMP_792=lisp.callFunctionWithCallStack(G_466,L_G312__533);
L_G314__536=lisp.values1(TMP_792);
L_KEYS__537=lisp.values1(L_G314__536);
TMP_793=lisp.callFunctionWithCallStack(G_794,L_OBJECT__535);
if(lisp.values1(TMP_793) !== lisp.S_nil){
{
TMP_795=G_276.func(L_OBJECT__535);
L_RESULT__538=lisp.values1(TMP_795);
lisp.callFunctionWithCallStack(G_79,L_RESULT__538,L_OUT__532);
}
}else{
lisp.callFunctionWithCallStack(G_64,L_OBJECT__535,L_OUT__532);
}
if(lisp.values1(L_KEYS__537) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([46])),L_OUT__532);
}else{
}
BLOCK_NIL__539: for(;;){{
L_KEYS__540=lisp.values1(L_KEYS__537);
for(;;){
TMP_796=lisp.callFunctionWithCallStack(G_209,L_KEYS__540);
if(lisp.values1(TMP_796) !== lisp.S_nil){
BLOCK_RESULT_NIL__539=lisp.values1(lisp.S_nil);
break BLOCK_NIL__539;
}else{
TMP_797=lisp.callFunctionWithCallStack(G_18,L_KEYS__540);
lisp.callFunctionWithCallStack(G_64,TMP_797,L_OUT__532);
TMP_798=lisp.callFunctionWithCallStack(G_466,L_KEYS__540);
if(lisp.values1(TMP_798) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([46])),L_OUT__532);
}else{
}
{
TMP_799=lisp.callFunctionWithCallStack(G_466,L_KEYS__540);
L_G321__541=lisp.values1(TMP_799);
L_KEYS__540=lisp.values1(L_G321__541);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__539=lisp.values1(lisp.S_nil);
break;
}
}
}
TMP_800=lisp.callFunctionWithCallStack(G_62,L_OUT__532);
}
L_CODE__542=lisp.values1(lisp.values1(lisp.values1(TMP_800)));
}
return lisp.values1(L_CODE__542);
});
CL_COMPILER_P2_EMIT_REF=lisp.values1(F_P2_EMIT_REF_788);
let F_FFICOLONREF_801;
F_FFICOLONREF_801=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_802, arguments.length);
}
let TMP_804;
let TMP_803;
let L_HIR__543;
L_HIR__543=arguments[0];
TMP_803=lisp.callFunctionWithCallStack(G_25,L_HIR__543);
TMP_804=G_789.func(TMP_803);
return TMP_804;
});
CL_FFICOLONREF=lisp.values1(F_FFICOLONREF_801);
let F_FFICOLONSET_806;
F_FFICOLONSET_806=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_807, arguments.length);
}
let TMP_811;
let L_RESULT__553;
let TMP_810;
let L_RHS__552;
let TMP_809;
let L_LHS__551;
let TMP_808;
let L_HIR__549;
L_HIR__549=arguments[0];
{
TMP_808=lisp.callFunctionWithCallStack(G_25,L_HIR__549);
L_LHS__551=lisp.values1(TMP_808);
TMP_809=lisp.callFunctionWithCallStack(G_12,L_HIR__549);
L_RHS__552=lisp.values1(TMP_809);
{
TMP_810=G_276.func(L_RHS__552);
L_RESULT__553=lisp.values1(TMP_810);
TMP_811=G_271.func(L_LHS__551);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61, 126, 65, 59, 126, 37])),TMP_811,L_RESULT__553);
}
}
return lisp.values1(L_RESULT__553);
});
CL_FFICOLONSET=lisp.values1(F_FFICOLONSET_806);
let F_P2_CONVERT_VAR_813;
F_P2_CONVERT_VAR_813=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_814, arguments.length);
}
let TMP_819;
let TMP_818;
let TMP_817;
let TMP_816;
let TMP_815;
let L_VAR__558;
L_VAR__558=arguments[0];
TMP_815=lisp.callFunctionWithCallStack(G_27,L_VAR__558);
if(lisp.values1(TMP_815) !== lisp.S_nil){
TMP_817=G_131.func(L_VAR__558);
TMP_816=TMP_817;
}else{
TMP_818=lisp.callFunctionWithCallStack(G_25,L_VAR__558);
TMP_819=G_789.func(TMP_818);
TMP_816=TMP_819;
}
return TMP_816;
});
CL_COMPILER_P2_CONVERT_VAR=lisp.values1(F_P2_CONVERT_VAR_813);
let F_FFICOLONVAR_820;
F_FFICOLONVAR_820=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_821, arguments.length);
}
let TMP_830;
let TMP_829;
let TMP_828;
let L_G336__564;
let TMP_827;
let TMP_826;
let TMP_825;
let TMP_824;
let TMP_823;
let L_VARS__563;
let TMP_822;
let BLOCK_RESULT_NIL__562;
let L_HIR__560;
L_HIR__560=arguments[0];
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([118, 97, 114, 32])),lisp.symbolValue(G_37));
BLOCK_NIL__562: for(;;){{
TMP_822=lisp.callFunctionWithCallStack(G_25,L_HIR__560);
L_VARS__563=lisp.values1(TMP_822);
for(;;){
TMP_823=lisp.callFunctionWithCallStack(G_209,L_VARS__563);
if(lisp.values1(TMP_823) !== lisp.S_nil){
BLOCK_RESULT_NIL__562=lisp.values1(lisp.S_nil);
break BLOCK_NIL__562;
}else{
TMP_824=lisp.callFunctionWithCallStack(G_18,L_VARS__563);
TMP_825=G_814.func(TMP_824);
lisp.callFunctionWithCallStack(G_64,TMP_825,lisp.symbolValue(G_37));
TMP_826=lisp.callFunctionWithCallStack(G_466,L_VARS__563);
if(lisp.values1(TMP_826) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([44, 32])),lisp.symbolValue(G_37));
}else{
}
{
TMP_827=lisp.callFunctionWithCallStack(G_466,L_VARS__563);
L_G336__564=lisp.values1(TMP_827);
L_VARS__563=lisp.values1(L_G336__564);
}
continue;
}
break;
}
}
BLOCK_RESULT_NIL__562=lisp.values1(lisp.S_nil);
break;
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([59])),lisp.symbolValue(G_37));
TMP_828=lisp.callFunctionWithCallStack(G_98,L_HIR__560);
if(lisp.values1(TMP_828) !== lisp.S_nil){
TMP_830=G_286.func();
TMP_829=TMP_830;
}else{
TMP_829=lisp.values1(lisp.S_nil);
}
return TMP_829;
});
CL_FFICOLONVAR=lisp.values1(F_FFICOLONVAR_820);
let F_FFICOLONTYPEOF_832;
F_FFICOLONTYPEOF_832=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_833, arguments.length);
}
let TMP_842;
let TMP_841;
let TMP_840;
let TMP_839;
let L_RESULT__572;
let TMP_838;
let TMP_837;
let TMP_836;
let L_VALUE__571;
let TMP_835;
let TMP_834;
let L_HIR__569;
L_HIR__569=arguments[0];
{
TMP_834=lisp.callFunctionWithCallStack(G_25,L_HIR__569);
TMP_835=G_276.func(TMP_834);
L_VALUE__571=lisp.values1(TMP_835);
TMP_836=lisp.callFunctionWithCallStack(G_98,L_HIR__569);
if(lisp.values1(TMP_836) !== lisp.S_nil){
TMP_838=G_127.func();
TMP_837=lisp.values1(TMP_838);
}else{
TMP_837=lisp.values1(lisp.S_nil);
}
L_RESULT__572=lisp.values1(TMP_837);
TMP_839=lisp.callFunctionWithCallStack(G_98,L_HIR__569);
if(lisp.values1(TMP_839) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__572);
}else{
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([40, 116, 121, 112, 101, 111, 102, 32, 126, 65, 41, 59, 126, 37])),L_VALUE__571);
TMP_840=lisp.callFunctionWithCallStack(G_98,L_HIR__569);
if(lisp.values1(TMP_840) !== lisp.S_nil){
TMP_841=lisp.values1(L_RESULT__572);
}else{
TMP_842=G_286.func();
TMP_841=TMP_842;
}
}
return TMP_841;
});
CL_FFICOLONTYPEOF=lisp.values1(F_FFICOLONTYPEOF_832);
let F_FFICOLONNEW_844;
F_FFICOLONNEW_844=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_845, arguments.length);
}
let TMP_854;
let L_G348__587;
let TMP_853;
let TMP_852;
let L_G347__586;
let L_G345__584;
let TMP_851;
let TMP_850;
let L_RESULT__583;
let L_ARGS__582;
let TMP_849;
let L_FN__581;
let TMP_848;
let L_ARGS__580;
let TMP_847;
let L_EXPR__579;
let TMP_846;
let L_HIR__577;
L_HIR__577=arguments[0];
{
TMP_846=lisp.callFunctionWithCallStack(G_25,L_HIR__577);
L_EXPR__579=lisp.values1(TMP_846);
TMP_847=lisp.callFunctionWithCallStack(G_12,L_HIR__577);
L_ARGS__580=lisp.values1(TMP_847);
{
TMP_848=G_271.func(L_EXPR__579);
L_FN__581=lisp.values1(TMP_848);
TMP_849=G_516.func(L_ARGS__580);
L_ARGS__582=lisp.values1(TMP_849);
L_RESULT__583=lisp.values1(lisp.S_nil);
TMP_850=lisp.callFunctionWithCallStack(G_98,L_HIR__577);
if(lisp.values1(TMP_850) !== lisp.S_nil){
TMP_851=G_127.func();
L_RESULT__583=lisp.values1(TMP_851);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__583);
}else{
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([110, 101, 119, 32, 126, 65])),L_FN__581);
{
L_G345__584=lisp.values1(L_ARGS__582);
if(lisp.values1(L_G345__584) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_64,G_3.func(lisp.codeArrayToString([40])),lisp.symbolValue(G_37));
G_521.func(L_ARGS__582);
}else{
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([59])),lisp.symbolValue(G_37));
}
}
{
L_G347__586=lisp.values1(L_RESULT__583);
if(lisp.values1(L_G347__586) !== lisp.S_nil){
TMP_852=lisp.values1(L_G347__586);
}else{
{
TMP_853=G_286.func();
L_G348__587=lisp.values1(TMP_853);
if(lisp.values1(L_G348__587) !== lisp.S_nil){
TMP_854=lisp.values1(L_G348__587);
}else{
TMP_854=lisp.values1(lisp.S_nil);
}
}
TMP_852=TMP_854;
}
}
}
}
return TMP_852;
});
CL_FFICOLONNEW=lisp.values1(F_FFICOLONNEW_844);
let F_FFICOLONAGET_856;
F_FFICOLONAGET_856=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_857, arguments.length);
}
let TMP_867;
let TMP_866;
let L_INDEX__601;
let TMP_865;
let TMP_864;
let L_G353__600;
let L_OUT__598;
let TMP_863;
let L_INDEXES__597;
let TMP_862;
let TMP_861;
let L_VALUE__596;
let TMP_860;
let L_INDEXES__595;
let TMP_859;
let L_ARRAY__594;
let TMP_858;
let L_HIR__592;
L_HIR__592=arguments[0];
{
TMP_858=lisp.callFunctionWithCallStack(G_25,L_HIR__592);
L_ARRAY__594=lisp.values1(TMP_858);
TMP_859=lisp.callFunctionWithCallStack(G_12,L_HIR__592);
L_INDEXES__595=lisp.values1(TMP_859);
{
TMP_860=G_276.func(L_ARRAY__594);
L_VALUE__596=lisp.values1(TMP_860);
TMP_861=lisp.CL_symbolFunction(G_276);
TMP_862=lisp.callFunctionWithCallStack(G_519,TMP_861,L_INDEXES__595);
L_INDEXES__597=lisp.values1(TMP_862);
{
TMP_863=lisp.callFunctionWithCallStack(G_52);
L_OUT__598=lisp.values1(TMP_863);
lisp.callFunctionWithCallStack(G_79,L_VALUE__596,L_OUT__598);
{
L_G353__600=lisp.values1(L_INDEXES__597);
for(;;){
TMP_864=lisp.callFunctionWithCallStack(G_117,L_G353__600);
if(lisp.values1(TMP_864) !== lisp.S_nil){
}else{
{
TMP_865=lisp.callFunctionWithCallStack(G_119,L_G353__600);
L_INDEX__601=lisp.values1(TMP_865);
TMP_866=lisp.callFunctionWithCallStack(G_121,L_G353__600);
L_G353__600=lisp.values1(TMP_866);
lisp.callFunctionWithCallStack(G_34,L_OUT__598,G_3.func(lisp.codeArrayToString([91, 126, 65, 93])),L_INDEX__601);
}
continue;
}
break;
}
}
TMP_867=lisp.callFunctionWithCallStack(G_62,L_OUT__598);
}
}
}
return TMP_867;
});
CL_FFICOLONAGET=lisp.values1(F_FFICOLONAGET_856);
let F_COMPILERCOLONJS_CALL_869;
F_COMPILERCOLONJS_CALL_869=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_870, arguments.length);
}
let TMP_876;
let TMP_875;
let L_RESULT__613;
let L_FN_CODE__612;
let TMP_874;
let L_ARGS__611;
let TMP_873;
let L_ARGS__610;
let TMP_872;
let L_FN_PLACE__609;
let TMP_871;
let L_HIR__607;
L_HIR__607=arguments[0];
{
TMP_871=lisp.callFunctionWithCallStack(G_25,L_HIR__607);
L_FN_PLACE__609=lisp.values1(TMP_871);
TMP_872=lisp.callFunctionWithCallStack(G_12,L_HIR__607);
L_ARGS__610=lisp.values1(TMP_872);
{
TMP_873=G_516.func(L_ARGS__610);
L_ARGS__611=lisp.values1(TMP_873);
TMP_874=G_789.func(L_FN_PLACE__609);
L_FN_CODE__612=lisp.values1(TMP_874);
L_RESULT__613=lisp.values1(lisp.S_nil);
TMP_875=lisp.callFunctionWithCallStack(G_98,L_HIR__607);
if(lisp.values1(TMP_875) !== lisp.S_nil){
TMP_876=G_127.func();
L_RESULT__613=lisp.values1(TMP_876);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__613);
}else{
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 40])),L_FN_CODE__612);
G_521.func(L_ARGS__611);
}
}
return lisp.values1(L_RESULT__613);
});
CL_COMPILERCOLONJS_CALL=lisp.values1(F_COMPILERCOLONJS_CALL_869);
let F_COMPILERCOLONMODULE_878;
F_COMPILERCOLONMODULE_878=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_879, arguments.length);
}
let TMP_889;
let TMP_888;
let TMP_887;
let L_AS__630;
let L_G377__629;
let TMP_886;
let L_NAME__628;
let TMP_885;
let L_G375__626;
let TMP_884;
let L_EXPORT_MODULE__625;
let TMP_883;
let TMP_882;
let L_G368__624;
let L_EXPORT_MODULES__622;
let TMP_881;
let L_FORMS__621;
let TMP_880;
let L_HIR__618;
L_HIR__618=arguments[0];
{
TMP_880=lisp.callFunctionWithCallStack(G_12,L_HIR__618);
L_FORMS__621=lisp.values1(TMP_880);
TMP_881=lisp.callFunctionWithCallStack(G_355,L_HIR__618);
L_EXPORT_MODULES__622=lisp.values1(TMP_881);
if(lisp.values1(L_FORMS__621) !== lisp.S_nil){
G_288.func(L_FORMS__621);
}else{
}
{
L_G368__624=lisp.values1(L_EXPORT_MODULES__622);
for(;;){
TMP_882=lisp.callFunctionWithCallStack(G_117,L_G368__624);
if(lisp.values1(TMP_882) !== lisp.S_nil){
}else{
{
TMP_883=lisp.callFunctionWithCallStack(G_119,L_G368__624);
L_EXPORT_MODULE__625=lisp.values1(TMP_883);
TMP_884=lisp.callFunctionWithCallStack(G_121,L_G368__624);
L_G368__624=lisp.values1(TMP_884);
{
L_G375__626=lisp.values1(L_EXPORT_MODULE__625);
{
TMP_885=lisp.callFunctionWithCallStack(G_18,L_G375__626);
L_NAME__628=lisp.values1(TMP_885);
TMP_886=lisp.callFunctionWithCallStack(G_466,L_G375__626);
L_G377__629=lisp.values1(TMP_886);
L_AS__630=lisp.values1(L_G377__629);
if(lisp.values1(L_AS__630) !== lisp.S_nil){
TMP_887=G_814.func(L_NAME__628);
TMP_888=G_814.func(L_AS__630);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([109, 111, 100, 117, 108, 101, 46, 101, 120, 112, 111, 114, 116, 115, 46, 126, 65, 32, 61, 32, 126, 65, 126, 37])),TMP_887,TMP_888);
}else{
TMP_889=G_814.func(L_NAME__628);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([109, 111, 100, 117, 108, 101, 46, 101, 120, 112, 111, 114, 116, 115, 32, 61, 32, 126, 65, 126, 37])),TMP_889);
}
}
}
}
continue;
}
break;
}
}
}
return lisp.values1(lisp.S_nil);
});
CL_COMPILERCOLONMODULE=lisp.values1(F_COMPILERCOLONMODULE_878);
let F_ESCAPE_891;
F_ESCAPE_891=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_892, arguments.length);
}
let TMP_908;
let TMP_907;
let L_G395__649;
let TMP_906;
let TMP_905;
let L_G394__648;
let TMP_904;
let TMP_903;
let L_G393__647;
let TMP_902;
let TMP_901;
let L_G392__646;
let TMP_900;
let L_G391__645;
let L_DESTRUCTURING_VAR389__644;
let TMP_899;
let L_G390__643;
let TMP_898;
let TMP_897;
let TMP_896;
let L_INDEX384__642;
let L_VECTOR383__641;
let TMP_894;
let L_C__640;
let L_OUT__638;
let TMP_893;
let L_FORM__636;
L_FORM__636=arguments[0];
{
TMP_893=lisp.callFunctionWithCallStack(G_52);
L_OUT__638=lisp.values1(TMP_893);
{
L_C__640=lisp.values1(lisp.S_nil);
TMP_894=lisp.callFunctionWithCallStack(G_895,L_FORM__636);
L_VECTOR383__641=lisp.values1(TMP_894);
L_INDEX384__642=lisp.values1(0);
let HOST_G385_STATE = 'G386';
HOST_G385: for(;;){
switch(HOST_G385_STATE){
case 'G386':
TMP_896=lisp.callFunctionWithCallStack(G_181,L_VECTOR383__641);
TMP_897=lisp.callFunctionWithCallStack(G_191,L_INDEX384__642,TMP_896);
if(lisp.values1(TMP_897) !== lisp.S_nil){
}else{
HOST_G385_STATE='G387';
continue HOST_G385;
}
{
{
TMP_898=lisp.callFunctionWithCallStack(G_185,L_VECTOR383__641,L_INDEX384__642);
L_G390__643=lisp.values1(TMP_898);
TMP_899=lisp.callFunctionWithCallStack(G_263,L_INDEX384__642,1);
L_INDEX384__642=lisp.values1(TMP_899);
}
L_DESTRUCTURING_VAR389__644=lisp.values1(lisp.values1(lisp.values1(L_G390__643)));
L_C__640=lisp.values1(L_DESTRUCTURING_VAR389__644);
}
{
L_G391__645=lisp.values1(L_C__640);
{
TMP_900=lisp.callFunctionWithCallStack(G_596,L_G391__645,lisp.makeCharacter(10));
L_G392__646=lisp.values1(TMP_900);
if(lisp.values1(L_G392__646) !== lisp.S_nil){
TMP_901=lisp.values1(G_3.func(lisp.codeArrayToString([92, 110])));
}else{
{
TMP_902=lisp.callFunctionWithCallStack(G_596,L_G391__645,lisp.makeCharacter(39));
L_G393__647=lisp.values1(TMP_902);
if(lisp.values1(L_G393__647) !== lisp.S_nil){
TMP_903=lisp.values1(G_3.func(lisp.codeArrayToString([92, 39])));
}else{
{
TMP_904=lisp.callFunctionWithCallStack(G_596,L_G391__645,lisp.makeCharacter(92));
L_G394__648=lisp.values1(TMP_904);
if(lisp.values1(L_G394__648) !== lisp.S_nil){
TMP_905=lisp.values1(G_3.func(lisp.codeArrayToString([92, 92])));
}else{
{
TMP_906=lisp.callFunctionWithCallStack(G_596,L_G391__645,G_5);
L_G395__649=lisp.values1(TMP_906);
if(lisp.values1(L_G395__649) !== lisp.S_nil){
TMP_907=lisp.values1(L_C__640);
}else{
TMP_907=lisp.values1(lisp.S_nil);
}
}
TMP_905=lisp.values1(lisp.values1(TMP_907));
}
}
TMP_903=lisp.values1(lisp.values1(TMP_905));
}
}
TMP_901=lisp.values1(lisp.values1(TMP_903));
}
}
}
lisp.callFunctionWithCallStack(G_79,lisp.values1(lisp.values1(TMP_901)),L_OUT__638);
continue;
case 'G387':
}
break;
}
}
TMP_908=lisp.callFunctionWithCallStack(G_62,L_OUT__638);
}
return TMP_908;
});
CL_COMPILER_ESCAPE=lisp.values1(F_ESCAPE_891);
let F_SYSTEMCOLONFORM_TIME_909;
F_SYSTEMCOLONFORM_TIME_909=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_910, arguments.length);
}
let TMP_914;
let TMP_913;
let L_FORM__653;
let TMP_912;
let L_HIR2__652;
let TMP_911;
let L_HIR__650;
L_HIR__650=arguments[0];
{
TMP_911=lisp.callFunctionWithCallStack(G_25,L_HIR__650);
L_HIR2__652=lisp.values1(TMP_911);
TMP_912=lisp.callFunctionWithCallStack(G_12,L_HIR__650);
L_FORM__653=lisp.values1(TMP_912);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([40, 102, 117, 110, 99, 116, 105, 111, 110, 32, 40, 41, 32, 123])),lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([99, 111, 110, 115, 116, 32, 95, 95, 115, 116, 97, 114, 116, 32, 61, 32, 68, 97, 116, 101, 46, 110, 111, 119, 40, 41, 59])),lisp.symbolValue(G_37));
G_276.func(L_HIR2__652);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([99, 111, 110, 115, 116, 32, 95, 95, 101, 110, 100, 32, 61, 32, 68, 97, 116, 101, 46, 110, 111, 119, 40, 41, 59])),lisp.symbolValue(G_37));
TMP_913=G_892.func(L_FORM__653);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([105, 102, 32, 40, 95, 95, 101, 110, 100, 32, 45, 32, 95, 95, 115, 116, 97, 114, 116, 32, 62, 32, 49, 41, 32, 99, 111, 110, 115, 111, 108, 101, 46, 108, 111, 103, 40, 95, 95, 101, 110, 100, 32, 45, 32, 95, 95, 115, 116, 97, 114, 116, 44, 32, 39, 126, 65, 39, 41, 59, 126, 37])),TMP_913);
TMP_914=lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125, 41, 40, 41, 59])),lisp.symbolValue(G_37));
}
return TMP_914;
});
CL_SYSTEMCOLONFORM_TIME=lisp.values1(F_SYSTEMCOLONFORM_TIME_909);
let F_P2_LOGAND_916;
F_P2_LOGAND_916=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_917, arguments.length);
}
let TMP_923;
let L_RHS__665;
let TMP_922;
let L_G402__664;
let TMP_921;
let L_LHS__663;
let TMP_920;
let L_G400__661;
let L_ARGS__660;
let TMP_919;
let TMP_918;
let L_HIR__658;
L_HIR__658=arguments[0];
{
TMP_918=lisp.callFunctionWithCallStack(G_12,L_HIR__658);
TMP_919=G_516.func(TMP_918);
L_ARGS__660=lisp.values1(TMP_919);
{
L_G400__661=lisp.values1(L_ARGS__660);
{
TMP_920=lisp.callFunctionWithCallStack(G_18,L_G400__661);
L_LHS__663=lisp.values1(TMP_920);
TMP_921=lisp.callFunctionWithCallStack(G_466,L_G400__661);
L_G402__664=lisp.values1(TMP_921);
TMP_922=lisp.callFunctionWithCallStack(G_18,L_G402__664);
L_RHS__665=lisp.values1(TMP_922);
TMP_923=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([40, 126, 65, 32, 38, 32, 126, 65, 41])),L_LHS__663,L_RHS__665);
}
}
}
return TMP_923;
});
CL_COMPILER_P2_LOGAND=lisp.values1(F_P2_LOGAND_916);
let F_P2_FUNCALL_924;
F_P2_FUNCALL_924=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_925, arguments.length);
}
let TMP_936;
let TMP_935;
let TMP_934;
let L_RESULT__678;
let L_FN__677;
let TMP_933;
let L_ARGS__676;
let TMP_932;
let L_ARGS__675;
let L_G407__674;
let TMP_931;
let L_FN__673;
let TMP_930;
let L_G405__671;
let TMP_929;
let L_G404__670;
let TMP_928;
let TMP_927;
let L_ARGS__669;
let TMP_926;
let L_HIR__667;
L_HIR__667=arguments[0];
{
TMP_926=lisp.callFunctionWithCallStack(G_12,L_HIR__667);
L_ARGS__669=lisp.values1(TMP_926);
{
TMP_927=lisp.callFunctionWithCallStack(G_181,L_ARGS__669);
TMP_928=lisp.callFunctionWithCallStack(G_566,1,TMP_927);
L_G404__670=lisp.values1(TMP_928);
if(lisp.values1(L_G404__670) !== lisp.S_nil){
{
L_G405__671=lisp.values1(L_ARGS__669);
{
TMP_930=lisp.callFunctionWithCallStack(G_18,L_G405__671);
L_FN__673=lisp.values1(TMP_930);
TMP_931=lisp.callFunctionWithCallStack(G_466,L_G405__671);
L_G407__674=lisp.values1(TMP_931);
L_ARGS__675=lisp.values1(L_G407__674);
{
TMP_932=G_516.func(L_ARGS__675);
L_ARGS__676=lisp.values1(TMP_932);
TMP_933=G_276.func(L_FN__673);
L_FN__677=lisp.values1(TMP_933);
L_RESULT__678=lisp.values1(lisp.S_nil);
TMP_934=lisp.callFunctionWithCallStack(G_98,L_HIR__667);
if(lisp.values1(TMP_934) !== lisp.S_nil){
TMP_935=G_127.func();
L_RESULT__678=lisp.values1(TMP_935);
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([126, 65, 61])),L_RESULT__678);
}else{
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([108, 105, 115, 112, 46, 67, 76, 95, 102, 117, 110, 99, 97, 108, 108, 40, 126, 65])),L_FN__677);
if(lisp.values1(L_ARGS__676) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_179,lisp.makeCharacter(44),lisp.symbolValue(G_37));
}else{
}
G_521.func(L_ARGS__676);
}
}
}
TMP_929=lisp.values1(L_RESULT__678);
}else{
TMP_936=G_36.func(L_HIR__667);
TMP_929=TMP_936;
}
}
}
return TMP_929;
});
CL_COMPILER_P2_FUNCALL=lisp.values1(F_P2_FUNCALL_924);
let F_P2_TOPLEVEL_1_937;
F_P2_TOPLEVEL_1_937=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_938, arguments.length);
}
let TMP_941;
let TMP_940;
let TMP_939;
let L_HIR__680;
L_HIR__680=arguments[0];
TMP_939=lisp.callFunctionWithCallStack(G_98,L_HIR__680);
if(lisp.values1(TMP_939) !== lisp.S_nil){
TMP_940=lisp.values1(G_90);
}else{
TMP_940=lisp.values1(G_91);
}
TMP_941=G_89.func(L_HIR__680,TMP_940);
return TMP_941;
});
CL_COMPILER_P2_TOPLEVEL_1=lisp.values1(F_P2_TOPLEVEL_1_937);
let F_P2_EMIT_INITIALIZE_VARS_942;
F_P2_EMIT_INITIALIZE_VARS_942=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_943, arguments.length);
}
let TMP_950;
let save_STARP2_EMIT_STREAMSTAR__690;
let TMP_949;
let L_NAME__688;
let TMP_948;
let TMP_947;
let L_G409__687;
let TMP_944;
let L_STREAM__682;
L_STREAM__682=arguments[0];
TMP_944=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_945;
let L_IDENT__685;
let L_SYMBOL__684;
L_SYMBOL__684=arguments[0];
L_IDENT__685=arguments[1];
TMP_945=lisp.callFunctionWithCallStack(G_34,L_STREAM__682,G_3.func(lisp.codeArrayToString([108, 101, 116, 32, 126, 65, 59, 126, 37])),L_IDENT__685);
return TMP_945;
});
lisp.callFunctionWithCallStack(G_946,TMP_944,lisp.symbolValue(G_40));
{
L_G409__687=lisp.values1(lisp.symbolValue(G_44));
for(;;){
TMP_947=lisp.callFunctionWithCallStack(G_117,L_G409__687);
if(lisp.values1(TMP_947) !== lisp.S_nil){
}else{
{
TMP_948=lisp.callFunctionWithCallStack(G_119,L_G409__687);
L_NAME__688=lisp.values1(TMP_948);
TMP_949=lisp.callFunctionWithCallStack(G_121,L_G409__687);
L_G409__687=lisp.values1(TMP_949);
lisp.callFunctionWithCallStack(G_34,L_STREAM__682,G_3.func(lisp.codeArrayToString([108, 101, 116, 32, 126, 65, 59, 126, 37])),L_NAME__688);
}
continue;
}
break;
}
}
{
save_STARP2_EMIT_STREAMSTAR__690=G_37.value;
G_37.value=lisp.values1(L_STREAM__682);
try{
TMP_950=G_110.func();
}finally{
G_37.value=save_STARP2_EMIT_STREAMSTAR__690;
}
}
return TMP_950;
});
CL_COMPILER_P2_EMIT_INITIALIZE_VARS=lisp.values1(F_P2_EMIT_INITIALIZE_VARS_942);
let F_P2_EMIT_INITIALIZE_SYMBOLS_951;
F_P2_EMIT_INITIALIZE_SYMBOLS_951=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_952, arguments.length);
}
let TMP_960;
let TMP_953;
let L_STREAM__691;
L_STREAM__691=arguments[0];
TMP_953=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_959;
let TMP_958;
let TMP_957;
let TMP_956;
let TMP_955;
let TMP_954;
let L_IDENT__694;
let L_SYMBOL__693;
L_SYMBOL__693=arguments[0];
L_IDENT__694=arguments[1];
TMP_954=lisp.callFunctionWithCallStack(G_169,L_SYMBOL__693);
if(lisp.values1(TMP_954) !== lisp.S_nil){
TMP_956=lisp.callFunctionWithCallStack(G_169,L_SYMBOL__693);
TMP_957=lisp.callFunctionWithCallStack(G_173,TMP_956);
TMP_958=lisp.callFunctionWithCallStack(G_34,L_STREAM__691,G_3.func(lisp.codeArrayToString([126, 65, 32, 61, 32, 108, 105, 115, 112, 46, 105, 110, 116, 101, 114, 110, 40, 39, 126, 65, 39, 44, 32, 39, 126, 65, 39, 41, 59, 126, 37])),L_IDENT__694,L_SYMBOL__693,TMP_957);
TMP_955=TMP_958;
}else{
TMP_959=lisp.callFunctionWithCallStack(G_34,L_STREAM__691,G_3.func(lisp.codeArrayToString([126, 65, 32, 61, 32, 108, 105, 115, 112, 46, 109, 97, 107, 101, 83, 121, 109, 98, 111, 108, 40, 34, 126, 65, 34, 41, 59])),L_IDENT__694,L_SYMBOL__693);
TMP_955=TMP_959;
}
return TMP_955;
});
TMP_960=lisp.callFunctionWithCallStack(G_946,TMP_953,lisp.symbolValue(G_40));
return TMP_960;
});
CL_COMPILER_P2_EMIT_INITIALIZE_SYMBOLS=lisp.values1(F_P2_EMIT_INITIALIZE_SYMBOLS_951);
let F_P2_FINISH_OUTPUT_961;
F_P2_FINISH_OUTPUT_961=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_962, arguments.length);
}
let TMP_965;
let L_FN__697;
let TMP_964;
let L_STREAM__695;
L_STREAM__695=arguments[0];
{
TMP_964=G_163.func(G_963);
L_FN__697=lisp.values1(TMP_964);
TMP_965=lisp.callFunctionWithCallStack(G_34,L_STREAM__695,G_3.func(lisp.codeArrayToString([126, 65, 40, 41, 59, 126, 37])),L_FN__697);
}
return TMP_965;
});
CL_COMPILER_P2_FINISH_OUTPUT=lisp.values1(F_P2_FINISH_OUTPUT_961);
let F_P2_TOPLEVEL_966;
F_P2_TOPLEVEL_966=(function(){
if(arguments.length < 1 || 3 < arguments.length) {
lisp.argumentsError(G_967, arguments.length);
}
let TMP_975;
let L_RESULT__708;
let TMP_974;
let TMP_972;
let save_STARGENVAR_COUNTERSTAR__707;
let save_STARP2_EMIT_STREAMSTAR__706;
let TMP_970;
let save_STARP2_TOPLEVEL_DEFUN_STREAMSTAR__705;
let TMP_969;
let save_STARP2_TEMPORARY_VARIABLESSTAR__704;
let save_STARP2_DEFUN_NAMESSTAR__703;
let save_STARP2_LITERAL_SYMBOLSSTAR__702;
let TMP_968;
let L_RETURN_VALUE_P__700;
let L_STREAM__699;
let L_HIR__698;
L_HIR__698=arguments[0];
L_STREAM__699=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_39)));
L_RETURN_VALUE_P__700=arguments.length > 2 ? arguments[2] : (lisp.values1(G_5));
{
TMP_968=lisp.callFunctionWithCallStack(G_8);
save_STARP2_LITERAL_SYMBOLSSTAR__702=G_40.value;
G_40.value=lisp.values1(TMP_968);
save_STARP2_DEFUN_NAMESSTAR__703=G_44.value;
G_44.value=lisp.values1(lisp.S_nil);
save_STARP2_TEMPORARY_VARIABLESSTAR__704=G_45.value;
G_45.value=lisp.values1(lisp.S_nil);
TMP_969=G_46.func(L_STREAM__699);
save_STARP2_TOPLEVEL_DEFUN_STREAMSTAR__705=G_43.value;
G_43.value=lisp.values1(TMP_969);
TMP_970=G_46.func(L_STREAM__699);
save_STARP2_EMIT_STREAMSTAR__706=G_37.value;
G_37.value=lisp.values1(TMP_970);
save_STARGENVAR_COUNTERSTAR__707=G_971.value;
G_971.value=lisp.values1(0);
try{
{
TMP_972=lisp.callFunctionWithCallStack(G_973,L_HIR__698);
TMP_974=G_288.func(TMP_972);
L_RESULT__708=lisp.values1(TMP_974);
if(lisp.values1(L_RETURN_VALUE_P__700) !== lisp.S_nil){
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([114, 101, 116, 117, 114, 110, 32, 126, 65, 59])),L_RESULT__708);
}else{
}
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([47, 47, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 45, 118, 97, 114, 115])),L_STREAM__699);
G_943.func(L_STREAM__699);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([47, 47, 32, 116, 111, 112, 108, 101, 118, 101, 108, 32, 100, 101, 102, 117, 110])),L_STREAM__699);
G_58.func(L_STREAM__699,lisp.symbolValue(G_43));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([47, 47, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 32, 115, 121, 109, 98, 111, 108, 115])),L_STREAM__699);
G_952.func(L_STREAM__699);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([47, 47, 32, 109, 97, 105, 110])),L_STREAM__699);
TMP_975=G_58.func(L_STREAM__699,lisp.symbolValue(G_37));
}finally{
G_971.value=save_STARGENVAR_COUNTERSTAR__707;
G_37.value=save_STARP2_EMIT_STREAMSTAR__706;
G_43.value=save_STARP2_TOPLEVEL_DEFUN_STREAMSTAR__705;
G_45.value=save_STARP2_TEMPORARY_VARIABLESSTAR__704;
G_44.value=save_STARP2_DEFUN_NAMESSTAR__703;
G_40.value=save_STARP2_LITERAL_SYMBOLSSTAR__702;
}
}
return TMP_975;
});
CL_COMPILER_P2_TOPLEVEL=lisp.values1(F_P2_TOPLEVEL_966);
let F_P2_TOPLEVEL_FORMS_976;
F_P2_TOPLEVEL_FORMS_976=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_977, arguments.length);
}
let TMP_985;
let TMP_984;
let L_HIR__721;
let TMP_983;
let TMP_982;
let L_G416__720;
let L_ERR__718;
let TMP_981;
let save_STARGENVAR_COUNTERSTAR__717;
let save_STARP2_EMIT_STREAMSTAR__716;
let TMP_980;
let save_STARP2_TOPLEVEL_DEFUN_STREAMSTAR__715;
let TMP_979;
let save_STARP2_TEMPORARY_VARIABLESSTAR__714;
let save_STARP2_DEFUN_NAMESSTAR__713;
let save_STARP2_LITERAL_SYMBOLSSTAR__712;
let TMP_978;
let L_STREAM__710;
let L_HIR_FORMS__709;
L_HIR_FORMS__709=arguments[0];
L_STREAM__710=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.symbolValue(G_39)));
{
TMP_978=lisp.callFunctionWithCallStack(G_8);
save_STARP2_LITERAL_SYMBOLSSTAR__712=G_40.value;
G_40.value=lisp.values1(TMP_978);
save_STARP2_DEFUN_NAMESSTAR__713=G_44.value;
G_44.value=lisp.values1(lisp.S_nil);
save_STARP2_TEMPORARY_VARIABLESSTAR__714=G_45.value;
G_45.value=lisp.values1(lisp.S_nil);
TMP_979=G_46.func(L_STREAM__710);
save_STARP2_TOPLEVEL_DEFUN_STREAMSTAR__715=G_43.value;
G_43.value=lisp.values1(TMP_979);
TMP_980=G_46.func(L_STREAM__710);
save_STARP2_EMIT_STREAMSTAR__716=G_37.value;
G_37.value=lisp.values1(TMP_980);
save_STARGENVAR_COUNTERSTAR__717=G_971.value;
G_971.value=lisp.values1(0);
try{
{
TMP_981=G_123.func();
L_ERR__718=lisp.values1(TMP_981);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([116, 114, 121, 32, 123])),lisp.symbolValue(G_37));
{
L_G416__720=lisp.values1(L_HIR_FORMS__709);
for(;;){
TMP_982=lisp.callFunctionWithCallStack(G_117,L_G416__720);
if(lisp.values1(TMP_982) !== lisp.S_nil){
}else{
{
TMP_983=lisp.callFunctionWithCallStack(G_119,L_G416__720);
L_HIR__721=lisp.values1(TMP_983);
TMP_984=lisp.callFunctionWithCallStack(G_121,L_G416__720);
L_G416__720=lisp.values1(TMP_984);
G_938.func(L_HIR__721);
}
continue;
}
break;
}
}
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([125, 99, 97, 116, 99, 104, 40, 126, 65, 41, 123])),L_ERR__718);
G_962.func(lisp.symbolValue(G_37));
lisp.callFunctionWithCallStack(G_34,lisp.symbolValue(G_37),G_3.func(lisp.codeArrayToString([99, 111, 110, 115, 111, 108, 101, 46, 108, 111, 103, 40, 126, 65, 46, 109, 101, 115, 115, 97, 103, 101, 41, 59, 126, 37])),L_ERR__718);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([125])),lisp.symbolValue(G_37));
}
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([47, 47, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 45, 118, 97, 114, 115])),L_STREAM__710);
G_943.func(L_STREAM__710);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([47, 47, 32, 116, 111, 112, 108, 101, 118, 101, 108, 32, 100, 101, 102, 117, 110])),L_STREAM__710);
G_58.func(L_STREAM__710,lisp.symbolValue(G_43));
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([47, 47, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 32, 115, 121, 109, 98, 111, 108, 115])),L_STREAM__710);
G_952.func(L_STREAM__710);
lisp.callFunctionWithCallStack(G_82,G_3.func(lisp.codeArrayToString([47, 47, 32, 109, 97, 105, 110])),L_STREAM__710);
TMP_985=G_58.func(L_STREAM__710,lisp.symbolValue(G_37));
}finally{
G_971.value=save_STARGENVAR_COUNTERSTAR__717;
G_37.value=save_STARP2_EMIT_STREAMSTAR__716;
G_43.value=save_STARP2_TOPLEVEL_DEFUN_STREAMSTAR__715;
G_45.value=save_STARP2_TEMPORARY_VARIABLESSTAR__714;
G_44.value=save_STARP2_DEFUN_NAMESSTAR__713;
G_40.value=save_STARP2_LITERAL_SYMBOLSSTAR__712;
}
}
return TMP_985;
});
CL_COMPILER_P2_TOPLEVEL_FORMS=lisp.values1(F_P2_TOPLEVEL_FORMS_976);
// initialize symbols
G_2 = lisp.intern('*CHARACTER-MAP*', 'COMPILER');
G_3 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_4 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_5 = lisp.intern('T', 'COMMON-LISP');
G_6 = lisp.intern('*BUILTIN-FUNCTION-TABLE*', 'COMPILER');
G_8 = lisp.intern('MAKE-HASH-TABLE', 'COMMON-LISP');
G_10 = lisp.intern('P2-CL->JS', 'COMPILER');
G_12 = lisp.intern('HIR-ARG2', 'COMPILER');
G_14 = lisp.intern('LENGTH=1', 'COMPILER');
G_16 = lisp.intern('CONST', 'COMPILER');
G_18 = lisp.intern('FIRST', 'COMMON-LISP');
G_20 = lisp.intern('HIR-OP', 'COMPILER');
G_25 = lisp.intern('HIR-ARG1', 'COMPILER');
G_27 = lisp.intern('STRINGP', 'COMMON-LISP');
G_32 = lisp.intern('P2-ENCODE-STRING', 'COMPILER');
G_34 = lisp.intern('FORMAT', 'COMMON-LISP');
G_36 = lisp.intern('P2-CALL-DEFAULT', 'COMPILER');
G_37 = lisp.intern('*P2-EMIT-STREAM*', 'COMPILER');
G_39 = lisp.intern('*STANDARD-OUTPUT*', 'COMMON-LISP');
G_40 = lisp.intern('*P2-LITERAL-SYMBOLS*', 'COMPILER');
G_43 = lisp.intern('*P2-TOPLEVEL-DEFUN-STREAM*', 'COMPILER');
G_44 = lisp.intern('*P2-DEFUN-NAMES*', 'COMPILER');
G_45 = lisp.intern('*P2-TEMPORARY-VARIABLES*', 'COMPILER');
G_46 = lisp.intern('MAKE-EMITTER-STREAM', 'COMPILER');
G_47 = lisp.intern('*COMPILER-INTERFACES*', 'COMPILER');
G_49 = lisp.intern('ADJOIN', 'COMMON-LISP');
G_52 = lisp.intern('MAKE-STRING-OUTPUT-STREAM', 'COMMON-LISP');
G_53 = lisp.intern('IMPLEMENTATION', 'COMPILER');
G_56 = lisp.intern('GET', 'COMMON-LISP');
G_58 = lisp.intern('JOIN-EMITTER-STREAM', 'COMPILER');
G_62 = lisp.intern('GET-OUTPUT-STREAM-STRING', 'COMMON-LISP');
G_64 = lisp.intern('WRITE-STRING', 'COMMON-LISP');
G_68 = lisp.intern('SET-SOURCE-MAP', 'COMPILER');
G_74 = lisp.intern('EMBED-SOURCE-MAP', 'COMPILER');
G_75 = lisp.intern('P2-EMIT-TRY-FINALLY', 'COMPILER');
G_76 = lisp.intern('P2-EMIT-TRY-CATCH', 'COMPILER');
G_78 = lisp.intern('P2-EMIT-FOR-AUX', 'COMPILER');
G_79 = lisp.intern('PRINC', 'COMMON-LISP');
G_81 = lisp.intern('=', 'COMMON-LISP');
G_82 = lisp.intern('WRITE-LINE', 'COMMON-LISP');
G_84 = lisp.intern('P2-EMIT-FOR', 'COMPILER');
G_85 = lisp.intern('P2-WITH-UNWIND-SPECIAL-VARS', 'COMPILER');
G_86 = lisp.intern('P2-WITH-EMIT-PAREN', 'COMPILER');
G_87 = lisp.intern('DEFINE-P2-EMIT', 'COMPILER');
G_89 = lisp.intern('P2', 'COMPILER');
G_90 = lisp.intern('EXPR', 'KEYWORD');
G_91 = lisp.intern('STMT', 'KEYWORD');
G_93 = lisp.intern('MEMBER', 'COMMON-LISP');
G_94 = lisp.intern('CONTEXT', 'COMPILER');
G_95 = lisp.intern('QUOTE', 'COMMON-LISP');
G_96 = lisp.intern('ERROR', 'COMMON-LISP');
G_98 = lisp.intern('HIR-RETURN-VALUE-P', 'COMPILER');
G_101 = lisp.intern('EQ', 'COMMON-LISP');
G_102 = lisp.intern('IF', 'COMMON-LISP');
G_103 = lisp.intern('HIR', 'COMPILER');
G_105 = lisp.intern('P2-EMIT', 'COMPILER');
G_107 = lisp.intern('FN', 'COMPILER');
G_110 = lisp.intern('P2-EMIT-DECLARE-TEMPORARY-VARIABLES', 'COMPILER');
G_111 = lisp.intern('TEST', 'KEYWORD');
G_112 = lisp.intern('EQUAL', 'COMMON-LISP');
G_115 = lisp.intern('REMOVE-DUPLICATES', 'COMMON-LISP');
G_117 = lisp.intern('ENDP', 'COMMON-LISP');
G_119 = lisp.intern('CAR', 'COMMON-LISP');
G_121 = lisp.intern('CDR', 'COMMON-LISP');
G_123 = lisp.intern('P2-GENVAR', 'COMPILER');
G_125 = lisp.intern('GENVAR', 'COMPILER');
G_127 = lisp.intern('P2-TEMPORARY-VAR', 'COMPILER');
G_131 = lisp.intern('P2-ESCAPE-STRING', 'COMPILER');
G_133 = lisp.intern('STRING', 'COMMON-LISP');
G_136 = lisp.intern('ASSOC', 'COMMON-LISP');
G_145 = lisp.intern('MAP', 'COMMON-LISP');
G_148 = lisp.intern('P2-LOCAL-VAR', 'COMPILER');
G_151 = lisp.intern('P2-LOCAL-FUNCTION', 'COMPILER');
G_154 = lisp.intern('P2-SYMBOL-TO-JS-VALUE', 'COMPILER');
G_156 = lisp.intern('GETHASH', 'COMMON-LISP');
G_160 = lisp.intern('(SETF GETHASH)', 'COMMON-LISP');
G_163 = lisp.intern('P2-SYMBOL-TO-CALL-VALUE', 'COMPILER');
G_167 = lisp.intern('P2-SYMBOL-TO-JS-FUNCTION-NAME', 'COMPILER');
G_169 = lisp.intern('SYMBOL-PACKAGE', 'COMMON-LISP');
G_173 = lisp.intern('PACKAGE-NAME', 'COMMON-LISP');
G_179 = lisp.intern('WRITE-CHAR', 'COMMON-LISP');
G_181 = lisp.intern('LENGTH', 'COMMON-LISP');
G_183 = lisp.intern('>=', 'COMMON-LISP');
G_185 = lisp.intern('%VECTOR-REF', 'SYSTEM');
G_187 = lisp.intern('CHAR-CODE', 'COMMON-LISP');
G_189 = lisp.intern('1+', 'COMMON-LISP');
G_191 = lisp.intern('<', 'COMMON-LISP');
G_195 = lisp.intern('MAKE-CIRCLE-TABLE', 'COMPILER');
G_207 = lisp.intern('P2-LITERAL-1', 'COMPILER');
G_209 = lisp.intern('NULL', 'COMMON-LISP');
G_222 = lisp.intern('PRINC-TO-STRING', 'COMMON-LISP');
G_237 = lisp.intern('ACONS', 'COMMON-LISP');
G_249 = lisp.intern('VECTORP', 'COMMON-LISP');
G_252 = lisp.intern('VECTOR', 'COMMON-LISP');
G_256 = lisp.intern('ZEROP', 'COMMON-LISP');
G_263 = lisp.intern('+', 'COMMON-LISP');
G_267 = lisp.intern('P2-LITERAL', 'COMPILER');
G_271 = lisp.intern('%P2-FORM', 'COMPILER');
G_276 = lisp.intern('P2-FORM', 'COMPILER');
G_278 = lisp.intern('HIR-MULTIPLE-VALUES-P', 'COMPILER');
G_286 = lisp.intern('P2-NO-RETURN', 'COMPILER');
G_288 = lisp.intern('P2-FORMS', 'COMPILER');
G_296 = lisp.intern('MAKE-HIR', 'COMPILER');
G_299 = lisp.makeSymbol("COMPILER:CONST");G_303 = lisp.makeSymbol("COMPILER:LREF");G_306 = lisp.intern('BINDING-KIND', 'COMPILER');
G_307 = lisp.intern('FUNCTION', 'KEYWORD');
G_311 = lisp.intern('BINDING-ID', 'COMPILER');
G_313 = lisp.intern('VARIABLE', 'KEYWORD');
G_320 = lisp.intern('LREF', 'COMPILER');
G_322 = lisp.makeSymbol("COMPILER:GREF");G_326 = lisp.intern('GREF', 'COMPILER');
G_328 = lisp.makeSymbol("COMPILER:LSET");G_338 = lisp.intern('LSET', 'COMPILER');
G_340 = lisp.makeSymbol("COMPILER:GSET");G_349 = lisp.intern('GSET', 'COMPILER');
G_351 = lisp.makeSymbol("COMMON-LISP:IF");G_355 = lisp.intern('HIR-ARG3', 'COMPILER');
G_365 = lisp.makeSymbol("COMMON-LISP:PROGN");G_368 = lisp.intern('PROGN', 'COMMON-LISP');
G_370 = lisp.intern('P2-EMIT-CHECK-ARGUMENTS', 'COMPILER');
G_372 = lisp.intern('PARSED-LAMBDA-LIST-MIN', 'COMPILER');
G_374 = lisp.intern('PARSED-LAMBDA-LIST-MAX', 'COMPILER');
G_380 = lisp.intern('P2-MAKE-SAVE-VAR', 'COMPILER');
G_384 = lisp.intern('P2-EMIT-UNWIND-VAR', 'COMPILER');
G_386 = lisp.intern('SPECIAL', 'KEYWORD');
G_390 = lisp.intern('BINDING-NAME', 'COMPILER');
G_395 = lisp.intern('P2-EMIT-DECLVAR', 'COMPILER');
G_419 = lisp.intern('P2-EMIT-LAMBDA-LIST', 'COMPILER');
G_421 = lisp.intern('PARSED-LAMBDA-LIST-VARS', 'COMPILER');
G_427 = lisp.intern('PARSED-LAMBDA-LIST-OPTIONALS', 'COMPILER');
G_433 = lisp.intern('SECOND', 'COMMON-LISP');
G_435 = lisp.intern('THIRD', 'COMMON-LISP');
G_439 = lisp.intern('PARSED-LAMBDA-LIST-KEYS', 'COMPILER');
G_448 = lisp.intern('FOURTH', 'COMMON-LISP');
G_459 = lisp.intern('PARSED-LAMBDA-LIST-ALLOW-OTHER-KEYS', 'COMPILER');
G_466 = lisp.intern('REST', 'COMMON-LISP');
G_470 = lisp.intern('PARSED-LAMBDA-LIST-REST-VAR', 'COMPILER');
G_474 = lisp.makeSymbol("COMMON-LISP:LAMBDA");G_487 = lisp.intern('STRING=', 'COMMON-LISP');
G_493 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_495 = lisp.makeSymbol("COMMON-LISP:LET");G_502 = lisp.intern('BINDING-INIT-VALUE', 'COMPILER');
G_506 = lisp.intern('REVERSE', 'COMMON-LISP');
G_514 = lisp.intern('LET', 'COMMON-LISP');
G_516 = lisp.intern('P2-PREPARE-ARGS', 'COMPILER');
G_519 = lisp.intern('%MAPCAR', 'SYSTEM');
G_521 = lisp.intern('P2-EMIT-ARGS', 'COMPILER');
G_528 = lisp.makeSymbol("COMPILER:LCALL");G_536 = lisp.intern('LCALL', 'COMPILER');
G_543 = lisp.intern('*ENABLE-PROFILING*', 'COMPILER');
G_545 = lisp.intern('NOT', 'COMMON-LISP');
G_547 = lisp.intern('*IN-HOST-RUNTIME*', 'COMPILER');
G_549 = lisp.intern('*KNOWN-TOPLEVEL-FUNCTIONS*', 'COMPILER');
G_555 = lisp.intern('LAMBDA-HIR-PARSED-LAMBDA-LIST', 'COMPILER');
G_566 = lisp.intern('<=', 'COMMON-LISP');
G_572 = lisp.intern('P2-CALL-BUILTIN-USING-LIST-SPEC', 'COMPILER');
G_596 = lisp.intern('EQL', 'COMMON-LISP');
G_616 = lisp.makeSymbol("COMPILER:CALL");G_632 = lisp.intern('CALL', 'COMPILER');
G_634 = lisp.makeSymbol("COMMON-LISP:UNWIND-PROTECT");G_644 = lisp.intern('UNWIND-PROTECT', 'COMMON-LISP');
G_646 = lisp.intern('P2-BLOCK-RESULT-VAR-NAME', 'COMPILER');
G_650 = lisp.intern('CONCATENATE', 'COMMON-LISP');
G_652 = lisp.intern('P2-ESCAPE-BLOCK-NAME', 'COMPILER');
G_657 = lisp.makeSymbol("COMMON-LISP:BLOCK");G_661 = lisp.intern('BINDING-ESCAPE-COUNT', 'COMPILER');
G_673 = lisp.intern('BLOCK', 'COMMON-LISP');
G_675 = lisp.makeSymbol("COMMON-LISP:RETURN-FROM");G_687 = lisp.intern('RETURN-FROM', 'COMMON-LISP');
G_689 = lisp.makeSymbol("COMMON-LISP:LOOP");G_692 = lisp.intern('LOOP', 'COMMON-LISP');
G_694 = lisp.makeSymbol("COMPILER:RECUR");G_696 = lisp.intern('RECUR', 'COMPILER');
G_698 = lisp.intern('TAGBODY-STATE-NAME', 'COMPILER');
G_701 = lisp.intern('TAGBODY-TAG-NAME', 'COMPILER');
G_704 = lisp.intern('TAGBODY-VALUE-INDEX', 'COMPILER');
G_706 = lisp.makeSymbol("COMMON-LISP:TAGBODY");G_724 = lisp.intern('TAGBODY', 'COMMON-LISP');
G_726 = lisp.makeSymbol("COMMON-LISP:GO");G_732 = lisp.intern('TAGBODY-VALUE-ID', 'COMPILER');
G_739 = lisp.intern('GO', 'COMMON-LISP');
G_741 = lisp.makeSymbol("SYSTEM:%DEFUN");G_750 = lisp.intern('%DEFUN', 'SYSTEM');
G_752 = lisp.makeSymbol("SYSTEM:%DEFPACKAGE");G_776 = lisp.intern('%DEFPACKAGE', 'SYSTEM');
G_778 = lisp.makeSymbol("SYSTEM:%IN-PACKAGE");G_787 = lisp.intern('%IN-PACKAGE', 'SYSTEM');
G_789 = lisp.intern('P2-EMIT-REF', 'COMPILER');
G_794 = lisp.intern('HIR-P', 'COMPILER');
G_802 = lisp.makeSymbol("FFI:REF");G_805 = lisp.intern('REF', 'FFI');
G_807 = lisp.makeSymbol("FFI:SET");G_812 = lisp.intern('SET', 'FFI');
G_814 = lisp.intern('P2-CONVERT-VAR', 'COMPILER');
G_821 = lisp.makeSymbol("FFI:VAR");G_831 = lisp.intern('VAR', 'FFI');
G_833 = lisp.makeSymbol("FFI:TYPEOF");G_843 = lisp.intern('TYPEOF', 'FFI');
G_845 = lisp.makeSymbol("FFI:NEW");G_855 = lisp.intern('NEW', 'FFI');
G_857 = lisp.makeSymbol("FFI:AGET");G_868 = lisp.intern('AGET', 'FFI');
G_870 = lisp.makeSymbol("COMPILER:JS-CALL");G_877 = lisp.intern('JS-CALL', 'COMPILER');
G_879 = lisp.makeSymbol("COMPILER:MODULE");G_890 = lisp.intern('MODULE', 'COMPILER');
G_892 = lisp.intern('ESCAPE', 'COMPILER');
G_895 = lisp.intern('PRIN1-TO-STRING', 'COMMON-LISP');
G_910 = lisp.makeSymbol("SYSTEM:FORM-TIME");G_915 = lisp.intern('FORM-TIME', 'SYSTEM');
G_917 = lisp.intern('P2-LOGAND', 'COMPILER');
G_925 = lisp.intern('P2-FUNCALL', 'COMPILER');
G_938 = lisp.intern('P2-TOPLEVEL-1', 'COMPILER');
G_943 = lisp.intern('P2-EMIT-INITIALIZE-VARS', 'COMPILER');
G_946 = lisp.intern('MAPHASH', 'COMMON-LISP');
G_952 = lisp.intern('P2-EMIT-INITIALIZE-SYMBOLS', 'COMPILER');
G_962 = lisp.intern('P2-FINISH-OUTPUT', 'COMPILER');
G_963 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
G_967 = lisp.intern('P2-TOPLEVEL', 'COMPILER');
G_971 = lisp.intern('*GENVAR-COUNTER*', 'COMPILER');
G_973 = lisp.intern('LIST', 'COMMON-LISP');
G_977 = lisp.intern('P2-TOPLEVEL-FORMS', 'COMPILER');
G_986 = lisp.intern('MACRO', 'COMPILER');
G_989 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_999 = lisp.intern('TRY', 'COMPILER');
G_1000 = lisp.intern('FINALLY', 'COMPILER');
G_1007 = lisp.intern('LIST*', 'COMMON-LISP');
G_1012 = lisp.intern('TRY-FORM', 'COMPILER');
G_1013 = lisp.intern('ERROR-VAR', 'COMPILER');
G_1014 = lisp.intern('&BODY', 'COMMON-LISP');
G_1015 = lisp.intern('CATCH-FORM', 'COMPILER');
G_1035 = lisp.intern('APPEND', 'COMMON-LISP');
G_1041 = lisp.intern('LOOP-VAR', 'COMPILER');
G_1042 = lisp.intern('START', 'COMPILER');
G_1043 = lisp.intern('END', 'COMPILER');
G_1044 = lisp.intern('STEP', 'COMMON-LISP');
G_1045 = lisp.intern('BODY', 'COMPILER');
G_1067 = lisp.intern('FORM', 'COMPILER');
G_1068 = lisp.intern('UNWIND-CODE', 'COMPILER');
G_1075 = lisp.intern('GENSYM', 'COMMON-LISP');
G_1094 = lisp.intern('OP', 'COMPILER');
G_1109 = lisp.intern('SYMBOL-NAME', 'COMMON-LISP');
G_1112 = lisp.intern('MAKE-SYMBOL', 'COMMON-LISP');
G_1113 = lisp.intern('DEFUN', 'COMMON-LISP');
G_1115 = lisp.intern('DECLARE', 'COMMON-LISP');
G_1116 = lisp.intern('IGNORABLE', 'COMMON-LISP');
G_1118 = lisp.intern('SETF', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');lisp.CL_set(G_2,lisp.makeCons(lisp.makeCons(lisp.makeCharacter(33), G_3.func(lisp.codeArrayToString([66, 65, 78, 71]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(34), G_3.func(lisp.codeArrayToString([81, 85, 79, 84, 65, 84, 73, 79, 78]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(35), G_3.func(lisp.codeArrayToString([72, 65, 83, 72]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(36), G_3.func(lisp.codeArrayToString([68, 79, 76, 76, 65, 82]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(37), G_3.func(lisp.codeArrayToString([80, 69, 82, 67, 69, 78, 84]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(38), G_3.func(lisp.codeArrayToString([65, 77, 80, 69, 82, 83, 65, 78, 68]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(39), G_3.func(lisp.codeArrayToString([81, 85, 79, 84, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(40), G_3.func(lisp.codeArrayToString([76, 80, 65, 82, 69, 78]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(41), G_3.func(lisp.codeArrayToString([82, 80, 65, 82, 69, 78]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(42), G_3.func(lisp.codeArrayToString([83, 84, 65, 82]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(43), G_3.func(lisp.codeArrayToString([80, 76, 85, 83]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(44), G_3.func(lisp.codeArrayToString([67, 79, 77, 77, 65]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(45), G_3.func(lisp.codeArrayToString([95]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(46), G_3.func(lisp.codeArrayToString([68, 79, 84]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(47), G_3.func(lisp.codeArrayToString([83, 76, 65, 83, 72]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(58), G_3.func(lisp.codeArrayToString([67, 79, 76, 79, 78]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(59), G_3.func(lisp.codeArrayToString([83, 69, 77, 73, 67, 79, 76, 79, 78]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(60), G_3.func(lisp.codeArrayToString([76, 69, 83, 83]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(61), G_3.func(lisp.codeArrayToString([69, 81, 85, 65, 76]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(62), G_3.func(lisp.codeArrayToString([71, 82, 69, 65, 84, 69, 82]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(63), G_3.func(lisp.codeArrayToString([81, 85, 69, 83, 84, 73, 79, 78]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(32), G_3.func(lisp.codeArrayToString([83, 80, 65, 67, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(64), G_3.func(lisp.codeArrayToString([65, 84]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(91), G_3.func(lisp.codeArrayToString([76, 66, 82, 65, 67, 75, 69, 84]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(92), G_3.func(lisp.codeArrayToString([66, 65, 67, 75, 83, 76, 65, 83, 72]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(93), G_3.func(lisp.codeArrayToString([82, 66, 82, 65, 67, 75, 69, 84]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(94), G_3.func(lisp.codeArrayToString([67, 65, 82, 69, 84]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(95), G_3.func(lisp.codeArrayToString([95, 95]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(96), G_3.func(lisp.codeArrayToString([66, 65, 67, 75, 81, 85, 79, 84, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(123), G_3.func(lisp.codeArrayToString([76, 66, 82, 65, 67, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(124), G_3.func(lisp.codeArrayToString([80, 73, 80, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(125), G_3.func(lisp.codeArrayToString([82, 66, 82, 65, 67, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(126), G_3.func(lisp.codeArrayToString([84, 73, 76, 68, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(10), G_3.func(lisp.codeArrayToString([78, 69, 87, 76, 73, 78, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(13), G_3.func(lisp.codeArrayToString([82, 69, 84, 85, 82, 78]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(8), G_3.func(lisp.codeArrayToString([66, 65, 67, 75]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(12), G_3.func(lisp.codeArrayToString([80, 65, 71, 69]))), lisp.makeCons(lisp.makeCons(lisp.makeCharacter(9), G_3.func(lisp.codeArrayToString([84, 65, 66]))), lisp.S_nil)))))))))))))))))))))))))))))))))))))));
lisp.CL_put(G_2,G_4,G_5);
TMP_7=lisp.callFunctionWithCallStack(G_8);
lisp.CL_set(G_6,TMP_7);
lisp.CL_put(G_6,G_4,G_5);
CL_COMPILER_P2_CL_GREATERJS.lisp_name = 'P2-CL->JS'
lisp.setSymbolFunction(G_10, CL_COMPILER_P2_CL_GREATERJS);
TMP_38=lisp.CL_boundp(G_37);
if(lisp.values1(TMP_38) !== lisp.S_nil){
}else{
lisp.CL_set(G_37,lisp.symbolValue(G_39));
}
lisp.CL_put(G_37,G_4,G_5);
TMP_41=lisp.CL_boundp(G_40);
if(lisp.values1(TMP_41) !== lisp.S_nil){
}else{
TMP_42=lisp.callFunctionWithCallStack(G_8);
lisp.CL_set(G_40,TMP_42);
}
lisp.CL_put(G_40,G_4,G_5);
lisp.CL_put(G_43,G_4,G_5);
lisp.CL_put(G_44,G_4,G_5);
lisp.CL_put(G_45,G_4,G_5);
{
TMP_48=lisp.callFunctionWithCallStack(G_49,G_46,lisp.symbolValue(G_47));
L_G2__6=lisp.values1(TMP_48);
lisp.setSymbolValue(G_47, lisp.values1(L_G2__6));
}
{
TMP_50=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_51;
let L_BASE_STREAM__9;
L_BASE_STREAM__9=arguments[0];
TMP_51=lisp.callFunctionWithCallStack(G_52);
return TMP_51;
});
L_G5__10=lisp.values1(TMP_50);
{
L_G6__11=lisp.values1(L_G5__10);
lisp.CL_put(G_46,G_53,L_G6__11);
}
}
CL_COMPILER_MAKE_EMITTER_STREAM.lisp_name = 'MAKE-EMITTER-STREAM'
lisp.setSymbolFunction(G_46, CL_COMPILER_MAKE_EMITTER_STREAM);
{
TMP_59=lisp.callFunctionWithCallStack(G_49,G_58,lisp.symbolValue(G_47));
L_G7__14=lisp.values1(TMP_59);
lisp.setSymbolValue(G_47, lisp.values1(L_G7__14));
}
{
TMP_60=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_63;
let TMP_61;
let L_FORKED_STREAM__18;
let L_BASE_STREAM__17;
L_BASE_STREAM__17=arguments[0];
L_FORKED_STREAM__18=arguments[1];
TMP_61=lisp.callFunctionWithCallStack(G_62,L_FORKED_STREAM__18);
TMP_63=lisp.callFunctionWithCallStack(G_64,TMP_61,L_BASE_STREAM__17);
return TMP_63;
});
L_G10__19=lisp.values1(TMP_60);
{
L_G11__20=lisp.values1(L_G10__19);
lisp.CL_put(G_58,G_53,L_G11__20);
}
}
CL_COMPILER_JOIN_EMITTER_STREAM.lisp_name = 'JOIN-EMITTER-STREAM'
lisp.setSymbolFunction(G_58, CL_COMPILER_JOIN_EMITTER_STREAM);
{
TMP_69=lisp.callFunctionWithCallStack(G_49,G_68,lisp.symbolValue(G_47));
L_G12__24=lisp.values1(TMP_69);
lisp.setSymbolValue(G_47, lisp.values1(L_G12__24));
}
{
TMP_70=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_HIR__27;
L_HIR__27=arguments[0];
return lisp.values1(lisp.S_nil);
});
L_G15__28=lisp.values1(TMP_70);
{
L_G16__29=lisp.values1(L_G15__28);
lisp.CL_put(G_68,G_53,L_G16__29);
}
}
CL_COMPILER_SET_SOURCE_MAP.lisp_name = 'SET-SOURCE-MAP'
lisp.setSymbolFunction(G_68, CL_COMPILER_SET_SOURCE_MAP);
CL_COMPILER_P2_EMIT_FOR_AUX.lisp_name = 'P2-EMIT-FOR-AUX'
lisp.setSymbolFunction(G_78, CL_COMPILER_P2_EMIT_FOR_AUX);
CL_COMPILER_P2.lisp_name = 'P2'
lisp.setSymbolFunction(G_89, CL_COMPILER_P2);
CL_COMPILER_P2_EMIT_DECLARE_TEMPORARY_VARIABLES.lisp_name = 'P2-EMIT-DECLARE-TEMPORARY-VARIABLES'
lisp.setSymbolFunction(G_110, CL_COMPILER_P2_EMIT_DECLARE_TEMPORARY_VARIABLES);
CL_COMPILER_P2_GENVAR.lisp_name = 'P2-GENVAR'
lisp.setSymbolFunction(G_123, CL_COMPILER_P2_GENVAR);
CL_COMPILER_P2_TEMPORARY_VAR.lisp_name = 'P2-TEMPORARY-VAR'
lisp.setSymbolFunction(G_127, CL_COMPILER_P2_TEMPORARY_VAR);
CL_COMPILER_P2_ESCAPE_STRING.lisp_name = 'P2-ESCAPE-STRING'
lisp.setSymbolFunction(G_131, CL_COMPILER_P2_ESCAPE_STRING);
CL_COMPILER_P2_LOCAL_VAR.lisp_name = 'P2-LOCAL-VAR'
lisp.setSymbolFunction(G_148, CL_COMPILER_P2_LOCAL_VAR);
CL_COMPILER_P2_LOCAL_FUNCTION.lisp_name = 'P2-LOCAL-FUNCTION'
lisp.setSymbolFunction(G_151, CL_COMPILER_P2_LOCAL_FUNCTION);
CL_COMPILER_P2_SYMBOL_TO_JS_VALUE.lisp_name = 'P2-SYMBOL-TO-JS-VALUE'
lisp.setSymbolFunction(G_154, CL_COMPILER_P2_SYMBOL_TO_JS_VALUE);
CL_COMPILER_P2_SYMBOL_TO_CALL_VALUE.lisp_name = 'P2-SYMBOL-TO-CALL-VALUE'
lisp.setSymbolFunction(G_163, CL_COMPILER_P2_SYMBOL_TO_CALL_VALUE);
CL_COMPILER_P2_SYMBOL_TO_JS_FUNCTION_NAME.lisp_name = 'P2-SYMBOL-TO-JS-FUNCTION-NAME'
lisp.setSymbolFunction(G_167, CL_COMPILER_P2_SYMBOL_TO_JS_FUNCTION_NAME);
CL_COMPILER_P2_ENCODE_STRING.lisp_name = 'P2-ENCODE-STRING'
lisp.setSymbolFunction(G_32, CL_COMPILER_P2_ENCODE_STRING);
CL_COMPILER_MAKE_CIRCLE_TABLE.lisp_name = 'MAKE-CIRCLE-TABLE'
lisp.setSymbolFunction(G_195, CL_COMPILER_MAKE_CIRCLE_TABLE);
CL_COMPILER_P2_LITERAL_1.lisp_name = 'P2-LITERAL-1'
lisp.setSymbolFunction(G_207, CL_COMPILER_P2_LITERAL_1);
CL_COMPILER_P2_LITERAL.lisp_name = 'P2-LITERAL'
lisp.setSymbolFunction(G_267, CL_COMPILER_P2_LITERAL);
CL_COMPILER_PERCENTP2_FORM.lisp_name = '%P2-FORM'
lisp.setSymbolFunction(G_271, CL_COMPILER_PERCENTP2_FORM);
CL_COMPILER_P2_FORM.lisp_name = 'P2-FORM'
lisp.setSymbolFunction(G_276, CL_COMPILER_P2_FORM);
CL_COMPILER_P2_FORMS.lisp_name = 'P2-FORMS'
lisp.setSymbolFunction(G_288, CL_COMPILER_P2_FORMS);
CL_COMPILER_P2_NO_RETURN.lisp_name = 'P2-NO-RETURN'
lisp.setSymbolFunction(G_286, CL_COMPILER_P2_NO_RETURN);
CL_COMPILERCOLONCONST.lisp_name = 'COMPILER:CONST'
lisp.setSymbolFunction(G_299, CL_COMPILERCOLONCONST);
lisp.CL_put(G_16,G_105,G_299);
CL_COMPILERCOLONLREF.lisp_name = 'COMPILER:LREF'
lisp.setSymbolFunction(G_303, CL_COMPILERCOLONLREF);
lisp.CL_put(G_320,G_105,G_303);
CL_COMPILERCOLONGREF.lisp_name = 'COMPILER:GREF'
lisp.setSymbolFunction(G_322, CL_COMPILERCOLONGREF);
lisp.CL_put(G_326,G_105,G_322);
CL_COMPILERCOLONLSET.lisp_name = 'COMPILER:LSET'
lisp.setSymbolFunction(G_328, CL_COMPILERCOLONLSET);
lisp.CL_put(G_338,G_105,G_328);
CL_COMPILERCOLONGSET.lisp_name = 'COMPILER:GSET'
lisp.setSymbolFunction(G_340, CL_COMPILERCOLONGSET);
lisp.CL_put(G_349,G_105,G_340);
CL_COMMON_LISPCOLONIF.lisp_name = 'COMMON-LISP:IF'
lisp.setSymbolFunction(G_351, CL_COMMON_LISPCOLONIF);
lisp.CL_put(G_102,G_105,G_351);
CL_COMMON_LISPCOLONPROGN.lisp_name = 'COMMON-LISP:PROGN'
lisp.setSymbolFunction(G_365, CL_COMMON_LISPCOLONPROGN);
lisp.CL_put(G_368,G_105,G_365);
CL_COMPILER_P2_EMIT_CHECK_ARGUMENTS.lisp_name = 'P2-EMIT-CHECK-ARGUMENTS'
lisp.setSymbolFunction(G_370, CL_COMPILER_P2_EMIT_CHECK_ARGUMENTS);
CL_COMPILER_P2_MAKE_SAVE_VAR.lisp_name = 'P2-MAKE-SAVE-VAR'
lisp.setSymbolFunction(G_380, CL_COMPILER_P2_MAKE_SAVE_VAR);
CL_COMPILER_P2_EMIT_UNWIND_VAR.lisp_name = 'P2-EMIT-UNWIND-VAR'
lisp.setSymbolFunction(G_384, CL_COMPILER_P2_EMIT_UNWIND_VAR);
CL_COMPILER_P2_EMIT_DECLVAR.lisp_name = 'P2-EMIT-DECLVAR'
lisp.setSymbolFunction(G_395, CL_COMPILER_P2_EMIT_DECLVAR);
CL_COMPILER_P2_EMIT_LAMBDA_LIST.lisp_name = 'P2-EMIT-LAMBDA-LIST'
lisp.setSymbolFunction(G_419, CL_COMPILER_P2_EMIT_LAMBDA_LIST);
CL_COMMON_LISPCOLONLAMBDA.lisp_name = 'COMMON-LISP:LAMBDA'
lisp.setSymbolFunction(G_474, CL_COMMON_LISPCOLONLAMBDA);
lisp.CL_put(G_493,G_105,G_474);
CL_COMMON_LISPCOLONLET.lisp_name = 'COMMON-LISP:LET'
lisp.setSymbolFunction(G_495, CL_COMMON_LISPCOLONLET);
lisp.CL_put(G_514,G_105,G_495);
CL_COMPILER_P2_PREPARE_ARGS.lisp_name = 'P2-PREPARE-ARGS'
lisp.setSymbolFunction(G_516, CL_COMPILER_P2_PREPARE_ARGS);
CL_COMPILER_P2_EMIT_ARGS.lisp_name = 'P2-EMIT-ARGS'
lisp.setSymbolFunction(G_521, CL_COMPILER_P2_EMIT_ARGS);
CL_COMPILERCOLONLCALL.lisp_name = 'COMPILER:LCALL'
lisp.setSymbolFunction(G_528, CL_COMPILERCOLONLCALL);
lisp.CL_put(G_536,G_105,G_528);
CL_COMPILER_P2_CALL_DEFAULT.lisp_name = 'P2-CALL-DEFAULT'
lisp.setSymbolFunction(G_36, CL_COMPILER_P2_CALL_DEFAULT);
CL_COMPILER_P2_CALL_BUILTIN_USING_LIST_SPEC.lisp_name = 'P2-CALL-BUILTIN-USING-LIST-SPEC'
lisp.setSymbolFunction(G_572, CL_COMPILER_P2_CALL_BUILTIN_USING_LIST_SPEC);
CL_COMPILERCOLONCALL.lisp_name = 'COMPILER:CALL'
lisp.setSymbolFunction(G_616, CL_COMPILERCOLONCALL);
lisp.CL_put(G_632,G_105,G_616);
CL_COMMON_LISPCOLONUNWIND_PROTECT.lisp_name = 'COMMON-LISP:UNWIND-PROTECT'
lisp.setSymbolFunction(G_634, CL_COMMON_LISPCOLONUNWIND_PROTECT);
lisp.CL_put(G_644,G_105,G_634);
CL_COMPILER_P2_BLOCK_RESULT_VAR_NAME.lisp_name = 'P2-BLOCK-RESULT-VAR-NAME'
lisp.setSymbolFunction(G_646, CL_COMPILER_P2_BLOCK_RESULT_VAR_NAME);
CL_COMPILER_P2_ESCAPE_BLOCK_NAME.lisp_name = 'P2-ESCAPE-BLOCK-NAME'
lisp.setSymbolFunction(G_652, CL_COMPILER_P2_ESCAPE_BLOCK_NAME);
CL_COMMON_LISPCOLONBLOCK.lisp_name = 'COMMON-LISP:BLOCK'
lisp.setSymbolFunction(G_657, CL_COMMON_LISPCOLONBLOCK);
lisp.CL_put(G_673,G_105,G_657);
CL_COMMON_LISPCOLONRETURN_FROM.lisp_name = 'COMMON-LISP:RETURN-FROM'
lisp.setSymbolFunction(G_675, CL_COMMON_LISPCOLONRETURN_FROM);
lisp.CL_put(G_687,G_105,G_675);
CL_COMMON_LISPCOLONLOOP.lisp_name = 'COMMON-LISP:LOOP'
lisp.setSymbolFunction(G_689, CL_COMMON_LISPCOLONLOOP);
lisp.CL_put(G_692,G_105,G_689);
CL_COMPILERCOLONRECUR.lisp_name = 'COMPILER:RECUR'
lisp.setSymbolFunction(G_694, CL_COMPILERCOLONRECUR);
lisp.CL_put(G_696,G_105,G_694);
CL_COMPILER_TAGBODY_STATE_NAME.lisp_name = 'TAGBODY-STATE-NAME'
lisp.setSymbolFunction(G_698, CL_COMPILER_TAGBODY_STATE_NAME);
CL_COMPILER_TAGBODY_TAG_NAME.lisp_name = 'TAGBODY-TAG-NAME'
lisp.setSymbolFunction(G_701, CL_COMPILER_TAGBODY_TAG_NAME);
CL_COMMON_LISPCOLONTAGBODY.lisp_name = 'COMMON-LISP:TAGBODY'
lisp.setSymbolFunction(G_706, CL_COMMON_LISPCOLONTAGBODY);
lisp.CL_put(G_724,G_105,G_706);
CL_COMMON_LISPCOLONGO.lisp_name = 'COMMON-LISP:GO'
lisp.setSymbolFunction(G_726, CL_COMMON_LISPCOLONGO);
lisp.CL_put(G_739,G_105,G_726);
CL_SYSTEMCOLONPERCENTDEFUN.lisp_name = 'SYSTEM:%DEFUN'
lisp.setSymbolFunction(G_741, CL_SYSTEMCOLONPERCENTDEFUN);
lisp.CL_put(G_750,G_105,G_741);
CL_SYSTEMCOLONPERCENTDEFPACKAGE.lisp_name = 'SYSTEM:%DEFPACKAGE'
lisp.setSymbolFunction(G_752, CL_SYSTEMCOLONPERCENTDEFPACKAGE);
lisp.CL_put(G_776,G_105,G_752);
CL_SYSTEMCOLONPERCENTIN_PACKAGE.lisp_name = 'SYSTEM:%IN-PACKAGE'
lisp.setSymbolFunction(G_778, CL_SYSTEMCOLONPERCENTIN_PACKAGE);
lisp.CL_put(G_787,G_105,G_778);
CL_COMPILER_P2_EMIT_REF.lisp_name = 'P2-EMIT-REF'
lisp.setSymbolFunction(G_789, CL_COMPILER_P2_EMIT_REF);
CL_FFICOLONREF.lisp_name = 'FFI:REF'
lisp.setSymbolFunction(G_802, CL_FFICOLONREF);
lisp.CL_put(G_805,G_105,G_802);
CL_FFICOLONSET.lisp_name = 'FFI:SET'
lisp.setSymbolFunction(G_807, CL_FFICOLONSET);
lisp.CL_put(G_812,G_105,G_807);
CL_COMPILER_P2_CONVERT_VAR.lisp_name = 'P2-CONVERT-VAR'
lisp.setSymbolFunction(G_814, CL_COMPILER_P2_CONVERT_VAR);
CL_FFICOLONVAR.lisp_name = 'FFI:VAR'
lisp.setSymbolFunction(G_821, CL_FFICOLONVAR);
lisp.CL_put(G_831,G_105,G_821);
CL_FFICOLONTYPEOF.lisp_name = 'FFI:TYPEOF'
lisp.setSymbolFunction(G_833, CL_FFICOLONTYPEOF);
lisp.CL_put(G_843,G_105,G_833);
CL_FFICOLONNEW.lisp_name = 'FFI:NEW'
lisp.setSymbolFunction(G_845, CL_FFICOLONNEW);
lisp.CL_put(G_855,G_105,G_845);
CL_FFICOLONAGET.lisp_name = 'FFI:AGET'
lisp.setSymbolFunction(G_857, CL_FFICOLONAGET);
lisp.CL_put(G_868,G_105,G_857);
CL_COMPILERCOLONJS_CALL.lisp_name = 'COMPILER:JS-CALL'
lisp.setSymbolFunction(G_870, CL_COMPILERCOLONJS_CALL);
lisp.CL_put(G_877,G_105,G_870);
CL_COMPILERCOLONMODULE.lisp_name = 'COMPILER:MODULE'
lisp.setSymbolFunction(G_879, CL_COMPILERCOLONMODULE);
lisp.CL_put(G_890,G_105,G_879);
CL_COMPILER_ESCAPE.lisp_name = 'ESCAPE'
lisp.setSymbolFunction(G_892, CL_COMPILER_ESCAPE);
CL_SYSTEMCOLONFORM_TIME.lisp_name = 'SYSTEM:FORM-TIME'
lisp.setSymbolFunction(G_910, CL_SYSTEMCOLONFORM_TIME);
lisp.CL_put(G_915,G_105,G_910);
CL_COMPILER_P2_LOGAND.lisp_name = 'P2-LOGAND'
lisp.setSymbolFunction(G_917, CL_COMPILER_P2_LOGAND);
CL_COMPILER_P2_FUNCALL.lisp_name = 'P2-FUNCALL'
lisp.setSymbolFunction(G_925, CL_COMPILER_P2_FUNCALL);
CL_COMPILER_P2_TOPLEVEL_1.lisp_name = 'P2-TOPLEVEL-1'
lisp.setSymbolFunction(G_938, CL_COMPILER_P2_TOPLEVEL_1);
CL_COMPILER_P2_EMIT_INITIALIZE_VARS.lisp_name = 'P2-EMIT-INITIALIZE-VARS'
lisp.setSymbolFunction(G_943, CL_COMPILER_P2_EMIT_INITIALIZE_VARS);
CL_COMPILER_P2_EMIT_INITIALIZE_SYMBOLS.lisp_name = 'P2-EMIT-INITIALIZE-SYMBOLS'
lisp.setSymbolFunction(G_952, CL_COMPILER_P2_EMIT_INITIALIZE_SYMBOLS);
CL_COMPILER_P2_FINISH_OUTPUT.lisp_name = 'P2-FINISH-OUTPUT'
lisp.setSymbolFunction(G_962, CL_COMPILER_P2_FINISH_OUTPUT);
CL_COMPILER_P2_TOPLEVEL.lisp_name = 'P2-TOPLEVEL'
lisp.setSymbolFunction(G_967, CL_COMPILER_P2_TOPLEVEL);
CL_COMPILER_P2_TOPLEVEL_FORMS.lisp_name = 'P2-TOPLEVEL-FORMS'
lisp.setSymbolFunction(G_977, CL_COMPILER_P2_TOPLEVEL_FORMS);
TMP_987=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_G425__727;
let TMP_994;
let L_HIR__726;
let TMP_993;
let L_G424__725;
let TMP_992;
let TMP_991;
let TMP_990;
let TMP_988;
let L_G423__724;
let L_G17__723;
L_G17__723=lisp.jsArrayToList(arguments, 0);
{
L_G423__724=lisp.values1(L_G17__723);
{
TMP_988=lisp.callFunctionWithCallStack(G_989,L_G423__724);
TMP_990=lisp.callFunctionWithCallStack(G_566,1,TMP_988,1);
if(lisp.values1(TMP_990) !== lisp.S_nil){
TMP_991=lisp.values1(lisp.S_nil);
}else{
TMP_992=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_103, lisp.S_nil),L_G423__724);
TMP_991=lisp.values1(lisp.values1(TMP_992));
}
L_G424__725=lisp.values1(TMP_991);
TMP_993=lisp.callFunctionWithCallStack(G_18,L_G423__724);
L_HIR__726=lisp.values1(TMP_993);
TMP_994=lisp.callFunctionWithCallStack(G_466,L_G423__724);
L_G425__727=lisp.values1(TMP_994);
}
}
return lisp.values1(lisp.S_nil);
});
lisp.CL_put(G_74,G_986,TMP_987);
TMP_995=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1006;
let L_G429__734;
let TMP_1005;
let L_FINALLY__733;
let TMP_1004;
let L_G428__732;
let TMP_1003;
let L_TRY__731;
let TMP_1002;
let L_G427__730;
let TMP_1001;
let TMP_998;
let TMP_997;
let TMP_996;
let L_G426__729;
let L_G18__728;
L_G18__728=lisp.jsArrayToList(arguments, 0);
{
L_G426__729=lisp.values1(L_G18__728);
{
TMP_996=lisp.callFunctionWithCallStack(G_989,L_G426__729);
TMP_997=lisp.callFunctionWithCallStack(G_566,2,TMP_996,2);
if(lisp.values1(TMP_997) !== lisp.S_nil){
TMP_998=lisp.values1(lisp.S_nil);
}else{
TMP_1001=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_999, lisp.makeCons(G_1000, lisp.S_nil)),L_G426__729);
TMP_998=lisp.values1(lisp.values1(TMP_1001));
}
L_G427__730=lisp.values1(TMP_998);
TMP_1002=lisp.callFunctionWithCallStack(G_18,L_G426__729);
L_TRY__731=lisp.values1(TMP_1002);
TMP_1003=lisp.callFunctionWithCallStack(G_466,L_G426__729);
L_G428__732=lisp.values1(TMP_1003);
TMP_1004=lisp.callFunctionWithCallStack(G_18,L_G428__732);
L_FINALLY__733=lisp.values1(TMP_1004);
TMP_1005=lisp.callFunctionWithCallStack(G_466,L_G428__732);
L_G429__734=lisp.values1(TMP_1005);
TMP_1006=lisp.callFunctionWithCallStack(G_1007,G_368,lisp.makeCons(G_82, lisp.makeCons(G_3.func(lisp.codeArrayToString([116, 114, 121, 123])), lisp.makeCons(G_37, lisp.S_nil))),L_TRY__731,lisp.makeCons(G_82, lisp.makeCons(G_3.func(lisp.codeArrayToString([125, 102, 105, 110, 97, 108, 108, 121, 123])), lisp.makeCons(G_37, lisp.S_nil))),L_FINALLY__733,lisp.makeCons(lisp.makeCons(G_82, lisp.makeCons(G_3.func(lisp.codeArrayToString([125])), lisp.makeCons(G_37, lisp.S_nil))), lisp.S_nil));
}
}
return TMP_1006;
});
lisp.CL_put(G_75,G_986,TMP_995);
TMP_1008=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1036;
let TMP_1034;
let TMP_1033;
let L_G439__748;
let TMP_1032;
let L_CATCH_FORM__747;
let L_G438__746;
let TMP_1031;
let L_G437__745;
let TMP_1030;
let L_ERROR_VAR__744;
let TMP_1029;
let L_G436__743;
let TMP_1028;
let TMP_1027;
let TMP_1026;
let TMP_1025;
let L_G435__742;
let TMP_1024;
let L_G434__741;
let TMP_1023;
let TMP_1022;
let TMP_1021;
let TMP_1020;
let L_G433__740;
let TMP_1019;
let L_G432__739;
let TMP_1018;
let L_TRY_FORM__738;
let TMP_1017;
let L_G431__737;
let TMP_1016;
let TMP_1011;
let TMP_1010;
let TMP_1009;
let L_G430__736;
let L_G19__735;
L_G19__735=lisp.jsArrayToList(arguments, 0);
{
L_G430__736=lisp.values1(L_G19__735);
{
TMP_1009=lisp.callFunctionWithCallStack(G_989,L_G430__736);
TMP_1010=lisp.callFunctionWithCallStack(G_566,2,TMP_1009,2);
if(lisp.values1(TMP_1010) !== lisp.S_nil){
TMP_1011=lisp.values1(lisp.S_nil);
}else{
TMP_1016=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1012, lisp.makeCons(lisp.makeCons(lisp.makeCons(G_1013, lisp.S_nil), lisp.makeCons(G_1014, lisp.makeCons(G_1015, lisp.S_nil))), lisp.S_nil)),L_G430__736);
TMP_1011=lisp.values1(lisp.values1(TMP_1016));
}
L_G431__737=lisp.values1(TMP_1011);
TMP_1017=lisp.callFunctionWithCallStack(G_18,L_G430__736);
L_TRY_FORM__738=lisp.values1(TMP_1017);
TMP_1018=lisp.callFunctionWithCallStack(G_466,L_G430__736);
L_G432__739=lisp.values1(TMP_1018);
TMP_1019=lisp.callFunctionWithCallStack(G_18,L_G432__739);
L_G433__740=lisp.values1(TMP_1019);
TMP_1020=lisp.callFunctionWithCallStack(G_989,L_G433__740);
TMP_1021=lisp.callFunctionWithCallStack(G_566,1,TMP_1020);
if(lisp.values1(TMP_1021) !== lisp.S_nil){
TMP_1022=lisp.values1(lisp.S_nil);
}else{
TMP_1023=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_1013, lisp.S_nil), lisp.makeCons(G_1014, lisp.makeCons(G_1015, lisp.S_nil))),L_G433__740);
TMP_1022=lisp.values1(lisp.values1(TMP_1023));
}
L_G434__741=lisp.values1(TMP_1022);
TMP_1024=lisp.callFunctionWithCallStack(G_18,L_G433__740);
L_G435__742=lisp.values1(TMP_1024);
TMP_1025=lisp.callFunctionWithCallStack(G_989,L_G435__742);
TMP_1026=lisp.callFunctionWithCallStack(G_566,1,TMP_1025,1);
if(lisp.values1(TMP_1026) !== lisp.S_nil){
TMP_1027=lisp.values1(lisp.S_nil);
}else{
TMP_1028=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1013, lisp.S_nil),L_G435__742);
TMP_1027=lisp.values1(lisp.values1(TMP_1028));
}
L_G436__743=lisp.values1(TMP_1027);
TMP_1029=lisp.callFunctionWithCallStack(G_18,L_G435__742);
L_ERROR_VAR__744=lisp.values1(TMP_1029);
TMP_1030=lisp.callFunctionWithCallStack(G_466,L_G435__742);
L_G437__745=lisp.values1(TMP_1030);
TMP_1031=lisp.callFunctionWithCallStack(G_466,L_G433__740);
L_G438__746=lisp.values1(TMP_1031);
L_CATCH_FORM__747=lisp.values1(L_G438__746);
TMP_1032=lisp.callFunctionWithCallStack(G_466,L_G432__739);
L_G439__748=lisp.values1(TMP_1032);
TMP_1033=lisp.callFunctionWithCallStack(G_973,G_34,G_37,G_3.func(lisp.codeArrayToString([125, 99, 97, 116, 99, 104, 40, 126, 65, 41, 123])),L_ERROR_VAR__744);
TMP_1034=lisp.callFunctionWithCallStack(G_1035,L_CATCH_FORM__747,lisp.makeCons(lisp.makeCons(G_82, lisp.makeCons(G_3.func(lisp.codeArrayToString([125])), lisp.makeCons(G_37, lisp.S_nil))), lisp.S_nil));
TMP_1036=lisp.callFunctionWithCallStack(G_1007,G_368,lisp.makeCons(G_82, lisp.makeCons(G_3.func(lisp.codeArrayToString([116, 114, 121, 32, 123])), lisp.makeCons(G_37, lisp.S_nil))),L_TRY_FORM__738,TMP_1033,TMP_1034);
}
}
return TMP_1036;
});
lisp.CL_put(G_76,G_986,TMP_1008);
TMP_1037=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1062;
let TMP_1061;
let L_BODY__763;
let L_G448__762;
let TMP_1060;
let L_G447__761;
let TMP_1059;
let L_STEP__760;
let TMP_1058;
let L_G446__759;
let TMP_1057;
let L_END__758;
let TMP_1056;
let L_G445__757;
let TMP_1055;
let L_START__756;
let TMP_1054;
let L_G444__755;
let TMP_1053;
let L_LOOP_VAR__754;
let TMP_1052;
let L_G443__753;
let TMP_1051;
let TMP_1050;
let TMP_1049;
let TMP_1048;
let L_G442__752;
let TMP_1047;
let L_G441__751;
let TMP_1046;
let TMP_1040;
let TMP_1039;
let TMP_1038;
let L_G440__750;
let L_G20__749;
L_G20__749=lisp.jsArrayToList(arguments, 0);
{
L_G440__750=lisp.values1(L_G20__749);
{
TMP_1038=lisp.callFunctionWithCallStack(G_989,L_G440__750);
TMP_1039=lisp.callFunctionWithCallStack(G_566,1,TMP_1038);
if(lisp.values1(TMP_1039) !== lisp.S_nil){
TMP_1040=lisp.values1(lisp.S_nil);
}else{
TMP_1046=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(lisp.makeCons(G_1041, lisp.makeCons(G_1042, lisp.makeCons(G_1043, lisp.makeCons(G_1044, lisp.S_nil)))), lisp.makeCons(G_1014, lisp.makeCons(G_1045, lisp.S_nil))),L_G440__750);
TMP_1040=lisp.values1(lisp.values1(TMP_1046));
}
L_G441__751=lisp.values1(TMP_1040);
TMP_1047=lisp.callFunctionWithCallStack(G_18,L_G440__750);
L_G442__752=lisp.values1(TMP_1047);
TMP_1048=lisp.callFunctionWithCallStack(G_989,L_G442__752);
TMP_1049=lisp.callFunctionWithCallStack(G_566,4,TMP_1048,4);
if(lisp.values1(TMP_1049) !== lisp.S_nil){
TMP_1050=lisp.values1(lisp.S_nil);
}else{
TMP_1051=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1041, lisp.makeCons(G_1042, lisp.makeCons(G_1043, lisp.makeCons(G_1044, lisp.S_nil)))),L_G442__752);
TMP_1050=lisp.values1(lisp.values1(TMP_1051));
}
L_G443__753=lisp.values1(TMP_1050);
TMP_1052=lisp.callFunctionWithCallStack(G_18,L_G442__752);
L_LOOP_VAR__754=lisp.values1(TMP_1052);
TMP_1053=lisp.callFunctionWithCallStack(G_466,L_G442__752);
L_G444__755=lisp.values1(TMP_1053);
TMP_1054=lisp.callFunctionWithCallStack(G_18,L_G444__755);
L_START__756=lisp.values1(TMP_1054);
TMP_1055=lisp.callFunctionWithCallStack(G_466,L_G444__755);
L_G445__757=lisp.values1(TMP_1055);
TMP_1056=lisp.callFunctionWithCallStack(G_18,L_G445__757);
L_END__758=lisp.values1(TMP_1056);
TMP_1057=lisp.callFunctionWithCallStack(G_466,L_G445__757);
L_G446__759=lisp.values1(TMP_1057);
TMP_1058=lisp.callFunctionWithCallStack(G_18,L_G446__759);
L_STEP__760=lisp.values1(TMP_1058);
TMP_1059=lisp.callFunctionWithCallStack(G_466,L_G446__759);
L_G447__761=lisp.values1(TMP_1059);
TMP_1060=lisp.callFunctionWithCallStack(G_466,L_G440__750);
L_G448__762=lisp.values1(TMP_1060);
L_BODY__763=lisp.values1(L_G448__762);
TMP_1061=lisp.callFunctionWithCallStack(G_1007,G_493,lisp.S_nil,L_BODY__763);
TMP_1062=lisp.callFunctionWithCallStack(G_973,G_78,L_LOOP_VAR__754,L_START__756,L_END__758,L_STEP__760,TMP_1061);
}
}
return TMP_1062;
});
lisp.CL_put(G_84,G_986,TMP_1037);
TMP_1063=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1082;
let TMP_1081;
let TMP_1080;
let TMP_1079;
let TMP_1078;
let TMP_1077;
let TMP_1076;
let L_UNWIND_CODE_VAR__771;
let TMP_1074;
let L_G452__770;
let TMP_1073;
let L_UNWIND_CODE__769;
let TMP_1072;
let L_G451__768;
let TMP_1071;
let L_FORM__767;
let TMP_1070;
let L_G450__766;
let TMP_1069;
let TMP_1066;
let TMP_1065;
let TMP_1064;
let L_G449__765;
let L_G21__764;
L_G21__764=lisp.jsArrayToList(arguments, 0);
{
L_G449__765=lisp.values1(L_G21__764);
{
TMP_1064=lisp.callFunctionWithCallStack(G_989,L_G449__765);
TMP_1065=lisp.callFunctionWithCallStack(G_566,2,TMP_1064,2);
if(lisp.values1(TMP_1065) !== lisp.S_nil){
TMP_1066=lisp.values1(lisp.S_nil);
}else{
TMP_1069=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1067, lisp.makeCons(G_1068, lisp.S_nil)),L_G449__765);
TMP_1066=lisp.values1(lisp.values1(TMP_1069));
}
L_G450__766=lisp.values1(TMP_1066);
TMP_1070=lisp.callFunctionWithCallStack(G_18,L_G449__765);
L_FORM__767=lisp.values1(TMP_1070);
TMP_1071=lisp.callFunctionWithCallStack(G_466,L_G449__765);
L_G451__768=lisp.values1(TMP_1071);
TMP_1072=lisp.callFunctionWithCallStack(G_18,L_G451__768);
L_UNWIND_CODE__769=lisp.values1(TMP_1072);
TMP_1073=lisp.callFunctionWithCallStack(G_466,L_G451__768);
L_G452__770=lisp.values1(TMP_1073);
{
TMP_1074=lisp.callFunctionWithCallStack(G_1075);
L_UNWIND_CODE_VAR__771=lisp.values1(TMP_1074);
TMP_1076=lisp.callFunctionWithCallStack(G_973,L_UNWIND_CODE_VAR__771,L_UNWIND_CODE__769);
TMP_1077=lisp.callFunctionWithCallStack(G_973,TMP_1076);
TMP_1078=lisp.callFunctionWithCallStack(G_1007,G_487,L_UNWIND_CODE_VAR__771,lisp.makeCons(G_3.func(lisp.codeArrayToString([])), lisp.S_nil));
TMP_1079=lisp.callFunctionWithCallStack(G_1007,G_64,L_UNWIND_CODE_VAR__771,lisp.makeCons(G_37, lisp.S_nil));
TMP_1080=lisp.callFunctionWithCallStack(G_973,G_75,L_FORM__767,TMP_1079);
TMP_1081=lisp.callFunctionWithCallStack(G_973,G_102,TMP_1078,L_FORM__767,TMP_1080);
TMP_1082=lisp.callFunctionWithCallStack(G_973,G_514,TMP_1077,TMP_1081);
}
}
}
return TMP_1082;
});
lisp.CL_put(G_85,G_986,TMP_1063);
TMP_1083=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1089;
let TMP_1088;
let L_BODY__775;
let L_G454__774;
let TMP_1087;
let TMP_1086;
let TMP_1085;
let TMP_1084;
let L_G453__773;
let L_G22__772;
L_G22__772=lisp.jsArrayToList(arguments, 0);
{
L_G453__773=lisp.values1(L_G22__772);
{
TMP_1084=lisp.callFunctionWithCallStack(G_989,L_G453__773);
TMP_1085=lisp.callFunctionWithCallStack(G_566,0,TMP_1084);
if(lisp.values1(TMP_1085) !== lisp.S_nil){
TMP_1086=lisp.values1(lisp.S_nil);
}else{
TMP_1087=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1014, lisp.makeCons(G_1045, lisp.S_nil)),L_G453__773);
TMP_1086=lisp.values1(lisp.values1(TMP_1087));
}
L_G454__774=lisp.values1(TMP_1086);
L_BODY__775=lisp.values1(L_G453__773);
TMP_1088=lisp.callFunctionWithCallStack(G_1035,L_BODY__775,lisp.makeCons(lisp.makeCons(G_64, lisp.makeCons(G_3.func(lisp.codeArrayToString([41])), lisp.makeCons(G_37, lisp.S_nil))), lisp.S_nil));
TMP_1089=lisp.callFunctionWithCallStack(G_1007,G_368,lisp.makeCons(G_64, lisp.makeCons(G_3.func(lisp.codeArrayToString([40])), lisp.makeCons(G_37, lisp.S_nil))),TMP_1088);
}
}
return TMP_1089;
});
lisp.CL_put(G_86,G_986,TMP_1083);
TMP_1090=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_1123;
let TMP_1122;
let TMP_1121;
let TMP_1120;
let TMP_1119;
let TMP_1117;
let TMP_1114;
let L_NAME__787;
let TMP_1111;
let TMP_1110;
let TMP_1108;
let TMP_1107;
let TMP_1106;
let L_BODY__786;
let L_G461__785;
let TMP_1105;
let L_G460__784;
let TMP_1104;
let L_HIR__783;
let TMP_1103;
let L_G459__782;
let TMP_1102;
let TMP_1101;
let TMP_1100;
let TMP_1099;
let L_G458__781;
let TMP_1098;
let L_G457__780;
let TMP_1097;
let L_OP__779;
let TMP_1096;
let L_G456__778;
let TMP_1095;
let TMP_1093;
let TMP_1092;
let TMP_1091;
let L_G455__777;
let L_G23__776;
L_G23__776=lisp.jsArrayToList(arguments, 0);
{
L_G455__777=lisp.values1(L_G23__776);
{
TMP_1091=lisp.callFunctionWithCallStack(G_989,L_G455__777);
TMP_1092=lisp.callFunctionWithCallStack(G_566,2,TMP_1091);
if(lisp.values1(TMP_1092) !== lisp.S_nil){
TMP_1093=lisp.values1(lisp.S_nil);
}else{
TMP_1095=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_1094, lisp.makeCons(lisp.makeCons(G_103, lisp.S_nil), lisp.makeCons(G_1014, lisp.makeCons(G_1045, lisp.S_nil)))),L_G455__777);
TMP_1093=lisp.values1(lisp.values1(TMP_1095));
}
L_G456__778=lisp.values1(TMP_1093);
TMP_1096=lisp.callFunctionWithCallStack(G_18,L_G455__777);
L_OP__779=lisp.values1(TMP_1096);
TMP_1097=lisp.callFunctionWithCallStack(G_466,L_G455__777);
L_G457__780=lisp.values1(TMP_1097);
TMP_1098=lisp.callFunctionWithCallStack(G_18,L_G457__780);
L_G458__781=lisp.values1(TMP_1098);
TMP_1099=lisp.callFunctionWithCallStack(G_989,L_G458__781);
TMP_1100=lisp.callFunctionWithCallStack(G_566,1,TMP_1099,1);
if(lisp.values1(TMP_1100) !== lisp.S_nil){
TMP_1101=lisp.values1(lisp.S_nil);
}else{
TMP_1102=lisp.callFunctionWithCallStack(G_96,G_3.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_103, lisp.S_nil),L_G458__781);
TMP_1101=lisp.values1(lisp.values1(TMP_1102));
}
L_G459__782=lisp.values1(TMP_1101);
TMP_1103=lisp.callFunctionWithCallStack(G_18,L_G458__781);
L_HIR__783=lisp.values1(TMP_1103);
TMP_1104=lisp.callFunctionWithCallStack(G_466,L_G458__781);
L_G460__784=lisp.values1(TMP_1104);
TMP_1105=lisp.callFunctionWithCallStack(G_466,L_G457__780);
L_G461__785=lisp.values1(TMP_1105);
L_BODY__786=lisp.values1(L_G461__785);
{
TMP_1106=lisp.callFunctionWithCallStack(G_169,L_OP__779);
TMP_1107=lisp.callFunctionWithCallStack(G_173,TMP_1106);
TMP_1108=lisp.callFunctionWithCallStack(G_1109,L_OP__779);
TMP_1110=lisp.callFunctionWithCallStack(G_34,lisp.S_nil,G_3.func(lisp.codeArrayToString([126, 65, 58, 126, 65])),TMP_1107,TMP_1108);
TMP_1111=lisp.callFunctionWithCallStack(G_1112,TMP_1110);
L_NAME__787=lisp.values1(TMP_1111);
TMP_1114=lisp.callFunctionWithCallStack(G_973,L_HIR__783);
TMP_1117=lisp.callFunctionWithCallStack(G_1007,G_1113,L_NAME__787,TMP_1114,lisp.makeCons(G_1115, lisp.makeCons(lisp.makeCons(G_1116, lisp.makeCons(G_103, lisp.S_nil)), lisp.S_nil)),L_BODY__786);
TMP_1119=lisp.callFunctionWithCallStack(G_973,G_95,L_OP__779);
TMP_1120=lisp.callFunctionWithCallStack(G_1007,G_56,TMP_1119,lisp.makeCons(lisp.makeCons(G_95, lisp.makeCons(G_105, lisp.S_nil)), lisp.S_nil));
TMP_1121=lisp.callFunctionWithCallStack(G_973,G_95,L_NAME__787);
TMP_1122=lisp.callFunctionWithCallStack(G_973,G_1118,TMP_1120,TMP_1121);
TMP_1123=lisp.callFunctionWithCallStack(G_973,G_368,TMP_1117,TMP_1122);
}
}
}
return TMP_1123;
});
lisp.CL_put(G_87,G_986,TMP_1090);
}catch(TMP_1){G_963.func();
console.log(TMP_1.message);
}


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_6;
let G_9;
let G_11;
let G_12;
let G_15;
let G_16;
let G_17;
let G_19;
let G_21;
let G_22;
let G_24;
let G_25;
let CL_COMPILER_BANGMACROEXPAND_1;
let CL_COMPILER_COMPILE_TOPLEVEL;
let CL_COMPILER_PASS1_TOPLEVEL_USING_OPTIMIZE;
// toplevel defun
let F_PASS1_TOPLEVEL_USING_OPTIMIZE_2;
F_PASS1_TOPLEVEL_USING_OPTIMIZE_2=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_8;
let TMP_7;
let L_HIR__4;
let TMP_4;
let L_RETURN_VALUE_P__2;
let L_FORM__1;
L_FORM__1=arguments[0];
L_RETURN_VALUE_P__2=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
{
TMP_4=lisp.callFunctionWithCallStack(G_5,L_FORM__1,L_RETURN_VALUE_P__2);
L_HIR__4=lisp.values1(TMP_4);
if(lisp.values1(lisp.symbolValue(G_6)) !== lisp.S_nil){
TMP_8=lisp.callFunctionWithCallStack(G_9,L_HIR__4);
TMP_7=TMP_8;
}else{
TMP_7=lisp.values1(L_HIR__4);
}
}
return TMP_7;
});
CL_COMPILER_PASS1_TOPLEVEL_USING_OPTIMIZE=lisp.values1(F_PASS1_TOPLEVEL_USING_OPTIMIZE_2);
let F_COMPILE_TOPLEVEL_10;
F_COMPILE_TOPLEVEL_10=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_11, arguments.length);
}
let TMP_18;
let save_STARSTANDARD_OUTPUTSTAR__9;
let TMP_14;
let L_IR__8;
let TMP_13;
let L_RETURN_VALUE_P__6;
let L_X__5;
L_X__5=arguments[0];
L_RETURN_VALUE_P__6=arguments.length > 1 ? arguments[1] : (lisp.values1(G_12));
{
TMP_13=lisp.callFunctionWithCallStack(G_5,L_X__5,L_RETURN_VALUE_P__6,L_RETURN_VALUE_P__6);
L_IR__8=lisp.values1(TMP_13);
{
TMP_14=lisp.callFunctionWithCallStack(G_15);
save_STARSTANDARD_OUTPUTSTAR__9=G_16.value;
G_16.value=lisp.values1(TMP_14);
try{
lisp.callFunctionWithCallStack(G_17,L_IR__8,lisp.symbolValue(G_16),L_RETURN_VALUE_P__6);
TMP_18=lisp.callFunctionWithCallStack(G_19,lisp.symbolValue(G_16));
}finally{
G_16.value=save_STARSTANDARD_OUTPUTSTAR__9;
}
}
}
return TMP_18;
});
CL_COMPILER_COMPILE_TOPLEVEL=lisp.values1(F_COMPILE_TOPLEVEL_10);
let F_BANGMACROEXPAND_1_20;
F_BANGMACROEXPAND_1_20=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_21, arguments.length);
}
let TMP_23;
let save_STARLEXENVSTAR__13;
let L_ENVIRONMENT__11;
let L_FORM__10;
L_FORM__10=arguments[0];
L_ENVIRONMENT__11=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
{
save_STARLEXENVSTAR__13=G_22.value;
G_22.value=lisp.values1(lisp.S_nil);
try{
TMP_23=lisp.callFunctionWithCallStack(G_24,L_FORM__10);
}finally{
G_22.value=save_STARLEXENVSTAR__13;
}
}
return TMP_23;
});
CL_COMPILER_BANGMACROEXPAND_1=lisp.values1(F_BANGMACROEXPAND_1_20);
// initialize symbols
G_3 = lisp.intern('PASS1-TOPLEVEL-USING-OPTIMIZE', 'COMPILER');
G_5 = lisp.intern('PASS1-TOPLEVEL', 'COMPILER');
G_6 = lisp.intern('*HIR-OPTIMIZE*', 'COMPILER');
G_9 = lisp.intern('HIR-OPTIMIZE', 'COMPILER');
G_11 = lisp.intern('COMPILE-TOPLEVEL', 'COMPILER');
G_12 = lisp.intern('T', 'COMMON-LISP');
G_15 = lisp.intern('MAKE-STRING-OUTPUT-STREAM', 'COMMON-LISP');
G_16 = lisp.intern('*STANDARD-OUTPUT*', 'COMMON-LISP');
G_17 = lisp.intern('P2-TOPLEVEL', 'COMPILER');
G_19 = lisp.intern('GET-OUTPUT-STREAM-STRING', 'COMMON-LISP');
G_21 = lisp.intern('!MACROEXPAND-1', 'COMPILER');
G_22 = lisp.intern('*LEXENV*', 'COMPILER');
G_24 = lisp.intern('%MACROEXPAND-1', 'COMPILER');
G_25 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMPILER');CL_COMPILER_PASS1_TOPLEVEL_USING_OPTIMIZE.lisp_name = 'PASS1-TOPLEVEL-USING-OPTIMIZE'
lisp.setSymbolFunction(G_3, CL_COMPILER_PASS1_TOPLEVEL_USING_OPTIMIZE);
CL_COMPILER_COMPILE_TOPLEVEL.lisp_name = 'COMPILE-TOPLEVEL'
lisp.setSymbolFunction(G_11, CL_COMPILER_COMPILE_TOPLEVEL);
CL_COMPILER_BANGMACROEXPAND_1.lisp_name = '!MACROEXPAND-1'
lisp.setSymbolFunction(G_21, CL_COMPILER_BANGMACROEXPAND_1);
}catch(TMP_1){G_25.func();
console.log(TMP_1.message);
}


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_7;
let G_9;
let G_11;
let G_13;
let G_18;
let G_22;
let G_24;
let G_26;
let G_27;
let G_28;
let G_29;
let G_30;
let G_31;
let G_32;
let G_33;
let G_34;
let G_35;
let G_36;
let G_37;
let G_38;
let G_39;
let G_40;
let G_41;
let G_42;
let G_43;
let G_44;
let G_45;
let G_46;
let G_47;
let G_48;
let G_49;
let G_50;
let G_51;
let G_53;
let G_55;
let G_57;
let G_58;
let G_59;
let G_62;
let G_64;
let G_66;
let G_67;
let G_68;
let G_69;
let G_70;
let G_72;
let G_74;
let G_76;
let G_80;
let G_81;
let CL_COMMON_LISP_SPECIAL_OPERATOR_P;
let CL_COMMON_LISP_MACRO_FUNCTION;
let CL_COMMON_LISP_MACROEXPAND;
let CL_COMMON_LISP_MACROEXPAND_1;
let CL_COMMON_LISP_EVAL;
let TMP_60;
// toplevel defun
let F_EVAL_2;
F_EVAL_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_6;
let TMP_4;
let L_X__1;
L_X__1=arguments[0];
TMP_4=lisp.callFunctionWithCallStack(G_5,L_X__1);
TMP_6=lisp.callFunctionWithCallStack(G_7,TMP_4);
return TMP_6;
});
CL_COMMON_LISP_EVAL=lisp.values1(F_EVAL_2);
let F_MACROEXPAND_1_8;
F_MACROEXPAND_1_8=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_9, arguments.length);
}
let TMP_10;
let L_ENVIRONMENT__4;
let L_FORM__3;
L_FORM__3=arguments[0];
L_ENVIRONMENT__4=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
TMP_10=lisp.callFunctionWithCallStack(G_11,L_FORM__3,L_ENVIRONMENT__4);
return TMP_10;
});
CL_COMMON_LISP_MACROEXPAND_1=lisp.values1(F_MACROEXPAND_1_8);
let F_MACROEXPAND_12;
F_MACROEXPAND_12=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_13, arguments.length);
}
let TMP_20;
let TMP_19;
let TMP_17;
let TMP_14;
let L_ENVIRONMENT__7;
let L_FORM__6;
L_FORM__6=arguments[0];
L_ENVIRONMENT__7=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
TMP_14=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_16;
let TMP_15;
let L_G0__11;
let L_EXPANDED_P__10;
let L_FORM__9;
L_FORM__9=arguments.length > 0 ? arguments[0] : (lisp.values1(lisp.S_nil));
L_EXPANDED_P__10=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
L_G0__11=lisp.jsArrayToList(arguments, 2);
if(lisp.values1(L_EXPANDED_P__10) !== lisp.S_nil){
TMP_16=G_9.func(L_FORM__9);
TMP_15=TMP_16;
}else{
TMP_15=lisp.values1(L_FORM__9);
}
return TMP_15;
});
TMP_17=lisp.callFunctionWithCallStack(G_18,TMP_14);
TMP_19=G_9.func(L_FORM__6);
TMP_20=lisp.CL_multipleValueCall(TMP_17,TMP_19);
return TMP_20;
});
CL_COMMON_LISP_MACROEXPAND=lisp.values1(F_MACROEXPAND_12);
let F_MACRO_FUNCTION_21;
F_MACRO_FUNCTION_21=(function(){
if(arguments.length < 1 || 2 < arguments.length) {
lisp.argumentsError(G_22, arguments.length);
}
let TMP_23;
let L_ENVIRONMENT__13;
let L_SYMBOL__12;
L_SYMBOL__12=arguments[0];
L_ENVIRONMENT__13=arguments.length > 1 ? arguments[1] : (lisp.values1(lisp.S_nil));
TMP_23=lisp.callFunctionWithCallStack(G_24,L_SYMBOL__12);
return TMP_23;
});
CL_COMMON_LISP_MACRO_FUNCTION=lisp.values1(F_MACRO_FUNCTION_21);
let F_SPECIAL_OPERATOR_P_25;
F_SPECIAL_OPERATOR_P_25=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_26, arguments.length);
}
let TMP_56;
let TMP_54;
let TMP_52;
let L_SYMBOL__15;
L_SYMBOL__15=arguments[0];
TMP_52=lisp.callFunctionWithCallStack(G_53,L_SYMBOL__15,lisp.makeCons(G_27, lisp.makeCons(G_28, lisp.makeCons(G_29, lisp.makeCons(G_30, lisp.makeCons(G_31, lisp.makeCons(G_32, lisp.makeCons(G_33, lisp.makeCons(G_34, lisp.makeCons(G_35, lisp.makeCons(G_36, lisp.makeCons(G_37, lisp.makeCons(G_38, lisp.makeCons(G_39, lisp.makeCons(G_40, lisp.makeCons(G_41, lisp.makeCons(G_42, lisp.makeCons(G_43, lisp.makeCons(G_44, lisp.makeCons(G_45, lisp.makeCons(G_46, lisp.makeCons(G_47, lisp.makeCons(G_48, lisp.makeCons(G_49, lisp.makeCons(G_50, lisp.makeCons(G_51, lisp.S_nil))))))))))))))))))))))))));
TMP_54=lisp.callFunctionWithCallStack(G_55,TMP_52);
TMP_56=lisp.callFunctionWithCallStack(G_57,TMP_54);
return TMP_56;
});
CL_COMMON_LISP_SPECIAL_OPERATOR_P=lisp.values1(F_SPECIAL_OPERATOR_P_25);
// initialize symbols
G_3 = lisp.intern('EVAL', 'COMMON-LISP');
G_5 = lisp.intern('COMPILE-TOPLEVEL', 'COMPILER');
G_7 = lisp.intern('JS-EVAL', 'FFI');
G_9 = lisp.intern('MACROEXPAND-1', 'COMMON-LISP');
G_11 = lisp.intern('!MACROEXPAND-1', 'COMPILER');
G_13 = lisp.intern('MACROEXPAND', 'COMMON-LISP');
G_18 = lisp.intern('ENSURE-FUNCTION', 'COMMON-LISP');
G_22 = lisp.intern('MACRO-FUNCTION', 'COMMON-LISP');
G_24 = lisp.intern('GET-MACRO', 'COMPILER');
G_26 = lisp.intern('SPECIAL-OPERATOR-P', 'COMMON-LISP');
G_27 = lisp.intern('BLOCK', 'COMMON-LISP');
G_28 = lisp.intern('CATCH', 'COMMON-LISP');
G_29 = lisp.intern('EVAL-WHEN', 'COMMON-LISP');
G_30 = lisp.intern('FLET', 'COMMON-LISP');
G_31 = lisp.intern('FUNCTION', 'COMMON-LISP');
G_32 = lisp.intern('GO', 'COMMON-LISP');
G_33 = lisp.intern('IF', 'COMMON-LISP');
G_34 = lisp.intern('LABELS', 'COMMON-LISP');
G_35 = lisp.intern('LET', 'COMMON-LISP');
G_36 = lisp.intern('LET*', 'COMMON-LISP');
G_37 = lisp.intern('LOAD-TIME-VALUE', 'COMMON-LISP');
G_38 = lisp.intern('LOCALLY', 'COMMON-LISP');
G_39 = lisp.intern('MACROLET', 'COMMON-LISP');
G_40 = lisp.intern('MULTIPLE-VALUE-CALL', 'COMMON-LISP');
G_41 = lisp.intern('MULTIPLE-VALUE-PROG1', 'COMMON-LISP');
G_42 = lisp.intern('PROGN', 'COMMON-LISP');
G_43 = lisp.intern('PROGV', 'COMMON-LISP');
G_44 = lisp.intern('QUOTE', 'COMMON-LISP');
G_45 = lisp.intern('RETURN-FROM', 'COMMON-LISP');
G_46 = lisp.intern('SETQ', 'COMMON-LISP');
G_47 = lisp.intern('SYMBOL-MACROLET', 'COMMON-LISP');
G_48 = lisp.intern('TAGBODY', 'COMMON-LISP');
G_49 = lisp.intern('THE', 'COMMON-LISP');
G_50 = lisp.intern('THROW', 'COMMON-LISP');
G_51 = lisp.intern('UNWIND-PROTECT', 'COMMON-LISP');
G_53 = lisp.intern('MEMBER', 'COMMON-LISP');
G_55 = lisp.intern('NULL', 'COMMON-LISP');
G_57 = lisp.intern('NOT', 'COMMON-LISP');
G_58 = lisp.intern('DEFINE-COMPILER-MACRO', 'COMMON-LISP');
G_59 = lisp.intern('MACRO', 'COMPILER');
G_62 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_64 = lisp.intern('<=', 'COMMON-LISP');
G_66 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_67 = lisp.intern('NAME', 'COMMON-LISP');
G_68 = lisp.intern('LAMBDA-LIST', 'COMMON-LISP');
G_69 = lisp.intern('&BODY', 'COMMON-LISP');
G_70 = lisp.intern('BODY', 'COMMON-LISP');
G_72 = lisp.intern('ERROR', 'COMMON-LISP');
G_74 = lisp.intern('FIRST', 'COMMON-LISP');
G_76 = lisp.intern('REST', 'COMMON-LISP');
G_80 = lisp.intern('LIST', 'COMMON-LISP');
G_81 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('COMMON-LISP');CL_COMMON_LISP_EVAL.lisp_name = 'EVAL'
lisp.setSymbolFunction(G_3, CL_COMMON_LISP_EVAL);
CL_COMMON_LISP_MACROEXPAND_1.lisp_name = 'MACROEXPAND-1'
lisp.setSymbolFunction(G_9, CL_COMMON_LISP_MACROEXPAND_1);
CL_COMMON_LISP_MACROEXPAND.lisp_name = 'MACROEXPAND'
lisp.setSymbolFunction(G_13, CL_COMMON_LISP_MACROEXPAND);
CL_COMMON_LISP_MACRO_FUNCTION.lisp_name = 'MACRO-FUNCTION'
lisp.setSymbolFunction(G_22, CL_COMMON_LISP_MACRO_FUNCTION);
CL_COMMON_LISP_SPECIAL_OPERATOR_P.lisp_name = 'SPECIAL-OPERATOR-P'
lisp.setSymbolFunction(G_26, CL_COMMON_LISP_SPECIAL_OPERATOR_P);
TMP_60=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_79;
let L_BODY__24;
let L_G5__23;
let TMP_78;
let L_LAMBDA_LIST__22;
let TMP_77;
let L_G4__21;
let TMP_75;
let L_NAME__20;
let TMP_73;
let L_G3__19;
let TMP_71;
let TMP_65;
let TMP_63;
let TMP_61;
let L_G2__18;
let L_G1__17;
L_G1__17=lisp.jsArrayToList(arguments, 0);
{
L_G2__18=lisp.values1(L_G1__17);
{
TMP_61=lisp.callFunctionWithCallStack(G_62,L_G2__18);
TMP_63=lisp.callFunctionWithCallStack(G_64,2,TMP_61);
if(lisp.values1(TMP_63) !== lisp.S_nil){
TMP_65=lisp.values1(lisp.S_nil);
}else{
TMP_71=lisp.callFunctionWithCallStack(G_72,G_66.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_67, lisp.makeCons(G_68, lisp.makeCons(G_69, lisp.makeCons(G_70, lisp.S_nil)))),L_G2__18);
TMP_65=lisp.values1(lisp.values1(TMP_71));
}
L_G3__19=lisp.values1(TMP_65);
TMP_73=lisp.callFunctionWithCallStack(G_74,L_G2__18);
L_NAME__20=lisp.values1(TMP_73);
TMP_75=lisp.callFunctionWithCallStack(G_76,L_G2__18);
L_G4__21=lisp.values1(TMP_75);
TMP_77=lisp.callFunctionWithCallStack(G_74,L_G4__21);
L_LAMBDA_LIST__22=lisp.values1(TMP_77);
TMP_78=lisp.callFunctionWithCallStack(G_76,L_G4__21);
L_G5__23=lisp.values1(TMP_78);
L_BODY__24=lisp.values1(L_G5__23);
TMP_79=lisp.callFunctionWithCallStack(G_80,G_44,L_NAME__20);
}
}
return TMP_79;
});
lisp.CL_put(G_58,G_59,TMP_60);
}catch(TMP_1){G_81.func();
console.log(TMP_1.message);
}


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
// toplevel defun
lisp.defpackage('UNREAL-LISP', {exportNames: ['MAIN'], usePackageNames: ['CL'], nicknames: []});
// initialize symbols
G_2 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.ensurePackage('UNREAL-LISP');}catch(TMP_1){G_2.func();
console.log(TMP_1.message);
}


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_3;
let G_4;
let G_5;
let G_7;
let G_8;
let G_9;
let G_10;
let G_11;
let G_12;
let G_13;
let G_14;
let G_15;
let G_16;
let G_18;
let G_19;
let G_20;
let G_21;
let G_22;
let G_23;
let G_26;
let G_27;
let G_31;
let G_32;
let G_33;
let G_34;
let G_35;
let G_36;
let G_37;
let G_38;
let G_39;
let G_43;
let G_44;
let G_45;
let G_46;
let G_47;
let G_48;
let G_49;
let G_54;
let G_56;
let G_58;
let G_59;
let G_60;
let G_67;
let G_73;
let G_74;
let G_75;
let G_76;
let G_77;
let G_78;
let G_79;
let G_80;
let G_81;
let G_82;
let G_83;
let G_84;
let G_85;
let G_86;
let G_96;
let G_99;
let G_101;
let G_103;
let G_104;
let G_106;
let G_108;
let G_110;
let G_114;
let G_116;
let G_118;
let G_121;
let G_123;
let G_126;
let G_128;
let G_132;
let G_133;
let G_134;
let G_135;
let G_136;
let G_137;
let G_138;
let G_139;
let G_140;
let G_141;
let G_142;
let G_143;
let G_176;
let G_177;
let G_185;
let G_193;
let G_194;
let G_196;
let G_202;
let G_203;
let G_213;
let G_232;
let G_241;
let G_242;
let G_243;
let G_249;
let G_250;
let G_269;
let G_271;
let G_274;
let TMP_265;
let TMP_237;
let TMP_209;
let TMP_181;
let TMP_165;
let TMP_152;
let TMP_97;
let TMP_87;
let TMP_68;
let TMP_61;
let TMP_50;
let TMP_40;
let TMP_30;
let TMP_29;
let TMP_28;
let TMP_25;
let TMP_24;
let TMP_17;
let TMP_6;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('CREATE-METHOD', 'UNREAL-LISP');
G_3 = lisp.intern('CREATE-SLOT', 'UNREAL-LISP');
G_4 = lisp.intern('CREATE-SLOT-SETTER', 'UNREAL-LISP');
G_5 = lisp.intern('JS-OBJECT', 'UNREAL-LISP');
G_7 = lisp.intern('FIND-CLASS', 'COMMON-LISP');
G_8 = lisp.intern('DIRECT-SUPERCLASSES', 'KEYWORD');
G_9 = lisp.intern('DIRECT-SLOTS', 'KEYWORD');
G_10 = lisp.intern('WRITERS', 'KEYWORD');
G_11 = lisp.intern('SETF', 'COMMON-LISP');
G_12 = lisp.intern('FOREIGN-REF', 'UNREAL-LISP');
G_13 = lisp.intern('READERS', 'KEYWORD');
G_14 = lisp.intern('INITARGS', 'KEYWORD');
G_15 = lisp.intern('FOREIGN-REF', 'KEYWORD');
G_16 = lisp.intern('NAME', 'KEYWORD');
G_18 = lisp.intern('LIST', 'COMMON-LISP');
G_19 = lisp.intern('FOREIGN-SLOTS', 'UNREAL-LISP');
G_20 = lisp.intern('FOREIGN-SLOTS', 'KEYWORD');
G_21 = lisp.intern('INITFORM', 'KEYWORD');
G_22 = lisp.intern('QUOTE', 'COMMON-LISP');
G_23 = lisp.intern('INITFUNCTION', 'KEYWORD');
G_26 = lisp.intern('FOREIGN-METHODS', 'UNREAL-LISP');
G_27 = lisp.intern('FOREIGN-METHODS', 'KEYWORD');
G_31 = lisp.intern('ENSURE-CLASS-USING-CLASS', 'COMMON-LISP');
G_32 = lisp.intern('LAMBDA-LIST', 'KEYWORD');
G_33 = lisp.intern('OBJ', 'UNREAL-LISP');
G_34 = lisp.intern('QUALIFIERS', 'KEYWORD');
G_35 = lisp.intern('SPECIALIZERS', 'KEYWORD');
G_36 = lisp.intern('T', 'COMMON-LISP');
G_37 = lisp.intern('BODY', 'KEYWORD');
G_38 = lisp.intern('BLOCK', 'COMMON-LISP');
G_39 = lisp.intern('FUNCTION', 'KEYWORD');
G_43 = lisp.intern('APPLY', 'COMMON-LISP');
G_44 = lisp.intern('ENSURE-METHOD', 'COMMON-LISP');
G_45 = lisp.intern('DEF-FOREIGN-METHOD-IMPL', 'UNREAL-LISP');
G_46 = lisp.intern('FUN-SYM', 'UNREAL-LISP');
G_47 = lisp.intern('METHOD-REF', 'UNREAL-LISP');
G_48 = lisp.intern('ENSURE-GENERIC-FUNCTION', 'COMMON-LISP');
G_49 = lisp.intern('GETF', 'COMMON-LISP');
G_54 = lisp.intern('%PUTF', 'COMMON-LISP');
G_56 = lisp.intern('FDEFINITION', 'COMMON-LISP');
G_58 = lisp.intern('DEF-FOREIGN-SLOT-IMPL', 'UNREAL-LISP');
G_59 = lisp.intern('SLOT-SYM', 'UNREAL-LISP');
G_60 = lisp.intern('SLOT-REF', 'UNREAL-LISP');
G_67 = lisp.intern('FOREIGN-SLOT-VALUE', 'UNREAL-LISP');
G_73 = lisp.intern('DEF-FOREIGN-METHOD', 'UNREAL-LISP');
G_74 = lisp.intern('DEF-FOREIGN-SLOT', 'UNREAL-LISP');
G_75 = lisp.intern('INITIALIZE-SLOT', 'UNREAL-LISP');
G_76 = lisp.intern('INITIALIZE-SLOTS', 'UNREAL-LISP');
G_77 = lisp.intern('INITIALIZE-INSTANCE', 'COMMON-LISP');
G_78 = lisp.intern('INSTANCE', 'UNREAL-LISP');
G_79 = lisp.intern('&REST', 'COMMON-LISP');
G_80 = lisp.intern('INITARGS', 'UNREAL-LISP');
G_81 = lisp.intern('&KEY', 'COMMON-LISP');
G_82 = lisp.intern('&ALLOW-OTHER-KEYS', 'COMMON-LISP');
G_83 = lisp.intern('AFTER', 'KEYWORD');
G_84 = lisp.intern('IF', 'COMMON-LISP');
G_85 = lisp.intern('NOT', 'COMMON-LISP');
G_86 = lisp.intern('SLOT-BOUNDP', 'COMMON-LISP');
G_96 = lisp.intern('MACRO', 'COMPILER');
G_99 = lisp.intern('%DB-LENGTH', 'COMMON-LISP');
G_101 = lisp.intern('<=', 'COMMON-LISP');
G_103 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_104 = lisp.intern('PATH', 'UNREAL-LISP');
G_106 = lisp.intern('ERROR', 'COMMON-LISP');
G_108 = lisp.intern('FIRST', 'COMMON-LISP');
G_110 = lisp.intern('REST', 'COMMON-LISP');
G_114 = lisp.intern('REF', 'FFI');
G_116 = lisp.intern('APPEND', 'COMMON-LISP');
G_118 = lisp.intern('LIST*', 'COMMON-LISP');
G_121 = lisp.intern('LENGTH', 'COMMON-LISP');
G_123 = lisp.intern('>', 'COMMON-LISP');
G_126 = lisp.intern('REVERSE', 'COMMON-LISP');
G_128 = lisp.intern('CDR', 'COMMON-LISP');
G_132 = lisp.intern('LAMBDA', 'COMMON-LISP');
G_133 = lisp.intern('ARGS', 'UNREAL-LISP');
G_134 = lisp.intern('LET', 'COMMON-LISP');
G_135 = lisp.intern('ARG-ARRAY', 'UNREAL-LISP');
G_136 = lisp.intern('ARRAY', 'FFI');
G_137 = lisp.intern('LOOP', 'COMMON-LISP');
G_138 = lisp.intern('FOR', 'KEYWORD');
G_139 = lisp.intern('ARG', 'UNREAL-LISP');
G_140 = lisp.intern('IN', 'KEYWORD');
G_141 = lisp.intern('DO', 'KEYWORD');
G_142 = lisp.intern('PUSH', 'COMMON-LISP');
G_143 = lisp.intern('ANSWER', 'UNREAL-LISP');
G_176 = lisp.intern('VAL', 'UNREAL-LISP');
G_177 = lisp.intern('SET', 'FFI');
G_185 = lisp.intern('FUN-NAME', 'UNREAL-LISP');
G_193 = lisp.intern('PROGN', 'COMMON-LISP');
G_194 = lisp.intern('EXPORT', 'COMMON-LISP');
G_196 = lisp.intern('*PACKAGE*', 'COMMON-LISP');
G_202 = lisp.intern('DEFMETHOD', 'COMMON-LISP');
G_203 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_213 = lisp.intern('SLOT-NAME', 'UNREAL-LISP');
G_232 = lisp.intern('NEW-VALUE', 'UNREAL-LISP');
G_241 = lisp.intern('KEY', 'UNREAL-LISP');
G_242 = lisp.intern('&OPTIONAL', 'COMMON-LISP');
G_243 = lisp.intern('ALT', 'UNREAL-LISP');
G_249 = lisp.intern('INTERN', 'COMMON-LISP');
G_250 = lisp.intern('STRING', 'COMMON-LISP');
G_269 = lisp.intern('KEYS', 'UNREAL-LISP');
G_271 = lisp.intern('IN', 'UNREAL-LISP');
G_274 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('UNREAL-LISP');TMP_6=lisp.callFunctionWithCallStack(G_7,G_5,lisp.S_nil);
TMP_17=lisp.callFunctionWithCallStack(G_18,G_10,lisp.makeCons(lisp.makeCons(G_11, lisp.makeCons(G_12, lisp.S_nil)), lisp.S_nil),G_13,lisp.makeCons(G_12, lisp.S_nil),G_14,lisp.makeCons(G_15, lisp.S_nil),G_16,G_12);
TMP_24=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
return lisp.values1(lisp.S_nil);
});
TMP_25=lisp.callFunctionWithCallStack(G_18,G_10,lisp.makeCons(lisp.makeCons(G_11, lisp.makeCons(G_19, lisp.S_nil)), lisp.S_nil),G_13,lisp.makeCons(G_19, lisp.S_nil),G_14,lisp.makeCons(G_20, lisp.S_nil),G_16,G_19,G_21,lisp.makeCons(G_22, lisp.makeCons(lisp.S_nil, lisp.S_nil)),G_23,TMP_24);
TMP_28=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
return lisp.values1(lisp.S_nil);
});
TMP_29=lisp.callFunctionWithCallStack(G_18,G_10,lisp.makeCons(lisp.makeCons(G_11, lisp.makeCons(G_26, lisp.S_nil)), lisp.S_nil),G_13,lisp.makeCons(G_26, lisp.S_nil),G_14,lisp.makeCons(G_27, lisp.S_nil),G_16,G_26,G_21,lisp.makeCons(G_22, lisp.makeCons(lisp.S_nil, lisp.S_nil)),G_23,TMP_28);
TMP_30=lisp.callFunctionWithCallStack(G_18,TMP_17,TMP_25,TMP_29);
lisp.callFunctionWithCallStack(G_31,TMP_6,G_5,G_8,lisp.S_nil,G_9,TMP_30);
TMP_40=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_42;
let TMP_41;
let L_G4__2;
let L_G3__1;
L_G3__1=arguments[0];
L_G4__2=arguments[1];
TMP_41=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_OBJ__8;
L_OBJ__8=arguments[0];
return lisp.values1(L_OBJ__8);
});
TMP_42=lisp.callFunctionWithCallStack(G_43,TMP_41,L_G3__1);
return TMP_42;
});
lisp.callFunctionWithCallStack(G_44,G_12,G_32,lisp.makeCons(G_33, lisp.S_nil),G_34,lisp.S_nil,G_35,lisp.makeCons(G_36, lisp.S_nil),G_37,lisp.makeCons(lisp.makeCons(G_38, lisp.makeCons(G_12, lisp.makeCons(G_33, lisp.S_nil))), lisp.S_nil),G_39,TMP_40);
lisp.callFunctionWithCallStack(G_48,G_45,G_32,lisp.makeCons(G_33, lisp.makeCons(G_46, lisp.makeCons(G_47, lisp.S_nil))));
TMP_50=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_57;
let TMP_51;
let L_G9__11;
let L_G8__10;
L_G8__10=arguments[0];
L_G9__11=arguments[1];
TMP_51=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_55;
let L_G13__24;
let TMP_53;
let TMP_52;
let L_G16__23;
let L_G15__22;
let L_G14__21;
let L_METHOD_REF__19;
let L_FUN_SYM__18;
let L_OBJ__17;
L_OBJ__17=arguments[0];
L_FUN_SYM__18=arguments[1];
L_METHOD_REF__19=arguments[2];
{
L_G14__21=lisp.values1(L_OBJ__17);
L_G15__22=lisp.values1(L_FUN_SYM__18);
L_G16__23=lisp.values1(L_METHOD_REF__19);
{
TMP_52=lisp.callFunctionWithCallStack(G_26,L_G14__21);
TMP_53=lisp.callFunctionWithCallStack(G_54,TMP_52,L_G16__23,L_G15__22);
L_G13__24=lisp.values1(TMP_53);
TMP_55=lisp.callFunctionWithCallStack(G_56,lisp.makeCons(G_11, lisp.makeCons(G_26, lisp.S_nil)));
lisp.CL_funcall(lisp.values1(TMP_55),L_G13__24,L_G14__21);
}
}
return lisp.values1(L_G16__23);
});
TMP_57=lisp.callFunctionWithCallStack(G_43,TMP_51,L_G8__10);
return TMP_57;
});
lisp.callFunctionWithCallStack(G_44,G_45,G_32,lisp.makeCons(G_33, lisp.makeCons(G_46, lisp.makeCons(G_47, lisp.S_nil))),G_34,lisp.S_nil,G_35,lisp.makeCons(G_5, lisp.makeCons(G_36, lisp.makeCons(G_36, lisp.S_nil))),G_37,lisp.makeCons(lisp.makeCons(G_38, lisp.makeCons(G_45, lisp.makeCons(lisp.makeCons(G_11, lisp.makeCons(lisp.makeCons(G_49, lisp.makeCons(lisp.makeCons(G_26, lisp.makeCons(G_33, lisp.S_nil)), lisp.makeCons(G_46, lisp.S_nil))), lisp.makeCons(G_47, lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_39,TMP_50);
lisp.callFunctionWithCallStack(G_48,G_58,G_32,lisp.makeCons(G_33, lisp.makeCons(G_59, lisp.makeCons(G_60, lisp.S_nil))));
TMP_61=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_66;
let TMP_62;
let L_G18__26;
let L_G17__25;
L_G17__25=arguments[0];
L_G18__26=arguments[1];
TMP_62=(function(){
if(arguments.length !== 3) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_65;
let L_G22__39;
let TMP_64;
let TMP_63;
let L_G25__38;
let L_G24__37;
let L_G23__36;
let L_SLOT_REF__34;
let L_SLOT_SYM__33;
let L_OBJ__32;
L_OBJ__32=arguments[0];
L_SLOT_SYM__33=arguments[1];
L_SLOT_REF__34=arguments[2];
{
L_G23__36=lisp.values1(L_OBJ__32);
L_G24__37=lisp.values1(L_SLOT_SYM__33);
L_G25__38=lisp.values1(L_SLOT_REF__34);
{
TMP_63=lisp.callFunctionWithCallStack(G_19,L_G23__36);
TMP_64=lisp.callFunctionWithCallStack(G_54,TMP_63,L_G25__38,L_G24__37);
L_G22__39=lisp.values1(TMP_64);
TMP_65=lisp.callFunctionWithCallStack(G_56,lisp.makeCons(G_11, lisp.makeCons(G_19, lisp.S_nil)));
lisp.CL_funcall(lisp.values1(TMP_65),L_G22__39,L_G23__36);
}
}
return lisp.values1(L_G25__38);
});
TMP_66=lisp.callFunctionWithCallStack(G_43,TMP_62,L_G17__25);
return TMP_66;
});
lisp.callFunctionWithCallStack(G_44,G_58,G_32,lisp.makeCons(G_33, lisp.makeCons(G_59, lisp.makeCons(G_60, lisp.S_nil))),G_34,lisp.S_nil,G_35,lisp.makeCons(G_5, lisp.makeCons(G_36, lisp.makeCons(G_36, lisp.S_nil))),G_37,lisp.makeCons(lisp.makeCons(G_38, lisp.makeCons(G_58, lisp.makeCons(lisp.makeCons(G_11, lisp.makeCons(lisp.makeCons(G_49, lisp.makeCons(lisp.makeCons(G_19, lisp.makeCons(G_33, lisp.S_nil)), lisp.makeCons(G_59, lisp.S_nil))), lisp.makeCons(G_60, lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_39,TMP_61);
lisp.callFunctionWithCallStack(G_48,G_67,G_32,lisp.makeCons(G_33, lisp.makeCons(G_59, lisp.S_nil)));
TMP_68=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_72;
let TMP_69;
let L_G27__41;
let L_G26__40;
L_G26__40=arguments[0];
L_G27__41=arguments[1];
TMP_69=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_71;
let TMP_70;
let L_SLOT_SYM__48;
let L_OBJ__47;
L_OBJ__47=arguments[0];
L_SLOT_SYM__48=arguments[1];
TMP_70=lisp.callFunctionWithCallStack(G_19,L_OBJ__47);
TMP_71=lisp.callFunctionWithCallStack(G_49,TMP_70,L_SLOT_SYM__48);
return TMP_71;
});
TMP_72=lisp.callFunctionWithCallStack(G_43,TMP_69,L_G26__40);
return TMP_72;
});
lisp.callFunctionWithCallStack(G_44,G_67,G_32,lisp.makeCons(G_33, lisp.makeCons(G_59, lisp.S_nil)),G_34,lisp.S_nil,G_35,lisp.makeCons(G_5, lisp.makeCons(G_36, lisp.S_nil)),G_37,lisp.makeCons(lisp.makeCons(G_38, lisp.makeCons(G_67, lisp.makeCons(lisp.makeCons(G_49, lisp.makeCons(lisp.makeCons(G_19, lisp.makeCons(G_33, lisp.S_nil)), lisp.makeCons(G_59, lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_39,TMP_68);
TMP_87=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_95;
let TMP_88;
let L_G36__51;
let L_G35__50;
L_G35__50=arguments[0];
L_G36__51=arguments[1];
TMP_88=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_94;
let TMP_93;
let L_G40__61;
let TMP_92;
let L_G41__60;
let TMP_91;
let TMP_90;
let TMP_89;
let L_INITARGS__58;
let L_INSTANCE__57;
L_INSTANCE__57=arguments[0];
L_INITARGS__58=lisp.jsArrayToList(arguments, 1);
TMP_89=lisp.callFunctionWithCallStack(G_86,L_INSTANCE__57,G_12);
TMP_90=lisp.callFunctionWithCallStack(G_85,TMP_89);
if(lisp.values1(TMP_90) !== lisp.S_nil){
{
L_G41__60=lisp.values1(L_INSTANCE__57);
TMP_92=lisp.callFunctionWithCallStack(G_49,L_INITARGS__58,G_15);
L_G40__61=lisp.values1(TMP_92);
TMP_93=lisp.callFunctionWithCallStack(G_56,lisp.makeCons(G_11, lisp.makeCons(G_12, lisp.S_nil)));
TMP_94=lisp.CL_funcall(lisp.values1(TMP_93),L_G40__61,L_G41__60);
}
TMP_91=TMP_94;
}else{
TMP_91=lisp.values1(lisp.S_nil);
}
return TMP_91;
});
TMP_95=lisp.callFunctionWithCallStack(G_43,TMP_88,L_G35__50);
return TMP_95;
});
lisp.callFunctionWithCallStack(G_44,G_77,G_32,lisp.makeCons(G_78, lisp.makeCons(G_79, lisp.makeCons(G_80, lisp.makeCons(G_81, lisp.makeCons(G_82, lisp.S_nil))))),G_34,lisp.makeCons(G_83, lisp.S_nil),G_35,lisp.makeCons(G_5, lisp.S_nil),G_37,lisp.makeCons(lisp.makeCons(G_38, lisp.makeCons(G_77, lisp.makeCons(lisp.makeCons(G_84, lisp.makeCons(lisp.makeCons(G_85, lisp.makeCons(lisp.makeCons(G_86, lisp.makeCons(G_78, lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(G_12, lisp.S_nil)), lisp.S_nil))), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_11, lisp.makeCons(lisp.makeCons(G_12, lisp.makeCons(G_78, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_49, lisp.makeCons(G_80, lisp.makeCons(G_15, lisp.S_nil))), lisp.S_nil))), lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_39,TMP_87);
TMP_97=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_151;
let TMP_150;
let TMP_149;
let TMP_148;
let TMP_147;
let TMP_146;
let TMP_145;
let TMP_144;
let F_CREATE_THIS__70;
let TMP_119;
let F_CREATE_APPLY__69;
let TMP_113;
let L_G45__68;
let TMP_112;
let L_PATH__67;
let TMP_111;
let L_G44__66;
let TMP_109;
let L_OBJ__65;
let TMP_107;
let L_G43__64;
let TMP_105;
let TMP_102;
let TMP_100;
let TMP_98;
let L_G42__63;
let L_G0__62;
L_G0__62=lisp.jsArrayToList(arguments, 0);
{
L_G42__63=lisp.values1(L_G0__62);
{
TMP_98=lisp.callFunctionWithCallStack(G_99,L_G42__63);
TMP_100=lisp.callFunctionWithCallStack(G_101,2,TMP_98,2);
if(lisp.values1(TMP_100) !== lisp.S_nil){
TMP_102=lisp.values1(lisp.S_nil);
}else{
TMP_105=lisp.callFunctionWithCallStack(G_106,G_103.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_33, lisp.makeCons(G_104, lisp.S_nil)),L_G42__63);
TMP_102=lisp.values1(lisp.values1(TMP_105));
}
L_G43__64=lisp.values1(TMP_102);
TMP_107=lisp.callFunctionWithCallStack(G_108,L_G42__63);
L_OBJ__65=lisp.values1(TMP_107);
TMP_109=lisp.callFunctionWithCallStack(G_110,L_G42__63);
L_G44__66=lisp.values1(TMP_109);
TMP_111=lisp.callFunctionWithCallStack(G_108,L_G44__66);
L_PATH__67=lisp.values1(TMP_111);
TMP_112=lisp.callFunctionWithCallStack(G_110,L_G44__66);
L_G45__68=lisp.values1(TMP_112);
{
TMP_113=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_117;
let TMP_115;
let L_PATH__72;
let L_OBJ__71;
L_OBJ__71=arguments[0];
L_PATH__72=arguments[1];
TMP_115=lisp.callFunctionWithCallStack(G_116,L_PATH__72,lisp.makeCons(G_43, lisp.S_nil));
TMP_117=lisp.callFunctionWithCallStack(G_118,G_114,L_OBJ__71,TMP_115);
return TMP_117;
});
F_CREATE_APPLY__69=lisp.values1(TMP_113);
TMP_119=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_131;
let TMP_130;
let TMP_129;
let TMP_127;
let TMP_125;
let TMP_124;
let TMP_122;
let TMP_120;
let L_PATH__74;
let L_OBJ__73;
L_OBJ__73=arguments[0];
L_PATH__74=arguments[1];
TMP_120=lisp.callFunctionWithCallStack(G_121,L_PATH__74);
TMP_122=lisp.callFunctionWithCallStack(G_123,TMP_120,1);
if(lisp.values1(TMP_122) !== lisp.S_nil){
TMP_125=lisp.callFunctionWithCallStack(G_126,L_PATH__74);
TMP_127=lisp.callFunctionWithCallStack(G_128,TMP_125);
TMP_129=lisp.callFunctionWithCallStack(G_126,TMP_127);
TMP_130=lisp.callFunctionWithCallStack(G_118,G_114,L_OBJ__73,TMP_129);
TMP_124=TMP_130;
}else{
TMP_131=lisp.callFunctionWithCallStack(G_18,G_114,L_OBJ__73);
TMP_124=TMP_131;
}
return TMP_124;
});
F_CREATE_THIS__70=lisp.values1(TMP_119);
TMP_144=F_CREATE_APPLY__69(L_OBJ__65,L_PATH__67);
TMP_145=F_CREATE_THIS__70(L_OBJ__65,L_PATH__67);
TMP_146=lisp.callFunctionWithCallStack(G_118,TMP_144,TMP_145,lisp.makeCons(G_135, lisp.S_nil));
TMP_147=lisp.callFunctionWithCallStack(G_18,G_143,TMP_146);
TMP_148=lisp.callFunctionWithCallStack(G_18,TMP_147);
TMP_149=lisp.callFunctionWithCallStack(G_118,G_134,TMP_148,lisp.makeCons(G_143, lisp.S_nil));
TMP_150=lisp.callFunctionWithCallStack(G_18,G_134,lisp.makeCons(lisp.makeCons(G_135, lisp.makeCons(lisp.makeCons(G_136, lisp.S_nil), lisp.S_nil)), lisp.S_nil),lisp.makeCons(G_137, lisp.makeCons(G_138, lisp.makeCons(G_139, lisp.makeCons(G_140, lisp.makeCons(G_133, lisp.makeCons(G_141, lisp.makeCons(lisp.makeCons(lisp.makeCons(G_114, lisp.makeCons(G_135, lisp.makeCons(G_142, lisp.S_nil))), lisp.makeCons(G_139, lisp.S_nil)), lisp.S_nil))))))),TMP_149);
TMP_151=lisp.callFunctionWithCallStack(G_18,G_132,lisp.makeCons(G_133, lisp.S_nil),TMP_150);
}
}
}
return TMP_151;
});
lisp.CL_put(G_2,G_96,TMP_97);
TMP_152=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_164;
let TMP_163;
let F_CREATE_GETTER__82;
let TMP_161;
let L_G49__81;
let TMP_160;
let L_PATH__80;
let TMP_159;
let L_G48__79;
let TMP_158;
let L_OBJ__78;
let TMP_157;
let L_G47__77;
let TMP_156;
let TMP_155;
let TMP_154;
let TMP_153;
let L_G46__76;
let L_G1__75;
L_G1__75=lisp.jsArrayToList(arguments, 0);
{
L_G46__76=lisp.values1(L_G1__75);
{
TMP_153=lisp.callFunctionWithCallStack(G_99,L_G46__76);
TMP_154=lisp.callFunctionWithCallStack(G_101,2,TMP_153,2);
if(lisp.values1(TMP_154) !== lisp.S_nil){
TMP_155=lisp.values1(lisp.S_nil);
}else{
TMP_156=lisp.callFunctionWithCallStack(G_106,G_103.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_33, lisp.makeCons(G_104, lisp.S_nil)),L_G46__76);
TMP_155=lisp.values1(lisp.values1(TMP_156));
}
L_G47__77=lisp.values1(TMP_155);
TMP_157=lisp.callFunctionWithCallStack(G_108,L_G46__76);
L_OBJ__78=lisp.values1(TMP_157);
TMP_158=lisp.callFunctionWithCallStack(G_110,L_G46__76);
L_G48__79=lisp.values1(TMP_158);
TMP_159=lisp.callFunctionWithCallStack(G_108,L_G48__79);
L_PATH__80=lisp.values1(TMP_159);
TMP_160=lisp.callFunctionWithCallStack(G_110,L_G48__79);
L_G49__81=lisp.values1(TMP_160);
{
TMP_161=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_162;
let L_PATH__84;
let L_OBJ__83;
L_OBJ__83=arguments[0];
L_PATH__84=arguments[1];
TMP_162=lisp.callFunctionWithCallStack(G_118,G_114,L_OBJ__83,L_PATH__84);
return TMP_162;
});
F_CREATE_GETTER__82=lisp.values1(TMP_161);
TMP_163=F_CREATE_GETTER__82(L_OBJ__78,L_PATH__80);
TMP_164=lisp.callFunctionWithCallStack(G_18,G_132,lisp.S_nil,TMP_163);
}
}
}
return TMP_164;
});
lisp.CL_put(G_3,G_96,TMP_152);
TMP_165=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_180;
let TMP_179;
let TMP_178;
let F_THE_SLOT__92;
let TMP_174;
let L_G53__91;
let TMP_173;
let L_PATH__90;
let TMP_172;
let L_G52__89;
let TMP_171;
let L_OBJ__88;
let TMP_170;
let L_G51__87;
let TMP_169;
let TMP_168;
let TMP_167;
let TMP_166;
let L_G50__86;
let L_G2__85;
L_G2__85=lisp.jsArrayToList(arguments, 0);
{
L_G50__86=lisp.values1(L_G2__85);
{
TMP_166=lisp.callFunctionWithCallStack(G_99,L_G50__86);
TMP_167=lisp.callFunctionWithCallStack(G_101,2,TMP_166,2);
if(lisp.values1(TMP_167) !== lisp.S_nil){
TMP_168=lisp.values1(lisp.S_nil);
}else{
TMP_169=lisp.callFunctionWithCallStack(G_106,G_103.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_33, lisp.makeCons(G_104, lisp.S_nil)),L_G50__86);
TMP_168=lisp.values1(lisp.values1(TMP_169));
}
L_G51__87=lisp.values1(TMP_168);
TMP_170=lisp.callFunctionWithCallStack(G_108,L_G50__86);
L_OBJ__88=lisp.values1(TMP_170);
TMP_171=lisp.callFunctionWithCallStack(G_110,L_G50__86);
L_G52__89=lisp.values1(TMP_171);
TMP_172=lisp.callFunctionWithCallStack(G_108,L_G52__89);
L_PATH__90=lisp.values1(TMP_172);
TMP_173=lisp.callFunctionWithCallStack(G_110,L_G52__89);
L_G53__91=lisp.values1(TMP_173);
{
TMP_174=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_175;
let L_PATH__94;
let L_OBJ__93;
L_OBJ__93=arguments[0];
L_PATH__94=arguments[1];
TMP_175=lisp.callFunctionWithCallStack(G_118,G_114,L_OBJ__93,L_PATH__94);
return TMP_175;
});
F_THE_SLOT__92=lisp.values1(TMP_174);
TMP_178=F_THE_SLOT__92(L_OBJ__88,L_PATH__90);
TMP_179=lisp.callFunctionWithCallStack(G_118,G_177,TMP_178,lisp.makeCons(G_176, lisp.S_nil));
TMP_180=lisp.callFunctionWithCallStack(G_18,G_132,lisp.makeCons(G_176, lisp.S_nil),TMP_179);
}
}
}
return TMP_180;
});
lisp.CL_put(G_4,G_96,TMP_165);
TMP_181=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_208;
let TMP_207;
let TMP_206;
let TMP_205;
let TMP_204;
let TMP_201;
let TMP_200;
let TMP_199;
let TMP_198;
let TMP_197;
let TMP_195;
let L_G58__103;
let TMP_192;
let L_METHOD_REF__102;
let TMP_191;
let L_G57__101;
let TMP_190;
let L_FUN_NAME__100;
let TMP_189;
let L_G56__99;
let TMP_188;
let L_OBJ__98;
let TMP_187;
let L_G55__97;
let TMP_186;
let TMP_184;
let TMP_183;
let TMP_182;
let L_G54__96;
let L_G31__95;
L_G31__95=lisp.jsArrayToList(arguments, 0);
{
L_G54__96=lisp.values1(L_G31__95);
{
TMP_182=lisp.callFunctionWithCallStack(G_99,L_G54__96);
TMP_183=lisp.callFunctionWithCallStack(G_101,3,TMP_182,3);
if(lisp.values1(TMP_183) !== lisp.S_nil){
TMP_184=lisp.values1(lisp.S_nil);
}else{
TMP_186=lisp.callFunctionWithCallStack(G_106,G_103.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_33, lisp.makeCons(G_185, lisp.makeCons(G_47, lisp.S_nil))),L_G54__96);
TMP_184=lisp.values1(lisp.values1(TMP_186));
}
L_G55__97=lisp.values1(TMP_184);
TMP_187=lisp.callFunctionWithCallStack(G_108,L_G54__96);
L_OBJ__98=lisp.values1(TMP_187);
TMP_188=lisp.callFunctionWithCallStack(G_110,L_G54__96);
L_G56__99=lisp.values1(TMP_188);
TMP_189=lisp.callFunctionWithCallStack(G_108,L_G56__99);
L_FUN_NAME__100=lisp.values1(TMP_189);
TMP_190=lisp.callFunctionWithCallStack(G_110,L_G56__99);
L_G57__101=lisp.values1(TMP_190);
TMP_191=lisp.callFunctionWithCallStack(G_108,L_G57__101);
L_METHOD_REF__102=lisp.values1(TMP_191);
TMP_192=lisp.callFunctionWithCallStack(G_110,L_G57__101);
L_G58__103=lisp.values1(TMP_192);
TMP_195=lisp.callFunctionWithCallStack(G_18,G_22,L_FUN_NAME__100);
TMP_197=lisp.callFunctionWithCallStack(G_118,G_194,TMP_195,lisp.makeCons(G_196, lisp.S_nil));
TMP_198=lisp.callFunctionWithCallStack(G_18,G_22,L_FUN_NAME__100);
TMP_199=lisp.callFunctionWithCallStack(G_18,G_12,L_OBJ__98);
TMP_200=lisp.callFunctionWithCallStack(G_18,G_2,TMP_199,L_METHOD_REF__102);
TMP_201=lisp.callFunctionWithCallStack(G_18,G_45,L_OBJ__98,TMP_198,TMP_200);
TMP_204=lisp.callFunctionWithCallStack(G_18,G_22,L_FUN_NAME__100);
TMP_205=lisp.callFunctionWithCallStack(G_18,G_49,lisp.makeCons(G_26, lisp.makeCons(G_33, lisp.S_nil)),TMP_204);
TMP_206=lisp.callFunctionWithCallStack(G_118,G_203,TMP_205,lisp.makeCons(G_133, lisp.S_nil));
TMP_207=lisp.callFunctionWithCallStack(G_18,G_202,L_FUN_NAME__100,lisp.makeCons(lisp.makeCons(G_33, lisp.makeCons(G_5, lisp.S_nil)), lisp.makeCons(G_79, lisp.makeCons(G_133, lisp.S_nil))),TMP_206);
TMP_208=lisp.callFunctionWithCallStack(G_18,G_193,TMP_197,TMP_201,TMP_207);
}
}
return TMP_208;
});
lisp.CL_put(G_73,G_96,TMP_181);
TMP_209=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_236;
let TMP_235;
let TMP_234;
let TMP_233;
let TMP_231;
let TMP_230;
let TMP_229;
let TMP_228;
let TMP_227;
let TMP_226;
let TMP_225;
let TMP_224;
let TMP_223;
let TMP_222;
let TMP_221;
let L_G63__112;
let TMP_220;
let L_SLOT_REF__111;
let TMP_219;
let L_G62__110;
let TMP_218;
let L_SLOT_NAME__109;
let TMP_217;
let L_G61__108;
let TMP_216;
let L_OBJ__107;
let TMP_215;
let L_G60__106;
let TMP_214;
let TMP_212;
let TMP_211;
let TMP_210;
let L_G59__105;
let L_G32__104;
L_G32__104=lisp.jsArrayToList(arguments, 0);
{
L_G59__105=lisp.values1(L_G32__104);
{
TMP_210=lisp.callFunctionWithCallStack(G_99,L_G59__105);
TMP_211=lisp.callFunctionWithCallStack(G_101,3,TMP_210,3);
if(lisp.values1(TMP_211) !== lisp.S_nil){
TMP_212=lisp.values1(lisp.S_nil);
}else{
TMP_214=lisp.callFunctionWithCallStack(G_106,G_103.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_33, lisp.makeCons(G_213, lisp.makeCons(G_60, lisp.S_nil))),L_G59__105);
TMP_212=lisp.values1(lisp.values1(TMP_214));
}
L_G60__106=lisp.values1(TMP_212);
TMP_215=lisp.callFunctionWithCallStack(G_108,L_G59__105);
L_OBJ__107=lisp.values1(TMP_215);
TMP_216=lisp.callFunctionWithCallStack(G_110,L_G59__105);
L_G61__108=lisp.values1(TMP_216);
TMP_217=lisp.callFunctionWithCallStack(G_108,L_G61__108);
L_SLOT_NAME__109=lisp.values1(TMP_217);
TMP_218=lisp.callFunctionWithCallStack(G_110,L_G61__108);
L_G62__110=lisp.values1(TMP_218);
TMP_219=lisp.callFunctionWithCallStack(G_108,L_G62__110);
L_SLOT_REF__111=lisp.values1(TMP_219);
TMP_220=lisp.callFunctionWithCallStack(G_110,L_G62__110);
L_G63__112=lisp.values1(TMP_220);
TMP_221=lisp.callFunctionWithCallStack(G_18,G_22,L_SLOT_NAME__109);
TMP_222=lisp.callFunctionWithCallStack(G_118,G_194,TMP_221,lisp.makeCons(G_196, lisp.S_nil));
TMP_223=lisp.callFunctionWithCallStack(G_18,G_22,L_SLOT_NAME__109);
TMP_224=lisp.callFunctionWithCallStack(G_18,G_12,L_OBJ__107);
TMP_225=lisp.callFunctionWithCallStack(G_18,G_3,TMP_224,L_SLOT_REF__111);
TMP_226=lisp.callFunctionWithCallStack(G_18,G_58,L_OBJ__107,TMP_223,TMP_225);
TMP_227=lisp.callFunctionWithCallStack(G_18,G_22,L_SLOT_NAME__109);
TMP_228=lisp.callFunctionWithCallStack(G_18,G_67,G_33,TMP_227);
TMP_229=lisp.callFunctionWithCallStack(G_18,G_203,TMP_228);
TMP_230=lisp.callFunctionWithCallStack(G_18,G_202,L_SLOT_NAME__109,lisp.makeCons(lisp.makeCons(G_33, lisp.makeCons(G_5, lisp.S_nil)), lisp.S_nil),TMP_229);
TMP_231=lisp.callFunctionWithCallStack(G_18,G_11,L_SLOT_NAME__109);
TMP_233=lisp.callFunctionWithCallStack(G_18,G_4,lisp.makeCons(G_12, lisp.makeCons(G_33, lisp.S_nil)),L_SLOT_REF__111);
TMP_234=lisp.callFunctionWithCallStack(G_118,G_203,TMP_233,lisp.makeCons(G_232, lisp.S_nil));
TMP_235=lisp.callFunctionWithCallStack(G_18,G_202,TMP_231,lisp.makeCons(G_232, lisp.makeCons(lisp.makeCons(G_33, lisp.makeCons(G_5, lisp.S_nil)), lisp.S_nil)),TMP_234);
TMP_236=lisp.callFunctionWithCallStack(G_18,G_193,TMP_222,TMP_226,TMP_230,TMP_235);
}
}
return TMP_236;
});
lisp.CL_put(G_74,G_96,TMP_209);
TMP_237=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_264;
let TMP_263;
let TMP_262;
let TMP_261;
let TMP_260;
let TMP_259;
let TMP_258;
let TMP_257;
let TMP_256;
let TMP_255;
let TMP_254;
let TMP_253;
let TMP_252;
let TMP_251;
let L_G67__119;
let TMP_248;
let L_ALT__118;
let TMP_247;
let L_G66__117;
let TMP_246;
let L_KEY__116;
let TMP_245;
let L_G65__115;
let TMP_244;
let TMP_240;
let TMP_239;
let TMP_238;
let L_G64__114;
let L_G33__113;
L_G33__113=lisp.jsArrayToList(arguments, 0);
{
L_G64__114=lisp.values1(L_G33__113);
{
TMP_238=lisp.callFunctionWithCallStack(G_99,L_G64__114);
TMP_239=lisp.callFunctionWithCallStack(G_101,1,TMP_238,2);
if(lisp.values1(TMP_239) !== lisp.S_nil){
TMP_240=lisp.values1(lisp.S_nil);
}else{
TMP_244=lisp.callFunctionWithCallStack(G_106,G_103.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_241, lisp.makeCons(G_242, lisp.makeCons(G_243, lisp.S_nil))),L_G64__114);
TMP_240=lisp.values1(lisp.values1(TMP_244));
}
L_G65__115=lisp.values1(TMP_240);
TMP_245=lisp.callFunctionWithCallStack(G_108,L_G64__114);
L_KEY__116=lisp.values1(TMP_245);
TMP_246=lisp.callFunctionWithCallStack(G_110,L_G64__114);
L_G66__117=lisp.values1(TMP_246);
TMP_247=lisp.callFunctionWithCallStack(G_108,L_G66__117);
L_ALT__118=lisp.values1(TMP_247);
TMP_248=lisp.callFunctionWithCallStack(G_110,L_G66__117);
L_G67__119=lisp.values1(TMP_248);
TMP_251=lisp.callFunctionWithCallStack(G_18,G_22,L_KEY__116);
TMP_252=lisp.callFunctionWithCallStack(G_18,G_250,TMP_251);
TMP_253=lisp.callFunctionWithCallStack(G_118,G_249,TMP_252,lisp.makeCons(G_103.func(lisp.codeArrayToString([75, 69, 89, 87, 79, 82, 68])), lisp.S_nil));
TMP_254=lisp.callFunctionWithCallStack(G_18,G_49,G_80,TMP_253);
TMP_255=lisp.CL_cons(L_KEY__116,lisp.makeCons(G_78, lisp.S_nil));
TMP_256=lisp.callFunctionWithCallStack(G_18,G_22,L_KEY__116);
TMP_257=lisp.callFunctionWithCallStack(G_18,G_250,TMP_256);
TMP_258=lisp.callFunctionWithCallStack(G_118,G_249,TMP_257,lisp.makeCons(G_103.func(lisp.codeArrayToString([75, 69, 89, 87, 79, 82, 68])), lisp.S_nil));
TMP_259=lisp.callFunctionWithCallStack(G_18,G_49,G_80,TMP_258);
TMP_260=lisp.callFunctionWithCallStack(G_18,G_11,TMP_255,TMP_259);
TMP_261=lisp.CL_cons(L_KEY__116,lisp.makeCons(G_78, lisp.S_nil));
TMP_262=lisp.callFunctionWithCallStack(G_18,G_11,TMP_261,L_ALT__118);
TMP_263=lisp.callFunctionWithCallStack(G_18,G_84,L_ALT__118,TMP_262);
TMP_264=lisp.callFunctionWithCallStack(G_18,G_84,TMP_254,TMP_260,TMP_263);
}
}
return TMP_264;
});
lisp.CL_put(G_75,G_96,TMP_237);
TMP_265=(function(){
if(arguments.length < 0) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_273;
let TMP_272;
let L_KEYS__123;
let L_G69__122;
let TMP_270;
let TMP_268;
let TMP_267;
let TMP_266;
let L_G68__121;
let L_G34__120;
L_G34__120=lisp.jsArrayToList(arguments, 0);
{
L_G68__121=lisp.values1(L_G34__120);
{
TMP_266=lisp.callFunctionWithCallStack(G_99,L_G68__121);
TMP_267=lisp.callFunctionWithCallStack(G_101,0,TMP_266);
if(lisp.values1(TMP_267) !== lisp.S_nil){
TMP_268=lisp.values1(lisp.S_nil);
}else{
TMP_270=lisp.callFunctionWithCallStack(G_106,G_103.func(lisp.codeArrayToString([73, 110, 118, 97, 108, 105, 100, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 32, 102, 111, 114, 32, 100, 101, 115, 116, 114, 117, 99, 116, 117, 114, 105, 110, 103, 45, 98, 105, 110, 100, 58, 32, 126, 83, 32, 126, 83])),lisp.makeCons(G_79, lisp.makeCons(G_269, lisp.S_nil)),L_G68__121);
TMP_268=lisp.values1(lisp.values1(TMP_270));
}
L_G69__122=lisp.values1(TMP_268);
L_KEYS__123=lisp.values1(L_G68__121);
TMP_272=lisp.callFunctionWithCallStack(G_18,G_22,L_KEYS__123);
TMP_273=lisp.callFunctionWithCallStack(G_118,G_137,G_138,G_241,G_271,TMP_272,lisp.makeCons(G_141, lisp.makeCons(lisp.makeCons(G_84, lisp.makeCons(lisp.makeCons(G_49, lisp.makeCons(G_80, lisp.makeCons(lisp.makeCons(G_249, lisp.makeCons(lisp.makeCons(G_250, lisp.makeCons(G_241, lisp.S_nil)), lisp.makeCons(G_103.func(lisp.codeArrayToString([75, 69, 89, 87, 79, 82, 68])), lisp.S_nil))), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_11, lisp.makeCons(lisp.makeCons(G_241, lisp.makeCons(G_78, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_49, lisp.makeCons(G_80, lisp.makeCons(lisp.makeCons(G_249, lisp.makeCons(lisp.makeCons(G_250, lisp.makeCons(G_241, lisp.S_nil)), lisp.makeCons(G_103.func(lisp.codeArrayToString([75, 69, 89, 87, 79, 82, 68])), lisp.S_nil))), lisp.S_nil))), lisp.S_nil))), lisp.S_nil))), lisp.S_nil)));
}
}
return TMP_273;
});
lisp.CL_put(G_76,G_96,TMP_265);
}catch(TMP_1){G_274.func();
console.log(TMP_1.message);
}


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
let G_4;
let G_5;
let G_6;
let G_7;
let G_9;
let G_10;
let G_11;
let G_12;
let G_13;
let G_14;
let G_15;
let G_16;
let G_17;
let G_18;
let G_19;
let G_20;
let G_21;
let G_22;
let G_23;
let G_24;
let G_25;
let G_28;
let G_29;
let G_32;
let G_34;
let G_36;
let G_38;
let G_41;
let G_42;
let G_43;
let G_44;
let G_45;
let G_46;
let G_47;
let G_54;
let G_56;
let G_58;
let G_60;
let G_61;
let G_62;
let G_63;
let TMP_59;
let TMP_26;
let TMP_8;
let TMP_3;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('CONSOLE', 'UNREAL-LISP');
G_4 = lisp.intern('FIND-CLASS', 'COMMON-LISP');
G_5 = lisp.intern('DIRECT-SUPERCLASSES', 'KEYWORD');
G_6 = lisp.intern('JS-OBJECT', 'UNREAL-LISP');
G_7 = lisp.intern('DIRECT-SLOTS', 'KEYWORD');
G_9 = lisp.intern('LIST', 'COMMON-LISP');
G_10 = lisp.intern('ENSURE-CLASS-USING-CLASS', 'COMMON-LISP');
G_11 = lisp.intern('INITIALIZE-INSTANCE', 'COMMON-LISP');
G_12 = lisp.intern('LAMBDA-LIST', 'KEYWORD');
G_13 = lisp.intern('INSTANCE', 'UNREAL-LISP');
G_14 = lisp.intern('&REST', 'COMMON-LISP');
G_15 = lisp.intern('INITARGS', 'UNREAL-LISP');
G_16 = lisp.intern('&KEY', 'COMMON-LISP');
G_17 = lisp.intern('&ALLOW-OTHER-KEYS', 'COMMON-LISP');
G_18 = lisp.intern('QUALIFIERS', 'KEYWORD');
G_19 = lisp.intern('AFTER', 'KEYWORD');
G_20 = lisp.intern('SPECIALIZERS', 'KEYWORD');
G_21 = lisp.intern('BODY', 'KEYWORD');
G_22 = lisp.intern('BLOCK', 'COMMON-LISP');
G_23 = lisp.intern('DEF-FOREIGN-METHOD', 'UNREAL-LISP');
G_24 = lisp.intern('LOG', 'COMMON-LISP');
G_25 = lisp.intern('FUNCTION', 'KEYWORD');
G_28 = lisp.intern('*PACKAGE*', 'COMMON-LISP');
G_29 = lisp.intern('EXPORT', 'COMMON-LISP');
G_32 = lisp.intern('ARRAY', 'FFI');
G_34 = lisp.intern('CAR', 'COMMON-LISP');
G_36 = lisp.intern('CDR', 'COMMON-LISP');
G_38 = lisp.intern('FOREIGN-REF', 'UNREAL-LISP');
G_41 = lisp.intern('DEF-FOREIGN-METHOD-IMPL', 'UNREAL-LISP');
G_42 = lisp.intern('OBJ', 'UNREAL-LISP');
G_43 = lisp.intern('ARGS', 'UNREAL-LISP');
G_44 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_45 = lisp.intern('GETF', 'COMMON-LISP');
G_46 = lisp.intern('FOREIGN-METHODS', 'UNREAL-LISP');
G_47 = lisp.intern('QUOTE', 'COMMON-LISP');
G_54 = lisp.intern('APPLY', 'COMMON-LISP');
G_56 = lisp.intern('ENSURE-METHOD', 'COMMON-LISP');
G_58 = lisp.intern('FOREIGN-REF', 'KEYWORD');
G_60 = lisp.intern('MAKE-INSTANCE', 'COMMON-LISP');
G_61 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_62 = lisp.intern('T', 'COMMON-LISP');
G_63 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('UNREAL-LISP');TMP_3=lisp.callFunctionWithCallStack(G_4,G_2,lisp.S_nil);
TMP_8=lisp.callFunctionWithCallStack(G_9);
lisp.callFunctionWithCallStack(G_10,TMP_3,G_2,G_5,lisp.makeCons(G_6, lisp.S_nil),G_7,TMP_8);
TMP_26=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_57;
let TMP_27;
let L_G1__2;
let L_G0__1;
L_G0__1=arguments[0];
L_G1__2=arguments[1];
TMP_27=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_55;
let TMP_48;
let TMP_30;
let L_INITARGS__9;
let L_INSTANCE__8;
L_INSTANCE__8=arguments[0];
L_INITARGS__9=lisp.jsArrayToList(arguments, 1);
lisp.callFunctionWithCallStack(G_29,G_24,lisp.symbolValue(G_28));
TMP_30=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_ANSWER__17;
let TMP_40;
let TMP_39;
let TMP_37;
let TMP_35;
let L_DESTRUCTURING_VAR11__16;
let TMP_33;
let L_ARG__15;
let L_G6__14;
let L_ARG_ARRAY__12;
let TMP_31;
let L_ARGS__11;
L_ARGS__11=arguments[0];
{
TMP_31=lisp.callFunctionWithCallStack(G_32);
L_ARG_ARRAY__12=lisp.values1(TMP_31);
{
L_G6__14=lisp.values1(L_ARGS__11);
L_ARG__15=lisp.values1(lisp.S_nil);
let HOST_G7_STATE = 'G8';
HOST_G7: for(;;){
switch(HOST_G7_STATE){
case 'G8':
if(lisp.values1(L_G6__14) !== lisp.S_nil){
}else{
HOST_G7_STATE='G9';
continue HOST_G7;
}
{
TMP_33=lisp.callFunctionWithCallStack(G_34,L_G6__14);
L_DESTRUCTURING_VAR11__16=lisp.values1(TMP_33);
L_ARG__15=lisp.values1(L_DESTRUCTURING_VAR11__16);
}
lisp.values1(L_ARG_ARRAY__12).push(L_ARG__15);
TMP_35=lisp.callFunctionWithCallStack(G_36,L_G6__14);
L_G6__14=lisp.values1(TMP_35);
continue;
case 'G9':
}
break;
}
}
{
TMP_37=lisp.callFunctionWithCallStack(G_38,L_INSTANCE__8);
TMP_39=lisp.callFunctionWithCallStack(G_38,L_INSTANCE__8);
TMP_40=lisp.values1(TMP_39).log.apply(lisp.values1(TMP_37),L_ARG_ARRAY__12);
L_ANSWER__17=lisp.values1(TMP_40);
}
}
return lisp.values1(L_ANSWER__17);
});
lisp.callFunctionWithCallStack(G_41,L_INSTANCE__8,G_24,TMP_30);
TMP_48=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_53;
let TMP_49;
let L_G13__19;
let L_G12__18;
L_G12__18=arguments[0];
L_G13__19=arguments[1];
TMP_49=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_52;
let TMP_51;
let TMP_50;
let L_ARGS__26;
let L_OBJ__25;
L_OBJ__25=arguments[0];
L_ARGS__26=lisp.jsArrayToList(arguments, 1);
TMP_50=lisp.callFunctionWithCallStack(G_46,L_OBJ__25);
TMP_51=lisp.callFunctionWithCallStack(G_45,TMP_50,G_24);
TMP_52=lisp.CL_funcall(lisp.values1(TMP_51),L_ARGS__26);
return TMP_52;
});
TMP_53=lisp.callFunctionWithCallStack(G_54,TMP_49,L_G12__18);
return TMP_53;
});
TMP_55=lisp.callFunctionWithCallStack(G_56,G_24,G_12,lisp.makeCons(G_42, lisp.makeCons(G_14, lisp.makeCons(G_43, lisp.S_nil))),G_18,lisp.S_nil,G_20,lisp.makeCons(G_6, lisp.S_nil),G_21,lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(G_24, lisp.makeCons(lisp.makeCons(G_44, lisp.makeCons(lisp.makeCons(G_45, lisp.makeCons(lisp.makeCons(G_46, lisp.makeCons(G_42, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_47, lisp.makeCons(G_24, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(G_43, lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_25,TMP_48);
return TMP_55;
});
TMP_57=lisp.callFunctionWithCallStack(G_54,TMP_27,L_G0__1);
return TMP_57;
});
lisp.callFunctionWithCallStack(G_56,G_11,G_12,lisp.makeCons(G_13, lisp.makeCons(G_14, lisp.makeCons(G_15, lisp.makeCons(G_16, lisp.makeCons(G_17, lisp.S_nil))))),G_18,lisp.makeCons(G_19, lisp.S_nil),G_20,lisp.makeCons(G_2, lisp.S_nil),G_21,lisp.makeCons(lisp.makeCons(G_22, lisp.makeCons(G_11, lisp.makeCons(lisp.makeCons(G_23, lisp.makeCons(G_13, lisp.makeCons(G_24, lisp.makeCons(lisp.makeCons(G_24, lisp.S_nil), lisp.S_nil)))), lisp.S_nil))), lisp.S_nil),G_25,TMP_26);
TMP_59=lisp.callFunctionWithCallStack(G_60,G_2,G_58,console);
lisp.CL_set(G_2,TMP_59);
lisp.CL_put(G_2,G_61,G_62);
}catch(TMP_1){G_63.func();
console.log(TMP_1.message);
}


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_8;
let G_9;
let G_11;
let G_12;
let G_13;
let G_14;
let CL_UNREAL_LISP_RUN_POLYFILLS;
let CL_UNREAL_LISP_RUN_JS_FILE;
// toplevel defun
let F_RUN_JS_FILE_2;
F_RUN_JS_FILE_2=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_6;
let TMP_4;
let L_FILE_NAME__1;
L_FILE_NAME__1=arguments[0];
TMP_4=lisp.callFunctionWithCallStack(G_5,L_FILE_NAME__1);
TMP_6=lisp.CL_funcall(lisp.values1(lisp.values1(Context).RunFile),TMP_4);
return TMP_6;
});
CL_UNREAL_LISP_RUN_JS_FILE=lisp.values1(F_RUN_JS_FILE_2);
let F_RUN_POLYFILLS_7;
F_RUN_POLYFILLS_7=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_8, arguments.length);
}
let TMP_10;
G_3.func(G_9.func(lisp.codeArrayToString([46, 46, 47, 46, 46, 47, 46, 46, 47, 97, 108, 105, 97, 115, 101, 115, 46, 106, 115])));
G_3.func(G_9.func(lisp.codeArrayToString([46, 46, 47, 46, 46, 47, 46, 46, 47, 112, 111, 108, 121, 102, 105, 108, 108, 47, 117, 110, 114, 101, 97, 108, 101, 110, 103, 105, 110, 101, 46, 106, 115])));
TMP_10=G_3.func(G_9.func(lisp.codeArrayToString([46, 46, 47, 46, 46, 47, 46, 46, 47, 112, 111, 108, 121, 102, 105, 108, 108, 47, 116, 105, 109, 101, 114, 115, 46, 106, 115])));
return TMP_10;
});
CL_UNREAL_LISP_RUN_POLYFILLS=lisp.values1(F_RUN_POLYFILLS_7);
// initialize symbols
G_3 = lisp.intern('RUN-JS-FILE', 'UNREAL-LISP');
G_5 = lisp.intern('CL->JS', 'FFI');
G_8 = lisp.intern('RUN-POLYFILLS', 'UNREAL-LISP');
G_9 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_11 = lisp.intern('*G-WORLD*', 'UNREAL-LISP');
G_12 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_13 = lisp.intern('T', 'COMMON-LISP');
G_14 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('UNREAL-LISP');CL_UNREAL_LISP_RUN_JS_FILE.lisp_name = 'RUN-JS-FILE'
lisp.setSymbolFunction(G_3, CL_UNREAL_LISP_RUN_JS_FILE);
CL_UNREAL_LISP_RUN_POLYFILLS.lisp_name = 'RUN-POLYFILLS'
lisp.setSymbolFunction(G_8, CL_UNREAL_LISP_RUN_POLYFILLS);
lisp.CL_set(G_11,lisp.values1(GWorld));
lisp.CL_put(G_11,G_12,G_13);
}catch(TMP_1){G_14.func();
console.log(TMP_1.message);
}


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_7;
let G_11;
let G_13;
let CL_UNREAL_LISP_G_FUNCALL;
let CL_UNREAL_LISP_PRINT_METHODS;
let CL_UNREAL_LISP_CONSOLE_LOG;
// toplevel defun
let F_CONSOLE_LOG_2;
F_CONSOLE_LOG_2=(function(){
if(arguments.length < 0) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_4;
let L_LOGGED_OBJECTS__1;
L_LOGGED_OBJECTS__1=lisp.jsArrayToList(arguments, 0);
TMP_4=lisp.callFunctionWithCallStack(G_5,lisp.values1(console).log,L_LOGGED_OBJECTS__1);
return TMP_4;
});
CL_UNREAL_LISP_CONSOLE_LOG=lisp.values1(F_CONSOLE_LOG_2);
let F_PRINT_METHODS_6;
F_PRINT_METHODS_6=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(G_7, arguments.length);
}
let TMP_9;
let TMP_8;
let L_OBJ__3;
L_OBJ__3=arguments[0];
G_3.func(lisp.codeArrayToString([45, 45, 45, 45, 45]));
TMP_8=lisp.values1(Object.getOwnPropertyNames).call(L_OBJ__3,L_OBJ__3);
G_3.func(TMP_8);
TMP_9=G_3.func(lisp.codeArrayToString([45, 45, 45, 45, 45]));
return TMP_9;
});
CL_UNREAL_LISP_PRINT_METHODS=lisp.values1(F_PRINT_METHODS_6);
let F_G_FUNCALL_10;
F_G_FUNCALL_10=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(G_11, arguments.length);
}
let TMP_12;
let L_ARG__6;
let L_FUN__5;
L_FUN__5=arguments[0];
L_ARG__6=arguments[1];
TMP_12=lisp.values1(L_FUN__5).call(GWorld,L_ARG__6);
return TMP_12;
});
CL_UNREAL_LISP_G_FUNCALL=lisp.values1(F_G_FUNCALL_10);
// initialize symbols
G_3 = lisp.intern('CONSOLE-LOG', 'UNREAL-LISP');
G_5 = lisp.intern('APPLY', 'COMMON-LISP');
G_7 = lisp.intern('PRINT-METHODS', 'UNREAL-LISP');
G_11 = lisp.intern('G-FUNCALL', 'UNREAL-LISP');
G_13 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('UNREAL-LISP');CL_UNREAL_LISP_CONSOLE_LOG.lisp_name = 'CONSOLE-LOG'
lisp.setSymbolFunction(G_3, CL_UNREAL_LISP_CONSOLE_LOG);
CL_UNREAL_LISP_PRINT_METHODS.lisp_name = 'PRINT-METHODS'
lisp.setSymbolFunction(G_7, CL_UNREAL_LISP_PRINT_METHODS);
CL_UNREAL_LISP_G_FUNCALL.lisp_name = 'G-FUNCALL'
lisp.setSymbolFunction(G_11, CL_UNREAL_LISP_G_FUNCALL);
}catch(TMP_1){G_13.func();
console.log(TMP_1.message);
}


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('UNREAL-LISP');}catch(TMP_1){G_2.func();
console.log(TMP_1.message);
}


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_6;
let G_8;
let G_9;
let G_10;
let G_12;
let G_13;
let G_14;
let G_15;
let G_17;
let G_18;
let G_19;
let G_20;
let G_21;
let G_22;
let G_23;
let G_24;
let G_25;
let G_26;
let G_27;
let G_28;
let G_29;
let G_30;
let G_31;
let G_32;
let G_33;
let G_34;
let G_35;
let G_36;
let G_37;
let G_38;
let G_39;
let G_40;
let G_41;
let G_42;
let G_43;
let G_44;
let G_45;
let G_46;
let G_55;
let G_56;
let G_57;
let G_60;
let G_62;
let G_64;
let G_68;
let G_69;
let G_70;
let G_71;
let G_72;
let G_73;
let G_80;
let G_81;
let G_97;
let G_100;
let G_101;
let G_103;
let G_104;
let CL_UNREAL_LISP_GET_PC;
let TMP_102;
let TMP_99;
let TMP_98;
let TMP_47;
let TMP_16;
let TMP_11;
let TMP_7;
// toplevel defun
let F_GET_PC_2;
F_GET_PC_2=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_4;
TMP_4=lisp.callFunctionWithCallStack(G_5,GWorld.GetAllActorsOfClass,PlayerController);
return lisp.values1(lisp.values1(lisp.values1(TMP_4).OutActors)[lisp.values1(0)]);
});
CL_UNREAL_LISP_GET_PC=lisp.values1(F_GET_PC_2);
// initialize symbols
G_3 = lisp.intern('GET-PC', 'UNREAL-LISP');
G_5 = lisp.intern('G-FUNCALL', 'UNREAL-LISP');
G_6 = lisp.intern('*PLAYER*', 'UNREAL-LISP');
G_8 = lisp.intern('SPECIAL', 'COMMON-LISP');
G_9 = lisp.intern('T', 'COMMON-LISP');
G_10 = lisp.intern('PLAYER-CONTROLLER', 'UNREAL-LISP');
G_12 = lisp.intern('FIND-CLASS', 'COMMON-LISP');
G_13 = lisp.intern('DIRECT-SUPERCLASSES', 'KEYWORD');
G_14 = lisp.intern('JS-OBJECT', 'UNREAL-LISP');
G_15 = lisp.intern('DIRECT-SLOTS', 'KEYWORD');
G_17 = lisp.intern('LIST', 'COMMON-LISP');
G_18 = lisp.intern('ENSURE-CLASS-USING-CLASS', 'COMMON-LISP');
G_19 = lisp.intern('INITIALIZE-INSTANCE', 'COMMON-LISP');
G_20 = lisp.intern('LAMBDA-LIST', 'KEYWORD');
G_21 = lisp.intern('INSTANCE', 'UNREAL-LISP');
G_22 = lisp.intern('&REST', 'COMMON-LISP');
G_23 = lisp.intern('INITARGS', 'UNREAL-LISP');
G_24 = lisp.intern('&KEY', 'COMMON-LISP');
G_25 = lisp.intern('&ALLOW-OTHER-KEYS', 'COMMON-LISP');
G_26 = lisp.intern('QUALIFIERS', 'KEYWORD');
G_27 = lisp.intern('AFTER', 'KEYWORD');
G_28 = lisp.intern('SPECIALIZERS', 'KEYWORD');
G_29 = lisp.intern('BODY', 'KEYWORD');
G_30 = lisp.intern('BLOCK', 'COMMON-LISP');
G_31 = lisp.intern('IF', 'COMMON-LISP');
G_32 = lisp.intern('NOT', 'COMMON-LISP');
G_33 = lisp.intern('GETF', 'COMMON-LISP');
G_34 = lisp.intern('FOREIGN-REF', 'KEYWORD');
G_35 = lisp.intern('LET', 'COMMON-LISP');
G_36 = lisp.intern('NEW-CONTROLLER', 'UNREAL-LISP');
G_37 = lisp.intern('NEW', 'FFI');
G_38 = lisp.intern('REF', 'FFI');
G_39 = lisp.intern('RAW-STRING-TO-ARRAY', 'SYSTEM');
G_40 = lisp.intern('SETF', 'COMMON-LISP');
G_41 = lisp.intern('CONS', 'COMMON-LISP');
G_42 = lisp.intern('FOREIGN-REF', 'UNREAL-LISP');
G_43 = lisp.intern('DEF-FOREIGN-METHOD', 'UNREAL-LISP');
G_44 = lisp.intern('GET-PLAYER-CONTROLLER-ID', 'UNREAL-LISP');
G_45 = lisp.intern('SET-PLAYER-CONTROLLER-ID', 'UNREAL-LISP');
G_46 = lisp.intern('FUNCTION', 'KEYWORD');
G_55 = lisp.intern('FDEFINITION', 'COMMON-LISP');
G_56 = lisp.intern('*PACKAGE*', 'COMMON-LISP');
G_57 = lisp.intern('EXPORT', 'COMMON-LISP');
G_60 = lisp.intern('ARRAY', 'FFI');
G_62 = lisp.intern('CAR', 'COMMON-LISP');
G_64 = lisp.intern('CDR', 'COMMON-LISP');
G_68 = lisp.intern('DEF-FOREIGN-METHOD-IMPL', 'UNREAL-LISP');
G_69 = lisp.intern('OBJ', 'UNREAL-LISP');
G_70 = lisp.intern('ARGS', 'UNREAL-LISP');
G_71 = lisp.intern('FUNCALL', 'COMMON-LISP');
G_72 = lisp.intern('FOREIGN-METHODS', 'UNREAL-LISP');
G_73 = lisp.intern('QUOTE', 'COMMON-LISP');
G_80 = lisp.intern('APPLY', 'COMMON-LISP');
G_81 = lisp.intern('ENSURE-METHOD', 'COMMON-LISP');
G_97 = lisp.intern('PLAYER', 'UNREAL-LISP');
G_100 = lisp.intern('MAKE-INSTANCE', 'COMMON-LISP');
G_101 = lisp.intern('CONSOLE', 'UNREAL-LISP');
G_103 = lisp.intern('LOG', 'COMMON-LISP');
G_104 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('UNREAL-LISP');CL_UNREAL_LISP_GET_PC.lisp_name = 'GET-PC'
lisp.setSymbolFunction(G_3, CL_UNREAL_LISP_GET_PC);
TMP_7=G_3.func();
lisp.CL_set(G_6,TMP_7);
lisp.CL_put(G_6,G_8,G_9);
TMP_11=lisp.callFunctionWithCallStack(G_12,G_10,lisp.S_nil);
TMP_16=lisp.callFunctionWithCallStack(G_17);
lisp.callFunctionWithCallStack(G_18,TMP_11,G_10,G_13,lisp.makeCons(G_14, lisp.S_nil),G_15,TMP_16);
TMP_47=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_96;
let TMP_48;
let L_G1__3;
let L_G0__2;
L_G0__2=arguments[0];
L_G1__3=arguments[1];
TMP_48=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_95;
let TMP_89;
let TMP_82;
let TMP_74;
let TMP_58;
let TMP_54;
let L_G6__15;
let L_G7__14;
let L_G5__13;
let TMP_53;
let TMP_52;
let L_NEW_CONTROLLER__12;
let TMP_51;
let TMP_50;
let TMP_49;
let L_INITARGS__10;
let L_INSTANCE__9;
L_INSTANCE__9=arguments[0];
L_INITARGS__10=lisp.jsArrayToList(arguments, 1);
TMP_49=lisp.callFunctionWithCallStack(G_33,L_INITARGS__10,G_34);
TMP_50=lisp.callFunctionWithCallStack(G_32,TMP_49);
if(lisp.values1(TMP_50) !== lisp.S_nil){
{
TMP_51=new PlayerController;
L_NEW_CONTROLLER__12=lisp.values1(TMP_51);
{
TMP_52=lisp.CL_cons(L_NEW_CONTROLLER__12,L_INITARGS__10);
TMP_53=lisp.CL_cons(G_34,TMP_52);
L_G5__13=lisp.values1(TMP_53);
L_INITARGS__10=lisp.values1(L_G5__13);
}
{
L_G7__14=lisp.values1(L_INSTANCE__9);
L_G6__15=lisp.values1(L_NEW_CONTROLLER__12);
TMP_54=lisp.callFunctionWithCallStack(G_55,lisp.makeCons(G_40, lisp.makeCons(G_42, lisp.S_nil)));
lisp.CL_funcall(lisp.values1(TMP_54),L_G6__15,L_G7__14);
}
}
}else{
}
lisp.callFunctionWithCallStack(G_57,G_44,lisp.symbolValue(G_56));
TMP_58=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_ANSWER__22;
let TMP_67;
let TMP_66;
let TMP_65;
let TMP_63;
let L_DESTRUCTURING_VAR14__21;
let TMP_61;
let L_ARG__20;
let L_G9__19;
let L_ARG_ARRAY__17;
let TMP_59;
let L_ARGS__16;
L_ARGS__16=arguments[0];
{
TMP_59=lisp.callFunctionWithCallStack(G_60);
L_ARG_ARRAY__17=lisp.values1(TMP_59);
{
L_G9__19=lisp.values1(L_ARGS__16);
L_ARG__20=lisp.values1(lisp.S_nil);
let HOST_G10_STATE = 'G11';
HOST_G10: for(;;){
switch(HOST_G10_STATE){
case 'G11':
if(lisp.values1(L_G9__19) !== lisp.S_nil){
}else{
HOST_G10_STATE='G12';
continue HOST_G10;
}
{
TMP_61=lisp.callFunctionWithCallStack(G_62,L_G9__19);
L_DESTRUCTURING_VAR14__21=lisp.values1(TMP_61);
L_ARG__20=lisp.values1(L_DESTRUCTURING_VAR14__21);
}
lisp.values1(L_ARG_ARRAY__17).push(L_ARG__20);
TMP_63=lisp.callFunctionWithCallStack(G_64,L_G9__19);
L_G9__19=lisp.values1(TMP_63);
continue;
case 'G12':
}
break;
}
}
{
TMP_65=lisp.callFunctionWithCallStack(G_42,L_INSTANCE__9);
TMP_66=lisp.callFunctionWithCallStack(G_42,L_INSTANCE__9);
TMP_67=lisp.values1(TMP_66).GetPlayerControllerID.apply(lisp.values1(TMP_65),L_ARG_ARRAY__17);
L_ANSWER__22=lisp.values1(TMP_67);
}
}
return lisp.values1(L_ANSWER__22);
});
lisp.callFunctionWithCallStack(G_68,L_INSTANCE__9,G_44,TMP_58);
TMP_74=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_79;
let TMP_75;
let L_G16__24;
let L_G15__23;
L_G15__23=arguments[0];
L_G16__24=arguments[1];
TMP_75=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_78;
let TMP_77;
let TMP_76;
let L_ARGS__31;
let L_OBJ__30;
L_OBJ__30=arguments[0];
L_ARGS__31=lisp.jsArrayToList(arguments, 1);
TMP_76=lisp.callFunctionWithCallStack(G_72,L_OBJ__30);
TMP_77=lisp.callFunctionWithCallStack(G_33,TMP_76,G_44);
TMP_78=lisp.CL_funcall(lisp.values1(TMP_77),L_ARGS__31);
return TMP_78;
});
TMP_79=lisp.callFunctionWithCallStack(G_80,TMP_75,L_G15__23);
return TMP_79;
});
lisp.callFunctionWithCallStack(G_81,G_44,G_20,lisp.makeCons(G_69, lisp.makeCons(G_22, lisp.makeCons(G_70, lisp.S_nil))),G_26,lisp.S_nil,G_28,lisp.makeCons(G_14, lisp.S_nil),G_29,lisp.makeCons(lisp.makeCons(G_30, lisp.makeCons(G_44, lisp.makeCons(lisp.makeCons(G_71, lisp.makeCons(lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_72, lisp.makeCons(G_69, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_73, lisp.makeCons(G_44, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(G_70, lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_46,TMP_74);
lisp.callFunctionWithCallStack(G_57,G_45,lisp.symbolValue(G_56));
TMP_82=(function(){
if(arguments.length !== 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let L_ANSWER__39;
let TMP_88;
let TMP_87;
let TMP_86;
let TMP_85;
let L_DESTRUCTURING_VAR26__38;
let TMP_84;
let L_ARG__37;
let L_G21__36;
let L_ARG_ARRAY__34;
let TMP_83;
let L_ARGS__33;
L_ARGS__33=arguments[0];
{
TMP_83=lisp.callFunctionWithCallStack(G_60);
L_ARG_ARRAY__34=lisp.values1(TMP_83);
{
L_G21__36=lisp.values1(L_ARGS__33);
L_ARG__37=lisp.values1(lisp.S_nil);
let HOST_G22_STATE = 'G23';
HOST_G22: for(;;){
switch(HOST_G22_STATE){
case 'G23':
if(lisp.values1(L_G21__36) !== lisp.S_nil){
}else{
HOST_G22_STATE='G24';
continue HOST_G22;
}
{
TMP_84=lisp.callFunctionWithCallStack(G_62,L_G21__36);
L_DESTRUCTURING_VAR26__38=lisp.values1(TMP_84);
L_ARG__37=lisp.values1(L_DESTRUCTURING_VAR26__38);
}
lisp.values1(L_ARG_ARRAY__34).push(L_ARG__37);
TMP_85=lisp.callFunctionWithCallStack(G_64,L_G21__36);
L_G21__36=lisp.values1(TMP_85);
continue;
case 'G24':
}
break;
}
}
{
TMP_86=lisp.callFunctionWithCallStack(G_42,L_INSTANCE__9);
TMP_87=lisp.callFunctionWithCallStack(G_42,L_INSTANCE__9);
TMP_88=lisp.values1(TMP_87).SetPlayerControllerID.apply(lisp.values1(TMP_86),L_ARG_ARRAY__34);
L_ANSWER__39=lisp.values1(TMP_88);
}
}
return lisp.values1(L_ANSWER__39);
});
lisp.callFunctionWithCallStack(G_68,L_INSTANCE__9,G_45,TMP_82);
TMP_89=(function(){
if(arguments.length !== 2) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_94;
let TMP_90;
let L_G28__41;
let L_G27__40;
L_G27__40=arguments[0];
L_G28__41=arguments[1];
TMP_90=(function(){
if(arguments.length < 1) {
lisp.argumentsError(lisp.S_nil, arguments.length);
}
let TMP_93;
let TMP_92;
let TMP_91;
let L_ARGS__48;
let L_OBJ__47;
L_OBJ__47=arguments[0];
L_ARGS__48=lisp.jsArrayToList(arguments, 1);
TMP_91=lisp.callFunctionWithCallStack(G_72,L_OBJ__47);
TMP_92=lisp.callFunctionWithCallStack(G_33,TMP_91,G_45);
TMP_93=lisp.CL_funcall(lisp.values1(TMP_92),L_ARGS__48);
return TMP_93;
});
TMP_94=lisp.callFunctionWithCallStack(G_80,TMP_90,L_G27__40);
return TMP_94;
});
TMP_95=lisp.callFunctionWithCallStack(G_81,G_45,G_20,lisp.makeCons(G_69, lisp.makeCons(G_22, lisp.makeCons(G_70, lisp.S_nil))),G_26,lisp.S_nil,G_28,lisp.makeCons(G_14, lisp.S_nil),G_29,lisp.makeCons(lisp.makeCons(G_30, lisp.makeCons(G_45, lisp.makeCons(lisp.makeCons(G_71, lisp.makeCons(lisp.makeCons(G_33, lisp.makeCons(lisp.makeCons(G_72, lisp.makeCons(G_69, lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_73, lisp.makeCons(G_45, lisp.S_nil)), lisp.S_nil))), lisp.makeCons(G_70, lisp.S_nil))), lisp.S_nil))), lisp.S_nil),G_46,TMP_89);
return TMP_95;
});
TMP_96=lisp.callFunctionWithCallStack(G_80,TMP_48,L_G0__2);
return TMP_96;
});
lisp.callFunctionWithCallStack(G_81,G_19,G_20,lisp.makeCons(G_21, lisp.makeCons(G_22, lisp.makeCons(G_23, lisp.makeCons(G_24, lisp.makeCons(G_25, lisp.S_nil))))),G_26,lisp.makeCons(G_27, lisp.S_nil),G_28,lisp.makeCons(G_10, lisp.S_nil),G_29,lisp.makeCons(lisp.makeCons(G_30, lisp.makeCons(G_19, lisp.makeCons(lisp.makeCons(G_31, lisp.makeCons(lisp.makeCons(G_32, lisp.makeCons(lisp.makeCons(G_33, lisp.makeCons(G_23, lisp.makeCons(G_34, lisp.S_nil))), lisp.S_nil)), lisp.makeCons(lisp.makeCons(G_35, lisp.makeCons(lisp.makeCons(lisp.makeCons(G_36, lisp.makeCons(lisp.makeCons(G_37, lisp.makeCons(lisp.makeCons(G_38, lisp.makeCons(G_39.func(lisp.codeArrayToString([80, 108, 97, 121, 101, 114, 67, 111, 110, 116, 114, 111, 108, 108, 101, 114])), lisp.S_nil)), lisp.S_nil)), lisp.S_nil)), lisp.S_nil), lisp.makeCons(lisp.makeCons(G_40, lisp.makeCons(G_23, lisp.makeCons(lisp.makeCons(G_41, lisp.makeCons(G_34, lisp.makeCons(lisp.makeCons(G_41, lisp.makeCons(G_36, lisp.makeCons(G_23, lisp.S_nil))), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_42, lisp.makeCons(G_21, lisp.S_nil)), lisp.makeCons(G_36, lisp.S_nil))))), lisp.S_nil))), lisp.S_nil))), lisp.makeCons(lisp.makeCons(G_43, lisp.makeCons(G_21, lisp.makeCons(G_44, lisp.makeCons(lisp.makeCons(G_39.func(lisp.codeArrayToString([71, 101, 116, 80, 108, 97, 121, 101, 114, 67, 111, 110, 116, 114, 111, 108, 108, 101, 114, 73, 68])), lisp.S_nil), lisp.S_nil)))), lisp.makeCons(lisp.makeCons(G_43, lisp.makeCons(G_21, lisp.makeCons(G_45, lisp.makeCons(lisp.makeCons(G_39.func(lisp.codeArrayToString([83, 101, 116, 80, 108, 97, 121, 101, 114, 67, 111, 110, 116, 114, 111, 108, 108, 101, 114, 73, 68])), lisp.S_nil), lisp.S_nil)))), lisp.S_nil))))), lisp.S_nil),G_46,TMP_47);
TMP_98=G_3.func();
TMP_99=lisp.callFunctionWithCallStack(G_100,G_10,G_34,TMP_98);
lisp.CL_set(G_97,TMP_99);
lisp.CL_put(G_97,G_8,G_9);
TMP_102=lisp.callFunctionWithCallStack(G_44,lisp.symbolValue(G_97));
lisp.callFunctionWithCallStack(G_103,lisp.symbolValue(G_101),TMP_102);
}catch(TMP_1){G_104.func();
console.log(TMP_1.message);
}


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_2;
// toplevel defun
// initialize symbols
G_2 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('UNREAL-LISP');}catch(TMP_1){G_2.func();
console.log(TMP_1.message);
}


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var lisp = __webpack_require__(1);
// initialize-vars
let G_3;
let G_5;
let G_6;
let G_8;
let G_11;
let G_13;
let CL_UNREAL_LISP_MAIN;
let TMP_12;
let TMP_10;
let TMP_9;
let TMP_7;
// toplevel defun
let F_MAIN_2;
F_MAIN_2=(function(){
if(arguments.length !== 0) {
lisp.argumentsError(G_3, arguments.length);
}
let TMP_4;
TMP_4=lisp.callFunctionWithCallStack(G_5,lisp.codeArrayToString([101, 110, 100, 45, 111, 102, 45, 109, 97, 105, 110]));
return TMP_4;
});
CL_UNREAL_LISP_MAIN=lisp.values1(F_MAIN_2);
// initialize symbols
G_3 = lisp.intern('MAIN', 'UNREAL-LISP');
G_5 = lisp.intern('CONSOLE-LOG', 'UNREAL-LISP');
G_6 = lisp.intern('PRINT-METHODS', 'UNREAL-LISP');
G_8 = lisp.intern('GET-PC', 'UNREAL-LISP');
G_11 = lisp.intern('G-FUNCALL', 'UNREAL-LISP');
G_13 = lisp.intern('FINISH-OUTPUT', 'COMMON-LISP');
// main
try {
lisp.changeCurrentPackage('CL-USER');lisp.changeCurrentPackage('UNREAL-LISP');CL_UNREAL_LISP_MAIN.lisp_name = 'MAIN'
lisp.setSymbolFunction(G_3, CL_UNREAL_LISP_MAIN);
lisp.callFunctionWithCallStack(G_6,PlayerController);
TMP_7=lisp.callFunctionWithCallStack(G_8);
TMP_9=lisp.values1(TMP_7).GetPlayerControllerID();
lisp.callFunctionWithCallStack(G_5,TMP_9);
TMP_10=lisp.callFunctionWithCallStack(G_11,GWorld.GetAllActorsOfClass,PlayerController);
lisp.callFunctionWithCallStack(G_5,TMP_10);
TMP_12=lisp.callFunctionWithCallStack(G_8);
lisp.callFunctionWithCallStack(G_5,TMP_12);
lisp.callFunctionWithCallStack(G_5,PlayerController);
lisp.callFunctionWithCallStack(G_5,lisp.values1(GWorld));
global.lisp=lisp.values1(lisp);
}catch(TMP_1){G_13.func();
console.log(TMP_1.message);
}


/***/ })
/******/ ]);